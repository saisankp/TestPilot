{"test_class": {"identifier": "RedisCommandResultTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  Connection connection;", "modifier": "@Mock", "type": "Connection", "declarator": "connection", "var_name": "connection"}, {"original_string": "@Mock\n  InputStream inputStream;", "modifier": "@Mock", "type": "InputStream", "declarator": "inputStream", "var_name": "inputStream"}, {"original_string": "RedisStreamReader streamReader;", "modifier": "", "type": "RedisStreamReader", "declarator": "streamReader", "var_name": "streamReader"}, {"original_string": "RedisCommandResult commandResult;", "modifier": "", "type": "RedisCommandResult", "declarator": "commandResult", "var_name": "commandResult"}], "file": "imcache-redis/src/test/java/com/cetsoft/imcache/redis/client/RedisCommandResultTest.java"}, "test_case": {"identifier": "getBytes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getBytes() throws ConnectionException, IOException {\n    int length = 3;\n    byte[] bytes = {1, 2, 3};\n    doReturn(RedisBytes.DOLLAR_BYTE).when(streamReader).readByte();\n    doReturn(length).when(streamReader).readInt();\n    doReturn(bytes).when(streamReader).read(length);\n    byte[] actualBytes = commandResult.getBytes();\n    assertArrayEquals(bytes, actualBytes);\n  }", "signature": "void getBytes()", "full_signature": "@Test public void getBytes()", "class_method_signature": "RedisCommandResultTest.getBytes()", "testcase": true, "constructor": false, "invocations": ["readByte", "when", "doReturn", "readInt", "when", "doReturn", "read", "when", "doReturn", "getBytes", "assertArrayEquals"]}, "focal_class": {"identifier": "RedisCommandResult", "superclass": "", "interfaces": "implements CommandResult", "fields": [{"original_string": "private final Connection connection;", "modifier": "private final", "type": "Connection", "declarator": "connection", "var_name": "connection"}], "methods": [{"identifier": "RedisCommandResult", "parameters": "(final Connection connection)", "modifiers": "public", "return": "", "signature": " RedisCommandResult(final Connection connection)", "full_signature": "public  RedisCommandResult(final Connection connection)", "class_method_signature": "RedisCommandResult.RedisCommandResult(final Connection connection)", "testcase": false, "constructor": true}, {"identifier": "getBytes", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] getBytes()", "full_signature": "@Override public byte[] getBytes()", "class_method_signature": "RedisCommandResult.getBytes()", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getStatus()", "full_signature": "@Override public String getStatus()", "class_method_signature": "RedisCommandResult.getStatus()", "testcase": false, "constructor": false}, {"identifier": "getInt", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getInt()", "full_signature": "@Override public int getInt()", "class_method_signature": "RedisCommandResult.getInt()", "testcase": false, "constructor": false}, {"identifier": "checkMessageType", "parameters": "(final RedisStreamReader streamReader, final byte expectedByte)", "modifiers": "protected", "return": "void", "signature": "void checkMessageType(final RedisStreamReader streamReader, final byte expectedByte)", "full_signature": "protected void checkMessageType(final RedisStreamReader streamReader, final byte expectedByte)", "class_method_signature": "RedisCommandResult.checkMessageType(final RedisStreamReader streamReader, final byte expectedByte)", "testcase": false, "constructor": false}, {"identifier": "getStreamReader", "parameters": "()", "modifiers": "protected", "return": "RedisStreamReader", "signature": "RedisStreamReader getStreamReader()", "full_signature": "protected RedisStreamReader getStreamReader()", "class_method_signature": "RedisCommandResult.getStreamReader()", "testcase": false, "constructor": false}], "file": "imcache-redis/src/main/java/com/cetsoft/imcache/redis/client/RedisCommandResult.java"}, "focal_method": {"identifier": "getBytes", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n  public byte[] getBytes() throws ConnectionException, IOException {\n    final RedisStreamReader streamReader = getStreamReader();\n    checkMessageType(streamReader, RedisBytes.DOLLAR_BYTE);\n    final int length = streamReader.readInt();\n    return streamReader.read(length);\n  }", "signature": "byte[] getBytes()", "full_signature": "@Override public byte[] getBytes()", "class_method_signature": "RedisCommandResult.getBytes()", "testcase": false, "constructor": false, "invocations": ["getStreamReader", "checkMessageType", "readInt", "read"]}, "repository": {"repo_id": 12849994, "url": "https://github.com/Cetsoft/imcache", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 121, "size": 1599, "license": "licensed"}}