{"test_class": {"identifier": "ForwardingTemplateSourceTest", "superclass": "", "interfaces": "", "fields": [], "file": "handlebars/src/test/java/com/github/jknack/handlebars/io/ForwardingTemplateSourceTest.java"}, "test_case": {"identifier": "lastModified", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void lastModified() throws IOException {\n    long lastModified = 716L;\n\n    TemplateSource source = createMock(TemplateSource.class);\n    expect(source.lastModified()).andReturn(lastModified);\n\n    replay(source);\n\n    assertEquals(lastModified, new ForwardingTemplateSource(source).lastModified());\n\n    verify(source);\n  }", "signature": "void lastModified()", "full_signature": "@Test public void lastModified()", "class_method_signature": "ForwardingTemplateSourceTest.lastModified()", "testcase": true, "constructor": false, "invocations": ["createMock", "andReturn", "expect", "lastModified", "replay", "assertEquals", "lastModified", "verify"]}, "focal_class": {"identifier": "ForwardingTemplateSource", "superclass": "extends AbstractTemplateSource", "interfaces": "", "fields": [{"original_string": "private final TemplateSource source;", "modifier": "private final", "type": "TemplateSource", "declarator": "source", "var_name": "source"}], "methods": [{"identifier": "ForwardingTemplateSource", "parameters": "(final TemplateSource source)", "modifiers": "public", "return": "", "signature": " ForwardingTemplateSource(final TemplateSource source)", "full_signature": "public  ForwardingTemplateSource(final TemplateSource source)", "class_method_signature": "ForwardingTemplateSource.ForwardingTemplateSource(final TemplateSource source)", "testcase": false, "constructor": true}, {"identifier": "content", "parameters": "(final Charset charset)", "modifiers": "@Override public", "return": "String", "signature": "String content(final Charset charset)", "full_signature": "@Override public String content(final Charset charset)", "class_method_signature": "ForwardingTemplateSource.content(final Charset charset)", "testcase": false, "constructor": false}, {"identifier": "filename", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String filename()", "full_signature": "@Override public String filename()", "class_method_signature": "ForwardingTemplateSource.filename()", "testcase": false, "constructor": false}, {"identifier": "lastModified", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long lastModified()", "full_signature": "@Override public long lastModified()", "class_method_signature": "ForwardingTemplateSource.lastModified()", "testcase": false, "constructor": false}], "file": "handlebars/src/main/java/com/github/jknack/handlebars/io/ForwardingTemplateSource.java"}, "focal_method": {"identifier": "lastModified", "parameters": "()", "modifiers": "@Override public", "return": "long", "body": "@Override\n  public long lastModified() {\n    return source.lastModified();\n  }", "signature": "long lastModified()", "full_signature": "@Override public long lastModified()", "class_method_signature": "ForwardingTemplateSource.lastModified()", "testcase": false, "constructor": false, "invocations": ["lastModified"]}, "repository": {"repo_id": 4459604, "url": "https://github.com/jknack/handlebars.java", "stars": 1107, "created": "5/27/2012 3:22:22 AM +00:00", "updates": "2020-01-24T06:58:31+00:00", "fork": "False", "license": "licensed"}}