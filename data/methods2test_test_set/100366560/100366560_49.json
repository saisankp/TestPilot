{"test_class": {"identifier": "FixtureMapTraversalTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "FixtureMap sampleFixture;", "modifier": "", "type": "FixtureMap", "declarator": "sampleFixture", "var_name": "sampleFixture"}], "file": "beanmother-core/src/test/java/io/beanmother/core/common/FixtureMapTraversalTest.java"}, "test_case": {"identifier": "testSimpleTraversal", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSimpleTraversal() {\n        final List<String> allKeys = new ArrayList<>();\n        allKeys.add(\"edge1\");\n        allKeys.add(\"edge2\");\n        allKeys.add(\"edge5\");\n        allKeys.add(\"edge6\");\n        allKeys.add(\"list\");\n        Map<String, Object> map = new HashMap<>();\n        map.put(\"list\", allKeys);\n\n        FixtureMap fixture = FixtureTemplateWrapper.wrap(map, null, null);\n\n        FixtureMapTraversal.traverse(fixture, new FixtureMapTraversal.Processor() {\n            @Override\n            public void visit(FixtureValue edge) {\n                allKeys.remove(edge.getValue());\n            }\n        });\n\n        assertTrue(allKeys.isEmpty());\n    }", "signature": "void testSimpleTraversal()", "full_signature": "@Test public void testSimpleTraversal()", "class_method_signature": "FixtureMapTraversalTest.testSimpleTraversal()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "add", "put", "wrap", "traverse", "remove", "getValue", "assertTrue", "isEmpty"]}, "focal_class": {"identifier": "FixtureMapTraversal", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "traverse", "parameters": "(FixtureMap fixtureMap, final Processor processor)", "modifiers": "public static", "return": "void", "signature": "void traverse(FixtureMap fixtureMap, final Processor processor)", "full_signature": "public static void traverse(FixtureMap fixtureMap, final Processor processor)", "class_method_signature": "FixtureMapTraversal.traverse(FixtureMap fixtureMap, final Processor processor)", "testcase": false, "constructor": false}, {"identifier": "traverse", "parameters": "(FixtureList fixtureList, final Processor processor)", "modifiers": "private static", "return": "void", "signature": "void traverse(FixtureList fixtureList, final Processor processor)", "full_signature": "private static void traverse(FixtureList fixtureList, final Processor processor)", "class_method_signature": "FixtureMapTraversal.traverse(FixtureList fixtureList, final Processor processor)", "testcase": false, "constructor": false}, {"identifier": "handleSubType", "parameters": "(FixtureTemplate fixtureTemplate, final Processor processor)", "modifiers": "private static", "return": "void", "signature": "void handleSubType(FixtureTemplate fixtureTemplate, final Processor processor)", "full_signature": "private static void handleSubType(FixtureTemplate fixtureTemplate, final Processor processor)", "class_method_signature": "FixtureMapTraversal.handleSubType(FixtureTemplate fixtureTemplate, final Processor processor)", "testcase": false, "constructor": false}], "file": "beanmother-core/src/main/java/io/beanmother/core/common/FixtureMapTraversal.java"}, "focal_method": {"identifier": "traverse", "parameters": "(FixtureMap fixtureMap, final Processor processor)", "modifiers": "public static", "return": "void", "body": "public static void traverse(FixtureMap fixtureMap, final Processor processor) {\n        for (Map.Entry<String, FixtureTemplate> entry : fixtureMap.entrySet()) {\n            handleSubType(entry.getValue(), processor);\n        }\n    }", "signature": "void traverse(FixtureMap fixtureMap, final Processor processor)", "full_signature": "public static void traverse(FixtureMap fixtureMap, final Processor processor)", "class_method_signature": "FixtureMapTraversal.traverse(FixtureMap fixtureMap, final Processor processor)", "testcase": false, "constructor": false, "invocations": ["entrySet", "handleSubType", "getValue"]}, "repository": {"repo_id": 100366560, "url": "https://github.com/keepcosmos/beanmother", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 95, "size": 688, "license": "licensed"}}