{"test_class": {"identifier": "WordReducerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NOT_TARGET_WORD = \"foobar\";", "modifier": "private static final", "type": "String", "declarator": "NOT_TARGET_WORD = \"foobar\"", "var_name": "NOT_TARGET_WORD"}, {"original_string": "private Reducer.Context contextMock;", "modifier": "private", "type": "Reducer.Context", "declarator": "contextMock", "var_name": "contextMock"}, {"original_string": "private WordReducer reducer;", "modifier": "private", "type": "WordReducer", "declarator": "reducer", "var_name": "reducer"}], "file": "mapreduce/src/test/java/net/petrikainulainen/spring/data/apachehadoop/WordReducerTest.java"}, "test_case": {"identifier": "reduceWhenTargetWordIsFound", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void reduceWhenTargetWordIsFound() throws IOException, InterruptedException {\n        Text key = new Text(WordReducer.TARGET_WORD);\n        Iterable<IntWritable> values = createValues(1, 1, 1);\n        reducer.reduce(key, values, contextMock);\n\n        ArgumentCaptor<IntWritable> countArgument = ArgumentCaptor.forClass(IntWritable.class);\n\n        verify(contextMock, times(1)).write(eq(key), countArgument.capture());\n        verifyNoMoreInteractions(contextMock);\n\n        IntWritable count = countArgument.getValue();\n        assertEquals(3, count.get());\n    }", "signature": "void reduceWhenTargetWordIsFound()", "full_signature": "@Test public void reduceWhenTargetWordIsFound()", "class_method_signature": "WordReducerTest.reduceWhenTargetWordIsFound()", "testcase": true, "constructor": false, "invocations": ["createValues", "reduce", "forClass", "write", "verify", "times", "eq", "capture", "verifyNoMoreInteractions", "getValue", "assertEquals", "get"]}, "focal_class": {"identifier": "WordReducer", "superclass": "extends Reducer<Text, IntWritable, Text, IntWritable>", "interfaces": "", "fields": [{"original_string": "protected static final String TARGET_WORD = \"Watson\";", "modifier": "protected static final", "type": "String", "declarator": "TARGET_WORD = \"Watson\"", "var_name": "TARGET_WORD"}], "methods": [{"identifier": "reduce", "parameters": "(Text key, Iterable<IntWritable> values, Context context)", "modifiers": "@Override protected", "return": "void", "signature": "void reduce(Text key, Iterable<IntWritable> values, Context context)", "full_signature": "@Override protected void reduce(Text key, Iterable<IntWritable> values, Context context)", "class_method_signature": "WordReducer.reduce(Text key, Iterable<IntWritable> values, Context context)", "testcase": false, "constructor": false}, {"identifier": "containsTargetWord", "parameters": "(Text key)", "modifiers": "private", "return": "boolean", "signature": "boolean containsTargetWord(Text key)", "full_signature": "private boolean containsTargetWord(Text key)", "class_method_signature": "WordReducer.containsTargetWord(Text key)", "testcase": false, "constructor": false}], "file": "mapreduce/src/main/java/net/petrikainulainen/spring/data/apachehadoop/WordReducer.java"}, "focal_method": {"identifier": "reduce", "parameters": "(Text key, Iterable<IntWritable> values, Context context)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void reduce(Text key, Iterable<IntWritable> values, Context context) throws IOException, InterruptedException {\n        if (containsTargetWord(key)) {\n            int wordCount = 0;\n            for (IntWritable value: values) {\n                wordCount += value.get();\n            }\n            context.write(key, new IntWritable(wordCount));\n        }\n    }", "signature": "void reduce(Text key, Iterable<IntWritable> values, Context context)", "full_signature": "@Override protected void reduce(Text key, Iterable<IntWritable> values, Context context)", "class_method_signature": "WordReducer.reduce(Text key, Iterable<IntWritable> values, Context context)", "testcase": false, "constructor": false, "invocations": ["containsTargetWord", "get", "write"]}, "repository": {"repo_id": 8108578, "url": "https://github.com/pkainulainen/spring-data-apache-hadoop-examples", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 13, "size": 151, "license": "licensed"}}