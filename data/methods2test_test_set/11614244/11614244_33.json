{"test_class": {"identifier": "MseQaTest", "superclass": "extends AbstractOperationTest", "interfaces": "", "fields": [], "file": "photohawk-image-evaluator/src/test/java/at/ac/tuwien/photohawk/evaluation/qa/MseQaTest.java"}, "test_case": {"identifier": "evaluateTest_solid0000FF_solid0099ff", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void evaluateTest_solid0000FF_solid0099ff() {\n        BufferedImage left = BufferedImageHelper.createSolidImage(new Color(0, 0, 255));\n        BufferedImage right = BufferedImageHelper.createSolidImage(new Color(0, 153, 255));\n\n        MseQa mseQa = new MseQa();\n        TransientOperation<Float, StaticColor> op = mseQa.evaluate(left, right);\n        float[] expected = {0.0f, 0.36f, 0.0f};\n        checkOperationEqual(op, 0.12f, expected);\n    }", "signature": "void evaluateTest_solid0000FF_solid0099ff()", "full_signature": "@Test public void evaluateTest_solid0000FF_solid0099ff()", "class_method_signature": "MseQaTest.evaluateTest_solid0000FF_solid0099ff()", "testcase": true, "constructor": false, "invocations": ["createSolidImage", "createSolidImage", "evaluate", "checkOperationEqual"]}, "focal_class": {"identifier": "MseQa", "superclass": "", "interfaces": "implements Qa<Float, StaticColor>", "fields": [], "methods": [{"identifier": "evaluate", "parameters": "(final BufferedImage left, final BufferedImage right)", "modifiers": "@Override public", "return": "TransientOperation<Float, StaticColor>", "signature": "TransientOperation<Float, StaticColor> evaluate(final BufferedImage left, final BufferedImage right)", "full_signature": "@Override public TransientOperation<Float, StaticColor> evaluate(final BufferedImage left, final BufferedImage right)", "class_method_signature": "MseQa.evaluate(final BufferedImage left, final BufferedImage right)", "testcase": false, "constructor": false}], "file": "photohawk-image-evaluator/src/main/java/at/ac/tuwien/photohawk/evaluation/qa/MseQa.java"}, "focal_method": {"identifier": "evaluate", "parameters": "(final BufferedImage left, final BufferedImage right)", "modifiers": "@Override public", "return": "TransientOperation<Float, StaticColor>", "body": "@Override\n    public TransientOperation<Float, StaticColor> evaluate(final BufferedImage left, final BufferedImage right) {\n        // Check size\n        CheckEqualSizePreprocessor equalSize = new CheckEqualSizePreprocessor(left, right);\n        equalSize.process();\n        equalSize = null;\n\n        // Run metric\n        MSEMetric metric = new MSEMetric(new SRGBColorConverter(new ConvenientBufferedImageWrapper(left)),\n                                         new SRGBColorConverter(new ConvenientBufferedImageWrapper(right)),\n                                         new Point(0, 0), new Point(left.getWidth(), left.getHeight()));\n\n        // Evaluate\n        return metric.execute();\n    }", "signature": "TransientOperation<Float, StaticColor> evaluate(final BufferedImage left, final BufferedImage right)", "full_signature": "@Override public TransientOperation<Float, StaticColor> evaluate(final BufferedImage left, final BufferedImage right)", "class_method_signature": "MseQa.evaluate(final BufferedImage left, final BufferedImage right)", "testcase": false, "constructor": false, "invocations": ["process", "getWidth", "getHeight", "execute"]}, "repository": {"repo_id": 11614244, "url": "https://github.com/datascience/photohawk", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 6, "size": 4209, "license": "licensed"}}