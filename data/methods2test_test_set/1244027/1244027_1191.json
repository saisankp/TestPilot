{"test_class": {"identifier": "JcrQueryManagerTest", "superclass": "extends MultiUseAbstractTest", "interfaces": "", "fields": [{"original_string": "private static final String[] INDEXED_SYSTEM_NODES_PATHS = new String[] {\"/jcr:system/jcr:nodeTypes\",\n        \"/jcr:system/mode:namespaces\"};", "modifier": "private static final", "type": "String[]", "declarator": "INDEXED_SYSTEM_NODES_PATHS = new String[] {\"/jcr:system/jcr:nodeTypes\",\n        \"/jcr:system/mode:namespaces\"}", "var_name": "INDEXED_SYSTEM_NODES_PATHS"}, {"original_string": "protected static final int TOTAL_NON_SYSTEM_NODE_COUNT = 25;", "modifier": "protected static final", "type": "int", "declarator": "TOTAL_NON_SYSTEM_NODE_COUNT = 25", "var_name": "TOTAL_NON_SYSTEM_NODE_COUNT"}, {"original_string": "protected static int totalSystemNodeCount;", "modifier": "protected static", "type": "int", "declarator": "totalSystemNodeCount", "var_name": "totalSystemNodeCount"}, {"original_string": "protected static int totalNodeCount;", "modifier": "protected static", "type": "int", "declarator": "totalNodeCount", "var_name": "totalNodeCount"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/JcrQueryManagerTest.java"}, "test_case": {"identifier": "shouldRetrieveSimpleReferrers", "parameters": "()", "modifiers": "@Test @FixFor( \"MODE-1969\" ) public", "return": "void", "body": "@Test\n    @FixFor( \"MODE-1969\" )\n    public void shouldRetrieveSimpleReferrers() throws Exception {\n        Node nodeA = session.getRootNode().addNode(\"A\");\n        nodeA.addMixin(\"mix:referenceable\");\n        Node nodeB = session.getRootNode().addNode(\"B\");\n        nodeB.addMixin(\"mix:referenceable\");\n\n        Node referrerA = session.getRootNode().addNode(\"referrerA\");\n        referrerA.setProperty(\"nodeASRef\", session.getValueFactory().createSimpleReference(nodeA));\n        Node referrerB = session.getRootNode().addNode(\"referrerB\");\n        referrerB.setProperty(\"nodeBSRef\", session.getValueFactory().createSimpleReference(nodeB));\n        List<String> referrerIds = Arrays.asList(referrerA.getIdentifier(), referrerB.getIdentifier());\n        Collections.sort(referrerIds);\n\n        session.save();\n        try {\n            String queryString = \"SELECT * from [nt:unstructured] where REFERENCE() IN \" + idList(nodeA, nodeB);\n            QueryManager queryManager = session.getWorkspace().getQueryManager();\n            Query query = queryManager.createQuery(queryString, Query.JCR_SQL2);\n            QueryResult result = query.execute();\n\n            final List<String> resultIds = new ArrayList<String>();\n            validateQuery().rowCount(2).onEachRow(new Predicate() {\n                @Override\n                public void validate( int rowNumber,\n                                      Row row ) throws RepositoryException {\n                    resultIds.add(row.getNode().getIdentifier());\n                }\n            }).validate(query, result);\n\n            Collections.sort(resultIds);\n            assertEquals(referrerIds, resultIds);\n\n        } finally {\n            nodeA.remove();\n            nodeB.remove();\n            referrerA.remove();\n            referrerB.remove();\n            session.save();\n        }\n    }", "signature": "void shouldRetrieveSimpleReferrers()", "full_signature": "@Test @FixFor( \"MODE-1969\" ) public void shouldRetrieveSimpleReferrers()", "class_method_signature": "JcrQueryManagerTest.shouldRetrieveSimpleReferrers()", "testcase": true, "constructor": false, "invocations": ["addNode", "getRootNode", "addMixin", "addNode", "getRootNode", "addMixin", "addNode", "getRootNode", "setProperty", "createSimpleReference", "getValueFactory", "addNode", "getRootNode", "setProperty", "createSimpleReference", "getValueFactory", "asList", "getIdentifier", "getIdentifier", "sort", "save", "idList", "getQueryManager", "getWorkspace", "createQuery", "execute", "validate", "onEachRow", "rowCount", "validateQuery", "add", "getIdentifier", "getNode", "sort", "assertEquals", "remove", "remove", "remove", "remove", "save"]}, "focal_class": {"identifier": "JcrQueryManager", "superclass": "", "interfaces": "implements QueryManager", "fields": [{"original_string": "protected static final Logger LOGGER = Logger.getLogger(JcrQueryManager.class);", "modifier": "protected static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(JcrQueryManager.class)", "var_name": "LOGGER"}, {"original_string": "private final JcrSession session;", "modifier": "private final", "type": "JcrSession", "declarator": "session", "var_name": "session"}, {"original_string": "private final JcrQueryContext context;", "modifier": "private final", "type": "JcrQueryContext", "declarator": "context", "var_name": "context"}, {"original_string": "private final JcrTypeSystem typeSystem;", "modifier": "private final", "type": "JcrTypeSystem", "declarator": "typeSystem", "var_name": "typeSystem"}, {"original_string": "private final QueryObjectModelFactory factory;", "modifier": "private final", "type": "QueryObjectModelFactory", "declarator": "factory", "var_name": "factory"}], "methods": [{"identifier": "JcrQueryManager", "parameters": "( JcrSession session )", "modifiers": "", "return": "", "signature": " JcrQueryManager( JcrSession session )", "full_signature": "  JcrQueryManager( JcrSession session )", "class_method_signature": "JcrQueryManager.JcrQueryManager( JcrSession session )", "testcase": false, "constructor": true}, {"identifier": "getQOMFactory", "parameters": "()", "modifiers": "@Override public", "return": "org.modeshape.jcr.api.query.qom.QueryObjectModelFactory", "signature": "org.modeshape.jcr.api.query.qom.QueryObjectModelFactory getQOMFactory()", "full_signature": "@Override public org.modeshape.jcr.api.query.qom.QueryObjectModelFactory getQOMFactory()", "class_method_signature": "JcrQueryManager.getQOMFactory()", "testcase": false, "constructor": false}, {"identifier": "createQuery", "parameters": "( String statement,\n                                                          String language )", "modifiers": "@Override public", "return": "org.modeshape.jcr.api.query.Query", "signature": "org.modeshape.jcr.api.query.Query createQuery( String statement,\n                                                          String language )", "full_signature": "@Override public org.modeshape.jcr.api.query.Query createQuery( String statement,\n                                                          String language )", "class_method_signature": "JcrQueryManager.createQuery( String statement,\n                                                          String language )", "testcase": false, "constructor": false}, {"identifier": "createQuery", "parameters": "( String statement, \n                                                          String language,\n                                                          Locale locale )", "modifiers": "@Override public", "return": "org.modeshape.jcr.api.query.Query", "signature": "org.modeshape.jcr.api.query.Query createQuery( String statement, \n                                                          String language,\n                                                          Locale locale )", "full_signature": "@Override public org.modeshape.jcr.api.query.Query createQuery( String statement, \n                                                          String language,\n                                                          Locale locale )", "class_method_signature": "JcrQueryManager.createQuery( String statement, \n                                                          String language,\n                                                          Locale locale )", "testcase": false, "constructor": false}, {"identifier": "createQuery", "parameters": "( String expression,\n                                                          String language,\n                                                          Path storedAtPath, \n                                                          Locale locale )", "modifiers": "public", "return": "org.modeshape.jcr.api.query.Query", "signature": "org.modeshape.jcr.api.query.Query createQuery( String expression,\n                                                          String language,\n                                                          Path storedAtPath, \n                                                          Locale locale )", "full_signature": "public org.modeshape.jcr.api.query.Query createQuery( String expression,\n                                                          String language,\n                                                          Path storedAtPath, \n                                                          Locale locale )", "class_method_signature": "JcrQueryManager.createQuery( String expression,\n                                                          String language,\n                                                          Path storedAtPath, \n                                                          Locale locale )", "testcase": false, "constructor": false}, {"identifier": "createQuery", "parameters": "( QueryCommand command )", "modifiers": "public", "return": "Query", "signature": "Query createQuery( QueryCommand command )", "full_signature": "public Query createQuery( QueryCommand command )", "class_method_signature": "JcrQueryManager.createQuery( QueryCommand command )", "testcase": false, "constructor": false}, {"identifier": "getQuery", "parameters": "( Node node )", "modifiers": "@Override public", "return": "org.modeshape.jcr.api.query.Query", "signature": "org.modeshape.jcr.api.query.Query getQuery( Node node )", "full_signature": "@Override public org.modeshape.jcr.api.query.Query getQuery( Node node )", "class_method_signature": "JcrQueryManager.getQuery( Node node )", "testcase": false, "constructor": false}, {"identifier": "getSupportedQueryLanguages", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getSupportedQueryLanguages()", "full_signature": "@Override public String[] getSupportedQueryLanguages()", "class_method_signature": "JcrQueryManager.getSupportedQueryLanguages()", "testcase": false, "constructor": false}, {"identifier": "resultWith", "parameters": "( String expression,\n                                                            String language,\n                                                            QueryCommand command,\n                                                            PlanHints hints,\n                                                            Path storedAtPath, \n                                                            Locale locale )", "modifiers": "protected", "return": "org.modeshape.jcr.api.query.Query", "signature": "org.modeshape.jcr.api.query.Query resultWith( String expression,\n                                                            String language,\n                                                            QueryCommand command,\n                                                            PlanHints hints,\n                                                            Path storedAtPath, \n                                                            Locale locale )", "full_signature": "protected org.modeshape.jcr.api.query.Query resultWith( String expression,\n                                                            String language,\n                                                            QueryCommand command,\n                                                            PlanHints hints,\n                                                            Path storedAtPath, \n                                                            Locale locale )", "class_method_signature": "JcrQueryManager.resultWith( String expression,\n                                                            String language,\n                                                            QueryCommand command,\n                                                            PlanHints hints,\n                                                            Path storedAtPath, \n                                                            Locale locale )", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/JcrQueryManager.java"}, "focal_method": {"identifier": "createQuery", "parameters": "( String statement,\n                                                          String language )", "modifiers": "@Override public", "return": "org.modeshape.jcr.api.query.Query", "body": "@Override\n    public org.modeshape.jcr.api.query.Query createQuery( String statement,\n                                                          String language ) throws InvalidQueryException, RepositoryException {\n        CheckArg.isNotNull(statement, \"statement\");\n        CheckArg.isNotNull(language, \"language\");\n        return createQuery(statement, language, null, null);\n    }", "signature": "org.modeshape.jcr.api.query.Query createQuery( String statement,\n                                                          String language )", "full_signature": "@Override public org.modeshape.jcr.api.query.Query createQuery( String statement,\n                                                          String language )", "class_method_signature": "JcrQueryManager.createQuery( String statement,\n                                                          String language )", "testcase": false, "constructor": false, "invocations": ["isNotNull", "isNotNull", "createQuery"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}