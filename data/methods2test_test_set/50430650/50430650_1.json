{"test_class": {"identifier": "SyntaxAwareStepValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String FEATURE_PATH = \"./target/test-classes/features/\";", "modifier": "private static final", "type": "String", "declarator": "FEATURE_PATH = \"./target/test-classes/features/\"", "var_name": "FEATURE_PATH"}, {"original_string": "private static final String SUBSTEPS_PATH = \"./target/test-classes/substeps/\";", "modifier": "private static final", "type": "String", "declarator": "SUBSTEPS_PATH = \"./target/test-classes/substeps/\"", "var_name": "SUBSTEPS_PATH"}, {"original_string": "private FeatureFileParser featureFileParser;", "modifier": "private", "type": "FeatureFileParser", "declarator": "featureFileParser", "var_name": "featureFileParser"}, {"original_string": "private SubStepDefinitionParser substepsFileParser;", "modifier": "private", "type": "SubStepDefinitionParser", "declarator": "substepsFileParser", "var_name": "substepsFileParser"}, {"original_string": "private SyntaxErrorReporter mock;", "modifier": "private", "type": "SyntaxErrorReporter", "declarator": "mock", "var_name": "mock"}], "file": "core/src/test/java/com/technophobia/substeps/runner/syntax/validation/SyntaxAwareStepValidatorTest.java"}, "test_case": {"identifier": "validatorReportsMissingStepsInScenario", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void validatorReportsMissingStepsInScenario() {\n        File ff = createFeatureFile(\"error.feature\");\n        final FeatureFile featureFile = this.featureFileParser.loadFeatureFile(ff);\n\n        createStepValidatorWithSubsteps(\"simple.substeps\", mock).validateFeatureFile(featureFile, mock);\n\n        verify(mock).reportFeatureError(eq(ff), eq(\"Given step 1\"), eq(6), anyInt(), any());\n        verify(mock).reportFeatureError(eq(ff), eq(\"Given step 2\"), eq(7), anyInt(), any());\n    }", "signature": "void validatorReportsMissingStepsInScenario()", "full_signature": "@Test public void validatorReportsMissingStepsInScenario()", "class_method_signature": "SyntaxAwareStepValidatorTest.validatorReportsMissingStepsInScenario()", "testcase": true, "constructor": false, "invocations": ["createFeatureFile", "loadFeatureFile", "validateFeatureFile", "createStepValidatorWithSubsteps", "reportFeatureError", "verify", "eq", "eq", "eq", "anyInt", "any", "reportFeatureError", "verify", "eq", "eq", "eq", "anyInt", "any"]}, "focal_class": {"identifier": "SyntaxAwareStepValidator", "superclass": "", "interfaces": "implements StepValidator", "fields": [{"original_string": "private final PatternMap<StepImplementation> stepImplMap;", "modifier": "private final", "type": "PatternMap<StepImplementation>", "declarator": "stepImplMap", "var_name": "stepImplMap"}, {"original_string": "private final Syntax syntax;", "modifier": "private final", "type": "Syntax", "declarator": "syntax", "var_name": "syntax"}], "methods": [{"identifier": "SyntaxAwareStepValidator", "parameters": "(final Syntax syntax)", "modifiers": "public", "return": "", "signature": " SyntaxAwareStepValidator(final Syntax syntax)", "full_signature": "public  SyntaxAwareStepValidator(final Syntax syntax)", "class_method_signature": "SyntaxAwareStepValidator.SyntaxAwareStepValidator(final Syntax syntax)", "testcase": false, "constructor": true}, {"identifier": "validateFeatureFile", "parameters": "(final FeatureFile featureFile, final SyntaxErrorReporter syntaxErrorReporter)", "modifiers": "@Override public", "return": "void", "signature": "void validateFeatureFile(final FeatureFile featureFile, final SyntaxErrorReporter syntaxErrorReporter)", "full_signature": "@Override public void validateFeatureFile(final FeatureFile featureFile, final SyntaxErrorReporter syntaxErrorReporter)", "class_method_signature": "SyntaxAwareStepValidator.validateFeatureFile(final FeatureFile featureFile, final SyntaxErrorReporter syntaxErrorReporter)", "testcase": false, "constructor": false}, {"identifier": "validateSubstep", "parameters": "(final ParentStep substep, final SyntaxErrorReporter syntaxErrorReporter)", "modifiers": "@Override public", "return": "void", "signature": "void validateSubstep(final ParentStep substep, final SyntaxErrorReporter syntaxErrorReporter)", "full_signature": "@Override public void validateSubstep(final ParentStep substep, final SyntaxErrorReporter syntaxErrorReporter)", "class_method_signature": "SyntaxAwareStepValidator.validateSubstep(final ParentStep substep, final SyntaxErrorReporter syntaxErrorReporter)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(final Scenario scenario, final File sourceFile,\n                            final SyntaxErrorReporter syntaxErrorReporter)", "modifiers": "protected", "return": "void", "signature": "void validate(final Scenario scenario, final File sourceFile,\n                            final SyntaxErrorReporter syntaxErrorReporter)", "full_signature": "protected void validate(final Scenario scenario, final File sourceFile,\n                            final SyntaxErrorReporter syntaxErrorReporter)", "class_method_signature": "SyntaxAwareStepValidator.validate(final Scenario scenario, final File sourceFile,\n                            final SyntaxErrorReporter syntaxErrorReporter)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(final Step step, final File sourceFile, final SyntaxErrorReporter syntaxErrorReporter)", "modifiers": "protected", "return": "void", "signature": "void validate(final Step step, final File sourceFile, final SyntaxErrorReporter syntaxErrorReporter)", "full_signature": "protected void validate(final Step step, final File sourceFile, final SyntaxErrorReporter syntaxErrorReporter)", "class_method_signature": "SyntaxAwareStepValidator.validate(final Step step, final File sourceFile, final SyntaxErrorReporter syntaxErrorReporter)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(final Step step)", "modifiers": "protected", "return": "boolean", "signature": "boolean isValid(final Step step)", "full_signature": "protected boolean isValid(final Step step)", "class_method_signature": "SyntaxAwareStepValidator.isValid(final Step step)", "testcase": false, "constructor": false}, {"identifier": "createStepImplMap", "parameters": "()", "modifiers": "private", "return": "PatternMap<StepImplementation>", "signature": "PatternMap<StepImplementation> createStepImplMap()", "full_signature": "private PatternMap<StepImplementation> createStepImplMap()", "class_method_signature": "SyntaxAwareStepValidator.createStepImplMap()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/technophobia/substeps/runner/syntax/validation/SyntaxAwareStepValidator.java"}, "focal_method": {"identifier": "validateFeatureFile", "parameters": "(final FeatureFile featureFile, final SyntaxErrorReporter syntaxErrorReporter)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validateFeatureFile(final FeatureFile featureFile, final SyntaxErrorReporter syntaxErrorReporter) {\n        final List<Scenario> scenarios = featureFile.getScenarios();\n        if (scenarios != null) {\n            for (final Scenario scenario : scenarios) {\n                validate(scenario, featureFile.getSourceFile(), syntaxErrorReporter);\n            }\n        }\n    }", "signature": "void validateFeatureFile(final FeatureFile featureFile, final SyntaxErrorReporter syntaxErrorReporter)", "full_signature": "@Override public void validateFeatureFile(final FeatureFile featureFile, final SyntaxErrorReporter syntaxErrorReporter)", "class_method_signature": "SyntaxAwareStepValidator.validateFeatureFile(final FeatureFile featureFile, final SyntaxErrorReporter syntaxErrorReporter)", "testcase": false, "constructor": false, "invocations": ["getScenarios", "validate", "getSourceFile"]}, "repository": {"repo_id": 50430650, "url": "https://github.com/Substeps/substeps-framework", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 2783, "license": "licensed"}}