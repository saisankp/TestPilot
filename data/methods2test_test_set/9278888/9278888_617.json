{"test_class": {"identifier": "PlatformTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Platform platform = new Platform.Jre7();", "modifier": "", "type": "Platform", "declarator": "platform = new Platform.Jre7()", "var_name": "platform"}], "file": "brave/src/test/java/brave/internal/PlatformTest.java"}, "test_case": {"identifier": "produceLinkLocalIp_notSiteLocal_ipv4", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void produceLinkLocalIp_notSiteLocal_ipv4() throws Exception {\n    nicWithAddress(InetAddress.getByAddress(\"external\", new byte[] {1, 2, 3, 4}));\n\n    assertThat(platform.produceLinkLocalIp())\n      .isNull();\n  }", "signature": "void produceLinkLocalIp_notSiteLocal_ipv4()", "full_signature": "@Test public void produceLinkLocalIp_notSiteLocal_ipv4()", "class_method_signature": "PlatformTest.produceLinkLocalIp_notSiteLocal_ipv4()", "testcase": true, "constructor": false, "invocations": ["nicWithAddress", "getByAddress", "isNull", "assertThat", "produceLinkLocalIp"]}, "focal_class": {"identifier": "Platform", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Platform PLATFORM = findPlatform();", "modifier": "private static final", "type": "Platform", "declarator": "PLATFORM = findPlatform()", "var_name": "PLATFORM"}, {"original_string": "volatile String linkLocalIp;", "modifier": "volatile", "type": "String", "declarator": "linkLocalIp", "var_name": "linkLocalIp"}], "methods": [{"identifier": "getHostString", "parameters": "(InetSocketAddress socket)", "modifiers": "@Nullable public abstract", "return": "String", "signature": "String getHostString(InetSocketAddress socket)", "full_signature": "@Nullable public abstract String getHostString(InetSocketAddress socket)", "class_method_signature": "Platform.getHostString(InetSocketAddress socket)", "testcase": false, "constructor": false}, {"identifier": "linkLocalIp", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String linkLocalIp()", "full_signature": "@Nullable public String linkLocalIp()", "class_method_signature": "Platform.linkLocalIp()", "testcase": false, "constructor": false}, {"identifier": "produceLinkLocalIp", "parameters": "()", "modifiers": "", "return": "String", "signature": "String produceLinkLocalIp()", "full_signature": " String produceLinkLocalIp()", "class_method_signature": "Platform.produceLinkLocalIp()", "testcase": false, "constructor": false}, {"identifier": "assertionError", "parameters": "(String message, Throwable cause)", "modifiers": "public", "return": "AssertionError", "signature": "AssertionError assertionError(String message, Throwable cause)", "full_signature": "public AssertionError assertionError(String message, Throwable cause)", "class_method_signature": "Platform.assertionError(String message, Throwable cause)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "public static", "return": "Platform", "signature": "Platform get()", "full_signature": "public static Platform get()", "class_method_signature": "Platform.get()", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(String msg, @Nullable Throwable thrown)", "modifiers": "public", "return": "void", "signature": "void log(String msg, @Nullable Throwable thrown)", "full_signature": "public void log(String msg, @Nullable Throwable thrown)", "class_method_signature": "Platform.log(String msg, @Nullable Throwable thrown)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(String msg, Object param1, @Nullable Throwable thrown)", "modifiers": "public", "return": "void", "signature": "void log(String msg, Object param1, @Nullable Throwable thrown)", "full_signature": "public void log(String msg, Object param1, @Nullable Throwable thrown)", "class_method_signature": "Platform.log(String msg, Object param1, @Nullable Throwable thrown)", "testcase": false, "constructor": false}, {"identifier": "findPlatform", "parameters": "()", "modifiers": "static", "return": "Platform", "signature": "Platform findPlatform()", "full_signature": "static Platform findPlatform()", "class_method_signature": "Platform.findPlatform()", "testcase": false, "constructor": false}, {"identifier": "randomLong", "parameters": "()", "modifiers": "public abstract", "return": "long", "signature": "long randomLong()", "full_signature": "public abstract long randomLong()", "class_method_signature": "Platform.randomLong()", "testcase": false, "constructor": false}, {"identifier": "nextTraceIdHigh", "parameters": "()", "modifiers": "public abstract", "return": "long", "signature": "long nextTraceIdHigh()", "full_signature": "public abstract long nextTraceIdHigh()", "class_method_signature": "Platform.nextTraceIdHigh()", "testcase": false, "constructor": false}, {"identifier": "clock", "parameters": "()", "modifiers": "public", "return": "Clock", "signature": "Clock clock()", "full_signature": "public Clock clock()", "class_method_signature": "Platform.clock()", "testcase": false, "constructor": false}, {"identifier": "nextTraceIdHigh", "parameters": "(int random)", "modifiers": "static", "return": "long", "signature": "long nextTraceIdHigh(int random)", "full_signature": "static long nextTraceIdHigh(int random)", "class_method_signature": "Platform.nextTraceIdHigh(int random)", "testcase": false, "constructor": false}], "file": "brave/src/main/java/brave/internal/Platform.java"}, "focal_method": {"identifier": "produceLinkLocalIp", "parameters": "()", "modifiers": "", "return": "String", "body": "String produceLinkLocalIp() {\n    try {\n      Enumeration<NetworkInterface> nics = NetworkInterface.getNetworkInterfaces();\n      while (nics.hasMoreElements()) {\n        NetworkInterface nic = nics.nextElement();\n        Enumeration<InetAddress> addresses = nic.getInetAddresses();\n        while (addresses.hasMoreElements()) {\n          InetAddress address = addresses.nextElement();\n          if (address.isSiteLocalAddress()) return address.getHostAddress();\n        }\n      }\n    } catch (Exception e) {\n      // don't crash the caller if there was a problem reading nics.\n      log(\"error reading nics\", e);\n    }\n    return null;\n  }", "signature": "String produceLinkLocalIp()", "full_signature": " String produceLinkLocalIp()", "class_method_signature": "Platform.produceLinkLocalIp()", "testcase": false, "constructor": false, "invocations": ["getNetworkInterfaces", "hasMoreElements", "nextElement", "getInetAddresses", "hasMoreElements", "nextElement", "isSiteLocalAddress", "getHostAddress", "log"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}