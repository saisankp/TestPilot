{"test_class": {"identifier": "ServerRestServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger logger = LoggerFactory.getLogger( ServerRestServiceTest.class );", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger( ServerRestServiceTest.class )", "var_name": "logger"}], "file": "modules/hms-core/src/test/java/com/vmware/vrack/hms/rest/services/ServerRestServiceTest.java"}, "test_case": {"identifier": "getCpuInfo_nodeInNodeMap_BoardServiceFound", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getCpuInfo_nodeInNodeMap_BoardServiceFound()\n        throws Exception\n    {\n        insertNodeInNodeMap( getServerNode() );\n        addBoardServiceForNode();\n\n        ServerRestService restService = new ServerRestService();\n        List<CPUInfo> cpuInfos = restService.getCpuInfo( \"N1\" );\n        assertNotNull( cpuInfos );\n        assertEquals( 1, cpuInfos.size() );\n        assertEquals( \"CPU_0\", cpuInfos.get( 0 ).getId() );\n    }", "signature": "void getCpuInfo_nodeInNodeMap_BoardServiceFound()", "full_signature": "@Test public void getCpuInfo_nodeInNodeMap_BoardServiceFound()", "class_method_signature": "ServerRestServiceTest.getCpuInfo_nodeInNodeMap_BoardServiceFound()", "testcase": true, "constructor": false, "invocations": ["insertNodeInNodeMap", "getServerNode", "addBoardServiceForNode", "getCpuInfo", "assertNotNull", "assertEquals", "size", "assertEquals", "getId", "get"]}, "focal_class": {"identifier": "ServerRestService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ServerNodeConnector serverConnector = ServerNodeConnector.getInstance();", "modifier": "private", "type": "ServerNodeConnector", "declarator": "serverConnector = ServerNodeConnector.getInstance()", "var_name": "serverConnector"}, {"original_string": "private Logger logger = LoggerFactory.getLogger( ServerRestService.class );", "modifier": "private", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger( ServerRestService.class )", "var_name": "logger"}, {"original_string": "private boolean useServerInfoCache =\n        Boolean.parseBoolean( HmsConfigHolder.getProperty( HmsConfigHolder.HMS_CONFIG_PROPS, \"cache_server_info\" ) );", "modifier": "private", "type": "boolean", "declarator": "useServerInfoCache =\n        Boolean.parseBoolean( HmsConfigHolder.getProperty( HmsConfigHolder.HMS_CONFIG_PROPS, \"cache_server_info\" ) )", "var_name": "useServerInfoCache"}], "methods": [{"identifier": "getHosts", "parameters": "()", "modifiers": "@GET @Path( \"/\" ) @Produces( \"application/json\" ) public", "return": "Map<String, HmsNode>", "signature": "Map<String, HmsNode> getHosts()", "full_signature": "@GET @Path( \"/\" ) @Produces( \"application/json\" ) public Map<String, HmsNode> getHosts()", "class_method_signature": "ServerRestService.getHosts()", "testcase": false, "constructor": false}, {"identifier": "getHostNode", "parameters": "( @PathParam( \"host_id\" ) String host_id )", "modifiers": "@GET @Path( \"/{host_id}\" ) @Produces( \"application/json\" ) public", "return": "ServerNode", "signature": "ServerNode getHostNode( @PathParam( \"host_id\" ) String host_id )", "full_signature": "@GET @Path( \"/{host_id}\" ) @Produces( \"application/json\" ) public ServerNode getHostNode( @PathParam( \"host_id\" ) String host_id )", "class_method_signature": "ServerRestService.getHostNode( @PathParam( \"host_id\" ) String host_id )", "testcase": false, "constructor": false}, {"identifier": "getJnlpSupportFiles", "parameters": "( @PathParam( \"host_id\" ) String host_id, @PathParam( \"path\" ) String path )", "modifiers": "@GET @Path( \"/jnlpRemoteConsoleSupportFiles/{host_id}/{path : .*}\" ) @Produces( MediaType.APPLICATION_OCTET_STREAM ) public", "return": "Response", "signature": "Response getJnlpSupportFiles( @PathParam( \"host_id\" ) String host_id, @PathParam( \"path\" ) String path )", "full_signature": "@GET @Path( \"/jnlpRemoteConsoleSupportFiles/{host_id}/{path : .*}\" ) @Produces( MediaType.APPLICATION_OCTET_STREAM ) public Response getJnlpSupportFiles( @PathParam( \"host_id\" ) String host_id, @PathParam( \"path\" ) String path )", "class_method_signature": "ServerRestService.getJnlpSupportFiles( @PathParam( \"host_id\" ) String host_id, @PathParam( \"path\" ) String path )", "testcase": false, "constructor": false}, {"identifier": "startRemoteConsoleConnection", "parameters": "( @PathParam( \"host_id\" ) String host_id )", "modifiers": "@GET @Path( \"/{host_id}/startremoteconsole\" ) @Produces( \"application/json\" ) public", "return": "RemoteConsoleConnectionInfo", "signature": "RemoteConsoleConnectionInfo startRemoteConsoleConnection( @PathParam( \"host_id\" ) String host_id )", "full_signature": "@GET @Path( \"/{host_id}/startremoteconsole\" ) @Produces( \"application/json\" ) public RemoteConsoleConnectionInfo startRemoteConsoleConnection( @PathParam( \"host_id\" ) String host_id )", "class_method_signature": "ServerRestService.startRemoteConsoleConnection( @PathParam( \"host_id\" ) String host_id )", "testcase": false, "constructor": false}, {"identifier": "getHostRemoteConsoleCapabilities", "parameters": "( @PathParam( \"host_id\" ) String host_id )", "modifiers": "@GET @Path( \"/{host_id}/remoteconsoledetails\" ) @Produces( \"application/json\" ) public", "return": "RemoteConsoleCapabilities", "signature": "RemoteConsoleCapabilities getHostRemoteConsoleCapabilities( @PathParam( \"host_id\" ) String host_id )", "full_signature": "@GET @Path( \"/{host_id}/remoteconsoledetails\" ) @Produces( \"application/json\" ) public RemoteConsoleCapabilities getHostRemoteConsoleCapabilities( @PathParam( \"host_id\" ) String host_id )", "class_method_signature": "ServerRestService.getHostRemoteConsoleCapabilities( @PathParam( \"host_id\" ) String host_id )", "testcase": false, "constructor": false}, {"identifier": "getHostPowerStatus", "parameters": "( @PathParam( \"host_id\" ) String host_id )", "modifiers": "@GET @Path( \"/{host_id}/powerstatus\" ) @Produces( \"application/json\" ) public", "return": "ServerNodePowerStatus", "signature": "ServerNodePowerStatus getHostPowerStatus( @PathParam( \"host_id\" ) String host_id )", "full_signature": "@GET @Path( \"/{host_id}/powerstatus\" ) @Produces( \"application/json\" ) public ServerNodePowerStatus getHostPowerStatus( @PathParam( \"host_id\" ) String host_id )", "class_method_signature": "ServerRestService.getHostPowerStatus( @PathParam( \"host_id\" ) String host_id )", "testcase": false, "constructor": false}, {"identifier": "getHostSelfTestResults", "parameters": "( @PathParam( \"host_id\" ) String host_id )", "modifiers": "@GET @Path( \"/{host_id}/selftest\" ) @Produces( \"application/json\" ) public", "return": "SelfTestResults", "signature": "SelfTestResults getHostSelfTestResults( @PathParam( \"host_id\" ) String host_id )", "full_signature": "@GET @Path( \"/{host_id}/selftest\" ) @Produces( \"application/json\" ) public SelfTestResults getHostSelfTestResults( @PathParam( \"host_id\" ) String host_id )", "class_method_signature": "ServerRestService.getHostSelfTestResults( @PathParam( \"host_id\" ) String host_id )", "testcase": false, "constructor": false}, {"identifier": "getBmcUsers", "parameters": "( @PathParam( \"host_id\" ) String host_id )", "modifiers": "@GET @Path( \"/{host_id}/bmcusers\" ) @Produces( \"application/json\" ) public", "return": "List<BmcUser>", "signature": "List<BmcUser> getBmcUsers( @PathParam( \"host_id\" ) String host_id )", "full_signature": "@GET @Path( \"/{host_id}/bmcusers\" ) @Produces( \"application/json\" ) public List<BmcUser> getBmcUsers( @PathParam( \"host_id\" ) String host_id )", "class_method_signature": "ServerRestService.getBmcUsers( @PathParam( \"host_id\" ) String host_id )", "testcase": false, "constructor": false}, {"identifier": "getCpuInfo", "parameters": "( @PathParam( \"host_id\" ) String host_id )", "modifiers": "@GET @Path( \"/{host_id}/cpuinfo\" ) @Produces( \"application/json\" ) public", "return": "List<CPUInfo>", "signature": "List<CPUInfo> getCpuInfo( @PathParam( \"host_id\" ) String host_id )", "full_signature": "@GET @Path( \"/{host_id}/cpuinfo\" ) @Produces( \"application/json\" ) public List<CPUInfo> getCpuInfo( @PathParam( \"host_id\" ) String host_id )", "class_method_signature": "ServerRestService.getCpuInfo( @PathParam( \"host_id\" ) String host_id )", "testcase": false, "constructor": false}, {"identifier": "getHddInfo", "parameters": "( @PathParam( \"host_id\" ) String host_id )", "modifiers": "@GET @Path( \"/{host_id}/storageinfo\" ) @Produces( \"application/json\" ) public", "return": "List<HddInfo>", "signature": "List<HddInfo> getHddInfo( @PathParam( \"host_id\" ) String host_id )", "full_signature": "@GET @Path( \"/{host_id}/storageinfo\" ) @Produces( \"application/json\" ) public List<HddInfo> getHddInfo( @PathParam( \"host_id\" ) String host_id )", "class_method_signature": "ServerRestService.getHddInfo( @PathParam( \"host_id\" ) String host_id )", "testcase": false, "constructor": false}, {"identifier": "getStorageControllerInfo", "parameters": "( @PathParam( \"host_id\" ) String host_id )", "modifiers": "@GET @Path( \"/{host_id}/storagecontrollerinfo\" ) @Produces( \"application/json\" ) public", "return": "List<StorageControllerInfo>", "signature": "List<StorageControllerInfo> getStorageControllerInfo( @PathParam( \"host_id\" ) String host_id )", "full_signature": "@GET @Path( \"/{host_id}/storagecontrollerinfo\" ) @Produces( \"application/json\" ) public List<StorageControllerInfo> getStorageControllerInfo( @PathParam( \"host_id\" ) String host_id )", "class_method_signature": "ServerRestService.getStorageControllerInfo( @PathParam( \"host_id\" ) String host_id )", "testcase": false, "constructor": false}, {"identifier": "getMemoryInfo", "parameters": "( @PathParam( \"host_id\" ) String host_id )", "modifiers": "@GET @Path( \"/{host_id}/memoryinfo\" ) @Produces( \"application/json\" ) public", "return": "List<PhysicalMemory>", "signature": "List<PhysicalMemory> getMemoryInfo( @PathParam( \"host_id\" ) String host_id )", "full_signature": "@GET @Path( \"/{host_id}/memoryinfo\" ) @Produces( \"application/json\" ) public List<PhysicalMemory> getMemoryInfo( @PathParam( \"host_id\" ) String host_id )", "class_method_signature": "ServerRestService.getMemoryInfo( @PathParam( \"host_id\" ) String host_id )", "testcase": false, "constructor": false}, {"identifier": "getHostAcpiPowerState", "parameters": "( @PathParam( \"host_id\" ) String host_id )", "modifiers": "@GET @Path( \"/{host_id}/acpipowerstate\" ) @Produces( \"application/json\" ) public", "return": "AcpiPowerState", "signature": "AcpiPowerState getHostAcpiPowerState( @PathParam( \"host_id\" ) String host_id )", "full_signature": "@GET @Path( \"/{host_id}/acpipowerstate\" ) @Produces( \"application/json\" ) public AcpiPowerState getHostAcpiPowerState( @PathParam( \"host_id\" ) String host_id )", "class_method_signature": "ServerRestService.getHostAcpiPowerState( @PathParam( \"host_id\" ) String host_id )", "testcase": false, "constructor": false}, {"identifier": "getNicInfo", "parameters": "( @PathParam( \"host_id\" ) String host_id )", "modifiers": "@GET @Path( \"/{host_id}/nicinfo\" ) @Produces( \"application/json\" ) public", "return": "List<EthernetController>", "signature": "List<EthernetController> getNicInfo( @PathParam( \"host_id\" ) String host_id )", "full_signature": "@GET @Path( \"/{host_id}/nicinfo\" ) @Produces( \"application/json\" ) public List<EthernetController> getNicInfo( @PathParam( \"host_id\" ) String host_id )", "class_method_signature": "ServerRestService.getNicInfo( @PathParam( \"host_id\" ) String host_id )", "testcase": false, "constructor": false}, {"identifier": "updateNodes", "parameters": "( @Form HMSRestServerActionsForm actions )", "modifiers": "@PUT @Path( \"/update\" ) @Consumes( MediaType.APPLICATION_FORM_URLENCODED ) @Produces( \"application/json\" ) public", "return": "BaseResponse", "signature": "BaseResponse updateNodes( @Form HMSRestServerActionsForm actions )", "full_signature": "@PUT @Path( \"/update\" ) @Consumes( MediaType.APPLICATION_FORM_URLENCODED ) @Produces( \"application/json\" ) public BaseResponse updateNodes( @Form HMSRestServerActionsForm actions )", "class_method_signature": "ServerRestService.updateNodes( @Form HMSRestServerActionsForm actions )", "testcase": false, "constructor": false}, {"identifier": "updateNodes", "parameters": "( @PathParam( \"host_id\" ) String host_id, @QueryParam( \"action\" ) String action )", "modifiers": "@PUT @Path( \"/{host_id}\" ) @Produces( \"application/json\" ) public", "return": "BaseResponse", "signature": "BaseResponse updateNodes( @PathParam( \"host_id\" ) String host_id, @QueryParam( \"action\" ) String action )", "full_signature": "@PUT @Path( \"/{host_id}\" ) @Produces( \"application/json\" ) public BaseResponse updateNodes( @PathParam( \"host_id\" ) String host_id, @QueryParam( \"action\" ) String action )", "class_method_signature": "ServerRestService.updateNodes( @PathParam( \"host_id\" ) String host_id, @QueryParam( \"action\" ) String action )", "testcase": false, "constructor": false}, {"identifier": "getSystemBootOptions", "parameters": "( @PathParam( \"host_id\" ) String host_id )", "modifiers": "@GET @Path( \"/{host_id}/bootoptions\" ) @Produces( \"application/json\" ) public", "return": "SystemBootOptions", "signature": "SystemBootOptions getSystemBootOptions( @PathParam( \"host_id\" ) String host_id )", "full_signature": "@GET @Path( \"/{host_id}/bootoptions\" ) @Produces( \"application/json\" ) public SystemBootOptions getSystemBootOptions( @PathParam( \"host_id\" ) String host_id )", "class_method_signature": "ServerRestService.getSystemBootOptions( @PathParam( \"host_id\" ) String host_id )", "testcase": false, "constructor": false}, {"identifier": "getSystemBootOptions", "parameters": "( @PathParam( \"host_id\" ) String host_id,\n                                              SystemBootOptions systemBootOptions )", "modifiers": "@PUT @Path( \"/{host_id}/bootoptions\" ) @Consumes( MediaType.APPLICATION_JSON ) @Produces( \"application/json\" ) public", "return": "BaseResponse", "signature": "BaseResponse getSystemBootOptions( @PathParam( \"host_id\" ) String host_id,\n                                              SystemBootOptions systemBootOptions )", "full_signature": "@PUT @Path( \"/{host_id}/bootoptions\" ) @Consumes( MediaType.APPLICATION_JSON ) @Produces( \"application/json\" ) public BaseResponse getSystemBootOptions( @PathParam( \"host_id\" ) String host_id,\n                                              SystemBootOptions systemBootOptions )", "class_method_signature": "ServerRestService.getSystemBootOptions( @PathParam( \"host_id\" ) String host_id,\n                                              SystemBootOptions systemBootOptions )", "testcase": false, "constructor": false}, {"identifier": "chassisIdentify", "parameters": "( @PathParam( \"host_id\" ) String host_id,\n                                         ChassisIdentifyOptions chassisIdentifyOptions )", "modifiers": "@PUT @Path( \"/{host_id}/chassisidentify\" ) @Consumes( MediaType.APPLICATION_JSON ) @Produces( \"application/json\" ) public", "return": "BaseResponse", "signature": "BaseResponse chassisIdentify( @PathParam( \"host_id\" ) String host_id,\n                                         ChassisIdentifyOptions chassisIdentifyOptions )", "full_signature": "@PUT @Path( \"/{host_id}/chassisidentify\" ) @Consumes( MediaType.APPLICATION_JSON ) @Produces( \"application/json\" ) public BaseResponse chassisIdentify( @PathParam( \"host_id\" ) String host_id,\n                                         ChassisIdentifyOptions chassisIdentifyOptions )", "class_method_signature": "ServerRestService.chassisIdentify( @PathParam( \"host_id\" ) String host_id,\n                                         ChassisIdentifyOptions chassisIdentifyOptions )", "testcase": false, "constructor": false}, {"identifier": "selInfo", "parameters": "( @PathParam( \"host_id\" ) String host_id, SelOption selOption )", "modifiers": "@PUT @Path( \"/{host_id}/selinfo\" ) @Consumes( MediaType.APPLICATION_JSON ) @Produces( \"application/json\" ) public", "return": "SelInfo", "signature": "SelInfo selInfo( @PathParam( \"host_id\" ) String host_id, SelOption selOption )", "full_signature": "@PUT @Path( \"/{host_id}/selinfo\" ) @Consumes( MediaType.APPLICATION_JSON ) @Produces( \"application/json\" ) public SelInfo selInfo( @PathParam( \"host_id\" ) String host_id, SelOption selOption )", "class_method_signature": "ServerRestService.selInfo( @PathParam( \"host_id\" ) String host_id, SelOption selOption )", "testcase": false, "constructor": false}, {"identifier": "setBmcPassword", "parameters": "( @PathParam( \"host_id\" ) String host_id, SetNodePassword nodePassword )", "modifiers": "@PUT @Path( \"/{host_id}/setpassword\" ) @Consumes( MediaType.APPLICATION_JSON ) @Produces( \"application/json\" ) public", "return": "BaseResponse", "signature": "BaseResponse setBmcPassword( @PathParam( \"host_id\" ) String host_id, SetNodePassword nodePassword )", "full_signature": "@PUT @Path( \"/{host_id}/setpassword\" ) @Consumes( MediaType.APPLICATION_JSON ) @Produces( \"application/json\" ) public BaseResponse setBmcPassword( @PathParam( \"host_id\" ) String host_id, SetNodePassword nodePassword )", "class_method_signature": "ServerRestService.setBmcPassword( @PathParam( \"host_id\" ) String host_id, SetNodePassword nodePassword )", "testcase": false, "constructor": false}, {"identifier": "getAvailableNodeOperations", "parameters": "( @PathParam( \"host_id\" ) String host_id )", "modifiers": "@GET @Path( \"/{host_id}/supportedAPI\" ) @Produces( \"application/json\" ) public", "return": "List<HmsApi>", "signature": "List<HmsApi> getAvailableNodeOperations( @PathParam( \"host_id\" ) String host_id )", "full_signature": "@GET @Path( \"/{host_id}/supportedAPI\" ) @Produces( \"application/json\" ) public List<HmsApi> getAvailableNodeOperations( @PathParam( \"host_id\" ) String host_id )", "class_method_signature": "ServerRestService.getAvailableNodeOperations( @PathParam( \"host_id\" ) String host_id )", "testcase": false, "constructor": false}, {"identifier": "executeTask", "parameters": "( ServerNode node, TaskType taskType )", "modifiers": "private", "return": "void", "signature": "void executeTask( ServerNode node, TaskType taskType )", "full_signature": "private void executeTask( ServerNode node, TaskType taskType )", "class_method_signature": "ServerRestService.executeTask( ServerNode node, TaskType taskType )", "testcase": false, "constructor": false}, {"identifier": "executeTask", "parameters": "( ServerNode node, TaskType taskType, Object data )", "modifiers": "private", "return": "void", "signature": "void executeTask( ServerNode node, TaskType taskType, Object data )", "full_signature": "private void executeTask( ServerNode node, TaskType taskType, Object data )", "class_method_signature": "ServerRestService.executeTask( ServerNode node, TaskType taskType, Object data )", "testcase": false, "constructor": false}, {"identifier": "removeServer", "parameters": "( @PathParam( \"hostId\" ) String hostId )", "modifiers": "@DELETE @Path( \"/{hostId}\" ) @Produces( \"application/json\" ) public", "return": "Response", "signature": "Response removeServer( @PathParam( \"hostId\" ) String hostId )", "full_signature": "@DELETE @Path( \"/{hostId}\" ) @Produces( \"application/json\" ) public Response removeServer( @PathParam( \"hostId\" ) String hostId )", "class_method_signature": "ServerRestService.removeServer( @PathParam( \"hostId\" ) String hostId )", "testcase": false, "constructor": false}], "file": "modules/hms-core/src/main/java/com/vmware/vrack/hms/rest/services/ServerRestService.java"}, "focal_method": {"identifier": "getCpuInfo", "parameters": "( @PathParam( \"host_id\" ) String host_id )", "modifiers": "@GET @Path( \"/{host_id}/cpuinfo\" ) @Produces( \"application/json\" ) public", "return": "List<CPUInfo>", "body": "@GET\n    @Path( \"/{host_id}/cpuinfo\" )\n    @Produces( \"application/json\" )\n    public List<CPUInfo> getCpuInfo( @PathParam( \"host_id\" ) String host_id )\n        throws HMSRestException\n    {\n\n        if ( !serverConnector.getNodeMap().containsKey( host_id ) )\n            throw new HMSRestException( Status.NOT_FOUND.getStatusCode(), \"Invalid Request\",\n                                        \"Can't find host with id \" + host_id );\n        else\n        {\n            ServerNode node = (ServerNode) serverConnector.getNodeMap().get( host_id );\n\n            if ( node.getCpuInfo() != null && node.getCpuInfo().size() > 0 && useServerInfoCache )\n                return node.getCpuInfo();\n            try\n            {\n                executeTask( node, TaskType.RmmCPUInfo );\n            }\n            catch ( HmsResourceBusyException e )\n            {\n                throw new HMSRestException( Status.INTERNAL_SERVER_ERROR.getStatusCode(), Constants.RESOURCE_BUSY,\n                                            e.getMessage() );\n            }\n            catch ( HmsException e )\n            {\n                if ( e instanceof HMSRestException )\n                {\n                    throw e;\n                }\n                else\n                {\n                    throw new HMSRestException( Status.INTERNAL_SERVER_ERROR.getStatusCode(), \"Server Error\",\n                                                e.getMessage() );\n                }\n            }\n            catch ( Exception e )\n            {\n                throw new HMSRestException( Status.INTERNAL_SERVER_ERROR.getStatusCode(), \"Server Error\",\n                                            e.getMessage() );\n            }\n\n            return node.getCpuInfo();\n        }\n    }", "signature": "List<CPUInfo> getCpuInfo( @PathParam( \"host_id\" ) String host_id )", "full_signature": "@GET @Path( \"/{host_id}/cpuinfo\" ) @Produces( \"application/json\" ) public List<CPUInfo> getCpuInfo( @PathParam( \"host_id\" ) String host_id )", "class_method_signature": "ServerRestService.getCpuInfo( @PathParam( \"host_id\" ) String host_id )", "testcase": false, "constructor": false, "invocations": ["containsKey", "getNodeMap", "getStatusCode", "get", "getNodeMap", "getCpuInfo", "size", "getCpuInfo", "getCpuInfo", "executeTask", "getStatusCode", "getMessage", "getStatusCode", "getMessage", "getStatusCode", "getMessage", "getCpuInfo"]}, "repository": {"repo_id": 61566208, "url": "https://github.com/vmware-archive/OHMS", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 16092, "license": "licensed"}}