{"test_class": {"identifier": "AttachmentValueTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/de/slackspace/openkeepass/domain/AttachmentValueTest.java"}, "test_case": {"identifier": "shouldUnmarshallXmlToObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldUnmarshallXmlToObject() throws Exception {\n        AttachmentValue attachmentValue = new AttachmentValue(3);\n\n        String xml = \"<Value Ref='3' />\";\n        ByteArrayInputStream inputStream = new ByteArrayInputStream(xml.getBytes());\n        AttachmentValue attachmentValueUnmarshalled =\n                new SimpleXmlParser().fromXml(inputStream, new NullProtectionStrategy(), AttachmentValue.class);\n\n        Assert.assertEquals(attachmentValue.getRef(), attachmentValueUnmarshalled.getRef());\n    }", "signature": "void shouldUnmarshallXmlToObject()", "full_signature": "@Test public void shouldUnmarshallXmlToObject()", "class_method_signature": "AttachmentValueTest.shouldUnmarshallXmlToObject()", "testcase": true, "constructor": false, "invocations": ["getBytes", "fromXml", "assertEquals", "getRef", "getRef"]}, "focal_class": {"identifier": "AttachmentValue", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Attribute(name = \"Ref\")\n    private int ref;", "modifier": "@Attribute(name = \"Ref\")\n    private", "type": "int", "declarator": "ref", "var_name": "ref"}], "methods": [{"identifier": "AttachmentValue", "parameters": "()", "modifiers": "", "return": "", "signature": " AttachmentValue()", "full_signature": "  AttachmentValue()", "class_method_signature": "AttachmentValue.AttachmentValue()", "testcase": false, "constructor": true}, {"identifier": "AttachmentValue", "parameters": "(int ref)", "modifiers": "public", "return": "", "signature": " AttachmentValue(int ref)", "full_signature": "public  AttachmentValue(int ref)", "class_method_signature": "AttachmentValue.AttachmentValue(int ref)", "testcase": false, "constructor": true}, {"identifier": "getRef", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRef()", "full_signature": "public int getRef()", "class_method_signature": "AttachmentValue.getRef()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AttachmentValue.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AttachmentValue.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "AttachmentValue.equals(Object obj)", "testcase": false, "constructor": false}], "file": "src/de/slackspace/openkeepass/domain/AttachmentValue.java"}, "focal_method": {"identifier": "getRef", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int getRef() {\n        return ref;\n    }", "signature": "int getRef()", "full_signature": "public int getRef()", "class_method_signature": "AttachmentValue.getRef()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 102137829, "url": "https://github.com/privacyint/ThornSec", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 10, "size": 20604, "license": "licensed"}}