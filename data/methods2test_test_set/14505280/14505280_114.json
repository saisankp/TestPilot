{"test_class": {"identifier": "HibernateFeatureModelTest", "superclass": "extends AbstractHibernateLayerModelTest", "interfaces": "", "fields": [{"original_string": "private FeatureModel featureModel;", "modifier": "private", "type": "FeatureModel", "declarator": "featureModel", "var_name": "featureModel"}, {"original_string": "private HibernateTestFeature feature1;", "modifier": "private", "type": "HibernateTestFeature", "declarator": "feature1", "var_name": "feature1"}], "file": "plugin/layer-hibernate/hibernate/src/test/java/org/geomajas/layer/hibernate/HibernateFeatureModelTest.java"}, "test_case": {"identifier": "getAttributes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getAttributes() throws Exception {\n\t\tAssert.assertEquals(\"default-name-1\", featureModel.getAttributes(feature1).get(PARAM_TEXT_ATTR).getValue());\n\t}", "signature": "void getAttributes()", "full_signature": "@Test public void getAttributes()", "class_method_signature": "HibernateFeatureModelTest.getAttributes()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getValue", "get", "getAttributes"]}, "focal_class": {"identifier": "HibernateFeatureModel", "superclass": "extends HibernateLayerUtil", "interfaces": "implements FeatureModel", "fields": [{"original_string": "@Autowired\n\tprivate GeoService geoService;", "modifier": "@Autowired\n\tprivate", "type": "GeoService", "declarator": "geoService", "var_name": "geoService"}, {"original_string": "private int srid;", "modifier": "private", "type": "int", "declarator": "srid", "var_name": "srid"}, {"original_string": "@Autowired\n\tprivate EntityAttributeService entityMappingService;", "modifier": "@Autowired\n\tprivate", "type": "EntityAttributeService", "declarator": "entityMappingService", "var_name": "entityMappingService"}, {"original_string": "private EntityMapper entityMapper;", "modifier": "private", "type": "EntityMapper", "declarator": "entityMapper", "var_name": "entityMapper"}], "methods": [{"identifier": "setLayerInfo", "parameters": "(VectorLayerInfo layerInfo)", "modifiers": "@Override public", "return": "void", "signature": "void setLayerInfo(VectorLayerInfo layerInfo)", "full_signature": "@Override public void setLayerInfo(VectorLayerInfo layerInfo)", "class_method_signature": "HibernateFeatureModel.setLayerInfo(VectorLayerInfo layerInfo)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(Object feature, String name)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute getAttribute(Object feature, String name)", "full_signature": "@Override public Attribute getAttribute(Object feature, String name)", "class_method_signature": "HibernateFeatureModel.getAttribute(Object feature, String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributes", "parameters": "(Object feature)", "modifiers": "@Override @SuppressWarnings(\"rawtypes\") public", "return": "Map<String, Attribute>", "signature": "Map<String, Attribute> getAttributes(Object feature)", "full_signature": "@Override @SuppressWarnings(\"rawtypes\") public Map<String, Attribute> getAttributes(Object feature)", "class_method_signature": "HibernateFeatureModel.getAttributes(Object feature)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "(Object feature)", "modifiers": "@Override public", "return": "String", "signature": "String getId(Object feature)", "full_signature": "@Override public String getId(Object feature)", "class_method_signature": "HibernateFeatureModel.getId(Object feature)", "testcase": false, "constructor": false}, {"identifier": "getGeometry", "parameters": "(Object feature)", "modifiers": "@Override public", "return": "Geometry", "signature": "Geometry getGeometry(Object feature)", "full_signature": "@Override public Geometry getGeometry(Object feature)", "class_method_signature": "HibernateFeatureModel.getGeometry(Object feature)", "testcase": false, "constructor": false}, {"identifier": "setAttributes", "parameters": "(Object feature, Map<String, Attribute> attributes)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "void", "signature": "void setAttributes(Object feature, Map<String, Attribute> attributes)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public void setAttributes(Object feature, Map<String, Attribute> attributes)", "class_method_signature": "HibernateFeatureModel.setAttributes(Object feature, Map<String, Attribute> attributes)", "testcase": false, "constructor": false}, {"identifier": "setGeometry", "parameters": "(Object feature, Geometry geometry)", "modifiers": "@Override public", "return": "void", "signature": "void setGeometry(Object feature, Geometry geometry)", "full_signature": "@Override public void setGeometry(Object feature, Geometry geometry)", "class_method_signature": "HibernateFeatureModel.setGeometry(Object feature, Geometry geometry)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object newInstance()", "full_signature": "@Override public Object newInstance()", "class_method_signature": "HibernateFeatureModel.newInstance()", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(String id)", "modifiers": "@Override public", "return": "Object", "signature": "Object newInstance(String id)", "full_signature": "@Override public Object newInstance(String id)", "class_method_signature": "HibernateFeatureModel.newInstance(String id)", "testcase": false, "constructor": false}, {"identifier": "getSrid", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSrid()", "full_signature": "@Override public int getSrid()", "class_method_signature": "HibernateFeatureModel.getSrid()", "testcase": false, "constructor": false}, {"identifier": "getGeometryAttributeName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getGeometryAttributeName()", "full_signature": "@Override public String getGeometryAttributeName()", "class_method_signature": "HibernateFeatureModel.getGeometryAttributeName()", "testcase": false, "constructor": false}, {"identifier": "canHandle", "parameters": "(Object feature)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canHandle(Object feature)", "full_signature": "@Override public boolean canHandle(Object feature)", "class_method_signature": "HibernateFeatureModel.canHandle(Object feature)", "testcase": false, "constructor": false}, {"identifier": "fixName", "parameters": "(String name)", "modifiers": "private", "return": "String", "signature": "String fixName(String name)", "full_signature": "private String fixName(String name)", "class_method_signature": "HibernateFeatureModel.fixName(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeRecursively", "parameters": "(Object feature, String name)", "modifiers": "private", "return": "Object", "signature": "Object getAttributeRecursively(Object feature, String name)", "full_signature": "private Object getAttributeRecursively(Object feature, String name)", "class_method_signature": "HibernateFeatureModel.getAttributeRecursively(Object feature, String name)", "testcase": false, "constructor": false}], "file": "plugin/layer-hibernate/hibernate/src/main/java/org/geomajas/layer/hibernate/HibernateFeatureModel.java"}, "focal_method": {"identifier": "getAttributes", "parameters": "(Object feature)", "modifiers": "@Override @SuppressWarnings(\"rawtypes\") public", "return": "Map<String, Attribute>", "body": "@Override\n\t@SuppressWarnings(\"rawtypes\")\n\tpublic Map<String, Attribute> getAttributes(Object feature) throws LayerException {\n\t\ttry {\n\t\t\tMap<String, Attribute> attribs = new HashMap<String, Attribute>();\n\t\t\tfor (AttributeInfo attribute : getFeatureInfo().getAttributes()) {\n\t\t\t\tString name = attribute.getName();\n\t\t\t\tif (!name.equals(getGeometryAttributeName())) {\n\t\t\t\t\tAttribute value = getAttribute(feature, name);\n\t\t\t\t\tattribs.put(name, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn attribs;\n\t\t} catch (Exception e) { // NOSONAR\n\t\t\tthrow new LayerException(e, ExceptionCode.HIBERNATE_ATTRIBUTE_ALL_GET_FAILED, feature);\n\t\t}\n\t}", "signature": "Map<String, Attribute> getAttributes(Object feature)", "full_signature": "@Override @SuppressWarnings(\"rawtypes\") public Map<String, Attribute> getAttributes(Object feature)", "class_method_signature": "HibernateFeatureModel.getAttributes(Object feature)", "testcase": false, "constructor": false, "invocations": ["getAttributes", "getFeatureInfo", "getName", "equals", "getGeometryAttributeName", "getAttribute", "put"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}