{"test_class": {"identifier": "RepositoryDelegateFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String INVALID_URL = \"jdbc:metamatrix:jndi://\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_URL = \"jdbc:metamatrix:jndi://\"", "var_name": "INVALID_URL"}], "file": "modeshape-jdbc-local/src/test/java/org/modeshape/jdbc/delegate/RepositoryDelegateFactoryTest.java"}, "test_case": {"identifier": "shouldNotAcceptInvalidURL", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldNotAcceptInvalidURL() {\n        assertThat(factory().acceptUrl(INVALID_URL), is(false));\n    }", "signature": "void shouldNotAcceptInvalidURL()", "full_signature": "@Test public void shouldNotAcceptInvalidURL()", "class_method_signature": "RepositoryDelegateFactoryTest.shouldNotAcceptInvalidURL()", "testcase": true, "constructor": false, "invocations": ["assertThat", "acceptUrl", "factory", "is"]}, "focal_class": {"identifier": "RepositoryDelegateFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final int PROTOCOL_UNKNOWN = -1;", "modifier": "protected static final", "type": "int", "declarator": "PROTOCOL_UNKNOWN = -1", "var_name": "PROTOCOL_UNKNOWN"}, {"original_string": "protected static final int PROTOCOL_JNDI = 1;", "modifier": "protected static final", "type": "int", "declarator": "PROTOCOL_JNDI = 1", "var_name": "PROTOCOL_JNDI"}], "methods": [{"identifier": "RepositoryDelegateFactory", "parameters": "()", "modifiers": "protected", "return": "", "signature": " RepositoryDelegateFactory()", "full_signature": "protected  RepositoryDelegateFactory()", "class_method_signature": "RepositoryDelegateFactory.RepositoryDelegateFactory()", "testcase": false, "constructor": true}, {"identifier": "createRepositoryDelegate", "parameters": "( String url,\n                                                        Properties info,\n                                                        JcrContextFactory contextFactory )", "modifiers": "public", "return": "RepositoryDelegate", "signature": "RepositoryDelegate createRepositoryDelegate( String url,\n                                                        Properties info,\n                                                        JcrContextFactory contextFactory )", "full_signature": "public RepositoryDelegate createRepositoryDelegate( String url,\n                                                        Properties info,\n                                                        JcrContextFactory contextFactory )", "class_method_signature": "RepositoryDelegateFactory.createRepositoryDelegate( String url,\n                                                        Properties info,\n                                                        JcrContextFactory contextFactory )", "testcase": false, "constructor": false}, {"identifier": "acceptUrl", "parameters": "( String url )", "modifiers": "public", "return": "boolean", "signature": "boolean acceptUrl( String url )", "full_signature": "public boolean acceptUrl( String url )", "class_method_signature": "RepositoryDelegateFactory.acceptUrl( String url )", "testcase": false, "constructor": false}, {"identifier": "determineProtocol", "parameters": "( String url )", "modifiers": "protected", "return": "int", "signature": "int determineProtocol( String url )", "full_signature": "protected int determineProtocol( String url )", "class_method_signature": "RepositoryDelegateFactory.determineProtocol( String url )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( int protocol,\n                                         String url,\n                                         Properties info,\n                                         JcrContextFactory contextFactory )", "modifiers": "protected", "return": "RepositoryDelegate", "signature": "RepositoryDelegate create( int protocol,\n                                         String url,\n                                         Properties info,\n                                         JcrContextFactory contextFactory )", "full_signature": "protected RepositoryDelegate create( int protocol,\n                                         String url,\n                                         Properties info,\n                                         JcrContextFactory contextFactory )", "class_method_signature": "RepositoryDelegateFactory.create( int protocol,\n                                         String url,\n                                         Properties info,\n                                         JcrContextFactory contextFactory )", "testcase": false, "constructor": false}], "file": "modeshape-jdbc-local/src/main/java/org/modeshape/jdbc/delegate/RepositoryDelegateFactory.java"}, "focal_method": {"identifier": "acceptUrl", "parameters": "( String url )", "modifiers": "public", "return": "boolean", "body": "public boolean acceptUrl( String url ) {\n        return !StringUtil.isBlank(url) && determineProtocol(url.trim()) > 0;\n    }", "signature": "boolean acceptUrl( String url )", "full_signature": "public boolean acceptUrl( String url )", "class_method_signature": "RepositoryDelegateFactory.acceptUrl( String url )", "testcase": false, "constructor": false, "invocations": ["isBlank", "determineProtocol", "trim"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}