{"test_class": {"identifier": "RedisReducedPropagationStorageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Vertx vertx;", "modifier": "private static", "type": "Vertx", "declarator": "vertx", "var_name": "vertx"}, {"original_string": "private Jedis jedis;", "modifier": "private", "type": "Jedis", "declarator": "jedis", "var_name": "jedis"}, {"original_string": "private static RedisReducedPropagationStorage storage;", "modifier": "private static", "type": "RedisReducedPropagationStorage", "declarator": "storage", "var_name": "storage"}, {"original_string": "@org.junit.Rule\n    public Timeout rule = Timeout.seconds(30);", "modifier": "@org.junit.Rule\n    public", "type": "Timeout", "declarator": "rule = Timeout.seconds(30)", "var_name": "rule"}], "file": "gateleen-hook/src/test/java/org/swisspush/gateleen/hook/reducedpropagation/impl/RedisReducedPropagationStorageTest.java"}, "test_case": {"identifier": "testStoreQueueRequest", "parameters": "(TestContext context)", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStoreQueueRequest(TestContext context){\n        Async async = context.async();\n        context.assertFalse(jedis.exists(QUEUE_REQUESTS));\n        JsonObject request = new JsonObject().put(\"key1\", 1234).put(\"key2\", \"abcd\");\n        storage.storeQueueRequest(\"queue_1\", request).setHandler(event -> {\n            context.assertTrue(event.succeeded());\n            context.assertTrue(jedis.exists(QUEUE_REQUESTS));\n            context.assertTrue(jedis.hexists(QUEUE_REQUESTS, \"queue_1\"));\n            context.assertEquals(request.encode(), jedis.hget(QUEUE_REQUESTS, \"queue_1\"));\n            async.complete();\n        });\n    }", "signature": "void testStoreQueueRequest(TestContext context)", "full_signature": "@Test public void testStoreQueueRequest(TestContext context)", "class_method_signature": "RedisReducedPropagationStorageTest.testStoreQueueRequest(TestContext context)", "testcase": true, "constructor": false, "invocations": ["async", "assertFalse", "exists", "put", "put", "setHandler", "storeQueueRequest", "assertTrue", "succeeded", "assertTrue", "exists", "assertTrue", "hexists", "assertEquals", "encode", "hget", "complete"]}, "focal_class": {"identifier": "RedisReducedPropagationStorage", "superclass": "", "interfaces": "implements ReducedPropagationStorage", "fields": [{"original_string": "private RedisClient redisClient;", "modifier": "private", "type": "RedisClient", "declarator": "redisClient", "var_name": "redisClient"}, {"original_string": "private Logger log = LoggerFactory.getLogger(RedisReducedPropagationStorage.class);", "modifier": "private", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(RedisReducedPropagationStorage.class)", "var_name": "log"}, {"original_string": "static final String QUEUE_TIMERS = \"gateleen.hook-reducedpropagation-queuetimers\";", "modifier": "static final", "type": "String", "declarator": "QUEUE_TIMERS = \"gateleen.hook-reducedpropagation-queuetimers\"", "var_name": "QUEUE_TIMERS"}, {"original_string": "static final String QUEUE_REQUESTS = \"gateleen.hook-reducedpropagation-queuerequests\";", "modifier": "static final", "type": "String", "declarator": "QUEUE_REQUESTS = \"gateleen.hook-reducedpropagation-queuerequests\"", "var_name": "QUEUE_REQUESTS"}, {"original_string": "private LuaScriptState startQueueTimerLuaScriptState;", "modifier": "private", "type": "LuaScriptState", "declarator": "startQueueTimerLuaScriptState", "var_name": "startQueueTimerLuaScriptState"}, {"original_string": "private LuaScriptState removeExpiredQueuesRedisCommand;", "modifier": "private", "type": "LuaScriptState", "declarator": "removeExpiredQueuesRedisCommand", "var_name": "removeExpiredQueuesRedisCommand"}], "methods": [{"identifier": "RedisReducedPropagationStorage", "parameters": "(RedisClient redisClient)", "modifiers": "public", "return": "", "signature": " RedisReducedPropagationStorage(RedisClient redisClient)", "full_signature": "public  RedisReducedPropagationStorage(RedisClient redisClient)", "class_method_signature": "RedisReducedPropagationStorage.RedisReducedPropagationStorage(RedisClient redisClient)", "testcase": false, "constructor": true}, {"identifier": "removeExpiredQueues", "parameters": "(long currentTS)", "modifiers": "@Override public", "return": "Future<List<String>>", "signature": "Future<List<String>> removeExpiredQueues(long currentTS)", "full_signature": "@Override public Future<List<String>> removeExpiredQueues(long currentTS)", "class_method_signature": "RedisReducedPropagationStorage.removeExpiredQueues(long currentTS)", "testcase": false, "constructor": false}, {"identifier": "addQueue", "parameters": "(String queue, long expireTS)", "modifiers": "@Override public", "return": "Future<Boolean>", "signature": "Future<Boolean> addQueue(String queue, long expireTS)", "full_signature": "@Override public Future<Boolean> addQueue(String queue, long expireTS)", "class_method_signature": "RedisReducedPropagationStorage.addQueue(String queue, long expireTS)", "testcase": false, "constructor": false}, {"identifier": "storeQueueRequest", "parameters": "(String queue, JsonObject queueRequest)", "modifiers": "@Override public", "return": "Future<Void>", "signature": "Future<Void> storeQueueRequest(String queue, JsonObject queueRequest)", "full_signature": "@Override public Future<Void> storeQueueRequest(String queue, JsonObject queueRequest)", "class_method_signature": "RedisReducedPropagationStorage.storeQueueRequest(String queue, JsonObject queueRequest)", "testcase": false, "constructor": false}, {"identifier": "getQueueRequest", "parameters": "(String queue)", "modifiers": "@Override public", "return": "Future<JsonObject>", "signature": "Future<JsonObject> getQueueRequest(String queue)", "full_signature": "@Override public Future<JsonObject> getQueueRequest(String queue)", "class_method_signature": "RedisReducedPropagationStorage.getQueueRequest(String queue)", "testcase": false, "constructor": false}, {"identifier": "removeQueueRequest", "parameters": "(String queue)", "modifiers": "@Override public", "return": "Future<Void>", "signature": "Future<Void> removeQueueRequest(String queue)", "full_signature": "@Override public Future<Void> removeQueueRequest(String queue)", "class_method_signature": "RedisReducedPropagationStorage.removeQueueRequest(String queue)", "testcase": false, "constructor": false}, {"identifier": "logCause", "parameters": "(AsyncResult result)", "modifiers": "private static", "return": "String", "signature": "String logCause(AsyncResult result)", "full_signature": "private static String logCause(AsyncResult result)", "class_method_signature": "RedisReducedPropagationStorage.logCause(AsyncResult result)", "testcase": false, "constructor": false}], "file": "gateleen-hook/src/main/java/org/swisspush/gateleen/hook/reducedpropagation/impl/RedisReducedPropagationStorage.java"}, "focal_method": {"identifier": "storeQueueRequest", "parameters": "(String queue, JsonObject queueRequest)", "modifiers": "@Override public", "return": "Future<Void>", "body": "@Override\n    public Future<Void> storeQueueRequest(String queue, JsonObject queueRequest) {\n        Future<Void> future = Future.future();\n\n        if(StringUtils.isEmpty(queue)){\n            future.fail(\"Queue is not allowed to be empty\");\n            return future;\n        }\n        if(queueRequest == null){\n            future.fail(\"Request is not allowed to be empty\");\n            return future;\n        }\n\n        try {\n            String queueRequestStr = queueRequest.encode();\n            redisClient.hset(QUEUE_REQUESTS, queue, queueRequestStr, reply -> {\n                if(reply.failed()){\n                    String message = \"Failed to store request for queue '\"+queue+\"'. Cause: \" + logCause(reply);\n                    log.error(message);\n                    future.fail(message);\n                } else {\n                    future.complete();\n                }\n            });\n        } catch (DecodeException ex){\n            future.fail(\"Failed to decode request for queue '\"+queue+\"'\");\n            return future;\n        }\n        return future;\n    }", "signature": "Future<Void> storeQueueRequest(String queue, JsonObject queueRequest)", "full_signature": "@Override public Future<Void> storeQueueRequest(String queue, JsonObject queueRequest)", "class_method_signature": "RedisReducedPropagationStorage.storeQueueRequest(String queue, JsonObject queueRequest)", "testcase": false, "constructor": false, "invocations": ["future", "isEmpty", "fail", "fail", "encode", "hset", "failed", "logCause", "error", "fail", "complete", "fail"]}, "repository": {"repo_id": 52609528, "url": "https://github.com/swisspush/gateleen", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 63, "size": 2919, "license": "licensed"}}