{"test_class": {"identifier": "TestMMICallManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MMICallManager cm;", "modifier": "private", "type": "MMICallManager", "declarator": "cm", "var_name": "cm"}], "file": "org.jvoicexml.callmanager.mmi/src/test/java/org/jvoicexml/callmanager/mmi/TestMMICallManager.java"}, "test_case": {"identifier": "testCreateSession", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateSession() throws Exception, JVoiceXMLEvent {\n        final Session session = cm.createSession(null);\n        Assert.assertNotNull(session);\n        cm.cleanupSession(session);\n    }", "signature": "void testCreateSession()", "full_signature": "@Test public void testCreateSession()", "class_method_signature": "TestMMICallManager.testCreateSession()", "testcase": true, "constructor": false, "invocations": ["createSession", "assertNotNull", "cleanupSession"]}, "focal_class": {"identifier": "MMICallManager", "superclass": "", "interfaces": "implements CallManager", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(MMICallManager.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(MMICallManager.class)", "var_name": "LOGGER"}, {"original_string": "private JVoiceXml jvxml;", "modifier": "private", "type": "JVoiceXml", "declarator": "jvxml", "var_name": "jvxml"}, {"original_string": "private ETLProtocolAdapter adapter;", "modifier": "private", "type": "ETLProtocolAdapter", "declarator": "adapter", "var_name": "adapter"}, {"original_string": "private VoiceModalityComponent mc;", "modifier": "private", "type": "VoiceModalityComponent", "declarator": "mc", "var_name": "mc"}, {"original_string": "private ConnectionInformationFactory factory;", "modifier": "private", "type": "ConnectionInformationFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private final Map<Session, ConnectionInformationController> sessions;", "modifier": "private final", "type": "Map<Session, ConnectionInformationController>", "declarator": "sessions", "var_name": "sessions"}, {"original_string": "private String call;", "modifier": "private", "type": "String", "declarator": "call", "var_name": "call"}, {"original_string": "private String input;", "modifier": "private", "type": "String", "declarator": "input", "var_name": "input"}, {"original_string": "private String output;", "modifier": "private", "type": "String", "declarator": "output", "var_name": "output"}, {"original_string": "private String servletBaseUri;", "modifier": "private", "type": "String", "declarator": "servletBaseUri", "var_name": "servletBaseUri"}, {"original_string": "private ExtensionNotificationDataConverter converter;", "modifier": "private", "type": "ExtensionNotificationDataConverter", "declarator": "converter", "var_name": "converter"}, {"original_string": "private ExtensionNotificationDataExtractor extractor;", "modifier": "private", "type": "ExtensionNotificationDataExtractor", "declarator": "extractor", "var_name": "extractor"}], "methods": [{"identifier": "MMICallManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " MMICallManager()", "full_signature": "public  MMICallManager()", "class_method_signature": "MMICallManager.MMICallManager()", "testcase": false, "constructor": true}, {"identifier": "setCall", "parameters": "(final String value)", "modifiers": "public", "return": "void", "signature": "void setCall(final String value)", "full_signature": "public void setCall(final String value)", "class_method_signature": "MMICallManager.setCall(final String value)", "testcase": false, "constructor": false}, {"identifier": "setInput", "parameters": "(final String value)", "modifiers": "public", "return": "void", "signature": "void setInput(final String value)", "full_signature": "public void setInput(final String value)", "class_method_signature": "MMICallManager.setInput(final String value)", "testcase": false, "constructor": false}, {"identifier": "setOutput", "parameters": "(final String value)", "modifiers": "public", "return": "void", "signature": "void setOutput(final String value)", "full_signature": "public void setOutput(final String value)", "class_method_signature": "MMICallManager.setOutput(final String value)", "testcase": false, "constructor": false}, {"identifier": "setServletBaseUri", "parameters": "(final String uri)", "modifiers": "public", "return": "void", "signature": "void setServletBaseUri(final String uri)", "full_signature": "public void setServletBaseUri(final String uri)", "class_method_signature": "MMICallManager.setServletBaseUri(final String uri)", "testcase": false, "constructor": false}, {"identifier": "setProtocolAdapter", "parameters": "(final ETLProtocolAdapter protocolAdapter)", "modifiers": "public", "return": "void", "signature": "void setProtocolAdapter(final ETLProtocolAdapter protocolAdapter)", "full_signature": "public void setProtocolAdapter(final ETLProtocolAdapter protocolAdapter)", "class_method_signature": "MMICallManager.setProtocolAdapter(final ETLProtocolAdapter protocolAdapter)", "testcase": false, "constructor": false}, {"identifier": "setExtensionNotificationDataConverter", "parameters": "(\n            final ExtensionNotificationDataConverter conv)", "modifiers": "public", "return": "void", "signature": "void setExtensionNotificationDataConverter(\n            final ExtensionNotificationDataConverter conv)", "full_signature": "public void setExtensionNotificationDataConverter(\n            final ExtensionNotificationDataConverter conv)", "class_method_signature": "MMICallManager.setExtensionNotificationDataConverter(\n            final ExtensionNotificationDataConverter conv)", "testcase": false, "constructor": false}, {"identifier": "setExtensionNotificationDataExtractor", "parameters": "(\n            final ExtensionNotificationDataExtractor ext)", "modifiers": "public", "return": "void", "signature": "void setExtensionNotificationDataExtractor(\n            final ExtensionNotificationDataExtractor ext)", "full_signature": "public void setExtensionNotificationDataExtractor(\n            final ExtensionNotificationDataExtractor ext)", "class_method_signature": "MMICallManager.setExtensionNotificationDataExtractor(\n            final ExtensionNotificationDataExtractor ext)", "testcase": false, "constructor": false}, {"identifier": "getExtensionNotificationDataConverter", "parameters": "()", "modifiers": "public", "return": "ExtensionNotificationDataConverter", "signature": "ExtensionNotificationDataConverter getExtensionNotificationDataConverter()", "full_signature": "public ExtensionNotificationDataConverter getExtensionNotificationDataConverter()", "class_method_signature": "MMICallManager.getExtensionNotificationDataConverter()", "testcase": false, "constructor": false}, {"identifier": "setConnectionInformationFactory", "parameters": "(\n            final ConnectionInformationFactory connectionInformationFactory)", "modifiers": "public", "return": "void", "signature": "void setConnectionInformationFactory(\n            final ConnectionInformationFactory connectionInformationFactory)", "full_signature": "public void setConnectionInformationFactory(\n            final ConnectionInformationFactory connectionInformationFactory)", "class_method_signature": "MMICallManager.setConnectionInformationFactory(\n            final ConnectionInformationFactory connectionInformationFactory)", "testcase": false, "constructor": false}, {"identifier": "setJVoiceXml", "parameters": "(final JVoiceXmlCore jvoicexml)", "modifiers": "@Override public", "return": "void", "signature": "void setJVoiceXml(final JVoiceXmlCore jvoicexml)", "full_signature": "@Override public void setJVoiceXml(final JVoiceXmlCore jvoicexml)", "class_method_signature": "MMICallManager.setJVoiceXml(final JVoiceXmlCore jvoicexml)", "testcase": false, "constructor": false}, {"identifier": "getVoiceModalityComponent", "parameters": "()", "modifiers": "", "return": "VoiceModalityComponent", "signature": "VoiceModalityComponent getVoiceModalityComponent()", "full_signature": " VoiceModalityComponent getVoiceModalityComponent()", "class_method_signature": "MMICallManager.getVoiceModalityComponent()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void start()", "full_signature": "@Override public void start()", "class_method_signature": "MMICallManager.start()", "testcase": false, "constructor": false}, {"identifier": "isStarted", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isStarted()", "full_signature": "@Override public boolean isStarted()", "class_method_signature": "MMICallManager.isStarted()", "testcase": false, "constructor": false}, {"identifier": "createSession", "parameters": "(final CallMetadata data)", "modifiers": "public", "return": "Session", "signature": "Session createSession(final CallMetadata data)", "full_signature": "public Session createSession(final CallMetadata data)", "class_method_signature": "MMICallManager.createSession(final CallMetadata data)", "testcase": false, "constructor": false}, {"identifier": "cleanupSession", "parameters": "(final Session session)", "modifiers": "public", "return": "void", "signature": "void cleanupSession(final Session session)", "full_signature": "public void cleanupSession(final Session session)", "class_method_signature": "MMICallManager.cleanupSession(final Session session)", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "MMICallManager.stop()", "testcase": false, "constructor": false}], "file": "org.jvoicexml.callmanager.mmi/src/main/java/org/jvoicexml/callmanager/mmi/MMICallManager.java"}, "focal_method": {"identifier": "createSession", "parameters": "(final CallMetadata data)", "modifiers": "public", "return": "Session", "body": "public Session createSession(final CallMetadata data) throws ErrorEvent,\n            UnsupportedResourceIdentifierException {\n        final ConnectionInformationController controller = factory\n                .createConnectionInformation(call, output, input);\n        final ConnectionInformation info = controller\n                .getConnectionInformation();\n        if (info instanceof ConnectionInformationCallMetadataModifiable) {\n            final ConnectionInformationCallMetadataModifiable modifiable =\n                    (ConnectionInformationCallMetadataModifiable) info;\n            modifiable.setProfile(MmiProfile.NAME);\n            modifiable.setCalledDevice(data.getCalledDevice());\n            modifiable.setCallingDevice(data.getCallingDevice());\n            modifiable.setProtocolName(data.getProtocolName());\n            modifiable.setProtocolVersion(data.getProtocolVersion());\n        }\n        final Session session = jvxml.createSession(info);\n        sessions.put(session, controller);\n        if (LOGGER.isDebugEnabled()) {\n            LOGGER.debug(\"session '\" + session.getSessionId() + \"' created\");\n        }\n        return session;\n    }", "signature": "Session createSession(final CallMetadata data)", "full_signature": "public Session createSession(final CallMetadata data)", "class_method_signature": "MMICallManager.createSession(final CallMetadata data)", "testcase": false, "constructor": false, "invocations": ["createConnectionInformation", "getConnectionInformation", "setProfile", "setCalledDevice", "getCalledDevice", "setCallingDevice", "getCallingDevice", "setProtocolName", "getProtocolName", "setProtocolVersion", "getProtocolVersion", "createSession", "put", "isDebugEnabled", "debug", "getSessionId"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}