{"test_class": {"identifier": "GetUserTest", "superclass": "extends BaseUseCaseTest<GetUser, UserRepository>", "interfaces": "", "fields": [{"original_string": "private static final String FAKE_USER_ID = \"123\";", "modifier": "private static final", "type": "String", "declarator": "FAKE_USER_ID = \"123\"", "var_name": "FAKE_USER_ID"}], "file": "domain/src/test/java/com/buddysearch/android/domain/interactor/user/GetUserTest.java"}, "test_case": {"identifier": "testBuildUseCaseObservable", "parameters": "()", "modifiers": "@Test @Override public", "return": "void", "body": "@Test\n    @Override\n    public void testBuildUseCaseObservable() {\n        testBuildUseCaseObservable(FAKE_USER_ID, new Action0() {\n            @Override\n            public void call() {\n                verify(mockRepository).getUser(FAKE_USER_ID, mockMessenger);\n            }\n        });\n    }", "signature": "void testBuildUseCaseObservable()", "full_signature": "@Test @Override public void testBuildUseCaseObservable()", "class_method_signature": "GetUserTest.testBuildUseCaseObservable()", "testcase": true, "constructor": false, "invocations": ["testBuildUseCaseObservable", "getUser", "verify"]}, "focal_class": {"identifier": "GetUser", "superclass": "extends UseCase<String, UserDto, UserRepository>", "interfaces": "implements OnUserChangedListener", "fields": [{"original_string": "@Setter\n    private OnUserChangedListener onUserChangedListener;", "modifier": "@Setter\n    private", "type": "OnUserChangedListener", "declarator": "onUserChangedListener", "var_name": "onUserChangedListener"}], "methods": [{"identifier": "GetUser", "parameters": "(UserRepository repository,\n                   Messenger messenger,\n                   @Named(\"Thread\") Scheduler threadScheduler,\n                   @Named(\"PostExecution\") Scheduler postExecutionScheduler)", "modifiers": "@Inject public", "return": "", "signature": " GetUser(UserRepository repository,\n                   Messenger messenger,\n                   @Named(\"Thread\") Scheduler threadScheduler,\n                   @Named(\"PostExecution\") Scheduler postExecutionScheduler)", "full_signature": "@Inject public  GetUser(UserRepository repository,\n                   Messenger messenger,\n                   @Named(\"Thread\") Scheduler threadScheduler,\n                   @Named(\"PostExecution\") Scheduler postExecutionScheduler)", "class_method_signature": "GetUser.GetUser(UserRepository repository,\n                   Messenger messenger,\n                   @Named(\"Thread\") Scheduler threadScheduler,\n                   @Named(\"PostExecution\") Scheduler postExecutionScheduler)", "testcase": false, "constructor": true}, {"identifier": "buildObservable", "parameters": "(String userId)", "modifiers": "@Override protected", "return": "Observable<UserDto>", "signature": "Observable<UserDto> buildObservable(String userId)", "full_signature": "@Override protected Observable<UserDto> buildObservable(String userId)", "class_method_signature": "GetUser.buildObservable(String userId)", "testcase": false, "constructor": false}, {"identifier": "onDataChanged", "parameters": "(String userId)", "modifiers": "@Override public", "return": "void", "signature": "void onDataChanged(String userId)", "full_signature": "@Override public void onDataChanged(String userId)", "class_method_signature": "GetUser.onDataChanged(String userId)", "testcase": false, "constructor": false}], "file": "domain/src/main/java/com/buddysearch/android/domain/interactor/user/GetUser.java"}, "focal_method": {"identifier": "GetUser", "parameters": "(UserRepository repository,\n                   Messenger messenger,\n                   @Named(\"Thread\") Scheduler threadScheduler,\n                   @Named(\"PostExecution\") Scheduler postExecutionScheduler)", "modifiers": "@Inject public", "return": "", "body": "@Inject\n    public GetUser(UserRepository repository,\n                   Messenger messenger,\n                   @Named(\"Thread\") Scheduler threadScheduler,\n                   @Named(\"PostExecution\") Scheduler postExecutionScheduler) {\n        super(repository, messenger, threadScheduler, postExecutionScheduler);\n    }", "signature": " GetUser(UserRepository repository,\n                   Messenger messenger,\n                   @Named(\"Thread\") Scheduler threadScheduler,\n                   @Named(\"PostExecution\") Scheduler postExecutionScheduler)", "full_signature": "@Inject public  GetUser(UserRepository repository,\n                   Messenger messenger,\n                   @Named(\"Thread\") Scheduler threadScheduler,\n                   @Named(\"PostExecution\") Scheduler postExecutionScheduler)", "class_method_signature": "GetUser.GetUser(UserRepository repository,\n                   Messenger messenger,\n                   @Named(\"Thread\") Scheduler threadScheduler,\n                   @Named(\"PostExecution\") Scheduler postExecutionScheduler)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 64247174, "url": "https://github.com/ihorvitruk/buddysearch", "language": "Java", "is_fork": false, "fork_count": 45, "stargazer_count": 206, "size": 15884, "license": "licensed"}}