{"test_class": {"identifier": "PriceCalculatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Colors color1 = Colors.RED;", "modifier": "", "type": "Colors", "declarator": "color1 = Colors.RED", "var_name": "color1"}, {"original_string": "Size size1 = Size.XXL;", "modifier": "", "type": "Size", "declarator": "size1 = Size.XXL", "var_name": "size1"}, {"original_string": "Product product1 = new Product(\"T-Shirt\", color1, size1, 20.50);", "modifier": "", "type": "Product", "declarator": "product1 = new Product(\"T-Shirt\", color1, size1, 20.50)", "var_name": "product1"}, {"original_string": "Colors color2 = Colors.RED;", "modifier": "", "type": "Colors", "declarator": "color2 = Colors.RED", "var_name": "color2"}, {"original_string": "Size size2 = Size.S;", "modifier": "", "type": "Size", "declarator": "size2 = Size.S", "var_name": "size2"}, {"original_string": "Product product2 = new Product(\"T-Shirt\", color2, size2, 15.00);", "modifier": "", "type": "Product", "declarator": "product2 = new Product(\"T-Shirt\", color2, size2, 15.00)", "var_name": "product2"}], "file": "Week3/Day4/src/test/java/ExerciseEnums/PriceCalculatorTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test() {\n\t\tassertEquals(22.55, PriceCalculator.calculatePrice(product1), 0);\n\t\tassertEquals(15.00, PriceCalculator.calculatePrice(product2), 0);\n\t}", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "PriceCalculatorTest.test()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "calculatePrice", "assertEquals", "calculatePrice"]}, "focal_class": {"identifier": "PriceCalculator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "calculatePrice", "parameters": "(Product product)", "modifiers": "public static", "return": "double", "signature": "double calculatePrice(Product product)", "full_signature": "public static double calculatePrice(Product product)", "class_method_signature": "PriceCalculator.calculatePrice(Product product)", "testcase": false, "constructor": false}], "file": "Week3/Day4/src/main/java/ExerciseEnums/PriceCalculator.java"}, "focal_method": {"identifier": "calculatePrice", "parameters": "(Product product)", "modifiers": "public static", "return": "double", "body": "public static double calculatePrice(Product product) {\n\t\treturn product.getPrice() * product.getSize().getSurchargePercentage();\n\t}", "signature": "double calculatePrice(Product product)", "full_signature": "public static double calculatePrice(Product product)", "class_method_signature": "PriceCalculator.calculatePrice(Product product)", "testcase": false, "constructor": false, "invocations": ["getPrice", "getSurchargePercentage", "getSize"]}, "repository": {"repo_id": 83988988, "url": "https://github.com/fderisio/Propulsion-Academy", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 18119, "license": "licensed"}}