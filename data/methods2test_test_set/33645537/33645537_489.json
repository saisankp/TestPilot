{"test_class": {"identifier": "IterationTest", "superclass": "", "interfaces": "", "fields": [], "file": "concurrency/src/test/java/com/insightfullogic/java8/examples/chapter3/IterationTest.java"}, "test_case": {"identifier": "lazyPrintOuts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void lazyPrintOuts() {\n        Iteration iteration = new Iteration();\n        iteration.filterArtistsFromLondonPrinted(SampleData.membersOfTheBeatles);\n    }", "signature": "void lazyPrintOuts()", "full_signature": "@Test public void lazyPrintOuts()", "class_method_signature": "IterationTest.lazyPrintOuts()", "testcase": true, "constructor": false, "invocations": ["filterArtistsFromLondonPrinted"]}, "focal_class": {"identifier": "Iteration", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "externalCountArtistsFromLondon", "parameters": "(List<Artist> allArtists)", "modifiers": "public", "return": "int", "signature": "int externalCountArtistsFromLondon(List<Artist> allArtists)", "full_signature": "public int externalCountArtistsFromLondon(List<Artist> allArtists)", "class_method_signature": "Iteration.externalCountArtistsFromLondon(List<Artist> allArtists)", "testcase": false, "constructor": false}, {"identifier": "externalCountArtistsFromLondonExpanded", "parameters": "(List<Artist> allArtists)", "modifiers": "public", "return": "int", "signature": "int externalCountArtistsFromLondonExpanded(List<Artist> allArtists)", "full_signature": "public int externalCountArtistsFromLondonExpanded(List<Artist> allArtists)", "class_method_signature": "Iteration.externalCountArtistsFromLondonExpanded(List<Artist> allArtists)", "testcase": false, "constructor": false}, {"identifier": "internalCountArtistsFromLondon", "parameters": "(List<Artist> allArtists)", "modifiers": "public", "return": "long", "signature": "long internalCountArtistsFromLondon(List<Artist> allArtists)", "full_signature": "public long internalCountArtistsFromLondon(List<Artist> allArtists)", "class_method_signature": "Iteration.internalCountArtistsFromLondon(List<Artist> allArtists)", "testcase": false, "constructor": false}, {"identifier": "filterArtistsFromLondon", "parameters": "(List<Artist> allArtists)", "modifiers": "public", "return": "void", "signature": "void filterArtistsFromLondon(List<Artist> allArtists)", "full_signature": "public void filterArtistsFromLondon(List<Artist> allArtists)", "class_method_signature": "Iteration.filterArtistsFromLondon(List<Artist> allArtists)", "testcase": false, "constructor": false}, {"identifier": "filterArtistsFromLondonPrinted", "parameters": "(List<Artist> allArtists)", "modifiers": "public", "return": "void", "signature": "void filterArtistsFromLondonPrinted(List<Artist> allArtists)", "full_signature": "public void filterArtistsFromLondonPrinted(List<Artist> allArtists)", "class_method_signature": "Iteration.filterArtistsFromLondonPrinted(List<Artist> allArtists)", "testcase": false, "constructor": false}, {"identifier": "internalCountArtistsFromLondonPrinted", "parameters": "(List<Artist> allArtists)", "modifiers": "public", "return": "long", "signature": "long internalCountArtistsFromLondonPrinted(List<Artist> allArtists)", "full_signature": "public long internalCountArtistsFromLondonPrinted(List<Artist> allArtists)", "class_method_signature": "Iteration.internalCountArtistsFromLondonPrinted(List<Artist> allArtists)", "testcase": false, "constructor": false}], "file": "concurrency/src/main/java/com/insightfullogic/java8/examples/chapter3/Iteration.java"}, "focal_method": {"identifier": "filterArtistsFromLondonPrinted", "parameters": "(List<Artist> allArtists)", "modifiers": "public", "return": "void", "body": "public void filterArtistsFromLondonPrinted(List<Artist> allArtists) {\n        // BEGIN filter_londoners_printed\nallArtists.stream()\n          .filter(artist -> {\n              System.out.println(artist.getName());\n              return artist.isFrom(\"London\");\n          });\n        // END filter_londoners_printed\n    }", "signature": "void filterArtistsFromLondonPrinted(List<Artist> allArtists)", "full_signature": "public void filterArtistsFromLondonPrinted(List<Artist> allArtists)", "class_method_signature": "Iteration.filterArtistsFromLondonPrinted(List<Artist> allArtists)", "testcase": false, "constructor": false, "invocations": ["filter", "stream", "println", "getName", "isFrom"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}