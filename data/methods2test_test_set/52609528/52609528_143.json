{"test_class": {"identifier": "KafkaProducerRecordBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "gateleen-kafka/src/test/java/org/swisspush/gateleen/kafka/KafkaProducerRecordBuilderTest.java"}, "test_case": {"identifier": "buildRecordsInvalidJson", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void buildRecordsInvalidJson() throws ValidationException {\n        thrown.expect( ValidationException.class );\n        thrown.expectMessage(\"Error while parsing payload\");\n        buildRecords(\"myTopic\", Buffer.buffer(\"notValidJson\"));\n    }", "signature": "void buildRecordsInvalidJson()", "full_signature": "@Test public void buildRecordsInvalidJson()", "class_method_signature": "KafkaProducerRecordBuilderTest.buildRecordsInvalidJson()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "buildRecords", "buffer"]}, "focal_class": {"identifier": "KafkaProducerRecordBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String RECORDS = \"records\";", "modifier": "private static final", "type": "String", "declarator": "RECORDS = \"records\"", "var_name": "RECORDS"}, {"original_string": "private static final String KEY = \"key\";", "modifier": "private static final", "type": "String", "declarator": "KEY = \"key\"", "var_name": "KEY"}, {"original_string": "private static final String VALUE = \"value\";", "modifier": "private static final", "type": "String", "declarator": "VALUE = \"value\"", "var_name": "VALUE"}, {"original_string": "private static final String HEADERS = \"headers\";", "modifier": "private static final", "type": "String", "declarator": "HEADERS = \"headers\"", "var_name": "HEADERS"}], "methods": [{"identifier": "buildRecords", "parameters": "(String topic, Buffer payload)", "modifiers": "static", "return": "List<KafkaProducerRecord<String, String>>", "signature": "List<KafkaProducerRecord<String, String>> buildRecords(String topic, Buffer payload)", "full_signature": "static List<KafkaProducerRecord<String, String>> buildRecords(String topic, Buffer payload)", "class_method_signature": "KafkaProducerRecordBuilder.buildRecords(String topic, Buffer payload)", "testcase": false, "constructor": false}, {"identifier": "fromRecordJsonObject", "parameters": "(String topic, JsonObject recordObj)", "modifiers": "private static", "return": "KafkaProducerRecord<String, String>", "signature": "KafkaProducerRecord<String, String> fromRecordJsonObject(String topic, JsonObject recordObj)", "full_signature": "private static KafkaProducerRecord<String, String> fromRecordJsonObject(String topic, JsonObject recordObj)", "class_method_signature": "KafkaProducerRecordBuilder.fromRecordJsonObject(String topic, JsonObject recordObj)", "testcase": false, "constructor": false}], "file": "gateleen-kafka/src/main/java/org/swisspush/gateleen/kafka/KafkaProducerRecordBuilder.java"}, "focal_method": {"identifier": "buildRecords", "parameters": "(String topic, Buffer payload)", "modifiers": "static", "return": "List<KafkaProducerRecord<String, String>>", "body": "static List<KafkaProducerRecord<String, String>> buildRecords(String topic, Buffer payload) throws ValidationException {\n        List<KafkaProducerRecord<String, String>> kafkaProducerRecords = new ArrayList<>();\n        JsonObject payloadObj;\n        try {\n            payloadObj = new JsonObject(payload);\n        } catch (DecodeException de){\n            throw new ValidationException(\"Error while parsing payload\");\n        }\n\n        JsonArray recordsArray;\n        try {\n            recordsArray = payloadObj.getJsonArray(RECORDS);\n            if(recordsArray == null){\n                throw new ValidationException(\"Missing 'records' array\");\n            }\n            for (int i = 0; i < recordsArray.size(); i++) {\n                kafkaProducerRecords.add(fromRecordJsonObject(topic, recordsArray.getJsonObject(i)));\n            }\n        } catch (ClassCastException cce) {\n            throw new ValidationException(\"Property '\"+RECORDS+\"' must be of type JsonArray holding JsonObject objects\");\n        }\n\n        return kafkaProducerRecords;\n    }", "signature": "List<KafkaProducerRecord<String, String>> buildRecords(String topic, Buffer payload)", "full_signature": "static List<KafkaProducerRecord<String, String>> buildRecords(String topic, Buffer payload)", "class_method_signature": "KafkaProducerRecordBuilder.buildRecords(String topic, Buffer payload)", "testcase": false, "constructor": false, "invocations": ["getJsonArray", "size", "add", "fromRecordJsonObject", "getJsonObject"]}, "repository": {"repo_id": 52609528, "url": "https://github.com/swisspush/gateleen", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 63, "size": 2919, "license": "licensed"}}