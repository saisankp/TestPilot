{"test_class": {"identifier": "TomcatHttpBinderTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-remoting/dubbo-remoting-http/src/test/java/org/apache/dubbo/remoting/http/tomcat/TomcatHttpBinderTest.java"}, "test_case": {"identifier": "shouldAbleHandleRequestForTomcatBinder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldAbleHandleRequestForTomcatBinder() throws Exception {\n        int port = NetUtils.getAvailablePort();\n        URL url = new URL(\"http\", \"localhost\", port,\n                new String[]{Constants.BIND_PORT_KEY, String.valueOf(port)});\n\n        HttpServer httpServer = new TomcatHttpBinder().bind(url, new HttpHandler() {\n            @Override\n            public void handle(HttpServletRequest request, HttpServletResponse response) throws IOException {\n                response.getWriter().write(\"Tomcat\");\n            }\n        });\n\n        String response = Request.Get(url.toJavaURL().toURI()).execute().returnContent().asString();\n\n        assertThat(response, is(\"Tomcat\"));\n\n        httpServer.close();\n    }", "signature": "void shouldAbleHandleRequestForTomcatBinder()", "full_signature": "@Test public void shouldAbleHandleRequestForTomcatBinder()", "class_method_signature": "TomcatHttpBinderTest.shouldAbleHandleRequestForTomcatBinder()", "testcase": true, "constructor": false, "invocations": ["getAvailablePort", "valueOf", "bind", "write", "getWriter", "asString", "returnContent", "execute", "Get", "toURI", "toJavaURL", "assertThat", "is", "close"]}, "focal_class": {"identifier": "TomcatHttpBinder", "superclass": "", "interfaces": "implements HttpBinder", "fields": [], "methods": [{"identifier": "bind", "parameters": "(URL url, HttpHandler handler)", "modifiers": "@Override public", "return": "HttpServer", "signature": "HttpServer bind(URL url, HttpHandler handler)", "full_signature": "@Override public HttpServer bind(URL url, HttpHandler handler)", "class_method_signature": "TomcatHttpBinder.bind(URL url, HttpHandler handler)", "testcase": false, "constructor": false}], "file": "dubbo-remoting/dubbo-remoting-http/src/main/java/org/apache/dubbo/remoting/http/tomcat/TomcatHttpBinder.java"}, "focal_method": {"identifier": "bind", "parameters": "(URL url, HttpHandler handler)", "modifiers": "@Override public", "return": "HttpServer", "body": "@Override\n    public HttpServer bind(URL url, HttpHandler handler) {\n        return new TomcatHttpServer(url, handler);\n    }", "signature": "HttpServer bind(URL url, HttpHandler handler)", "full_signature": "@Override public HttpServer bind(URL url, HttpHandler handler)", "class_method_signature": "TomcatHttpBinder.bind(URL url, HttpHandler handler)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}