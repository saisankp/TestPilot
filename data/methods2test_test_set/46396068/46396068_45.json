{"test_class": {"identifier": "SplitTest", "superclass": "extends TestBase", "interfaces": "", "fields": [], "file": "hbase0.98/hbase-manager-0.98/src/test/java/com/kakao/hbase/manager/command/SplitTest.java"}, "test_case": {"identifier": "testSplitWithFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSplitWithFile() throws Exception {\n        final String keyFileName = \"exportkeys_test.keys\";\n\n        List<HRegionInfo> regionInfoList;\n        try {\n            {\n                // export\n                splitTable(\"a\".getBytes());\n                splitTable(\"b\".getBytes());\n                waitForSplitting(3);\n\n                String[] argsParam = {\"zookeeper\", tableName, keyFileName, \"--force-proceed\"};\n                Args args = new ManagerArgs(argsParam);\n                assertEquals(\"zookeeper\", args.getZookeeperQuorum());\n                ExportKeys command = new ExportKeys(admin, args);\n                command.run();\n\n                // merge all regions into one\n                regionInfoList = getRegionInfoList(tableName);\n                mergeRegion(regionInfoList.get(0), regionInfoList.get(1));\n                regionInfoList = getRegionInfoList(tableName);\n                mergeRegion(regionInfoList.get(0), regionInfoList.get(1));\n                assertEquals(1, getRegionInfoList(tableName).size());\n            }\n\n            String[] argsParam = {\"zookeeper\", tableName, \"filE\", keyFileName, \"--force-proceed\"};\n            Args args = new ManagerArgs(argsParam);\n            assertEquals(\"zookeeper\", args.getZookeeperQuorum());\n            Split command = new Split(admin, args);\n\n            command.run();\n            waitForSplitting(3);\n\n            regionInfoList = getRegionInfoList(tableName);\n            assertEquals(3, regionInfoList.size());\n        } finally {\n            Files.delete(Paths.get(keyFileName));\n        }\n    }", "signature": "void testSplitWithFile()", "full_signature": "@Test public void testSplitWithFile()", "class_method_signature": "SplitTest.testSplitWithFile()", "testcase": true, "constructor": false, "invocations": ["splitTable", "getBytes", "splitTable", "getBytes", "waitForSplitting", "assertEquals", "getZookeeperQuorum", "run", "getRegionInfoList", "mergeRegion", "get", "get", "getRegionInfoList", "mergeRegion", "get", "get", "assertEquals", "size", "getRegionInfoList", "assertEquals", "getZookeeperQuorum", "run", "waitForSplitting", "getRegionInfoList", "assertEquals", "size", "delete", "get"]}, "focal_class": {"identifier": "Split", "superclass": "", "interfaces": "implements Command", "fields": [{"original_string": "private final HBaseAdmin admin;", "modifier": "private final", "type": "HBaseAdmin", "declarator": "admin", "var_name": "admin"}, {"original_string": "private final Args args;", "modifier": "private final", "type": "Args", "declarator": "args", "var_name": "args"}], "methods": [{"identifier": "Split", "parameters": "(HBaseAdmin admin, Args args)", "modifiers": "public", "return": "", "signature": " Split(HBaseAdmin admin, Args args)", "full_signature": "public  Split(HBaseAdmin admin, Args args)", "class_method_signature": "Split.Split(HBaseAdmin admin, Args args)", "testcase": false, "constructor": true}, {"identifier": "usage", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String usage()", "full_signature": "public static String usage()", "class_method_signature": "Split.usage()", "testcase": false, "constructor": false}, {"identifier": "tableSet", "parameters": "(HBaseAdmin admin, Args args)", "modifiers": "private static", "return": "Set<String>", "signature": "Set<String> tableSet(HBaseAdmin admin, Args args)", "full_signature": "private static Set<String> tableSet(HBaseAdmin admin, Args args)", "class_method_signature": "Split.tableSet(HBaseAdmin admin, Args args)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "Split.run()", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(HTable table, byte[] splitPoint)", "modifiers": "private", "return": "void", "signature": "void split(HTable table, byte[] splitPoint)", "full_signature": "private void split(HTable table, byte[] splitPoint)", "class_method_signature": "Split.split(HTable table, byte[] splitPoint)", "testcase": false, "constructor": false}], "file": "hbase0.98/hbase-manager-0.98/src/main/java/com/kakao/hbase/manager/command/Split.java"}, "focal_method": {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void run() throws IOException, DecoderException {\n        String action = ((String) args.getOptionSet().nonOptionArguments().get(2)).toLowerCase();\n        SplitAction splitAction = SplitAction.valueOf(action);\n        Set<String> tableSet = tableSet(admin, args);\n        Map<String, List<byte[]>> splitMap = splitAction.split(tableSet, args);\n\n        if (!args.isForceProceed() && !Util.askProceed()) return;\n\n        for (Map.Entry<String, List<byte[]>> entry : splitMap.entrySet()) {\n            String tableName = entry.getKey();\n            try (HTable table = new HTable(admin.getConfiguration(), tableName)) {\n                for (byte[] splitPoint : entry.getValue()) {\n                    System.out.print(\"splitting - \" + tableName + \" - \" + Bytes.toStringBinary(splitPoint));\n                    try {\n                        for (int i = 0; i < Constant.TRY_MAX; i++) {\n                            try {\n                                split(table, splitPoint);\n                                break;\n                            } catch (NotServingRegionException e) {\n                                Thread.sleep(Constant.WAIT_INTERVAL_MS);\n                            }\n                            if (i == Constant.TRY_MAX - 1)\n                                throw new RuntimeException(\"Splitting is not finished in \" + (Constant.TRY_MAX * Constant.WAIT_INTERVAL_MS / 1000) + \" seconds.\");\n                        }\n                    } catch (IOException e) {\n                        if (!e.getMessage().contains(\"should not give a splitkey which equals to startkey\")) throw e;\n                        System.out.println(\" - SKIPPING\");\n                        continue;\n                    }\n                    System.out.println(\" - OK\");\n                }\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "Split.run()", "testcase": false, "constructor": false, "invocations": ["toLowerCase", "get", "nonOptionArguments", "getOptionSet", "valueOf", "tableSet", "split", "isForceProceed", "askProceed", "entrySet", "getKey", "getConfiguration", "getValue", "print", "toStringBinary", "split", "sleep", "contains", "getMessage", "println", "println", "printStackTrace"]}, "repository": {"repo_id": 46396068, "url": "https://github.com/kakao/hbase-tools", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 49, "size": 1758, "license": "licensed"}}