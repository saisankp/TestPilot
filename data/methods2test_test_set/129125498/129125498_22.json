{"test_class": {"identifier": "MappedMetricDataJsonSerdeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MappedMetricDataJsonSerde serdeUnderTest;", "modifier": "private", "type": "MappedMetricDataJsonSerde", "declarator": "serdeUnderTest", "var_name": "serdeUnderTest"}, {"original_string": "private ObjectMapper objectMapper;", "modifier": "private", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}, {"original_string": "private MappedMetricData mappedMetricData;", "modifier": "private", "type": "MappedMetricData", "declarator": "mappedMetricData", "var_name": "mappedMetricData"}], "file": "kafka/src/test/java/com/expedia/adaptivealerting/kafka/serde/MappedMetricDataJsonSerdeTest.java"}, "test_case": {"identifier": "testDeserialize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDeserialize() throws Exception {\n        val expected = TestObjectMother.mappedMetricData();\n        val expectedBytes = objectMapper.writeValueAsBytes(expected);\n        val actual = serdeUnderTest.deserializer().deserialize(\"some-topic\", expectedBytes);\n        assertEquals(expected, actual);\n    }", "signature": "void testDeserialize()", "full_signature": "@Test public void testDeserialize()", "class_method_signature": "MappedMetricDataJsonSerdeTest.testDeserialize()", "testcase": true, "constructor": false, "invocations": ["mappedMetricData", "writeValueAsBytes", "deserialize", "deserializer", "assertEquals"]}, "focal_class": {"identifier": "MappedMetricDataJsonSerde", "superclass": "", "interfaces": "implements Serde<MappedMetricData>", "fields": [], "methods": [{"identifier": "configure", "parameters": "(Map<String, ?> map, boolean b)", "modifiers": "@Override public", "return": "void", "signature": "void configure(Map<String, ?> map, boolean b)", "full_signature": "@Override public void configure(Map<String, ?> map, boolean b)", "class_method_signature": "MappedMetricDataJsonSerde.configure(Map<String, ?> map, boolean b)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "MappedMetricDataJsonSerde.close()", "testcase": false, "constructor": false}, {"identifier": "serializer", "parameters": "()", "modifiers": "@Override public", "return": "Serializer<MappedMetricData>", "signature": "Serializer<MappedMetricData> serializer()", "full_signature": "@Override public Serializer<MappedMetricData> serializer()", "class_method_signature": "MappedMetricDataJsonSerde.serializer()", "testcase": false, "constructor": false}, {"identifier": "deserializer", "parameters": "()", "modifiers": "@Override public", "return": "Deserializer<MappedMetricData>", "signature": "Deserializer<MappedMetricData> deserializer()", "full_signature": "@Override public Deserializer<MappedMetricData> deserializer()", "class_method_signature": "MappedMetricDataJsonSerde.deserializer()", "testcase": false, "constructor": false}], "file": "kafka/src/main/java/com/expedia/adaptivealerting/kafka/serde/MappedMetricDataJsonSerde.java"}, "focal_method": {"identifier": "deserializer", "parameters": "()", "modifiers": "@Override public", "return": "Deserializer<MappedMetricData>", "body": "@Override\n    public Deserializer<MappedMetricData> deserializer() {\n        return new Deser();\n    }", "signature": "Deserializer<MappedMetricData> deserializer()", "full_signature": "@Override public Deserializer<MappedMetricData> deserializer()", "class_method_signature": "MappedMetricDataJsonSerde.deserializer()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}