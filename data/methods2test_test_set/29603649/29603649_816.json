{"test_class": {"identifier": "SequenceInformationCollectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private SequenceManager sequenceManager;", "modifier": "@Mock\n    private", "type": "SequenceManager", "declarator": "sequenceManager", "var_name": "sequenceManager"}, {"original_string": "@Mock\n    private SequenceDescriptor descriptor;", "modifier": "@Mock\n    private", "type": "SequenceDescriptor", "declarator": "descriptor", "var_name": "descriptor"}, {"original_string": "@Mock\n    private WilmaSequence sequence;", "modifier": "@Mock\n    private", "type": "WilmaSequence", "declarator": "sequence", "var_name": "sequence"}, {"original_string": "@InjectMocks\n    private SequenceInformationCollector underTest;", "modifier": "@InjectMocks\n    private", "type": "SequenceInformationCollector", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-webapp/src/test/java/com/epam/wilma/webapp/service/SequenceInformationCollectorTest.java"}, "test_case": {"identifier": "testCollectInformationsWhenThereIsNoDescriptor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCollectInformationsWhenThereIsNoDescriptor() {\n        //GIVEN\n        given(sequenceManager.getDescriptors()).willReturn(new HashMap<String, SequenceDescriptor>());\n        //WHEN\n        Map<String, Object> result = underTest.collectInformation();\n        //THEN\n        int sum = (int) result.get(SequenceInformationCollector.SUM_KEY);\n        Assert.assertEquals(sum, 0);\n        Map<String, Integer> groups = (Map<String, Integer>) result.get(SequenceInformationCollector.GROUPS_KEY);\n        Assert.assertEquals(groups.size(), 0);\n    }", "signature": "void testCollectInformationsWhenThereIsNoDescriptor()", "full_signature": "@Test public void testCollectInformationsWhenThereIsNoDescriptor()", "class_method_signature": "SequenceInformationCollectorTest.testCollectInformationsWhenThereIsNoDescriptor()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getDescriptors", "collectInformation", "get", "assertEquals", "get", "assertEquals", "size"]}, "focal_class": {"identifier": "SequenceInformationCollector", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String GROUPS_KEY = \"groupedbydescriptors\";", "modifier": "static final", "type": "String", "declarator": "GROUPS_KEY = \"groupedbydescriptors\"", "var_name": "GROUPS_KEY"}, {"original_string": "static final String SUM_KEY = \"countofsequences\";", "modifier": "static final", "type": "String", "declarator": "SUM_KEY = \"countofsequences\"", "var_name": "SUM_KEY"}, {"original_string": "@Autowired\n    private SequenceManager sequenceManager;", "modifier": "@Autowired\n    private", "type": "SequenceManager", "declarator": "sequenceManager", "var_name": "sequenceManager"}], "methods": [{"identifier": "collectInformation", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> collectInformation()", "full_signature": "public Map<String, Object> collectInformation()", "class_method_signature": "SequenceInformationCollector.collectInformation()", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-webapp/src/main/java/com/epam/wilma/webapp/service/SequenceInformationCollector.java"}, "focal_method": {"identifier": "collectInformation", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "body": "public Map<String, Object> collectInformation() {\n        Map<String, Object> result = new HashMap<>();\n        Map<String, Integer> countOfGroups = new HashMap<>();\n        Map<String, SequenceDescriptor> descriptors = sequenceManager.getDescriptors();\n        int sumSequenceCount = 0;\n        for (String seqDescriptorKey : descriptors.keySet()) {\n            int countOfSequences = descriptors.get(seqDescriptorKey).getSequences().size();\n            sumSequenceCount += countOfSequences;\n            countOfGroups.put(seqDescriptorKey, countOfSequences);\n        }\n        result.put(SUM_KEY, sumSequenceCount);\n        result.put(GROUPS_KEY, countOfGroups);\n        return result;\n    }", "signature": "Map<String, Object> collectInformation()", "full_signature": "public Map<String, Object> collectInformation()", "class_method_signature": "SequenceInformationCollector.collectInformation()", "testcase": false, "constructor": false, "invocations": ["getDescriptors", "keySet", "size", "getSequences", "get", "put", "put", "put"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}