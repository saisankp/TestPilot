{"test_class": {"identifier": "ProviderHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/api/src/test/java/com/alipay/sofa/rpc/client/ProviderHelperTest.java"}, "test_case": {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isEmpty() throws Exception {\n        ProviderGroup pg = null;\n        Assert.assertTrue(ProviderHelper.isEmpty(pg));\n\n        pg = new ProviderGroup(\"xxx\", null);\n        Assert.assertTrue(ProviderHelper.isEmpty(pg));\n\n        pg = new ProviderGroup(\"xxx\", new ArrayList<ProviderInfo>());\n        Assert.assertTrue(ProviderHelper.isEmpty(pg));\n\n        pg.add(ProviderHelper.toProviderInfo(\"127.0.0.1:12200\"));\n        Assert.assertFalse(ProviderHelper.isEmpty(pg));\n    }", "signature": "void isEmpty()", "full_signature": "@Test public void isEmpty()", "class_method_signature": "ProviderHelperTest.isEmpty()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isEmpty", "assertTrue", "isEmpty", "assertTrue", "isEmpty", "add", "toProviderInfo", "assertFalse", "isEmpty"]}, "focal_class": {"identifier": "ProviderHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "compareGroup", "parameters": "(ProviderGroup oldGroup, ProviderGroup newGroup,\n                                    List<ProviderInfo> add, List<ProviderInfo> remove)", "modifiers": "public static", "return": "void", "signature": "void compareGroup(ProviderGroup oldGroup, ProviderGroup newGroup,\n                                    List<ProviderInfo> add, List<ProviderInfo> remove)", "full_signature": "public static void compareGroup(ProviderGroup oldGroup, ProviderGroup newGroup,\n                                    List<ProviderInfo> add, List<ProviderInfo> remove)", "class_method_signature": "ProviderHelper.compareGroup(ProviderGroup oldGroup, ProviderGroup newGroup,\n                                    List<ProviderInfo> add, List<ProviderInfo> remove)", "testcase": false, "constructor": false}, {"identifier": "compareProviders", "parameters": "(List<ProviderInfo> oldList, List<ProviderInfo> newList,\n                                        List<ProviderInfo> add, List<ProviderInfo> remove)", "modifiers": "public static", "return": "void", "signature": "void compareProviders(List<ProviderInfo> oldList, List<ProviderInfo> newList,\n                                        List<ProviderInfo> add, List<ProviderInfo> remove)", "full_signature": "public static void compareProviders(List<ProviderInfo> oldList, List<ProviderInfo> newList,\n                                        List<ProviderInfo> add, List<ProviderInfo> remove)", "class_method_signature": "ProviderHelper.compareProviders(List<ProviderInfo> oldList, List<ProviderInfo> newList,\n                                        List<ProviderInfo> add, List<ProviderInfo> remove)", "testcase": false, "constructor": false}, {"identifier": "compareGroups", "parameters": "(List<ProviderGroup> oldGroups, List<ProviderGroup> newGroups,\n                                     List<ProviderInfo> add,\n                                     List<ProviderInfo> remove)", "modifiers": "public static", "return": "void", "signature": "void compareGroups(List<ProviderGroup> oldGroups, List<ProviderGroup> newGroups,\n                                     List<ProviderInfo> add,\n                                     List<ProviderInfo> remove)", "full_signature": "public static void compareGroups(List<ProviderGroup> oldGroups, List<ProviderGroup> newGroups,\n                                     List<ProviderInfo> add,\n                                     List<ProviderInfo> remove)", "class_method_signature": "ProviderHelper.compareGroups(List<ProviderGroup> oldGroups, List<ProviderGroup> newGroups,\n                                     List<ProviderInfo> add,\n                                     List<ProviderInfo> remove)", "testcase": false, "constructor": false}, {"identifier": "convertToMap", "parameters": "(List<ProviderGroup> providerGroups)", "modifiers": "private static", "return": "Map<String, List<ProviderInfo>>", "signature": "Map<String, List<ProviderInfo>> convertToMap(List<ProviderGroup> providerGroups)", "full_signature": "private static Map<String, List<ProviderInfo>> convertToMap(List<ProviderGroup> providerGroups)", "class_method_signature": "ProviderHelper.convertToMap(List<ProviderGroup> providerGroups)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(ProviderGroup group)", "modifiers": "public static", "return": "boolean", "signature": "boolean isEmpty(ProviderGroup group)", "full_signature": "public static boolean isEmpty(ProviderGroup group)", "class_method_signature": "ProviderHelper.isEmpty(ProviderGroup group)", "testcase": false, "constructor": false}, {"identifier": "toUrl", "parameters": "(ProviderInfo providerInfo)", "modifiers": "public static", "return": "String", "signature": "String toUrl(ProviderInfo providerInfo)", "full_signature": "public static String toUrl(ProviderInfo providerInfo)", "class_method_signature": "ProviderHelper.toUrl(ProviderInfo providerInfo)", "testcase": false, "constructor": false}, {"identifier": "toProviderInfo", "parameters": "(String url)", "modifiers": "public static", "return": "ProviderInfo", "signature": "ProviderInfo toProviderInfo(String url)", "full_signature": "public static ProviderInfo toProviderInfo(String url)", "class_method_signature": "ProviderHelper.toProviderInfo(String url)", "testcase": false, "constructor": false}], "file": "core/api/src/main/java/com/alipay/sofa/rpc/client/ProviderHelper.java"}, "focal_method": {"identifier": "isEmpty", "parameters": "(ProviderGroup group)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isEmpty(ProviderGroup group) {\n        return group == null || group.isEmpty();\n    }", "signature": "boolean isEmpty(ProviderGroup group)", "full_signature": "public static boolean isEmpty(ProviderGroup group)", "class_method_signature": "ProviderHelper.isEmpty(ProviderGroup group)", "testcase": false, "constructor": false, "invocations": ["isEmpty"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}