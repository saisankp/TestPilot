{"test_class": {"identifier": "ClientConnectionServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private ClientConnectionService clientConnectionService;", "modifier": "@InjectMocks\n    private", "type": "ClientConnectionService", "declarator": "clientConnectionService", "var_name": "clientConnectionService"}, {"original_string": "@Spy\n    private ClientConnectionCache connectionCache;", "modifier": "@Spy\n    private", "type": "ClientConnectionCache", "declarator": "connectionCache", "var_name": "connectionCache"}, {"original_string": "@Mock\n    private Client iec60870Client;", "modifier": "@Mock\n    private", "type": "Client", "declarator": "iec60870Client", "var_name": "iec60870Client"}, {"original_string": "@Mock\n    private Iec60870DeviceRepository iec60870DeviceRepository;", "modifier": "@Mock\n    private", "type": "Iec60870DeviceRepository", "declarator": "iec60870DeviceRepository", "var_name": "iec60870DeviceRepository"}, {"original_string": "@Mock\n    private ClientAsduHandlerRegistry clientAsduHandlerRegistry;", "modifier": "@Mock\n    private", "type": "ClientAsduHandlerRegistry", "declarator": "clientAsduHandlerRegistry", "var_name": "clientAsduHandlerRegistry"}], "file": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/test/java/org/opensmartgridplatform/adapter/protocol/iec60870/domain/services/ClientConnectionServiceTest.java"}, "test_case": {"identifier": "testCloseAllConnections", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testCloseAllConnections() throws Exception {\n        // Arrange\n        final String deviceIdentification1 = \"DA_DVC_1\";\n        final ClientConnection clientConnection1 = ClientConnectionFactory.forDevice(deviceIdentification1);\n        this.connectionCache.addConnection(deviceIdentification1, clientConnection1);\n        final String deviceIdentification2 = \"DA_DVC_2\";\n        final ClientConnection clientConnection2 = ClientConnectionFactory.forDevice(deviceIdentification2);\n        this.connectionCache.addConnection(deviceIdentification2, clientConnection2);\n\n        // Act\n        this.clientConnectionService.closeAllConnections();\n\n        // Assert\n        verify(this.iec60870Client).disconnect(clientConnection1);\n        verify(this.iec60870Client).disconnect(clientConnection2);\n        verify(this.connectionCache).removeConnection(deviceIdentification1);\n        verify(this.connectionCache).removeConnection(deviceIdentification2);\n    }", "signature": "void testCloseAllConnections()", "full_signature": "@Test void testCloseAllConnections()", "class_method_signature": "ClientConnectionServiceTest.testCloseAllConnections()", "testcase": true, "constructor": false, "invocations": ["forDevice", "addConnection", "forDevice", "addConnection", "closeAllConnections", "disconnect", "verify", "disconnect", "verify", "removeConnection", "verify", "removeConnection", "verify"]}, "focal_class": {"identifier": "ClientConnectionService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ClientConnectionService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ClientConnectionService.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private ClientConnectionCache connectionCache;", "modifier": "@Autowired\n    private", "type": "ClientConnectionCache", "declarator": "connectionCache", "var_name": "connectionCache"}, {"original_string": "@Autowired\n    private Client iec60870Client;", "modifier": "@Autowired\n    private", "type": "Client", "declarator": "iec60870Client", "var_name": "iec60870Client"}, {"original_string": "@Autowired\n    private Iec60870DeviceRepository iec60870DeviceRepository;", "modifier": "@Autowired\n    private", "type": "Iec60870DeviceRepository", "declarator": "iec60870DeviceRepository", "var_name": "iec60870DeviceRepository"}, {"original_string": "@Autowired\n    private ClientAsduHandlerRegistry clientAsduHandlerRegistry;", "modifier": "@Autowired\n    private", "type": "ClientAsduHandlerRegistry", "declarator": "clientAsduHandlerRegistry", "var_name": "clientAsduHandlerRegistry"}], "methods": [{"identifier": "getConnection", "parameters": "(final RequestMetadata requestMetadata)", "modifiers": "public", "return": "ClientConnection", "signature": "ClientConnection getConnection(final RequestMetadata requestMetadata)", "full_signature": "public ClientConnection getConnection(final RequestMetadata requestMetadata)", "class_method_signature": "ClientConnectionService.getConnection(final RequestMetadata requestMetadata)", "testcase": false, "constructor": false}, {"identifier": "closeConnection", "parameters": "(final String deviceIdentification)", "modifiers": "public", "return": "void", "signature": "void closeConnection(final String deviceIdentification)", "full_signature": "public void closeConnection(final String deviceIdentification)", "class_method_signature": "ClientConnectionService.closeConnection(final String deviceIdentification)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "(final ClientConnection connection)", "modifiers": "public synchronized", "return": "void", "signature": "void close(final ClientConnection connection)", "full_signature": "public synchronized void close(final ClientConnection connection)", "class_method_signature": "ClientConnectionService.close(final ClientConnection connection)", "testcase": false, "constructor": false}, {"identifier": "closeAllConnections", "parameters": "()", "modifiers": "@PreDestroy public", "return": "void", "signature": "void closeAllConnections()", "full_signature": "@PreDestroy public void closeAllConnections()", "class_method_signature": "ClientConnectionService.closeAllConnections()", "testcase": false, "constructor": false}, {"identifier": "createConnection", "parameters": "(final RequestMetadata requestMetadata)", "modifiers": "private", "return": "ClientConnection", "signature": "ClientConnection createConnection(final RequestMetadata requestMetadata)", "full_signature": "private ClientConnection createConnection(final RequestMetadata requestMetadata)", "class_method_signature": "ClientConnectionService.createConnection(final RequestMetadata requestMetadata)", "testcase": false, "constructor": false}, {"identifier": "createConnectionParameters", "parameters": "(final Iec60870Device device, final String ipAddress)", "modifiers": "private", "return": "ConnectionParameters", "signature": "ConnectionParameters createConnectionParameters(final Iec60870Device device, final String ipAddress)", "full_signature": "private ConnectionParameters createConnectionParameters(final Iec60870Device device, final String ipAddress)", "class_method_signature": "ClientConnectionService.createConnectionParameters(final Iec60870Device device, final String ipAddress)", "testcase": false, "constructor": false}, {"identifier": "getConnectionDeviceIdentification", "parameters": "(final Iec60870Device device)", "modifiers": "private", "return": "String", "signature": "String getConnectionDeviceIdentification(final Iec60870Device device)", "full_signature": "private String getConnectionDeviceIdentification(final Iec60870Device device)", "class_method_signature": "ClientConnectionService.getConnectionDeviceIdentification(final Iec60870Device device)", "testcase": false, "constructor": false}, {"identifier": "getConnectionDevice", "parameters": "(final Iec60870Device device)", "modifiers": "private", "return": "Iec60870Device", "signature": "Iec60870Device getConnectionDevice(final Iec60870Device device)", "full_signature": "private Iec60870Device getConnectionDevice(final Iec60870Device device)", "class_method_signature": "ClientConnectionService.getConnectionDevice(final Iec60870Device device)", "testcase": false, "constructor": false}, {"identifier": "getIec60870Device", "parameters": "(final String deviceIdentification)", "modifiers": "private", "return": "Iec60870Device", "signature": "Iec60870Device getIec60870Device(final String deviceIdentification)", "full_signature": "private Iec60870Device getIec60870Device(final String deviceIdentification)", "class_method_signature": "ClientConnectionService.getIec60870Device(final String deviceIdentification)", "testcase": false, "constructor": false}, {"identifier": "connectionFailureException", "parameters": "(final String deviceIdentification)", "modifiers": "private", "return": "Supplier<ConnectionFailureException>", "signature": "Supplier<ConnectionFailureException> connectionFailureException(final String deviceIdentification)", "full_signature": "private Supplier<ConnectionFailureException> connectionFailureException(final String deviceIdentification)", "class_method_signature": "ClientConnectionService.connectionFailureException(final String deviceIdentification)", "testcase": false, "constructor": false}], "file": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/main/java/org/opensmartgridplatform/adapter/protocol/iec60870/domain/services/ClientConnectionService.java"}, "focal_method": {"identifier": "closeAllConnections", "parameters": "()", "modifiers": "@PreDestroy public", "return": "void", "body": "@PreDestroy\n    public void closeAllConnections() {\n        LOGGER.info(\"Closing all connections.\");\n        final Collection<ClientConnection> connections = this.connectionCache.getConnections();\n        LOGGER.warn(\"{} active connections found, closing all.\", connections.size());\n        connections.forEach(this::close);\n    }", "signature": "void closeAllConnections()", "full_signature": "@PreDestroy public void closeAllConnections()", "class_method_signature": "ClientConnectionService.closeAllConnections()", "testcase": false, "constructor": false, "invocations": ["info", "getConnections", "warn", "size", "forEach"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}