{"test_class": {"identifier": "MachineSpringResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Machine MACHINE_1 = Machine.newBuilder().setId(\"machine1\").build();", "modifier": "private static final", "type": "Machine", "declarator": "MACHINE_1 = Machine.newBuilder().setId(\"machine1\").build()", "var_name": "MACHINE_1"}, {"original_string": "private static final Machine MACHINE_2 = Machine.newBuilder().setId(\"machine2\").build();", "modifier": "private static final", "type": "Machine", "declarator": "MACHINE_2 = Machine.newBuilder().setId(\"machine2\").build()", "var_name": "MACHINE_2"}, {"original_string": "@MockBean\n    protected ReactorMachineServiceStub serviceMock;", "modifier": "@MockBean\n    protected", "type": "ReactorMachineServiceStub", "declarator": "serviceMock", "var_name": "serviceMock"}, {"original_string": "@Autowired\n    private MockMvc mockMvc;", "modifier": "@Autowired\n    private", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}], "file": "titus-server-runtime/src/test/java/com/netflix/titus/runtime/machine/MachineSpringResourceTest.java"}, "test_case": {"identifier": "testGetMachine", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetMachine() throws Exception {\n        when(serviceMock.getMachine(ArgumentMatchers.any())).thenReturn(Mono.just(MACHINE_1));\n\n        Machine entity = SpringMockMvcUtil.doGet(mockMvc, \"/api/v4/machines/\" + MACHINE_1.getId(), Machine.class);\n        assertThat(entity).isEqualTo(MACHINE_1);\n    }", "signature": "void testGetMachine()", "full_signature": "@Test public void testGetMachine()", "class_method_signature": "MachineSpringResourceTest.testGetMachine()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getMachine", "any", "just", "doGet", "getId", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "MachineSpringResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Duration TIMEOUT = Duration.ofSeconds(10);", "modifier": "private static final", "type": "Duration", "declarator": "TIMEOUT = Duration.ofSeconds(10)", "var_name": "TIMEOUT"}, {"original_string": "private final ReactorMachineServiceStub machineServiceStub;", "modifier": "private final", "type": "ReactorMachineServiceStub", "declarator": "machineServiceStub", "var_name": "machineServiceStub"}], "methods": [{"identifier": "MachineSpringResource", "parameters": "(ReactorMachineServiceStub machineServiceStub)", "modifiers": "@Inject public", "return": "", "signature": " MachineSpringResource(ReactorMachineServiceStub machineServiceStub)", "full_signature": "@Inject public  MachineSpringResource(ReactorMachineServiceStub machineServiceStub)", "class_method_signature": "MachineSpringResource.MachineSpringResource(ReactorMachineServiceStub machineServiceStub)", "testcase": false, "constructor": true}, {"identifier": "getMachines", "parameters": "(@RequestParam MultiValueMap<String, String> queryParameters)", "modifiers": "@ApiOperation(\"Get all machines\") @GetMapping public", "return": "MachineQueryResult", "signature": "MachineQueryResult getMachines(@RequestParam MultiValueMap<String, String> queryParameters)", "full_signature": "@ApiOperation(\"Get all machines\") @GetMapping public MachineQueryResult getMachines(@RequestParam MultiValueMap<String, String> queryParameters)", "class_method_signature": "MachineSpringResource.getMachines(@RequestParam MultiValueMap<String, String> queryParameters)", "testcase": false, "constructor": false}, {"identifier": "getMachine", "parameters": "(@PathVariable(\"machineId\") String machineId)", "modifiers": "@GetMapping(path = \"/{machineId}\") @ApiOperation(\"Get single machine\") public", "return": "Machine", "signature": "Machine getMachine(@PathVariable(\"machineId\") String machineId)", "full_signature": "@GetMapping(path = \"/{machineId}\") @ApiOperation(\"Get single machine\") public Machine getMachine(@PathVariable(\"machineId\") String machineId)", "class_method_signature": "MachineSpringResource.getMachine(@PathVariable(\"machineId\") String machineId)", "testcase": false, "constructor": false}], "file": "titus-server-runtime/src/main/java/com/netflix/titus/runtime/machine/MachineSpringResource.java"}, "focal_method": {"identifier": "getMachine", "parameters": "(@PathVariable(\"machineId\") String machineId)", "modifiers": "@GetMapping(path = \"/{machineId}\") @ApiOperation(\"Get single machine\") public", "return": "Machine", "body": "@GetMapping(path = \"/{machineId}\")\n    @ApiOperation(\"Get single machine\")\n    public Machine getMachine(@PathVariable(\"machineId\") String machineId) {\n        return machineServiceStub.getMachine(Id.newBuilder().setId(machineId).build()).block(TIMEOUT);\n    }", "signature": "Machine getMachine(@PathVariable(\"machineId\") String machineId)", "full_signature": "@GetMapping(path = \"/{machineId}\") @ApiOperation(\"Get single machine\") public Machine getMachine(@PathVariable(\"machineId\") String machineId)", "class_method_signature": "MachineSpringResource.getMachine(@PathVariable(\"machineId\") String machineId)", "testcase": false, "constructor": false, "invocations": ["block", "getMachine", "build", "setId", "newBuilder"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}