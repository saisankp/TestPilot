{"test_class": {"identifier": "TestBuiltinSchemeStrategy", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BuiltinSchemeStrategy strategy;", "modifier": "private", "type": "BuiltinSchemeStrategy", "declarator": "strategy", "var_name": "strategy"}], "file": "org.jvoicexml/src/test/java/org/jvoicexml/documentserver/schemestrategy/builtin/TestBuiltinSchemeStrategy.java"}, "test_case": {"identifier": "testGetInputStream", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetInputStream() throws Exception, JVoiceXMLEvent {\n        final URI dtmfUri = new URI(\"builtin:dtmf/boolean\");\n        final InputStream input = strategy.getInputStream(null, dtmfUri, null,\n                0, null);\n        final InputSource source = new InputSource(input);\n        final SrgsXmlDocument dtmfDocument = new SrgsXmlDocument(source);\n        input.close();\n        final Grammar dtmfGrammar = dtmfDocument.getGrammar();\n        Assert.assertEquals(ModeType.DTMF, dtmfGrammar.getMode());\n\n        final URI voiceUri = new URI(\"builtin:voice/boolean\");\n        final InputStream voiceInput = strategy.getInputStream(null, voiceUri,\n                null, 0, null);\n        final InputSource voiceSource = new InputSource(voiceInput);\n        final SrgsXmlDocument voiceDocument = new SrgsXmlDocument(voiceSource);\n        input.close();\n        final Grammar voiceGrammar = voiceDocument.getGrammar();\n        Assert.assertEquals(ModeType.VOICE, voiceGrammar.getMode());\n\n        final URI grammarUri = new URI(\"builtin:grammar/boolean\");\n        final InputStream grammarInput = strategy.getInputStream(null,\n                grammarUri, null, 0, null);\n        final InputSource grammarSource = new InputSource(grammarInput);\n        final SrgsXmlDocument gramamrDocument =\n            new SrgsXmlDocument(grammarSource);\n        input.close();\n        final Grammar grammarGrammar = gramamrDocument.getGrammar();\n        Assert.assertEquals(ModeType.VOICE, grammarGrammar.getMode());\n    }", "signature": "void testGetInputStream()", "full_signature": "@Test public void testGetInputStream()", "class_method_signature": "TestBuiltinSchemeStrategy.testGetInputStream()", "testcase": true, "constructor": false, "invocations": ["getInputStream", "close", "getGrammar", "assertEquals", "getMode", "getInputStream", "close", "getGrammar", "assertEquals", "getMode", "getInputStream", "close", "getGrammar", "assertEquals", "getMode"]}, "focal_class": {"identifier": "BuiltinSchemeStrategy", "superclass": "", "interfaces": "implements SchemeStrategy", "fields": [{"original_string": "private static final Logger LOGGER =\n            LogManager.getLogger(BuiltinSchemeStrategy.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER =\n            LogManager.getLogger(BuiltinSchemeStrategy.class)", "var_name": "LOGGER"}, {"original_string": "public static final String SCHEME_NAME = \"builtin\";", "modifier": "public static final", "type": "String", "declarator": "SCHEME_NAME = \"builtin\"", "var_name": "SCHEME_NAME"}, {"original_string": "private final Map<String, GrammarCreator> creators;", "modifier": "private final", "type": "Map<String, GrammarCreator>", "declarator": "creators", "var_name": "creators"}], "methods": [{"identifier": "BuiltinSchemeStrategy", "parameters": "()", "modifiers": "public", "return": "", "signature": " BuiltinSchemeStrategy()", "full_signature": "public  BuiltinSchemeStrategy()", "class_method_signature": "BuiltinSchemeStrategy.BuiltinSchemeStrategy()", "testcase": false, "constructor": true}, {"identifier": "setGrammarCreators", "parameters": "(final Collection<GrammarCreator> col)", "modifiers": "public", "return": "void", "signature": "void setGrammarCreators(final Collection<GrammarCreator> col)", "full_signature": "public void setGrammarCreators(final Collection<GrammarCreator> col)", "class_method_signature": "BuiltinSchemeStrategy.setGrammarCreators(final Collection<GrammarCreator> col)", "testcase": false, "constructor": false}, {"identifier": "addGrammarCreator", "parameters": "(final GrammarCreator creator)", "modifiers": "public", "return": "void", "signature": "void addGrammarCreator(final GrammarCreator creator)", "full_signature": "public void addGrammarCreator(final GrammarCreator creator)", "class_method_signature": "BuiltinSchemeStrategy.addGrammarCreator(final GrammarCreator creator)", "testcase": false, "constructor": false}, {"identifier": "getInputStream", "parameters": "(final String sessionId, final URI uri,\n            final RequestMethod method, final long timeout,\n            final Collection<KeyValuePair> parameters)", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getInputStream(final String sessionId, final URI uri,\n            final RequestMethod method, final long timeout,\n            final Collection<KeyValuePair> parameters)", "full_signature": "@Override public InputStream getInputStream(final String sessionId, final URI uri,\n            final RequestMethod method, final long timeout,\n            final Collection<KeyValuePair> parameters)", "class_method_signature": "BuiltinSchemeStrategy.getInputStream(final String sessionId, final URI uri,\n            final RequestMethod method, final long timeout,\n            final Collection<KeyValuePair> parameters)", "testcase": false, "constructor": false}, {"identifier": "extractBuiltinType", "parameters": "(final URI uri)", "modifiers": "private", "return": "String", "signature": "String extractBuiltinType(final URI uri)", "full_signature": "private String extractBuiltinType(final URI uri)", "class_method_signature": "BuiltinSchemeStrategy.extractBuiltinType(final URI uri)", "testcase": false, "constructor": false}, {"identifier": "getScheme", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getScheme()", "full_signature": "@Override public String getScheme()", "class_method_signature": "BuiltinSchemeStrategy.getScheme()", "testcase": false, "constructor": false}, {"identifier": "sessionClosed", "parameters": "(final String sessionId)", "modifiers": "@Override public", "return": "void", "signature": "void sessionClosed(final String sessionId)", "full_signature": "@Override public void sessionClosed(final String sessionId)", "class_method_signature": "BuiltinSchemeStrategy.sessionClosed(final String sessionId)", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/documentserver/schemestrategy/builtin/BuiltinSchemeStrategy.java"}, "focal_method": {"identifier": "getInputStream", "parameters": "(final String sessionId, final URI uri,\n            final RequestMethod method, final long timeout,\n            final Collection<KeyValuePair> parameters)", "modifiers": "@Override public", "return": "InputStream", "body": "@Override\n    public InputStream getInputStream(final String sessionId, final URI uri,\n            final RequestMethod method, final long timeout,\n            final Collection<KeyValuePair> parameters)\n            throws BadFetchError, UnsupportedElementError, IOException {\n        final String type = extractBuiltinType(uri);\n        final GrammarCreator creator = creators.get(type);\n        if (creator == null) {\n            throw new UnsupportedBuiltinError(\"builtin type '\" + type\n                    + \"' is not supported!\");\n        }\n        final byte[] bytes = creator.createGrammar(uri);\n        return new ByteArrayInputStream(bytes);\n    }", "signature": "InputStream getInputStream(final String sessionId, final URI uri,\n            final RequestMethod method, final long timeout,\n            final Collection<KeyValuePair> parameters)", "full_signature": "@Override public InputStream getInputStream(final String sessionId, final URI uri,\n            final RequestMethod method, final long timeout,\n            final Collection<KeyValuePair> parameters)", "class_method_signature": "BuiltinSchemeStrategy.getInputStream(final String sessionId, final URI uri,\n            final RequestMethod method, final long timeout,\n            final Collection<KeyValuePair> parameters)", "testcase": false, "constructor": false, "invocations": ["extractBuiltinType", "get", "createGrammar"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}