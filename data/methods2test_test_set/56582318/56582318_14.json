{"test_class": {"identifier": "ParametersTest", "superclass": "extends XMLTestCase", "interfaces": "", "fields": [{"original_string": "private Schema PARAMETERS_SCHEMA = null;", "modifier": "private", "type": "Schema", "declarator": "PARAMETERS_SCHEMA = null", "var_name": "PARAMETERS_SCHEMA"}], "file": "geoxygene-util/src/test/java/fr/ign/parameters/ParametersTest.java"}, "test_case": {"identifier": "testMarshall", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testMarshall() {\n    Parameters p = new Parameters();\n    p.set(\"A\", \"B\");\n    p.set(\"C\", \"D\");\n    p.marshall(\"target/test-classes/test2.xml\");\n    p.marshall();\n    \n    // test.xml =? test2.xml\n    try {\n      \n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      DocumentBuilder db;\n      db = dbf.newDocumentBuilder();\n      \n      File xml1 = new File(ParametersTest.class.getClassLoader().getResource(\"simple.xml\").getPath());\n      Document doc1 = db.parse(xml1);\n      assertEquals(doc1.getDocumentElement().getChildNodes().getLength(), 5);\n      \n      File xml2 = new File(\"target/test-classes/test2.xml\");\n      Document doc2 = db.parse(xml2);\n      assertEquals(doc2.getDocumentElement().getChildNodes().getLength(), 5);\n      \n      // assertXMLEqual(doc1, doc2);\n      \n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }", "signature": "void testMarshall()", "full_signature": "@Test public void testMarshall()", "class_method_signature": "ParametersTest.testMarshall()", "testcase": true, "constructor": false, "invocations": ["set", "set", "marshall", "marshall", "newInstance", "newDocumentBuilder", "getPath", "getResource", "getClassLoader", "parse", "assertEquals", "getLength", "getChildNodes", "getDocumentElement", "parse", "assertEquals", "getLength", "getChildNodes", "getDocumentElement", "printStackTrace"]}, "focal_class": {"identifier": "Parameters", "superclass": "extends ParameterComponent", "interfaces": "", "fields": [{"original_string": "@XmlElementRef(name = \"parameter\")\n\tpublic List<ParameterComponent> entry = new ArrayList<ParameterComponent>();", "modifier": "@XmlElementRef(name = \"parameter\")\n\tpublic", "type": "List<ParameterComponent>", "declarator": "entry = new ArrayList<ParameterComponent>()", "var_name": "entry"}, {"original_string": "@XmlAttribute(name = \"description\")\n\tpublic String description;", "modifier": "@XmlAttribute(name = \"description\")\n\tpublic", "type": "String", "declarator": "description", "var_name": "description"}], "methods": [{"identifier": "Parameters", "parameters": "()", "modifiers": "public", "return": "", "signature": " Parameters()", "full_signature": "public  Parameters()", "class_method_signature": "Parameters.Parameters()", "testcase": false, "constructor": true}, {"identifier": "setDescription", "parameters": "(String description)", "modifiers": "public", "return": "void", "signature": "void setDescription(String description)", "full_signature": "public void setDescription(String description)", "class_method_signature": "Parameters.setDescription(String description)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(ParameterComponent p)", "modifiers": "public", "return": "void", "signature": "void add(ParameterComponent p)", "full_signature": "public void add(ParameterComponent p)", "class_method_signature": "Parameters.add(ParameterComponent p)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(String key, Object c)", "modifiers": "public", "return": "boolean", "signature": "boolean set(String key, Object c)", "full_signature": "public boolean set(String key, Object c)", "class_method_signature": "Parameters.set(String key, Object c)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String key)", "modifiers": "public", "return": "Object", "signature": "Object get(String key)", "full_signature": "public Object get(String key)", "class_method_signature": "Parameters.get(String key)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String desc, String key)", "modifiers": "public", "return": "Object", "signature": "Object get(String desc, String key)", "full_signature": "public Object get(String desc, String key)", "class_method_signature": "Parameters.get(String desc, String key)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "(String desc)", "modifiers": "public", "return": "Parameters", "signature": "Parameters getParameters(String desc)", "full_signature": "public Parameters getParameters(String desc)", "class_method_signature": "Parameters.getParameters(String desc)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(String name)", "modifiers": "public", "return": "String", "signature": "String getString(String name)", "full_signature": "public String getString(String name)", "class_method_signature": "Parameters.getString(String name)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(String desc, String name)", "modifiers": "public", "return": "String", "signature": "String getString(String desc, String name)", "full_signature": "public String getString(String desc, String name)", "class_method_signature": "Parameters.getString(String desc, String name)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "signature": "boolean getBoolean(String name)", "full_signature": "public boolean getBoolean(String name)", "class_method_signature": "Parameters.getBoolean(String name)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(String desc, String name)", "modifiers": "public", "return": "boolean", "signature": "boolean getBoolean(String desc, String name)", "full_signature": "public boolean getBoolean(String desc, String name)", "class_method_signature": "Parameters.getBoolean(String desc, String name)", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "(String name)", "modifiers": "public", "return": "double", "signature": "double getDouble(String name)", "full_signature": "public double getDouble(String name)", "class_method_signature": "Parameters.getDouble(String name)", "testcase": false, "constructor": false}, {"identifier": "getInteger", "parameters": "(String name)", "modifiers": "public", "return": "int", "signature": "int getInteger(String name)", "full_signature": "public int getInteger(String name)", "class_method_signature": "Parameters.getInteger(String name)", "testcase": false, "constructor": false}, {"identifier": "getFloat", "parameters": "(String name)", "modifiers": "public", "return": "float", "signature": "float getFloat(String name)", "full_signature": "public float getFloat(String name)", "class_method_signature": "Parameters.getFloat(String name)", "testcase": false, "constructor": false}], "file": "geoxygene-util/src/main/java/fr/ign/parameters/Parameters.java"}, "focal_method": {"identifier": "set", "parameters": "(String key, Object c)", "modifiers": "public", "return": "boolean", "body": "public boolean set(String key, Object c) {\n\n\t\tboolean modificationDone = false;\n\t\tif (entry != null) {\n\t\t\tint nbEntry = entry.size();\n\t\t\tfor (int i = 0; i < nbEntry; i++) {\n\t\t\t\tParameterComponent paramComp = entry.get(i);\n\t\t\t\tif (paramComp instanceof Parameter) {\n\t\t\t\t\t// System.out.println(\"parameter\");\n\t\t\t\t\tif (((Parameter) paramComp).getKey().equals(key)) {\n\t\t\t\t\t\tentry.remove(paramComp);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t\tnbEntry--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// System.out.println(((Parameter)paramComp).getKey());\n\t\t\t\t\t}\n\t\t\t\t} else if (paramComp instanceof Parameters) {\n\t\t\t\t\t// System.out.println(\"parameters\");\n\t\t\t\t\t((Parameters) paramComp).set(key, c);\n\t\t\t\t\tmodificationDone = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!modificationDone) {\n\t\t\tParameter p = new Parameter(key, c);\n\t\t\tentry.add(p);\n\t\t}\n\n\t\treturn modificationDone;\n\t}", "signature": "boolean set(String key, Object c)", "full_signature": "public boolean set(String key, Object c)", "class_method_signature": "Parameters.set(String key, Object c)", "testcase": false, "constructor": false, "invocations": ["size", "get", "equals", "getKey", "remove", "set", "add"]}, "repository": {"repo_id": 56582318, "url": "https://github.com/IGNF/geoxygene", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 22, "size": 323511, "license": "licensed"}}