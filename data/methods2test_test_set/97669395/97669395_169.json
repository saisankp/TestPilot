{"test_class": {"identifier": "BackendOvenTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BackendOven oven;", "modifier": "private", "type": "BackendOven", "declarator": "oven", "var_name": "oven"}], "file": "recipe-java-runtime/src/test/java/ca/derekcormier/recipe/BackendOvenTest.java"}, "test_case": {"identifier": "testBake_throwsOnMissingIngredientHook", "parameters": "()", "modifiers": "@Test(expected = RuntimeException.class) public", "return": "void", "body": "@Test(expected = RuntimeException.class)\n  public void testBake_throwsOnMissingIngredientHook() {\n    oven.bake(\"{\\\"recipe\\\":{\\\"Recipe\\\":{\\\"ingredients\\\":[{\\\"TestIngredient\\\":{}}]}}}\");\n  }", "signature": "void testBake_throwsOnMissingIngredientHook()", "full_signature": "@Test(expected = RuntimeException.class) public void testBake_throwsOnMissingIngredientHook()", "class_method_signature": "BackendOvenTest.testBake_throwsOnMissingIngredientHook()", "testcase": true, "constructor": false, "invocations": ["bake"]}, "focal_class": {"identifier": "BackendOven", "superclass": "extends AbstractOven", "interfaces": "", "fields": [{"original_string": "private final Map<String, BaseIngredientHook> hooks = new HashMap<>();", "modifier": "private final", "type": "Map<String, BaseIngredientHook>", "declarator": "hooks = new HashMap<>()", "var_name": "hooks"}, {"original_string": "private final ObjectMapper objectMapper = new ObjectMapper();", "modifier": "private final", "type": "ObjectMapper", "declarator": "objectMapper = new ObjectMapper()", "var_name": "objectMapper"}, {"original_string": "private final SubtypeResolver subtypeResolver = new StdSubtypeResolver();", "modifier": "private final", "type": "SubtypeResolver", "declarator": "subtypeResolver = new StdSubtypeResolver()", "var_name": "subtypeResolver"}], "methods": [{"identifier": "BackendOven", "parameters": "()", "modifiers": "public", "return": "", "signature": " BackendOven()", "full_signature": "public  BackendOven()", "class_method_signature": "BackendOven.BackendOven()", "testcase": false, "constructor": true}, {"identifier": "bake", "parameters": "(String json)", "modifiers": "public", "return": "String", "signature": "String bake(String json)", "full_signature": "public String bake(String json)", "class_method_signature": "BackendOven.bake(String json)", "testcase": false, "constructor": false}, {"identifier": "registerHook", "parameters": "(BaseIngredientHook hook)", "modifiers": "public", "return": "void", "signature": "void registerHook(BaseIngredientHook hook)", "full_signature": "public void registerHook(BaseIngredientHook hook)", "class_method_signature": "BackendOven.registerHook(BaseIngredientHook hook)", "testcase": false, "constructor": false}, {"identifier": "bakeIngredient", "parameters": "(Ingredient ingredient, Cake cake)", "modifiers": "private", "return": "void", "signature": "void bakeIngredient(Ingredient ingredient, Cake cake)", "full_signature": "private void bakeIngredient(Ingredient ingredient, Cake cake)", "class_method_signature": "BackendOven.bakeIngredient(Ingredient ingredient, Cake cake)", "testcase": false, "constructor": false}], "file": "recipe-java-runtime/src/main/java/ca/derekcormier/recipe/BackendOven.java"}, "focal_method": {"identifier": "bake", "parameters": "(String json)", "modifiers": "public", "return": "String", "body": "public String bake(String json) {\n    try {\n      Payload payload = objectMapper.readValue(json, Payload.class);\n      Cake cake = createCake(payload.getCake());\n\n      bakeIngredient(payload.getRecipe(), cake);\n\n      Cake cakeToSerialize = new Cake(cake);\n      return objectMapper.writeValueAsString(cakeToSerialize);\n    } catch (Exception e) {\n      throw new RuntimeException(\"payload serialization error\", e);\n    }\n  }", "signature": "String bake(String json)", "full_signature": "public String bake(String json)", "class_method_signature": "BackendOven.bake(String json)", "testcase": false, "constructor": false, "invocations": ["readValue", "createCake", "getCake", "bakeIngredient", "getRecipe", "writeValueAsString"]}, "repository": {"repo_id": 97669395, "url": "https://github.com/kormide/recipe", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 727, "license": "licensed"}}