{"test_class": {"identifier": "CombinationSetTest", "superclass": "", "interfaces": "", "fields": [], "file": "geoxygene-util/src/test/java/fr/ign/cogit/geoxygene/util/math/CombinationSetTest.java"}, "test_case": {"identifier": "testNbOfCombinations", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testNbOfCombinations() {\n    HashSet<Integer> set = new HashSet<Integer>();\n    set.add(1);\n    set.add(2);\n    set.add(3);\n    CombinationSet combiSet = new CombinationSet(set);\n    Assert.assertTrue(combiSet.nbOfCombinations(2) == 3);\n  }", "signature": "void testNbOfCombinations()", "full_signature": "@Test public void testNbOfCombinations()", "class_method_signature": "CombinationSetTest.testNbOfCombinations()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "assertTrue", "nbOfCombinations"]}, "focal_class": {"identifier": "CombinationSet", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Set<? extends Object> set;", "modifier": "private", "type": "Set<? extends Object>", "declarator": "set", "var_name": "set"}, {"original_string": "private long totalNb;", "modifier": "private", "type": "long", "declarator": "totalNb", "var_name": "totalNb"}, {"original_string": "private List<Object> internalList;", "modifier": "private", "type": "List<Object>", "declarator": "internalList", "var_name": "internalList"}], "methods": [{"identifier": "CombinationSet", "parameters": "(Set<? extends Object> set)", "modifiers": "public", "return": "", "signature": " CombinationSet(Set<? extends Object> set)", "full_signature": "public  CombinationSet(Set<? extends Object> set)", "class_method_signature": "CombinationSet.CombinationSet(Set<? extends Object> set)", "testcase": false, "constructor": true}, {"identifier": "nbOfCombinations", "parameters": "(int k)", "modifiers": "public", "return": "int", "signature": "int nbOfCombinations(int k)", "full_signature": "public int nbOfCombinations(int k)", "class_method_signature": "CombinationSet.nbOfCombinations(int k)", "testcase": false, "constructor": false}, {"identifier": "nbOfCombinationsAbove", "parameters": "(int k)", "modifiers": "public", "return": "int", "signature": "int nbOfCombinationsAbove(int k)", "full_signature": "public int nbOfCombinationsAbove(int k)", "class_method_signature": "CombinationSet.nbOfCombinationsAbove(int k)", "testcase": false, "constructor": false}, {"identifier": "getAllCombinationsOfNElements", "parameters": "(int n)", "modifiers": "public", "return": "List<Combination>", "signature": "List<Combination> getAllCombinationsOfNElements(int n)", "full_signature": "public List<Combination> getAllCombinationsOfNElements(int n)", "class_method_signature": "CombinationSet.getAllCombinationsOfNElements(int n)", "testcase": false, "constructor": false}, {"identifier": "getAllCombinationsOfNOrMoreElements", "parameters": "(int n)", "modifiers": "public", "return": "List<Combination>", "signature": "List<Combination> getAllCombinationsOfNOrMoreElements(int n)", "full_signature": "public List<Combination> getAllCombinationsOfNOrMoreElements(int n)", "class_method_signature": "CombinationSet.getAllCombinationsOfNOrMoreElements(int n)", "testcase": false, "constructor": false}, {"identifier": "getAllCombinations", "parameters": "()", "modifiers": "public", "return": "List<Combination>", "signature": "List<Combination> getAllCombinations()", "full_signature": "public List<Combination> getAllCombinations()", "class_method_signature": "CombinationSet.getAllCombinations()", "testcase": false, "constructor": false}, {"identifier": "factorial", "parameters": "(int n)", "modifiers": "private", "return": "long", "signature": "long factorial(int n)", "full_signature": "private long factorial(int n)", "class_method_signature": "CombinationSet.factorial(int n)", "testcase": false, "constructor": false}, {"identifier": "getTotalNb", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTotalNb()", "full_signature": "public long getTotalNb()", "class_method_signature": "CombinationSet.getTotalNb()", "testcase": false, "constructor": false}], "file": "geoxygene-util/src/main/java/fr/ign/cogit/geoxygene/util/math/CombinationSet.java"}, "focal_method": {"identifier": "nbOfCombinations", "parameters": "(int k)", "modifiers": "public", "return": "int", "body": "public int nbOfCombinations(int k) {\n    if (k > set.size())\n      return 0;\n    if (k == set.size())\n      return 1;\n    long numerator = factorial(set.size());\n    long den1 = factorial(k);\n    long den2 = factorial(set.size() - k);\n    return (int) (numerator / (den1 * den2));\n  }", "signature": "int nbOfCombinations(int k)", "full_signature": "public int nbOfCombinations(int k)", "class_method_signature": "CombinationSet.nbOfCombinations(int k)", "testcase": false, "constructor": false, "invocations": ["size", "size", "factorial", "size", "factorial", "factorial", "size"]}, "repository": {"repo_id": 56582318, "url": "https://github.com/IGNF/geoxygene", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 22, "size": 323511, "license": "licensed"}}