{"test_class": {"identifier": "SudoRetrievePolicyResponseTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JsonObject KNOWN_JSON = JsonFactory.newObjectBuilder() //\n            .set(SudoCommandResponse.JsonFields.TYPE, SudoRetrievePolicyResponse.TYPE) //\n            .set(SudoCommandResponse.JsonFields.STATUS, HttpStatusCode.OK.toInt()) //\n            .set(SudoCommandResponse.JsonFields.JSON_POLICY_ID, TestConstants.Policy.POLICY_ID.toString()) //\n            .set(SudoRetrievePolicyResponse.JSON_POLICY,\n                    TestConstants.Policy.POLICY.toJson(FieldType.regularOrSpecial())) //\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_JSON = JsonFactory.newObjectBuilder() //\n            .set(SudoCommandResponse.JsonFields.TYPE, SudoRetrievePolicyResponse.TYPE) //\n            .set(SudoCommandResponse.JsonFields.STATUS, HttpStatusCode.OK.toInt()) //\n            .set(SudoCommandResponse.JsonFields.JSON_POLICY_ID, TestConstants.Policy.POLICY_ID.toString()) //\n            .set(SudoRetrievePolicyResponse.JSON_POLICY,\n                    TestConstants.Policy.POLICY.toJson(FieldType.regularOrSpecial())) //\n            .build()", "var_name": "KNOWN_JSON"}, {"original_string": "private static final DittoHeaders EMPTY_DITTO_HEADERS = DittoHeaders.empty();", "modifier": "private static final", "type": "DittoHeaders", "declarator": "EMPTY_DITTO_HEADERS = DittoHeaders.empty()", "var_name": "EMPTY_DITTO_HEADERS"}], "file": "services/models/policies/src/test/java/org/eclipse/ditto/services/models/policies/commands/sudo/SudoRetrievePolicyResponseTest.java"}, "test_case": {"identifier": "toJsonReturnsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toJsonReturnsExpected() {\n        final SudoRetrievePolicyResponse underTest =\n                SudoRetrievePolicyResponse.of(TestConstants.Policy.POLICY_ID, TestConstants.Policy.POLICY,\n                        EMPTY_DITTO_HEADERS);\n        final JsonObject actualJson = underTest.toJson(FieldType.REGULAR.or(FieldType.SPECIAL));\n\n        assertThat(actualJson).isEqualTo(KNOWN_JSON);\n    }", "signature": "void toJsonReturnsExpected()", "full_signature": "@Test public void toJsonReturnsExpected()", "class_method_signature": "SudoRetrievePolicyResponseTest.toJsonReturnsExpected()", "testcase": true, "constructor": false, "invocations": ["of", "toJson", "or", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "SudoRetrievePolicyResponse", "superclass": "extends AbstractCommandResponse<SudoRetrievePolicyResponse>", "interfaces": "implements SudoCommandResponse<SudoRetrievePolicyResponse>", "fields": [{"original_string": "public static final String TYPE = TYPE_PREFIX + SudoRetrievePolicy.NAME;", "modifier": "public static final", "type": "String", "declarator": "TYPE = TYPE_PREFIX + SudoRetrievePolicy.NAME", "var_name": "TYPE"}, {"original_string": "static final JsonFieldDefinition<JsonObject> JSON_POLICY =\n            JsonFactory.newJsonObjectFieldDefinition(\"payload/policy\", FieldType.REGULAR, JsonSchemaVersion.V_2);", "modifier": "static final", "type": "JsonFieldDefinition<JsonObject>", "declarator": "JSON_POLICY =\n            JsonFactory.newJsonObjectFieldDefinition(\"payload/policy\", FieldType.REGULAR, JsonSchemaVersion.V_2)", "var_name": "JSON_POLICY"}, {"original_string": "private final PolicyId policyId;", "modifier": "private final", "type": "PolicyId", "declarator": "policyId", "var_name": "policyId"}, {"original_string": "private final JsonObject policy;", "modifier": "private final", "type": "JsonObject", "declarator": "policy", "var_name": "policy"}], "methods": [{"identifier": "SudoRetrievePolicyResponse", "parameters": "(final PolicyId policyId,\n            final HttpStatusCode statusCode,\n            final JsonObject policy,\n            final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "", "signature": " SudoRetrievePolicyResponse(final PolicyId policyId,\n            final HttpStatusCode statusCode,\n            final JsonObject policy,\n            final DittoHeaders dittoHeaders)", "full_signature": "private  SudoRetrievePolicyResponse(final PolicyId policyId,\n            final HttpStatusCode statusCode,\n            final JsonObject policy,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "SudoRetrievePolicyResponse.SudoRetrievePolicyResponse(final PolicyId policyId,\n            final HttpStatusCode statusCode,\n            final JsonObject policy,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final PolicyId policyId, final Policy policy,\n            final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "SudoRetrievePolicyResponse", "signature": "SudoRetrievePolicyResponse of(final PolicyId policyId, final Policy policy,\n            final DittoHeaders dittoHeaders)", "full_signature": "public static SudoRetrievePolicyResponse of(final PolicyId policyId, final Policy policy,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "SudoRetrievePolicyResponse.of(final PolicyId policyId, final Policy policy,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final PolicyId policyId, final JsonObject policy,\n            final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "SudoRetrievePolicyResponse", "signature": "SudoRetrievePolicyResponse of(final PolicyId policyId, final JsonObject policy,\n            final DittoHeaders dittoHeaders)", "full_signature": "public static SudoRetrievePolicyResponse of(final PolicyId policyId, final JsonObject policy,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "SudoRetrievePolicyResponse.of(final PolicyId policyId, final JsonObject policy,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final String jsonString, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "SudoRetrievePolicyResponse", "signature": "SudoRetrievePolicyResponse fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "full_signature": "public static SudoRetrievePolicyResponse fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "class_method_signature": "SudoRetrievePolicyResponse.fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "SudoRetrievePolicyResponse", "signature": "SudoRetrievePolicyResponse fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "full_signature": "public static SudoRetrievePolicyResponse fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "class_method_signature": "SudoRetrievePolicyResponse.fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getEntityId", "parameters": "()", "modifiers": "@Override public", "return": "PolicyId", "signature": "PolicyId getEntityId()", "full_signature": "@Override public PolicyId getEntityId()", "class_method_signature": "SudoRetrievePolicyResponse.getEntityId()", "testcase": false, "constructor": false}, {"identifier": "getPolicy", "parameters": "()", "modifiers": "public", "return": "Policy", "signature": "Policy getPolicy()", "full_signature": "public Policy getPolicy()", "class_method_signature": "SudoRetrievePolicyResponse.getPolicy()", "testcase": false, "constructor": false}, {"identifier": "getEntity", "parameters": "(final JsonSchemaVersion schemaVersion)", "modifiers": "@Override public", "return": "JsonValue", "signature": "JsonValue getEntity(final JsonSchemaVersion schemaVersion)", "full_signature": "@Override public JsonValue getEntity(final JsonSchemaVersion schemaVersion)", "class_method_signature": "SudoRetrievePolicyResponse.getEntity(final JsonSchemaVersion schemaVersion)", "testcase": false, "constructor": false}, {"identifier": "setEntity", "parameters": "(final JsonValue entity)", "modifiers": "@Override public", "return": "SudoRetrievePolicyResponse", "signature": "SudoRetrievePolicyResponse setEntity(final JsonValue entity)", "full_signature": "@Override public SudoRetrievePolicyResponse setEntity(final JsonValue entity)", "class_method_signature": "SudoRetrievePolicyResponse.setEntity(final JsonValue entity)", "testcase": false, "constructor": false}, {"identifier": "setDittoHeaders", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "@Override public", "return": "SudoRetrievePolicyResponse", "signature": "SudoRetrievePolicyResponse setDittoHeaders(final DittoHeaders dittoHeaders)", "full_signature": "@Override public SudoRetrievePolicyResponse setDittoHeaders(final DittoHeaders dittoHeaders)", "class_method_signature": "SudoRetrievePolicyResponse.setDittoHeaders(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "appendPayload", "parameters": "(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "modifiers": "@Override protected", "return": "void", "signature": "void appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "full_signature": "@Override protected void appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "class_method_signature": "SudoRetrievePolicyResponse.appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "canEqual", "parameters": "(@Nullable final Object other)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean canEqual(@Nullable final Object other)", "full_signature": "@Override protected boolean canEqual(@Nullable final Object other)", "class_method_signature": "SudoRetrievePolicyResponse.canEqual(@Nullable final Object other)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object o)", "full_signature": "@Override public boolean equals(@Nullable final Object o)", "class_method_signature": "SudoRetrievePolicyResponse.equals(@Nullable final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SudoRetrievePolicyResponse.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SudoRetrievePolicyResponse.toString()", "testcase": false, "constructor": false}], "file": "services/models/policies/src/main/java/org/eclipse/ditto/services/models/policies/commands/sudo/SudoRetrievePolicyResponse.java"}, "focal_method": {"identifier": "of", "parameters": "(final PolicyId policyId, final Policy policy,\n            final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "SudoRetrievePolicyResponse", "body": "public static SudoRetrievePolicyResponse of(final PolicyId policyId, final Policy policy,\n            final DittoHeaders dittoHeaders) {\n        return new SudoRetrievePolicyResponse(policyId, HttpStatusCode.OK, //\n                checkNotNull(policy, \"Policy\") //\n                        .toJson(dittoHeaders.getSchemaVersion().orElse(policy.getLatestSchemaVersion()),\n                                FieldType.regularOrSpecial()),\n                dittoHeaders);\n    }", "signature": "SudoRetrievePolicyResponse of(final PolicyId policyId, final Policy policy,\n            final DittoHeaders dittoHeaders)", "full_signature": "public static SudoRetrievePolicyResponse of(final PolicyId policyId, final Policy policy,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "SudoRetrievePolicyResponse.of(final PolicyId policyId, final Policy policy,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false, "invocations": ["toJson", "checkNotNull", "orElse", "getSchemaVersion", "getLatestSchemaVersion", "regularOrSpecial"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}