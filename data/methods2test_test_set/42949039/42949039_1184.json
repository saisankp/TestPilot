{"test_class": {"identifier": "ExternalInterfaceRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private ExternalInterfaceRestController externalInterfaceRestController;", "modifier": "@InjectMocks\n    private", "type": "ExternalInterfaceRestController", "declarator": "externalInterfaceRestController", "var_name": "externalInterfaceRestController"}, {"original_string": "@Mock\n    private ExternalInterfaceService externalInterfaceService;", "modifier": "@Mock\n    private", "type": "ExternalInterfaceService", "declarator": "externalInterfaceService", "var_name": "externalInterfaceService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/ExternalInterfaceRestControllerTest.java"}, "test_case": {"identifier": "testGetExternalInterfaces", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetExternalInterfaces()\n    {\n        ExternalInterfaceKeys externalInterfaceKeys =\n            new ExternalInterfaceKeys(Arrays.asList(new ExternalInterfaceKey(EXTERNAL_INTERFACE), new ExternalInterfaceKey(EXTERNAL_INTERFACE_2)));\n\n        when(externalInterfaceService.getExternalInterfaces()).thenReturn(externalInterfaceKeys);\n\n        // Retrieve a list of external interface keys.\n        ExternalInterfaceKeys resultExternalInterfaceKeys = externalInterfaceRestController.getExternalInterfaces();\n\n        // Verify the external calls.\n        verify(externalInterfaceService).getExternalInterfaces();\n        verifyNoMoreInteractions(externalInterfaceService);\n\n        // Validate the returned object.\n        assertEquals(externalInterfaceKeys, resultExternalInterfaceKeys);\n    }", "signature": "void testGetExternalInterfaces()", "full_signature": "@Test public void testGetExternalInterfaces()", "class_method_signature": "ExternalInterfaceRestControllerTest.testGetExternalInterfaces()", "testcase": true, "constructor": false, "invocations": ["asList", "thenReturn", "when", "getExternalInterfaces", "getExternalInterfaces", "getExternalInterfaces", "verify", "verifyNoMoreInteractions", "assertEquals"]}, "focal_class": {"identifier": "ExternalInterfaceRestController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String EXTERNAL_INTERFACE_URI_PREFIX = \"/externalInterfaces\";", "modifier": "private static final", "type": "String", "declarator": "EXTERNAL_INTERFACE_URI_PREFIX = \"/externalInterfaces\"", "var_name": "EXTERNAL_INTERFACE_URI_PREFIX"}, {"original_string": "@Autowired\n    private ExternalInterfaceService externalInterfaceService;", "modifier": "@Autowired\n    private", "type": "ExternalInterfaceService", "declarator": "externalInterfaceService", "var_name": "externalInterfaceService"}], "methods": [{"identifier": "createExternalInterface", "parameters": "(@RequestBody ExternalInterfaceCreateRequest request)", "modifiers": "@RequestMapping(value = EXTERNAL_INTERFACE_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_EXTERNAL_INTERFACES_POST) public", "return": "ExternalInterface", "signature": "ExternalInterface createExternalInterface(@RequestBody ExternalInterfaceCreateRequest request)", "full_signature": "@RequestMapping(value = EXTERNAL_INTERFACE_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_EXTERNAL_INTERFACES_POST) public ExternalInterface createExternalInterface(@RequestBody ExternalInterfaceCreateRequest request)", "class_method_signature": "ExternalInterfaceRestController.createExternalInterface(@RequestBody ExternalInterfaceCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "deleteExternalInterface", "parameters": "(@PathVariable(\"externalInterfaceName\") String externalInterfaceName)", "modifiers": "@RequestMapping(value = EXTERNAL_INTERFACE_URI_PREFIX + \"/{externalInterfaceName}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_EXTERNAL_INTERFACES_DELETE) public", "return": "ExternalInterface", "signature": "ExternalInterface deleteExternalInterface(@PathVariable(\"externalInterfaceName\") String externalInterfaceName)", "full_signature": "@RequestMapping(value = EXTERNAL_INTERFACE_URI_PREFIX + \"/{externalInterfaceName}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_EXTERNAL_INTERFACES_DELETE) public ExternalInterface deleteExternalInterface(@PathVariable(\"externalInterfaceName\") String externalInterfaceName)", "class_method_signature": "ExternalInterfaceRestController.deleteExternalInterface(@PathVariable(\"externalInterfaceName\") String externalInterfaceName)", "testcase": false, "constructor": false}, {"identifier": "getExternalInterface", "parameters": "(@PathVariable(\"externalInterfaceName\") String externalInterfaceName)", "modifiers": "@RequestMapping(value = EXTERNAL_INTERFACE_URI_PREFIX + \"/{externalInterfaceName}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_EXTERNAL_INTERFACES_GET) public", "return": "ExternalInterface", "signature": "ExternalInterface getExternalInterface(@PathVariable(\"externalInterfaceName\") String externalInterfaceName)", "full_signature": "@RequestMapping(value = EXTERNAL_INTERFACE_URI_PREFIX + \"/{externalInterfaceName}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_EXTERNAL_INTERFACES_GET) public ExternalInterface getExternalInterface(@PathVariable(\"externalInterfaceName\") String externalInterfaceName)", "class_method_signature": "ExternalInterfaceRestController.getExternalInterface(@PathVariable(\"externalInterfaceName\") String externalInterfaceName)", "testcase": false, "constructor": false}, {"identifier": "getExternalInterfaces", "parameters": "()", "modifiers": "@RequestMapping(value = EXTERNAL_INTERFACE_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_EXTERNAL_INTERFACES_ALL_GET) public", "return": "ExternalInterfaceKeys", "signature": "ExternalInterfaceKeys getExternalInterfaces()", "full_signature": "@RequestMapping(value = EXTERNAL_INTERFACE_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_EXTERNAL_INTERFACES_ALL_GET) public ExternalInterfaceKeys getExternalInterfaces()", "class_method_signature": "ExternalInterfaceRestController.getExternalInterfaces()", "testcase": false, "constructor": false}, {"identifier": "updateExternalInterface", "parameters": "(@PathVariable(\"externalInterfaceName\") String externalInterfaceName,\n        @RequestBody ExternalInterfaceUpdateRequest request)", "modifiers": "@RequestMapping(value = EXTERNAL_INTERFACE_URI_PREFIX + \"/{externalInterfaceName}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_EXTERNAL_INTERFACES_PUT) public", "return": "ExternalInterface", "signature": "ExternalInterface updateExternalInterface(@PathVariable(\"externalInterfaceName\") String externalInterfaceName,\n        @RequestBody ExternalInterfaceUpdateRequest request)", "full_signature": "@RequestMapping(value = EXTERNAL_INTERFACE_URI_PREFIX + \"/{externalInterfaceName}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_EXTERNAL_INTERFACES_PUT) public ExternalInterface updateExternalInterface(@PathVariable(\"externalInterfaceName\") String externalInterfaceName,\n        @RequestBody ExternalInterfaceUpdateRequest request)", "class_method_signature": "ExternalInterfaceRestController.updateExternalInterface(@PathVariable(\"externalInterfaceName\") String externalInterfaceName,\n        @RequestBody ExternalInterfaceUpdateRequest request)", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/ExternalInterfaceRestController.java"}, "focal_method": {"identifier": "getExternalInterfaces", "parameters": "()", "modifiers": "@RequestMapping(value = EXTERNAL_INTERFACE_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_EXTERNAL_INTERFACES_ALL_GET) public", "return": "ExternalInterfaceKeys", "body": "@RequestMapping(value = EXTERNAL_INTERFACE_URI_PREFIX, method = RequestMethod.GET)\n    @Secured(SecurityFunctions.FN_EXTERNAL_INTERFACES_ALL_GET)\n    public ExternalInterfaceKeys getExternalInterfaces()\n    {\n        return externalInterfaceService.getExternalInterfaces();\n    }", "signature": "ExternalInterfaceKeys getExternalInterfaces()", "full_signature": "@RequestMapping(value = EXTERNAL_INTERFACE_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_EXTERNAL_INTERFACES_ALL_GET) public ExternalInterfaceKeys getExternalInterfaces()", "class_method_signature": "ExternalInterfaceRestController.getExternalInterfaces()", "testcase": false, "constructor": false, "invocations": ["getExternalInterfaces"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}