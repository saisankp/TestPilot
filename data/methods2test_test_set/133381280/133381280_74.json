{"test_class": {"identifier": "DefaultLookoutClientTest", "superclass": "", "interfaces": "", "fields": [], "file": "client/lookout-client/src/test/java/com/alipay/lookout/client/DefaultLookoutClientTest.java"}, "test_case": {"identifier": "testDefaultLookoutClient_addRegsitry", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDefaultLookoutClient_addRegsitry() throws Exception {\n        LookoutConfig lookoutConfig = new LookoutConfig();\n        DefaultLookoutClient client = new DefaultLookoutClient(\"demo\");\n        LookoutRegistry lookoutRegistry = new LookoutRegistry(lookoutConfig);\n        client.addRegistry(lookoutRegistry);\n        client.addRegistry(new DefaultRegistry(lookoutConfig));\n        Assert.assertEquals(2, ((CompositeRegistry) client.getRegistry()).getRegistries().size());\n        client.close();\n    }", "signature": "void testDefaultLookoutClient_addRegsitry()", "full_signature": "@Test public void testDefaultLookoutClient_addRegsitry()", "class_method_signature": "DefaultLookoutClientTest.testDefaultLookoutClient_addRegsitry()", "testcase": true, "constructor": false, "invocations": ["addRegistry", "addRegistry", "assertEquals", "size", "getRegistries", "getRegistry", "close"]}, "focal_class": {"identifier": "DefaultLookoutClient", "superclass": "extends AbstractLookoutClient", "interfaces": "", "fields": [{"original_string": "private volatile boolean isAutoRegisterExtendedMetrics = false;", "modifier": "private volatile", "type": "boolean", "declarator": "isAutoRegisterExtendedMetrics = false", "var_name": "isAutoRegisterExtendedMetrics"}], "methods": [{"identifier": "DefaultLookoutClient", "parameters": "(String appName)", "modifiers": "public", "return": "", "signature": " DefaultLookoutClient(String appName)", "full_signature": "public  DefaultLookoutClient(String appName)", "class_method_signature": "DefaultLookoutClient.DefaultLookoutClient(String appName)", "testcase": false, "constructor": true}, {"identifier": "addRegistry", "parameters": "(MetricRegistry registry)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void addRegistry(MetricRegistry registry)", "full_signature": "@Override public synchronized void addRegistry(MetricRegistry registry)", "class_method_signature": "DefaultLookoutClient.addRegistry(MetricRegistry registry)", "testcase": false, "constructor": false}, {"identifier": "registerExtendedMetrics", "parameters": "()", "modifiers": "@Override public synchronized", "return": "void", "signature": "void registerExtendedMetrics()", "full_signature": "@Override public synchronized void registerExtendedMetrics()", "class_method_signature": "DefaultLookoutClient.registerExtendedMetrics()", "testcase": false, "constructor": false}], "file": "client/lookout-client/src/main/java/com/alipay/lookout/client/DefaultLookoutClient.java"}, "focal_method": {"identifier": "addRegistry", "parameters": "(MetricRegistry registry)", "modifiers": "@Override public synchronized", "return": "void", "body": "@Override\n    public synchronized void addRegistry(MetricRegistry registry) {\n        if (registry == null) {\n            return;\n        }\n        if (isAutoRegisterExtendedMetrics) {\n            registry.registerExtendedMetrics();\n        }\n        super.addRegistry(registry);\n\n        if (registry instanceof LookoutRegistry) {\n            MetricConfig config = ((LookoutRegistry) registry).getConfig();\n            if (!config.containsKey(APP_NAME)) {\n                //HttpObserver needs\n                config.setProperty(APP_NAME, getAppName());\n            }\n            if (!config.getBoolean(LOOKOUT_EXPORTER_ENABLE, false)) {\n                return;\n            }\n            try {\n                setMetricsHttpExporter(PollerUtils.exportHttp((LookoutRegistry) registry));\n            } catch (Exception e) {\n                logger.error(\"fail to start MetricsHttpExporter\", e);\n            }\n        }\n    }", "signature": "void addRegistry(MetricRegistry registry)", "full_signature": "@Override public synchronized void addRegistry(MetricRegistry registry)", "class_method_signature": "DefaultLookoutClient.addRegistry(MetricRegistry registry)", "testcase": false, "constructor": false, "invocations": ["registerExtendedMetrics", "addRegistry", "getConfig", "containsKey", "setProperty", "getAppName", "getBoolean", "setMetricsHttpExporter", "exportHttp", "error"]}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}