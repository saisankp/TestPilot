{"test_class": {"identifier": "SortFunctionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SortFunction sortFunction;", "modifier": "private", "type": "SortFunction", "declarator": "sortFunction", "var_name": "sortFunction"}], "file": "kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/runtime/functions/SortFunctionTest.java"}, "test_case": {"identifier": "invokeList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invokeList() {\n        FunctionTestUtil.assertResultList(sortFunction.invoke(Arrays.asList(10, 4, 5, 12)), Arrays.asList(4, 5, 10, 12));\n        FunctionTestUtil.assertResultList(sortFunction.invoke(Arrays.asList(\"a\", \"c\", \"b\")), Arrays.asList(\"a\", \"b\", \"c\"));\n    }", "signature": "void invokeList()", "full_signature": "@Test public void invokeList()", "class_method_signature": "SortFunctionTest.invokeList()", "testcase": true, "constructor": false, "invocations": ["assertResultList", "invoke", "asList", "asList", "assertResultList", "invoke", "asList", "asList"]}, "focal_class": {"identifier": "SortFunction", "superclass": "extends BaseFEELFunction", "interfaces": "", "fields": [], "methods": [{"identifier": "SortFunction", "parameters": "()", "modifiers": "public", "return": "", "signature": " SortFunction()", "full_signature": "public  SortFunction()", "class_method_signature": "SortFunction.SortFunction()", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(@ParameterName( \"ctx\" ) EvaluationContext ctx,\n                                             @ParameterName(\"list\") List list,\n                                             @ParameterName(\"precedes\") FEELFunction function)", "modifiers": "public", "return": "FEELFnResult<List<Object>>", "signature": "FEELFnResult<List<Object>> invoke(@ParameterName( \"ctx\" ) EvaluationContext ctx,\n                                             @ParameterName(\"list\") List list,\n                                             @ParameterName(\"precedes\") FEELFunction function)", "full_signature": "public FEELFnResult<List<Object>> invoke(@ParameterName( \"ctx\" ) EvaluationContext ctx,\n                                             @ParameterName(\"list\") List list,\n                                             @ParameterName(\"precedes\") FEELFunction function)", "class_method_signature": "SortFunction.invoke(@ParameterName( \"ctx\" ) EvaluationContext ctx,\n                                             @ParameterName(\"list\") List list,\n                                             @ParameterName(\"precedes\") FEELFunction function)", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(@ParameterName(\"list\") List list)", "modifiers": "public", "return": "FEELFnResult<List<Object>>", "signature": "FEELFnResult<List<Object>> invoke(@ParameterName(\"list\") List list)", "full_signature": "public FEELFnResult<List<Object>> invoke(@ParameterName(\"list\") List list)", "class_method_signature": "SortFunction.invoke(@ParameterName(\"list\") List list)", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(final List list, final Comparator<? super Object> comparator)", "modifiers": "private", "return": "FEELFnResult<List<Object>>", "signature": "FEELFnResult<List<Object>> invoke(final List list, final Comparator<? super Object> comparator)", "full_signature": "private FEELFnResult<List<Object>> invoke(final List list, final Comparator<? super Object> comparator)", "class_method_signature": "SortFunction.invoke(final List list, final Comparator<? super Object> comparator)", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/runtime/functions/SortFunction.java"}, "focal_method": {"identifier": "invoke", "parameters": "(@ParameterName( \"ctx\" ) EvaluationContext ctx,\n                                             @ParameterName(\"list\") List list,\n                                             @ParameterName(\"precedes\") FEELFunction function)", "modifiers": "public", "return": "FEELFnResult<List<Object>>", "body": "public FEELFnResult<List<Object>> invoke(@ParameterName( \"ctx\" ) EvaluationContext ctx,\n                                             @ParameterName(\"list\") List list,\n                                             @ParameterName(\"precedes\") FEELFunction function) {\n        if ( function == null ) {\n            return invoke( list );\n        } else {\n            return invoke(list, (a, b) -> {\n                final Object result = function.invokeReflectively(ctx, new Object[]{a, b});\n                if (!(result instanceof Boolean) || ((Boolean) result)) {\n                    return -1;\n                } else {\n                    return 1;\n                }\n            } );\n        }\n    }", "signature": "FEELFnResult<List<Object>> invoke(@ParameterName( \"ctx\" ) EvaluationContext ctx,\n                                             @ParameterName(\"list\") List list,\n                                             @ParameterName(\"precedes\") FEELFunction function)", "full_signature": "public FEELFnResult<List<Object>> invoke(@ParameterName( \"ctx\" ) EvaluationContext ctx,\n                                             @ParameterName(\"list\") List list,\n                                             @ParameterName(\"precedes\") FEELFunction function)", "class_method_signature": "SortFunction.invoke(@ParameterName( \"ctx\" ) EvaluationContext ctx,\n                                             @ParameterName(\"list\") List list,\n                                             @ParameterName(\"precedes\") FEELFunction function)", "testcase": false, "constructor": false, "invocations": ["invoke", "invoke", "invokeReflectively"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}