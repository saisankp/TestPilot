{"test_class": {"identifier": "DecimalTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int TEST_SCALE = 2;", "modifier": "private static final", "type": "int", "declarator": "TEST_SCALE = 2", "var_name": "TEST_SCALE"}, {"original_string": "private static final BigDecimal TEST_DECIMAL = new BigDecimal(new BigInteger(\"156\"), TEST_SCALE);", "modifier": "private static final", "type": "BigDecimal", "declarator": "TEST_DECIMAL = new BigDecimal(new BigInteger(\"156\"), TEST_SCALE)", "var_name": "TEST_DECIMAL"}, {"original_string": "private static final BigDecimal TEST_DECIMAL_NEGATIVE = new BigDecimal(new BigInteger(\"-156\"), TEST_SCALE);", "modifier": "private static final", "type": "BigDecimal", "declarator": "TEST_DECIMAL_NEGATIVE = new BigDecimal(new BigInteger(\"-156\"), TEST_SCALE)", "var_name": "TEST_DECIMAL_NEGATIVE"}, {"original_string": "private static final byte[] TEST_BYTES = new byte[]{0, -100};", "modifier": "private static final", "type": "byte[]", "declarator": "TEST_BYTES = new byte[]{0, -100}", "var_name": "TEST_BYTES"}, {"original_string": "private static final byte[] TEST_BYTES_NEGATIVE = new byte[]{-1, 100};", "modifier": "private static final", "type": "byte[]", "declarator": "TEST_BYTES_NEGATIVE = new byte[]{-1, 100}", "var_name": "TEST_BYTES_NEGATIVE"}], "file": "connect/api/src/test/java/org/apache/kafka/connect/data/DecimalTest.java"}, "test_case": {"identifier": "testBuilder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuilder() {\n        Schema plain = Decimal.builder(2).build();\n        assertEquals(Decimal.LOGICAL_NAME, plain.name());\n        assertEquals(Collections.singletonMap(Decimal.SCALE_FIELD, \"2\"), plain.parameters());\n        assertEquals(1, (Object) plain.version());\n    }", "signature": "void testBuilder()", "full_signature": "@Test public void testBuilder()", "class_method_signature": "DecimalTest.testBuilder()", "testcase": true, "constructor": false, "invocations": ["build", "builder", "assertEquals", "name", "assertEquals", "singletonMap", "parameters", "assertEquals", "version"]}, "focal_class": {"identifier": "Decimal", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String LOGICAL_NAME = \"org.apache.kafka.connect.data.Decimal\";", "modifier": "public static final", "type": "String", "declarator": "LOGICAL_NAME = \"org.apache.kafka.connect.data.Decimal\"", "var_name": "LOGICAL_NAME"}, {"original_string": "public static final String SCALE_FIELD = \"scale\";", "modifier": "public static final", "type": "String", "declarator": "SCALE_FIELD = \"scale\"", "var_name": "SCALE_FIELD"}], "methods": [{"identifier": "builder", "parameters": "(int scale)", "modifiers": "public static", "return": "SchemaBuilder", "signature": "SchemaBuilder builder(int scale)", "full_signature": "public static SchemaBuilder builder(int scale)", "class_method_signature": "Decimal.builder(int scale)", "testcase": false, "constructor": false}, {"identifier": "schema", "parameters": "(int scale)", "modifiers": "public static", "return": "Schema", "signature": "Schema schema(int scale)", "full_signature": "public static Schema schema(int scale)", "class_method_signature": "Decimal.schema(int scale)", "testcase": false, "constructor": false}, {"identifier": "fromLogical", "parameters": "(Schema schema, BigDecimal value)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] fromLogical(Schema schema, BigDecimal value)", "full_signature": "public static byte[] fromLogical(Schema schema, BigDecimal value)", "class_method_signature": "Decimal.fromLogical(Schema schema, BigDecimal value)", "testcase": false, "constructor": false}, {"identifier": "toLogical", "parameters": "(Schema schema, byte[] value)", "modifiers": "public static", "return": "BigDecimal", "signature": "BigDecimal toLogical(Schema schema, byte[] value)", "full_signature": "public static BigDecimal toLogical(Schema schema, byte[] value)", "class_method_signature": "Decimal.toLogical(Schema schema, byte[] value)", "testcase": false, "constructor": false}, {"identifier": "scale", "parameters": "(Schema schema)", "modifiers": "private static", "return": "int", "signature": "int scale(Schema schema)", "full_signature": "private static int scale(Schema schema)", "class_method_signature": "Decimal.scale(Schema schema)", "testcase": false, "constructor": false}], "file": "connect/api/src/main/java/org/apache/kafka/connect/data/Decimal.java"}, "focal_method": {"identifier": "builder", "parameters": "(int scale)", "modifiers": "public static", "return": "SchemaBuilder", "body": "public static SchemaBuilder builder(int scale) {\n        return SchemaBuilder.bytes()\n                .name(LOGICAL_NAME)\n                .parameter(SCALE_FIELD, ((Integer) scale).toString())\n                .version(1);\n    }", "signature": "SchemaBuilder builder(int scale)", "full_signature": "public static SchemaBuilder builder(int scale)", "class_method_signature": "Decimal.builder(int scale)", "testcase": false, "constructor": false, "invocations": ["version", "parameter", "name", "bytes", "toString"]}, "repository": {"repo_id": 135978112, "url": "https://github.com/anurnomeru/kafka-0.10.0.1-source-reading", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 2953, "license": "licensed"}}