{"test_class": {"identifier": "AbstractCommonShapeFileReaderTest", "superclass": "extends AbstractIoShapeTest", "interfaces": "", "fields": [{"original_string": "private static final String TEST_FILE = \"org/arakhne/afc/io/shape/test.shx\";", "modifier": "private static final", "type": "String", "declarator": "TEST_FILE = \"org/arakhne/afc/io/shape/test.shx\"", "var_name": "TEST_FILE"}, {"original_string": "private static final int TEST_FILE_SIZE = 268;", "modifier": "private static final", "type": "int", "declarator": "TEST_FILE_SIZE = 268", "var_name": "TEST_FILE_SIZE"}, {"original_string": "private URL resource;", "modifier": "private", "type": "URL", "declarator": "resource", "var_name": "resource"}, {"original_string": "private AbstractCommonShapeFileReader<Object> reader;", "modifier": "private", "type": "AbstractCommonShapeFileReader<Object>", "declarator": "reader", "var_name": "reader"}], "file": "advanced/shapefile/src/test/java/org/arakhne/afc/io/shape/AbstractCommonShapeFileReaderTest.java"}, "test_case": {"identifier": "testIteratorClassBoolean_false", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testIteratorClassBoolean_false() throws Exception {\n\t\tIterator<SubNumberStub> iterator = this.reader.iterator(SubNumberStub.class, false);\n\t\tint recordCount = (TEST_FILE_SIZE - 100) / 8;\n\t\tSubNumberStub obj;\n\t\t\n\t\tfor(int i=0,j=1; i<recordCount/2; ++i, j+=2) {\n\t\t\tassertTrue(iterator.hasNext());\n\t\t\tobj = iterator.next();\n\t\t\tassertNotNull(obj);\n\t\t\tassertEquals(j, ((Number)obj).intValue());\n\t\t}\n\t\t\n\t\tassertFalse(iterator.hasNext());\n\t}", "signature": "void testIteratorClassBoolean_false()", "full_signature": "@Test public void testIteratorClassBoolean_false()", "class_method_signature": "AbstractCommonShapeFileReaderTest.testIteratorClassBoolean_false()", "testcase": true, "constructor": false, "invocations": ["iterator", "assertTrue", "hasNext", "next", "assertNotNull", "assertEquals", "intValue", "assertFalse", "hasNext"]}, "focal_class": {"identifier": "AbstractCommonShapeFileReader", "superclass": "", "interfaces": "implements Iterable<E>, AutoCloseable", "fields": [{"original_string": "protected static final int BLOCK_SIZE = 512;", "modifier": "protected static final", "type": "int", "declarator": "BLOCK_SIZE = 512", "var_name": "BLOCK_SIZE"}, {"original_string": "protected int fileSize;", "modifier": "protected", "type": "int", "declarator": "fileSize", "var_name": "fileSize"}, {"original_string": "protected double minx;", "modifier": "protected", "type": "double", "declarator": "minx", "var_name": "minx"}, {"original_string": "protected double miny;", "modifier": "protected", "type": "double", "declarator": "miny", "var_name": "miny"}, {"original_string": "protected double minz;", "modifier": "protected", "type": "double", "declarator": "minz", "var_name": "minz"}, {"original_string": "protected double minm;", "modifier": "protected", "type": "double", "declarator": "minm", "var_name": "minm"}, {"original_string": "protected double maxx;", "modifier": "protected", "type": "double", "declarator": "maxx", "var_name": "maxx"}, {"original_string": "protected double maxy;", "modifier": "protected", "type": "double", "declarator": "maxy", "var_name": "maxy"}, {"original_string": "protected double maxz;", "modifier": "protected", "type": "double", "declarator": "maxz", "var_name": "maxz"}, {"original_string": "protected double maxm;", "modifier": "protected", "type": "double", "declarator": "maxm", "var_name": "maxm"}, {"original_string": "protected ShapeElementType expectedShapeType;", "modifier": "protected", "type": "ShapeElementType", "declarator": "expectedShapeType", "var_name": "expectedShapeType"}, {"original_string": "private int bufferPosition;", "modifier": "private", "type": "int", "declarator": "bufferPosition", "var_name": "bufferPosition"}, {"original_string": "private boolean seekEnabled = true;", "modifier": "private", "type": "boolean", "declarator": "seekEnabled = true", "var_name": "seekEnabled"}, {"original_string": "private final ReadableByteChannel stream;", "modifier": "private final", "type": "ReadableByteChannel", "declarator": "stream", "var_name": "stream"}, {"original_string": "private ByteBuffer buffer;", "modifier": "private", "type": "ByteBuffer", "declarator": "buffer", "var_name": "buffer"}, {"original_string": "private boolean headerWasread;", "modifier": "private", "type": "boolean", "declarator": "headerWasread", "var_name": "headerWasread"}, {"original_string": "private Progression taskProgression;", "modifier": "private", "type": "Progression", "declarator": "taskProgression", "var_name": "taskProgression"}, {"original_string": "private int nextExpectedRecordIndex = -1;", "modifier": "private", "type": "int", "declarator": "nextExpectedRecordIndex = -1", "var_name": "nextExpectedRecordIndex"}], "methods": [{"identifier": "AbstractCommonShapeFileReader", "parameters": "(ReadableByteChannel inputStream)", "modifiers": "public", "return": "", "signature": " AbstractCommonShapeFileReader(ReadableByteChannel inputStream)", "full_signature": "public  AbstractCommonShapeFileReader(ReadableByteChannel inputStream)", "class_method_signature": "AbstractCommonShapeFileReader.AbstractCommonShapeFileReader(ReadableByteChannel inputStream)", "testcase": false, "constructor": true}, {"identifier": "AbstractCommonShapeFileReader", "parameters": "(InputStream inputStream)", "modifiers": "public", "return": "", "signature": " AbstractCommonShapeFileReader(InputStream inputStream)", "full_signature": "public  AbstractCommonShapeFileReader(InputStream inputStream)", "class_method_signature": "AbstractCommonShapeFileReader.AbstractCommonShapeFileReader(InputStream inputStream)", "testcase": false, "constructor": true}, {"identifier": "AbstractCommonShapeFileReader", "parameters": "(File file)", "modifiers": "@SuppressWarnings(\"resource\") public", "return": "", "signature": " AbstractCommonShapeFileReader(File file)", "full_signature": "@SuppressWarnings(\"resource\") public  AbstractCommonShapeFileReader(File file)", "class_method_signature": "AbstractCommonShapeFileReader.AbstractCommonShapeFileReader(File file)", "testcase": false, "constructor": true}, {"identifier": "AbstractCommonShapeFileReader", "parameters": "(URL file)", "modifiers": "public", "return": "", "signature": " AbstractCommonShapeFileReader(URL file)", "full_signature": "public  AbstractCommonShapeFileReader(URL file)", "class_method_signature": "AbstractCommonShapeFileReader.AbstractCommonShapeFileReader(URL file)", "testcase": false, "constructor": true}, {"identifier": "isHeaderRead", "parameters": "()", "modifiers": "@Pure protected", "return": "boolean", "signature": "boolean isHeaderRead()", "full_signature": "@Pure protected boolean isHeaderRead()", "class_method_signature": "AbstractCommonShapeFileReader.isHeaderRead()", "testcase": false, "constructor": false}, {"identifier": "getTaskProgression", "parameters": "()", "modifiers": "@Pure public", "return": "Progression", "signature": "Progression getTaskProgression()", "full_signature": "@Pure public Progression getTaskProgression()", "class_method_signature": "AbstractCommonShapeFileReader.getTaskProgression()", "testcase": false, "constructor": false}, {"identifier": "setTaskProgression", "parameters": "(Progression progressBar)", "modifiers": "public", "return": "void", "signature": "void setTaskProgression(Progression progressBar)", "full_signature": "public void setTaskProgression(Progression progressBar)", "class_method_signature": "AbstractCommonShapeFileReader.setTaskProgression(Progression progressBar)", "testcase": false, "constructor": false}, {"identifier": "getFileSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFileSize()", "full_signature": "public int getFileSize()", "class_method_signature": "AbstractCommonShapeFileReader.getFileSize()", "testcase": false, "constructor": false}, {"identifier": "getShapeElementType", "parameters": "()", "modifiers": "public", "return": "ShapeElementType", "signature": "ShapeElementType getShapeElementType()", "full_signature": "public ShapeElementType getShapeElementType()", "class_method_signature": "AbstractCommonShapeFileReader.getShapeElementType()", "testcase": false, "constructor": false}, {"identifier": "getFileReadingPosition", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFileReadingPosition()", "full_signature": "public int getFileReadingPosition()", "class_method_signature": "AbstractCommonShapeFileReader.getFileReadingPosition()", "testcase": false, "constructor": false}, {"identifier": "getBoundsFromHeader", "parameters": "()", "modifiers": "public", "return": "ESRIBounds", "signature": "ESRIBounds getBoundsFromHeader()", "full_signature": "public ESRIBounds getBoundsFromHeader()", "class_method_signature": "AbstractCommonShapeFileReader.getBoundsFromHeader()", "testcase": false, "constructor": false}, {"identifier": "readHeader", "parameters": "()", "modifiers": "@SuppressWarnings({\"checkstyle:cyclomaticcomplexity\", \"checkstyle:npathcomplexity\"}) public final", "return": "void", "signature": "void readHeader()", "full_signature": "@SuppressWarnings({\"checkstyle:cyclomaticcomplexity\", \"checkstyle:npathcomplexity\"}) public final void readHeader()", "class_method_signature": "AbstractCommonShapeFileReader.readHeader()", "testcase": false, "constructor": false}, {"identifier": "initializeContentBuffer", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initializeContentBuffer()", "full_signature": "private void initializeContentBuffer()", "class_method_signature": "AbstractCommonShapeFileReader.initializeContentBuffer()", "testcase": false, "constructor": false}, {"identifier": "disableSeek", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void disableSeek()", "full_signature": "public void disableSeek()", "class_method_signature": "AbstractCommonShapeFileReader.disableSeek()", "testcase": false, "constructor": false}, {"identifier": "isSeekEnabled", "parameters": "()", "modifiers": "@Pure public", "return": "boolean", "signature": "boolean isSeekEnabled()", "full_signature": "@Pure public boolean isSeekEnabled()", "class_method_signature": "AbstractCommonShapeFileReader.isSeekEnabled()", "testcase": false, "constructor": false}, {"identifier": "seek", "parameters": "(int recordIndex)", "modifiers": "public abstract", "return": "void", "signature": "void seek(int recordIndex)", "full_signature": "public abstract void seek(int recordIndex)", "class_method_signature": "AbstractCommonShapeFileReader.seek(int recordIndex)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "()", "modifiers": "public", "return": "E", "signature": "E read()", "full_signature": "public E read()", "class_method_signature": "AbstractCommonShapeFileReader.read()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "AbstractCommonShapeFileReader.close()", "testcase": false, "constructor": false}, {"identifier": "readRecord", "parameters": "(int recordIndex)", "modifiers": "protected abstract", "return": "E", "signature": "E readRecord(int recordIndex)", "full_signature": "protected abstract E readRecord(int recordIndex)", "class_method_signature": "AbstractCommonShapeFileReader.readRecord(int recordIndex)", "testcase": false, "constructor": false}, {"identifier": "preReadingStage", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void preReadingStage()", "full_signature": "protected void preReadingStage()", "class_method_signature": "AbstractCommonShapeFileReader.preReadingStage()", "testcase": false, "constructor": false}, {"identifier": "postReadingStage", "parameters": "(boolean success)", "modifiers": "protected", "return": "void", "signature": "void postReadingStage(boolean success)", "full_signature": "protected void postReadingStage(boolean success)", "class_method_signature": "AbstractCommonShapeFileReader.postReadingStage(boolean success)", "testcase": false, "constructor": false}, {"identifier": "postRecordReadingStage", "parameters": "(E element_representation)", "modifiers": "protected", "return": "boolean", "signature": "boolean postRecordReadingStage(E element_representation)", "full_signature": "protected boolean postRecordReadingStage(E element_representation)", "class_method_signature": "AbstractCommonShapeFileReader.postRecordReadingStage(E element_representation)", "testcase": false, "constructor": false}, {"identifier": "postHeaderReadingStage", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void postHeaderReadingStage()", "full_signature": "protected void postHeaderReadingStage()", "class_method_signature": "AbstractCommonShapeFileReader.postHeaderReadingStage()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<E>", "signature": "Iterator<E> iterator()", "full_signature": "@Override public Iterator<E> iterator()", "class_method_signature": "AbstractCommonShapeFileReader.iterator()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "(boolean disableSeek)", "modifiers": "public", "return": "Iterator<E>", "signature": "Iterator<E> iterator(boolean disableSeek)", "full_signature": "public Iterator<E> iterator(boolean disableSeek)", "class_method_signature": "AbstractCommonShapeFileReader.iterator(boolean disableSeek)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "(Class<EE> type)", "modifiers": "public", "return": "Iterator<EE>", "signature": "Iterator<EE> iterator(Class<EE> type)", "full_signature": "public Iterator<EE> iterator(Class<EE> type)", "class_method_signature": "AbstractCommonShapeFileReader.iterator(Class<EE> type)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "(Class<EE> type, boolean disableSeek)", "modifiers": "public", "return": "Iterator<EE>", "signature": "Iterator<EE> iterator(Class<EE> type, boolean disableSeek)", "full_signature": "public Iterator<EE> iterator(Class<EE> type, boolean disableSeek)", "class_method_signature": "AbstractCommonShapeFileReader.iterator(Class<EE> type, boolean disableSeek)", "testcase": false, "constructor": false}, {"identifier": "setReadingPosition", "parameters": "(int recordIndex, int byteIndex)", "modifiers": "protected", "return": "void", "signature": "void setReadingPosition(int recordIndex, int byteIndex)", "full_signature": "protected void setReadingPosition(int recordIndex, int byteIndex)", "class_method_signature": "AbstractCommonShapeFileReader.setReadingPosition(int recordIndex, int byteIndex)", "testcase": false, "constructor": false}, {"identifier": "ensureAvailableBytes", "parameters": "(int amount)", "modifiers": "protected", "return": "void", "signature": "void ensureAvailableBytes(int amount)", "full_signature": "protected void ensureAvailableBytes(int amount)", "class_method_signature": "AbstractCommonShapeFileReader.ensureAvailableBytes(int amount)", "testcase": false, "constructor": false}, {"identifier": "skipBytes", "parameters": "(int amount)", "modifiers": "protected", "return": "void", "signature": "void skipBytes(int amount)", "full_signature": "protected void skipBytes(int amount)", "class_method_signature": "AbstractCommonShapeFileReader.skipBytes(int amount)", "testcase": false, "constructor": false}, {"identifier": "readBEInt", "parameters": "()", "modifiers": "protected final", "return": "int", "signature": "int readBEInt()", "full_signature": "protected final int readBEInt()", "class_method_signature": "AbstractCommonShapeFileReader.readBEInt()", "testcase": false, "constructor": false}, {"identifier": "readBEDouble", "parameters": "()", "modifiers": "protected final", "return": "double", "signature": "double readBEDouble()", "full_signature": "protected final double readBEDouble()", "class_method_signature": "AbstractCommonShapeFileReader.readBEDouble()", "testcase": false, "constructor": false}, {"identifier": "readLEInt", "parameters": "()", "modifiers": "protected final", "return": "int", "signature": "int readLEInt()", "full_signature": "protected final int readLEInt()", "class_method_signature": "AbstractCommonShapeFileReader.readLEInt()", "testcase": false, "constructor": false}, {"identifier": "readLEDouble", "parameters": "()", "modifiers": "protected final", "return": "double", "signature": "double readLEDouble()", "full_signature": "protected final double readLEDouble()", "class_method_signature": "AbstractCommonShapeFileReader.readLEDouble()", "testcase": false, "constructor": false}], "file": "advanced/shapefile/src/main/java/org/arakhne/afc/io/shape/AbstractCommonShapeFileReader.java"}, "focal_method": {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<E>", "body": "@Override\n\tpublic Iterator<E> iterator() {\n\t\ttry {\n\t\t\tdisableSeek();\n\t\t} catch (IOException exception) {\n\t\t\t//\n\t\t}\n\t\treturn new ElementIterator();\n\t}", "signature": "Iterator<E> iterator()", "full_signature": "@Override public Iterator<E> iterator()", "class_method_signature": "AbstractCommonShapeFileReader.iterator()", "testcase": false, "constructor": false, "invocations": ["disableSeek"]}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}