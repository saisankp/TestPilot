{"test_class": {"identifier": "OpenLRXMLEncoderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int POS_OFFSET_WP_LINE_EXAMPLE = 150;", "modifier": "private static final", "type": "int", "declarator": "POS_OFFSET_WP_LINE_EXAMPLE = 150", "var_name": "POS_OFFSET_WP_LINE_EXAMPLE"}, {"original_string": "private static final OpenLRXMLEncoder XML_ENCODER = new OpenLRXMLEncoder();", "modifier": "private static final", "type": "OpenLRXMLEncoder", "declarator": "XML_ENCODER = new OpenLRXMLEncoder()", "var_name": "XML_ENCODER"}, {"original_string": "private List<LocationReferencePoint> pointsWPLineExample;", "modifier": "private", "type": "List<LocationReferencePoint>", "declarator": "pointsWPLineExample", "var_name": "pointsWPLineExample"}, {"original_string": "private Offsets nullOffsets;", "modifier": "private", "type": "Offsets", "declarator": "nullOffsets", "var_name": "nullOffsets"}, {"original_string": "private Offsets offsetsWPLine;", "modifier": "private", "type": "Offsets", "declarator": "offsetsWPLine", "var_name": "offsetsWPLine"}, {"original_string": "private RawLocationReference lineLocWhitePaperExample;", "modifier": "private", "type": "RawLocationReference", "declarator": "lineLocWhitePaperExample", "var_name": "lineLocWhitePaperExample"}, {"original_string": "private LocationReference validEncodeLocation;", "modifier": "private", "type": "LocationReference", "declarator": "validEncodeLocation", "var_name": "validEncodeLocation"}], "file": "xml/src/test/java/openlr/xml/OpenLRXMLEncoderTest.java"}, "test_case": {"identifier": "testWhitePaperLineLocation", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n    public final void testWhitePaperLineLocation() {\n        LocationReference ref = XML_ENCODER\n                .encodeData(lineLocWhitePaperExample);\n\n        XMLLocationReference xmlLoc = ((OpenLR) ref.getLocationReferenceData())\n                .getXMLLocationReference();\n\n        LineLocationReference lineLoc = xmlLoc.getLineLocationReference();\n\n        Utils.checkLRPs(lineLoc.getLocationReferencePoint(),\n                lineLoc.getLastLocationReferencePoint(), pointsWPLineExample);\n\n        Utils.checkOffsets(lineLoc.getOffsets(), offsetsWPLine);\n\n        validEncodeLocation = ref;\n    }", "signature": "void testWhitePaperLineLocation()", "full_signature": "@Test public final void testWhitePaperLineLocation()", "class_method_signature": "OpenLRXMLEncoderTest.testWhitePaperLineLocation()", "testcase": true, "constructor": false, "invocations": ["encodeData", "getXMLLocationReference", "getLocationReferenceData", "getLineLocationReference", "checkLRPs", "getLocationReferencePoint", "getLastLocationReferencePoint", "checkOffsets", "getOffsets"]}, "focal_class": {"identifier": "OpenLRXMLEncoder", "superclass": "", "interfaces": "implements PhysicalEncoder", "fields": [{"original_string": "private static final int[] VERSIONS = {1};", "modifier": "private static final", "type": "int[]", "declarator": "VERSIONS = {1}", "var_name": "VERSIONS"}], "methods": [{"identifier": "getDataClass", "parameters": "()", "modifiers": "public final", "return": "Class<?>", "signature": "Class<?> getDataClass()", "full_signature": "public final Class<?> getDataClass()", "class_method_signature": "OpenLRXMLEncoder.getDataClass()", "testcase": false, "constructor": false}, {"identifier": "getDataFormatIdentifier", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getDataFormatIdentifier()", "full_signature": "public final String getDataFormatIdentifier()", "class_method_signature": "OpenLRXMLEncoder.getDataFormatIdentifier()", "testcase": false, "constructor": false}, {"identifier": "getSupportedVersions", "parameters": "()", "modifiers": "public final", "return": "int[]", "signature": "int[] getSupportedVersions()", "full_signature": "public final int[] getSupportedVersions()", "class_method_signature": "OpenLRXMLEncoder.getSupportedVersions()", "testcase": false, "constructor": false}, {"identifier": "encodeData", "parameters": "(\n            final RawLocationReference rawLocRef)", "modifiers": "public final", "return": "LocationReference", "signature": "LocationReference encodeData(\n            final RawLocationReference rawLocRef)", "full_signature": "public final LocationReference encodeData(\n            final RawLocationReference rawLocRef)", "class_method_signature": "OpenLRXMLEncoder.encodeData(\n            final RawLocationReference rawLocRef)", "testcase": false, "constructor": false}, {"identifier": "checkVersion", "parameters": "(final int ver)", "modifiers": "private", "return": "boolean", "signature": "boolean checkVersion(final int ver)", "full_signature": "private boolean checkVersion(final int ver)", "class_method_signature": "OpenLRXMLEncoder.checkVersion(final int ver)", "testcase": false, "constructor": false}, {"identifier": "encodeData", "parameters": "(\n            final RawLocationReference rawLocRef, final int version)", "modifiers": "public final", "return": "LocationReference", "signature": "LocationReference encodeData(\n            final RawLocationReference rawLocRef, final int version)", "full_signature": "public final LocationReference encodeData(\n            final RawLocationReference rawLocRef, final int version)", "class_method_signature": "OpenLRXMLEncoder.encodeData(\n            final RawLocationReference rawLocRef, final int version)", "testcase": false, "constructor": false}], "file": "xml/src/main/java/openlr/xml/OpenLRXMLEncoder.java"}, "focal_method": {"identifier": "encodeData", "parameters": "(\n            final RawLocationReference rawLocRef)", "modifiers": "public final", "return": "LocationReference", "body": "public final LocationReference encodeData(\n            final RawLocationReference rawLocRef) {\n        return encodeData(rawLocRef, VERSIONS[VERSIONS.length - 1]);\n    }", "signature": "LocationReference encodeData(\n            final RawLocationReference rawLocRef)", "full_signature": "public final LocationReference encodeData(\n            final RawLocationReference rawLocRef)", "class_method_signature": "OpenLRXMLEncoder.encodeData(\n            final RawLocationReference rawLocRef)", "testcase": false, "constructor": false, "invocations": ["encodeData"]}, "repository": {"repo_id": 187195345, "url": "https://github.com/tomtom-international/openlr", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 24, "size": 4809, "license": "licensed"}}