{"test_class": {"identifier": "ProductResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_NAME = \"AAAAAAAAAA\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_NAME = \"AAAAAAAAAA\"", "var_name": "DEFAULT_NAME"}, {"original_string": "private static final String UPDATED_NAME = \"BBBBBBBBBB\";", "modifier": "private static final", "type": "String", "declarator": "UPDATED_NAME = \"BBBBBBBBBB\"", "var_name": "UPDATED_NAME"}, {"original_string": "private static final String DEFAULT_DESCRIPTION = \"AAAAAAAAAA\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_DESCRIPTION = \"AAAAAAAAAA\"", "var_name": "DEFAULT_DESCRIPTION"}, {"original_string": "private static final String UPDATED_DESCRIPTION = \"BBBBBBBBBB\";", "modifier": "private static final", "type": "String", "declarator": "UPDATED_DESCRIPTION = \"BBBBBBBBBB\"", "var_name": "UPDATED_DESCRIPTION"}, {"original_string": "private static final BigDecimal DEFAULT_PRICE = BigDecimal.TEN;", "modifier": "private static final", "type": "BigDecimal", "declarator": "DEFAULT_PRICE = BigDecimal.TEN", "var_name": "DEFAULT_PRICE"}, {"original_string": "private static final BigDecimal UPDATED_PRICE = BigDecimal.ONE;", "modifier": "private static final", "type": "BigDecimal", "declarator": "UPDATED_PRICE = BigDecimal.ONE", "var_name": "UPDATED_PRICE"}, {"original_string": "private static final int DEFAULT_QUANTITY = 10;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_QUANTITY = 10", "var_name": "DEFAULT_QUANTITY"}, {"original_string": "private static final int UPDATED_QUANTITY = 2;", "modifier": "private static final", "type": "int", "declarator": "UPDATED_QUANTITY = 2", "var_name": "UPDATED_QUANTITY"}, {"original_string": "private static final ProductStatus DEFAULT_STATUS = ProductStatus.AVAILABLE;", "modifier": "private static final", "type": "ProductStatus", "declarator": "DEFAULT_STATUS = ProductStatus.AVAILABLE", "var_name": "DEFAULT_STATUS"}, {"original_string": "private static final ProductStatus UPDATED_STATUS = ProductStatus.DISCONTINUED;", "modifier": "private static final", "type": "ProductStatus", "declarator": "UPDATED_STATUS = ProductStatus.DISCONTINUED", "var_name": "UPDATED_STATUS"}, {"original_string": "private static Category DEFAULT_CATEGORY = new Category(\"AAAAAAAAAA\");", "modifier": "private static", "type": "Category", "declarator": "DEFAULT_CATEGORY = new Category(\"AAAAAAAAAA\")", "var_name": "DEFAULT_CATEGORY"}, {"original_string": "private static Category UPDATED_CATEGORY = new Category(\"BBBBBBBBBB\");", "modifier": "private static", "type": "Category", "declarator": "UPDATED_CATEGORY = new Category(\"BBBBBBBBBB\")", "var_name": "UPDATED_CATEGORY"}, {"original_string": "@Inject\n    ProductRepository productRepository;", "modifier": "@Inject", "type": "ProductRepository", "declarator": "productRepository", "var_name": "productRepository"}, {"original_string": "@Inject\n    CategoryRepository categoryRepository;", "modifier": "@Inject", "type": "CategoryRepository", "declarator": "categoryRepository", "var_name": "categoryRepository"}, {"original_string": "private Product product;", "modifier": "private", "type": "Product", "declarator": "product", "var_name": "product"}], "file": "product-service/src/test/java/io/maxilog/web/rest/ProductResourceTest.java"}, "test_case": {"identifier": "createProductWithExistingId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createProductWithExistingId() {\n\n        int databaseSizeBeforeCreate = productRepository.findAll().size();\n        product.setId(10L);\n\n        given()\n                .contentType(JSON)\n                .body(product)\n                .when().post(\"/api/products\")\n                .then()\n                .statusCode(400);\n\n        // Validate the Product in the database\n        List<Product> productList = productRepository.findAll();\n        Assertions.assertEquals(productList.size(), databaseSizeBeforeCreate);\n    }", "signature": "void createProductWithExistingId()", "full_signature": "@Test public void createProductWithExistingId()", "class_method_signature": "ProductResourceTest.createProductWithExistingId()", "testcase": true, "constructor": false, "invocations": ["size", "findAll", "setId", "statusCode", "then", "post", "when", "body", "contentType", "given", "findAll", "assertEquals", "size"]}, "focal_class": {"identifier": "ProductResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ProductResource.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ProductResource.class)", "var_name": "LOGGER"}, {"original_string": "private final ProductService productService;", "modifier": "private final", "type": "ProductService", "declarator": "productService", "var_name": "productService"}], "methods": [{"identifier": "ProductResource", "parameters": "(ProductService productService)", "modifiers": "@Inject public", "return": "", "signature": " ProductResource(ProductService productService)", "full_signature": "@Inject public  ProductResource(ProductService productService)", "class_method_signature": "ProductResource.ProductResource(ProductService productService)", "testcase": false, "constructor": true}, {"identifier": "findAll", "parameters": "(@BeanParam PageableImpl pageable)", "modifiers": "@GET @Path(\"/products\") public", "return": "Response", "signature": "Response findAll(@BeanParam PageableImpl pageable)", "full_signature": "@GET @Path(\"/products\") public Response findAll(@BeanParam PageableImpl pageable)", "class_method_signature": "ProductResource.findAll(@BeanParam PageableImpl pageable)", "testcase": false, "constructor": false}, {"identifier": "findAllByProductName", "parameters": "(@QueryParam(\"name\") String name, @BeanParam PageableImpl pageable)", "modifiers": "@GET @Path(\"/products/search\") public", "return": "Page<ProductDTO>", "signature": "Page<ProductDTO> findAllByProductName(@QueryParam(\"name\") String name, @BeanParam PageableImpl pageable)", "full_signature": "@GET @Path(\"/products/search\") public Page<ProductDTO> findAllByProductName(@QueryParam(\"name\") String name, @BeanParam PageableImpl pageable)", "class_method_signature": "ProductResource.findAllByProductName(@QueryParam(\"name\") String name, @BeanParam PageableImpl pageable)", "testcase": false, "constructor": false}, {"identifier": "findById", "parameters": "(@PathParam(\"id\") long id)", "modifiers": "@GET @Path(\"/products/{id}\") public", "return": "Response", "signature": "Response findById(@PathParam(\"id\") long id)", "full_signature": "@GET @Path(\"/products/{id}\") public Response findById(@PathParam(\"id\") long id)", "class_method_signature": "ProductResource.findById(@PathParam(\"id\") long id)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(ProductDTO productDTO)", "modifiers": "@POST @Path(\"/products\") public", "return": "Response", "signature": "Response create(ProductDTO productDTO)", "full_signature": "@POST @Path(\"/products\") public Response create(ProductDTO productDTO)", "class_method_signature": "ProductResource.create(ProductDTO productDTO)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(ProductDTO productDTO)", "modifiers": "@PUT @Path(\"/products\") public", "return": "Response", "signature": "Response update(ProductDTO productDTO)", "full_signature": "@PUT @Path(\"/products\") public Response update(ProductDTO productDTO)", "class_method_signature": "ProductResource.update(ProductDTO productDTO)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@PathParam(\"id\") long id)", "modifiers": "@DELETE @Path(\"/products/{id}\") public", "return": "Response", "signature": "Response delete(@PathParam(\"id\") long id)", "full_signature": "@DELETE @Path(\"/products/{id}\") public Response delete(@PathParam(\"id\") long id)", "class_method_signature": "ProductResource.delete(@PathParam(\"id\") long id)", "testcase": false, "constructor": false}], "file": "product-service/src/main/java/io/maxilog/web/rest/ProductResource.java"}, "focal_method": {"identifier": "findAll", "parameters": "(@BeanParam PageableImpl pageable)", "modifiers": "@GET @Path(\"/products\") public", "return": "Response", "body": "@GET\n    @Path(\"/products\")\n    public Response findAll(@BeanParam PageableImpl pageable) {\n        LOGGER.debug(\"REST request to get all Products\");\n        return Response.ok().entity(productService.findAll(pageable)).build();\n    }", "signature": "Response findAll(@BeanParam PageableImpl pageable)", "full_signature": "@GET @Path(\"/products\") public Response findAll(@BeanParam PageableImpl pageable)", "class_method_signature": "ProductResource.findAll(@BeanParam PageableImpl pageable)", "testcase": false, "constructor": false, "invocations": ["debug", "build", "entity", "ok", "findAll"]}, "repository": {"repo_id": 221245123, "url": "https://github.com/MossabTN/quarkus-microservices-poc", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 889, "license": "licensed"}}