{"test_class": {"identifier": "FileReadWordCountTest", "superclass": "", "interfaces": "", "fields": [], "file": "storm/storm-benchmark/src/test/java/storm/benchmark/benchmarks/FileReadWordCountTest.java"}, "test_case": {"identifier": "componentParallelismCouldBeSetThroughConfig", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void componentParallelismCouldBeSetThroughConfig() {\n    StormBenchmark benchmark = new FileReadWordCount();\n    Config config = new Config();\n    config.put(WordCount.SPOUT_NUM, 3);\n    config.put(WordCount.SPLIT_NUM, 4);\n    config.put(WordCount.COUNT_NUM, 5);\n    StormTopology topology = benchmark.getTopology(config);\n    assertThat(topology).isNotNull();\n    TestUtils.verifyParallelism(Utils.getComponentCommon(topology, WordCount.SPOUT_ID), 3);\n    TestUtils.verifyParallelism(Utils.getComponentCommon(topology, WordCount.SPLIT_ID), 4);\n    TestUtils.verifyParallelism(Utils.getComponentCommon(topology, WordCount.COUNT_ID), 5);\n  }", "signature": "void componentParallelismCouldBeSetThroughConfig()", "full_signature": "@Test public void componentParallelismCouldBeSetThroughConfig()", "class_method_signature": "FileReadWordCountTest.componentParallelismCouldBeSetThroughConfig()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "getTopology", "isNotNull", "assertThat", "verifyParallelism", "getComponentCommon", "verifyParallelism", "getComponentCommon", "verifyParallelism", "getComponentCommon"]}, "focal_class": {"identifier": "FileReadWordCount", "superclass": "extends WordCount", "interfaces": "", "fields": [], "methods": [{"identifier": "getTopology", "parameters": "(Config config)", "modifiers": "@Override public", "return": "StormTopology", "signature": "StormTopology getTopology(Config config)", "full_signature": "@Override public StormTopology getTopology(Config config)", "class_method_signature": "FileReadWordCount.getTopology(Config config)", "testcase": false, "constructor": false}], "file": "storm/storm-benchmark/src/main/java/storm/benchmark/benchmarks/FileReadWordCount.java"}, "focal_method": {"identifier": "getTopology", "parameters": "(Config config)", "modifiers": "@Override public", "return": "StormTopology", "body": "@Override\n  public StormTopology getTopology(Config config) {\n    spout = new FileReadSpout(BenchmarkUtils.ifAckEnabled(config));\n    return super.getTopology(config);\n  }", "signature": "StormTopology getTopology(Config config)", "full_signature": "@Override public StormTopology getTopology(Config config)", "class_method_signature": "FileReadWordCount.getTopology(Config config)", "testcase": false, "constructor": false, "invocations": ["ifAckEnabled", "getTopology"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}