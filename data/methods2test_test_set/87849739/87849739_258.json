{"test_class": {"identifier": "ProducerPropertiesFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String[] BOOTSTRAP_SERVERS = {\n            \"foo:123\",\n            \"bar:456\",\n            \"baz:789\"\n    };", "modifier": "private static final", "type": "String[]", "declarator": "BOOTSTRAP_SERVERS = {\n            \"foo:123\",\n            \"bar:456\",\n            \"baz:789\"\n    }", "var_name": "BOOTSTRAP_SERVERS"}, {"original_string": "private static final String USERNAME = \"user\";", "modifier": "private static final", "type": "String", "declarator": "USERNAME = \"user\"", "var_name": "USERNAME"}, {"original_string": "@SuppressWarnings(\"squid:S2068\")\n    private static final String PASSWORD = \"pw\";", "modifier": "@SuppressWarnings(\"squid:S2068\")\n    private static final", "type": "String", "declarator": "PASSWORD = \"pw\"", "var_name": "PASSWORD"}, {"original_string": "private static final String TARGET_ADDRESS = \"events\";", "modifier": "private static final", "type": "String", "declarator": "TARGET_ADDRESS = \"events\"", "var_name": "TARGET_ADDRESS"}, {"original_string": "private static final ConnectionId CONNECTION_ID = TestConstants.createRandomConnectionId();", "modifier": "private static final", "type": "ConnectionId", "declarator": "CONNECTION_ID = TestConstants.createRandomConnectionId()", "var_name": "CONNECTION_ID"}, {"original_string": "private static KafkaConfig kafkaConfig;", "modifier": "private static", "type": "KafkaConfig", "declarator": "kafkaConfig", "var_name": "kafkaConfig"}, {"original_string": "private static Connection connection;", "modifier": "private static", "type": "Connection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private ProducerPropertiesFactory underTest;", "modifier": "private", "type": "ProducerPropertiesFactory", "declarator": "underTest", "var_name": "underTest"}], "file": "services/connectivity/messaging/src/test/java/org/eclipse/ditto/services/connectivity/messaging/kafka/ProducerPropertiesFactoryTest.java"}, "test_case": {"identifier": "addsBootstrapServersAndFlattensProperties", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void addsBootstrapServersAndFlattensProperties() {\n        final Map<String, Object> properties = underTest.getProducerProperties();\n\n        final List<String> servers =\n                Arrays.asList(properties.get(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG).toString().split(\",\"));\n\n        assertThat(servers).containsExactlyInAnyOrder(BOOTSTRAP_SERVERS);\n\n        // check flattening of client properties in kafka.producer.internal.kafka-clients\n        assertThat(properties).contains(\n                new AbstractMap.SimpleEntry<>(\"connections.max.idle.ms\", 543210),\n                new AbstractMap.SimpleEntry<>(\"reconnect.backoff.ms\", 500),\n                new AbstractMap.SimpleEntry<>(\"reconnect.backoff.max.ms\", 10000)\n        );\n    }", "signature": "void addsBootstrapServersAndFlattensProperties()", "full_signature": "@Test public void addsBootstrapServersAndFlattensProperties()", "class_method_signature": "ProducerPropertiesFactoryTest.addsBootstrapServersAndFlattensProperties()", "testcase": true, "constructor": false, "invocations": ["getProducerProperties", "asList", "split", "toString", "get", "containsExactlyInAnyOrder", "assertThat", "contains", "assertThat"]}, "focal_class": {"identifier": "ProducerPropertiesFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String KAFKA_CLIENTS_KEY = \"kafka-clients\";", "modifier": "private static final", "type": "String", "declarator": "KAFKA_CLIENTS_KEY = \"kafka-clients\"", "var_name": "KAFKA_CLIENTS_KEY"}, {"original_string": "private static final Collection<KafkaSpecificConfig> SPECIFIC_CONFIGS =\n            List.of(KafkaAuthenticationSpecificConfig.getInstance(), KafkaBootstrapServerSpecificConfig.getInstance());", "modifier": "private static final", "type": "Collection<KafkaSpecificConfig>", "declarator": "SPECIFIC_CONFIGS =\n            List.of(KafkaAuthenticationSpecificConfig.getInstance(), KafkaBootstrapServerSpecificConfig.getInstance())", "var_name": "SPECIFIC_CONFIGS"}, {"original_string": "private final Connection connection;", "modifier": "private final", "type": "Connection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private final KafkaConfig kafkaConfig;", "modifier": "private final", "type": "KafkaConfig", "declarator": "kafkaConfig", "var_name": "kafkaConfig"}], "methods": [{"identifier": "ProducerPropertiesFactory", "parameters": "(final Connection connection, final KafkaConfig kafkaConfig)", "modifiers": "private", "return": "", "signature": " ProducerPropertiesFactory(final Connection connection, final KafkaConfig kafkaConfig)", "full_signature": "private  ProducerPropertiesFactory(final Connection connection, final KafkaConfig kafkaConfig)", "class_method_signature": "ProducerPropertiesFactory.ProducerPropertiesFactory(final Connection connection, final KafkaConfig kafkaConfig)", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "(final Connection connection, final KafkaConfig kafkaConfig)", "modifiers": "static", "return": "ProducerPropertiesFactory", "signature": "ProducerPropertiesFactory getInstance(final Connection connection, final KafkaConfig kafkaConfig)", "full_signature": "static ProducerPropertiesFactory getInstance(final Connection connection, final KafkaConfig kafkaConfig)", "class_method_signature": "ProducerPropertiesFactory.getInstance(final Connection connection, final KafkaConfig kafkaConfig)", "testcase": false, "constructor": false}, {"identifier": "getProducerProperties", "parameters": "()", "modifiers": "", "return": "Map<String, Object>", "signature": "Map<String, Object> getProducerProperties()", "full_signature": " Map<String, Object> getProducerProperties()", "class_method_signature": "ProducerPropertiesFactory.getProducerProperties()", "testcase": false, "constructor": false}, {"identifier": "addMetadata", "parameters": "(final HashMap<String, Object> properties)", "modifiers": "private", "return": "void", "signature": "void addMetadata(final HashMap<String, Object> properties)", "full_signature": "private void addMetadata(final HashMap<String, Object> properties)", "class_method_signature": "ProducerPropertiesFactory.addMetadata(final HashMap<String, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "addSpecificConfig", "parameters": "(final HashMap<String, Object> properties)", "modifiers": "private", "return": "void", "signature": "void addSpecificConfig(final HashMap<String, Object> properties)", "full_signature": "private void addSpecificConfig(final HashMap<String, Object> properties)", "class_method_signature": "ProducerPropertiesFactory.addSpecificConfig(final HashMap<String, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "addSecurityProtocol", "parameters": "(final HashMap<String, Object> properties)", "modifiers": "private", "return": "void", "signature": "void addSecurityProtocol(final HashMap<String, Object> properties)", "full_signature": "private void addSecurityProtocol(final HashMap<String, Object> properties)", "class_method_signature": "ProducerPropertiesFactory.addSecurityProtocol(final HashMap<String, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "isConnectionAuthenticated", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isConnectionAuthenticated()", "full_signature": "private boolean isConnectionAuthenticated()", "class_method_signature": "ProducerPropertiesFactory.isConnectionAuthenticated()", "testcase": false, "constructor": false}, {"identifier": "addAuthenticatedSecurityProtocol", "parameters": "(final HashMap<String, Object> properties)", "modifiers": "private", "return": "void", "signature": "void addAuthenticatedSecurityProtocol(final HashMap<String, Object> properties)", "full_signature": "private void addAuthenticatedSecurityProtocol(final HashMap<String, Object> properties)", "class_method_signature": "ProducerPropertiesFactory.addAuthenticatedSecurityProtocol(final HashMap<String, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "addUnauthenticatedSecurityProtocol", "parameters": "(final HashMap<String, Object> properties)", "modifiers": "private", "return": "void", "signature": "void addUnauthenticatedSecurityProtocol(final HashMap<String, Object> properties)", "full_signature": "private void addUnauthenticatedSecurityProtocol(final HashMap<String, Object> properties)", "class_method_signature": "ProducerPropertiesFactory.addUnauthenticatedSecurityProtocol(final HashMap<String, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "isConnectionSecure", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isConnectionSecure()", "full_signature": "private boolean isConnectionSecure()", "class_method_signature": "ProducerPropertiesFactory.isConnectionSecure()", "testcase": false, "constructor": false}, {"identifier": "configToProperties", "parameters": "(final Config config)", "modifiers": "private static", "return": "HashMap<String, Object>", "signature": "HashMap<String, Object> configToProperties(final Config config)", "full_signature": "private static HashMap<String, Object> configToProperties(final Config config)", "class_method_signature": "ProducerPropertiesFactory.configToProperties(final Config config)", "testcase": false, "constructor": false}, {"identifier": "flattenUnwrappedConfig", "parameters": "(final Map<?, ?> unwrapped, final String prefix,\n            final HashMap<String, Object> accumulator)", "modifiers": "private static", "return": "void", "signature": "void flattenUnwrappedConfig(final Map<?, ?> unwrapped, final String prefix,\n            final HashMap<String, Object> accumulator)", "full_signature": "private static void flattenUnwrappedConfig(final Map<?, ?> unwrapped, final String prefix,\n            final HashMap<String, Object> accumulator)", "class_method_signature": "ProducerPropertiesFactory.flattenUnwrappedConfig(final Map<?, ?> unwrapped, final String prefix,\n            final HashMap<String, Object> accumulator)", "testcase": false, "constructor": false}], "file": "services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/kafka/ProducerPropertiesFactory.java"}, "focal_method": {"identifier": "getProducerProperties", "parameters": "()", "modifiers": "", "return": "Map<String, Object>", "body": "Map<String, Object> getProducerProperties() {\n        final HashMap<String, Object> producerProperties =\n                configToProperties(kafkaConfig.getInternalProducerConfig().getConfig(KAFKA_CLIENTS_KEY));\n        addMetadata(producerProperties);\n        addSecurityProtocol(producerProperties);\n        addSpecificConfig(producerProperties);\n        return Collections.unmodifiableMap(producerProperties);\n    }", "signature": "Map<String, Object> getProducerProperties()", "full_signature": " Map<String, Object> getProducerProperties()", "class_method_signature": "ProducerPropertiesFactory.getProducerProperties()", "testcase": false, "constructor": false, "invocations": ["configToProperties", "getConfig", "getInternalProducerConfig", "addMetadata", "addSecurityProtocol", "addSpecificConfig", "unmodifiableMap"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}