{"test_class": {"identifier": "UrlValidatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "checker/src/test/java/com/fooock/robotstxt/api/validator/UrlValidatorTest.java"}, "test_case": {"identifier": "testCheckNotValidUrls", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCheckNotValidUrls() {\n        assertFalse(UrlValidator.isValid(\"abc.hello\"));\n        assertFalse(UrlValidator.isValid(null));\n        assertFalse(UrlValidator.isValid(\"\"));\n    }", "signature": "void testCheckNotValidUrls()", "full_signature": "@Test public void testCheckNotValidUrls()", "class_method_signature": "UrlValidatorTest.testCheckNotValidUrls()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isValid", "assertFalse", "isValid", "assertFalse", "isValid"]}, "focal_class": {"identifier": "UrlValidator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "isValid", "parameters": "(String url)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValid(String url)", "full_signature": "public static boolean isValid(String url)", "class_method_signature": "UrlValidator.isValid(String url)", "testcase": false, "constructor": false}, {"identifier": "toUri", "parameters": "(String url)", "modifiers": "public static", "return": "URI", "signature": "URI toUri(String url)", "full_signature": "public static URI toUri(String url)", "class_method_signature": "UrlValidator.toUri(String url)", "testcase": false, "constructor": false}, {"identifier": "base", "parameters": "(URI uri)", "modifiers": "public static", "return": "String", "signature": "String base(URI uri)", "full_signature": "public static String base(URI uri)", "class_method_signature": "UrlValidator.base(URI uri)", "testcase": false, "constructor": false}], "file": "checker/src/main/java/com/fooock/robotstxt/api/validator/UrlValidator.java"}, "focal_method": {"identifier": "isValid", "parameters": "(String url)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isValid(String url) {\n        if (url == null || url.isEmpty()) return false;\n        try {\n            new URL(url);\n            return true;\n        } catch (MalformedURLException e) {\n            return false;\n        }\n    }", "signature": "boolean isValid(String url)", "full_signature": "public static boolean isValid(String url)", "class_method_signature": "UrlValidator.isValid(String url)", "testcase": false, "constructor": false, "invocations": ["isEmpty"]}, "repository": {"repo_id": 192201753, "url": "https://github.com/fooock/robots.txt", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 13, "size": 2005, "license": "licensed"}}