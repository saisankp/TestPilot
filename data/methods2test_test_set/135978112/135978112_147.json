{"test_class": {"identifier": "FileStreamSourceTaskTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TOPIC = \"test\";", "modifier": "private static final", "type": "String", "declarator": "TOPIC = \"test\"", "var_name": "TOPIC"}, {"original_string": "private File tempFile;", "modifier": "private", "type": "File", "declarator": "tempFile", "var_name": "tempFile"}, {"original_string": "private Map<String, String> config;", "modifier": "private", "type": "Map<String, String>", "declarator": "config", "var_name": "config"}, {"original_string": "private OffsetStorageReader offsetStorageReader;", "modifier": "private", "type": "OffsetStorageReader", "declarator": "offsetStorageReader", "var_name": "offsetStorageReader"}, {"original_string": "private SourceTaskContext context;", "modifier": "private", "type": "SourceTaskContext", "declarator": "context", "var_name": "context"}, {"original_string": "private FileStreamSourceTask task;", "modifier": "private", "type": "FileStreamSourceTask", "declarator": "task", "var_name": "task"}, {"original_string": "private boolean verifyMocks = false;", "modifier": "private", "type": "boolean", "declarator": "verifyMocks = false", "var_name": "verifyMocks"}], "file": "connect/file/src/test/java/org/apache/kafka/connect/file/FileStreamSourceTaskTest.java"}, "test_case": {"identifier": "testMissingTopic", "parameters": "()", "modifiers": "@Test(expected = ConnectException.class) public", "return": "void", "body": "@Test(expected = ConnectException.class)\n    public void testMissingTopic() throws InterruptedException {\n        replay();\n\n        config.remove(FileStreamSourceConnector.TOPIC_CONFIG);\n        task.start(config);\n    }", "signature": "void testMissingTopic()", "full_signature": "@Test(expected = ConnectException.class) public void testMissingTopic()", "class_method_signature": "FileStreamSourceTaskTest.testMissingTopic()", "testcase": true, "constructor": false, "invocations": ["replay", "remove", "start"]}, "focal_class": {"identifier": "FileStreamSourceTask", "superclass": "extends SourceTask", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(FileStreamSourceTask.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(FileStreamSourceTask.class)", "var_name": "log"}, {"original_string": "public static final String FILENAME_FIELD = \"filename\";", "modifier": "public static final", "type": "String", "declarator": "FILENAME_FIELD = \"filename\"", "var_name": "FILENAME_FIELD"}, {"original_string": "public  static final String POSITION_FIELD = \"position\";", "modifier": "public  static final", "type": "String", "declarator": "POSITION_FIELD = \"position\"", "var_name": "POSITION_FIELD"}, {"original_string": "private static final Schema VALUE_SCHEMA = Schema.STRING_SCHEMA;", "modifier": "private static final", "type": "Schema", "declarator": "VALUE_SCHEMA = Schema.STRING_SCHEMA", "var_name": "VALUE_SCHEMA"}, {"original_string": "private String filename;", "modifier": "private", "type": "String", "declarator": "filename", "var_name": "filename"}, {"original_string": "private InputStream stream;", "modifier": "private", "type": "InputStream", "declarator": "stream", "var_name": "stream"}, {"original_string": "private BufferedReader reader = null;", "modifier": "private", "type": "BufferedReader", "declarator": "reader = null", "var_name": "reader"}, {"original_string": "private char[] buffer = new char[1024];", "modifier": "private", "type": "char[]", "declarator": "buffer = new char[1024]", "var_name": "buffer"}, {"original_string": "private int offset = 0;", "modifier": "private", "type": "int", "declarator": "offset = 0", "var_name": "offset"}, {"original_string": "private String topic = null;", "modifier": "private", "type": "String", "declarator": "topic = null", "var_name": "topic"}, {"original_string": "private Long streamOffset;", "modifier": "private", "type": "Long", "declarator": "streamOffset", "var_name": "streamOffset"}], "methods": [{"identifier": "version", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String version()", "full_signature": "@Override public String version()", "class_method_signature": "FileStreamSourceTask.version()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "(Map<String, String> props)", "modifiers": "@Override public", "return": "void", "signature": "void start(Map<String, String> props)", "full_signature": "@Override public void start(Map<String, String> props)", "class_method_signature": "FileStreamSourceTask.start(Map<String, String> props)", "testcase": false, "constructor": false}, {"identifier": "poll", "parameters": "()", "modifiers": "@Override public", "return": "List<SourceRecord>", "signature": "List<SourceRecord> poll()", "full_signature": "@Override public List<SourceRecord> poll()", "class_method_signature": "FileStreamSourceTask.poll()", "testcase": false, "constructor": false}, {"identifier": "extractLine", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String extractLine()", "full_signature": "private String extractLine()", "class_method_signature": "FileStreamSourceTask.extractLine()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "FileStreamSourceTask.stop()", "testcase": false, "constructor": false}, {"identifier": "offsetKey", "parameters": "(String filename)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> offsetKey(String filename)", "full_signature": "private Map<String, String> offsetKey(String filename)", "class_method_signature": "FileStreamSourceTask.offsetKey(String filename)", "testcase": false, "constructor": false}, {"identifier": "offsetValue", "parameters": "(Long pos)", "modifiers": "private", "return": "Map<String, Long>", "signature": "Map<String, Long> offsetValue(Long pos)", "full_signature": "private Map<String, Long> offsetValue(Long pos)", "class_method_signature": "FileStreamSourceTask.offsetValue(Long pos)", "testcase": false, "constructor": false}, {"identifier": "logFilename", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String logFilename()", "full_signature": "private String logFilename()", "class_method_signature": "FileStreamSourceTask.logFilename()", "testcase": false, "constructor": false}], "file": "connect/file/src/main/java/org/apache/kafka/connect/file/FileStreamSourceTask.java"}, "focal_method": {"identifier": "start", "parameters": "(Map<String, String> props)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void start(Map<String, String> props) {\n        filename = props.get(FileStreamSourceConnector.FILE_CONFIG);\n        if (filename == null || filename.isEmpty()) {\n            stream = System.in;\n            // Tracking offset for stdin doesn't make sense\n            streamOffset = null;\n            reader = new BufferedReader(new InputStreamReader(stream));\n        }\n        topic = props.get(FileStreamSourceConnector.TOPIC_CONFIG);\n        if (topic == null)\n            throw new ConnectException(\"FileStreamSourceTask config missing topic setting\");\n    }", "signature": "void start(Map<String, String> props)", "full_signature": "@Override public void start(Map<String, String> props)", "class_method_signature": "FileStreamSourceTask.start(Map<String, String> props)", "testcase": false, "constructor": false, "invocations": ["get", "isEmpty", "get"]}, "repository": {"repo_id": 135978112, "url": "https://github.com/anurnomeru/kafka-0.10.0.1-source-reading", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 2953, "license": "licensed"}}