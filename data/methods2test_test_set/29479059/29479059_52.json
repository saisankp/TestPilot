{"test_class": {"identifier": "DurationHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "spring-batch-lightmin-core/spring-batch-lightmin-core-service/src/test/java/org/tuxdevelop/spring/batch/lightmin/util/DurationHelperTest.java"}, "test_case": {"identifier": "createDurationValueMinutesSecondsMillisTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createDurationValueMinutesSecondsMillisTest() {\n        final Long duration = 3400199L;\n        final String expectedValue = \"56:40:199 min\";\n        final Date startTime = new Date(0);\n        final Date endTime = new Date(duration);\n        final String durationValue = DurationHelper.createDurationValue(startTime, endTime);\n        assertThat(durationValue).isEqualTo(expectedValue);\n    }", "signature": "void createDurationValueMinutesSecondsMillisTest()", "full_signature": "@Test public void createDurationValueMinutesSecondsMillisTest()", "class_method_signature": "DurationHelperTest.createDurationValueMinutesSecondsMillisTest()", "testcase": true, "constructor": false, "invocations": ["createDurationValue", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "DurationHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long MILLIS_UPPER_BOUND = 1000;", "modifier": "private static final", "type": "long", "declarator": "MILLIS_UPPER_BOUND = 1000", "var_name": "MILLIS_UPPER_BOUND"}, {"original_string": "private static final long SECONDS_UPPER_BOUND = 60000;", "modifier": "private static final", "type": "long", "declarator": "SECONDS_UPPER_BOUND = 60000", "var_name": "SECONDS_UPPER_BOUND"}, {"original_string": "private static final long MINUTES_UPPER_BOUND = 3600000;", "modifier": "private static final", "type": "long", "declarator": "MINUTES_UPPER_BOUND = 3600000", "var_name": "MINUTES_UPPER_BOUND"}, {"original_string": "private static final String MILLIS_FORMAT = \"SSS\";", "modifier": "private static final", "type": "String", "declarator": "MILLIS_FORMAT = \"SSS\"", "var_name": "MILLIS_FORMAT"}, {"original_string": "private static final String SECONDS_MILLIS_FORMAT = \"ss:SSS\";", "modifier": "private static final", "type": "String", "declarator": "SECONDS_MILLIS_FORMAT = \"ss:SSS\"", "var_name": "SECONDS_MILLIS_FORMAT"}, {"original_string": "private static final String MINUTES_SECONDS_MILLIS_FORMAT = \"mm:ss:SSS\";", "modifier": "private static final", "type": "String", "declarator": "MINUTES_SECONDS_MILLIS_FORMAT = \"mm:ss:SSS\"", "var_name": "MINUTES_SECONDS_MILLIS_FORMAT"}, {"original_string": "private static final String HOURS_MINUTES_SECONDS_MILLIS_FORMAT = \"hh:mm:ss:SSS\";", "modifier": "private static final", "type": "String", "declarator": "HOURS_MINUTES_SECONDS_MILLIS_FORMAT = \"hh:mm:ss:SSS\"", "var_name": "HOURS_MINUTES_SECONDS_MILLIS_FORMAT"}, {"original_string": "private static final String MILLIS_UNIT = \" ms\";", "modifier": "private static final", "type": "String", "declarator": "MILLIS_UNIT = \" ms\"", "var_name": "MILLIS_UNIT"}, {"original_string": "private static final String SECONDS_UNIT = \" sec\";", "modifier": "private static final", "type": "String", "declarator": "SECONDS_UNIT = \" sec\"", "var_name": "SECONDS_UNIT"}, {"original_string": "private static final String MINUTES_UNIT = \" min\";", "modifier": "private static final", "type": "String", "declarator": "MINUTES_UNIT = \" min\"", "var_name": "MINUTES_UNIT"}, {"original_string": "private static final String HOURES_UNIT = \" h\";", "modifier": "private static final", "type": "String", "declarator": "HOURES_UNIT = \" h\"", "var_name": "HOURES_UNIT"}], "methods": [{"identifier": "DurationHelper", "parameters": "()", "modifiers": "private", "return": "", "signature": " DurationHelper()", "full_signature": "private  DurationHelper()", "class_method_signature": "DurationHelper.DurationHelper()", "testcase": false, "constructor": true}, {"identifier": "createDurationValue", "parameters": "(Date startTime, Date endTime)", "modifiers": "public static", "return": "String", "signature": "String createDurationValue(Date startTime, Date endTime)", "full_signature": "public static String createDurationValue(Date startTime, Date endTime)", "class_method_signature": "DurationHelper.createDurationValue(Date startTime, Date endTime)", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "(final Date date)", "modifiers": "private static", "return": "String", "signature": "String format(final Date date)", "full_signature": "private static String format(final Date date)", "class_method_signature": "DurationHelper.format(final Date date)", "testcase": false, "constructor": false}], "file": "spring-batch-lightmin-core/spring-batch-lightmin-core-service/src/main/java/org/tuxdevelop/spring/batch/lightmin/util/DurationHelper.java"}, "focal_method": {"identifier": "createDurationValue", "parameters": "(Date startTime, Date endTime)", "modifiers": "public static", "return": "String", "body": "public static String createDurationValue(Date startTime, Date endTime) {\n        final Date current = new Date();\n        if (startTime == null) {\n            startTime = current;\n            log.info(\"startTime was null, set to current date\");\n        }\n        if (endTime == null) {\n            endTime = current;\n            log.info(\"endTime was null, set to current date\");\n        }\n        final Long duration = endTime.getTime() - startTime.getTime() < 0 ? 0 : endTime.getTime() - startTime.getTime();\n\n        return format(new Date(duration));\n    }", "signature": "String createDurationValue(Date startTime, Date endTime)", "full_signature": "public static String createDurationValue(Date startTime, Date endTime)", "class_method_signature": "DurationHelper.createDurationValue(Date startTime, Date endTime)", "testcase": false, "constructor": false, "invocations": ["info", "info", "getTime", "getTime", "getTime", "getTime", "format"]}, "repository": {"repo_id": 29479059, "url": "https://github.com/tuxdevelop/spring-batch-lightmin", "language": "Java", "is_fork": false, "fork_count": 34, "stargazer_count": 109, "size": 12355, "license": "licensed"}}