{"test_class": {"identifier": "AbstractIndividualFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected IndividualStateListener listener = new IndividualStateListener() {\n\t\t@Override\n\t\tpublic void inidividualStateChanged(Individual individual) {\n\t\t\t// nothing to be done\n\t\t}\n\t};", "modifier": "protected", "type": "IndividualStateListener", "declarator": "listener = new IndividualStateListener() {\n\t\t@Override\n\t\tpublic void inidividualStateChanged(Individual individual) {\n\t\t\t// nothing to be done\n\t\t}\n\t}", "var_name": "listener"}], "file": "opt4j-core/src/test/java/org/opt4j/core/AbstractIndividualFactoryTest.java"}, "test_case": {"identifier": "createTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void createTest() {\n\t\tAbstractIndividualFactory<Individual> factory = getFactory();\n\t\tinit(factory);\n\n\t\tIndividual individual = factory.create();\n\t\tAssert.assertTrue(individual.individualStateListeners.contains(listener));\n\t\tAssert.assertNotNull(individual.genotype);\n\t}", "signature": "void createTest()", "full_signature": "@Test public void createTest()", "class_method_signature": "AbstractIndividualFactoryTest.createTest()", "testcase": true, "constructor": false, "invocations": ["getFactory", "init", "create", "assertTrue", "contains", "assertNotNull"]}, "focal_class": {"identifier": "AbstractIndividualFactory", "superclass": "", "interfaces": "implements IndividualFactory", "fields": [{"original_string": "protected final Creator<Genotype> creator;", "modifier": "protected final", "type": "Creator<Genotype>", "declarator": "creator", "var_name": "creator"}, {"original_string": "protected final Provider<I> individualProvider;", "modifier": "protected final", "type": "Provider<I>", "declarator": "individualProvider", "var_name": "individualProvider"}, {"original_string": "protected final Set<IndividualStateListener> individualStateListeners = new CopyOnWriteArraySet<>();", "modifier": "protected final", "type": "Set<IndividualStateListener>", "declarator": "individualStateListeners = new CopyOnWriteArraySet<>()", "var_name": "individualStateListeners"}], "methods": [{"identifier": "AbstractIndividualFactory", "parameters": "(Provider<I> individualProvider, Creator<Genotype> creator)", "modifiers": "public", "return": "", "signature": " AbstractIndividualFactory(Provider<I> individualProvider, Creator<Genotype> creator)", "full_signature": "public  AbstractIndividualFactory(Provider<I> individualProvider, Creator<Genotype> creator)", "class_method_signature": "AbstractIndividualFactory.AbstractIndividualFactory(Provider<I> individualProvider, Creator<Genotype> creator)", "testcase": false, "constructor": true}, {"identifier": "injectListeners", "parameters": "(Set<IndividualStateListener> listeners)", "modifiers": "@Inject protected", "return": "void", "signature": "void injectListeners(Set<IndividualStateListener> listeners)", "full_signature": "@Inject protected void injectListeners(Set<IndividualStateListener> listeners)", "class_method_signature": "AbstractIndividualFactory.injectListeners(Set<IndividualStateListener> listeners)", "testcase": false, "constructor": false}, {"identifier": "addIndividualStateListener", "parameters": "(IndividualStateListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void addIndividualStateListener(IndividualStateListener listener)", "full_signature": "@Override public void addIndividualStateListener(IndividualStateListener listener)", "class_method_signature": "AbstractIndividualFactory.addIndividualStateListener(IndividualStateListener listener)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "()", "modifiers": "@Override public", "return": "Individual", "signature": "Individual create()", "full_signature": "@Override public Individual create()", "class_method_signature": "AbstractIndividualFactory.create()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Genotype genotype)", "modifiers": "@Override public", "return": "Individual", "signature": "Individual create(Genotype genotype)", "full_signature": "@Override public Individual create(Genotype genotype)", "class_method_signature": "AbstractIndividualFactory.create(Genotype genotype)", "testcase": false, "constructor": false}, {"identifier": "removeIndividualStateListener", "parameters": "(IndividualStateListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void removeIndividualStateListener(IndividualStateListener listener)", "full_signature": "@Override public void removeIndividualStateListener(IndividualStateListener listener)", "class_method_signature": "AbstractIndividualFactory.removeIndividualStateListener(IndividualStateListener listener)", "testcase": false, "constructor": false}], "file": "opt4j-core/src/main/java/org/opt4j/core/AbstractIndividualFactory.java"}, "focal_method": {"identifier": "create", "parameters": "()", "modifiers": "@Override public", "return": "Individual", "body": "@Override\n\tpublic Individual create() {\n\t\tIndividual individual = individualProvider.get();\n\t\tindividual.setIndividualStatusListeners(individualStateListeners);\n\t\tGenotype genotype = creator.create();\n\t\tindividual.setGenotype(genotype);\n\n\t\treturn individual;\n\t}", "signature": "Individual create()", "full_signature": "@Override public Individual create()", "class_method_signature": "AbstractIndividualFactory.create()", "testcase": false, "constructor": false, "invocations": ["get", "setIndividualStatusListeners", "create", "setGenotype"]}, "repository": {"repo_id": 119080111, "url": "https://github.com/felixreimann/opt4j", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 11, "size": 8771, "license": "licensed"}}