{"test_class": {"identifier": "InMemoryDataSetMetadataRepositoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private InMemoryDataSetMetadataRepository inMemoryDataSetMetadataRepository =\n            new InMemoryDataSetMetadataRepository();", "modifier": "private", "type": "InMemoryDataSetMetadataRepository", "declarator": "inMemoryDataSetMetadataRepository =\n            new InMemoryDataSetMetadataRepository()", "var_name": "inMemoryDataSetMetadataRepository"}], "file": "dataprep-dataset/src/test/java/org/talend/dataprep/dataset/store/metadata/memory/InMemoryDataSetMetadataRepositoryTest.java"}, "test_case": {"identifier": "testResetTransiantOnDatasetMatadataFavorites", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testResetTransiantOnDatasetMatadataFavorites() {\n        TransientTestObject obj = new TransientTestObject();\n        inMemoryDataSetMetadataRepository.resetTransientValues(obj);\n        // check it has been reset to the default value\n        assertTrue(Defaults.defaultValue(boolean.class).equals(obj.zeBoolean));\n        assertTrue(Defaults.defaultValue(char.class).equals(obj.zeChar));\n        assertTrue(Defaults.defaultValue(byte.class).equals(obj.zeByte));\n        assertTrue(Defaults.defaultValue(short.class).equals(obj.zeShort));\n        assertTrue(Defaults.defaultValue(int.class).equals(obj.zeInt));\n        assertTrue(Defaults.defaultValue(float.class).equals(obj.zeFloat));\n        assertTrue(Defaults.defaultValue(double.class).equals(obj.zeDouble));\n        assertTrue(obj.zeObject == Defaults.defaultValue(Object.class));// cause it is null\n        assertTrue(Defaults.defaultValue(boolean.class).equals(TransientTestObject.zeStaticBoolean));\n    }", "signature": "void testResetTransiantOnDatasetMatadataFavorites()", "full_signature": "@Test public void testResetTransiantOnDatasetMatadataFavorites()", "class_method_signature": "InMemoryDataSetMetadataRepositoryTest.testResetTransiantOnDatasetMatadataFavorites()", "testcase": true, "constructor": false, "invocations": ["resetTransientValues", "assertTrue", "equals", "defaultValue", "assertTrue", "equals", "defaultValue", "assertTrue", "equals", "defaultValue", "assertTrue", "equals", "defaultValue", "assertTrue", "equals", "defaultValue", "assertTrue", "equals", "defaultValue", "assertTrue", "equals", "defaultValue", "assertTrue", "defaultValue", "assertTrue", "equals", "defaultValue"]}, "focal_class": {"identifier": "InMemoryDataSetMetadataRepository", "superclass": "extends ObjectDataSetMetadataRepository", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(InMemoryDataSetMetadataRepository.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(InMemoryDataSetMetadataRepository.class)", "var_name": "LOG"}, {"original_string": "@Autowired\n    private DataSetMetadataBuilder metadataBuilder;", "modifier": "@Autowired\n    private", "type": "DataSetMetadataBuilder", "declarator": "metadataBuilder", "var_name": "metadataBuilder"}, {"original_string": "private final Map<String, DataSetMetadata> store = new ConcurrentHashMap<>();", "modifier": "private final", "type": "Map<String, DataSetMetadata>", "declarator": "store = new ConcurrentHashMap<>()", "var_name": "store"}], "methods": [{"identifier": "source", "parameters": "()", "modifiers": "@Override public", "return": "Stream<DataSetMetadata>", "signature": "Stream<DataSetMetadata> source()", "full_signature": "@Override public Stream<DataSetMetadata> source()", "class_method_signature": "InMemoryDataSetMetadataRepository.source()", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(DataSetMetadata dataSetMetadata)", "modifiers": "@Override public", "return": "void", "signature": "void save(DataSetMetadata dataSetMetadata)", "full_signature": "@Override public void save(DataSetMetadata dataSetMetadata)", "class_method_signature": "InMemoryDataSetMetadataRepository.save(DataSetMetadata dataSetMetadata)", "testcase": false, "constructor": false}, {"identifier": "resetTransientValues", "parameters": "(Object zeObject)", "modifiers": "", "return": "void", "signature": "void resetTransientValues(Object zeObject)", "full_signature": " void resetTransientValues(Object zeObject)", "class_method_signature": "InMemoryDataSetMetadataRepository.resetTransientValues(Object zeObject)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String id)", "modifiers": "@Override public", "return": "DataSetMetadata", "signature": "DataSetMetadata get(String id)", "full_signature": "@Override public DataSetMetadata get(String id)", "class_method_signature": "InMemoryDataSetMetadataRepository.get(String id)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String id)", "modifiers": "@Override public", "return": "void", "signature": "void remove(String id)", "full_signature": "@Override public void remove(String id)", "class_method_signature": "InMemoryDataSetMetadataRepository.remove(String id)", "testcase": false, "constructor": false}], "file": "dataprep-dataset/src/main/java/org/talend/dataprep/dataset/store/metadata/memory/InMemoryDataSetMetadataRepository.java"}, "focal_method": {"identifier": "resetTransientValues", "parameters": "(Object zeObject)", "modifiers": "", "return": "void", "body": "void resetTransientValues(Object zeObject) {\n        if (zeObject != null) {\n            Field[] fields = zeObject.getClass().getDeclaredFields();\n            for (Field field : fields) {\n                // ignore jacoco injected field\n                if (Modifier.isTransient(field.getModifiers()) && !field.getName().endsWith(\"jacocoData\")) { //$NON-NLS-1$\n                    Object defaultValue = Defaults.defaultValue(field.getType());\n                    field.setAccessible(true);\n                    try {\n                        field.set(zeObject, defaultValue);\n                    } catch (IllegalArgumentException | IllegalAccessException e) {\n                        LOG.error(\"failed to reset the transient field [\" + field + \"] before storage\", e);\n                    }\n                }\n            }\n        } // else null so do nothing\n    }", "signature": "void resetTransientValues(Object zeObject)", "full_signature": " void resetTransientValues(Object zeObject)", "class_method_signature": "InMemoryDataSetMetadataRepository.resetTransientValues(Object zeObject)", "testcase": false, "constructor": false, "invocations": ["getDeclaredFields", "getClass", "isTransient", "getModifiers", "endsWith", "getName", "defaultValue", "getType", "setAccessible", "set", "error"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}