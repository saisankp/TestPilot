{"test_class": {"identifier": "UUIDPresentTest", "superclass": "", "interfaces": "", "fields": [], "file": "fdb-sql-layer-core/src/test/java/com/foundationdb/ais/model/validation/UUIDPresentTest.java"}, "test_case": {"identifier": "missingFromTable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void missingFromTable() {\n        AkibanInformationSchema ais = build();\n        Table t = ais.getTable(\"test\", \"t\");\n        t.setUuid(null);\n        t.getColumn(\"id\").setUuid(UUID.randomUUID());\n        assertEquals(\"failures\", 1, validate(ais).size());\n    }", "signature": "void missingFromTable()", "full_signature": "@Test public void missingFromTable()", "class_method_signature": "UUIDPresentTest.missingFromTable()", "testcase": true, "constructor": false, "invocations": ["build", "getTable", "setUuid", "setUuid", "getColumn", "randomUUID", "assertEquals", "size", "validate"]}, "focal_class": {"identifier": "UUIDPresent", "superclass": "", "interfaces": "implements AISValidation", "fields": [], "methods": [{"identifier": "validate", "parameters": "(AkibanInformationSchema ais, AISValidationOutput output)", "modifiers": "@Override public", "return": "void", "signature": "void validate(AkibanInformationSchema ais, AISValidationOutput output)", "full_signature": "@Override public void validate(AkibanInformationSchema ais, AISValidationOutput output)", "class_method_signature": "UUIDPresent.validate(AkibanInformationSchema ais, AISValidationOutput output)", "testcase": false, "constructor": false}, {"identifier": "missingTable", "parameters": "(Table t)", "modifiers": "private", "return": "AISValidationException", "signature": "AISValidationException missingTable(Table t)", "full_signature": "private AISValidationException missingTable(Table t)", "class_method_signature": "UUIDPresent.missingTable(Table t)", "testcase": false, "constructor": false}, {"identifier": "missingColumn", "parameters": "(Table t, Column c)", "modifiers": "private", "return": "AISValidationException", "signature": "AISValidationException missingColumn(Table t, Column c)", "full_signature": "private AISValidationException missingColumn(Table t, Column c)", "class_method_signature": "UUIDPresent.missingColumn(Table t, Column c)", "testcase": false, "constructor": false}], "file": "fdb-sql-layer-core/src/main/java/com/foundationdb/ais/model/validation/UUIDPresent.java"}, "focal_method": {"identifier": "validate", "parameters": "(AkibanInformationSchema ais, AISValidationOutput output)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate(AkibanInformationSchema ais, AISValidationOutput output) {\n        for(Table t : ais.getTables().values()) {\n            if(t.getUuid() == null) {\n                output.reportFailure(new AISValidationFailure(missingTable(t)));\n            }\n            for(Column c: t.getColumnsIncludingInternal()) {\n                if(c.getUuid() == null) {\n                    output.reportFailure(new AISValidationFailure(missingColumn(t, c)));\n                }\n            }\n        }\n    }", "signature": "void validate(AkibanInformationSchema ais, AISValidationOutput output)", "full_signature": "@Override public void validate(AkibanInformationSchema ais, AISValidationOutput output)", "class_method_signature": "UUIDPresent.validate(AkibanInformationSchema ais, AISValidationOutput output)", "testcase": false, "constructor": false, "invocations": ["values", "getTables", "getUuid", "reportFailure", "missingTable", "getColumnsIncludingInternal", "getUuid", "reportFailure", "missingColumn"]}, "repository": {"repo_id": 32884360, "url": "https://github.com/jaytaylor/sql-layer", "language": "Java", "is_fork": false, "fork_count": 120, "stargazer_count": 77, "size": 138665, "license": "licensed"}}