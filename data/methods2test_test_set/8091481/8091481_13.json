{"test_class": {"identifier": "SentenceSegmenterTest", "superclass": "", "interfaces": "", "fields": [], "file": "dexter-core/src/test/java/it/cnr/isti/hpc/text/SentenceSegmenterTest.java"}, "test_case": {"identifier": "testSplitPos", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSplitPos() throws Exception {\n\t\tSentenceSegmenter segmenter = new SentenceSegmenter();\n\t\tString text = \"Diego Armando Maradona Franco is a former Argentine footballer. He has served as a manager and coach at other clubs as well as for the national team of Argentina. \";\n\t\tList<Sentence> sentences = segmenter.splitPos(text);\n\t\tSystem.out.println(\"text: \");\n\t\tSystem.out.println(text);\n\t\tSystem.out.println(\"sentences: \");\n\t\tint i = 0;\n\t\tfor (Sentence s : sentences) {\n\t\t\tSystem.out.println(i + \" )  \" + s);\n\t\t\ti++;\n\t\t}\n\t\tint posSecondSentence = text.indexOf(\"He has\");\n\t\tSystem.out.println(\"pos: \" + posSecondSentence);\n\t\tassertEquals(posSecondSentence, sentences.get(1).getStart());\n\t}", "signature": "void testSplitPos()", "full_signature": "@Test public void testSplitPos()", "class_method_signature": "SentenceSegmenterTest.testSplitPos()", "testcase": true, "constructor": false, "invocations": ["splitPos", "println", "println", "println", "println", "indexOf", "println", "assertEquals", "getStart", "get"]}, "focal_class": {"identifier": "SentenceSegmenter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory\n\t\t\t.getLogger(SentenceSegmenter.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory\n\t\t\t.getLogger(SentenceSegmenter.class)", "var_name": "logger"}, {"original_string": "SentenceDetector sentenceDetector = null;", "modifier": "", "type": "SentenceDetector", "declarator": "sentenceDetector = null", "var_name": "sentenceDetector"}, {"original_string": "private static SentenceSegmenter instance = null;", "modifier": "private static", "type": "SentenceSegmenter", "declarator": "instance = null", "var_name": "instance"}], "methods": [{"identifier": "SentenceSegmenter", "parameters": "()", "modifiers": "public", "return": "", "signature": " SentenceSegmenter()", "full_signature": "public  SentenceSegmenter()", "class_method_signature": "SentenceSegmenter.SentenceSegmenter()", "testcase": false, "constructor": true}, {"identifier": "split", "parameters": "(String text)", "modifiers": "public", "return": "String[]", "signature": "String[] split(String text)", "full_signature": "public String[] split(String text)", "class_method_signature": "SentenceSegmenter.split(String text)", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(Reader reader)", "modifiers": "public", "return": "String[]", "signature": "String[] split(Reader reader)", "full_signature": "public String[] split(Reader reader)", "class_method_signature": "SentenceSegmenter.split(Reader reader)", "testcase": false, "constructor": false}, {"identifier": "splitPos", "parameters": "(String text)", "modifiers": "public", "return": "List<Sentence>", "signature": "List<Sentence> splitPos(String text)", "full_signature": "public List<Sentence> splitPos(String text)", "class_method_signature": "SentenceSegmenter.splitPos(String text)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "SentenceSegmenter.main(String[] args)", "testcase": false, "constructor": false}], "file": "dexter-core/src/main/java/it/cnr/isti/hpc/text/SentenceSegmenter.java"}, "focal_method": {"identifier": "splitPos", "parameters": "(String text)", "modifiers": "public", "return": "List<Sentence>", "body": "public List<Sentence> splitPos(String text) {\n\t\tList<Sentence> sentences = new LinkedList<Sentence>();\n\t\tfor (Span s : sentenceDetector.sentPosDetect(text)) {\n\n\t\t\tsentences.add(new Sentence(\n\t\t\t\t\ttext.substring(s.getStart(), s.getEnd()), s.getStart(), s\n\t\t\t\t\t\t\t.getEnd()));\n\n\t\t}\n\t\treturn sentences;\n\t}", "signature": "List<Sentence> splitPos(String text)", "full_signature": "public List<Sentence> splitPos(String text)", "class_method_signature": "SentenceSegmenter.splitPos(String text)", "testcase": false, "constructor": false, "invocations": ["sentPosDetect", "add", "substring", "getStart", "getEnd", "getStart", "getEnd"]}, "repository": {"repo_id": 8091481, "url": "https://github.com/dexter/dexter", "language": "Java", "is_fork": false, "fork_count": 52, "stargazer_count": 196, "size": 17631, "license": "licensed"}}