{"test_class": {"identifier": "SmilesGeneratorTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "storage/smiles/src/test/java/org/openscience/cdk/smiles/SmilesGeneratorTest.java"}, "test_case": {"identifier": "testBug3040273", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBug3040273() throws Exception {\n        SmilesParser sp = new SmilesParser(DefaultChemObjectBuilder.getInstance());\n        String testSmiles = \"C1(C(C(C(C(C1Br)Br)Br)Br)Br)Br\";\n        IAtomContainer mol = sp.parseSmiles(testSmiles);\n        IsotopeFactory fact = Isotopes.getInstance();\n        fact.configureAtoms(mol);\n        SmilesGenerator sg = new SmilesGenerator();\n        String smiles = sg.create((IAtomContainer) mol);\n        IAtomContainer mol2 = sp.parseSmiles(smiles);\n        Assert.assertTrue(new UniversalIsomorphismTester().isIsomorph(mol, mol2));\n    }", "signature": "void testBug3040273()", "full_signature": "@Test public void testBug3040273()", "class_method_signature": "SmilesGeneratorTest.testBug3040273()", "testcase": true, "constructor": false, "invocations": ["getInstance", "parseSmiles", "getInstance", "configureAtoms", "create", "parseSmiles", "assertTrue", "isIsomorph"]}, "focal_class": {"identifier": "SmilesGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final int       flavour;", "modifier": "private final", "type": "int", "declarator": "flavour", "var_name": "flavour"}], "methods": [{"identifier": "SmilesGenerator", "parameters": "()", "modifiers": "@Deprecated public", "return": "", "signature": " SmilesGenerator()", "full_signature": "@Deprecated public  SmilesGenerator()", "class_method_signature": "SmilesGenerator.SmilesGenerator()", "testcase": false, "constructor": true}, {"identifier": "SmilesGenerator", "parameters": "(int flavour)", "modifiers": "public", "return": "", "signature": " SmilesGenerator(int flavour)", "full_signature": "public  SmilesGenerator(int flavour)", "class_method_signature": "SmilesGenerator.SmilesGenerator(int flavour)", "testcase": false, "constructor": true}, {"identifier": "aromatic", "parameters": "()", "modifiers": "public", "return": "SmilesGenerator", "signature": "SmilesGenerator aromatic()", "full_signature": "public SmilesGenerator aromatic()", "class_method_signature": "SmilesGenerator.aromatic()", "testcase": false, "constructor": false}, {"identifier": "withAtomClasses", "parameters": "()", "modifiers": "@Deprecated public", "return": "SmilesGenerator", "signature": "SmilesGenerator withAtomClasses()", "full_signature": "@Deprecated public SmilesGenerator withAtomClasses()", "class_method_signature": "SmilesGenerator.withAtomClasses()", "testcase": false, "constructor": false}, {"identifier": "generic", "parameters": "()", "modifiers": "public static", "return": "SmilesGenerator", "signature": "SmilesGenerator generic()", "full_signature": "public static SmilesGenerator generic()", "class_method_signature": "SmilesGenerator.generic()", "testcase": false, "constructor": false}, {"identifier": "isomeric", "parameters": "()", "modifiers": "public static", "return": "SmilesGenerator", "signature": "SmilesGenerator isomeric()", "full_signature": "public static SmilesGenerator isomeric()", "class_method_signature": "SmilesGenerator.isomeric()", "testcase": false, "constructor": false}, {"identifier": "unique", "parameters": "()", "modifiers": "public static", "return": "SmilesGenerator", "signature": "SmilesGenerator unique()", "full_signature": "public static SmilesGenerator unique()", "class_method_signature": "SmilesGenerator.unique()", "testcase": false, "constructor": false}, {"identifier": "absolute", "parameters": "()", "modifiers": "public static", "return": "SmilesGenerator", "signature": "SmilesGenerator absolute()", "full_signature": "public static SmilesGenerator absolute()", "class_method_signature": "SmilesGenerator.absolute()", "testcase": false, "constructor": false}, {"identifier": "createSMILES", "parameters": "(IAtomContainer molecule)", "modifiers": "@Deprecated public", "return": "String", "signature": "String createSMILES(IAtomContainer molecule)", "full_signature": "@Deprecated public String createSMILES(IAtomContainer molecule)", "class_method_signature": "SmilesGenerator.createSMILES(IAtomContainer molecule)", "testcase": false, "constructor": false}, {"identifier": "createSMILES", "parameters": "(IReaction reaction)", "modifiers": "@Deprecated public", "return": "String", "signature": "String createSMILES(IReaction reaction)", "full_signature": "@Deprecated public String createSMILES(IReaction reaction)", "class_method_signature": "SmilesGenerator.createSMILES(IReaction reaction)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(IAtomContainer molecule)", "modifiers": "public", "return": "String", "signature": "String create(IAtomContainer molecule)", "full_signature": "public String create(IAtomContainer molecule)", "class_method_signature": "SmilesGenerator.create(IAtomContainer molecule)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(IAtomContainer molecule, int[] order)", "modifiers": "public", "return": "String", "signature": "String create(IAtomContainer molecule, int[] order)", "full_signature": "public String create(IAtomContainer molecule, int[] order)", "class_method_signature": "SmilesGenerator.create(IAtomContainer molecule, int[] order)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(IAtomContainer molecule, int flavour, int[] order)", "modifiers": "public static", "return": "String", "signature": "String create(IAtomContainer molecule, int flavour, int[] order)", "full_signature": "public static String create(IAtomContainer molecule, int flavour, int[] order)", "class_method_signature": "SmilesGenerator.create(IAtomContainer molecule, int flavour, int[] order)", "testcase": false, "constructor": false}, {"identifier": "createReactionSMILES", "parameters": "(IReaction reaction)", "modifiers": "@Deprecated public", "return": "String", "signature": "String createReactionSMILES(IReaction reaction)", "full_signature": "@Deprecated public String createReactionSMILES(IReaction reaction)", "class_method_signature": "SmilesGenerator.createReactionSMILES(IReaction reaction)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(IReaction reaction)", "modifiers": "public", "return": "String", "signature": "String create(IReaction reaction)", "full_signature": "public String create(IReaction reaction)", "class_method_signature": "SmilesGenerator.create(IReaction reaction)", "testcase": false, "constructor": false}, {"identifier": "safeAddSgroups", "parameters": "(List<Sgroup> sgroups, IAtomContainer mol)", "modifiers": "private", "return": "void", "signature": "void safeAddSgroups(List<Sgroup> sgroups, IAtomContainer mol)", "full_signature": "private void safeAddSgroups(List<Sgroup> sgroups, IAtomContainer mol)", "class_method_signature": "SmilesGenerator.safeAddSgroups(List<Sgroup> sgroups, IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(IReaction reaction, int[] ordering)", "modifiers": "public", "return": "String", "signature": "String create(IReaction reaction, int[] ordering)", "full_signature": "public String create(IReaction reaction, int[] ordering)", "class_method_signature": "SmilesGenerator.create(IReaction reaction, int[] ordering)", "testcase": false, "constructor": false}, {"identifier": "setUseAromaticityFlag", "parameters": "(boolean useAromaticityFlag)", "modifiers": "@Deprecated public", "return": "void", "signature": "void setUseAromaticityFlag(boolean useAromaticityFlag)", "full_signature": "@Deprecated public void setUseAromaticityFlag(boolean useAromaticityFlag)", "class_method_signature": "SmilesGenerator.setUseAromaticityFlag(boolean useAromaticityFlag)", "testcase": false, "constructor": false}, {"identifier": "labels", "parameters": "(int flavour, final IAtomContainer molecule)", "modifiers": "private static", "return": "int[]", "signature": "int[] labels(int flavour, final IAtomContainer molecule)", "full_signature": "private static int[] labels(int flavour, final IAtomContainer molecule)", "class_method_signature": "SmilesGenerator.labels(int flavour, final IAtomContainer molecule)", "testcase": false, "constructor": false}, {"identifier": "inchiNumbers", "parameters": "(IAtomContainer container)", "modifiers": "private static", "return": "long[]", "signature": "long[] inchiNumbers(IAtomContainer container)", "full_signature": "private static long[] inchiNumbers(IAtomContainer container)", "class_method_signature": "SmilesGenerator.inchiNumbers(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "getRgrps", "parameters": "(IAtomContainer container, Elements reversed)", "modifiers": "private static", "return": "List<IAtom>", "signature": "List<IAtom> getRgrps(IAtomContainer container, Elements reversed)", "full_signature": "private static List<IAtom> getRgrps(IAtomContainer container, Elements reversed)", "class_method_signature": "SmilesGenerator.getRgrps(IAtomContainer container, Elements reversed)", "testcase": false, "constructor": false}, {"identifier": "ensureNotNull", "parameters": "(Integer x)", "modifiers": "private static", "return": "Integer", "signature": "Integer ensureNotNull(Integer x)", "full_signature": "private static Integer ensureNotNull(Integer x)", "class_method_signature": "SmilesGenerator.ensureNotNull(Integer x)", "testcase": false, "constructor": false}, {"identifier": "toAtomIdxs", "parameters": "(Collection<IAtom> atoms, Map<IAtom, Integer> atomidx)", "modifiers": "private static", "return": "List<Integer>", "signature": "List<Integer> toAtomIdxs(Collection<IAtom> atoms, Map<IAtom, Integer> atomidx)", "full_signature": "private static List<Integer> toAtomIdxs(Collection<IAtom> atoms, Map<IAtom, Integer> atomidx)", "class_method_signature": "SmilesGenerator.toAtomIdxs(Collection<IAtom> atoms, Map<IAtom, Integer> atomidx)", "testcase": false, "constructor": false}, {"identifier": "getCxSmilesState", "parameters": "(int flavour, IAtomContainer mol)", "modifiers": "private static", "return": "CxSmilesState", "signature": "CxSmilesState getCxSmilesState(int flavour, IAtomContainer mol)", "full_signature": "private static CxSmilesState getCxSmilesState(int flavour, IAtomContainer mol)", "class_method_signature": "SmilesGenerator.getCxSmilesState(int flavour, IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "getSgroupPolymerKey", "parameters": "(Sgroup sgroup)", "modifiers": "private static", "return": "String", "signature": "String getSgroupPolymerKey(Sgroup sgroup)", "full_signature": "private static String getSgroupPolymerKey(Sgroup sgroup)", "class_method_signature": "SmilesGenerator.getSgroupPolymerKey(Sgroup sgroup)", "testcase": false, "constructor": false}, {"identifier": "createComparator", "parameters": "(final IAtomContainer mol,\n                                                     final int flavor)", "modifiers": "public static", "return": "Comparator<IAtom>", "signature": "Comparator<IAtom> createComparator(final IAtomContainer mol,\n                                                     final int flavor)", "full_signature": "public static Comparator<IAtom> createComparator(final IAtomContainer mol,\n                                                     final int flavor)", "class_method_signature": "SmilesGenerator.createComparator(final IAtomContainer mol,\n                                                     final int flavor)", "testcase": false, "constructor": false}], "file": "storage/smiles/src/main/java/org/openscience/cdk/smiles/SmilesGenerator.java"}, "focal_method": {"identifier": "create", "parameters": "(IAtomContainer molecule)", "modifiers": "public", "return": "String", "body": "public String create(IAtomContainer molecule) throws CDKException {\n        return create(molecule, new int[molecule.getAtomCount()]);\n    }", "signature": "String create(IAtomContainer molecule)", "full_signature": "public String create(IAtomContainer molecule)", "class_method_signature": "SmilesGenerator.create(IAtomContainer molecule)", "testcase": false, "constructor": false, "invocations": ["create", "getAtomCount"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}