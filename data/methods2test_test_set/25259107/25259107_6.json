{"test_class": {"identifier": "RegisterRequestTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String JSON = \"{\\\"challenge\\\":\\\"vqrS6WXDe1JUs5_c3i4-LkKIHRr-3XVb3azuA5TifHo\\\",\\\"appId\\\":\\\"http://example.com\\\",\\\"version\\\":\\\"U2F_V2\\\"}\";", "modifier": "public static final", "type": "String", "declarator": "JSON = \"{\\\"challenge\\\":\\\"vqrS6WXDe1JUs5_c3i4-LkKIHRr-3XVb3azuA5TifHo\\\",\\\"appId\\\":\\\"http://example.com\\\",\\\"version\\\":\\\"U2F_V2\\\"}\"", "var_name": "JSON"}], "file": "u2flib-server-core/src/test/java/com/yubico/u2f/data/messages/RegisterRequestTest.java"}, "test_case": {"identifier": "testGetters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetters() throws Exception {\n        RegisterRequest registerRequest = new RegisterRequest(SERVER_CHALLENGE_REGISTER_BASE64, APP_ID_ENROLL);\n        assertEquals(SERVER_CHALLENGE_REGISTER_BASE64, registerRequest.getChallenge());\n        assertEquals(APP_ID_ENROLL, registerRequest.getAppId());\n        assertNotNull(SERVER_CHALLENGE_REGISTER_BASE64, registerRequest.getRequestId());\n    }", "signature": "void testGetters()", "full_signature": "@Test public void testGetters()", "class_method_signature": "RegisterRequestTest.testGetters()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getChallenge", "assertEquals", "getAppId", "assertNotNull", "getRequestId"]}, "focal_class": {"identifier": "RegisterRequest", "superclass": "extends JsonSerializable", "interfaces": "implements Persistable", "fields": [{"original_string": "private static final long serialVersionUID = 24349091760814188L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 24349091760814188L", "var_name": "serialVersionUID"}, {"original_string": "@NonNull String version;", "modifier": "@NonNull", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "@NonNull String challenge;", "modifier": "@NonNull", "type": "String", "declarator": "challenge", "var_name": "challenge"}, {"original_string": "@NonNull String appId;", "modifier": "@NonNull", "type": "String", "declarator": "appId", "var_name": "appId"}], "methods": [{"identifier": "RegisterRequest", "parameters": "(String challenge, String appId)", "modifiers": "public", "return": "", "signature": " RegisterRequest(String challenge, String appId)", "full_signature": "public  RegisterRequest(String challenge, String appId)", "class_method_signature": "RegisterRequest.RegisterRequest(String challenge, String appId)", "testcase": false, "constructor": true}, {"identifier": "getRequestId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getRequestId()", "full_signature": "@Override public String getRequestId()", "class_method_signature": "RegisterRequest.getRequestId()", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(String json)", "modifiers": "public static", "return": "RegisterRequest", "signature": "RegisterRequest fromJson(String json)", "full_signature": "public static RegisterRequest fromJson(String json)", "class_method_signature": "RegisterRequest.fromJson(String json)", "testcase": false, "constructor": false}], "file": "u2flib-server-core/src/main/java/com/yubico/u2f/data/messages/RegisterRequest.java"}, "focal_method": {"identifier": "getRequestId", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getRequestId() {\n        return getChallenge();\n    }", "signature": "String getRequestId()", "full_signature": "@Override public String getRequestId()", "class_method_signature": "RegisterRequest.getRequestId()", "testcase": false, "constructor": false, "invocations": ["getChallenge"]}, "repository": {"repo_id": 25259107, "url": "https://github.com/Yubico/java-u2flib-server", "language": "Java", "is_fork": false, "fork_count": 55, "stargazer_count": 127, "size": 896, "license": "licensed"}}