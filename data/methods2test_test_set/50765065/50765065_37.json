{"test_class": {"identifier": "TodoRepositoryImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TodoRepositoryImpl mTodoRepository;", "modifier": "private", "type": "TodoRepositoryImpl", "declarator": "mTodoRepository", "var_name": "mTodoRepository"}, {"original_string": "@Rule\n    public PowerMockRule rule = new PowerMockRule();", "modifier": "@Rule\n    public", "type": "PowerMockRule", "declarator": "rule = new PowerMockRule()", "var_name": "rule"}], "file": "app/src/test/java/apidez/com/doit/repository/TodoRepositoryImplTest.java"}, "test_case": {"identifier": "testDeleteNotFound", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDeleteNotFound() throws Exception {\n        PowerMockito.when(Todo.findById(Todo.class, 1L)).thenReturn(null);\n        mTodoRepository.delete(1L).observeOn(Schedulers.immediate()).subscribe(newTodo -> {\n            fail(\"Should throw exception\");\n        }, throwable -> {\n            assertEquals(\"Can not find todo\", throwable.getMessage());\n        });\n    }", "signature": "void testDeleteNotFound()", "full_signature": "@Test public void testDeleteNotFound()", "class_method_signature": "TodoRepositoryImplTest.testDeleteNotFound()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "findById", "subscribe", "observeOn", "delete", "immediate", "fail", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "TodoRepositoryImpl", "superclass": "", "interfaces": "implements TodoRepository", "fields": [{"original_string": "private Context mContext;", "modifier": "private", "type": "Context", "declarator": "mContext", "var_name": "mContext"}], "methods": [{"identifier": "TodoRepositoryImpl", "parameters": "(Context context)", "modifiers": "public", "return": "", "signature": " TodoRepositoryImpl(Context context)", "full_signature": "public  TodoRepositoryImpl(Context context)", "class_method_signature": "TodoRepositoryImpl.TodoRepositoryImpl(Context context)", "testcase": false, "constructor": true}, {"identifier": "createOrUpdate", "parameters": "(Todo todo)", "modifiers": "@Override public", "return": "Observable<Todo>", "signature": "Observable<Todo> createOrUpdate(Todo todo)", "full_signature": "@Override public Observable<Todo> createOrUpdate(Todo todo)", "class_method_signature": "TodoRepositoryImpl.createOrUpdate(Todo todo)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Long id)", "modifiers": "@Override public", "return": "Observable<Boolean>", "signature": "Observable<Boolean> delete(Long id)", "full_signature": "@Override public Observable<Boolean> delete(Long id)", "class_method_signature": "TodoRepositoryImpl.delete(Long id)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "@Override public", "return": "Observable<List<Todo>>", "signature": "Observable<List<Todo>> getAll()", "full_signature": "@Override public Observable<List<Todo>> getAll()", "class_method_signature": "TodoRepositoryImpl.getAll()", "testcase": false, "constructor": false}], "file": "app/src/main/java/apidez/com/doit/repository/TodoRepositoryImpl.java"}, "focal_method": {"identifier": "delete", "parameters": "(Long id)", "modifiers": "@Override public", "return": "Observable<Boolean>", "body": "@Override\n    public Observable<Boolean> delete(Long id) {\n        return Observable.create(new Observable.OnSubscribe<Boolean>() {\n            @Override\n            public void call(Subscriber<? super Boolean> subscriber) {\n                try {\n                    Todo todo = Todo.findById(Todo.class, id);\n                    if (todo == null) throw new Exception(mContext.getString(R.string.problem_find));\n                    if (!todo.delete()) throw new Exception(mContext.getString(R.string.problem_delete));\n                    subscriber.onNext(true);\n                    subscriber.onCompleted();\n                } catch (Exception ex) {\n                    subscriber.onError(ex);\n                }\n            }\n        });\n    }", "signature": "Observable<Boolean> delete(Long id)", "full_signature": "@Override public Observable<Boolean> delete(Long id)", "class_method_signature": "TodoRepositoryImpl.delete(Long id)", "testcase": false, "constructor": false, "invocations": ["create", "findById", "getString", "delete", "getString", "onNext", "onCompleted", "onError"]}, "repository": {"repo_id": 50765065, "url": "https://github.com/nongdenchet/DO.IT", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 6, "size": 16808, "license": "licensed"}}