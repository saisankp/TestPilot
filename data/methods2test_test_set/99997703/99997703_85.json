{"test_class": {"identifier": "ConfigTest", "superclass": "", "interfaces": "", "fields": [], "file": "OcavaCore/src/test/java/com/ocadotechnology/config/ConfigTest.java"}, "test_case": {"identifier": "isValueDefined_whenValueIsExplicitlyDefinedEmpty_thenReturnsFalse", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void isValueDefined_whenValueIsExplicitlyDefinedEmpty_thenReturnsFalse() {\n        Config<TestConfig> config = generateConfigWithEntry(TestConfig.FOO, \"\");\n        assertThat(config.isValueDefined(TestConfig.FOO)).isFalse();\n    }", "signature": "void isValueDefined_whenValueIsExplicitlyDefinedEmpty_thenReturnsFalse()", "full_signature": "@Test void isValueDefined_whenValueIsExplicitlyDefinedEmpty_thenReturnsFalse()", "class_method_signature": "ConfigTest.isValueDefined_whenValueIsExplicitlyDefinedEmpty_thenReturnsFalse()", "testcase": true, "constructor": false, "invocations": ["generateConfigWithEntry", "isFalse", "assertThat", "isValueDefined"]}, "focal_class": {"identifier": "Config", "superclass": "", "interfaces": "implements Serializable, Comparable<Config<?>>", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "public final Class<E> cls;", "modifier": "public final", "type": "Class<E>", "declarator": "cls", "var_name": "cls"}, {"original_string": "private final ImmutableMap<E, ConfigValue> values;", "modifier": "private final", "type": "ImmutableMap<E, ConfigValue>", "declarator": "values", "var_name": "values"}, {"original_string": "private final ImmutableMap<?, Config<?>> subConfig;", "modifier": "private final", "type": "ImmutableMap<?, Config<?>>", "declarator": "subConfig", "var_name": "subConfig"}, {"original_string": "private final String qualifier;", "modifier": "private final", "type": "String", "declarator": "qualifier", "var_name": "qualifier"}, {"original_string": "private final TimeUnit timeUnit;", "modifier": "private final", "type": "TimeUnit", "declarator": "timeUnit", "var_name": "timeUnit"}, {"original_string": "private final LengthUnit lengthUnit;", "modifier": "private final", "type": "LengthUnit", "declarator": "lengthUnit", "var_name": "lengthUnit"}], "methods": [{"identifier": "Config", "parameters": "(\n            Class<E> cls,\n            ImmutableMap<E, ConfigValue> values,\n            ImmutableMap<?, Config<?>> subConfig,\n            String qualifier,\n            TimeUnit timeUnit,\n            LengthUnit lengthUnit)", "modifiers": "private", "return": "", "signature": " Config(\n            Class<E> cls,\n            ImmutableMap<E, ConfigValue> values,\n            ImmutableMap<?, Config<?>> subConfig,\n            String qualifier,\n            TimeUnit timeUnit,\n            LengthUnit lengthUnit)", "full_signature": "private  Config(\n            Class<E> cls,\n            ImmutableMap<E, ConfigValue> values,\n            ImmutableMap<?, Config<?>> subConfig,\n            String qualifier,\n            TimeUnit timeUnit,\n            LengthUnit lengthUnit)", "class_method_signature": "Config.Config(\n            Class<E> cls,\n            ImmutableMap<E, ConfigValue> values,\n            ImmutableMap<?, Config<?>> subConfig,\n            String qualifier,\n            TimeUnit timeUnit,\n            LengthUnit lengthUnit)", "testcase": false, "constructor": true}, {"identifier": "Config", "parameters": "(\n            Class<E> cls,\n            ImmutableMap<E, ConfigValue> values,\n            ImmutableMap<?, Config<?>> subConfig,\n            String qualifier)", "modifiers": "", "return": "", "signature": " Config(\n            Class<E> cls,\n            ImmutableMap<E, ConfigValue> values,\n            ImmutableMap<?, Config<?>> subConfig,\n            String qualifier)", "full_signature": "  Config(\n            Class<E> cls,\n            ImmutableMap<E, ConfigValue> values,\n            ImmutableMap<?, Config<?>> subConfig,\n            String qualifier)", "class_method_signature": "Config.Config(\n            Class<E> cls,\n            ImmutableMap<E, ConfigValue> values,\n            ImmutableMap<?, Config<?>> subConfig,\n            String qualifier)", "testcase": false, "constructor": true}, {"identifier": "getPrefixedConfigItems", "parameters": "(String prefix)", "modifiers": "public", "return": "Config<E>", "signature": "Config<E> getPrefixedConfigItems(String prefix)", "full_signature": "public Config<E> getPrefixedConfigItems(String prefix)", "class_method_signature": "Config.getPrefixedConfigItems(String prefix)", "testcase": false, "constructor": false}, {"identifier": "getPrefixBiasedConfigItems", "parameters": "(String prefix)", "modifiers": "public", "return": "Config<E>", "signature": "Config<E> getPrefixBiasedConfigItems(String prefix)", "full_signature": "public Config<E> getPrefixBiasedConfigItems(String prefix)", "class_method_signature": "Config.getPrefixBiasedConfigItems(String prefix)", "testcase": false, "constructor": false}, {"identifier": "getPrefixes", "parameters": "()", "modifiers": "public", "return": "ImmutableSet<String>", "signature": "ImmutableSet<String> getPrefixes()", "full_signature": "public ImmutableSet<String> getPrefixes()", "class_method_signature": "Config.getPrefixes()", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "()", "modifiers": "public", "return": "ImmutableMap<E, ConfigValue>", "signature": "ImmutableMap<E, ConfigValue> getValues()", "full_signature": "public ImmutableMap<E, ConfigValue> getValues()", "class_method_signature": "Config.getValues()", "testcase": false, "constructor": false}, {"identifier": "empty", "parameters": "(Class<T> c)", "modifiers": "public static", "return": "Config<T>", "signature": "Config<T> empty(Class<T> c)", "full_signature": "public static Config<T> empty(Class<T> c)", "class_method_signature": "Config.empty(Class<T> c)", "testcase": false, "constructor": false}, {"identifier": "getTimeUnit", "parameters": "()", "modifiers": "public", "return": "TimeUnit", "signature": "TimeUnit getTimeUnit()", "full_signature": "public TimeUnit getTimeUnit()", "class_method_signature": "Config.getTimeUnit()", "testcase": false, "constructor": false}, {"identifier": "getLengthUnit", "parameters": "()", "modifiers": "public", "return": "LengthUnit", "signature": "LengthUnit getLengthUnit()", "full_signature": "public LengthUnit getLengthUnit()", "class_method_signature": "Config.getLengthUnit()", "testcase": false, "constructor": false}, {"identifier": "containsKey", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "boolean", "signature": "boolean containsKey(Enum<?> key)", "full_signature": "@Deprecated public boolean containsKey(Enum<?> key)", "class_method_signature": "Config.containsKey(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "isValueDefined", "parameters": "(Enum<?> key)", "modifiers": "public", "return": "boolean", "signature": "boolean isValueDefined(Enum<?> key)", "full_signature": "public boolean isValueDefined(Enum<?> key)", "class_method_signature": "Config.isValueDefined(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "areKeyAndValueDefined", "parameters": "(Enum<?> key)", "modifiers": "public", "return": "boolean", "signature": "boolean areKeyAndValueDefined(Enum<?> key)", "full_signature": "public boolean areKeyAndValueDefined(Enum<?> key)", "class_method_signature": "Config.areKeyAndValueDefined(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "enumTypeMatches", "parameters": "(Class<? extends Enum> enumClazz)", "modifiers": "public", "return": "boolean", "signature": "boolean enumTypeMatches(Class<? extends Enum> enumClazz)", "full_signature": "public boolean enumTypeMatches(Class<? extends Enum> enumClazz)", "class_method_signature": "Config.enumTypeMatches(Class<? extends Enum> enumClazz)", "testcase": false, "constructor": false}, {"identifier": "enumTypeIncludes", "parameters": "(Enum<?> key)", "modifiers": "public", "return": "boolean", "signature": "boolean enumTypeIncludes(Enum<?> key)", "full_signature": "public boolean enumTypeIncludes(Enum<?> key)", "class_method_signature": "Config.enumTypeIncludes(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSubConfig", "parameters": "(Class<T> key)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "Config<T>", "signature": "Config<T> getSubConfig(Class<T> key)", "full_signature": "@SuppressWarnings(\"unchecked\") public Config<T> getSubConfig(Class<T> key)", "class_method_signature": "Config.getSubConfig(Class<T> key)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(Enum<?> key)", "modifiers": "public", "return": "StrictValueParser", "signature": "StrictValueParser getValue(Enum<?> key)", "full_signature": "public StrictValueParser getValue(Enum<?> key)", "class_method_signature": "Config.getValue(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getIfValueDefined", "parameters": "(Enum<?> key)", "modifiers": "public", "return": "OptionalValueParser", "signature": "OptionalValueParser getIfValueDefined(Enum<?> key)", "full_signature": "public OptionalValueParser getIfValueDefined(Enum<?> key)", "class_method_signature": "Config.getIfValueDefined(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getIfKeyAndValueDefined", "parameters": "(Enum<?> key)", "modifiers": "public", "return": "OptionalValueParser", "signature": "OptionalValueParser getIfKeyAndValueDefined(Enum<?> key)", "full_signature": "public OptionalValueParser getIfKeyAndValueDefined(Enum<?> key)", "class_method_signature": "Config.getIfKeyAndValueDefined(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getInt", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "int", "signature": "int getInt(Enum<?> key)", "full_signature": "@Deprecated public int getInt(Enum<?> key)", "class_method_signature": "Config.getInt(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getIntOrDefault", "parameters": "(Enum<?> key, int defaultValue)", "modifiers": "@Deprecated public", "return": "int", "signature": "int getIntOrDefault(Enum<?> key, int defaultValue)", "full_signature": "@Deprecated public int getIntOrDefault(Enum<?> key, int defaultValue)", "class_method_signature": "Config.getIntOrDefault(Enum<?> key, int defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getIntIfPresent", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "OptionalInt", "signature": "OptionalInt getIntIfPresent(Enum<?> key)", "full_signature": "@Deprecated public OptionalInt getIntIfPresent(Enum<?> key)", "class_method_signature": "Config.getIntIfPresent(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getDoubleIfPresent", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "Optional<Double>", "signature": "Optional<Double> getDoubleIfPresent(Enum<?> key)", "full_signature": "@Deprecated public Optional<Double> getDoubleIfPresent(Enum<?> key)", "class_method_signature": "Config.getDoubleIfPresent(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "double", "signature": "double getDouble(Enum<?> key)", "full_signature": "@Deprecated public double getDouble(Enum<?> key)", "class_method_signature": "Config.getDouble(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getDoubleOrDefault", "parameters": "(Enum<?> key, double defaultValue)", "modifiers": "@Deprecated public", "return": "double", "signature": "double getDoubleOrDefault(Enum<?> key, double defaultValue)", "full_signature": "@Deprecated public double getDoubleOrDefault(Enum<?> key, double defaultValue)", "class_method_signature": "Config.getDoubleOrDefault(Enum<?> key, double defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "boolean", "signature": "boolean getBoolean(Enum<?> key)", "full_signature": "@Deprecated public boolean getBoolean(Enum<?> key)", "class_method_signature": "Config.getBoolean(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getBooleanOrDefault", "parameters": "(Enum<?> key, boolean defaultValue)", "modifiers": "@Deprecated public", "return": "boolean", "signature": "boolean getBooleanOrDefault(Enum<?> key, boolean defaultValue)", "full_signature": "@Deprecated public boolean getBooleanOrDefault(Enum<?> key, boolean defaultValue)", "class_method_signature": "Config.getBooleanOrDefault(Enum<?> key, boolean defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "long", "signature": "long getLong(Enum<?> key)", "full_signature": "@Deprecated public long getLong(Enum<?> key)", "class_method_signature": "Config.getLong(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getLongOrDefault", "parameters": "(Enum<?> key, long defaultValue)", "modifiers": "@Deprecated public", "return": "long", "signature": "long getLongOrDefault(Enum<?> key, long defaultValue)", "full_signature": "@Deprecated public long getLongOrDefault(Enum<?> key, long defaultValue)", "class_method_signature": "Config.getLongOrDefault(Enum<?> key, long defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getLongIfPresent", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "OptionalLong", "signature": "OptionalLong getLongIfPresent(Enum<?> key)", "full_signature": "@Deprecated public OptionalLong getLongIfPresent(Enum<?> key)", "class_method_signature": "Config.getLongIfPresent(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getLength", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "double", "signature": "double getLength(Enum<?> key)", "full_signature": "@Deprecated public double getLength(Enum<?> key)", "class_method_signature": "Config.getLength(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getLengthOrDefault", "parameters": "(Enum<?> key, double defaultValue)", "modifiers": "@Deprecated public", "return": "double", "signature": "double getLengthOrDefault(Enum<?> key, double defaultValue)", "full_signature": "@Deprecated public double getLengthOrDefault(Enum<?> key, double defaultValue)", "class_method_signature": "Config.getLengthOrDefault(Enum<?> key, double defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getFractionalTime", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "double", "signature": "double getFractionalTime(Enum<?> key)", "full_signature": "@Deprecated public double getFractionalTime(Enum<?> key)", "class_method_signature": "Config.getFractionalTime(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getFractionalTimeOrDefault", "parameters": "(Enum<?> key, double defaultValue)", "modifiers": "@Deprecated public", "return": "double", "signature": "double getFractionalTimeOrDefault(Enum<?> key, double defaultValue)", "full_signature": "@Deprecated public double getFractionalTimeOrDefault(Enum<?> key, double defaultValue)", "class_method_signature": "Config.getFractionalTimeOrDefault(Enum<?> key, double defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getFractionalTimeIfPresent", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "Optional<Double>", "signature": "Optional<Double> getFractionalTimeIfPresent(Enum<?> key)", "full_signature": "@Deprecated public Optional<Double> getFractionalTimeIfPresent(Enum<?> key)", "class_method_signature": "Config.getFractionalTimeIfPresent(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getTime", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "long", "signature": "long getTime(Enum<?> key)", "full_signature": "@Deprecated public long getTime(Enum<?> key)", "class_method_signature": "Config.getTime(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getTimeOrDefault", "parameters": "(Enum<?> key, long defaultValue)", "modifiers": "@Deprecated public", "return": "long", "signature": "long getTimeOrDefault(Enum<?> key, long defaultValue)", "full_signature": "@Deprecated public long getTimeOrDefault(Enum<?> key, long defaultValue)", "class_method_signature": "Config.getTimeOrDefault(Enum<?> key, long defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getTimeIfPresent", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "Optional<Long>", "signature": "Optional<Long> getTimeIfPresent(Enum<?> key)", "full_signature": "@Deprecated public Optional<Long> getTimeIfPresent(Enum<?> key)", "class_method_signature": "Config.getTimeIfPresent(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getDuration", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "Duration", "signature": "Duration getDuration(Enum<?> key)", "full_signature": "@Deprecated public Duration getDuration(Enum<?> key)", "class_method_signature": "Config.getDuration(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getDurationOrDefault", "parameters": "(Enum<?> key, Duration defaultValue)", "modifiers": "@Deprecated public", "return": "Duration", "signature": "Duration getDurationOrDefault(Enum<?> key, Duration defaultValue)", "full_signature": "@Deprecated public Duration getDurationOrDefault(Enum<?> key, Duration defaultValue)", "class_method_signature": "Config.getDurationOrDefault(Enum<?> key, Duration defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getDurationIfPresent", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "Optional<Duration>", "signature": "Optional<Duration> getDurationIfPresent(Enum<?> key)", "full_signature": "@Deprecated public Optional<Duration> getDurationIfPresent(Enum<?> key)", "class_method_signature": "Config.getDurationIfPresent(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSpeed", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "double", "signature": "double getSpeed(Enum<?> key)", "full_signature": "@Deprecated public double getSpeed(Enum<?> key)", "class_method_signature": "Config.getSpeed(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSpeedOrDefault", "parameters": "(Enum<?> key, double defaultValue)", "modifiers": "@Deprecated public", "return": "double", "signature": "double getSpeedOrDefault(Enum<?> key, double defaultValue)", "full_signature": "@Deprecated public double getSpeedOrDefault(Enum<?> key, double defaultValue)", "class_method_signature": "Config.getSpeedOrDefault(Enum<?> key, double defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getAcceleration", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "double", "signature": "double getAcceleration(Enum<?> key)", "full_signature": "@Deprecated public double getAcceleration(Enum<?> key)", "class_method_signature": "Config.getAcceleration(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getAccelerationOrDefault", "parameters": "(Enum<?> key, double defaultValue)", "modifiers": "@Deprecated public", "return": "double", "signature": "double getAccelerationOrDefault(Enum<?> key, double defaultValue)", "full_signature": "@Deprecated public double getAccelerationOrDefault(Enum<?> key, double defaultValue)", "class_method_signature": "Config.getAccelerationOrDefault(Enum<?> key, double defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getListOf", "parameters": "(Enum<?> key, Function<String, T> valueFunction)", "modifiers": "@Deprecated public", "return": "ImmutableList<T>", "signature": "ImmutableList<T> getListOf(Enum<?> key, Function<String, T> valueFunction)", "full_signature": "@Deprecated public ImmutableList<T> getListOf(Enum<?> key, Function<String, T> valueFunction)", "class_method_signature": "Config.getListOf(Enum<?> key, Function<String, T> valueFunction)", "testcase": false, "constructor": false}, {"identifier": "getListOfOrEmpty", "parameters": "(Enum<?> key, Function<String, T> valueFunction)", "modifiers": "@Deprecated public", "return": "ImmutableList<T>", "signature": "ImmutableList<T> getListOfOrEmpty(Enum<?> key, Function<String, T> valueFunction)", "full_signature": "@Deprecated public ImmutableList<T> getListOfOrEmpty(Enum<?> key, Function<String, T> valueFunction)", "class_method_signature": "Config.getListOfOrEmpty(Enum<?> key, Function<String, T> valueFunction)", "testcase": false, "constructor": false}, {"identifier": "getListOfOrDefault", "parameters": "(Enum<?> key, Function<String, T> valueFunction, ImmutableList<T> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableList<T>", "signature": "ImmutableList<T> getListOfOrDefault(Enum<?> key, Function<String, T> valueFunction, ImmutableList<T> defaultValue)", "full_signature": "@Deprecated public ImmutableList<T> getListOfOrDefault(Enum<?> key, Function<String, T> valueFunction, ImmutableList<T> defaultValue)", "class_method_signature": "Config.getListOfOrDefault(Enum<?> key, Function<String, T> valueFunction, ImmutableList<T> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getSetOf", "parameters": "(Enum<?> key, Function<String, T> valueFunction)", "modifiers": "@Deprecated public", "return": "ImmutableSet<T>", "signature": "ImmutableSet<T> getSetOf(Enum<?> key, Function<String, T> valueFunction)", "full_signature": "@Deprecated public ImmutableSet<T> getSetOf(Enum<?> key, Function<String, T> valueFunction)", "class_method_signature": "Config.getSetOf(Enum<?> key, Function<String, T> valueFunction)", "testcase": false, "constructor": false}, {"identifier": "getSetOfOrEmpty", "parameters": "(Enum<?> key, Function<String, T> valueFunction)", "modifiers": "@Deprecated public", "return": "ImmutableSet<T>", "signature": "ImmutableSet<T> getSetOfOrEmpty(Enum<?> key, Function<String, T> valueFunction)", "full_signature": "@Deprecated public ImmutableSet<T> getSetOfOrEmpty(Enum<?> key, Function<String, T> valueFunction)", "class_method_signature": "Config.getSetOfOrEmpty(Enum<?> key, Function<String, T> valueFunction)", "testcase": false, "constructor": false}, {"identifier": "getSetOfOrDefault", "parameters": "(Enum<?> key, Function<String, T> valueFunction, ImmutableSet<T> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableSet<T>", "signature": "ImmutableSet<T> getSetOfOrDefault(Enum<?> key, Function<String, T> valueFunction, ImmutableSet<T> defaultValue)", "full_signature": "@Deprecated public ImmutableSet<T> getSetOfOrDefault(Enum<?> key, Function<String, T> valueFunction, ImmutableSet<T> defaultValue)", "class_method_signature": "Config.getSetOfOrDefault(Enum<?> key, Function<String, T> valueFunction, ImmutableSet<T> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getListOfIntegers", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableList<Integer>", "signature": "ImmutableList<Integer> getListOfIntegers(Enum<?> key)", "full_signature": "@Deprecated public ImmutableList<Integer> getListOfIntegers(Enum<?> key)", "class_method_signature": "Config.getListOfIntegers(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getListOfIntegersOrEmpty", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableList<Integer>", "signature": "ImmutableList<Integer> getListOfIntegersOrEmpty(Enum<?> key)", "full_signature": "@Deprecated public ImmutableList<Integer> getListOfIntegersOrEmpty(Enum<?> key)", "class_method_signature": "Config.getListOfIntegersOrEmpty(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getListOfIntegersOrDefault", "parameters": "(Enum<?> key, ImmutableList<Integer> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableList<Integer>", "signature": "ImmutableList<Integer> getListOfIntegersOrDefault(Enum<?> key, ImmutableList<Integer> defaultValue)", "full_signature": "@Deprecated public ImmutableList<Integer> getListOfIntegersOrDefault(Enum<?> key, ImmutableList<Integer> defaultValue)", "class_method_signature": "Config.getListOfIntegersOrDefault(Enum<?> key, ImmutableList<Integer> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getSetOfIntegers", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableSet<Integer>", "signature": "ImmutableSet<Integer> getSetOfIntegers(Enum<?> key)", "full_signature": "@Deprecated public ImmutableSet<Integer> getSetOfIntegers(Enum<?> key)", "class_method_signature": "Config.getSetOfIntegers(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSetOfIntegersOrEmpty", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableSet<Integer>", "signature": "ImmutableSet<Integer> getSetOfIntegersOrEmpty(Enum<?> key)", "full_signature": "@Deprecated public ImmutableSet<Integer> getSetOfIntegersOrEmpty(Enum<?> key)", "class_method_signature": "Config.getSetOfIntegersOrEmpty(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSetOfIntegersOrDefault", "parameters": "(Enum<?> key, ImmutableSet<Integer> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableSet<Integer>", "signature": "ImmutableSet<Integer> getSetOfIntegersOrDefault(Enum<?> key, ImmutableSet<Integer> defaultValue)", "full_signature": "@Deprecated public ImmutableSet<Integer> getSetOfIntegersOrDefault(Enum<?> key, ImmutableSet<Integer> defaultValue)", "class_method_signature": "Config.getSetOfIntegersOrDefault(Enum<?> key, ImmutableSet<Integer> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getListOfLongs", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableList<Long>", "signature": "ImmutableList<Long> getListOfLongs(Enum<?> key)", "full_signature": "@Deprecated public ImmutableList<Long> getListOfLongs(Enum<?> key)", "class_method_signature": "Config.getListOfLongs(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getListOfLongsOrEmpty", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableList<Long>", "signature": "ImmutableList<Long> getListOfLongsOrEmpty(Enum<?> key)", "full_signature": "@Deprecated public ImmutableList<Long> getListOfLongsOrEmpty(Enum<?> key)", "class_method_signature": "Config.getListOfLongsOrEmpty(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getListOfLongsOrDefault", "parameters": "(Enum<?> key, ImmutableList<Long> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableList<Long>", "signature": "ImmutableList<Long> getListOfLongsOrDefault(Enum<?> key, ImmutableList<Long> defaultValue)", "full_signature": "@Deprecated public ImmutableList<Long> getListOfLongsOrDefault(Enum<?> key, ImmutableList<Long> defaultValue)", "class_method_signature": "Config.getListOfLongsOrDefault(Enum<?> key, ImmutableList<Long> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getSetOfLongs", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableSet<Long>", "signature": "ImmutableSet<Long> getSetOfLongs(Enum<?> key)", "full_signature": "@Deprecated public ImmutableSet<Long> getSetOfLongs(Enum<?> key)", "class_method_signature": "Config.getSetOfLongs(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSetOfLongsOrEmpty", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableSet<Long>", "signature": "ImmutableSet<Long> getSetOfLongsOrEmpty(Enum<?> key)", "full_signature": "@Deprecated public ImmutableSet<Long> getSetOfLongsOrEmpty(Enum<?> key)", "class_method_signature": "Config.getSetOfLongsOrEmpty(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSetOfLongsOrDefault", "parameters": "(Enum<?> key, ImmutableSet<Long> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableSet<Long>", "signature": "ImmutableSet<Long> getSetOfLongsOrDefault(Enum<?> key, ImmutableSet<Long> defaultValue)", "full_signature": "@Deprecated public ImmutableSet<Long> getSetOfLongsOrDefault(Enum<?> key, ImmutableSet<Long> defaultValue)", "class_method_signature": "Config.getSetOfLongsOrDefault(Enum<?> key, ImmutableSet<Long> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getListOfDoubles", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableList<Double>", "signature": "ImmutableList<Double> getListOfDoubles(Enum<?> key)", "full_signature": "@Deprecated public ImmutableList<Double> getListOfDoubles(Enum<?> key)", "class_method_signature": "Config.getListOfDoubles(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getListOfDoublesOrEmpty", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableList<Double>", "signature": "ImmutableList<Double> getListOfDoublesOrEmpty(Enum<?> key)", "full_signature": "@Deprecated public ImmutableList<Double> getListOfDoublesOrEmpty(Enum<?> key)", "class_method_signature": "Config.getListOfDoublesOrEmpty(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getListOfDoublesOrDefault", "parameters": "(Enum<?> key, ImmutableList<Double> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableList<Double>", "signature": "ImmutableList<Double> getListOfDoublesOrDefault(Enum<?> key, ImmutableList<Double> defaultValue)", "full_signature": "@Deprecated public ImmutableList<Double> getListOfDoublesOrDefault(Enum<?> key, ImmutableList<Double> defaultValue)", "class_method_signature": "Config.getListOfDoublesOrDefault(Enum<?> key, ImmutableList<Double> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getSetOfDoubles", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableSet<Double>", "signature": "ImmutableSet<Double> getSetOfDoubles(Enum<?> key)", "full_signature": "@Deprecated public ImmutableSet<Double> getSetOfDoubles(Enum<?> key)", "class_method_signature": "Config.getSetOfDoubles(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSetOfDoublesOrEmpty", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableSet<Double>", "signature": "ImmutableSet<Double> getSetOfDoublesOrEmpty(Enum<?> key)", "full_signature": "@Deprecated public ImmutableSet<Double> getSetOfDoublesOrEmpty(Enum<?> key)", "class_method_signature": "Config.getSetOfDoublesOrEmpty(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSetOfDoublesOrDefault", "parameters": "(Enum<?> key, ImmutableSet<Double> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableSet<Double>", "signature": "ImmutableSet<Double> getSetOfDoublesOrDefault(Enum<?> key, ImmutableSet<Double> defaultValue)", "full_signature": "@Deprecated public ImmutableSet<Double> getSetOfDoublesOrDefault(Enum<?> key, ImmutableSet<Double> defaultValue)", "class_method_signature": "Config.getSetOfDoublesOrDefault(Enum<?> key, ImmutableSet<Double> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getListOfIdsIfPresent", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableList<Id<T>>", "signature": "ImmutableList<Id<T>> getListOfIdsIfPresent(Enum<?> key)", "full_signature": "@Deprecated public ImmutableList<Id<T>> getListOfIdsIfPresent(Enum<?> key)", "class_method_signature": "Config.getListOfIdsIfPresent(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getListOfIds", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableList<Id<T>>", "signature": "ImmutableList<Id<T>> getListOfIds(Enum<?> key)", "full_signature": "@Deprecated public ImmutableList<Id<T>> getListOfIds(Enum<?> key)", "class_method_signature": "Config.getListOfIds(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getListOfIdsOrEmpty", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableList<Id<T>>", "signature": "ImmutableList<Id<T>> getListOfIdsOrEmpty(Enum<?> key)", "full_signature": "@Deprecated public ImmutableList<Id<T>> getListOfIdsOrEmpty(Enum<?> key)", "class_method_signature": "Config.getListOfIdsOrEmpty(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getListOfIdsOrDefault", "parameters": "(Enum<?> key, ImmutableList<Id<T>> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableList<Id<T>>", "signature": "ImmutableList<Id<T>> getListOfIdsOrDefault(Enum<?> key, ImmutableList<Id<T>> defaultValue)", "full_signature": "@Deprecated public ImmutableList<Id<T>> getListOfIdsOrDefault(Enum<?> key, ImmutableList<Id<T>> defaultValue)", "class_method_signature": "Config.getListOfIdsOrDefault(Enum<?> key, ImmutableList<Id<T>> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getSetOfIdsIfPresent", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableSet<Id<T>>", "signature": "ImmutableSet<Id<T>> getSetOfIdsIfPresent(Enum<?> key)", "full_signature": "@Deprecated public ImmutableSet<Id<T>> getSetOfIdsIfPresent(Enum<?> key)", "class_method_signature": "Config.getSetOfIdsIfPresent(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSetOfIds", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableSet<Id<T>>", "signature": "ImmutableSet<Id<T>> getSetOfIds(Enum<?> key)", "full_signature": "@Deprecated public ImmutableSet<Id<T>> getSetOfIds(Enum<?> key)", "class_method_signature": "Config.getSetOfIds(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSetOfIdsOrEmpty", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableSet<Id<T>>", "signature": "ImmutableSet<Id<T>> getSetOfIdsOrEmpty(Enum<?> key)", "full_signature": "@Deprecated public ImmutableSet<Id<T>> getSetOfIdsOrEmpty(Enum<?> key)", "class_method_signature": "Config.getSetOfIdsOrEmpty(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSetOfIdsOrDefault", "parameters": "(Enum<?> key, ImmutableSet<Id<T>> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableSet<Id<T>>", "signature": "ImmutableSet<Id<T>> getSetOfIdsOrDefault(Enum<?> key, ImmutableSet<Id<T>> defaultValue)", "full_signature": "@Deprecated public ImmutableSet<Id<T>> getSetOfIdsOrDefault(Enum<?> key, ImmutableSet<Id<T>> defaultValue)", "class_method_signature": "Config.getSetOfIdsOrDefault(Enum<?> key, ImmutableSet<Id<T>> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getSetOfEnums", "parameters": "(Enum<?> key, Class<T> enumClass)", "modifiers": "@Deprecated public", "return": "ImmutableSet<T>", "signature": "ImmutableSet<T> getSetOfEnums(Enum<?> key, Class<T> enumClass)", "full_signature": "@Deprecated public ImmutableSet<T> getSetOfEnums(Enum<?> key, Class<T> enumClass)", "class_method_signature": "Config.getSetOfEnums(Enum<?> key, Class<T> enumClass)", "testcase": false, "constructor": false}, {"identifier": "getSetOfEnumsOrEmpty", "parameters": "(Enum<?> key, Class<T> enumClass)", "modifiers": "@Deprecated public", "return": "ImmutableSet<T>", "signature": "ImmutableSet<T> getSetOfEnumsOrEmpty(Enum<?> key, Class<T> enumClass)", "full_signature": "@Deprecated public ImmutableSet<T> getSetOfEnumsOrEmpty(Enum<?> key, Class<T> enumClass)", "class_method_signature": "Config.getSetOfEnumsOrEmpty(Enum<?> key, Class<T> enumClass)", "testcase": false, "constructor": false}, {"identifier": "getSetOfEnumsOrDefault", "parameters": "(Enum<?> key, Class<T> enumClass, ImmutableSet<T> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableSet<T>", "signature": "ImmutableSet<T> getSetOfEnumsOrDefault(Enum<?> key, Class<T> enumClass, ImmutableSet<T> defaultValue)", "full_signature": "@Deprecated public ImmutableSet<T> getSetOfEnumsOrDefault(Enum<?> key, Class<T> enumClass, ImmutableSet<T> defaultValue)", "class_method_signature": "Config.getSetOfEnumsOrDefault(Enum<?> key, Class<T> enumClass, ImmutableSet<T> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getListOfEnums", "parameters": "(Enum<?> key, Class<T> enumClass)", "modifiers": "@Deprecated public", "return": "ImmutableList<T>", "signature": "ImmutableList<T> getListOfEnums(Enum<?> key, Class<T> enumClass)", "full_signature": "@Deprecated public ImmutableList<T> getListOfEnums(Enum<?> key, Class<T> enumClass)", "class_method_signature": "Config.getListOfEnums(Enum<?> key, Class<T> enumClass)", "testcase": false, "constructor": false}, {"identifier": "getListOfEnumsOrEmpty", "parameters": "(Enum<?> key, Class<T> enumClass)", "modifiers": "@Deprecated public", "return": "ImmutableList<T>", "signature": "ImmutableList<T> getListOfEnumsOrEmpty(Enum<?> key, Class<T> enumClass)", "full_signature": "@Deprecated public ImmutableList<T> getListOfEnumsOrEmpty(Enum<?> key, Class<T> enumClass)", "class_method_signature": "Config.getListOfEnumsOrEmpty(Enum<?> key, Class<T> enumClass)", "testcase": false, "constructor": false}, {"identifier": "getListOfEnumsOrDefault", "parameters": "(Enum<?> key, Class<T> enumClass, ImmutableList<T> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableList<T>", "signature": "ImmutableList<T> getListOfEnumsOrDefault(Enum<?> key, Class<T> enumClass, ImmutableList<T> defaultValue)", "full_signature": "@Deprecated public ImmutableList<T> getListOfEnumsOrDefault(Enum<?> key, Class<T> enumClass, ImmutableList<T> defaultValue)", "class_method_signature": "Config.getListOfEnumsOrDefault(Enum<?> key, Class<T> enumClass, ImmutableList<T> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getListOfStrings", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableList<String>", "signature": "ImmutableList<String> getListOfStrings(Enum<?> key)", "full_signature": "@Deprecated public ImmutableList<String> getListOfStrings(Enum<?> key)", "class_method_signature": "Config.getListOfStrings(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getListOfStringsOrEmpty", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableList<String>", "signature": "ImmutableList<String> getListOfStringsOrEmpty(Enum<?> key)", "full_signature": "@Deprecated public ImmutableList<String> getListOfStringsOrEmpty(Enum<?> key)", "class_method_signature": "Config.getListOfStringsOrEmpty(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getListOfStringsOrDefault", "parameters": "(Enum<?> key, ImmutableList<String> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableList<String>", "signature": "ImmutableList<String> getListOfStringsOrDefault(Enum<?> key, ImmutableList<String> defaultValue)", "full_signature": "@Deprecated public ImmutableList<String> getListOfStringsOrDefault(Enum<?> key, ImmutableList<String> defaultValue)", "class_method_signature": "Config.getListOfStringsOrDefault(Enum<?> key, ImmutableList<String> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getSetOfStrings", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableSet<String>", "signature": "ImmutableSet<String> getSetOfStrings(Enum<?> key)", "full_signature": "@Deprecated public ImmutableSet<String> getSetOfStrings(Enum<?> key)", "class_method_signature": "Config.getSetOfStrings(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSetOfStringsOrEmpty", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableSet<String>", "signature": "ImmutableSet<String> getSetOfStringsOrEmpty(Enum<?> key)", "full_signature": "@Deprecated public ImmutableSet<String> getSetOfStringsOrEmpty(Enum<?> key)", "class_method_signature": "Config.getSetOfStringsOrEmpty(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSetOfStringsOrDefault", "parameters": "(Enum<?> key, ImmutableSet<String> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableSet<String>", "signature": "ImmutableSet<String> getSetOfStringsOrDefault(Enum<?> key, ImmutableSet<String> defaultValue)", "full_signature": "@Deprecated public ImmutableSet<String> getSetOfStringsOrDefault(Enum<?> key, ImmutableSet<String> defaultValue)", "class_method_signature": "Config.getSetOfStringsOrDefault(Enum<?> key, ImmutableSet<String> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getListOfStringIdsIfPresent", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableList<StringId<T>>", "signature": "ImmutableList<StringId<T>> getListOfStringIdsIfPresent(Enum<?> key)", "full_signature": "@Deprecated public ImmutableList<StringId<T>> getListOfStringIdsIfPresent(Enum<?> key)", "class_method_signature": "Config.getListOfStringIdsIfPresent(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getListOfStringIds", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableList<StringId<T>>", "signature": "ImmutableList<StringId<T>> getListOfStringIds(Enum<?> key)", "full_signature": "@Deprecated public ImmutableList<StringId<T>> getListOfStringIds(Enum<?> key)", "class_method_signature": "Config.getListOfStringIds(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getListOfStringIdsOrEmpty", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableList<StringId<T>>", "signature": "ImmutableList<StringId<T>> getListOfStringIdsOrEmpty(Enum<?> key)", "full_signature": "@Deprecated public ImmutableList<StringId<T>> getListOfStringIdsOrEmpty(Enum<?> key)", "class_method_signature": "Config.getListOfStringIdsOrEmpty(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getListOfStringIdsOrDefault", "parameters": "(Enum<?> key, ImmutableList<StringId<T>> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableList<StringId<T>>", "signature": "ImmutableList<StringId<T>> getListOfStringIdsOrDefault(Enum<?> key, ImmutableList<StringId<T>> defaultValue)", "full_signature": "@Deprecated public ImmutableList<StringId<T>> getListOfStringIdsOrDefault(Enum<?> key, ImmutableList<StringId<T>> defaultValue)", "class_method_signature": "Config.getListOfStringIdsOrDefault(Enum<?> key, ImmutableList<StringId<T>> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getSetOfStringIdsIfPresent", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableSet<StringId<T>>", "signature": "ImmutableSet<StringId<T>> getSetOfStringIdsIfPresent(Enum<?> key)", "full_signature": "@Deprecated public ImmutableSet<StringId<T>> getSetOfStringIdsIfPresent(Enum<?> key)", "class_method_signature": "Config.getSetOfStringIdsIfPresent(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSetOfStringIds", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableSet<StringId<T>>", "signature": "ImmutableSet<StringId<T>> getSetOfStringIds(Enum<?> key)", "full_signature": "@Deprecated public ImmutableSet<StringId<T>> getSetOfStringIds(Enum<?> key)", "class_method_signature": "Config.getSetOfStringIds(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSetOfStringIdsOrEmpty", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableSet<StringId<T>>", "signature": "ImmutableSet<StringId<T>> getSetOfStringIdsOrEmpty(Enum<?> key)", "full_signature": "@Deprecated public ImmutableSet<StringId<T>> getSetOfStringIdsOrEmpty(Enum<?> key)", "class_method_signature": "Config.getSetOfStringIdsOrEmpty(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getSetOfStringIdsOrDefault", "parameters": "(Enum<?> key, ImmutableSet<StringId<T>> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableSet<StringId<T>>", "signature": "ImmutableSet<StringId<T>> getSetOfStringIdsOrDefault(Enum<?> key, ImmutableSet<StringId<T>> defaultValue)", "full_signature": "@Deprecated public ImmutableSet<StringId<T>> getSetOfStringIdsOrDefault(Enum<?> key, ImmutableSet<StringId<T>> defaultValue)", "class_method_signature": "Config.getSetOfStringIdsOrDefault(Enum<?> key, ImmutableSet<StringId<T>> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "String", "signature": "String getString(Enum<?> key)", "full_signature": "@Deprecated public String getString(Enum<?> key)", "class_method_signature": "Config.getString(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getStringOrDefault", "parameters": "(Enum<?> key, String defaultValue)", "modifiers": "@Deprecated public", "return": "String", "signature": "String getStringOrDefault(Enum<?> key, String defaultValue)", "full_signature": "@Deprecated public String getStringOrDefault(Enum<?> key, String defaultValue)", "class_method_signature": "Config.getStringOrDefault(Enum<?> key, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Enum<?> key, Function<String, V> valueFunction)", "modifiers": "@Deprecated public", "return": "V", "signature": "V get(Enum<?> key, Function<String, V> valueFunction)", "full_signature": "@Deprecated public V get(Enum<?> key, Function<String, V> valueFunction)", "class_method_signature": "Config.get(Enum<?> key, Function<String, V> valueFunction)", "testcase": false, "constructor": false}, {"identifier": "getOrDefault", "parameters": "(Enum<?> key, Function<String, V> valueExtractor, V defaultValue)", "modifiers": "@Deprecated public", "return": "V", "signature": "V getOrDefault(Enum<?> key, Function<String, V> valueExtractor, V defaultValue)", "full_signature": "@Deprecated public V getOrDefault(Enum<?> key, Function<String, V> valueExtractor, V defaultValue)", "class_method_signature": "Config.getOrDefault(Enum<?> key, Function<String, V> valueExtractor, V defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getStringIfPresent", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "Optional<String>", "signature": "Optional<String> getStringIfPresent(Enum<?> key)", "full_signature": "@Deprecated public Optional<String> getStringIfPresent(Enum<?> key)", "class_method_signature": "Config.getStringIfPresent(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getStringMap", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableMap<String, String>", "signature": "ImmutableMap<String, String> getStringMap(Enum<?> key)", "full_signature": "@Deprecated public ImmutableMap<String, String> getStringMap(Enum<?> key)", "class_method_signature": "Config.getStringMap(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getStringMapOrEmpty", "parameters": "(Enum<?> key)", "modifiers": "@Deprecated public", "return": "ImmutableMap<String, String>", "signature": "ImmutableMap<String, String> getStringMapOrEmpty(Enum<?> key)", "full_signature": "@Deprecated public ImmutableMap<String, String> getStringMapOrEmpty(Enum<?> key)", "class_method_signature": "Config.getStringMapOrEmpty(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "getStringMapOrDefault", "parameters": "(Enum<?> key, ImmutableMap<String, String> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableMap<String, String>", "signature": "ImmutableMap<String, String> getStringMapOrDefault(Enum<?> key, ImmutableMap<String, String> defaultValue)", "full_signature": "@Deprecated public ImmutableMap<String, String> getStringMapOrDefault(Enum<?> key, ImmutableMap<String, String> defaultValue)", "class_method_signature": "Config.getStringMapOrDefault(Enum<?> key, ImmutableMap<String, String> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getMap", "parameters": "(Enum<?> configKey, Function<String, K> keyParser, Function<String, V> valueParser)", "modifiers": "@Deprecated public", "return": "ImmutableMap<K, V>", "signature": "ImmutableMap<K, V> getMap(Enum<?> configKey, Function<String, K> keyParser, Function<String, V> valueParser)", "full_signature": "@Deprecated public ImmutableMap<K, V> getMap(Enum<?> configKey, Function<String, K> keyParser, Function<String, V> valueParser)", "class_method_signature": "Config.getMap(Enum<?> configKey, Function<String, K> keyParser, Function<String, V> valueParser)", "testcase": false, "constructor": false}, {"identifier": "getMapOrEmpty", "parameters": "(Enum<?> configKey, Function<String, K> keyParser, Function<String, V> valueParser)", "modifiers": "@Deprecated public", "return": "ImmutableMap<K, V>", "signature": "ImmutableMap<K, V> getMapOrEmpty(Enum<?> configKey, Function<String, K> keyParser, Function<String, V> valueParser)", "full_signature": "@Deprecated public ImmutableMap<K, V> getMapOrEmpty(Enum<?> configKey, Function<String, K> keyParser, Function<String, V> valueParser)", "class_method_signature": "Config.getMapOrEmpty(Enum<?> configKey, Function<String, K> keyParser, Function<String, V> valueParser)", "testcase": false, "constructor": false}, {"identifier": "getMapOrDefault", "parameters": "(Enum<?> configKey, Function<String, K> keyParser, Function<String, V> valueParser, ImmutableMap<K, V> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableMap<K, V>", "signature": "ImmutableMap<K, V> getMapOrDefault(Enum<?> configKey, Function<String, K> keyParser, Function<String, V> valueParser, ImmutableMap<K, V> defaultValue)", "full_signature": "@Deprecated public ImmutableMap<K, V> getMapOrDefault(Enum<?> configKey, Function<String, K> keyParser, Function<String, V> valueParser, ImmutableMap<K, V> defaultValue)", "class_method_signature": "Config.getMapOrDefault(Enum<?> configKey, Function<String, K> keyParser, Function<String, V> valueParser, ImmutableMap<K, V> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getStringSetMultimap", "parameters": "(Enum<?> configKey)", "modifiers": "@Deprecated public", "return": "ImmutableSetMultimap<String, String>", "signature": "ImmutableSetMultimap<String, String> getStringSetMultimap(Enum<?> configKey)", "full_signature": "@Deprecated public ImmutableSetMultimap<String, String> getStringSetMultimap(Enum<?> configKey)", "class_method_signature": "Config.getStringSetMultimap(Enum<?> configKey)", "testcase": false, "constructor": false}, {"identifier": "getStringSetMultimapOrEmpty", "parameters": "(Enum<?> configKey)", "modifiers": "@Deprecated public", "return": "ImmutableSetMultimap<String, String>", "signature": "ImmutableSetMultimap<String, String> getStringSetMultimapOrEmpty(Enum<?> configKey)", "full_signature": "@Deprecated public ImmutableSetMultimap<String, String> getStringSetMultimapOrEmpty(Enum<?> configKey)", "class_method_signature": "Config.getStringSetMultimapOrEmpty(Enum<?> configKey)", "testcase": false, "constructor": false}, {"identifier": "getStringSetMultimapOrDefault", "parameters": "(\n            Enum<?> configKey,\n            ImmutableSetMultimap<String, String> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableSetMultimap<String, String>", "signature": "ImmutableSetMultimap<String, String> getStringSetMultimapOrDefault(\n            Enum<?> configKey,\n            ImmutableSetMultimap<String, String> defaultValue)", "full_signature": "@Deprecated public ImmutableSetMultimap<String, String> getStringSetMultimapOrDefault(\n            Enum<?> configKey,\n            ImmutableSetMultimap<String, String> defaultValue)", "class_method_signature": "Config.getStringSetMultimapOrDefault(\n            Enum<?> configKey,\n            ImmutableSetMultimap<String, String> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getSetMultimapOrEmpty", "parameters": "(\n            Enum<?> configKey,\n            Function<String, K> keyParser,\n            Function<String, V> valueParser)", "modifiers": "@Deprecated public", "return": "ImmutableSetMultimap<K, V>", "signature": "ImmutableSetMultimap<K, V> getSetMultimapOrEmpty(\n            Enum<?> configKey,\n            Function<String, K> keyParser,\n            Function<String, V> valueParser)", "full_signature": "@Deprecated public ImmutableSetMultimap<K, V> getSetMultimapOrEmpty(\n            Enum<?> configKey,\n            Function<String, K> keyParser,\n            Function<String, V> valueParser)", "class_method_signature": "Config.getSetMultimapOrEmpty(\n            Enum<?> configKey,\n            Function<String, K> keyParser,\n            Function<String, V> valueParser)", "testcase": false, "constructor": false}, {"identifier": "getSetMultimapOrDefault", "parameters": "(\n            Enum<?> configKey,\n            Function<String, K> keyParser,\n            Function<String, V> valueParser,\n            ImmutableSetMultimap<K, V> defaultValue)", "modifiers": "@Deprecated public", "return": "ImmutableSetMultimap<K, V>", "signature": "ImmutableSetMultimap<K, V> getSetMultimapOrDefault(\n            Enum<?> configKey,\n            Function<String, K> keyParser,\n            Function<String, V> valueParser,\n            ImmutableSetMultimap<K, V> defaultValue)", "full_signature": "@Deprecated public ImmutableSetMultimap<K, V> getSetMultimapOrDefault(\n            Enum<?> configKey,\n            Function<String, K> keyParser,\n            Function<String, V> valueParser,\n            ImmutableSetMultimap<K, V> defaultValue)", "class_method_signature": "Config.getSetMultimapOrDefault(\n            Enum<?> configKey,\n            Function<String, K> keyParser,\n            Function<String, V> valueParser,\n            ImmutableSetMultimap<K, V> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getSetMultimap", "parameters": "(\n            Enum<?> configKey,\n            Function<String, K> keyParser,\n            Function<String, V> valueParser)", "modifiers": "@Deprecated public", "return": "ImmutableSetMultimap<K, V>", "signature": "ImmutableSetMultimap<K, V> getSetMultimap(\n            Enum<?> configKey,\n            Function<String, K> keyParser,\n            Function<String, V> valueParser)", "full_signature": "@Deprecated public ImmutableSetMultimap<K, V> getSetMultimap(\n            Enum<?> configKey,\n            Function<String, K> keyParser,\n            Function<String, V> valueParser)", "class_method_signature": "Config.getSetMultimap(\n            Enum<?> configKey,\n            Function<String, K> keyParser,\n            Function<String, V> valueParser)", "testcase": false, "constructor": false}, {"identifier": "getEnum", "parameters": "(Enum<?> key, Class<T> enumClass)", "modifiers": "@Deprecated public", "return": "T", "signature": "T getEnum(Enum<?> key, Class<T> enumClass)", "full_signature": "@Deprecated public T getEnum(Enum<?> key, Class<T> enumClass)", "class_method_signature": "Config.getEnum(Enum<?> key, Class<T> enumClass)", "testcase": false, "constructor": false}, {"identifier": "getEnumOrDefault", "parameters": "(Enum<?> key, Class<T> enumClass, T defaultValue)", "modifiers": "@Deprecated public", "return": "T", "signature": "T getEnumOrDefault(Enum<?> key, Class<T> enumClass, T defaultValue)", "full_signature": "@Deprecated public T getEnumOrDefault(Enum<?> key, Class<T> enumClass, T defaultValue)", "class_method_signature": "Config.getEnumOrDefault(Enum<?> key, Class<T> enumClass, T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getEnumIfPresent", "parameters": "(Enum<?> key, Class<T> enumClass)", "modifiers": "@Deprecated public", "return": "Optional<T>", "signature": "Optional<T> getEnumIfPresent(Enum<?> key, Class<T> enumClass)", "full_signature": "@Deprecated public Optional<T> getEnumIfPresent(Enum<?> key, Class<T> enumClass)", "class_method_signature": "Config.getEnumIfPresent(Enum<?> key, Class<T> enumClass)", "testcase": false, "constructor": false}, {"identifier": "getQualifiedKeyName", "parameters": "(E key)", "modifiers": "public", "return": "String", "signature": "String getQualifiedKeyName(E key)", "full_signature": "public String getQualifiedKeyName(E key)", "class_method_signature": "Config.getQualifiedKeyName(E key)", "testcase": false, "constructor": false}, {"identifier": "getKeyValueStringMap", "parameters": "()", "modifiers": "@Deprecated public", "return": "ImmutableMap<String, String>", "signature": "ImmutableMap<String, String> getKeyValueStringMap()", "full_signature": "@Deprecated public ImmutableMap<String, String> getKeyValueStringMap()", "class_method_signature": "Config.getKeyValueStringMap()", "testcase": false, "constructor": false}, {"identifier": "getKeyValueStringMapWithoutSecrets", "parameters": "()", "modifiers": "public", "return": "ImmutableMap<String, String>", "signature": "ImmutableMap<String, String> getKeyValueStringMapWithoutSecrets()", "full_signature": "public ImmutableMap<String, String> getKeyValueStringMapWithoutSecrets()", "class_method_signature": "Config.getKeyValueStringMapWithoutSecrets()", "testcase": false, "constructor": false}, {"identifier": "getKeyValueStringMapWithPrefixesWithoutSecrets", "parameters": "()", "modifiers": "public", "return": "ImmutableMap<String, String>", "signature": "ImmutableMap<String, String> getKeyValueStringMapWithPrefixesWithoutSecrets()", "full_signature": "public ImmutableMap<String, String> getKeyValueStringMapWithPrefixesWithoutSecrets()", "class_method_signature": "Config.getKeyValueStringMapWithPrefixesWithoutSecrets()", "testcase": false, "constructor": false}, {"identifier": "getUnqualifiedKeyValueStringMap", "parameters": "(Class<T> key)", "modifiers": "@Deprecated public", "return": "ImmutableMap<String, String>", "signature": "ImmutableMap<String, String> getUnqualifiedKeyValueStringMap(Class<T> key)", "full_signature": "@Deprecated public ImmutableMap<String, String> getUnqualifiedKeyValueStringMap(Class<T> key)", "class_method_signature": "Config.getUnqualifiedKeyValueStringMap(Class<T> key)", "testcase": false, "constructor": false}, {"identifier": "getUnqualifiedKeyValueStringMapWithoutSecrets", "parameters": "(Class<T> key)", "modifiers": "public", "return": "ImmutableMap<String, String>", "signature": "ImmutableMap<String, String> getUnqualifiedKeyValueStringMapWithoutSecrets(Class<T> key)", "full_signature": "public ImmutableMap<String, String> getUnqualifiedKeyValueStringMapWithoutSecrets(Class<T> key)", "class_method_signature": "Config.getUnqualifiedKeyValueStringMapWithoutSecrets(Class<T> key)", "testcase": false, "constructor": false}, {"identifier": "consumeConfigValues", "parameters": "(ToStringHelper toStringHelper, boolean includePrefixes)", "modifiers": "private", "return": "void", "signature": "void consumeConfigValues(ToStringHelper toStringHelper, boolean includePrefixes)", "full_signature": "private void consumeConfigValues(ToStringHelper toStringHelper, boolean includePrefixes)", "class_method_signature": "Config.consumeConfigValues(ToStringHelper toStringHelper, boolean includePrefixes)", "testcase": false, "constructor": false}, {"identifier": "consumeConfigValue", "parameters": "(ToStringHelper toStringHelper, boolean includePrefixes, E key, ConfigValue value)", "modifiers": "private", "return": "void", "signature": "void consumeConfigValue(ToStringHelper toStringHelper, boolean includePrefixes, E key, ConfigValue value)", "full_signature": "private void consumeConfigValue(ToStringHelper toStringHelper, boolean includePrefixes, E key, ConfigValue value)", "class_method_signature": "Config.consumeConfigValue(ToStringHelper toStringHelper, boolean includePrefixes, E key, ConfigValue value)", "testcase": false, "constructor": false}, {"identifier": "isSecretConfig", "parameters": "(E key)", "modifiers": "private", "return": "boolean", "signature": "boolean isSecretConfig(E key)", "full_signature": "private boolean isSecretConfig(E key)", "class_method_signature": "Config.isSecretConfig(E key)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Config<?> o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(Config<?> o)", "full_signature": "@Override public int compareTo(Config<?> o)", "class_method_signature": "Config.compareTo(Config<?> o)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Config.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Config.hashCode()", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(Config other)", "modifiers": "@SuppressWarnings(\"unchecked\")", "return": "Config<E>", "signature": "Config<E> merge(Config other)", "full_signature": "@SuppressWarnings(\"unchecked\") Config<E> merge(Config other)", "class_method_signature": "Config.merge(Config other)", "testcase": false, "constructor": false}, {"identifier": "setUnits", "parameters": "(TimeUnit timeUnit, LengthUnit lengthUnit)", "modifiers": "", "return": "Config<E>", "signature": "Config<E> setUnits(TimeUnit timeUnit, LengthUnit lengthUnit)", "full_signature": " Config<E> setUnits(TimeUnit timeUnit, LengthUnit lengthUnit)", "class_method_signature": "Config.setUnits(TimeUnit timeUnit, LengthUnit lengthUnit)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Config.toString()", "testcase": false, "constructor": false}, {"identifier": "getStringValues", "parameters": "(Joiner joiner)", "modifiers": "private", "return": "String", "signature": "String getStringValues(Joiner joiner)", "full_signature": "private String getStringValues(Joiner joiner)", "class_method_signature": "Config.getStringValues(Joiner joiner)", "testcase": false, "constructor": false}, {"identifier": "getOrNone", "parameters": "(Enum<?> key)", "modifiers": "private", "return": "Optional<String>", "signature": "Optional<String> getOrNone(Enum<?> key)", "full_signature": "private Optional<String> getOrNone(Enum<?> key)", "class_method_signature": "Config.getOrNone(Enum<?> key)", "testcase": false, "constructor": false}, {"identifier": "map", "parameters": "(Function<ConfigValue, ConfigValue> mutator)", "modifiers": "private", "return": "Config<E>", "signature": "Config<E> map(Function<ConfigValue, ConfigValue> mutator)", "full_signature": "private Config<E> map(Function<ConfigValue, ConfigValue> mutator)", "class_method_signature": "Config.map(Function<ConfigValue, ConfigValue> mutator)", "testcase": false, "constructor": false}], "file": "OcavaCore/src/main/java/com/ocadotechnology/config/Config.java"}, "focal_method": {"identifier": "isValueDefined", "parameters": "(Enum<?> key)", "modifiers": "public", "return": "boolean", "body": "public boolean isValueDefined(Enum<?> key) {\n        Optional<String> value = getOrNone(key);\n\n        return value.map(s -> !s.trim().isEmpty()).orElseThrow(() -> new ConfigKeyNotFoundException(key));\n    }", "signature": "boolean isValueDefined(Enum<?> key)", "full_signature": "public boolean isValueDefined(Enum<?> key)", "class_method_signature": "Config.isValueDefined(Enum<?> key)", "testcase": false, "constructor": false, "invocations": ["getOrNone", "orElseThrow", "map", "isEmpty", "trim"]}, "repository": {"repo_id": 99997703, "url": "https://github.com/ocadotechnology/Ocava", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 16, "size": 1137, "license": "licensed"}}