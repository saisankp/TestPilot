{"test_class": {"identifier": "TestPhysicalSourceConfig", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String _configSource = \"{\\n\" +\n\t\t\t\"    \\\"name\\\" : \\\"multBufferTest\\\",\\n\" +\n\t\t\t\"    \\\"id\\\" : 100,\\n\" +\n\t\t\t\"    \\\"uri\\\" : \\\"doesnot matter\\\",\\n\" +\n\t\t\t\"        \\\"slowSourceQueryThreshold\\\" : 2000,\\n\" +\n\t\t\t\"        \\\"sources\\\" :\\n\" +\n\t\t\t\"        [\\n\" +\n\t\t\t\"                {\\\"id\\\" : 2, \\n\" +\n\t\t\t\"                 \\\"name\\\" : \\\"com.linkedin.events.member2.profile.MemberProfile\\\",\\n\" +\n\t\t\t\"                 \\\"uri\\\": \\\"member2.member_profile\\\", \\n\" +\n\t\t\t\"                 \\\"partitionFunction\\\" : \\\"constant:1\\\"\\n\" +\n\t\t\t\"                },\\n\" +\n\t\t\t\"                {\\\"id\\\" : 3, \\n\" +\n\t\t\t\"                 \\\"name\\\" : \\\"com.linkedin.events.member2.account.MemberAccount\\\",\\n\" +\n\t\t\t\"                 \\\"uri\\\" : \\\"member2.member_account\\\", \\n\" +\n\t\t\t\"                 \\\"partitionFunction\\\" : \\\"constant:1\\\"\\n\" +\n\t\t\t\"                },\\n\" +\n\t\t\t\"                {\\\"id\\\" : 4, \\n\" +\n\t\t\t\"                 \\\"name\\\" : \\\"com.linkedin.events.member2.businessattr.MemberBusinessAttr\\\",\\n\" +\n\t\t\t\"                 \\\"uri\\\" : \\\"member2.member_business_attr\\\", \\n\" +\n\t\t\t\"                 \\\"partitionFunction\\\" : \\\"constant:1\\\"\\n\" +\n\t\t\t\"                },\\n\" +\n\t\t\t\"                {\\\"id\\\" : 5, \\n\" +\n\t\t\t\"                 \\\"name\\\" : \\\"com.linkedin.events.member2.setting.MemberSetting\\\",\\n\" +\n\t\t\t\"                 \\\"uri\\\" : \\\"member2.member_setting\\\", \\n\" +\n\t\t\t\"                 \\\"partitionFunction\\\" : \\\"constant:1\\\"\\n\" +\n\t\t\t\"                }\\n\" +\n\t\t\t\"        ]\\n\" +\n\t\t\t\"}\";", "modifier": "private final", "type": "String", "declarator": "_configSource = \"{\\n\" +\n\t\t\t\"    \\\"name\\\" : \\\"multBufferTest\\\",\\n\" +\n\t\t\t\"    \\\"id\\\" : 100,\\n\" +\n\t\t\t\"    \\\"uri\\\" : \\\"doesnot matter\\\",\\n\" +\n\t\t\t\"        \\\"slowSourceQueryThreshold\\\" : 2000,\\n\" +\n\t\t\t\"        \\\"sources\\\" :\\n\" +\n\t\t\t\"        [\\n\" +\n\t\t\t\"                {\\\"id\\\" : 2, \\n\" +\n\t\t\t\"                 \\\"name\\\" : \\\"com.linkedin.events.member2.profile.MemberProfile\\\",\\n\" +\n\t\t\t\"                 \\\"uri\\\": \\\"member2.member_profile\\\", \\n\" +\n\t\t\t\"                 \\\"partitionFunction\\\" : \\\"constant:1\\\"\\n\" +\n\t\t\t\"                },\\n\" +\n\t\t\t\"                {\\\"id\\\" : 3, \\n\" +\n\t\t\t\"                 \\\"name\\\" : \\\"com.linkedin.events.member2.account.MemberAccount\\\",\\n\" +\n\t\t\t\"                 \\\"uri\\\" : \\\"member2.member_account\\\", \\n\" +\n\t\t\t\"                 \\\"partitionFunction\\\" : \\\"constant:1\\\"\\n\" +\n\t\t\t\"                },\\n\" +\n\t\t\t\"                {\\\"id\\\" : 4, \\n\" +\n\t\t\t\"                 \\\"name\\\" : \\\"com.linkedin.events.member2.businessattr.MemberBusinessAttr\\\",\\n\" +\n\t\t\t\"                 \\\"uri\\\" : \\\"member2.member_business_attr\\\", \\n\" +\n\t\t\t\"                 \\\"partitionFunction\\\" : \\\"constant:1\\\"\\n\" +\n\t\t\t\"                },\\n\" +\n\t\t\t\"                {\\\"id\\\" : 5, \\n\" +\n\t\t\t\"                 \\\"name\\\" : \\\"com.linkedin.events.member2.setting.MemberSetting\\\",\\n\" +\n\t\t\t\"                 \\\"uri\\\" : \\\"member2.member_setting\\\", \\n\" +\n\t\t\t\"                 \\\"partitionFunction\\\" : \\\"constant:1\\\"\\n\" +\n\t\t\t\"                }\\n\" +\n\t\t\t\"        ]\\n\" +\n\t\t\t\"}\"", "var_name": "_configSource"}], "file": "databus-core/databus-core-impl/src/test/java/com/linkedin/databus2/relay/config/TestPhysicalSourceConfig.java"}, "test_case": {"identifier": "testPhysicalSourceConfig", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testPhysicalSourceConfig() throws IOException {\n\t\tObjectMapper mapper = new ObjectMapper();\n\t\tInputStreamReader isr = new InputStreamReader(IOUtils.toInputStream(_configSource));\n\n\t\t//PhysicalSourceConfig physicalSourceConfig = mapper.readValue(sourcesJson, PhysicalSourceConfig.class);\n\t\tPhysicalSourceConfig physicalSourceConfig = mapper.readValue(isr, PhysicalSourceConfig.class);\n\t\tPhysicalSourceStaticConfig pStatic=null;\n\t\ttry {\n\t\t  physicalSourceConfig.checkForNulls();\n\t\t  pStatic = physicalSourceConfig.build();\n\t\t} catch (InvalidConfigException e) {\n\t\t  fail(\"PhysicalSourceConfig.checkForNulls failed.\", e);\n\t\t}\n\n\t\t// also assert basic stuff\n\t\tassertNotNull(\"Uri is null.\", pStatic.getUri());\n\t\tassertNotNull(\"Name is null.\", pStatic.getName());\n\t\tassertEquals(100, pStatic.getId(),\"physical source id mismatch:\");\n\n\t\tList<LogicalSourceConfig>lSources = physicalSourceConfig.getSources();\n\t\tassertEquals(4, lSources.size(), \"number of logical sources\");\n\t\tLogicalSourceStaticConfig lSource=null;\n\t\ttry\n\t\t{\n\t\t  lSource = lSources.get(0).build();\n\t\t}\n\t\tcatch (InvalidConfigException e)\n\t\t{\n\t\t  fail(\"get LogicalSourceStaticConfig failed\", e);\n\t\t}\n\t\tassertEquals(2, lSource.getId(), \"logical source id\");\n\t}", "signature": "void testPhysicalSourceConfig()", "full_signature": "@Test public void testPhysicalSourceConfig()", "class_method_signature": "TestPhysicalSourceConfig.testPhysicalSourceConfig()", "testcase": true, "constructor": false, "invocations": ["toInputStream", "readValue", "checkForNulls", "build", "fail", "assertNotNull", "getUri", "assertNotNull", "getName", "assertEquals", "getId", "getSources", "assertEquals", "size", "build", "get", "fail", "assertEquals", "getId"]}, "focal_class": {"identifier": "PhysicalSourceConfig", "superclass": "", "interfaces": "implements ConfigBuilder<PhysicalSourceStaticConfig>", "fields": [{"original_string": "public static final long DEFAULT_DBPOLL_INTERVAL_MILLIS = 500;", "modifier": "public static final", "type": "long", "declarator": "DEFAULT_DBPOLL_INTERVAL_MILLIS = 500", "var_name": "DEFAULT_DBPOLL_INTERVAL_MILLIS"}, {"original_string": "public static final long MAX_DBPOLL_INTERVAL_MILLIS = 5 * 60 * 1000;", "modifier": "public static final", "type": "long", "declarator": "MAX_DBPOLL_INTERVAL_MILLIS = 5 * 60 * 1000", "var_name": "MAX_DBPOLL_INTERVAL_MILLIS"}, {"original_string": "public static final String DEFAULT_PHYSICAL_SOURCE_URI = \"default_physical_source_uri\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_PHYSICAL_SOURCE_URI = \"default_physical_source_uri\"", "var_name": "DEFAULT_PHYSICAL_SOURCE_URI"}, {"original_string": "public static final Integer DEFAULT_PHYSICAL_PARTITION = 0;", "modifier": "public static final", "type": "Integer", "declarator": "DEFAULT_PHYSICAL_PARTITION = 0", "var_name": "DEFAULT_PHYSICAL_PARTITION"}, {"original_string": "public static final String DEFAULT_PHYSICAL_PARTITION_NAME = \"default_partition_name\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_PHYSICAL_PARTITION_NAME = \"default_partition_name\"", "var_name": "DEFAULT_PHYSICAL_PARTITION_NAME"}, {"original_string": "public static final String DEFAULT_PHYSICAL_SOURCE_NAME = \"default_physical_config_name\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_PHYSICAL_SOURCE_NAME = \"default_physical_config_name\"", "var_name": "DEFAULT_PHYSICAL_SOURCE_NAME"}, {"original_string": "public static final String PHYSICAL_SOURCE_BASE_DIR = \"databus.relay.base.string\";", "modifier": "public static final", "type": "String", "declarator": "PHYSICAL_SOURCE_BASE_DIR = \"databus.relay.base.string\"", "var_name": "PHYSICAL_SOURCE_BASE_DIR"}, {"original_string": "public static final String PHYSICAL_SOURCE_BASE_DIR_DEFAULT = \".\";", "modifier": "public static final", "type": "String", "declarator": "PHYSICAL_SOURCE_BASE_DIR_DEFAULT = \".\"", "var_name": "PHYSICAL_SOURCE_BASE_DIR_DEFAULT"}, {"original_string": "public static final String DEFAULT_CHUNKING_TYPE = ChunkingType.NO_CHUNKING.toString();", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_CHUNKING_TYPE = ChunkingType.NO_CHUNKING.toString()", "var_name": "DEFAULT_CHUNKING_TYPE"}, {"original_string": "public static final long DEFAULT_SCN_CHUNK_SIZE = 20000;", "modifier": "public static final", "type": "long", "declarator": "DEFAULT_SCN_CHUNK_SIZE = 20000", "var_name": "DEFAULT_SCN_CHUNK_SIZE"}, {"original_string": "public static final long DEFAULT_TXN_CHUNK_SIZE = 20000;", "modifier": "public static final", "type": "long", "declarator": "DEFAULT_TXN_CHUNK_SIZE = 20000", "var_name": "DEFAULT_TXN_CHUNK_SIZE"}, {"original_string": "public static final long DEFAULT_SCN_CHUNKED_THRESHOLD = 20000;", "modifier": "public static final", "type": "long", "declarator": "DEFAULT_SCN_CHUNKED_THRESHOLD = 20000", "var_name": "DEFAULT_SCN_CHUNKED_THRESHOLD"}, {"original_string": "public static final long DEFAULT_MAX_SCN_DELAY_MS = 300000;", "modifier": "public static final", "type": "long", "declarator": "DEFAULT_MAX_SCN_DELAY_MS = 300000", "var_name": "DEFAULT_MAX_SCN_DELAY_MS"}, {"original_string": "public static final int DEFAULT_LARGEST_EVENT_SIZE = 1 * 1024*1024;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_LARGEST_EVENT_SIZE = 1 * 1024*1024", "var_name": "DEFAULT_LARGEST_EVENT_SIZE"}, {"original_string": "public static final long DEFAULT_LARGEST_WINDOW_SIZE = 5*1024*1024;", "modifier": "public static final", "type": "long", "declarator": "DEFAULT_LARGEST_WINDOW_SIZE = 5*1024*1024", "var_name": "DEFAULT_LARGEST_WINDOW_SIZE"}, {"original_string": "private String _name;", "modifier": "private", "type": "String", "declarator": "_name", "var_name": "_name"}, {"original_string": "private int _id;", "modifier": "private", "type": "int", "declarator": "_id", "var_name": "_id"}, {"original_string": "private String _uri;", "modifier": "private", "type": "String", "declarator": "_uri", "var_name": "_uri"}, {"original_string": "private String _resourceKey;", "modifier": "private", "type": "String", "declarator": "_resourceKey", "var_name": "_resourceKey"}, {"original_string": "private String _role;", "modifier": "private", "type": "String", "declarator": "_role", "var_name": "_role"}, {"original_string": "private long _slowSourceQueryThreshold;", "modifier": "private", "type": "long", "declarator": "_slowSourceQueryThreshold", "var_name": "_slowSourceQueryThreshold"}, {"original_string": "private long _restartScnOffset;", "modifier": "private", "type": "long", "declarator": "_restartScnOffset", "var_name": "_restartScnOffset"}, {"original_string": "private List<LogicalSourceConfig> _sources;", "modifier": "private", "type": "List<LogicalSourceConfig>", "declarator": "_sources", "var_name": "_sources"}, {"original_string": "private BackoffTimerStaticConfigBuilder _retries;", "modifier": "private", "type": "BackoffTimerStaticConfigBuilder", "declarator": "_retries", "var_name": "_retries"}, {"original_string": "private String _chunkingType;", "modifier": "private", "type": "String", "declarator": "_chunkingType", "var_name": "_chunkingType"}, {"original_string": "private long _txnsPerChunk;", "modifier": "private", "type": "long", "declarator": "_txnsPerChunk", "var_name": "_txnsPerChunk"}, {"original_string": "private long _scnChunkSize;", "modifier": "private", "type": "long", "declarator": "_scnChunkSize", "var_name": "_scnChunkSize"}, {"original_string": "private long _chunkedScnThreshold;", "modifier": "private", "type": "long", "declarator": "_chunkedScnThreshold", "var_name": "_chunkedScnThreshold"}, {"original_string": "private long _maxScnDelayMs;", "modifier": "private", "type": "long", "declarator": "_maxScnDelayMs", "var_name": "_maxScnDelayMs"}, {"original_string": "private  DbusEventBuffer.Config _dbusEventBuffer;", "modifier": "private", "type": "DbusEventBuffer.Config", "declarator": "_dbusEventBuffer", "var_name": "_dbusEventBuffer"}, {"original_string": "private long _eventRatePerSec;", "modifier": "private", "type": "long", "declarator": "_eventRatePerSec", "var_name": "_eventRatePerSec"}, {"original_string": "private long _maxThrottleDurationInSecs;", "modifier": "private", "type": "long", "declarator": "_maxThrottleDurationInSecs", "var_name": "_maxThrottleDurationInSecs"}, {"original_string": "private int _largestEventSizeInBytes;", "modifier": "private", "type": "int", "declarator": "_largestEventSizeInBytes", "var_name": "_largestEventSizeInBytes"}, {"original_string": "private long _largestWindowSizeInBytes;", "modifier": "private", "type": "long", "declarator": "_largestWindowSizeInBytes", "var_name": "_largestWindowSizeInBytes"}, {"original_string": "private boolean _errorOnMissingFields;", "modifier": "private", "type": "boolean", "declarator": "_errorOnMissingFields", "var_name": "_errorOnMissingFields"}, {"original_string": "private String _xmlVersion;", "modifier": "private", "type": "String", "declarator": "_xmlVersion", "var_name": "_xmlVersion"}, {"original_string": "private String _xmlEncoding;", "modifier": "private", "type": "String", "declarator": "_xmlEncoding", "var_name": "_xmlEncoding"}, {"original_string": "private ReplicationBitSetterConfig _replBitSetter;", "modifier": "private", "type": "ReplicationBitSetterConfig", "declarator": "_replBitSetter", "var_name": "_replBitSetter"}], "methods": [{"identifier": "PhysicalSourceConfig", "parameters": "()", "modifiers": "public", "return": "", "signature": " PhysicalSourceConfig()", "full_signature": "public  PhysicalSourceConfig()", "class_method_signature": "PhysicalSourceConfig.PhysicalSourceConfig()", "testcase": false, "constructor": true}, {"identifier": "PhysicalSourceConfig", "parameters": "(String pSourceName, String pUri, int pPartionId)", "modifiers": "public", "return": "", "signature": " PhysicalSourceConfig(String pSourceName, String pUri, int pPartionId)", "full_signature": "public  PhysicalSourceConfig(String pSourceName, String pUri, int pPartionId)", "class_method_signature": "PhysicalSourceConfig.PhysicalSourceConfig(String pSourceName, String pUri, int pPartionId)", "testcase": false, "constructor": true}, {"identifier": "PhysicalSourceConfig", "parameters": "(Collection<IdNamePair> srcIds)", "modifiers": "public", "return": "", "signature": " PhysicalSourceConfig(Collection<IdNamePair> srcIds)", "full_signature": "public  PhysicalSourceConfig(Collection<IdNamePair> srcIds)", "class_method_signature": "PhysicalSourceConfig.PhysicalSourceConfig(Collection<IdNamePair> srcIds)", "testcase": false, "constructor": true}, {"identifier": "createFromLogicalSources", "parameters": "(Collection<LogicalSource> srcIds)", "modifiers": "public static", "return": "PhysicalSourceConfig", "signature": "PhysicalSourceConfig createFromLogicalSources(Collection<LogicalSource> srcIds)", "full_signature": "public static PhysicalSourceConfig createFromLogicalSources(Collection<LogicalSource> srcIds)", "class_method_signature": "PhysicalSourceConfig.createFromLogicalSources(Collection<LogicalSource> srcIds)", "testcase": false, "constructor": false}, {"identifier": "checkForNulls", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void checkForNulls()", "full_signature": "public void checkForNulls()", "class_method_signature": "PhysicalSourceConfig.checkForNulls()", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUri()", "full_signature": "public String getUri()", "class_method_signature": "PhysicalSourceConfig.getUri()", "testcase": false, "constructor": false}, {"identifier": "setUri", "parameters": "(String uri)", "modifiers": "public", "return": "void", "signature": "void setUri(String uri)", "full_signature": "public void setUri(String uri)", "class_method_signature": "PhysicalSourceConfig.setUri(String uri)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getId()", "full_signature": "public int getId()", "class_method_signature": "PhysicalSourceConfig.getId()", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(int id)", "modifiers": "public", "return": "void", "signature": "void setId(int id)", "full_signature": "public void setId(int id)", "class_method_signature": "PhysicalSourceConfig.setId(int id)", "testcase": false, "constructor": false}, {"identifier": "setRole", "parameters": "(String role)", "modifiers": "public", "return": "void", "signature": "void setRole(String role)", "full_signature": "public void setRole(String role)", "class_method_signature": "PhysicalSourceConfig.setRole(String role)", "testcase": false, "constructor": false}, {"identifier": "getRole", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRole()", "full_signature": "public String getRole()", "class_method_signature": "PhysicalSourceConfig.getRole()", "testcase": false, "constructor": false}, {"identifier": "setResourceKey", "parameters": "(String rk)", "modifiers": "public", "return": "void", "signature": "void setResourceKey(String rk)", "full_signature": "public void setResourceKey(String rk)", "class_method_signature": "PhysicalSourceConfig.setResourceKey(String rk)", "testcase": false, "constructor": false}, {"identifier": "getResourceKey", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getResourceKey()", "full_signature": "public String getResourceKey()", "class_method_signature": "PhysicalSourceConfig.getResourceKey()", "testcase": false, "constructor": false}, {"identifier": "addOrGetSource", "parameters": "(int index)", "modifiers": "private", "return": "LogicalSourceConfig", "signature": "LogicalSourceConfig addOrGetSource(int index)", "full_signature": "private LogicalSourceConfig addOrGetSource(int index)", "class_method_signature": "PhysicalSourceConfig.addOrGetSource(int index)", "testcase": false, "constructor": false}, {"identifier": "getSource", "parameters": "(int index)", "modifiers": "public", "return": "LogicalSourceConfig", "signature": "LogicalSourceConfig getSource(int index)", "full_signature": "public LogicalSourceConfig getSource(int index)", "class_method_signature": "PhysicalSourceConfig.getSource(int index)", "testcase": false, "constructor": false}, {"identifier": "setSource", "parameters": "(int index, LogicalSourceConfig source)", "modifiers": "public", "return": "void", "signature": "void setSource(int index, LogicalSourceConfig source)", "full_signature": "public void setSource(int index, LogicalSourceConfig source)", "class_method_signature": "PhysicalSourceConfig.setSource(int index, LogicalSourceConfig source)", "testcase": false, "constructor": false}, {"identifier": "addSource", "parameters": "(LogicalSourceConfig source)", "modifiers": "public", "return": "void", "signature": "void addSource(LogicalSourceConfig source)", "full_signature": "public void addSource(LogicalSourceConfig source)", "class_method_signature": "PhysicalSourceConfig.addSource(LogicalSourceConfig source)", "testcase": false, "constructor": false}, {"identifier": "getSources", "parameters": "()", "modifiers": "public", "return": "List<LogicalSourceConfig>", "signature": "List<LogicalSourceConfig> getSources()", "full_signature": "public List<LogicalSourceConfig> getSources()", "class_method_signature": "PhysicalSourceConfig.getSources()", "testcase": false, "constructor": false}, {"identifier": "setSources", "parameters": "(List<LogicalSourceConfig> newSources)", "modifiers": "public", "return": "void", "signature": "void setSources(List<LogicalSourceConfig> newSources)", "full_signature": "public void setSources(List<LogicalSourceConfig> newSources)", "class_method_signature": "PhysicalSourceConfig.setSources(List<LogicalSourceConfig> newSources)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "PhysicalSourceConfig.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void setName(String name)", "full_signature": "public void setName(String name)", "class_method_signature": "PhysicalSourceConfig.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "getSlowSourceQueryThreshold", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getSlowSourceQueryThreshold()", "full_signature": "public long getSlowSourceQueryThreshold()", "class_method_signature": "PhysicalSourceConfig.getSlowSourceQueryThreshold()", "testcase": false, "constructor": false}, {"identifier": "setSlowSourceQueryThreshold", "parameters": "(long slowSourceQueryThreshold)", "modifiers": "public", "return": "void", "signature": "void setSlowSourceQueryThreshold(long slowSourceQueryThreshold)", "full_signature": "public void setSlowSourceQueryThreshold(long slowSourceQueryThreshold)", "class_method_signature": "PhysicalSourceConfig.setSlowSourceQueryThreshold(long slowSourceQueryThreshold)", "testcase": false, "constructor": false}, {"identifier": "getRestartScnOffset", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getRestartScnOffset()", "full_signature": "public long getRestartScnOffset()", "class_method_signature": "PhysicalSourceConfig.getRestartScnOffset()", "testcase": false, "constructor": false}, {"identifier": "setRestartScnOffset", "parameters": "(long r)", "modifiers": "public", "return": "void", "signature": "void setRestartScnOffset(long r)", "full_signature": "public void setRestartScnOffset(long r)", "class_method_signature": "PhysicalSourceConfig.setRestartScnOffset(long r)", "testcase": false, "constructor": false}, {"identifier": "getLargestEventSizeInBytes", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLargestEventSizeInBytes()", "full_signature": "public int getLargestEventSizeInBytes()", "class_method_signature": "PhysicalSourceConfig.getLargestEventSizeInBytes()", "testcase": false, "constructor": false}, {"identifier": "setLargestEventSizeInBytes", "parameters": "(int largestEventSizeInBytes)", "modifiers": "public", "return": "void", "signature": "void setLargestEventSizeInBytes(int largestEventSizeInBytes)", "full_signature": "public void setLargestEventSizeInBytes(int largestEventSizeInBytes)", "class_method_signature": "PhysicalSourceConfig.setLargestEventSizeInBytes(int largestEventSizeInBytes)", "testcase": false, "constructor": false}, {"identifier": "getLargestWindowSizeInBytes", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLargestWindowSizeInBytes()", "full_signature": "public long getLargestWindowSizeInBytes()", "class_method_signature": "PhysicalSourceConfig.getLargestWindowSizeInBytes()", "testcase": false, "constructor": false}, {"identifier": "setLargestWindowSizeInBytes", "parameters": "(long largestWindowSizeInBytes)", "modifiers": "public", "return": "void", "signature": "void setLargestWindowSizeInBytes(long largestWindowSizeInBytes)", "full_signature": "public void setLargestWindowSizeInBytes(long largestWindowSizeInBytes)", "class_method_signature": "PhysicalSourceConfig.setLargestWindowSizeInBytes(long largestWindowSizeInBytes)", "testcase": false, "constructor": false}, {"identifier": "getErrorOnMissingFields", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getErrorOnMissingFields()", "full_signature": "public boolean getErrorOnMissingFields()", "class_method_signature": "PhysicalSourceConfig.getErrorOnMissingFields()", "testcase": false, "constructor": false}, {"identifier": "setErrorOnMissingFields", "parameters": "(boolean errorOnMissingFields)", "modifiers": "public", "return": "void", "signature": "void setErrorOnMissingFields(boolean errorOnMissingFields)", "full_signature": "public void setErrorOnMissingFields(boolean errorOnMissingFields)", "class_method_signature": "PhysicalSourceConfig.setErrorOnMissingFields(boolean errorOnMissingFields)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PhysicalSourceConfig.toString()", "testcase": false, "constructor": false}, {"identifier": "fromString", "parameters": "(String str)", "modifiers": "public static", "return": "PhysicalSourceConfig", "signature": "PhysicalSourceConfig fromString(String str)", "full_signature": "public static PhysicalSourceConfig fromString(String str)", "class_method_signature": "PhysicalSourceConfig.fromString(String str)", "testcase": false, "constructor": false}, {"identifier": "fromFile", "parameters": "(File f)", "modifiers": "public static", "return": "PhysicalSourceConfig", "signature": "PhysicalSourceConfig fromFile(File f)", "full_signature": "public static PhysicalSourceConfig fromFile(File f)", "class_method_signature": "PhysicalSourceConfig.fromFile(File f)", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "()", "modifiers": "public", "return": "Map<String,Object>", "signature": "Map<String,Object> toMap()", "full_signature": "public Map<String,Object> toMap()", "class_method_signature": "PhysicalSourceConfig.toMap()", "testcase": false, "constructor": false}, {"identifier": "fromMap", "parameters": "(Map<String,Object> map)", "modifiers": "public static", "return": "PhysicalSourceConfig", "signature": "PhysicalSourceConfig fromMap(Map<String,Object> map)", "full_signature": "public static PhysicalSourceConfig fromMap(Map<String,Object> map)", "class_method_signature": "PhysicalSourceConfig.fromMap(Map<String,Object> map)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "@Override public", "return": "PhysicalSourceStaticConfig", "signature": "PhysicalSourceStaticConfig build()", "full_signature": "@Override public PhysicalSourceStaticConfig build()", "class_method_signature": "PhysicalSourceConfig.build()", "testcase": false, "constructor": false}, {"identifier": "getRetries", "parameters": "()", "modifiers": "public", "return": "BackoffTimerStaticConfigBuilder", "signature": "BackoffTimerStaticConfigBuilder getRetries()", "full_signature": "public BackoffTimerStaticConfigBuilder getRetries()", "class_method_signature": "PhysicalSourceConfig.getRetries()", "testcase": false, "constructor": false}, {"identifier": "setRetries", "parameters": "(BackoffTimerStaticConfigBuilder retries)", "modifiers": "public", "return": "void", "signature": "void setRetries(BackoffTimerStaticConfigBuilder retries)", "full_signature": "public void setRetries(BackoffTimerStaticConfigBuilder retries)", "class_method_signature": "PhysicalSourceConfig.setRetries(BackoffTimerStaticConfigBuilder retries)", "testcase": false, "constructor": false}, {"identifier": "getChunkingType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getChunkingType()", "full_signature": "public String getChunkingType()", "class_method_signature": "PhysicalSourceConfig.getChunkingType()", "testcase": false, "constructor": false}, {"identifier": "setChunkingType", "parameters": "(String chunkingType)", "modifiers": "public", "return": "void", "signature": "void setChunkingType(String chunkingType)", "full_signature": "public void setChunkingType(String chunkingType)", "class_method_signature": "PhysicalSourceConfig.setChunkingType(String chunkingType)", "testcase": false, "constructor": false}, {"identifier": "getTxnsPerChunk", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTxnsPerChunk()", "full_signature": "public long getTxnsPerChunk()", "class_method_signature": "PhysicalSourceConfig.getTxnsPerChunk()", "testcase": false, "constructor": false}, {"identifier": "setTxnsPerChunk", "parameters": "(long txnsPerChunk)", "modifiers": "public", "return": "void", "signature": "void setTxnsPerChunk(long txnsPerChunk)", "full_signature": "public void setTxnsPerChunk(long txnsPerChunk)", "class_method_signature": "PhysicalSourceConfig.setTxnsPerChunk(long txnsPerChunk)", "testcase": false, "constructor": false}, {"identifier": "getScnChunkSize", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getScnChunkSize()", "full_signature": "public long getScnChunkSize()", "class_method_signature": "PhysicalSourceConfig.getScnChunkSize()", "testcase": false, "constructor": false}, {"identifier": "setScnChunkSize", "parameters": "(long scnChunkSize)", "modifiers": "public", "return": "void", "signature": "void setScnChunkSize(long scnChunkSize)", "full_signature": "public void setScnChunkSize(long scnChunkSize)", "class_method_signature": "PhysicalSourceConfig.setScnChunkSize(long scnChunkSize)", "testcase": false, "constructor": false}, {"identifier": "getChunkedScnThreshold", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getChunkedScnThreshold()", "full_signature": "public long getChunkedScnThreshold()", "class_method_signature": "PhysicalSourceConfig.getChunkedScnThreshold()", "testcase": false, "constructor": false}, {"identifier": "setChunkedScnThreshold", "parameters": "(long chunkedScnThreshold)", "modifiers": "public", "return": "void", "signature": "void setChunkedScnThreshold(long chunkedScnThreshold)", "full_signature": "public void setChunkedScnThreshold(long chunkedScnThreshold)", "class_method_signature": "PhysicalSourceConfig.setChunkedScnThreshold(long chunkedScnThreshold)", "testcase": false, "constructor": false}, {"identifier": "getMaxScnDelayMs", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMaxScnDelayMs()", "full_signature": "public long getMaxScnDelayMs()", "class_method_signature": "PhysicalSourceConfig.getMaxScnDelayMs()", "testcase": false, "constructor": false}, {"identifier": "setMaxScnDelayMs", "parameters": "(long maxScnDelayMs)", "modifiers": "public", "return": "void", "signature": "void setMaxScnDelayMs(long maxScnDelayMs)", "full_signature": "public void setMaxScnDelayMs(long maxScnDelayMs)", "class_method_signature": "PhysicalSourceConfig.setMaxScnDelayMs(long maxScnDelayMs)", "testcase": false, "constructor": false}, {"identifier": "getEventRatePerSec", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getEventRatePerSec()", "full_signature": "public long getEventRatePerSec()", "class_method_signature": "PhysicalSourceConfig.getEventRatePerSec()", "testcase": false, "constructor": false}, {"identifier": "setEventRatePerSec", "parameters": "(long eventRatePerSec)", "modifiers": "public", "return": "void", "signature": "void setEventRatePerSec(long eventRatePerSec)", "full_signature": "public void setEventRatePerSec(long eventRatePerSec)", "class_method_signature": "PhysicalSourceConfig.setEventRatePerSec(long eventRatePerSec)", "testcase": false, "constructor": false}, {"identifier": "getMaxThrottleDurationInSecs", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMaxThrottleDurationInSecs()", "full_signature": "public long getMaxThrottleDurationInSecs()", "class_method_signature": "PhysicalSourceConfig.getMaxThrottleDurationInSecs()", "testcase": false, "constructor": false}, {"identifier": "setMaxThrottleDurationInSecs", "parameters": "(long maxThrottleDurationInSecs)", "modifiers": "public", "return": "void", "signature": "void setMaxThrottleDurationInSecs(long maxThrottleDurationInSecs)", "full_signature": "public void setMaxThrottleDurationInSecs(long maxThrottleDurationInSecs)", "class_method_signature": "PhysicalSourceConfig.setMaxThrottleDurationInSecs(long maxThrottleDurationInSecs)", "testcase": false, "constructor": false}, {"identifier": "getDbusEventBuffer", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "DbusEventBuffer.Config", "signature": "DbusEventBuffer.Config getDbusEventBuffer()", "full_signature": "@JsonIgnore public DbusEventBuffer.Config getDbusEventBuffer()", "class_method_signature": "PhysicalSourceConfig.getDbusEventBuffer()", "testcase": false, "constructor": false}, {"identifier": "setDbusEventBuffer", "parameters": "(DbusEventBuffer.Config _dbusEventBuffer)", "modifiers": "public", "return": "void", "signature": "void setDbusEventBuffer(DbusEventBuffer.Config _dbusEventBuffer)", "full_signature": "public void setDbusEventBuffer(DbusEventBuffer.Config _dbusEventBuffer)", "class_method_signature": "PhysicalSourceConfig.setDbusEventBuffer(DbusEventBuffer.Config _dbusEventBuffer)", "testcase": false, "constructor": false}, {"identifier": "isDbusEventBufferSet", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "boolean", "signature": "boolean isDbusEventBufferSet()", "full_signature": "@JsonIgnore public boolean isDbusEventBufferSet()", "class_method_signature": "PhysicalSourceConfig.isDbusEventBufferSet()", "testcase": false, "constructor": false}, {"identifier": "getXmlVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getXmlVersion()", "full_signature": "public String getXmlVersion()", "class_method_signature": "PhysicalSourceConfig.getXmlVersion()", "testcase": false, "constructor": false}, {"identifier": "setXmlVersion", "parameters": "(String xmlVersion)", "modifiers": "public", "return": "void", "signature": "void setXmlVersion(String xmlVersion)", "full_signature": "public void setXmlVersion(String xmlVersion)", "class_method_signature": "PhysicalSourceConfig.setXmlVersion(String xmlVersion)", "testcase": false, "constructor": false}, {"identifier": "getXmlEncoding", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getXmlEncoding()", "full_signature": "public String getXmlEncoding()", "class_method_signature": "PhysicalSourceConfig.getXmlEncoding()", "testcase": false, "constructor": false}, {"identifier": "setXmlEncoding", "parameters": "(String xmlEncoding)", "modifiers": "public", "return": "void", "signature": "void setXmlEncoding(String xmlEncoding)", "full_signature": "public void setXmlEncoding(String xmlEncoding)", "class_method_signature": "PhysicalSourceConfig.setXmlEncoding(String xmlEncoding)", "testcase": false, "constructor": false}, {"identifier": "getReplBitSetter", "parameters": "()", "modifiers": "public", "return": "ReplicationBitSetterConfig", "signature": "ReplicationBitSetterConfig getReplBitSetter()", "full_signature": "public ReplicationBitSetterConfig getReplBitSetter()", "class_method_signature": "PhysicalSourceConfig.getReplBitSetter()", "testcase": false, "constructor": false}, {"identifier": "setReplBitSetter", "parameters": "(ReplicationBitSetterConfig replBitSetter)", "modifiers": "public", "return": "void", "signature": "void setReplBitSetter(ReplicationBitSetterConfig replBitSetter)", "full_signature": "public void setReplBitSetter(ReplicationBitSetterConfig replBitSetter)", "class_method_signature": "PhysicalSourceConfig.setReplBitSetter(ReplicationBitSetterConfig replBitSetter)", "testcase": false, "constructor": false}], "file": "databus-core/databus-core-impl/src/main/java/com/linkedin/databus2/relay/config/PhysicalSourceConfig.java"}, "focal_method": {"identifier": "PhysicalSourceConfig", "parameters": "()", "modifiers": "public", "return": "", "body": "public PhysicalSourceConfig()\n  {\n    _id = 0;\n    _resourceKey = \"\";\n    _role = PhysicalSource.PHYSICAL_SOURCE_MASTER;\n    _sources = new ArrayList<LogicalSourceConfig>();\n    _restartScnOffset = 0;\n    _slowSourceQueryThreshold = 3000;\n    _retries = new BackoffTimerStaticConfigBuilder();\n    _retries.setInitSleep(DEFAULT_DBPOLL_INTERVAL_MILLIS);\n    _retries.setMaxRetryNum(-1);\n    _retries.setMaxSleep(MAX_DBPOLL_INTERVAL_MILLIS);\n    _retries.setSleepIncFactor(2.0);\n    _retries.setSleepIncDelta(0);\n    _chunkingType = DEFAULT_CHUNKING_TYPE;\n    _txnsPerChunk = DEFAULT_TXN_CHUNK_SIZE;\n    _scnChunkSize = DEFAULT_SCN_CHUNK_SIZE;\n    _chunkedScnThreshold = DEFAULT_SCN_CHUNKED_THRESHOLD;\n    _maxScnDelayMs = DEFAULT_MAX_SCN_DELAY_MS;\n    _largestEventSizeInBytes = DEFAULT_LARGEST_EVENT_SIZE;\n    _largestWindowSizeInBytes = DEFAULT_LARGEST_WINDOW_SIZE;\n    _eventRatePerSec=10;\n    _maxThrottleDurationInSecs = 0;\n    _errorOnMissingFields = true;\n    _dbusEventBuffer = null; //This buffer is per physical source, if not initialized in multi-tenant source config, the global eventbuffer config is used.\n    _xmlEncoding = \"ISO-8859-1\";\n    _replBitSetter = new ReplicationBitSetterConfig();\n    _xmlVersion = \"1.0\";\n  }", "signature": " PhysicalSourceConfig()", "full_signature": "public  PhysicalSourceConfig()", "class_method_signature": "PhysicalSourceConfig.PhysicalSourceConfig()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 7209229, "url": "https://github.com/linkedin/databus", "language": "Java", "is_fork": false, "fork_count": 653, "stargazer_count": 2899, "size": 51191, "license": "licensed"}}