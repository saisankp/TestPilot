{"test_class": {"identifier": "PlatformTest", "superclass": "", "interfaces": "", "fields": [], "file": "geoclient-jni/src/test/java/gov/nyc/doitt/gis/geoclient/jni/util/PlatformTest.java"}, "test_case": {"identifier": "testGetSharedLibraryFileName", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testGetSharedLibraryFileName() {\n        assertEquals(\"libwoof.so\",SUPPORTED_LINUX_PLATFORM.getSharedLibraryFileName(\"woof\"));\n        assertEquals(\"Meow.dll\",SUPPORTED_WINDOWS_PLATFORM.getSharedLibraryFileName(\"Meow\"));\n    }", "signature": "void testGetSharedLibraryFileName()", "full_signature": "@Test void testGetSharedLibraryFileName()", "class_method_signature": "PlatformTest.testGetSharedLibraryFileName()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getSharedLibraryFileName", "assertEquals", "getSharedLibraryFileName"]}, "focal_class": {"identifier": "Platform", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String ARCH_X64 = \"x64\";", "modifier": "public static final", "type": "String", "declarator": "ARCH_X64 = \"x64\"", "var_name": "ARCH_X64"}, {"original_string": "public static final String LINUX_OS_FAMILY = \"linux\";", "modifier": "public static final", "type": "String", "declarator": "LINUX_OS_FAMILY = \"linux\"", "var_name": "LINUX_OS_FAMILY"}, {"original_string": "public static final String LINUX_SHARED_LIB_PREFIX = \"lib\";", "modifier": "public static final", "type": "String", "declarator": "LINUX_SHARED_LIB_PREFIX = \"lib\"", "var_name": "LINUX_SHARED_LIB_PREFIX"}, {"original_string": "public static final String LINUX_SHARED_LIB_PATH_VAR = \"LD_LIBRARY_PATH\";", "modifier": "public static final", "type": "String", "declarator": "LINUX_SHARED_LIB_PATH_VAR = \"LD_LIBRARY_PATH\"", "var_name": "LINUX_SHARED_LIB_PATH_VAR"}, {"original_string": "public static final String LINUX_SHARED_LIB_FILE_EXTENSION = \"so\";", "modifier": "public static final", "type": "String", "declarator": "LINUX_SHARED_LIB_FILE_EXTENSION = \"so\"", "var_name": "LINUX_SHARED_LIB_FILE_EXTENSION"}, {"original_string": "public static final String WINDOWS_OS_FAMILY = \"windows\";", "modifier": "public static final", "type": "String", "declarator": "WINDOWS_OS_FAMILY = \"windows\"", "var_name": "WINDOWS_OS_FAMILY"}, {"original_string": "public static final String WINDOWS_SHARED_LIB_PREFIX = \"\";", "modifier": "public static final", "type": "String", "declarator": "WINDOWS_SHARED_LIB_PREFIX = \"\"", "var_name": "WINDOWS_SHARED_LIB_PREFIX"}, {"original_string": "public static final String WINDOWS_SHARED_LIB_PATH_VAR = \"PATH\";", "modifier": "public static final", "type": "String", "declarator": "WINDOWS_SHARED_LIB_PATH_VAR = \"PATH\"", "var_name": "WINDOWS_SHARED_LIB_PATH_VAR"}, {"original_string": "public static final String WINDOWS_SHARED_LIB_FILE_EXTENSION = \"dll\";", "modifier": "public static final", "type": "String", "declarator": "WINDOWS_SHARED_LIB_FILE_EXTENSION = \"dll\"", "var_name": "WINDOWS_SHARED_LIB_FILE_EXTENSION"}, {"original_string": "public static final BiFunction<String, String, String> PLATFORM_NAMER = (String s1, String s2) -> { return String.format(\"%s_%s\", s1, s2); };", "modifier": "public static final", "type": "BiFunction<String, String, String>", "declarator": "PLATFORM_NAMER = (String s1, String s2) -> { return String.format(\"%s_%s\", s1, s2); }", "var_name": "PLATFORM_NAMER"}, {"original_string": "public static final Platform SUPPORTED_LINUX_PLATFORM = new Platform(LINUX_OS_FAMILY, ARCH_X64);", "modifier": "public static final", "type": "Platform", "declarator": "SUPPORTED_LINUX_PLATFORM = new Platform(LINUX_OS_FAMILY, ARCH_X64)", "var_name": "SUPPORTED_LINUX_PLATFORM"}, {"original_string": "public static final Platform SUPPORTED_WINDOWS_PLATFORM = new Platform(WINDOWS_OS_FAMILY, ARCH_X64);", "modifier": "public static final", "type": "Platform", "declarator": "SUPPORTED_WINDOWS_PLATFORM = new Platform(WINDOWS_OS_FAMILY, ARCH_X64)", "var_name": "SUPPORTED_WINDOWS_PLATFORM"}, {"original_string": "public static final List<Platform> SUPPORTED_PLATFORMS = Arrays.asList(SUPPORTED_LINUX_PLATFORM, SUPPORTED_WINDOWS_PLATFORM);", "modifier": "public static final", "type": "List<Platform>", "declarator": "SUPPORTED_PLATFORMS = Arrays.asList(SUPPORTED_LINUX_PLATFORM, SUPPORTED_WINDOWS_PLATFORM)", "var_name": "SUPPORTED_PLATFORMS"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final String operatingSystem;", "modifier": "private final", "type": "String", "declarator": "operatingSystem", "var_name": "operatingSystem"}, {"original_string": "private final String architecture;", "modifier": "private final", "type": "String", "declarator": "architecture", "var_name": "architecture"}], "methods": [{"identifier": "Platform", "parameters": "(String operatingSystem, String architecture)", "modifiers": "public", "return": "", "signature": " Platform(String operatingSystem, String architecture)", "full_signature": "public  Platform(String operatingSystem, String architecture)", "class_method_signature": "Platform.Platform(String operatingSystem, String architecture)", "testcase": false, "constructor": true}, {"identifier": "Platform", "parameters": "()", "modifiers": "public", "return": "", "signature": " Platform()", "full_signature": "public  Platform()", "class_method_signature": "Platform.Platform()", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Platform.getName()", "testcase": false, "constructor": false}, {"identifier": "getOperatingSystem", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOperatingSystem()", "full_signature": "public String getOperatingSystem()", "class_method_signature": "Platform.getOperatingSystem()", "testcase": false, "constructor": false}, {"identifier": "getArchitecture", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getArchitecture()", "full_signature": "public String getArchitecture()", "class_method_signature": "Platform.getArchitecture()", "testcase": false, "constructor": false}, {"identifier": "isWindows", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isWindows()", "full_signature": "public boolean isWindows()", "class_method_signature": "Platform.isWindows()", "testcase": false, "constructor": false}, {"identifier": "isLinux", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isLinux()", "full_signature": "public boolean isLinux()", "class_method_signature": "Platform.isLinux()", "testcase": false, "constructor": false}, {"identifier": "is64Bit", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean is64Bit()", "full_signature": "public boolean is64Bit()", "class_method_signature": "Platform.is64Bit()", "testcase": false, "constructor": false}, {"identifier": "getSharedLibraryPrefix", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getSharedLibraryPrefix()", "full_signature": "private String getSharedLibraryPrefix()", "class_method_signature": "Platform.getSharedLibraryPrefix()", "testcase": false, "constructor": false}, {"identifier": "getSharedLibraryFileExtension", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getSharedLibraryFileExtension()", "full_signature": "private String getSharedLibraryFileExtension()", "class_method_signature": "Platform.getSharedLibraryFileExtension()", "testcase": false, "constructor": false}, {"identifier": "getSharedLibraryFileName", "parameters": "(String baseName)", "modifiers": "public", "return": "String", "signature": "String getSharedLibraryFileName(String baseName)", "full_signature": "public String getSharedLibraryFileName(String baseName)", "class_method_signature": "Platform.getSharedLibraryFileName(String baseName)", "testcase": false, "constructor": false}, {"identifier": "getSharedLibraryPathEnvironmentVarName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSharedLibraryPathEnvironmentVarName()", "full_signature": "public String getSharedLibraryPathEnvironmentVarName()", "class_method_signature": "Platform.getSharedLibraryPathEnvironmentVarName()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Platform.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Platform.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Platform.toString()", "testcase": false, "constructor": false}], "file": "geoclient-jni/src/main/java/gov/nyc/doitt/gis/geoclient/jni/util/Platform.java"}, "focal_method": {"identifier": "getSharedLibraryFileName", "parameters": "(String baseName)", "modifiers": "public", "return": "String", "body": "public String getSharedLibraryFileName(String baseName) {\n    return String.format(\"%s%s.%s\", getSharedLibraryPrefix(), baseName,\n        getSharedLibraryFileExtension());\n  }", "signature": "String getSharedLibraryFileName(String baseName)", "full_signature": "public String getSharedLibraryFileName(String baseName)", "class_method_signature": "Platform.getSharedLibraryFileName(String baseName)", "testcase": false, "constructor": false, "invocations": ["format", "getSharedLibraryPrefix", "getSharedLibraryFileExtension"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}