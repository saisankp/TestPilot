{"test_class": {"identifier": "ConsistentHashTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "ConsistentHash hash;", "modifier": "", "type": "ConsistentHash", "declarator": "hash", "var_name": "hash"}], "file": "rapid-framework/java_src_sandbox/cn/org/rapid_framework/consistenthash/ConsistentHashTest.java"}, "test_case": {"identifier": "testRemove", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void testRemove() {\n\t\tfor(int i = 0; i < 10; i++) {\n\t\t\tget(hash,\"\"+i);\n\t\t}\n\t\t\n\t\tremove(hash, \"server1\");\n\t\tadd(hash,\"server10\");\n\t\t\n\t\tfor(int i = 0; i < 10; i++) {\n\t\t\tget(hash,\"\"+i);\n\t\t}\n\t\t\n\t}", "signature": "void testRemove()", "full_signature": "@Test public void testRemove()", "class_method_signature": "ConsistentHashTest.testRemove()", "testcase": true, "constructor": false, "invocations": ["get", "remove", "add", "get"]}, "focal_class": {"identifier": "ConsistentHash", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final HashFunction hashFunction;", "modifier": "private final", "type": "HashFunction", "declarator": "hashFunction", "var_name": "hashFunction"}, {"original_string": "private final int numberOfReplicas;", "modifier": "private final", "type": "int", "declarator": "numberOfReplicas", "var_name": "numberOfReplicas"}, {"original_string": "final SortedMap<Integer, T> circle = new TreeMap<Integer, T>();", "modifier": "final", "type": "SortedMap<Integer, T>", "declarator": "circle = new TreeMap<Integer, T>()", "var_name": "circle"}], "methods": [{"identifier": "ConsistentHash", "parameters": "(HashFunction hashFunction, int numberOfReplicas,Collection<T> nodes)", "modifiers": "public", "return": "", "signature": " ConsistentHash(HashFunction hashFunction, int numberOfReplicas,Collection<T> nodes)", "full_signature": "public  ConsistentHash(HashFunction hashFunction, int numberOfReplicas,Collection<T> nodes)", "class_method_signature": "ConsistentHash.ConsistentHash(HashFunction hashFunction, int numberOfReplicas,Collection<T> nodes)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(T node)", "modifiers": "public", "return": "void", "signature": "void add(T node)", "full_signature": "public void add(T node)", "class_method_signature": "ConsistentHash.add(T node)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(T node)", "modifiers": "public", "return": "void", "signature": "void remove(T node)", "full_signature": "public void remove(T node)", "class_method_signature": "ConsistentHash.remove(T node)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Object key)", "modifiers": "public", "return": "T", "signature": "T get(Object key)", "full_signature": "public T get(Object key)", "class_method_signature": "ConsistentHash.get(Object key)", "testcase": false, "constructor": false}], "file": "rapid-framework/java_src_sandbox/cn/org/rapid_framework/consistenthash/ConsistentHash.java"}, "focal_method": {"identifier": "remove", "parameters": "(T node)", "modifiers": "public", "return": "void", "body": "public void remove(T node) {\n\t\tfor (int i = 0; i < numberOfReplicas; i++) {\n\t\t\tcircle.remove(hashFunction.hash(node.toString() + i));\n\t\t}\n\t}", "signature": "void remove(T node)", "full_signature": "public void remove(T node)", "class_method_signature": "ConsistentHash.remove(T node)", "testcase": false, "constructor": false, "invocations": ["remove", "hash", "toString"]}, "repository": {"repo_id": 32498781, "url": "https://github.com/badqiu/rapid-framework", "language": "Java", "is_fork": false, "fork_count": 31, "stargazer_count": 33, "size": 201457, "license": "licensed"}}