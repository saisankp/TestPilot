{"test_class": {"identifier": "DefaultCommandExecutorTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java"}, "test_case": {"identifier": "testExecute2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecute2() throws Exception {\n        DefaultCommandExecutor executor = new DefaultCommandExecutor();\n        String result = executor.execute(CommandContextFactory.newInstance(\"greeting\", new String[]{\"dubbo\"}, false));\n        assertThat(result, equalTo(\"greeting dubbo\"));\n    }", "signature": "void testExecute2()", "full_signature": "@Test public void testExecute2()", "class_method_signature": "DefaultCommandExecutorTest.testExecute2()", "testcase": true, "constructor": false, "invocations": ["execute", "newInstance", "assertThat", "equalTo"]}, "focal_class": {"identifier": "DefaultCommandExecutor", "superclass": "", "interfaces": "implements CommandExecutor", "fields": [], "methods": [{"identifier": "execute", "parameters": "(CommandContext commandContext)", "modifiers": "@Override public", "return": "String", "signature": "String execute(CommandContext commandContext)", "full_signature": "@Override public String execute(CommandContext commandContext)", "class_method_signature": "DefaultCommandExecutor.execute(CommandContext commandContext)", "testcase": false, "constructor": false}], "file": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/command/DefaultCommandExecutor.java"}, "focal_method": {"identifier": "execute", "parameters": "(CommandContext commandContext)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String execute(CommandContext commandContext) throws NoSuchCommandException {\n        BaseCommand command = null;\n        try {\n            command = ExtensionLoader.getExtensionLoader(BaseCommand.class).getExtension(commandContext.getCommandName());\n        } catch (Throwable throwable) {\n                //can't find command\n        }\n        if (command == null) {\n            throw new NoSuchCommandException(commandContext.getCommandName());\n        }\n        return command.execute(commandContext, commandContext.getArgs());\n    }", "signature": "String execute(CommandContext commandContext)", "full_signature": "@Override public String execute(CommandContext commandContext)", "class_method_signature": "DefaultCommandExecutor.execute(CommandContext commandContext)", "testcase": false, "constructor": false, "invocations": ["getExtension", "getExtensionLoader", "getCommandName", "getCommandName", "execute", "getArgs"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}