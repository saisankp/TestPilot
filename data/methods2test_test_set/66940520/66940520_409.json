{"test_class": {"identifier": "PeriodOffsetUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "dhis-2/dhis-services/dhis-service-analytics/src/test/java/org/hisp/dhis/analytics/util/PeriodOffsetUtilsTest.java"}, "test_case": {"identifier": "verifyGetPeriodOffsetRowNoMatch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void verifyGetPeriodOffsetRowNoMatch()\n    {\n\n        // Given\n        Grid grid = new ListGrid();\n\n        grid.addHeader( new GridHeader( DimensionalObject.DATA_X_DIM_ID ) );\n        grid.addHeader( new GridHeader( DimensionalObject.ORGUNIT_DIM_ID ) );\n        grid.addHeader( new GridHeader( DimensionalObject.PERIOD_DIM_ID ) );\n\n        grid.addRow();\n        grid.addValue( \"de1\" );\n        grid.addValue( \"ou2\" );\n        grid.addValue( \"202001\" );\n        grid.addValue( 3 );\n\n        grid.addRow();\n        grid.addValue( \"de1\" );\n        grid.addValue( \"ou3\" );\n        grid.addValue( \"202002\" );\n        grid.addValue( 5 );\n\n        DataElement dataElement = createDataElement( 0 );\n        dataElement.setUid( \"de1\" );\n\n        // When\n        final List<Object> row = PeriodOffsetUtils.getPeriodOffsetRow( grid, dataElement, \"202003\", 1 );\n\n        // Then\n        assertThat( row, is( nullValue() ) );\n    }", "signature": "void verifyGetPeriodOffsetRowNoMatch()", "full_signature": "@Test public void verifyGetPeriodOffsetRowNoMatch()", "class_method_signature": "PeriodOffsetUtilsTest.verifyGetPeriodOffsetRowNoMatch()", "testcase": true, "constructor": false, "invocations": ["addHeader", "addHeader", "addHeader", "addRow", "addValue", "addValue", "addValue", "addValue", "addRow", "addValue", "addValue", "addValue", "addValue", "createDataElement", "setUid", "getPeriodOffsetRow", "assertThat", "is", "nullValue"]}, "focal_class": {"identifier": "PeriodOffsetUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getPeriodTypePeriodMap", "parameters": "( DataQueryParams params )", "modifiers": "public static", "return": "ListMap<String, DimensionalItemObject>", "signature": "ListMap<String, DimensionalItemObject> getPeriodTypePeriodMap( DataQueryParams params )", "full_signature": "public static ListMap<String, DimensionalItemObject> getPeriodTypePeriodMap( DataQueryParams params )", "class_method_signature": "PeriodOffsetUtils.getPeriodTypePeriodMap( DataQueryParams params )", "testcase": false, "constructor": false}, {"identifier": "shiftPeriod", "parameters": "( Period period, int periodOffset )", "modifiers": "public static", "return": "Period", "signature": "Period shiftPeriod( Period period, int periodOffset )", "full_signature": "public static Period shiftPeriod( Period period, int periodOffset )", "class_method_signature": "PeriodOffsetUtils.shiftPeriod( Period period, int periodOffset )", "testcase": false, "constructor": false}, {"identifier": "removeOffsetPeriodsIfNotNeeded", "parameters": "( DataQueryParams params )", "modifiers": "public static", "return": "DataQueryParams", "signature": "DataQueryParams removeOffsetPeriodsIfNotNeeded( DataQueryParams params )", "full_signature": "public static DataQueryParams removeOffsetPeriodsIfNotNeeded( DataQueryParams params )", "class_method_signature": "PeriodOffsetUtils.removeOffsetPeriodsIfNotNeeded( DataQueryParams params )", "testcase": false, "constructor": false}, {"identifier": "getPeriodOffsetRow", "parameters": "( Grid grid, DimensionalItemObject dimItem, String isoPeriod,\n        int offset )", "modifiers": "public static", "return": "List<Object>", "signature": "List<Object> getPeriodOffsetRow( Grid grid, DimensionalItemObject dimItem, String isoPeriod,\n        int offset )", "full_signature": "public static List<Object> getPeriodOffsetRow( Grid grid, DimensionalItemObject dimItem, String isoPeriod,\n        int offset )", "class_method_signature": "PeriodOffsetUtils.getPeriodOffsetRow( Grid grid, DimensionalItemObject dimItem, String isoPeriod,\n        int offset )", "testcase": false, "constructor": false}, {"identifier": "addPeriodOffset", "parameters": "( ListMap<String, DimensionalItemObject> map,\n        int periodOffset )", "modifiers": "private static", "return": "ListMap<String, DimensionalItemObject>", "signature": "ListMap<String, DimensionalItemObject> addPeriodOffset( ListMap<String, DimensionalItemObject> map,\n        int periodOffset )", "full_signature": "private static ListMap<String, DimensionalItemObject> addPeriodOffset( ListMap<String, DimensionalItemObject> map,\n        int periodOffset )", "class_method_signature": "PeriodOffsetUtils.addPeriodOffset( ListMap<String, DimensionalItemObject> map,\n        int periodOffset )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/util/PeriodOffsetUtils.java"}, "focal_method": {"identifier": "getPeriodOffsetRow", "parameters": "( Grid grid, DimensionalItemObject dimItem, String isoPeriod,\n        int offset )", "modifiers": "public static", "return": "List<Object>", "body": "public static List<Object> getPeriodOffsetRow( Grid grid, DimensionalItemObject dimItem, String isoPeriod,\n        int offset )\n    {\n        if ( grid == null || dimItem == null )\n        {\n            return null;\n        }\n\n        BiFunction<Integer, Integer, Integer> replaceIndexIfMissing = (Integer index, Integer defaultIndex )\n                -> index == -1 ? defaultIndex : index;\n\n        final int dataIndex = replaceIndexIfMissing.apply( grid.getIndexOfHeader( DATA_X_DIM_ID ), 0 );\n        final int periodIndex = replaceIndexIfMissing.apply( grid.getIndexOfHeader( PERIOD_DIM_ID ), 1 );\n\n        Period shifted = offset != 0 ? shiftPeriod( PeriodType.getPeriodFromIsoString( isoPeriod ), offset ) :\n            PeriodType.getPeriodFromIsoString( isoPeriod );\n\n        for ( List<Object> row : grid.getRows() )\n        {\n            final String rowUid = (String) row.get( dataIndex );\n            final String rowPeriod = (String) row.get( periodIndex );\n\n            if ( rowUid.equals( dimItem.getUid() ) && rowPeriod.equals( shifted.getIsoDate() ) )\n            {\n                return row;\n            }\n        }\n\n        return null;\n    }", "signature": "List<Object> getPeriodOffsetRow( Grid grid, DimensionalItemObject dimItem, String isoPeriod,\n        int offset )", "full_signature": "public static List<Object> getPeriodOffsetRow( Grid grid, DimensionalItemObject dimItem, String isoPeriod,\n        int offset )", "class_method_signature": "PeriodOffsetUtils.getPeriodOffsetRow( Grid grid, DimensionalItemObject dimItem, String isoPeriod,\n        int offset )", "testcase": false, "constructor": false, "invocations": ["apply", "getIndexOfHeader", "apply", "getIndexOfHeader", "shiftPeriod", "getPeriodFromIsoString", "getPeriodFromIsoString", "getRows", "get", "get", "equals", "getUid", "equals", "getIsoDate"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}