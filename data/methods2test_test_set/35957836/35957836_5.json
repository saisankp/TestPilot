{"test_class": {"identifier": "ContributorTest", "superclass": "", "interfaces": "", "fields": [], "file": "catwatch-backend/src/test/java/org/zalando/catwatch/backend/model/ContributorTest.java"}, "test_case": {"identifier": "testToString_containsKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testToString_containsKey() throws Exception {\n\n\t\t// given\n\t\tDate date = new Date();\n\t\tContributor contributor = new Contributor(123456789, 987654321, date);\n\n\t\t// when\n\t\tString str = contributor.toString();\n\n\t\t// then\n\t\tassertThat(str, stringContainsInOrder(asList(\"id\", \":\", \"123456789\")));\n\t\tassertThat(str, stringContainsInOrder(asList(\"organizationId\", \":\", \"987654321\")));\n\t\tassertThat(str, stringContainsInOrder(asList(\"snapshotDate\", \":\", \"\" + date)));\n\t}", "signature": "void testToString_containsKey()", "full_signature": "@Test public void testToString_containsKey()", "class_method_signature": "ContributorTest.testToString_containsKey()", "testcase": true, "constructor": false, "invocations": ["toString", "assertThat", "stringContainsInOrder", "asList", "assertThat", "stringContainsInOrder", "asList", "assertThat", "stringContainsInOrder", "asList"]}, "focal_class": {"identifier": "Contributor", "superclass": "", "interfaces": "", "fields": [{"original_string": "@EmbeddedId\n\tprivate ContributorKey key;", "modifier": "@EmbeddedId\n\tprivate", "type": "ContributorKey", "declarator": "key", "var_name": "key"}, {"original_string": "private String name = null;", "modifier": "private", "type": "String", "declarator": "name = null", "var_name": "name"}, {"original_string": "private String url = null;", "modifier": "private", "type": "String", "declarator": "url = null", "var_name": "url"}, {"original_string": "private Integer organizationalCommitsCount = null;", "modifier": "private", "type": "Integer", "declarator": "organizationalCommitsCount = null", "var_name": "organizationalCommitsCount"}, {"original_string": "private Integer personalCommitsCount = null;", "modifier": "private", "type": "Integer", "declarator": "personalCommitsCount = null", "var_name": "personalCommitsCount"}, {"original_string": "private Integer personalProjectsCount = null;", "modifier": "private", "type": "Integer", "declarator": "personalProjectsCount = null", "var_name": "personalProjectsCount"}, {"original_string": "private Integer organizationalProjectsCount = null;", "modifier": "private", "type": "Integer", "declarator": "organizationalProjectsCount = null", "var_name": "organizationalProjectsCount"}, {"original_string": "private String organizationName = null;", "modifier": "private", "type": "String", "declarator": "organizationName = null", "var_name": "organizationName"}], "methods": [{"identifier": "Contributor", "parameters": "()", "modifiers": "public", "return": "", "signature": " Contributor()", "full_signature": "public  Contributor()", "class_method_signature": "Contributor.Contributor()", "testcase": false, "constructor": true}, {"identifier": "Contributor", "parameters": "(long id, long organizationId, Date snapshotDate)", "modifiers": "public", "return": "", "signature": " Contributor(long id, long organizationId, Date snapshotDate)", "full_signature": "public  Contributor(long id, long organizationId, Date snapshotDate)", "class_method_signature": "Contributor.Contributor(long id, long organizationId, Date snapshotDate)", "testcase": false, "constructor": true}, {"identifier": "getKey", "parameters": "()", "modifiers": "public", "return": "ContributorKey", "signature": "ContributorKey getKey()", "full_signature": "public ContributorKey getKey()", "class_method_signature": "Contributor.getKey()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@ApiModelProperty(value = \"the GitHub User ID of the Contributor. Part of the primary key. See official GitHub REST API guide.\") @JsonProperty(\"id\") public", "return": "long", "signature": "long getId()", "full_signature": "@ApiModelProperty(value = \"the GitHub User ID of the Contributor. Part of the primary key. See official GitHub REST API guide.\") @JsonProperty(\"id\") public long getId()", "class_method_signature": "Contributor.getId()", "testcase": false, "constructor": false}, {"identifier": "getOrganizationId", "parameters": "()", "modifiers": "@ApiModelProperty(value = \"the GitHub ID of the organization. Part of the primary key. See official GitHub REST API guide.\") @JsonProperty(\"organizationId\") public", "return": "long", "signature": "long getOrganizationId()", "full_signature": "@ApiModelProperty(value = \"the GitHub ID of the organization. Part of the primary key. See official GitHub REST API guide.\") @JsonProperty(\"organizationId\") public long getOrganizationId()", "class_method_signature": "Contributor.getOrganizationId()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@ApiModelProperty(value = \"Name of contributor\") @JsonProperty(\"name\") public", "return": "String", "signature": "String getName()", "full_signature": "@ApiModelProperty(value = \"Name of contributor\") @JsonProperty(\"name\") public String getName()", "class_method_signature": "Contributor.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void setName(String name)", "full_signature": "public void setName(String name)", "class_method_signature": "Contributor.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "getUrl", "parameters": "()", "modifiers": "@ApiModelProperty(value = \"URL of contributor\") @JsonProperty(\"url\") public", "return": "String", "signature": "String getUrl()", "full_signature": "@ApiModelProperty(value = \"URL of contributor\") @JsonProperty(\"url\") public String getUrl()", "class_method_signature": "Contributor.getUrl()", "testcase": false, "constructor": false}, {"identifier": "setUrl", "parameters": "(String url)", "modifiers": "public", "return": "void", "signature": "void setUrl(String url)", "full_signature": "public void setUrl(String url)", "class_method_signature": "Contributor.setUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "getOrganizationalCommitsCount", "parameters": "()", "modifiers": "@ApiModelProperty(value = \"Count of organizational commits.\") @JsonProperty(\"organizationalCommitsCount\") public", "return": "Integer", "signature": "Integer getOrganizationalCommitsCount()", "full_signature": "@ApiModelProperty(value = \"Count of organizational commits.\") @JsonProperty(\"organizationalCommitsCount\") public Integer getOrganizationalCommitsCount()", "class_method_signature": "Contributor.getOrganizationalCommitsCount()", "testcase": false, "constructor": false}, {"identifier": "setOrganizationalCommitsCount", "parameters": "(Integer organizationalCommitsCount)", "modifiers": "public", "return": "void", "signature": "void setOrganizationalCommitsCount(Integer organizationalCommitsCount)", "full_signature": "public void setOrganizationalCommitsCount(Integer organizationalCommitsCount)", "class_method_signature": "Contributor.setOrganizationalCommitsCount(Integer organizationalCommitsCount)", "testcase": false, "constructor": false}, {"identifier": "getPersonalCommitsCount", "parameters": "()", "modifiers": "@ApiModelProperty(value = \"Count of personal commits.\") @JsonProperty(\"personalCommitsCount\") public", "return": "Integer", "signature": "Integer getPersonalCommitsCount()", "full_signature": "@ApiModelProperty(value = \"Count of personal commits.\") @JsonProperty(\"personalCommitsCount\") public Integer getPersonalCommitsCount()", "class_method_signature": "Contributor.getPersonalCommitsCount()", "testcase": false, "constructor": false}, {"identifier": "setPersonalCommitsCount", "parameters": "(Integer personalCommitsCount)", "modifiers": "public", "return": "void", "signature": "void setPersonalCommitsCount(Integer personalCommitsCount)", "full_signature": "public void setPersonalCommitsCount(Integer personalCommitsCount)", "class_method_signature": "Contributor.setPersonalCommitsCount(Integer personalCommitsCount)", "testcase": false, "constructor": false}, {"identifier": "getPersonalProjectsCount", "parameters": "()", "modifiers": "@ApiModelProperty(value = \"Count of personal projects of contributor.\") @JsonProperty(\"personalProjectsCount\") public", "return": "Integer", "signature": "Integer getPersonalProjectsCount()", "full_signature": "@ApiModelProperty(value = \"Count of personal projects of contributor.\") @JsonProperty(\"personalProjectsCount\") public Integer getPersonalProjectsCount()", "class_method_signature": "Contributor.getPersonalProjectsCount()", "testcase": false, "constructor": false}, {"identifier": "setPersonalProjectsCount", "parameters": "(Integer personalProjectsCount)", "modifiers": "public", "return": "void", "signature": "void setPersonalProjectsCount(Integer personalProjectsCount)", "full_signature": "public void setPersonalProjectsCount(Integer personalProjectsCount)", "class_method_signature": "Contributor.setPersonalProjectsCount(Integer personalProjectsCount)", "testcase": false, "constructor": false}, {"identifier": "getOrganizationalProjectsCount", "parameters": "()", "modifiers": "@ApiModelProperty(value = \"Count of organization projects of contributor.\") @JsonProperty(\"organizationalProjectsCount\") public", "return": "Integer", "signature": "Integer getOrganizationalProjectsCount()", "full_signature": "@ApiModelProperty(value = \"Count of organization projects of contributor.\") @JsonProperty(\"organizationalProjectsCount\") public Integer getOrganizationalProjectsCount()", "class_method_signature": "Contributor.getOrganizationalProjectsCount()", "testcase": false, "constructor": false}, {"identifier": "setOrganizationalProjectsCount", "parameters": "(Integer organizationalProjectsCount)", "modifiers": "public", "return": "void", "signature": "void setOrganizationalProjectsCount(Integer organizationalProjectsCount)", "full_signature": "public void setOrganizationalProjectsCount(Integer organizationalProjectsCount)", "class_method_signature": "Contributor.setOrganizationalProjectsCount(Integer organizationalProjectsCount)", "testcase": false, "constructor": false}, {"identifier": "getOrganizationName", "parameters": "()", "modifiers": "@ApiModelProperty(value = \"Organization of the Contributor.\") @JsonProperty(\"organizationName\") public", "return": "String", "signature": "String getOrganizationName()", "full_signature": "@ApiModelProperty(value = \"Organization of the Contributor.\") @JsonProperty(\"organizationName\") public String getOrganizationName()", "class_method_signature": "Contributor.getOrganizationName()", "testcase": false, "constructor": false}, {"identifier": "setOrganizationName", "parameters": "(String organizationName)", "modifiers": "public", "return": "void", "signature": "void setOrganizationName(String organizationName)", "full_signature": "public void setOrganizationName(String organizationName)", "class_method_signature": "Contributor.setOrganizationName(String organizationName)", "testcase": false, "constructor": false}, {"identifier": "getSnapshotDate", "parameters": "()", "modifiers": "@ApiModelProperty(value = \"Contributor snapshot date. Part of the primary key.\") @JsonProperty(\"snapshotDate\") public", "return": "Date", "signature": "Date getSnapshotDate()", "full_signature": "@ApiModelProperty(value = \"Contributor snapshot date. Part of the primary key.\") @JsonProperty(\"snapshotDate\") public Date getSnapshotDate()", "class_method_signature": "Contributor.getSnapshotDate()", "testcase": false, "constructor": false}, {"identifier": "getLoginId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLoginId()", "full_signature": "public String getLoginId()", "class_method_signature": "Contributor.getLoginId()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Contributor.toString()", "testcase": false, "constructor": false}], "file": "catwatch-backend/src/main/java/org/zalando/catwatch/backend/model/Contributor.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n\tpublic String toString() {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tsb.append(\"class Contributor {\\n\");\n\n\t\tsb.append(\"  id: \").append(getId()).append(\"\\n\");\n\t\tsb.append(\"  organizationId: \").append(getOrganizationId()).append(\"\\n\");\n\t\tsb.append(\"  name: \").append(name).append(\"\\n\");\n\t\tsb.append(\"  url: \").append(url).append(\"\\n\");\n\t\tsb.append(\"  organizationalCommitsCount: \").append(organizationalCommitsCount).append(\"\\n\");\n\t\tsb.append(\"  personalCommitsCount: \").append(personalCommitsCount).append(\"\\n\");\n\t\tsb.append(\"  personalProjectsCount: \").append(personalProjectsCount).append(\"\\n\");\n\t\tsb.append(\"  organizationalProjectsCount: \").append(organizationalProjectsCount).append(\"\\n\");\n\t\tsb.append(\"  organizationName: \").append(organizationName).append(\"\\n\");\n\t\tsb.append(\"  snapshotDate: \").append(getSnapshotDate()).append(\"\\n\");\n\t\tsb.append(\"}\\n\");\n\t\treturn sb.toString();\n\t}", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Contributor.toString()", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "append", "getId", "append", "append", "append", "getOrganizationId", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "getSnapshotDate", "append", "toString"]}, "repository": {"repo_id": 35957836, "url": "https://github.com/zalando-incubator/catwatch", "language": "Java", "is_fork": false, "fork_count": 20, "stargazer_count": 55, "size": 1999, "license": "licensed"}}