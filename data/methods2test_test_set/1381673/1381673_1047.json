{"test_class": {"identifier": "ExactMatcherSearchTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ExactMatcherSearch<Object> search;", "modifier": "private", "type": "ExactMatcherSearch<Object>", "declarator": "search", "var_name": "search"}, {"original_string": "private MultiMap<Value, Object, List<Object>> map = MultiMapFactory.make();", "modifier": "private", "type": "MultiMap<Value, Object, List<Object>>", "declarator": "map = MultiMapFactory.make()", "var_name": "map"}], "file": "drools-verifier/drools-verifier-core/src/test/java/org/drools/verifier/core/index/select/ExactMatcherSearchTest.java"}, "test_case": {"identifier": "testNullSearch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNullSearch() throws Exception {\n\n        search = new ExactMatcherSearch<>( new ExactMatcher(KeyDefinition.newKeyDefinition().withId(\"value\" ).build(),\n                                                            null ),\n                                           map );\n        MultiMap<Value, Object, List<Object>> search1 = search.search();\n        assertEquals( \"I am null\", search1.get( new Value( null ) ).get( 0 ) );\n\n    }", "signature": "void testNullSearch()", "full_signature": "@Test public void testNullSearch()", "class_method_signature": "ExactMatcherSearchTest.testNullSearch()", "testcase": true, "constructor": false, "invocations": ["build", "withId", "newKeyDefinition", "search", "assertEquals", "get", "get"]}, "focal_class": {"identifier": "ExactMatcherSearch", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ExactMatcher matcher;", "modifier": "private", "type": "ExactMatcher", "declarator": "matcher", "var_name": "matcher"}, {"original_string": "private MultiMap<Value, T, List<T>> map;", "modifier": "private", "type": "MultiMap<Value, T, List<T>>", "declarator": "map", "var_name": "map"}], "methods": [{"identifier": "ExactMatcherSearch", "parameters": "(final ExactMatcher matcher,\n                              final MultiMap<Value, T, List<T>> map)", "modifiers": "public", "return": "", "signature": " ExactMatcherSearch(final ExactMatcher matcher,\n                              final MultiMap<Value, T, List<T>> map)", "full_signature": "public  ExactMatcherSearch(final ExactMatcher matcher,\n                              final MultiMap<Value, T, List<T>> map)", "class_method_signature": "ExactMatcherSearch.ExactMatcherSearch(final ExactMatcher matcher,\n                              final MultiMap<Value, T, List<T>> map)", "testcase": false, "constructor": true}, {"identifier": "search", "parameters": "()", "modifiers": "public", "return": "MultiMap<Value, T, List<T>>", "signature": "MultiMap<Value, T, List<T>> search()", "full_signature": "public MultiMap<Value, T, List<T>> search()", "class_method_signature": "ExactMatcherSearch.search()", "testcase": false, "constructor": false}], "file": "drools-verifier/drools-verifier-core/src/main/java/org/drools/verifier/core/index/select/ExactMatcherSearch.java"}, "focal_method": {"identifier": "search", "parameters": "()", "modifiers": "public", "return": "MultiMap<Value, T, List<T>>", "body": "public MultiMap<Value, T, List<T>> search() {\n\n        if (matcher.isNegate()) {\n\n            if (map.containsKey(matcher.getValue())) {\n\n                return MultiMap.merge(map.subMap(map.firstKey(), true,\n                                                 matcher.getValue(), false),\n                                      map.subMap(matcher.getValue(), false,\n                                                 map.lastKey(), true));\n            } else {\n                return map;\n            }\n        } else {\n            return map.subMap(matcher.getValue(), true,\n                              matcher.getValue(), true);\n        }\n    }", "signature": "MultiMap<Value, T, List<T>> search()", "full_signature": "public MultiMap<Value, T, List<T>> search()", "class_method_signature": "ExactMatcherSearch.search()", "testcase": false, "constructor": false, "invocations": ["isNegate", "containsKey", "getValue", "merge", "subMap", "firstKey", "getValue", "subMap", "getValue", "lastKey", "subMap", "getValue", "getValue"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}