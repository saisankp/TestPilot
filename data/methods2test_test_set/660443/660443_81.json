{"test_class": {"identifier": "LoggingToolTest", "superclass": "extends AbstractLoggingToolTest", "interfaces": "", "fields": [], "file": "misc/log4j/src/test/java/org/openscience/cdk/tools/LoggingToolTest.java"}, "test_case": {"identifier": "testCreate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreate() throws Exception {\n        ILoggingTool logger = LoggingTool.create(this.getClass());\n        Assert.assertNotNull(logger);\n    }", "signature": "void testCreate()", "full_signature": "@Test public void testCreate()", "class_method_signature": "LoggingToolTest.testCreate()", "testcase": true, "constructor": false, "invocations": ["create", "getClass", "assertNotNull"]}, "focal_class": {"identifier": "LoggingTool", "superclass": "", "interfaces": "implements ILoggingTool", "fields": [{"original_string": "private boolean             toSTDOUT             = false;", "modifier": "private", "type": "boolean", "declarator": "toSTDOUT             = false", "var_name": "toSTDOUT"}, {"original_string": "private Logger              log4jLogger;", "modifier": "private", "type": "Logger", "declarator": "log4jLogger", "var_name": "log4jLogger"}, {"original_string": "private static ILoggingTool logger;", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger", "var_name": "logger"}, {"original_string": "private String              classname;", "modifier": "private", "type": "String", "declarator": "classname", "var_name": "classname"}, {"original_string": "private int                 stackLength;", "modifier": "private", "type": "int", "declarator": "stackLength", "var_name": "stackLength"}, {"original_string": "public final int            DEFAULT_STACK_LENGTH = 5;", "modifier": "public final", "type": "int", "declarator": "DEFAULT_STACK_LENGTH = 5", "var_name": "DEFAULT_STACK_LENGTH"}], "methods": [{"identifier": "LoggingTool", "parameters": "()", "modifiers": "public", "return": "", "signature": " LoggingTool()", "full_signature": "public  LoggingTool()", "class_method_signature": "LoggingTool.LoggingTool()", "testcase": false, "constructor": true}, {"identifier": "LoggingTool", "parameters": "(Object object)", "modifiers": "public", "return": "", "signature": " LoggingTool(Object object)", "full_signature": "public  LoggingTool(Object object)", "class_method_signature": "LoggingTool.LoggingTool(Object object)", "testcase": false, "constructor": true}, {"identifier": "LoggingTool", "parameters": "(Class<?> classInst)", "modifiers": "public", "return": "", "signature": " LoggingTool(Class<?> classInst)", "full_signature": "public  LoggingTool(Class<?> classInst)", "class_method_signature": "LoggingTool.LoggingTool(Class<?> classInst)", "testcase": false, "constructor": true}, {"identifier": "configureLog4j", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void configureLog4j()", "full_signature": "public static void configureLog4j()", "class_method_signature": "LoggingTool.configureLog4j()", "testcase": false, "constructor": false}, {"identifier": "dumpSystemProperties", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void dumpSystemProperties()", "full_signature": "@Override public void dumpSystemProperties()", "class_method_signature": "LoggingTool.dumpSystemProperties()", "testcase": false, "constructor": false}, {"identifier": "setStackLength", "parameters": "(int length)", "modifiers": "@Override public", "return": "void", "signature": "void setStackLength(int length)", "full_signature": "@Override public void setStackLength(int length)", "class_method_signature": "LoggingTool.setStackLength(int length)", "testcase": false, "constructor": false}, {"identifier": "dumpClasspath", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void dumpClasspath()", "full_signature": "@Override public void dumpClasspath()", "class_method_signature": "LoggingTool.dumpClasspath()", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "(Object object)", "modifiers": "@Override public", "return": "void", "signature": "void debug(Object object)", "full_signature": "@Override public void debug(Object object)", "class_method_signature": "LoggingTool.debug(Object object)", "testcase": false, "constructor": false}, {"identifier": "debugString", "parameters": "(String string)", "modifiers": "private", "return": "void", "signature": "void debugString(String string)", "full_signature": "private void debugString(String string)", "class_method_signature": "LoggingTool.debugString(String string)", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "(Object object, Object... objects)", "modifiers": "@Override public", "return": "void", "signature": "void debug(Object object, Object... objects)", "full_signature": "@Override public void debug(Object object, Object... objects)", "class_method_signature": "LoggingTool.debug(Object object, Object... objects)", "testcase": false, "constructor": false}, {"identifier": "debugThrowable", "parameters": "(Throwable problem)", "modifiers": "private", "return": "void", "signature": "void debugThrowable(Throwable problem)", "full_signature": "private void debugThrowable(Throwable problem)", "class_method_signature": "LoggingTool.debugThrowable(Throwable problem)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(Object object)", "modifiers": "@Override public", "return": "void", "signature": "void error(Object object)", "full_signature": "@Override public void error(Object object)", "class_method_signature": "LoggingTool.error(Object object)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(Object object, Object... objects)", "modifiers": "@Override public", "return": "void", "signature": "void error(Object object, Object... objects)", "full_signature": "@Override public void error(Object object, Object... objects)", "class_method_signature": "LoggingTool.error(Object object, Object... objects)", "testcase": false, "constructor": false}, {"identifier": "errorString", "parameters": "(String string)", "modifiers": "private", "return": "void", "signature": "void errorString(String string)", "full_signature": "private void errorString(String string)", "class_method_signature": "LoggingTool.errorString(String string)", "testcase": false, "constructor": false}, {"identifier": "fatal", "parameters": "(Object object)", "modifiers": "@Override public", "return": "void", "signature": "void fatal(Object object)", "full_signature": "@Override public void fatal(Object object)", "class_method_signature": "LoggingTool.fatal(Object object)", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "(Object object)", "modifiers": "@Override public", "return": "void", "signature": "void info(Object object)", "full_signature": "@Override public void info(Object object)", "class_method_signature": "LoggingTool.info(Object object)", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "(Object object, Object... objects)", "modifiers": "@Override public", "return": "void", "signature": "void info(Object object, Object... objects)", "full_signature": "@Override public void info(Object object, Object... objects)", "class_method_signature": "LoggingTool.info(Object object, Object... objects)", "testcase": false, "constructor": false}, {"identifier": "infoString", "parameters": "(String string)", "modifiers": "private", "return": "void", "signature": "void infoString(String string)", "full_signature": "private void infoString(String string)", "class_method_signature": "LoggingTool.infoString(String string)", "testcase": false, "constructor": false}, {"identifier": "warn", "parameters": "(Object object)", "modifiers": "@Override public", "return": "void", "signature": "void warn(Object object)", "full_signature": "@Override public void warn(Object object)", "class_method_signature": "LoggingTool.warn(Object object)", "testcase": false, "constructor": false}, {"identifier": "warnString", "parameters": "(String string)", "modifiers": "private", "return": "void", "signature": "void warnString(String string)", "full_signature": "private void warnString(String string)", "class_method_signature": "LoggingTool.warnString(String string)", "testcase": false, "constructor": false}, {"identifier": "warn", "parameters": "(Object object, Object... objects)", "modifiers": "@Override public", "return": "void", "signature": "void warn(Object object, Object... objects)", "full_signature": "@Override public void warn(Object object, Object... objects)", "class_method_signature": "LoggingTool.warn(Object object, Object... objects)", "testcase": false, "constructor": false}, {"identifier": "isDebugEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDebugEnabled()", "full_signature": "@Override public boolean isDebugEnabled()", "class_method_signature": "LoggingTool.isDebugEnabled()", "testcase": false, "constructor": false}, {"identifier": "printToStderr", "parameters": "(String level, String message)", "modifiers": "private", "return": "void", "signature": "void printToStderr(String level, String message)", "full_signature": "private void printToStderr(String level, String message)", "class_method_signature": "LoggingTool.printToStderr(String level, String message)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Class<?> sourceClass)", "modifiers": "public static", "return": "ILoggingTool", "signature": "ILoggingTool create(Class<?> sourceClass)", "full_signature": "public static ILoggingTool create(Class<?> sourceClass)", "class_method_signature": "LoggingTool.create(Class<?> sourceClass)", "testcase": false, "constructor": false}, {"identifier": "setLevel", "parameters": "(int level)", "modifiers": "@Override public", "return": "void", "signature": "void setLevel(int level)", "full_signature": "@Override public void setLevel(int level)", "class_method_signature": "LoggingTool.setLevel(int level)", "testcase": false, "constructor": false}, {"identifier": "getLevel", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getLevel()", "full_signature": "@Override public int getLevel()", "class_method_signature": "LoggingTool.getLevel()", "testcase": false, "constructor": false}], "file": "misc/log4j/src/main/java/org/openscience/cdk/tools/LoggingTool.java"}, "focal_method": {"identifier": "create", "parameters": "(Class<?> sourceClass)", "modifiers": "public static", "return": "ILoggingTool", "body": "public static ILoggingTool create(Class<?> sourceClass) {\n        return new LoggingTool(sourceClass);\n    }", "signature": "ILoggingTool create(Class<?> sourceClass)", "full_signature": "public static ILoggingTool create(Class<?> sourceClass)", "class_method_signature": "LoggingTool.create(Class<?> sourceClass)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}