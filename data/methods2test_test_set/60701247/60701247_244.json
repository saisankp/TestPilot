{"test_class": {"identifier": "SelectDeviceActionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public final AndroidProjectRule myRule = AndroidProjectRule.inMemory();", "modifier": "@Rule\n  public final", "type": "AndroidProjectRule", "declarator": "myRule = AndroidProjectRule.inMemory()", "var_name": "myRule"}, {"original_string": "private DeviceAndSnapshotComboBoxAction myComboBoxAction;", "modifier": "private", "type": "DeviceAndSnapshotComboBoxAction", "declarator": "myComboBoxAction", "var_name": "myComboBoxAction"}, {"original_string": "private Project myProject;", "modifier": "private", "type": "Project", "declarator": "myProject", "var_name": "myProject"}], "file": "android/testSrc/com/android/tools/idea/run/deployment/SelectDeviceActionTest.java"}, "test_case": {"identifier": "selectDeviceActionTwoDevicesHaveSameName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void selectDeviceActionTwoDevicesHaveSameName() {\n    // Arrange\n    Device lgeNexus5x1 = new PhysicalDevice.Builder()\n      .setName(\"LGE Nexus 5X\")\n      .setKey(new Key(\"00fff9d2279fa601\"))\n      .setAndroidDevice(Mockito.mock(AndroidDevice.class))\n      .build();\n\n    Device lgeNexus5x2 = new PhysicalDevice.Builder()\n      .setName(\"LGE Nexus 5X\")\n      .setKey(new Key(\"00fff9d2279fa602\"))\n      .setAndroidDevice(Mockito.mock(AndroidDevice.class))\n      .build();\n\n    Mockito.when(myComboBoxAction.getDevices(myProject)).thenReturn(Arrays.asList(lgeNexus5x1, lgeNexus5x2));\n\n    // Act\n    AnAction action = SelectDeviceAction.newSelectDeviceAction(myComboBoxAction, myProject, lgeNexus5x1);\n\n    // Assert\n    assertEquals(\"LGE Nexus 5X [00fff9d2279fa601]\", action.getTemplatePresentation().getText());\n  }", "signature": "void selectDeviceActionTwoDevicesHaveSameName()", "full_signature": "@Test public void selectDeviceActionTwoDevicesHaveSameName()", "class_method_signature": "SelectDeviceActionTest.selectDeviceActionTwoDevicesHaveSameName()", "testcase": true, "constructor": false, "invocations": ["build", "setAndroidDevice", "setKey", "setName", "mock", "build", "setAndroidDevice", "setKey", "setName", "mock", "thenReturn", "when", "getDevices", "asList", "newSelectDeviceAction", "assertEquals", "getText", "getTemplatePresentation"]}, "focal_class": {"identifier": "SelectDeviceAction", "superclass": "extends AnAction", "interfaces": "", "fields": [{"original_string": "@NotNull\n  private final DeviceAndSnapshotComboBoxAction myComboBoxAction;", "modifier": "@NotNull\n  private final", "type": "DeviceAndSnapshotComboBoxAction", "declarator": "myComboBoxAction", "var_name": "myComboBoxAction"}, {"original_string": "@NotNull\n  private final Project myProject;", "modifier": "@NotNull\n  private final", "type": "Project", "declarator": "myProject", "var_name": "myProject"}, {"original_string": "@NotNull\n  private final Device myDevice;", "modifier": "@NotNull\n  private final", "type": "Device", "declarator": "myDevice", "var_name": "myDevice"}], "methods": [{"identifier": "newSelectDeviceAction", "parameters": "(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                        @NotNull Project project,\n                                        @NotNull Device device)", "modifiers": "@NotNull static", "return": "AnAction", "signature": "AnAction newSelectDeviceAction(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                        @NotNull Project project,\n                                        @NotNull Device device)", "full_signature": "@NotNull static AnAction newSelectDeviceAction(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                        @NotNull Project project,\n                                        @NotNull Device device)", "class_method_signature": "SelectDeviceAction.newSelectDeviceAction(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                        @NotNull Project project,\n                                        @NotNull Device device)", "testcase": false, "constructor": false}, {"identifier": "newSnapshotActionGroupChild", "parameters": "(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                              @NotNull Project project,\n                                              @NotNull Device device)", "modifiers": "@NotNull static", "return": "AnAction", "signature": "AnAction newSnapshotActionGroupChild(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                              @NotNull Project project,\n                                              @NotNull Device device)", "full_signature": "@NotNull static AnAction newSnapshotActionGroupChild(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                              @NotNull Project project,\n                                              @NotNull Device device)", "class_method_signature": "SelectDeviceAction.newSnapshotActionGroupChild(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                              @NotNull Project project,\n                                              @NotNull Device device)", "testcase": false, "constructor": false}, {"identifier": "SelectDeviceAction", "parameters": "(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                             @NotNull Project project,\n                             @NotNull Device device,\n                             boolean snapshotActionGroupChild)", "modifiers": "private", "return": "", "signature": " SelectDeviceAction(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                             @NotNull Project project,\n                             @NotNull Device device,\n                             boolean snapshotActionGroupChild)", "full_signature": "private  SelectDeviceAction(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                             @NotNull Project project,\n                             @NotNull Device device,\n                             boolean snapshotActionGroupChild)", "class_method_signature": "SelectDeviceAction.SelectDeviceAction(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                             @NotNull Project project,\n                             @NotNull Device device,\n                             boolean snapshotActionGroupChild)", "testcase": false, "constructor": true}, {"identifier": "configurePresentation", "parameters": "(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                     @NotNull Project project,\n                                     @NotNull Device device,\n                                     boolean snapshotActionGroupChild)", "modifiers": "private", "return": "void", "signature": "void configurePresentation(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                     @NotNull Project project,\n                                     @NotNull Device device,\n                                     boolean snapshotActionGroupChild)", "full_signature": "private void configurePresentation(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                     @NotNull Project project,\n                                     @NotNull Device device,\n                                     boolean snapshotActionGroupChild)", "class_method_signature": "SelectDeviceAction.configurePresentation(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                     @NotNull Project project,\n                                     @NotNull Device device,\n                                     boolean snapshotActionGroupChild)", "testcase": false, "constructor": false}, {"identifier": "getDevice", "parameters": "()", "modifiers": "@NotNull @VisibleForTesting public", "return": "Device", "signature": "Device getDevice()", "full_signature": "@NotNull @VisibleForTesting public Device getDevice()", "class_method_signature": "SelectDeviceAction.getDevice()", "testcase": false, "constructor": false}, {"identifier": "actionPerformed", "parameters": "(@NotNull AnActionEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void actionPerformed(@NotNull AnActionEvent event)", "full_signature": "@Override public void actionPerformed(@NotNull AnActionEvent event)", "class_method_signature": "SelectDeviceAction.actionPerformed(@NotNull AnActionEvent event)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable Object object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(@Nullable Object object)", "full_signature": "@Override public boolean equals(@Nullable Object object)", "class_method_signature": "SelectDeviceAction.equals(@Nullable Object object)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SelectDeviceAction.hashCode()", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/run/deployment/SelectDeviceAction.java"}, "focal_method": {"identifier": "newSelectDeviceAction", "parameters": "(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                        @NotNull Project project,\n                                        @NotNull Device device)", "modifiers": "@NotNull static", "return": "AnAction", "body": "@NotNull\n  static AnAction newSelectDeviceAction(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                        @NotNull Project project,\n                                        @NotNull Device device) {\n    return new SelectDeviceAction(comboBoxAction, project, device, false);\n  }", "signature": "AnAction newSelectDeviceAction(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                        @NotNull Project project,\n                                        @NotNull Device device)", "full_signature": "@NotNull static AnAction newSelectDeviceAction(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                        @NotNull Project project,\n                                        @NotNull Device device)", "class_method_signature": "SelectDeviceAction.newSelectDeviceAction(@NotNull DeviceAndSnapshotComboBoxAction comboBoxAction,\n                                        @NotNull Project project,\n                                        @NotNull Device device)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}