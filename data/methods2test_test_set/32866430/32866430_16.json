{"test_class": {"identifier": "LoginRequestTest", "superclass": "", "interfaces": "", "fields": [], "file": "api/src/test/java/keywhiz/api/LoginRequestTest.java"}, "test_case": {"identifier": "deserializesCorrectly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void deserializesCorrectly() throws Exception {\n    LoginRequest loginRequest = LoginRequest.from(\"keywhizAdmin\", \"adminPass\".toCharArray());\n    assertThat(fromJson(jsonFixture(\"fixtures/loginRequest.json\"), LoginRequest.class))\n        .isEqualTo(loginRequest);\n  }", "signature": "void deserializesCorrectly()", "full_signature": "@Test public void deserializesCorrectly()", "class_method_signature": "LoginRequestTest.deserializesCorrectly()", "testcase": true, "constructor": false, "invocations": ["from", "toCharArray", "isEqualTo", "assertThat", "fromJson", "jsonFixture"]}, "focal_class": {"identifier": "LoginRequest", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "from", "parameters": "(\n      @JsonProperty(value=\"username\", required=true) String username, @JsonProperty(value = \"password\", required=true) char[] password)", "modifiers": "@JsonCreator public static", "return": "LoginRequest", "signature": "LoginRequest from(\n      @JsonProperty(value=\"username\", required=true) String username, @JsonProperty(value = \"password\", required=true) char[] password)", "full_signature": "@JsonCreator public static LoginRequest from(\n      @JsonProperty(value=\"username\", required=true) String username, @JsonProperty(value = \"password\", required=true) char[] password)", "class_method_signature": "LoginRequest.from(\n      @JsonProperty(value=\"username\", required=true) String username, @JsonProperty(value = \"password\", required=true) char[] password)", "testcase": false, "constructor": false}, {"identifier": "username", "parameters": "()", "modifiers": "@JsonProperty public abstract", "return": "String", "signature": "String username()", "full_signature": "@JsonProperty public abstract String username()", "class_method_signature": "LoginRequest.username()", "testcase": false, "constructor": false}, {"identifier": "password", "parameters": "()", "modifiers": "@JsonProperty public abstract", "return": "char[]", "signature": "char[] password()", "full_signature": "@JsonProperty public abstract char[] password()", "class_method_signature": "LoginRequest.password()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "LoginRequest.toString()", "testcase": false, "constructor": false}], "file": "api/src/main/java/keywhiz/api/LoginRequest.java"}, "focal_method": {"identifier": "from", "parameters": "(\n      @JsonProperty(value=\"username\", required=true) String username, @JsonProperty(value = \"password\", required=true) char[] password)", "modifiers": "@JsonCreator public static", "return": "LoginRequest", "body": "@JsonCreator public static LoginRequest from(\n      @JsonProperty(value=\"username\", required=true) String username, @JsonProperty(value = \"password\", required=true) char[] password) {\n    return new AutoValue_LoginRequest(username, password);\n  }", "signature": "LoginRequest from(\n      @JsonProperty(value=\"username\", required=true) String username, @JsonProperty(value = \"password\", required=true) char[] password)", "full_signature": "@JsonCreator public static LoginRequest from(\n      @JsonProperty(value=\"username\", required=true) String username, @JsonProperty(value = \"password\", required=true) char[] password)", "class_method_signature": "LoginRequest.from(\n      @JsonProperty(value=\"username\", required=true) String username, @JsonProperty(value = \"password\", required=true) char[] password)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 32866430, "url": "https://github.com/square/keywhiz", "stars": 2186, "created": "3/25/2015 1:31:39 PM +00:00", "updates": "2020-01-24T18:57:02+00:00", "fork": "False", "license": "licensed"}}