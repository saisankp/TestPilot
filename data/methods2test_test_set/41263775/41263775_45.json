{"test_class": {"identifier": "IteratorCachingResultSetTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/src/test/java/com/googlecode/cqengine/resultset/common/IteratorCachingResultSetTest.java"}, "test_case": {"identifier": "testIteratorCaching", "parameters": "()", "modifiers": "@Test @SuppressWarnings(\"unchecked\") public", "return": "void", "body": "@Test\n    @SuppressWarnings(\"unchecked\")\n    public void testIteratorCaching() {\n        ResultSet<Car> backingResultSet = mock(ResultSet.class);\n        when(backingResultSet.iterator()).thenReturn(mock(Iterator.class), mock(Iterator.class), mock(Iterator.class), mock(Iterator.class), mock(Iterator.class), mock(Iterator.class), mock(Iterator.class));\n        IteratorCachingResultSet<Car> iteratorCachingResultSet = new IteratorCachingResultSet<Car>(backingResultSet);\n\n        Iterator<Car> i1 = iteratorCachingResultSet.iterator();\n        Iterator<Car> i2 = iteratorCachingResultSet.iterator();\n        assertSame(i1, i2);\n\n        i2.hasNext();\n        i2.hasNext();\n        Iterator<Car> i3 = iteratorCachingResultSet.iterator();\n        assertSame(i1, i3);\n\n        i3.next();\n        Iterator<Car> i4 = iteratorCachingResultSet.iterator();\n        assertNotSame(i3, i4);\n\n        i4.remove();\n        Iterator<Car> i5 = iteratorCachingResultSet.iterator();\n        assertNotSame(i4, i5);\n\n        i5.hasNext();\n        i5.hasNext();\n        Iterator<Car> i6 = iteratorCachingResultSet.iterator();\n        assertSame(i5, i6);\n\n        iteratorCachingResultSet.isEmpty();\n        iteratorCachingResultSet.isNotEmpty();\n        Iterator<Car> i7 = iteratorCachingResultSet.iterator();\n        assertSame(i6, i7);\n    }", "signature": "void testIteratorCaching()", "full_signature": "@Test @SuppressWarnings(\"unchecked\") public void testIteratorCaching()", "class_method_signature": "IteratorCachingResultSetTest.testIteratorCaching()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "iterator", "mock", "mock", "mock", "mock", "mock", "mock", "mock", "iterator", "iterator", "assertSame", "hasNext", "hasNext", "iterator", "assertSame", "next", "iterator", "assertNotSame", "remove", "iterator", "assertNotSame", "hasNext", "hasNext", "iterator", "assertSame", "isEmpty", "isNotEmpty", "iterator", "assertSame"]}, "focal_class": {"identifier": "IteratorCachingResultSet", "superclass": "extends WrappedResultSet<O>", "interfaces": "", "fields": [{"original_string": "Iterator<O> cachedIterator = null;", "modifier": "", "type": "Iterator<O>", "declarator": "cachedIterator = null", "var_name": "cachedIterator"}], "methods": [{"identifier": "IteratorCachingResultSet", "parameters": "(ResultSet<O> backingResultSet)", "modifiers": "public", "return": "", "signature": " IteratorCachingResultSet(ResultSet<O> backingResultSet)", "full_signature": "public  IteratorCachingResultSet(ResultSet<O> backingResultSet)", "class_method_signature": "IteratorCachingResultSet.IteratorCachingResultSet(ResultSet<O> backingResultSet)", "testcase": false, "constructor": true}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<O>", "signature": "Iterator<O> iterator()", "full_signature": "@Override public Iterator<O> iterator()", "class_method_signature": "IteratorCachingResultSet.iterator()", "testcase": false, "constructor": false}], "file": "code/src/main/java/com/googlecode/cqengine/resultset/common/IteratorCachingResultSet.java"}, "focal_method": {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<O>", "body": "@Override\n    public Iterator<O> iterator() {\n        if (cachedIterator != null) {\n            return cachedIterator;\n        }\n        final Iterator<O> backingIterator = wrappedResultSet.iterator();\n        Iterator<O> wrappingIterator = new Iterator<O>() {\n\n            @Override\n            public boolean hasNext() {\n                return backingIterator.hasNext();\n            }\n\n            @Override\n            public O next() {\n                cachedIterator = null;\n                return backingIterator.next();\n            }\n\n            @Override\n            public void remove() {\n                cachedIterator = null;\n                backingIterator.remove();\n            }\n        };\n        this.cachedIterator = wrappingIterator;\n        return wrappingIterator;\n    }", "signature": "Iterator<O> iterator()", "full_signature": "@Override public Iterator<O> iterator()", "class_method_signature": "IteratorCachingResultSet.iterator()", "testcase": false, "constructor": false, "invocations": ["iterator", "hasNext", "next", "remove"]}, "repository": {"repo_id": 41263775, "url": "https://github.com/npgall/cqengine", "language": "Java", "is_fork": false, "fork_count": 180, "stargazer_count": 1194, "size": 11701, "license": "licensed"}}