{"test_class": {"identifier": "CategorySummaryAmountDescendingComparatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final CategorySummaryAmountDescendingComparator comparator = new CategorySummaryAmountDescendingComparator();", "modifier": "private final", "type": "CategorySummaryAmountDescendingComparator", "declarator": "comparator = new CategorySummaryAmountDescendingComparator()", "var_name": "comparator"}], "file": "services/src/test/java/com/greensopinion/finance/services/reports/CategorySummaryAmountDescendingComparatorTest.java"}, "test_case": {"identifier": "compareTo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void compareTo() {\n\t\tCategorySummary summary1 = new CategorySummary(\"one\", -1);\n\t\tCategorySummary summary2 = new CategorySummary(\"two\", -2);\n\t\tassertEquals(0, comparator.compare(summary1, summary1));\n\t\tassertEquals(0, comparator.compare(summary2, summary2));\n\t\tassertEquals(1, comparator.compare(summary1, summary2));\n\t\tassertEquals(-1, comparator.compare(summary2, summary1));\n\t}", "signature": "void compareTo()", "full_signature": "@Test public void compareTo()", "class_method_signature": "CategorySummaryAmountDescendingComparatorTest.compareTo()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "compare", "assertEquals", "compare", "assertEquals", "compare", "assertEquals", "compare"]}, "focal_class": {"identifier": "CategorySummaryAmountDescendingComparator", "superclass": "", "interfaces": "implements Comparator<CategorySummary>", "fields": [], "methods": [{"identifier": "compare", "parameters": "(CategorySummary o1, CategorySummary o2)", "modifiers": "@Override public", "return": "int", "signature": "int compare(CategorySummary o1, CategorySummary o2)", "full_signature": "@Override public int compare(CategorySummary o1, CategorySummary o2)", "class_method_signature": "CategorySummaryAmountDescendingComparator.compare(CategorySummary o1, CategorySummary o2)", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/greensopinion/finance/services/reports/CategorySummaryAmountDescendingComparator.java"}, "focal_method": {"identifier": "compare", "parameters": "(CategorySummary o1, CategorySummary o2)", "modifiers": "@Override public", "return": "int", "body": "@Override\n\tpublic int compare(CategorySummary o1, CategorySummary o2) {\n\t\tint i = Long.valueOf(o1.getAmount()).compareTo(o2.getAmount());\n\t\tif (i == 0) {\n\t\t\ti = o1.getName().compareToIgnoreCase(o2.getName());\n\t\t}\n\t\treturn i;\n\t}", "signature": "int compare(CategorySummary o1, CategorySummary o2)", "full_signature": "@Override public int compare(CategorySummary o1, CategorySummary o2)", "class_method_signature": "CategorySummaryAmountDescendingComparator.compare(CategorySummary o1, CategorySummary o2)", "testcase": false, "constructor": false, "invocations": ["compareTo", "valueOf", "getAmount", "getAmount", "compareToIgnoreCase", "getName", "getName"]}, "repository": {"repo_id": 54854741, "url": "https://github.com/greensopinion/greenbeans", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 30, "size": 1684, "license": "licensed"}}