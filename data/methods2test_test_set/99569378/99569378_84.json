{"test_class": {"identifier": "ActorCallLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ActorRef<ActorInterface> mActorRef;", "modifier": "@Mock\n    private", "type": "ActorRef<ActorInterface>", "declarator": "mActorRef", "var_name": "mActorRef"}, {"original_string": "@Mock\n    private ActorInterface mActorImpl;", "modifier": "@Mock\n    private", "type": "ActorInterface", "declarator": "mActorImpl", "var_name": "mActorImpl"}, {"original_string": "@Mock\n    private ActorThread mUiThread;", "modifier": "@Mock\n    private", "type": "ActorThread", "declarator": "mUiThread", "var_name": "mUiThread"}, {"original_string": "@Mock\n    private ActorsThreadsBase mActors;", "modifier": "@Mock\n    private", "type": "ActorsThreadsBase", "declarator": "mActors", "var_name": "mActors"}, {"original_string": "@Mock\n    private Promise<String> mPromise;", "modifier": "@Mock\n    private", "type": "Promise<String>", "declarator": "mPromise", "var_name": "mPromise"}, {"original_string": "@Mock\n    private ActionHandle mActionHandle;", "modifier": "@Mock\n    private", "type": "ActionHandle", "declarator": "mActionHandle", "var_name": "mActionHandle"}, {"original_string": "private ActorCallLoader<ActorInterface, String> mLoader;", "modifier": "private", "type": "ActorCallLoader<ActorInterface, String>", "declarator": "mLoader", "var_name": "mLoader"}, {"original_string": "private ResultCaptor mResultCaptor;", "modifier": "private", "type": "ResultCaptor", "declarator": "mResultCaptor", "var_name": "mResultCaptor"}, {"original_string": "private CleanupCaptor mCleanupCaptor;", "modifier": "private", "type": "CleanupCaptor", "declarator": "mCleanupCaptor", "var_name": "mCleanupCaptor"}], "file": "actors-library/src/test/java/com/truecaller/androidactors/ActorCallLoaderTest.java"}, "test_case": {"identifier": "onForceLoad", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Test public", "return": "void", "body": "@SuppressWarnings(\"unchecked\")\n    @Test\n    public void onForceLoad() {\n        mLoader.onStartLoading();\n        Mockito.verify(mActorImpl, Mockito.times(1)).getResult();\n        // Result was not delivered, force load should do nothing\n        mLoader.onForceLoad();\n        Mockito.verify(mActorImpl, Mockito.times(1)).getResult();\n\n        final ArgumentCaptor<ResultListener> captor = ArgumentCaptor.forClass(ResultListener.class);\n        Mockito.verify(mPromise).then(Mockito.same(mUiThread), captor.capture());\n        ResultListener listener = captor.getValue();\n        Assert.assertNotNull(listener);\n        listener.onResult(\"Test\");\n        // Now force should launch request again\n        mLoader.onForceLoad();\n        Mockito.verify(mActorImpl, Mockito.times(2)).getResult();\n    }", "signature": "void onForceLoad()", "full_signature": "@SuppressWarnings(\"unchecked\") @Test public void onForceLoad()", "class_method_signature": "ActorCallLoaderTest.onForceLoad()", "testcase": true, "constructor": false, "invocations": ["onStartLoading", "getResult", "verify", "times", "onForceLoad", "getResult", "verify", "times", "forClass", "then", "verify", "same", "capture", "getValue", "assertNotNull", "onResult", "onForceLoad", "getResult", "verify", "times"]}, "focal_class": {"identifier": "ActorCallLoader", "superclass": "extends Loader<R>", "interfaces": "", "fields": [{"original_string": "private static final int STATE_NONE = 0;", "modifier": "private static final", "type": "int", "declarator": "STATE_NONE = 0", "var_name": "STATE_NONE"}, {"original_string": "private static final int STATE_CALLING = 1;", "modifier": "private static final", "type": "int", "declarator": "STATE_CALLING = 1", "var_name": "STATE_CALLING"}, {"original_string": "private static final int STATE_DONE = 2;", "modifier": "private static final", "type": "int", "declarator": "STATE_DONE = 2", "var_name": "STATE_DONE"}, {"original_string": "@NonNull\n    private final ActorsThreads mActorsThreads;", "modifier": "@NonNull\n    private final", "type": "ActorsThreads", "declarator": "mActorsThreads", "var_name": "mActorsThreads"}, {"original_string": "@NonNull\n    private final ActorRef<A> mActorRef;", "modifier": "@NonNull\n    private final", "type": "ActorRef<A>", "declarator": "mActorRef", "var_name": "mActorRef"}, {"original_string": "private int mState = STATE_NONE;", "modifier": "private", "type": "int", "declarator": "mState = STATE_NONE", "var_name": "mState"}, {"original_string": "@Nullable\n    private R mResult;", "modifier": "@Nullable\n    private", "type": "R", "declarator": "mResult", "var_name": "mResult"}, {"original_string": "@Nullable\n    private ActionHandle mActionHandle;", "modifier": "@Nullable\n    private", "type": "ActionHandle", "declarator": "mActionHandle", "var_name": "mActionHandle"}, {"original_string": "@Nullable\n    private CallResultListener mListener;", "modifier": "@Nullable\n    private", "type": "CallResultListener", "declarator": "mListener", "var_name": "mListener"}], "methods": [{"identifier": "ActorCallLoader", "parameters": "(@NonNull Context context, @NonNull ActorsThreads actors, @NonNull ActorRef<A> actorRef)", "modifiers": "public", "return": "", "signature": " ActorCallLoader(@NonNull Context context, @NonNull ActorsThreads actors, @NonNull ActorRef<A> actorRef)", "full_signature": "public  ActorCallLoader(@NonNull Context context, @NonNull ActorsThreads actors, @NonNull ActorRef<A> actorRef)", "class_method_signature": "ActorCallLoader.ActorCallLoader(@NonNull Context context, @NonNull ActorsThreads actors, @NonNull ActorRef<A> actorRef)", "testcase": false, "constructor": true}, {"identifier": "onStartLoading", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void onStartLoading()", "full_signature": "@Override protected void onStartLoading()", "class_method_signature": "ActorCallLoader.onStartLoading()", "testcase": false, "constructor": false}, {"identifier": "onForceLoad", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void onForceLoad()", "full_signature": "@Override protected void onForceLoad()", "class_method_signature": "ActorCallLoader.onForceLoad()", "testcase": false, "constructor": false}, {"identifier": "onReset", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void onReset()", "full_signature": "@Override protected void onReset()", "class_method_signature": "ActorCallLoader.onReset()", "testcase": false, "constructor": false}, {"identifier": "doLoad", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void doLoad()", "full_signature": "private void doLoad()", "class_method_signature": "ActorCallLoader.doLoad()", "testcase": false, "constructor": false}, {"identifier": "cleanUp", "parameters": "(@NonNull R result)", "modifiers": "protected", "return": "void", "signature": "void cleanUp(@NonNull R result)", "full_signature": "protected void cleanUp(@NonNull R result)", "class_method_signature": "ActorCallLoader.cleanUp(@NonNull R result)", "testcase": false, "constructor": false}, {"identifier": "doCall", "parameters": "(@NonNull ActorRef<A> ref)", "modifiers": "protected abstract", "return": "Promise<R>", "signature": "Promise<R> doCall(@NonNull ActorRef<A> ref)", "full_signature": "protected abstract Promise<R> doCall(@NonNull ActorRef<A> ref)", "class_method_signature": "ActorCallLoader.doCall(@NonNull ActorRef<A> ref)", "testcase": false, "constructor": false}], "file": "actors-library/src/main/java/com/truecaller/androidactors/ActorCallLoader.java"}, "focal_method": {"identifier": "onForceLoad", "parameters": "()", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void onForceLoad() {\n        if (mState == STATE_CALLING) {\n            // Will call listeners when it will be done\n            return;\n        }\n\n        doLoad();\n    }", "signature": "void onForceLoad()", "full_signature": "@Override protected void onForceLoad()", "class_method_signature": "ActorCallLoader.onForceLoad()", "testcase": false, "constructor": false, "invocations": ["doLoad"]}, "repository": {"repo_id": 99569378, "url": "https://github.com/truecaller/android-actors-library", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 20, "size": 352, "license": "licensed"}}