{"test_class": {"identifier": "UserUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Response response;", "modifier": "private static", "type": "Response", "declarator": "response", "var_name": "response"}, {"original_string": "public static CassandraOperationImpl cassandraOperationImpl;", "modifier": "public static", "type": "CassandraOperationImpl", "declarator": "cassandraOperationImpl", "var_name": "cassandraOperationImpl"}], "file": "actors/user/src/test/java/org/sunbird/user/util/UserUtilTest.java"}, "test_case": {"identifier": "generateUniqueStringSecondCharCheck", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void generateUniqueStringSecondCharCheck() {\n    String val = UserUtil.generateUniqueString(5);\n    assertTrue(val.length() == 5);\n    assertTrue(\n        NumberUtils.isNumber(val.substring(1, 2)) || NumberUtils.isNumber(val.substring(2, 3)));\n  }", "signature": "void generateUniqueStringSecondCharCheck()", "full_signature": "@Test public void generateUniqueStringSecondCharCheck()", "class_method_signature": "UserUtilTest.generateUniqueStringSecondCharCheck()", "testcase": true, "constructor": false, "invocations": ["generateUniqueString", "assertTrue", "length", "assertTrue", "isNumber", "substring", "isNumber", "substring"]}, "focal_class": {"identifier": "UserUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static CassandraOperation cassandraOperation = ServiceFactory.getInstance();", "modifier": "private static", "type": "CassandraOperation", "declarator": "cassandraOperation = ServiceFactory.getInstance()", "var_name": "cassandraOperation"}, {"original_string": "private static EncryptionService encryptionService =\n      org.sunbird.common.models.util.datasecurity.impl.ServiceFactory.getEncryptionServiceInstance(\n          null);", "modifier": "private static", "type": "EncryptionService", "declarator": "encryptionService =\n      org.sunbird.common.models.util.datasecurity.impl.ServiceFactory.getEncryptionServiceInstance(\n          null)", "var_name": "encryptionService"}, {"original_string": "private static DbInfo userDb = Util.dbInfoMap.get(JsonKey.USER_DB);", "modifier": "private static", "type": "DbInfo", "declarator": "userDb = Util.dbInfoMap.get(JsonKey.USER_DB)", "var_name": "userDb"}, {"original_string": "private static ObjectMapper mapper = new ObjectMapper();", "modifier": "private static", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}, {"original_string": "private static SSOManager ssoManager = SSOServiceFactory.getInstance();", "modifier": "private static", "type": "SSOManager", "declarator": "ssoManager = SSOServiceFactory.getInstance()", "var_name": "ssoManager"}, {"original_string": "private static PropertiesCache propertiesCache = PropertiesCache.getInstance();", "modifier": "private static", "type": "PropertiesCache", "declarator": "propertiesCache = PropertiesCache.getInstance()", "var_name": "propertiesCache"}, {"original_string": "private static DataMaskingService maskingService =\n      org.sunbird.common.models.util.datasecurity.impl.ServiceFactory.getMaskingServiceInstance(\n          null);", "modifier": "private static", "type": "DataMaskingService", "declarator": "maskingService =\n      org.sunbird.common.models.util.datasecurity.impl.ServiceFactory.getMaskingServiceInstance(\n          null)", "var_name": "maskingService"}, {"original_string": "private static DecryptionService decService =\n      org.sunbird.common.models.util.datasecurity.impl.ServiceFactory.getDecryptionServiceInstance(\n          null);", "modifier": "private static", "type": "DecryptionService", "declarator": "decService =\n      org.sunbird.common.models.util.datasecurity.impl.ServiceFactory.getDecryptionServiceInstance(\n          null)", "var_name": "decService"}, {"original_string": "private static UserService userService = UserServiceImpl.getInstance();", "modifier": "private static", "type": "UserService", "declarator": "userService = UserServiceImpl.getInstance()", "var_name": "userService"}, {"original_string": "private static UserExternalIdentityDao userExternalIdentityDao =\n      new UserExternalIdentityDaoImpl();", "modifier": "private static", "type": "UserExternalIdentityDao", "declarator": "userExternalIdentityDao =\n      new UserExternalIdentityDaoImpl()", "var_name": "userExternalIdentityDao"}, {"original_string": "private static ElasticSearchService esUtil = EsClientFactory.getInstance(JsonKey.REST);", "modifier": "private static", "type": "ElasticSearchService", "declarator": "esUtil = EsClientFactory.getInstance(JsonKey.REST)", "var_name": "esUtil"}, {"original_string": "static Random rand = new Random(System.nanoTime());", "modifier": "static", "type": "Random", "declarator": "rand = new Random(System.nanoTime())", "var_name": "rand"}, {"original_string": "private static final String[] alphabet =\n      new String[] {\n        \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\",\n        \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\n      };", "modifier": "private static final", "type": "String[]", "declarator": "alphabet =\n      new String[] {\n        \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\",\n        \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\n      }", "var_name": "alphabet"}, {"original_string": "private static String stripChars = \"0\";", "modifier": "private static", "type": "String", "declarator": "stripChars = \"0\"", "var_name": "stripChars"}, {"original_string": "private static BigDecimal largePrimeNumber = new BigDecimal(1679979167);", "modifier": "private static", "type": "BigDecimal", "declarator": "largePrimeNumber = new BigDecimal(1679979167)", "var_name": "largePrimeNumber"}], "methods": [{"identifier": "UserUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " UserUtil()", "full_signature": "private  UserUtil()", "class_method_signature": "UserUtil.UserUtil()", "testcase": false, "constructor": true}, {"identifier": "checkPhoneUniqueness", "parameters": "(User user, String opType)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "void", "signature": "void checkPhoneUniqueness(User user, String opType)", "full_signature": "@SuppressWarnings(\"unchecked\") public static void checkPhoneUniqueness(User user, String opType)", "class_method_signature": "UserUtil.checkPhoneUniqueness(User user, String opType)", "testcase": false, "constructor": false}, {"identifier": "checkPhoneUniqueness", "parameters": "(String phone)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "void", "signature": "void checkPhoneUniqueness(String phone)", "full_signature": "@SuppressWarnings(\"unchecked\") public static void checkPhoneUniqueness(String phone)", "class_method_signature": "UserUtil.checkPhoneUniqueness(String phone)", "testcase": false, "constructor": false}, {"identifier": "identifierExists", "parameters": "(String type, String value)", "modifiers": "public static", "return": "boolean", "signature": "boolean identifierExists(String type, String value)", "full_signature": "public static boolean identifierExists(String type, String value)", "class_method_signature": "UserUtil.identifierExists(String type, String value)", "testcase": false, "constructor": false}, {"identifier": "checkEmailUniqueness", "parameters": "(String email)", "modifiers": "public static", "return": "void", "signature": "void checkEmailUniqueness(String email)", "full_signature": "public static void checkEmailUniqueness(String email)", "class_method_signature": "UserUtil.checkEmailUniqueness(String email)", "testcase": false, "constructor": false}, {"identifier": "validateExternalIdsAndReturnActiveUser", "parameters": "(\n      Map<String, Object> userMap)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> validateExternalIdsAndReturnActiveUser(\n      Map<String, Object> userMap)", "full_signature": "public static Map<String, Object> validateExternalIdsAndReturnActiveUser(\n      Map<String, Object> userMap)", "class_method_signature": "UserUtil.validateExternalIdsAndReturnActiveUser(\n      Map<String, Object> userMap)", "testcase": false, "constructor": false}, {"identifier": "getUserFromExternalId", "parameters": "(Map<String, Object> userMap)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "Map<String, Object>", "signature": "Map<String, Object> getUserFromExternalId(Map<String, Object> userMap)", "full_signature": "@SuppressWarnings(\"unchecked\") public static Map<String, Object> getUserFromExternalId(Map<String, Object> userMap)", "class_method_signature": "UserUtil.getUserFromExternalId(Map<String, Object> userMap)", "testcase": false, "constructor": false}, {"identifier": "getUserIdFromExternalId", "parameters": "(Map<String, Object> userMap)", "modifiers": "public static", "return": "String", "signature": "String getUserIdFromExternalId(Map<String, Object> userMap)", "full_signature": "public static String getUserIdFromExternalId(Map<String, Object> userMap)", "class_method_signature": "UserUtil.getUserIdFromExternalId(Map<String, Object> userMap)", "testcase": false, "constructor": false}, {"identifier": "checkEmailUniqueness", "parameters": "(User user, String opType)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "void", "signature": "void checkEmailUniqueness(User user, String opType)", "full_signature": "@SuppressWarnings(\"unchecked\") public static void checkEmailUniqueness(User user, String opType)", "class_method_signature": "UserUtil.checkEmailUniqueness(User user, String opType)", "testcase": false, "constructor": false}, {"identifier": "validateUserPhoneEmailAndWebPages", "parameters": "(User user, String operationType)", "modifiers": "public static", "return": "void", "signature": "void validateUserPhoneEmailAndWebPages(User user, String operationType)", "full_signature": "public static void validateUserPhoneEmailAndWebPages(User user, String operationType)", "class_method_signature": "UserUtil.validateUserPhoneEmailAndWebPages(User user, String operationType)", "testcase": false, "constructor": false}, {"identifier": "getEncryptedData", "parameters": "(String value)", "modifiers": "public static", "return": "String", "signature": "String getEncryptedData(String value)", "full_signature": "public static String getEncryptedData(String value)", "class_method_signature": "UserUtil.getEncryptedData(String value)", "testcase": false, "constructor": false}, {"identifier": "copyAndConvertExternalIdsToLower", "parameters": "(\n      List<Map<String, String>> externalIds)", "modifiers": "public static", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> copyAndConvertExternalIdsToLower(\n      List<Map<String, String>> externalIds)", "full_signature": "public static List<Map<String, String>> copyAndConvertExternalIdsToLower(\n      List<Map<String, String>> externalIds)", "class_method_signature": "UserUtil.copyAndConvertExternalIdsToLower(\n      List<Map<String, String>> externalIds)", "testcase": false, "constructor": false}, {"identifier": "storeOriginalExternalIdsValue", "parameters": "(List<Map<String, String>> externalIds)", "modifiers": "public static", "return": "void", "signature": "void storeOriginalExternalIdsValue(List<Map<String, String>> externalIds)", "full_signature": "public static void storeOriginalExternalIdsValue(List<Map<String, String>> externalIds)", "class_method_signature": "UserUtil.storeOriginalExternalIdsValue(List<Map<String, String>> externalIds)", "testcase": false, "constructor": false}, {"identifier": "convertExternalIdsValueToLowerCase", "parameters": "(\n      List<Map<String, String>> externalIds)", "modifiers": "public static", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> convertExternalIdsValueToLowerCase(\n      List<Map<String, String>> externalIds)", "full_signature": "public static List<Map<String, String>> convertExternalIdsValueToLowerCase(\n      List<Map<String, String>> externalIds)", "class_method_signature": "UserUtil.convertExternalIdsValueToLowerCase(\n      List<Map<String, String>> externalIds)", "testcase": false, "constructor": false}, {"identifier": "checkExternalIdUniqueness", "parameters": "(User user, String operation)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "void", "signature": "void checkExternalIdUniqueness(User user, String operation)", "full_signature": "@SuppressWarnings(\"unchecked\") public static void checkExternalIdUniqueness(User user, String operation)", "class_method_signature": "UserUtil.checkExternalIdUniqueness(User user, String operation)", "testcase": false, "constructor": false}, {"identifier": "throwUserAlreadyExistsException", "parameters": "(\n      String externalId, String idType, String provider)", "modifiers": "private static", "return": "void", "signature": "void throwUserAlreadyExistsException(\n      String externalId, String idType, String provider)", "full_signature": "private static void throwUserAlreadyExistsException(\n      String externalId, String idType, String provider)", "class_method_signature": "UserUtil.throwUserAlreadyExistsException(\n      String externalId, String idType, String provider)", "testcase": false, "constructor": false}, {"identifier": "throwExternalIDNotFoundException", "parameters": "(\n      String externalId, String idType, String provider)", "modifiers": "private static", "return": "void", "signature": "void throwExternalIDNotFoundException(\n      String externalId, String idType, String provider)", "full_signature": "private static void throwExternalIDNotFoundException(\n      String externalId, String idType, String provider)", "class_method_signature": "UserUtil.throwExternalIDNotFoundException(\n      String externalId, String idType, String provider)", "testcase": false, "constructor": false}, {"identifier": "encryptData", "parameters": "(String value)", "modifiers": "public static", "return": "String", "signature": "String encryptData(String value)", "full_signature": "public static String encryptData(String value)", "class_method_signature": "UserUtil.encryptData(String value)", "testcase": false, "constructor": false}, {"identifier": "updatePassword", "parameters": "(Map<String, Object> userMap)", "modifiers": "public static", "return": "boolean", "signature": "boolean updatePassword(Map<String, Object> userMap)", "full_signature": "public static boolean updatePassword(Map<String, Object> userMap)", "class_method_signature": "UserUtil.updatePassword(Map<String, Object> userMap)", "testcase": false, "constructor": false}, {"identifier": "addMaskEmailAndPhone", "parameters": "(Map<String, Object> userMap)", "modifiers": "public static", "return": "void", "signature": "void addMaskEmailAndPhone(Map<String, Object> userMap)", "full_signature": "public static void addMaskEmailAndPhone(Map<String, Object> userMap)", "class_method_signature": "UserUtil.addMaskEmailAndPhone(Map<String, Object> userMap)", "testcase": false, "constructor": false}, {"identifier": "addMaskEmailAndMaskPhone", "parameters": "(Map<String, Object> userMap)", "modifiers": "public static", "return": "void", "signature": "void addMaskEmailAndMaskPhone(Map<String, Object> userMap)", "full_signature": "public static void addMaskEmailAndMaskPhone(Map<String, Object> userMap)", "class_method_signature": "UserUtil.addMaskEmailAndMaskPhone(Map<String, Object> userMap)", "testcase": false, "constructor": false}, {"identifier": "encryptUserData", "parameters": "(Map<String, Object> userMap)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "Map<String, Object>", "signature": "Map<String, Object> encryptUserData(Map<String, Object> userMap)", "full_signature": "@SuppressWarnings(\"unchecked\") public static Map<String, Object> encryptUserData(Map<String, Object> userMap)", "class_method_signature": "UserUtil.encryptUserData(Map<String, Object> userMap)", "testcase": false, "constructor": false}, {"identifier": "checkProfileCompleteness", "parameters": "(Map<String, Object> userMap)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> checkProfileCompleteness(Map<String, Object> userMap)", "full_signature": "public static Map<String, Object> checkProfileCompleteness(Map<String, Object> userMap)", "class_method_signature": "UserUtil.checkProfileCompleteness(Map<String, Object> userMap)", "testcase": false, "constructor": false}, {"identifier": "setUserDefaultValueForV3", "parameters": "(Map<String, Object> userMap)", "modifiers": "public static", "return": "void", "signature": "void setUserDefaultValueForV3(Map<String, Object> userMap)", "full_signature": "public static void setUserDefaultValueForV3(Map<String, Object> userMap)", "class_method_signature": "UserUtil.setUserDefaultValueForV3(Map<String, Object> userMap)", "testcase": false, "constructor": false}, {"identifier": "generateUniqueString", "parameters": "(int length)", "modifiers": "public static", "return": "String", "signature": "String generateUniqueString(int length)", "full_signature": "public static String generateUniqueString(int length)", "class_method_signature": "UserUtil.generateUniqueString(int length)", "testcase": false, "constructor": false}, {"identifier": "baseN", "parameters": "(BigDecimal num, int base)", "modifiers": "private static", "return": "String", "signature": "String baseN(BigDecimal num, int base)", "full_signature": "private static String baseN(BigDecimal num, int base)", "class_method_signature": "UserUtil.baseN(BigDecimal num, int base)", "testcase": false, "constructor": false}, {"identifier": "setUserDefaultValue", "parameters": "(Map<String, Object> userMap, String callerId)", "modifiers": "public static", "return": "void", "signature": "void setUserDefaultValue(Map<String, Object> userMap, String callerId)", "full_signature": "public static void setUserDefaultValue(Map<String, Object> userMap, String callerId)", "class_method_signature": "UserUtil.setUserDefaultValue(Map<String, Object> userMap, String callerId)", "testcase": false, "constructor": false}, {"identifier": "getUsername", "parameters": "(String name)", "modifiers": "private static", "return": "String", "signature": "String getUsername(String name)", "full_signature": "private static String getUsername(String name)", "class_method_signature": "UserUtil.getUsername(String name)", "testcase": false, "constructor": false}, {"identifier": "validateExternalIds", "parameters": "(User user, String operationType)", "modifiers": "public static", "return": "void", "signature": "void validateExternalIds(User user, String operationType)", "full_signature": "public static void validateExternalIds(User user, String operationType)", "class_method_signature": "UserUtil.validateExternalIds(User user, String operationType)", "testcase": false, "constructor": false}, {"identifier": "checkEmailSameOrDiff", "parameters": "(\n      Map<String, Object> userRequestMap, Map<String, Object> userDbRecord)", "modifiers": "public static", "return": "void", "signature": "void checkEmailSameOrDiff(\n      Map<String, Object> userRequestMap, Map<String, Object> userDbRecord)", "full_signature": "public static void checkEmailSameOrDiff(\n      Map<String, Object> userRequestMap, Map<String, Object> userDbRecord)", "class_method_signature": "UserUtil.checkEmailSameOrDiff(\n      Map<String, Object> userRequestMap, Map<String, Object> userDbRecord)", "testcase": false, "constructor": false}, {"identifier": "checkExternalID", "parameters": "(\n      List<Map<String, String>> dbResExternalIds, Map<String, String> extIdMap)", "modifiers": "private static", "return": "Optional<Map<String, String>>", "signature": "Optional<Map<String, String>> checkExternalID(\n      List<Map<String, String>> dbResExternalIds, Map<String, String> extIdMap)", "full_signature": "private static Optional<Map<String, String>> checkExternalID(\n      List<Map<String, String>> dbResExternalIds, Map<String, String> extIdMap)", "class_method_signature": "UserUtil.checkExternalID(\n      List<Map<String, String>> dbResExternalIds, Map<String, String> extIdMap)", "testcase": false, "constructor": false}, {"identifier": "validateUserExternalIds", "parameters": "(User user)", "modifiers": "public static", "return": "void", "signature": "void validateUserExternalIds(User user)", "full_signature": "public static void validateUserExternalIds(User user)", "class_method_signature": "UserUtil.validateUserExternalIds(User user)", "testcase": false, "constructor": false}, {"identifier": "getUserExternalIds", "parameters": "(String userId)", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> getUserExternalIds(String userId)", "full_signature": "@SuppressWarnings(\"unchecked\") private static List<Map<String, String>> getUserExternalIds(String userId)", "class_method_signature": "UserUtil.getUserExternalIds(String userId)", "testcase": false, "constructor": false}, {"identifier": "getActiveUserOrgDetails", "parameters": "(String userId)", "modifiers": "public static", "return": "List<Map<String, Object>>", "signature": "List<Map<String, Object>> getActiveUserOrgDetails(String userId)", "full_signature": "public static List<Map<String, Object>> getActiveUserOrgDetails(String userId)", "class_method_signature": "UserUtil.getActiveUserOrgDetails(String userId)", "testcase": false, "constructor": false}, {"identifier": "getUserOrgDetails", "parameters": "(boolean isdeleted, String userId)", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "List<Map<String, Object>>", "signature": "List<Map<String, Object>> getUserOrgDetails(boolean isdeleted, String userId)", "full_signature": "@SuppressWarnings(\"unchecked\") private static List<Map<String, Object>> getUserOrgDetails(boolean isdeleted, String userId)", "class_method_signature": "UserUtil.getUserOrgDetails(boolean isdeleted, String userId)", "testcase": false, "constructor": false}, {"identifier": "getAllUserOrgDetails", "parameters": "(String userId)", "modifiers": "public static", "return": "List<Map<String, Object>>", "signature": "List<Map<String, Object>> getAllUserOrgDetails(String userId)", "full_signature": "public static List<Map<String, Object>> getAllUserOrgDetails(String userId)", "class_method_signature": "UserUtil.getAllUserOrgDetails(String userId)", "testcase": false, "constructor": false}, {"identifier": "toLower", "parameters": "(Map<String, Object> userMap)", "modifiers": "public static", "return": "void", "signature": "void toLower(Map<String, Object> userMap)", "full_signature": "public static void toLower(Map<String, Object> userMap)", "class_method_signature": "UserUtil.toLower(Map<String, Object> userMap)", "testcase": false, "constructor": false}], "file": "actors/user/src/main/java/org/sunbird/user/util/UserUtil.java"}, "focal_method": {"identifier": "generateUniqueString", "parameters": "(int length)", "modifiers": "public static", "return": "String", "body": "public static String generateUniqueString(int length) {\n    int totalChars = alphabet.length;\n    BigDecimal exponent = BigDecimal.valueOf(totalChars);\n    exponent = exponent.pow(length);\n    String code = \"\";\n    BigDecimal number = new BigDecimal(rand.nextInt(1000000));\n    BigDecimal num = number.multiply(largePrimeNumber).remainder(exponent);\n    code = baseN(num, totalChars);\n    int codeLenght = code.length();\n    if (codeLenght < length) {\n      for (int i = codeLenght; i < length; i++) {\n        code = code + alphabet[rand.nextInt(totalChars - 1)];\n      }\n    }\n    if (NumberUtils.isNumber(code.substring(1, 2)) || NumberUtils.isNumber(code.substring(2, 3))) {\n      return code;\n    } else {\n      code = code.substring(0, 1) + alphabet[rand.nextInt(9)] + code.substring(2);\n      return code;\n    }\n  }", "signature": "String generateUniqueString(int length)", "full_signature": "public static String generateUniqueString(int length)", "class_method_signature": "UserUtil.generateUniqueString(int length)", "testcase": false, "constructor": false, "invocations": ["valueOf", "pow", "nextInt", "remainder", "multiply", "baseN", "length", "nextInt", "isNumber", "substring", "isNumber", "substring", "substring", "nextInt", "substring"]}, "repository": {"repo_id": 96122408, "url": "https://github.com/project-sunbird/sunbird-lms-mw", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 5, "size": 15380, "license": "licensed"}}