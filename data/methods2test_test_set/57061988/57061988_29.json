{"test_class": {"identifier": "UserGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private UserGenerator subject;", "modifier": "private", "type": "UserGenerator", "declarator": "subject", "var_name": "subject"}, {"original_string": "private StringGenerationParameters passwordParameters;", "modifier": "private", "type": "StringGenerationParameters", "declarator": "passwordParameters", "var_name": "passwordParameters"}], "file": "components/credentials/src/test/java/org/cloudfoundry/credhub/generators/UserGeneratorTest.java"}, "test_case": {"identifier": "generateCredential_givenAUsernameAndPasswordParameters_generatesUserWithUsernameAndGeneratedPassword", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void generateCredential_givenAUsernameAndPasswordParameters_generatesUserWithUsernameAndGeneratedPassword() {\n    passwordParameters.setUsername(\"test-user\");\n    final UserCredentialValue user = subject.generateCredential(passwordParameters);\n\n    assertThat(user.getUsername(), equalTo(\"test-user\"));\n    assertThat(user.getPassword(), equalTo(\"fake-generated-password\"));\n    assertThat(user.getSalt(), equalTo(\"fake-generated-salt\"));\n  }", "signature": "void generateCredential_givenAUsernameAndPasswordParameters_generatesUserWithUsernameAndGeneratedPassword()", "full_signature": "@Test public void generateCredential_givenAUsernameAndPasswordParameters_generatesUserWithUsernameAndGeneratedPassword()", "class_method_signature": "UserGeneratorTest.generateCredential_givenAUsernameAndPasswordParameters_generatesUserWithUsernameAndGeneratedPassword()", "testcase": true, "constructor": false, "invocations": ["setUsername", "generateCredential", "assertThat", "getUsername", "equalTo", "assertThat", "getPassword", "equalTo", "assertThat", "getSalt", "equalTo"]}, "focal_class": {"identifier": "UserGenerator", "superclass": "", "interfaces": "implements CredentialGenerator<UserCredentialValue>", "fields": [{"original_string": "private final UsernameGenerator usernameGenerator;", "modifier": "private final", "type": "UsernameGenerator", "declarator": "usernameGenerator", "var_name": "usernameGenerator"}, {"original_string": "private final PasswordCredentialGenerator passwordGenerator;", "modifier": "private final", "type": "PasswordCredentialGenerator", "declarator": "passwordGenerator", "var_name": "passwordGenerator"}, {"original_string": "private final CryptSaltFactory cryptSaltFactory;", "modifier": "private final", "type": "CryptSaltFactory", "declarator": "cryptSaltFactory", "var_name": "cryptSaltFactory"}], "methods": [{"identifier": "UserGenerator", "parameters": "(\n    final UsernameGenerator usernameGenerator,\n    final PasswordCredentialGenerator passwordGenerator,\n    final CryptSaltFactory cryptSaltFactory\n  )", "modifiers": "@Autowired public", "return": "", "signature": " UserGenerator(\n    final UsernameGenerator usernameGenerator,\n    final PasswordCredentialGenerator passwordGenerator,\n    final CryptSaltFactory cryptSaltFactory\n  )", "full_signature": "@Autowired public  UserGenerator(\n    final UsernameGenerator usernameGenerator,\n    final PasswordCredentialGenerator passwordGenerator,\n    final CryptSaltFactory cryptSaltFactory\n  )", "class_method_signature": "UserGenerator.UserGenerator(\n    final UsernameGenerator usernameGenerator,\n    final PasswordCredentialGenerator passwordGenerator,\n    final CryptSaltFactory cryptSaltFactory\n  )", "testcase": false, "constructor": true}, {"identifier": "generateCredential", "parameters": "(final GenerationParameters p)", "modifiers": "@Override public", "return": "UserCredentialValue", "signature": "UserCredentialValue generateCredential(final GenerationParameters p)", "full_signature": "@Override public UserCredentialValue generateCredential(final GenerationParameters p)", "class_method_signature": "UserGenerator.generateCredential(final GenerationParameters p)", "testcase": false, "constructor": false}], "file": "components/credentials/src/main/java/org/cloudfoundry/credhub/generators/UserGenerator.java"}, "focal_method": {"identifier": "generateCredential", "parameters": "(final GenerationParameters p)", "modifiers": "@Override public", "return": "UserCredentialValue", "body": "@Override\n  public UserCredentialValue generateCredential(final GenerationParameters p) {\n    final StringGenerationParameters params = (StringGenerationParameters) p;\n    String username = params.getUsername();\n    if (username == null) {\n      username = usernameGenerator.generateCredential().getStringCredential();\n    }\n\n    final String password = passwordGenerator.generateCredential(params).getStringCredential();\n\n    return new UserCredentialValue(username, password,\n      cryptSaltFactory.generateSalt(password));\n  }", "signature": "UserCredentialValue generateCredential(final GenerationParameters p)", "full_signature": "@Override public UserCredentialValue generateCredential(final GenerationParameters p)", "class_method_signature": "UserGenerator.generateCredential(final GenerationParameters p)", "testcase": false, "constructor": false, "invocations": ["getUsername", "getStringCredential", "generateCredential", "getStringCredential", "generateCredential", "generateSalt"]}, "repository": {"repo_id": 57061988, "url": "https://github.com/cloudfoundry-incubator/credhub", "stars": 167, "created": "4/25/2016 5:30:51 PM +00:00", "updates": "2020-01-27T21:31:19+00:00", "fork": "False", "license": "licensed"}}