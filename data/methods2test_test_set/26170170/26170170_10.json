{"test_class": {"identifier": "GuestDataUpdateReceiverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mocked\n    private Message textMessage;", "modifier": "@Mocked\n    private", "type": "Message", "declarator": "textMessage", "var_name": "textMessage"}, {"original_string": "@Mocked\n    private GuestModelRepository guestModelRepository;", "modifier": "@Mocked\n    private", "type": "GuestModelRepository", "declarator": "guestModelRepository", "var_name": "guestModelRepository"}], "file": "booking/src/test/java/org/koenighotze/jee7hotel/booking/business/GuestDataUpdateReceiverTest.java"}, "test_case": {"identifier": "invalid_messages_are_not_stored", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invalid_messages_are_not_stored() throws JMSException {\n        GuestDataUpdateReceiver receiver = new GuestDataUpdateReceiver(guestModelRepository);\n\n        final String messagePayload = \"CRAP\";\n\n        new Expectations() {{\n            textMessage.getBody(String.class);\n            result = messagePayload;\n        }};\n\n        receiver.onMessage(textMessage);\n\n        new Verifications() {{\n            guestModelRepository.storeGuestModel(withInstanceOf(GuestModel.class));\n            times = 0;\n        }};\n    }", "signature": "void invalid_messages_are_not_stored()", "full_signature": "@Test public void invalid_messages_are_not_stored()", "class_method_signature": "GuestDataUpdateReceiverTest.invalid_messages_are_not_stored()", "testcase": true, "constructor": false, "invocations": ["getBody", "onMessage", "storeGuestModel", "withInstanceOf"]}, "focal_class": {"identifier": "GuestDataUpdateReceiver", "superclass": "", "interfaces": "implements MessageListener", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(GuestDataUpdateReceiver.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(GuestDataUpdateReceiver.class.getName())", "var_name": "LOGGER"}, {"original_string": "public static final String GUEST_EVENT_TOPIC = \"java:global/jms/topic/guest\";", "modifier": "public static final", "type": "String", "declarator": "GUEST_EVENT_TOPIC = \"java:global/jms/topic/guest\"", "var_name": "GUEST_EVENT_TOPIC"}, {"original_string": "private GuestModelRepository guestModelRepository;", "modifier": "private", "type": "GuestModelRepository", "declarator": "guestModelRepository", "var_name": "guestModelRepository"}], "methods": [{"identifier": "GuestDataUpdateReceiver", "parameters": "()", "modifiers": "public", "return": "", "signature": " GuestDataUpdateReceiver()", "full_signature": "public  GuestDataUpdateReceiver()", "class_method_signature": "GuestDataUpdateReceiver.GuestDataUpdateReceiver()", "testcase": false, "constructor": true}, {"identifier": "GuestDataUpdateReceiver", "parameters": "(GuestModelRepository guestModelRepository)", "modifiers": "@Inject public", "return": "", "signature": " GuestDataUpdateReceiver(GuestModelRepository guestModelRepository)", "full_signature": "@Inject public  GuestDataUpdateReceiver(GuestModelRepository guestModelRepository)", "class_method_signature": "GuestDataUpdateReceiver.GuestDataUpdateReceiver(GuestModelRepository guestModelRepository)", "testcase": false, "constructor": true}, {"identifier": "onMessage", "parameters": "(Message message)", "modifiers": "@Override public", "return": "void", "signature": "void onMessage(Message message)", "full_signature": "@Override public void onMessage(Message message)", "class_method_signature": "GuestDataUpdateReceiver.onMessage(Message message)", "testcase": false, "constructor": false}], "file": "booking/src/main/java/org/koenighotze/jee7hotel/booking/business/GuestDataUpdateReceiver.java"}, "focal_method": {"identifier": "onMessage", "parameters": "(Message message)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onMessage(Message message) {\n        LOGGER.info(() -> \"Received message \" + message);\n\n        try {\n            GuestModel guest = JAXB.unmarshal(new StringReader(message.getBody(String.class)), GuestModel.class);\n            LOGGER.info(() -> \"Received \" + guest);\n\n            guestModelRepository.storeGuestModel(guest);\n        } catch (DataBindingException | JMSException e) {\n            LOGGER.log(SEVERE, \"Cannot handle message \" + message, e);\n        }\n    }", "signature": "void onMessage(Message message)", "full_signature": "@Override public void onMessage(Message message)", "class_method_signature": "GuestDataUpdateReceiver.onMessage(Message message)", "testcase": false, "constructor": false, "invocations": ["info", "unmarshal", "getBody", "info", "storeGuestModel", "log"]}, "repository": {"repo_id": 26170170, "url": "https://github.com/koenighotze/Hotel-Reservation-Tool", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 1659, "license": "licensed"}}