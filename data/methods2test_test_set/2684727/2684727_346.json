{"test_class": {"identifier": "GraphsInteractorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String LABEL_1 = \"label 1\";", "modifier": "private static final", "type": "String", "declarator": "LABEL_1 = \"label 1\"", "var_name": "LABEL_1"}, {"original_string": "private static final String LABEL_2 = \"label 2\";", "modifier": "private static final", "type": "String", "declarator": "LABEL_2 = \"label 2\"", "var_name": "LABEL_2"}, {"original_string": "private static final String LABEL_3 = \"label 3\";", "modifier": "private static final", "type": "String", "declarator": "LABEL_3 = \"label 3\"", "var_name": "LABEL_3"}, {"original_string": "private static final String LABEL_4 = \"label 4\";", "modifier": "private static final", "type": "String", "declarator": "LABEL_4 = \"label 4\"", "var_name": "LABEL_4"}, {"original_string": "private static final String LABEL_5 = \"label 5\";", "modifier": "private static final", "type": "String", "declarator": "LABEL_5 = \"label 5\"", "var_name": "LABEL_5"}, {"original_string": "private static final String LABEL_6 = \"label 6\";", "modifier": "private static final", "type": "String", "declarator": "LABEL_6 = \"label 6\"", "var_name": "LABEL_6"}, {"original_string": "private static final String LABEL_7 = \"label 7\";", "modifier": "private static final", "type": "String", "declarator": "LABEL_7 = \"label 7\"", "var_name": "LABEL_7"}, {"original_string": "private static final String LABEL_8 = \"label 8\";", "modifier": "private static final", "type": "String", "declarator": "LABEL_8 = \"label 8\"", "var_name": "LABEL_8"}, {"original_string": "GraphsInteractor interactor;", "modifier": "", "type": "GraphsInteractor", "declarator": "interactor", "var_name": "interactor"}, {"original_string": "@Mock\n    GroupingController groupingController;", "modifier": "@Mock", "type": "GroupingController", "declarator": "groupingController", "var_name": "groupingController"}, {"original_string": "@Mock\n    Context context;", "modifier": "@Mock", "type": "Context", "declarator": "context", "var_name": "context"}, {"original_string": "@Mock\n    Trip trip;", "modifier": "@Mock", "type": "Trip", "declarator": "trip", "var_name": "trip"}, {"original_string": "private List<LabeledGraphEntry> entries;", "modifier": "private", "type": "List<LabeledGraphEntry>", "declarator": "entries", "var_name": "entries"}], "file": "app/src/test/java/co/smartreceipts/android/graphs/GraphsInteractorTest.java"}, "test_case": {"identifier": "getSumByReimbursementNormal", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getSumByReimbursementNormal() {\n        entries = new ArrayList<>();\n        entries.add(new LabeledGraphEntry(15, context.getString(R.string.graphs_label_non_reimbursable)));\n        entries.add(new LabeledGraphEntry(5, context.getString(R.string.graphs_label_reimbursable)));\n\n        when(groupingController.getSummationByReimbursementAsGraphEntries(trip)).thenReturn(Single.just(entries));\n\n        List<LabeledGraphEntry> sortedEntries = new ArrayList<>(entries);\n        Collections.sort(sortedEntries);\n\n        interactor.getSummationByReimbursement(trip)\n                .test()\n                .assertNoErrors()\n                .assertComplete()\n                .assertResult(GraphUiIndicator.summationByReimbursement(sortedEntries));\n\n    }", "signature": "void getSumByReimbursementNormal()", "full_signature": "@Test public void getSumByReimbursementNormal()", "class_method_signature": "GraphsInteractorTest.getSumByReimbursementNormal()", "testcase": true, "constructor": false, "invocations": ["add", "getString", "add", "getString", "thenReturn", "when", "getSummationByReimbursementAsGraphEntries", "just", "sort", "assertResult", "assertComplete", "assertNoErrors", "test", "getSummationByReimbursement", "summationByReimbursement"]}, "focal_class": {"identifier": "GraphsInteractor", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final static int PAYMENT_METHODS_MAX_COUNT = 4;", "modifier": "public final static", "type": "int", "declarator": "PAYMENT_METHODS_MAX_COUNT = 4", "var_name": "PAYMENT_METHODS_MAX_COUNT"}, {"original_string": "private final GroupingController groupingController;", "modifier": "private final", "type": "GroupingController", "declarator": "groupingController", "var_name": "groupingController"}, {"original_string": "private final Context context;", "modifier": "private final", "type": "Context", "declarator": "context", "var_name": "context"}], "methods": [{"identifier": "GraphsInteractor", "parameters": "(Context context, GroupingController groupingController)", "modifiers": "@Inject public", "return": "", "signature": " GraphsInteractor(Context context, GroupingController groupingController)", "full_signature": "@Inject public  GraphsInteractor(Context context, GroupingController groupingController)", "class_method_signature": "GraphsInteractor.GraphsInteractor(Context context, GroupingController groupingController)", "testcase": false, "constructor": true}, {"identifier": "getSummationByCategories", "parameters": "(Trip trip)", "modifiers": "public", "return": "Maybe<GraphUiIndicator>", "signature": "Maybe<GraphUiIndicator> getSummationByCategories(Trip trip)", "full_signature": "public Maybe<GraphUiIndicator> getSummationByCategories(Trip trip)", "class_method_signature": "GraphsInteractor.getSummationByCategories(Trip trip)", "testcase": false, "constructor": false}, {"identifier": "getSummationByReimbursement", "parameters": "(Trip trip)", "modifiers": "public", "return": "Maybe<GraphUiIndicator>", "signature": "Maybe<GraphUiIndicator> getSummationByReimbursement(Trip trip)", "full_signature": "public Maybe<GraphUiIndicator> getSummationByReimbursement(Trip trip)", "class_method_signature": "GraphsInteractor.getSummationByReimbursement(Trip trip)", "testcase": false, "constructor": false}, {"identifier": "getSummationByPaymentMethod", "parameters": "(Trip trip)", "modifiers": "public", "return": "Maybe<GraphUiIndicator>", "signature": "Maybe<GraphUiIndicator> getSummationByPaymentMethod(Trip trip)", "full_signature": "public Maybe<GraphUiIndicator> getSummationByPaymentMethod(Trip trip)", "class_method_signature": "GraphsInteractor.getSummationByPaymentMethod(Trip trip)", "testcase": false, "constructor": false}, {"identifier": "getSummationByDate", "parameters": "(Trip trip)", "modifiers": "public", "return": "Maybe<GraphUiIndicator>", "signature": "Maybe<GraphUiIndicator> getSummationByDate(Trip trip)", "full_signature": "public Maybe<GraphUiIndicator> getSummationByDate(Trip trip)", "class_method_signature": "GraphsInteractor.getSummationByDate(Trip trip)", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/graphs/GraphsInteractor.java"}, "focal_method": {"identifier": "getSummationByReimbursement", "parameters": "(Trip trip)", "modifiers": "public", "return": "Maybe<GraphUiIndicator>", "body": "public Maybe<GraphUiIndicator> getSummationByReimbursement(Trip trip) {\n        return groupingController.getSummationByReimbursementAsGraphEntries(trip)\n                .filter(graphEntries -> graphEntries.size() == 2) // no need to show this chart if user have all receipts (non)reimbursable\n                .map(GraphUiIndicator::summationByReimbursement)\n                .observeOn(AndroidSchedulers.mainThread());\n    }", "signature": "Maybe<GraphUiIndicator> getSummationByReimbursement(Trip trip)", "full_signature": "public Maybe<GraphUiIndicator> getSummationByReimbursement(Trip trip)", "class_method_signature": "GraphsInteractor.getSummationByReimbursement(Trip trip)", "testcase": false, "constructor": false, "invocations": ["observeOn", "map", "filter", "getSummationByReimbursementAsGraphEntries", "size", "mainThread"]}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}