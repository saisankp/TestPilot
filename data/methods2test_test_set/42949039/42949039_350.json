{"test_class": {"identifier": "SearchIndexTypeDaoHelperTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/SearchIndexTypeDaoHelperTest.java"}, "test_case": {"identifier": "testGetSearchIndexTypeEntity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSearchIndexTypeEntity()\n    {\n        // Create and persist database entities required for testing.\n        SearchIndexTypeEntity searchIndexTypeEntity = searchIndexTypeDaoTestHelper.createSearchIndexTypeEntity(SEARCH_INDEX_TYPE);\n\n        // Retrieve the search index type entity.\n        assertEquals(searchIndexTypeEntity, searchIndexTypeDaoHelper.getSearchIndexTypeEntity(SEARCH_INDEX_TYPE));\n\n        // Test case insensitivity of the search index type code.\n        assertEquals(searchIndexTypeEntity, searchIndexTypeDaoHelper.getSearchIndexTypeEntity(SEARCH_INDEX_TYPE.toUpperCase()));\n        assertEquals(searchIndexTypeEntity, searchIndexTypeDaoHelper.getSearchIndexTypeEntity(SEARCH_INDEX_TYPE.toLowerCase()));\n\n        // Try to retrieve a non existing search index type.\n        try\n        {\n            searchIndexTypeDaoHelper.getSearchIndexTypeEntity(I_DO_NOT_EXIST);\n            fail();\n        }\n        catch (ObjectNotFoundException e)\n        {\n            assertEquals(String.format(\"Search index type with code \\\"%s\\\" doesn't exist.\", I_DO_NOT_EXIST), e.getMessage());\n        }\n    }", "signature": "void testGetSearchIndexTypeEntity()", "full_signature": "@Test public void testGetSearchIndexTypeEntity()", "class_method_signature": "SearchIndexTypeDaoHelperTest.testGetSearchIndexTypeEntity()", "testcase": true, "constructor": false, "invocations": ["createSearchIndexTypeEntity", "assertEquals", "getSearchIndexTypeEntity", "assertEquals", "getSearchIndexTypeEntity", "toUpperCase", "assertEquals", "getSearchIndexTypeEntity", "toLowerCase", "getSearchIndexTypeEntity", "fail", "assertEquals", "format", "getMessage"]}, "focal_class": {"identifier": "SearchIndexTypeDaoHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private SearchIndexTypeDao searchIndexTypeDao;", "modifier": "@Autowired\n    private", "type": "SearchIndexTypeDao", "declarator": "searchIndexTypeDao", "var_name": "searchIndexTypeDao"}], "methods": [{"identifier": "getSearchIndexTypeEntity", "parameters": "(String code)", "modifiers": "public", "return": "SearchIndexTypeEntity", "signature": "SearchIndexTypeEntity getSearchIndexTypeEntity(String code)", "full_signature": "public SearchIndexTypeEntity getSearchIndexTypeEntity(String code)", "class_method_signature": "SearchIndexTypeDaoHelper.getSearchIndexTypeEntity(String code)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/SearchIndexTypeDaoHelper.java"}, "focal_method": {"identifier": "getSearchIndexTypeEntity", "parameters": "(String code)", "modifiers": "public", "return": "SearchIndexTypeEntity", "body": "public SearchIndexTypeEntity getSearchIndexTypeEntity(String code) throws ObjectNotFoundException\n    {\n        SearchIndexTypeEntity searchIndexTypeEntity = searchIndexTypeDao.getSearchIndexTypeByCode(code);\n\n        if (searchIndexTypeEntity == null)\n        {\n            throw new ObjectNotFoundException(String.format(\"Search index type with code \\\"%s\\\" doesn't exist.\", code));\n        }\n\n        return searchIndexTypeEntity;\n    }", "signature": "SearchIndexTypeEntity getSearchIndexTypeEntity(String code)", "full_signature": "public SearchIndexTypeEntity getSearchIndexTypeEntity(String code)", "class_method_signature": "SearchIndexTypeDaoHelper.getSearchIndexTypeEntity(String code)", "testcase": false, "constructor": false, "invocations": ["getSearchIndexTypeByCode", "format"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}