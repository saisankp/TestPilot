{"test_class": {"identifier": "EditableStubTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "EditableStub tested = new EditableStub(\"test\");", "modifier": "", "type": "EditableStub", "declarator": "tested = new EditableStub(\"test\")", "var_name": "tested"}], "file": "lib/src/test/java/de/jodamob/mockitoid/EditableStubTest.java"}, "test_case": {"identifier": "delete", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void delete() {\n        assertThat(tested.delete(0,2).toString()).isEqualTo(\"st\");\n    }", "signature": "void delete()", "full_signature": "@Test public void delete()", "class_method_signature": "EditableStubTest.delete()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "toString", "delete"]}, "focal_class": {"identifier": "EditableStub", "superclass": "", "interfaces": "implements Editable", "fields": [{"original_string": "private StringBuilder value;", "modifier": "private", "type": "StringBuilder", "declarator": "value", "var_name": "value"}, {"original_string": "private InputFilter[] filters = new InputFilter[0];", "modifier": "private", "type": "InputFilter[]", "declarator": "filters = new InputFilter[0]", "var_name": "filters"}], "methods": [{"identifier": "EditableStub", "parameters": "(String s)", "modifiers": "public", "return": "", "signature": " EditableStub(String s)", "full_signature": "public  EditableStub(String s)", "class_method_signature": "EditableStub.EditableStub(String s)", "testcase": false, "constructor": true}, {"identifier": "replace", "parameters": "(int st, int en, CharSequence source, int start, int end)", "modifiers": "@Override public", "return": "Editable", "signature": "Editable replace(int st, int en, CharSequence source, int start, int end)", "full_signature": "@Override public Editable replace(int st, int en, CharSequence source, int start, int end)", "class_method_signature": "EditableStub.replace(int st, int en, CharSequence source, int start, int end)", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "(int st, int en, CharSequence text)", "modifiers": "@Override public", "return": "Editable", "signature": "Editable replace(int st, int en, CharSequence text)", "full_signature": "@Override public Editable replace(int st, int en, CharSequence text)", "class_method_signature": "EditableStub.replace(int st, int en, CharSequence text)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(int where, CharSequence text, int start, int end)", "modifiers": "@Override public", "return": "Editable", "signature": "Editable insert(int where, CharSequence text, int start, int end)", "full_signature": "@Override public Editable insert(int where, CharSequence text, int start, int end)", "class_method_signature": "EditableStub.insert(int where, CharSequence text, int start, int end)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(int where, CharSequence text)", "modifiers": "@Override public", "return": "Editable", "signature": "Editable insert(int where, CharSequence text)", "full_signature": "@Override public Editable insert(int where, CharSequence text)", "class_method_signature": "EditableStub.insert(int where, CharSequence text)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(int st, int en)", "modifiers": "@Override public", "return": "Editable", "signature": "Editable delete(int st, int en)", "full_signature": "@Override public Editable delete(int st, int en)", "class_method_signature": "EditableStub.delete(int st, int en)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(CharSequence text)", "modifiers": "@Override public", "return": "Editable", "signature": "Editable append(CharSequence text)", "full_signature": "@Override public Editable append(CharSequence text)", "class_method_signature": "EditableStub.append(CharSequence text)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(CharSequence text, int start, int end)", "modifiers": "@Override public", "return": "Editable", "signature": "Editable append(CharSequence text, int start, int end)", "full_signature": "@Override public Editable append(CharSequence text, int start, int end)", "class_method_signature": "EditableStub.append(CharSequence text, int start, int end)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(char text)", "modifiers": "@Override public", "return": "Editable", "signature": "Editable append(char text)", "full_signature": "@Override public Editable append(char text)", "class_method_signature": "EditableStub.append(char text)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "EditableStub.clear()", "testcase": false, "constructor": false}, {"identifier": "clearSpans", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clearSpans()", "full_signature": "@Override public void clearSpans()", "class_method_signature": "EditableStub.clearSpans()", "testcase": false, "constructor": false}, {"identifier": "setFilters", "parameters": "(InputFilter[] filters)", "modifiers": "@Override public", "return": "void", "signature": "void setFilters(InputFilter[] filters)", "full_signature": "@Override public void setFilters(InputFilter[] filters)", "class_method_signature": "EditableStub.setFilters(InputFilter[] filters)", "testcase": false, "constructor": false}, {"identifier": "getFilters", "parameters": "()", "modifiers": "@Override public", "return": "InputFilter[]", "signature": "InputFilter[] getFilters()", "full_signature": "@Override public InputFilter[] getFilters()", "class_method_signature": "EditableStub.getFilters()", "testcase": false, "constructor": false}, {"identifier": "getChars", "parameters": "(int start, int end, char[] dest, int destoff)", "modifiers": "@Override public", "return": "void", "signature": "void getChars(int start, int end, char[] dest, int destoff)", "full_signature": "@Override public void getChars(int start, int end, char[] dest, int destoff)", "class_method_signature": "EditableStub.getChars(int start, int end, char[] dest, int destoff)", "testcase": false, "constructor": false}, {"identifier": "setSpan", "parameters": "(Object what, int start, int end, int flags)", "modifiers": "@Override public", "return": "void", "signature": "void setSpan(Object what, int start, int end, int flags)", "full_signature": "@Override public void setSpan(Object what, int start, int end, int flags)", "class_method_signature": "EditableStub.setSpan(Object what, int start, int end, int flags)", "testcase": false, "constructor": false}, {"identifier": "removeSpan", "parameters": "(Object what)", "modifiers": "@Override public", "return": "void", "signature": "void removeSpan(Object what)", "full_signature": "@Override public void removeSpan(Object what)", "class_method_signature": "EditableStub.removeSpan(Object what)", "testcase": false, "constructor": false}, {"identifier": "getSpans", "parameters": "(int start, int end, Class<T> type)", "modifiers": "@Override public", "return": "T[]", "signature": "T[] getSpans(int start, int end, Class<T> type)", "full_signature": "@Override public T[] getSpans(int start, int end, Class<T> type)", "class_method_signature": "EditableStub.getSpans(int start, int end, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "getSpanStart", "parameters": "(Object tag)", "modifiers": "@Override public", "return": "int", "signature": "int getSpanStart(Object tag)", "full_signature": "@Override public int getSpanStart(Object tag)", "class_method_signature": "EditableStub.getSpanStart(Object tag)", "testcase": false, "constructor": false}, {"identifier": "getSpanEnd", "parameters": "(Object tag)", "modifiers": "@Override public", "return": "int", "signature": "int getSpanEnd(Object tag)", "full_signature": "@Override public int getSpanEnd(Object tag)", "class_method_signature": "EditableStub.getSpanEnd(Object tag)", "testcase": false, "constructor": false}, {"identifier": "getSpanFlags", "parameters": "(Object tag)", "modifiers": "@Override public", "return": "int", "signature": "int getSpanFlags(Object tag)", "full_signature": "@Override public int getSpanFlags(Object tag)", "class_method_signature": "EditableStub.getSpanFlags(Object tag)", "testcase": false, "constructor": false}, {"identifier": "nextSpanTransition", "parameters": "(int start, int limit, Class type)", "modifiers": "@Override public", "return": "int", "signature": "int nextSpanTransition(int start, int limit, Class type)", "full_signature": "@Override public int nextSpanTransition(int start, int limit, Class type)", "class_method_signature": "EditableStub.nextSpanTransition(int start, int limit, Class type)", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int length()", "full_signature": "@Override public int length()", "class_method_signature": "EditableStub.length()", "testcase": false, "constructor": false}, {"identifier": "charAt", "parameters": "(int index)", "modifiers": "@Override public", "return": "char", "signature": "char charAt(int index)", "full_signature": "@Override public char charAt(int index)", "class_method_signature": "EditableStub.charAt(int index)", "testcase": false, "constructor": false}, {"identifier": "subSequence", "parameters": "(int start, int end)", "modifiers": "@Override public", "return": "CharSequence", "signature": "CharSequence subSequence(int start, int end)", "full_signature": "@Override public CharSequence subSequence(int start, int end)", "class_method_signature": "EditableStub.subSequence(int start, int end)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "EditableStub.toString()", "testcase": false, "constructor": false}], "file": "lib/src/main/java/de/jodamob/mockitoid/EditableStub.java"}, "focal_method": {"identifier": "delete", "parameters": "(int st, int en)", "modifiers": "@Override public", "return": "Editable", "body": "@Override\n    public Editable delete(int st, int en) {\n        value.delete(st, en);\n        return this;\n    }", "signature": "Editable delete(int st, int en)", "full_signature": "@Override public Editable delete(int st, int en)", "class_method_signature": "EditableStub.delete(int st, int en)", "testcase": false, "constructor": false, "invocations": ["delete"]}, "repository": {"repo_id": 48366700, "url": "https://github.com/dpreussler/mockitoid", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 51, "size": 137, "license": "licensed"}}