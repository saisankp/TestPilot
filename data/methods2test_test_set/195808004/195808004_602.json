{"test_class": {"identifier": "TestLeafQueue", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Log LOG = LogFactory.getLog(TestLeafQueue.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(TestLeafQueue.class)", "var_name": "LOG"}, {"original_string": "private final RecordFactory recordFactory = \n      RecordFactoryProvider.getRecordFactory(null);", "modifier": "private final", "type": "RecordFactory", "declarator": "recordFactory = \n      RecordFactoryProvider.getRecordFactory(null)", "var_name": "recordFactory"}, {"original_string": "RMContext rmContext;", "modifier": "", "type": "RMContext", "declarator": "rmContext", "var_name": "rmContext"}, {"original_string": "RMContext spyRMContext;", "modifier": "", "type": "RMContext", "declarator": "spyRMContext", "var_name": "spyRMContext"}, {"original_string": "ResourceRequest amResourceRequest;", "modifier": "", "type": "ResourceRequest", "declarator": "amResourceRequest", "var_name": "amResourceRequest"}, {"original_string": "CapacityScheduler cs;", "modifier": "", "type": "CapacityScheduler", "declarator": "cs", "var_name": "cs"}, {"original_string": "CapacitySchedulerConfiguration csConf;", "modifier": "", "type": "CapacitySchedulerConfiguration", "declarator": "csConf", "var_name": "csConf"}, {"original_string": "CapacitySchedulerContext csContext;", "modifier": "", "type": "CapacitySchedulerContext", "declarator": "csContext", "var_name": "csContext"}, {"original_string": "CSQueue root;", "modifier": "", "type": "CSQueue", "declarator": "root", "var_name": "root"}, {"original_string": "Map<String, CSQueue> queues = new HashMap<String, CSQueue>();", "modifier": "", "type": "Map<String, CSQueue>", "declarator": "queues = new HashMap<String, CSQueue>()", "var_name": "queues"}, {"original_string": "final static int GB = 1024;", "modifier": "final static", "type": "int", "declarator": "GB = 1024", "var_name": "GB"}, {"original_string": "final static String DEFAULT_RACK = \"/default\";", "modifier": "final static", "type": "String", "declarator": "DEFAULT_RACK = \"/default\"", "var_name": "DEFAULT_RACK"}, {"original_string": "private final ResourceCalculator resourceCalculator = new DefaultResourceCalculator();", "modifier": "private final", "type": "ResourceCalculator", "declarator": "resourceCalculator = new DefaultResourceCalculator()", "var_name": "resourceCalculator"}, {"original_string": "private static final String A = \"a\";", "modifier": "private static final", "type": "String", "declarator": "A = \"a\"", "var_name": "A"}, {"original_string": "private static final String B = \"b\";", "modifier": "private static final", "type": "String", "declarator": "B = \"b\"", "var_name": "B"}, {"original_string": "private static final String C = \"c\";", "modifier": "private static final", "type": "String", "declarator": "C = \"c\"", "var_name": "C"}, {"original_string": "private static final String C1 = \"c1\";", "modifier": "private static final", "type": "String", "declarator": "C1 = \"c1\"", "var_name": "C1"}, {"original_string": "private static final String D = \"d\";", "modifier": "private static final", "type": "String", "declarator": "D = \"d\"", "var_name": "D"}, {"original_string": "private static final String E = \"e\";", "modifier": "private static final", "type": "String", "declarator": "E = \"e\"", "var_name": "E"}], "file": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/TestLeafQueue.java"}, "test_case": {"identifier": "testInheritedQueueAcls", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testInheritedQueueAcls() throws IOException {\n    UserGroupInformation user = UserGroupInformation.getCurrentUser();\n\n    LeafQueue a = stubLeafQueue((LeafQueue)queues.get(A));\n    LeafQueue b = stubLeafQueue((LeafQueue)queues.get(B));\n    ParentQueue c = (ParentQueue)queues.get(C);\n    LeafQueue c1 = stubLeafQueue((LeafQueue)queues.get(C1));\n\n    assertFalse(root.hasAccess(QueueACL.SUBMIT_APPLICATIONS, user));\n    assertTrue(a.hasAccess(QueueACL.SUBMIT_APPLICATIONS, user));\n    assertTrue(b.hasAccess(QueueACL.SUBMIT_APPLICATIONS, user));\n    assertFalse(c.hasAccess(QueueACL.SUBMIT_APPLICATIONS, user));\n    assertFalse(c1.hasAccess(QueueACL.SUBMIT_APPLICATIONS, user));\n\n    assertTrue(hasQueueACL(\n          a.getQueueUserAclInfo(user), QueueACL.SUBMIT_APPLICATIONS));\n    assertTrue(hasQueueACL(\n          b.getQueueUserAclInfo(user), QueueACL.SUBMIT_APPLICATIONS));\n    assertFalse(hasQueueACL(\n          c.getQueueUserAclInfo(user), QueueACL.SUBMIT_APPLICATIONS));\n    assertFalse(hasQueueACL(\n          c1.getQueueUserAclInfo(user), QueueACL.SUBMIT_APPLICATIONS));\n\n  }", "signature": "void testInheritedQueueAcls()", "full_signature": "@Test public void testInheritedQueueAcls()", "class_method_signature": "TestLeafQueue.testInheritedQueueAcls()", "testcase": true, "constructor": false, "invocations": ["getCurrentUser", "stubLeafQueue", "get", "stubLeafQueue", "get", "get", "stubLeafQueue", "get", "assertFalse", "hasAccess", "assertTrue", "hasAccess", "assertTrue", "hasAccess", "assertFalse", "hasAccess", "assertFalse", "hasAccess", "assertTrue", "hasQueueACL", "getQueueUserAclInfo", "assertTrue", "hasQueueACL", "getQueueUserAclInfo", "assertFalse", "hasQueueACL", "getQueueUserAclInfo", "assertFalse", "hasQueueACL", "getQueueUserAclInfo"]}, "focal_class": {"identifier": "LeafQueue", "superclass": "extends AbstractCSQueue", "interfaces": "", "fields": [{"original_string": "private static final Log LOG = LogFactory.getLog(LeafQueue.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(LeafQueue.class)", "var_name": "LOG"}, {"original_string": "private float absoluteUsedCapacity = 0.0f;", "modifier": "private", "type": "float", "declarator": "absoluteUsedCapacity = 0.0f", "var_name": "absoluteUsedCapacity"}, {"original_string": "private int userLimit;", "modifier": "private", "type": "int", "declarator": "userLimit", "var_name": "userLimit"}, {"original_string": "private float userLimitFactor;", "modifier": "private", "type": "float", "declarator": "userLimitFactor", "var_name": "userLimitFactor"}, {"original_string": "protected int maxApplications;", "modifier": "protected", "type": "int", "declarator": "maxApplications", "var_name": "maxApplications"}, {"original_string": "protected int maxApplicationsPerUser;", "modifier": "protected", "type": "int", "declarator": "maxApplicationsPerUser", "var_name": "maxApplicationsPerUser"}, {"original_string": "private float maxAMResourcePerQueuePercent;", "modifier": "private", "type": "float", "declarator": "maxAMResourcePerQueuePercent", "var_name": "maxAMResourcePerQueuePercent"}, {"original_string": "private int nodeLocalityDelay;", "modifier": "private", "type": "int", "declarator": "nodeLocalityDelay", "var_name": "nodeLocalityDelay"}, {"original_string": "Set<FiCaSchedulerApp> activeApplications;", "modifier": "", "type": "Set<FiCaSchedulerApp>", "declarator": "activeApplications", "var_name": "activeApplications"}, {"original_string": "Map<ApplicationAttemptId, FiCaSchedulerApp> applicationAttemptMap = \n      new HashMap<ApplicationAttemptId, FiCaSchedulerApp>();", "modifier": "", "type": "Map<ApplicationAttemptId, FiCaSchedulerApp>", "declarator": "applicationAttemptMap = \n      new HashMap<ApplicationAttemptId, FiCaSchedulerApp>()", "var_name": "applicationAttemptMap"}, {"original_string": "Set<FiCaSchedulerApp> pendingApplications;", "modifier": "", "type": "Set<FiCaSchedulerApp>", "declarator": "pendingApplications", "var_name": "pendingApplications"}, {"original_string": "private float minimumAllocationFactor;", "modifier": "private", "type": "float", "declarator": "minimumAllocationFactor", "var_name": "minimumAllocationFactor"}, {"original_string": "private Map<String, User> users = new HashMap<String, User>();", "modifier": "private", "type": "Map<String, User>", "declarator": "users = new HashMap<String, User>()", "var_name": "users"}, {"original_string": "private final RecordFactory recordFactory = \n    RecordFactoryProvider.getRecordFactory(null);", "modifier": "private final", "type": "RecordFactory", "declarator": "recordFactory = \n    RecordFactoryProvider.getRecordFactory(null)", "var_name": "recordFactory"}, {"original_string": "private CapacitySchedulerContext scheduler;", "modifier": "private", "type": "CapacitySchedulerContext", "declarator": "scheduler", "var_name": "scheduler"}, {"original_string": "private final ActiveUsersManager activeUsersManager;", "modifier": "private final", "type": "ActiveUsersManager", "declarator": "activeUsersManager", "var_name": "activeUsersManager"}, {"original_string": "private Resource lastClusterResource = Resources.none();", "modifier": "private", "type": "Resource", "declarator": "lastClusterResource = Resources.none()", "var_name": "lastClusterResource"}, {"original_string": "private Resource absoluteCapacityResource = Resources.none();", "modifier": "private", "type": "Resource", "declarator": "absoluteCapacityResource = Resources.none()", "var_name": "absoluteCapacityResource"}, {"original_string": "private final QueueResourceLimitsInfo queueResourceLimitsInfo =\n      new QueueResourceLimitsInfo();", "modifier": "private final", "type": "QueueResourceLimitsInfo", "declarator": "queueResourceLimitsInfo =\n      new QueueResourceLimitsInfo()", "var_name": "queueResourceLimitsInfo"}, {"original_string": "private volatile ResourceLimits cachedResourceLimitsForHeadroom = null;", "modifier": "private volatile", "type": "ResourceLimits", "declarator": "cachedResourceLimitsForHeadroom = null", "var_name": "cachedResourceLimitsForHeadroom"}, {"original_string": "private static final CSAssignment NULL_ASSIGNMENT =\n      new CSAssignment(Resources.createResource(0, 0), NodeType.NODE_LOCAL);", "modifier": "private static final", "type": "CSAssignment", "declarator": "NULL_ASSIGNMENT =\n      new CSAssignment(Resources.createResource(0, 0), NodeType.NODE_LOCAL)", "var_name": "NULL_ASSIGNMENT"}, {"original_string": "private static final CSAssignment SKIP_ASSIGNMENT = new CSAssignment(true);", "modifier": "private static final", "type": "CSAssignment", "declarator": "SKIP_ASSIGNMENT = new CSAssignment(true)", "var_name": "SKIP_ASSIGNMENT"}], "methods": [{"identifier": "LeafQueue", "parameters": "(CapacitySchedulerContext cs, \n      String queueName, CSQueue parent, CSQueue old)", "modifiers": "public", "return": "", "signature": " LeafQueue(CapacitySchedulerContext cs, \n      String queueName, CSQueue parent, CSQueue old)", "full_signature": "public  LeafQueue(CapacitySchedulerContext cs, \n      String queueName, CSQueue parent, CSQueue old)", "class_method_signature": "LeafQueue.LeafQueue(CapacitySchedulerContext cs, \n      String queueName, CSQueue parent, CSQueue old)", "testcase": false, "constructor": true}, {"identifier": "setupQueueConfigs", "parameters": "(Resource clusterResource)", "modifiers": "protected synchronized", "return": "void", "signature": "void setupQueueConfigs(Resource clusterResource)", "full_signature": "protected synchronized void setupQueueConfigs(Resource clusterResource)", "class_method_signature": "LeafQueue.setupQueueConfigs(Resource clusterResource)", "testcase": false, "constructor": false}, {"identifier": "getQueuePath", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getQueuePath()", "full_signature": "@Override public String getQueuePath()", "class_method_signature": "LeafQueue.getQueuePath()", "testcase": false, "constructor": false}, {"identifier": "getMinimumAllocationFactor", "parameters": "()", "modifiers": "@Private public", "return": "float", "signature": "float getMinimumAllocationFactor()", "full_signature": "@Private public float getMinimumAllocationFactor()", "class_method_signature": "LeafQueue.getMinimumAllocationFactor()", "testcase": false, "constructor": false}, {"identifier": "getMaxAMResourcePerQueuePercent", "parameters": "()", "modifiers": "@Private public", "return": "float", "signature": "float getMaxAMResourcePerQueuePercent()", "full_signature": "@Private public float getMaxAMResourcePerQueuePercent()", "class_method_signature": "LeafQueue.getMaxAMResourcePerQueuePercent()", "testcase": false, "constructor": false}, {"identifier": "getMaxApplications", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxApplications()", "full_signature": "public int getMaxApplications()", "class_method_signature": "LeafQueue.getMaxApplications()", "testcase": false, "constructor": false}, {"identifier": "getMaxApplicationsPerUser", "parameters": "()", "modifiers": "public synchronized", "return": "int", "signature": "int getMaxApplicationsPerUser()", "full_signature": "public synchronized int getMaxApplicationsPerUser()", "class_method_signature": "LeafQueue.getMaxApplicationsPerUser()", "testcase": false, "constructor": false}, {"identifier": "getActiveUsersManager", "parameters": "()", "modifiers": "@Override public", "return": "ActiveUsersManager", "signature": "ActiveUsersManager getActiveUsersManager()", "full_signature": "@Override public ActiveUsersManager getActiveUsersManager()", "class_method_signature": "LeafQueue.getActiveUsersManager()", "testcase": false, "constructor": false}, {"identifier": "getChildQueues", "parameters": "()", "modifiers": "@Override public", "return": "List<CSQueue>", "signature": "List<CSQueue> getChildQueues()", "full_signature": "@Override public List<CSQueue> getChildQueues()", "class_method_signature": "LeafQueue.getChildQueues()", "testcase": false, "constructor": false}, {"identifier": "setUserLimit", "parameters": "(int userLimit)", "modifiers": "synchronized", "return": "void", "signature": "void setUserLimit(int userLimit)", "full_signature": "synchronized void setUserLimit(int userLimit)", "class_method_signature": "LeafQueue.setUserLimit(int userLimit)", "testcase": false, "constructor": false}, {"identifier": "setUserLimitFactor", "parameters": "(float userLimitFactor)", "modifiers": "synchronized", "return": "void", "signature": "void setUserLimitFactor(float userLimitFactor)", "full_signature": "synchronized void setUserLimitFactor(float userLimitFactor)", "class_method_signature": "LeafQueue.setUserLimitFactor(float userLimitFactor)", "testcase": false, "constructor": false}, {"identifier": "getNumApplications", "parameters": "()", "modifiers": "@Override public synchronized", "return": "int", "signature": "int getNumApplications()", "full_signature": "@Override public synchronized int getNumApplications()", "class_method_signature": "LeafQueue.getNumApplications()", "testcase": false, "constructor": false}, {"identifier": "getNumPendingApplications", "parameters": "()", "modifiers": "public synchronized", "return": "int", "signature": "int getNumPendingApplications()", "full_signature": "public synchronized int getNumPendingApplications()", "class_method_signature": "LeafQueue.getNumPendingApplications()", "testcase": false, "constructor": false}, {"identifier": "getNumActiveApplications", "parameters": "()", "modifiers": "public synchronized", "return": "int", "signature": "int getNumActiveApplications()", "full_signature": "public synchronized int getNumActiveApplications()", "class_method_signature": "LeafQueue.getNumActiveApplications()", "testcase": false, "constructor": false}, {"identifier": "getNumApplications", "parameters": "(String user)", "modifiers": "@Private public synchronized", "return": "int", "signature": "int getNumApplications(String user)", "full_signature": "@Private public synchronized int getNumApplications(String user)", "class_method_signature": "LeafQueue.getNumApplications(String user)", "testcase": false, "constructor": false}, {"identifier": "getNumPendingApplications", "parameters": "(String user)", "modifiers": "@Private public synchronized", "return": "int", "signature": "int getNumPendingApplications(String user)", "full_signature": "@Private public synchronized int getNumPendingApplications(String user)", "class_method_signature": "LeafQueue.getNumPendingApplications(String user)", "testcase": false, "constructor": false}, {"identifier": "getNumActiveApplications", "parameters": "(String user)", "modifiers": "@Private public synchronized", "return": "int", "signature": "int getNumActiveApplications(String user)", "full_signature": "@Private public synchronized int getNumActiveApplications(String user)", "class_method_signature": "LeafQueue.getNumActiveApplications(String user)", "testcase": false, "constructor": false}, {"identifier": "getNumContainers", "parameters": "()", "modifiers": "public synchronized", "return": "int", "signature": "int getNumContainers()", "full_signature": "public synchronized int getNumContainers()", "class_method_signature": "LeafQueue.getNumContainers()", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "()", "modifiers": "@Override public synchronized", "return": "QueueState", "signature": "QueueState getState()", "full_signature": "@Override public synchronized QueueState getState()", "class_method_signature": "LeafQueue.getState()", "testcase": false, "constructor": false}, {"identifier": "getUserLimit", "parameters": "()", "modifiers": "@Private public synchronized", "return": "int", "signature": "int getUserLimit()", "full_signature": "@Private public synchronized int getUserLimit()", "class_method_signature": "LeafQueue.getUserLimit()", "testcase": false, "constructor": false}, {"identifier": "getUserLimitFactor", "parameters": "()", "modifiers": "@Private public synchronized", "return": "float", "signature": "float getUserLimitFactor()", "full_signature": "@Private public synchronized float getUserLimitFactor()", "class_method_signature": "LeafQueue.getUserLimitFactor()", "testcase": false, "constructor": false}, {"identifier": "getQueueInfo", "parameters": "(\n      boolean includeChildQueues, boolean recursive)", "modifiers": "@Override public synchronized", "return": "QueueInfo", "signature": "QueueInfo getQueueInfo(\n      boolean includeChildQueues, boolean recursive)", "full_signature": "@Override public synchronized QueueInfo getQueueInfo(\n      boolean includeChildQueues, boolean recursive)", "class_method_signature": "LeafQueue.getQueueInfo(\n      boolean includeChildQueues, boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "getQueueUserAclInfo", "parameters": "(UserGroupInformation user)", "modifiers": "@Override public synchronized", "return": "List<QueueUserACLInfo>", "signature": "List<QueueUserACLInfo> getQueueUserAclInfo(UserGroupInformation user)", "full_signature": "@Override public synchronized List<QueueUserACLInfo> getQueueUserAclInfo(UserGroupInformation user)", "class_method_signature": "LeafQueue.getQueueUserAclInfo(UserGroupInformation user)", "testcase": false, "constructor": false}, {"identifier": "getNodeLocalityDelay", "parameters": "()", "modifiers": "@Private public", "return": "int", "signature": "int getNodeLocalityDelay()", "full_signature": "@Private public int getNodeLocalityDelay()", "class_method_signature": "LeafQueue.getNodeLocalityDelay()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "LeafQueue.toString()", "testcase": false, "constructor": false}, {"identifier": "setNodeLabelManager", "parameters": "(RMNodeLabelsManager mgr)", "modifiers": "@VisibleForTesting public synchronized", "return": "void", "signature": "void setNodeLabelManager(RMNodeLabelsManager mgr)", "full_signature": "@VisibleForTesting public synchronized void setNodeLabelManager(RMNodeLabelsManager mgr)", "class_method_signature": "LeafQueue.setNodeLabelManager(RMNodeLabelsManager mgr)", "testcase": false, "constructor": false}, {"identifier": "getUser", "parameters": "(String userName)", "modifiers": "@VisibleForTesting public synchronized", "return": "User", "signature": "User getUser(String userName)", "full_signature": "@VisibleForTesting public synchronized User getUser(String userName)", "class_method_signature": "LeafQueue.getUser(String userName)", "testcase": false, "constructor": false}, {"identifier": "getUsers", "parameters": "()", "modifiers": "public synchronized", "return": "ArrayList<UserInfo>", "signature": "ArrayList<UserInfo> getUsers()", "full_signature": "public synchronized ArrayList<UserInfo> getUsers()", "class_method_signature": "LeafQueue.getUsers()", "testcase": false, "constructor": false}, {"identifier": "reinitialize", "parameters": "(\n      CSQueue newlyParsedQueue, Resource clusterResource)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource)", "full_signature": "@Override public synchronized void reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource)", "class_method_signature": "LeafQueue.reinitialize(\n      CSQueue newlyParsedQueue, Resource clusterResource)", "testcase": false, "constructor": false}, {"identifier": "submitApplicationAttempt", "parameters": "(FiCaSchedulerApp application,\n      String userName)", "modifiers": "@Override public", "return": "void", "signature": "void submitApplicationAttempt(FiCaSchedulerApp application,\n      String userName)", "full_signature": "@Override public void submitApplicationAttempt(FiCaSchedulerApp application,\n      String userName)", "class_method_signature": "LeafQueue.submitApplicationAttempt(FiCaSchedulerApp application,\n      String userName)", "testcase": false, "constructor": false}, {"identifier": "submitApplication", "parameters": "(ApplicationId applicationId, String userName,\n      String queue)", "modifiers": "@Override public", "return": "void", "signature": "void submitApplication(ApplicationId applicationId, String userName,\n      String queue)", "full_signature": "@Override public void submitApplication(ApplicationId applicationId, String userName,\n      String queue)", "class_method_signature": "LeafQueue.submitApplication(ApplicationId applicationId, String userName,\n      String queue)", "testcase": false, "constructor": false}, {"identifier": "getAMResourceLimit", "parameters": "()", "modifiers": "public synchronized", "return": "Resource", "signature": "Resource getAMResourceLimit()", "full_signature": "public synchronized Resource getAMResourceLimit()", "class_method_signature": "LeafQueue.getAMResourceLimit()", "testcase": false, "constructor": false}, {"identifier": "getUserAMResourceLimit", "parameters": "()", "modifiers": "public synchronized", "return": "Resource", "signature": "Resource getUserAMResourceLimit()", "full_signature": "public synchronized Resource getUserAMResourceLimit()", "class_method_signature": "LeafQueue.getUserAMResourceLimit()", "testcase": false, "constructor": false}, {"identifier": "activateApplications", "parameters": "()", "modifiers": "private synchronized", "return": "void", "signature": "void activateApplications()", "full_signature": "private synchronized void activateApplications()", "class_method_signature": "LeafQueue.activateApplications()", "testcase": false, "constructor": false}, {"identifier": "addApplicationAttempt", "parameters": "(FiCaSchedulerApp application,\n      User user)", "modifiers": "private synchronized", "return": "void", "signature": "void addApplicationAttempt(FiCaSchedulerApp application,\n      User user)", "full_signature": "private synchronized void addApplicationAttempt(FiCaSchedulerApp application,\n      User user)", "class_method_signature": "LeafQueue.addApplicationAttempt(FiCaSchedulerApp application,\n      User user)", "testcase": false, "constructor": false}, {"identifier": "finishApplication", "parameters": "(ApplicationId application, String user)", "modifiers": "@Override public", "return": "void", "signature": "void finishApplication(ApplicationId application, String user)", "full_signature": "@Override public void finishApplication(ApplicationId application, String user)", "class_method_signature": "LeafQueue.finishApplication(ApplicationId application, String user)", "testcase": false, "constructor": false}, {"identifier": "finishApplicationAttempt", "parameters": "(FiCaSchedulerApp application, String queue)", "modifiers": "@Override public", "return": "void", "signature": "void finishApplicationAttempt(FiCaSchedulerApp application, String queue)", "full_signature": "@Override public void finishApplicationAttempt(FiCaSchedulerApp application, String queue)", "class_method_signature": "LeafQueue.finishApplicationAttempt(FiCaSchedulerApp application, String queue)", "testcase": false, "constructor": false}, {"identifier": "removeApplicationAttempt", "parameters": "(\n      FiCaSchedulerApp application, User user)", "modifiers": "public synchronized", "return": "void", "signature": "void removeApplicationAttempt(\n      FiCaSchedulerApp application, User user)", "full_signature": "public synchronized void removeApplicationAttempt(\n      FiCaSchedulerApp application, User user)", "class_method_signature": "LeafQueue.removeApplicationAttempt(\n      FiCaSchedulerApp application, User user)", "testcase": false, "constructor": false}, {"identifier": "getApplication", "parameters": "(\n      ApplicationAttemptId applicationAttemptId)", "modifiers": "private synchronized", "return": "FiCaSchedulerApp", "signature": "FiCaSchedulerApp getApplication(\n      ApplicationAttemptId applicationAttemptId)", "full_signature": "private synchronized FiCaSchedulerApp getApplication(\n      ApplicationAttemptId applicationAttemptId)", "class_method_signature": "LeafQueue.getApplication(\n      ApplicationAttemptId applicationAttemptId)", "testcase": false, "constructor": false}, {"identifier": "getRequestLabelSetByExpression", "parameters": "(\n      String labelExpression)", "modifiers": "private static", "return": "Set<String>", "signature": "Set<String> getRequestLabelSetByExpression(\n      String labelExpression)", "full_signature": "private static Set<String> getRequestLabelSetByExpression(\n      String labelExpression)", "class_method_signature": "LeafQueue.getRequestLabelSetByExpression(\n      String labelExpression)", "testcase": false, "constructor": false}, {"identifier": "assignContainers", "parameters": "(Resource clusterResource,\n      FiCaSchedulerNode node, ResourceLimits currentResourceLimits)", "modifiers": "@Override public synchronized", "return": "CSAssignment", "signature": "CSAssignment assignContainers(Resource clusterResource,\n      FiCaSchedulerNode node, ResourceLimits currentResourceLimits)", "full_signature": "@Override public synchronized CSAssignment assignContainers(Resource clusterResource,\n      FiCaSchedulerNode node, ResourceLimits currentResourceLimits)", "class_method_signature": "LeafQueue.assignContainers(Resource clusterResource,\n      FiCaSchedulerNode node, ResourceLimits currentResourceLimits)", "testcase": false, "constructor": false}, {"identifier": "assignReservedContainer", "parameters": "(\n      FiCaSchedulerApp application, FiCaSchedulerNode node,\n      RMContainer rmContainer, Resource clusterResource)", "modifiers": "private synchronized", "return": "CSAssignment", "signature": "CSAssignment assignReservedContainer(\n      FiCaSchedulerApp application, FiCaSchedulerNode node,\n      RMContainer rmContainer, Resource clusterResource)", "full_signature": "private synchronized CSAssignment assignReservedContainer(\n      FiCaSchedulerApp application, FiCaSchedulerNode node,\n      RMContainer rmContainer, Resource clusterResource)", "class_method_signature": "LeafQueue.assignReservedContainer(\n      FiCaSchedulerApp application, FiCaSchedulerNode node,\n      RMContainer rmContainer, Resource clusterResource)", "testcase": false, "constructor": false}, {"identifier": "getHeadroom", "parameters": "(User user, Resource queueCurrentLimit,\n      Resource clusterResource, FiCaSchedulerApp application, Resource required)", "modifiers": "protected", "return": "Resource", "signature": "Resource getHeadroom(User user, Resource queueCurrentLimit,\n      Resource clusterResource, FiCaSchedulerApp application, Resource required)", "full_signature": "protected Resource getHeadroom(User user, Resource queueCurrentLimit,\n      Resource clusterResource, FiCaSchedulerApp application, Resource required)", "class_method_signature": "LeafQueue.getHeadroom(User user, Resource queueCurrentLimit,\n      Resource clusterResource, FiCaSchedulerApp application, Resource required)", "testcase": false, "constructor": false}, {"identifier": "getHeadroom", "parameters": "(User user, Resource currentResourceLimit,\n      Resource clusterResource, Resource userLimit)", "modifiers": "private", "return": "Resource", "signature": "Resource getHeadroom(User user, Resource currentResourceLimit,\n      Resource clusterResource, Resource userLimit)", "full_signature": "private Resource getHeadroom(User user, Resource currentResourceLimit,\n      Resource clusterResource, Resource userLimit)", "class_method_signature": "LeafQueue.getHeadroom(User user, Resource currentResourceLimit,\n      Resource clusterResource, Resource userLimit)", "testcase": false, "constructor": false}, {"identifier": "setQueueResourceLimitsInfo", "parameters": "(\n      Resource clusterResource)", "modifiers": "private", "return": "void", "signature": "void setQueueResourceLimitsInfo(\n      Resource clusterResource)", "full_signature": "private void setQueueResourceLimitsInfo(\n      Resource clusterResource)", "class_method_signature": "LeafQueue.setQueueResourceLimitsInfo(\n      Resource clusterResource)", "testcase": false, "constructor": false}, {"identifier": "computeUserLimitAndSetHeadroom", "parameters": "(FiCaSchedulerApp application,\n      Resource clusterResource, Resource required, Set<String> requestedLabels)", "modifiers": "@Lock({LeafQueue.class, FiCaSchedulerApp.class})", "return": "Resource", "signature": "Resource computeUserLimitAndSetHeadroom(FiCaSchedulerApp application,\n      Resource clusterResource, Resource required, Set<String> requestedLabels)", "full_signature": "@Lock({LeafQueue.class, FiCaSchedulerApp.class}) Resource computeUserLimitAndSetHeadroom(FiCaSchedulerApp application,\n      Resource clusterResource, Resource required, Set<String> requestedLabels)", "class_method_signature": "LeafQueue.computeUserLimitAndSetHeadroom(FiCaSchedulerApp application,\n      Resource clusterResource, Resource required, Set<String> requestedLabels)", "testcase": false, "constructor": false}, {"identifier": "computeUserLimit", "parameters": "(FiCaSchedulerApp application,\n      Resource clusterResource, Resource required, User user,\n      Set<String> requestedLabels)", "modifiers": "@Lock(NoLock.class) private", "return": "Resource", "signature": "Resource computeUserLimit(FiCaSchedulerApp application,\n      Resource clusterResource, Resource required, User user,\n      Set<String> requestedLabels)", "full_signature": "@Lock(NoLock.class) private Resource computeUserLimit(FiCaSchedulerApp application,\n      Resource clusterResource, Resource required, User user,\n      Set<String> requestedLabels)", "class_method_signature": "LeafQueue.computeUserLimit(FiCaSchedulerApp application,\n      Resource clusterResource, Resource required, User user,\n      Set<String> requestedLabels)", "testcase": false, "constructor": false}, {"identifier": "assignToUser", "parameters": "(Resource clusterResource,\n      String userName, Resource limit, FiCaSchedulerApp application,\n      Set<String> requestLabels, ResourceLimits currentResoureLimits)", "modifiers": "@Private protected synchronized", "return": "boolean", "signature": "boolean assignToUser(Resource clusterResource,\n      String userName, Resource limit, FiCaSchedulerApp application,\n      Set<String> requestLabels, ResourceLimits currentResoureLimits)", "full_signature": "@Private protected synchronized boolean assignToUser(Resource clusterResource,\n      String userName, Resource limit, FiCaSchedulerApp application,\n      Set<String> requestLabels, ResourceLimits currentResoureLimits)", "class_method_signature": "LeafQueue.assignToUser(Resource clusterResource,\n      String userName, Resource limit, FiCaSchedulerApp application,\n      Set<String> requestLabels, ResourceLimits currentResoureLimits)", "testcase": false, "constructor": false}, {"identifier": "shouldAllocOrReserveNewContainer", "parameters": "(FiCaSchedulerApp application,\n      Priority priority, Resource required)", "modifiers": "", "return": "boolean", "signature": "boolean shouldAllocOrReserveNewContainer(FiCaSchedulerApp application,\n      Priority priority, Resource required)", "full_signature": " boolean shouldAllocOrReserveNewContainer(FiCaSchedulerApp application,\n      Priority priority, Resource required)", "class_method_signature": "LeafQueue.shouldAllocOrReserveNewContainer(FiCaSchedulerApp application,\n      Priority priority, Resource required)", "testcase": false, "constructor": false}, {"identifier": "assignContainersOnNode", "parameters": "(Resource clusterResource,\n      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, ResourceLimits currentResoureLimits)", "modifiers": "private", "return": "CSAssignment", "signature": "CSAssignment assignContainersOnNode(Resource clusterResource,\n      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, ResourceLimits currentResoureLimits)", "full_signature": "private CSAssignment assignContainersOnNode(Resource clusterResource,\n      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, ResourceLimits currentResoureLimits)", "class_method_signature": "LeafQueue.assignContainersOnNode(Resource clusterResource,\n      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, ResourceLimits currentResoureLimits)", "testcase": false, "constructor": false}, {"identifier": "findNodeToUnreserve", "parameters": "(Resource clusterResource,\n      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n      Resource minimumUnreservedResource)", "modifiers": "@Private protected", "return": "boolean", "signature": "boolean findNodeToUnreserve(Resource clusterResource,\n      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n      Resource minimumUnreservedResource)", "full_signature": "@Private protected boolean findNodeToUnreserve(Resource clusterResource,\n      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n      Resource minimumUnreservedResource)", "class_method_signature": "LeafQueue.findNodeToUnreserve(Resource clusterResource,\n      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n      Resource minimumUnreservedResource)", "testcase": false, "constructor": false}, {"identifier": "assignNodeLocalContainers", "parameters": "(Resource clusterResource,\n      ResourceRequest nodeLocalResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      ResourceLimits currentResoureLimits)", "modifiers": "private", "return": "Resource", "signature": "Resource assignNodeLocalContainers(Resource clusterResource,\n      ResourceRequest nodeLocalResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      ResourceLimits currentResoureLimits)", "full_signature": "private Resource assignNodeLocalContainers(Resource clusterResource,\n      ResourceRequest nodeLocalResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      ResourceLimits currentResoureLimits)", "class_method_signature": "LeafQueue.assignNodeLocalContainers(Resource clusterResource,\n      ResourceRequest nodeLocalResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      ResourceLimits currentResoureLimits)", "testcase": false, "constructor": false}, {"identifier": "assignRackLocalContainers", "parameters": "(Resource clusterResource,\n      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      ResourceLimits currentResoureLimits)", "modifiers": "private", "return": "Resource", "signature": "Resource assignRackLocalContainers(Resource clusterResource,\n      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      ResourceLimits currentResoureLimits)", "full_signature": "private Resource assignRackLocalContainers(Resource clusterResource,\n      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      ResourceLimits currentResoureLimits)", "class_method_signature": "LeafQueue.assignRackLocalContainers(Resource clusterResource,\n      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      ResourceLimits currentResoureLimits)", "testcase": false, "constructor": false}, {"identifier": "assignOffSwitchContainers", "parameters": "(Resource clusterResource,\n      ResourceRequest offSwitchResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      ResourceLimits currentResoureLimits)", "modifiers": "private", "return": "Resource", "signature": "Resource assignOffSwitchContainers(Resource clusterResource,\n      ResourceRequest offSwitchResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      ResourceLimits currentResoureLimits)", "full_signature": "private Resource assignOffSwitchContainers(Resource clusterResource,\n      ResourceRequest offSwitchResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      ResourceLimits currentResoureLimits)", "class_method_signature": "LeafQueue.assignOffSwitchContainers(Resource clusterResource,\n      ResourceRequest offSwitchResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      ResourceLimits currentResoureLimits)", "testcase": false, "constructor": false}, {"identifier": "canAssign", "parameters": "(FiCaSchedulerApp application, Priority priority, \n      FiCaSchedulerNode node, NodeType type, RMContainer reservedContainer)", "modifiers": "", "return": "boolean", "signature": "boolean canAssign(FiCaSchedulerApp application, Priority priority, \n      FiCaSchedulerNode node, NodeType type, RMContainer reservedContainer)", "full_signature": " boolean canAssign(FiCaSchedulerApp application, Priority priority, \n      FiCaSchedulerNode node, NodeType type, RMContainer reservedContainer)", "class_method_signature": "LeafQueue.canAssign(FiCaSchedulerApp application, Priority priority, \n      FiCaSchedulerNode node, NodeType type, RMContainer reservedContainer)", "testcase": false, "constructor": false}, {"identifier": "getContainer", "parameters": "(RMContainer rmContainer, \n      FiCaSchedulerApp application, FiCaSchedulerNode node, \n      Resource capability, Priority priority)", "modifiers": "private", "return": "Container", "signature": "Container getContainer(RMContainer rmContainer, \n      FiCaSchedulerApp application, FiCaSchedulerNode node, \n      Resource capability, Priority priority)", "full_signature": "private Container getContainer(RMContainer rmContainer, \n      FiCaSchedulerApp application, FiCaSchedulerNode node, \n      Resource capability, Priority priority)", "class_method_signature": "LeafQueue.getContainer(RMContainer rmContainer, \n      FiCaSchedulerApp application, FiCaSchedulerNode node, \n      Resource capability, Priority priority)", "testcase": false, "constructor": false}, {"identifier": "createContainer", "parameters": "(FiCaSchedulerApp application, FiCaSchedulerNode node, \n      Resource capability, Priority priority)", "modifiers": "", "return": "Container", "signature": "Container createContainer(FiCaSchedulerApp application, FiCaSchedulerNode node, \n      Resource capability, Priority priority)", "full_signature": " Container createContainer(FiCaSchedulerApp application, FiCaSchedulerNode node, \n      Resource capability, Priority priority)", "class_method_signature": "LeafQueue.createContainer(FiCaSchedulerApp application, FiCaSchedulerNode node, \n      Resource capability, Priority priority)", "testcase": false, "constructor": false}, {"identifier": "assignContainer", "parameters": "(Resource clusterResource, FiCaSchedulerNode node, \n      FiCaSchedulerApp application, Priority priority, \n      ResourceRequest request, NodeType type, RMContainer rmContainer,\n      MutableObject createdContainer, ResourceLimits currentResoureLimits)", "modifiers": "private", "return": "Resource", "signature": "Resource assignContainer(Resource clusterResource, FiCaSchedulerNode node, \n      FiCaSchedulerApp application, Priority priority, \n      ResourceRequest request, NodeType type, RMContainer rmContainer,\n      MutableObject createdContainer, ResourceLimits currentResoureLimits)", "full_signature": "private Resource assignContainer(Resource clusterResource, FiCaSchedulerNode node, \n      FiCaSchedulerApp application, Priority priority, \n      ResourceRequest request, NodeType type, RMContainer rmContainer,\n      MutableObject createdContainer, ResourceLimits currentResoureLimits)", "class_method_signature": "LeafQueue.assignContainer(Resource clusterResource, FiCaSchedulerNode node, \n      FiCaSchedulerApp application, Priority priority, \n      ResourceRequest request, NodeType type, RMContainer rmContainer,\n      MutableObject createdContainer, ResourceLimits currentResoureLimits)", "testcase": false, "constructor": false}, {"identifier": "reserve", "parameters": "(FiCaSchedulerApp application, Priority priority, \n      FiCaSchedulerNode node, RMContainer rmContainer, Container container)", "modifiers": "private", "return": "void", "signature": "void reserve(FiCaSchedulerApp application, Priority priority, \n      FiCaSchedulerNode node, RMContainer rmContainer, Container container)", "full_signature": "private void reserve(FiCaSchedulerApp application, Priority priority, \n      FiCaSchedulerNode node, RMContainer rmContainer, Container container)", "class_method_signature": "LeafQueue.reserve(FiCaSchedulerApp application, Priority priority, \n      FiCaSchedulerNode node, RMContainer rmContainer, Container container)", "testcase": false, "constructor": false}, {"identifier": "unreserve", "parameters": "(FiCaSchedulerApp application, Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer)", "modifiers": "private", "return": "boolean", "signature": "boolean unreserve(FiCaSchedulerApp application, Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer)", "full_signature": "private boolean unreserve(FiCaSchedulerApp application, Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer)", "class_method_signature": "LeafQueue.unreserve(FiCaSchedulerApp application, Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer)", "testcase": false, "constructor": false}, {"identifier": "completedContainer", "parameters": "(Resource clusterResource, \n      FiCaSchedulerApp application, FiCaSchedulerNode node, RMContainer rmContainer, \n      ContainerStatus containerStatus, RMContainerEventType event, CSQueue childQueue,\n      boolean sortQueues)", "modifiers": "@Override public", "return": "void", "signature": "void completedContainer(Resource clusterResource, \n      FiCaSchedulerApp application, FiCaSchedulerNode node, RMContainer rmContainer, \n      ContainerStatus containerStatus, RMContainerEventType event, CSQueue childQueue,\n      boolean sortQueues)", "full_signature": "@Override public void completedContainer(Resource clusterResource, \n      FiCaSchedulerApp application, FiCaSchedulerNode node, RMContainer rmContainer, \n      ContainerStatus containerStatus, RMContainerEventType event, CSQueue childQueue,\n      boolean sortQueues)", "class_method_signature": "LeafQueue.completedContainer(Resource clusterResource, \n      FiCaSchedulerApp application, FiCaSchedulerNode node, RMContainer rmContainer, \n      ContainerStatus containerStatus, RMContainerEventType event, CSQueue childQueue,\n      boolean sortQueues)", "testcase": false, "constructor": false}, {"identifier": "allocateResource", "parameters": "(Resource clusterResource,\n      SchedulerApplicationAttempt application, Resource resource,\n      Set<String> nodeLabels)", "modifiers": "synchronized", "return": "void", "signature": "void allocateResource(Resource clusterResource,\n      SchedulerApplicationAttempt application, Resource resource,\n      Set<String> nodeLabels)", "full_signature": "synchronized void allocateResource(Resource clusterResource,\n      SchedulerApplicationAttempt application, Resource resource,\n      Set<String> nodeLabels)", "class_method_signature": "LeafQueue.allocateResource(Resource clusterResource,\n      SchedulerApplicationAttempt application, Resource resource,\n      Set<String> nodeLabels)", "testcase": false, "constructor": false}, {"identifier": "releaseResource", "parameters": "(Resource clusterResource, \n      FiCaSchedulerApp application, Resource resource, Set<String> nodeLabels)", "modifiers": "synchronized", "return": "void", "signature": "void releaseResource(Resource clusterResource, \n      FiCaSchedulerApp application, Resource resource, Set<String> nodeLabels)", "full_signature": "synchronized void releaseResource(Resource clusterResource, \n      FiCaSchedulerApp application, Resource resource, Set<String> nodeLabels)", "class_method_signature": "LeafQueue.releaseResource(Resource clusterResource, \n      FiCaSchedulerApp application, Resource resource, Set<String> nodeLabels)", "testcase": false, "constructor": false}, {"identifier": "updateAbsoluteCapacityResource", "parameters": "(Resource clusterResource)", "modifiers": "private", "return": "void", "signature": "void updateAbsoluteCapacityResource(Resource clusterResource)", "full_signature": "private void updateAbsoluteCapacityResource(Resource clusterResource)", "class_method_signature": "LeafQueue.updateAbsoluteCapacityResource(Resource clusterResource)", "testcase": false, "constructor": false}, {"identifier": "updateCurrentResourceLimits", "parameters": "(\n      ResourceLimits currentResourceLimits, Resource clusterResource)", "modifiers": "private", "return": "void", "signature": "void updateCurrentResourceLimits(\n      ResourceLimits currentResourceLimits, Resource clusterResource)", "full_signature": "private void updateCurrentResourceLimits(\n      ResourceLimits currentResourceLimits, Resource clusterResource)", "class_method_signature": "LeafQueue.updateCurrentResourceLimits(\n      ResourceLimits currentResourceLimits, Resource clusterResource)", "testcase": false, "constructor": false}, {"identifier": "updateClusterResource", "parameters": "(Resource clusterResource,\n      ResourceLimits currentResourceLimits)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void updateClusterResource(Resource clusterResource,\n      ResourceLimits currentResourceLimits)", "full_signature": "@Override public synchronized void updateClusterResource(Resource clusterResource,\n      ResourceLimits currentResourceLimits)", "class_method_signature": "LeafQueue.updateClusterResource(Resource clusterResource,\n      ResourceLimits currentResourceLimits)", "testcase": false, "constructor": false}, {"identifier": "recoverContainer", "parameters": "(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer)", "modifiers": "@Override public", "return": "void", "signature": "void recoverContainer(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer)", "full_signature": "@Override public void recoverContainer(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer)", "class_method_signature": "LeafQueue.recoverContainer(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer)", "testcase": false, "constructor": false}, {"identifier": "getApplications", "parameters": "()", "modifiers": "public", "return": "Set<FiCaSchedulerApp>", "signature": "Set<FiCaSchedulerApp> getApplications()", "full_signature": "public Set<FiCaSchedulerApp> getApplications()", "class_method_signature": "LeafQueue.getApplications()", "testcase": false, "constructor": false}, {"identifier": "getTotalResourcePending", "parameters": "()", "modifiers": "public synchronized", "return": "Resource", "signature": "Resource getTotalResourcePending()", "full_signature": "public synchronized Resource getTotalResourcePending()", "class_method_signature": "LeafQueue.getTotalResourcePending()", "testcase": false, "constructor": false}, {"identifier": "collectSchedulerApplications", "parameters": "(\n      Collection<ApplicationAttemptId> apps)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void collectSchedulerApplications(\n      Collection<ApplicationAttemptId> apps)", "full_signature": "@Override public synchronized void collectSchedulerApplications(\n      Collection<ApplicationAttemptId> apps)", "class_method_signature": "LeafQueue.collectSchedulerApplications(\n      Collection<ApplicationAttemptId> apps)", "testcase": false, "constructor": false}, {"identifier": "attachContainer", "parameters": "(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer)", "modifiers": "@Override public", "return": "void", "signature": "void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer)", "full_signature": "@Override public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer)", "class_method_signature": "LeafQueue.attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer)", "testcase": false, "constructor": false}, {"identifier": "detachContainer", "parameters": "(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer)", "modifiers": "@Override public", "return": "void", "signature": "void detachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer)", "full_signature": "@Override public void detachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer)", "class_method_signature": "LeafQueue.detachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer)", "testcase": false, "constructor": false}, {"identifier": "setCapacity", "parameters": "(float capacity)", "modifiers": "public", "return": "void", "signature": "void setCapacity(float capacity)", "full_signature": "public void setCapacity(float capacity)", "class_method_signature": "LeafQueue.setCapacity(float capacity)", "testcase": false, "constructor": false}, {"identifier": "setAbsoluteCapacity", "parameters": "(float absoluteCapacity)", "modifiers": "public", "return": "void", "signature": "void setAbsoluteCapacity(float absoluteCapacity)", "full_signature": "public void setAbsoluteCapacity(float absoluteCapacity)", "class_method_signature": "LeafQueue.setAbsoluteCapacity(float absoluteCapacity)", "testcase": false, "constructor": false}, {"identifier": "setMaxApplications", "parameters": "(int maxApplications)", "modifiers": "public", "return": "void", "signature": "void setMaxApplications(int maxApplications)", "full_signature": "public void setMaxApplications(int maxApplications)", "class_method_signature": "LeafQueue.setMaxApplications(int maxApplications)", "testcase": false, "constructor": false}], "file": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"}, "focal_method": {"identifier": "getQueueUserAclInfo", "parameters": "(UserGroupInformation user)", "modifiers": "@Override public synchronized", "return": "List<QueueUserACLInfo>", "body": "@Override\n  public synchronized List<QueueUserACLInfo> \n  getQueueUserAclInfo(UserGroupInformation user) {\n    QueueUserACLInfo userAclInfo = \n      recordFactory.newRecordInstance(QueueUserACLInfo.class);\n    List<QueueACL> operations = new ArrayList<QueueACL>();\n    for (QueueACL operation : QueueACL.values()) {\n      if (hasAccess(operation, user)) {\n        operations.add(operation);\n      }\n    }\n\n    userAclInfo.setQueueName(getQueueName());\n    userAclInfo.setUserAcls(operations);\n    return Collections.singletonList(userAclInfo);\n  }", "signature": "List<QueueUserACLInfo> getQueueUserAclInfo(UserGroupInformation user)", "full_signature": "@Override public synchronized List<QueueUserACLInfo> getQueueUserAclInfo(UserGroupInformation user)", "class_method_signature": "LeafQueue.getQueueUserAclInfo(UserGroupInformation user)", "testcase": false, "constructor": false, "invocations": ["newRecordInstance", "values", "hasAccess", "add", "setQueueName", "getQueueName", "setUserAcls", "singletonList"]}, "repository": {"repo_id": 195808004, "url": "https://github.com/mouzwang/hadoop-2.7.2", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 24927, "license": "licensed"}}