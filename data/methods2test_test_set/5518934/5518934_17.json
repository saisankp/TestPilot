{"test_class": {"identifier": "DownloadArchiveCommandTest", "superclass": "extends AbstractCommandTest", "interfaces": "", "fields": [], "file": "glacieruploader-command/src/test/java/de/kopis/glacier/commands/DownloadArchiveCommandTest.java"}, "test_case": {"identifier": "exec", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void exec() throws Exception {\n        final String vaultName = UUID.randomUUID().toString();\n        final String archiveId = UUID.randomUUID().toString();\n        final String targetName = UUID.randomUUID().toString();\n        final ArchiveTransferManager atm = createMock(ArchiveTransferManager.class);\n        atm.download(vaultName, archiveId, new File(targetName));\n        expectLastCall().times(1);\n        replay(atm);\n\n        final OptionSet options = optionParser.parse(\"--vault\", vaultName,\n                \"--download\", archiveId,\n                \"--target\", targetName);\n        final DownloadArchiveCommand command = new DownloadArchiveCommand(client, sqs, sns, atm);\n\n        assertTrue(command.valid(options, optionParser));\n        command.exec(options, optionParser);\n\n        verify(atm);\n    }", "signature": "void exec()", "full_signature": "@Test public void exec()", "class_method_signature": "DownloadArchiveCommandTest.exec()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "toString", "randomUUID", "toString", "randomUUID", "createMock", "download", "times", "expectLastCall", "replay", "parse", "assertTrue", "valid", "exec", "verify"]}, "focal_class": {"identifier": "DownloadArchiveCommand", "superclass": "extends AbstractCommand", "interfaces": "", "fields": [{"original_string": "private ArchiveTransferManager atm;", "modifier": "private", "type": "ArchiveTransferManager", "declarator": "atm", "var_name": "atm"}], "methods": [{"identifier": "DownloadArchiveCommand", "parameters": "(AmazonGlacier client, AmazonSQS sqs, AmazonSNS sns)", "modifiers": "public", "return": "", "signature": " DownloadArchiveCommand(AmazonGlacier client, AmazonSQS sqs, AmazonSNS sns)", "full_signature": "public  DownloadArchiveCommand(AmazonGlacier client, AmazonSQS sqs, AmazonSNS sns)", "class_method_signature": "DownloadArchiveCommand.DownloadArchiveCommand(AmazonGlacier client, AmazonSQS sqs, AmazonSNS sns)", "testcase": false, "constructor": true}, {"identifier": "DownloadArchiveCommand", "parameters": "(final AmazonGlacier client, final AmazonSQS sqs, final AmazonSNS sns, final ArchiveTransferManager atm)", "modifiers": "public", "return": "", "signature": " DownloadArchiveCommand(final AmazonGlacier client, final AmazonSQS sqs, final AmazonSNS sns, final ArchiveTransferManager atm)", "full_signature": "public  DownloadArchiveCommand(final AmazonGlacier client, final AmazonSQS sqs, final AmazonSNS sns, final ArchiveTransferManager atm)", "class_method_signature": "DownloadArchiveCommand.DownloadArchiveCommand(final AmazonGlacier client, final AmazonSQS sqs, final AmazonSNS sns, final ArchiveTransferManager atm)", "testcase": false, "constructor": true}, {"identifier": "download", "parameters": "(final String vaultName, final String archiveId, final File targetFile)", "modifiers": "private", "return": "void", "signature": "void download(final String vaultName, final String archiveId, final File targetFile)", "full_signature": "private void download(final String vaultName, final String archiveId, final File targetFile)", "class_method_signature": "DownloadArchiveCommand.download(final String vaultName, final String archiveId, final File targetFile)", "testcase": false, "constructor": false}, {"identifier": "exec", "parameters": "(OptionSet options, GlacierUploaderOptionParser optionParser)", "modifiers": "@Override public", "return": "void", "signature": "void exec(OptionSet options, GlacierUploaderOptionParser optionParser)", "full_signature": "@Override public void exec(OptionSet options, GlacierUploaderOptionParser optionParser)", "class_method_signature": "DownloadArchiveCommand.exec(OptionSet options, GlacierUploaderOptionParser optionParser)", "testcase": false, "constructor": false}, {"identifier": "valid", "parameters": "(OptionSet options, GlacierUploaderOptionParser optionParser)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean valid(OptionSet options, GlacierUploaderOptionParser optionParser)", "full_signature": "@Override public boolean valid(OptionSet options, GlacierUploaderOptionParser optionParser)", "class_method_signature": "DownloadArchiveCommand.valid(OptionSet options, GlacierUploaderOptionParser optionParser)", "testcase": false, "constructor": false}], "file": "glacieruploader-command/src/main/java/de/kopis/glacier/commands/DownloadArchiveCommand.java"}, "focal_method": {"identifier": "exec", "parameters": "(OptionSet options, GlacierUploaderOptionParser optionParser)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void exec(OptionSet options, GlacierUploaderOptionParser optionParser) {\n        final String vaultName = options.valueOf(optionParser.vault);\n        final String archiveId = options.valueOf(optionParser.download);\n        final File targetFile = options.valueOf(optionParser.targetFile);\n        this.download(vaultName, archiveId, targetFile);\n    }", "signature": "void exec(OptionSet options, GlacierUploaderOptionParser optionParser)", "full_signature": "@Override public void exec(OptionSet options, GlacierUploaderOptionParser optionParser)", "class_method_signature": "DownloadArchiveCommand.exec(OptionSet options, GlacierUploaderOptionParser optionParser)", "testcase": false, "constructor": false, "invocations": ["valueOf", "valueOf", "valueOf", "download"]}, "repository": {"repo_id": 5518934, "url": "https://github.com/MoriTanosuke/glacieruploader", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 243, "size": 6248, "license": "licensed"}}