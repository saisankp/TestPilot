{"test_class": {"identifier": "PdfStreamSourceTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-model/src/test/java/org/sejda/model/input/PdfStreamSourceTest.java"}, "test_case": {"identifier": "testNullStream", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testNullStream() {\n        PdfStreamSource.newInstanceWithPassword(null, \"fdsfs\", null);\n    }", "signature": "void testNullStream()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testNullStream()", "class_method_signature": "PdfStreamSourceTest.testNullStream()", "testcase": true, "constructor": false, "invocations": ["newInstanceWithPassword"]}, "focal_class": {"identifier": "PdfStreamSource", "superclass": "extends AbstractPdfSource<InputStream>", "interfaces": "", "fields": [{"original_string": "@NotNull\n    private final InputStream stream;", "modifier": "@NotNull\n    private final", "type": "InputStream", "declarator": "stream", "var_name": "stream"}], "methods": [{"identifier": "PdfStreamSource", "parameters": "(InputStream stream, String name, String password)", "modifiers": "private", "return": "", "signature": " PdfStreamSource(InputStream stream, String name, String password)", "full_signature": "private  PdfStreamSource(InputStream stream, String name, String password)", "class_method_signature": "PdfStreamSource.PdfStreamSource(InputStream stream, String name, String password)", "testcase": false, "constructor": true}, {"identifier": "getSource", "parameters": "()", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getSource()", "full_signature": "@Override public InputStream getSource()", "class_method_signature": "PdfStreamSource.getSource()", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(PdfSourceOpener<T> opener)", "modifiers": "@Override public", "return": "T", "signature": "T open(PdfSourceOpener<T> opener)", "full_signature": "@Override public T open(PdfSourceOpener<T> opener)", "class_method_signature": "PdfStreamSource.open(PdfSourceOpener<T> opener)", "testcase": false, "constructor": false}, {"identifier": "initializeSeekableSource", "parameters": "()", "modifiers": "@Override public", "return": "SeekableSource", "signature": "SeekableSource initializeSeekableSource()", "full_signature": "@Override public SeekableSource initializeSeekableSource()", "class_method_signature": "PdfStreamSource.initializeSeekableSource()", "testcase": false, "constructor": false}, {"identifier": "newInstanceNoPassword", "parameters": "(InputStream stream, String name)", "modifiers": "public static", "return": "PdfStreamSource", "signature": "PdfStreamSource newInstanceNoPassword(InputStream stream, String name)", "full_signature": "public static PdfStreamSource newInstanceNoPassword(InputStream stream, String name)", "class_method_signature": "PdfStreamSource.newInstanceNoPassword(InputStream stream, String name)", "testcase": false, "constructor": false}, {"identifier": "newInstanceWithPassword", "parameters": "(InputStream stream, String name, String password)", "modifiers": "public static", "return": "PdfStreamSource", "signature": "PdfStreamSource newInstanceWithPassword(InputStream stream, String name, String password)", "full_signature": "public static PdfStreamSource newInstanceWithPassword(InputStream stream, String name, String password)", "class_method_signature": "PdfStreamSource.newInstanceWithPassword(InputStream stream, String name, String password)", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/input/PdfStreamSource.java"}, "focal_method": {"identifier": "newInstanceWithPassword", "parameters": "(InputStream stream, String name, String password)", "modifiers": "public static", "return": "PdfStreamSource", "body": "public static PdfStreamSource newInstanceWithPassword(InputStream stream, String name, String password) {\n        if (stream == null) {\n            throw new IllegalArgumentException(\"A not null stream instance and a not blank name are expected.\");\n        }\n        return new PdfStreamSource(stream, name, password);\n    }", "signature": "PdfStreamSource newInstanceWithPassword(InputStream stream, String name, String password)", "full_signature": "public static PdfStreamSource newInstanceWithPassword(InputStream stream, String name, String password)", "class_method_signature": "PdfStreamSource.newInstanceWithPassword(InputStream stream, String name, String password)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}