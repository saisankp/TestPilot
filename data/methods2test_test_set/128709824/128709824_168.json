{"test_class": {"identifier": "ServerFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/api/src/test/java/com/alipay/sofa/rpc/server/ServerFactoryTest.java"}, "test_case": {"identifier": "destroyServer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void destroyServer() {\n        ServerConfig serverConfig = new ServerConfig().setProtocol(\"test\").setPort(1234);\n        Server server = serverConfig.buildIfAbsent();\n        Assert.assertNotNull(server);\n        Assert.assertEquals(1, ServerFactory.getServers().size());\n        serverConfig.destroy();\n        Assert.assertEquals(0, ServerFactory.getServers().size());\n        Assert.assertNull(serverConfig.getServer());\n    }", "signature": "void destroyServer()", "full_signature": "@Test public void destroyServer()", "class_method_signature": "ServerFactoryTest.destroyServer()", "testcase": true, "constructor": false, "invocations": ["setPort", "setProtocol", "buildIfAbsent", "assertNotNull", "assertEquals", "size", "getServers", "destroy", "assertEquals", "size", "getServers", "assertNull", "getServer"]}, "focal_class": {"identifier": "ServerFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static Logger                        LOGGER     = LoggerFactory\n                                                                      .getLogger(ServerFactory.class);", "modifier": "private final static", "type": "Logger", "declarator": "LOGGER     = LoggerFactory\n                                                                      .getLogger(ServerFactory.class)", "var_name": "LOGGER"}, {"original_string": "private final static ConcurrentMap<String, Server> SERVER_MAP = new ConcurrentHashMap<String, Server>();", "modifier": "private final static", "type": "ConcurrentMap<String, Server>", "declarator": "SERVER_MAP = new ConcurrentHashMap<String, Server>()", "var_name": "SERVER_MAP"}], "methods": [{"identifier": "getServer", "parameters": "(ServerConfig serverConfig)", "modifiers": "public synchronized static", "return": "Server", "signature": "Server getServer(ServerConfig serverConfig)", "full_signature": "public synchronized static Server getServer(ServerConfig serverConfig)", "class_method_signature": "ServerFactory.getServer(ServerConfig serverConfig)", "testcase": false, "constructor": false}, {"identifier": "resolveServerConfig", "parameters": "(ServerConfig serverConfig)", "modifiers": "private static", "return": "void", "signature": "void resolveServerConfig(ServerConfig serverConfig)", "full_signature": "private static void resolveServerConfig(ServerConfig serverConfig)", "class_method_signature": "ServerFactory.resolveServerConfig(ServerConfig serverConfig)", "testcase": false, "constructor": false}, {"identifier": "getServers", "parameters": "()", "modifiers": "public static", "return": "List<Server>", "signature": "List<Server> getServers()", "full_signature": "public static List<Server> getServers()", "class_method_signature": "ServerFactory.getServers()", "testcase": false, "constructor": false}, {"identifier": "destroyAll", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void destroyAll()", "full_signature": "public static void destroyAll()", "class_method_signature": "ServerFactory.destroyAll()", "testcase": false, "constructor": false}, {"identifier": "destroyServer", "parameters": "(ServerConfig serverConfig)", "modifiers": "public static", "return": "void", "signature": "void destroyServer(ServerConfig serverConfig)", "full_signature": "public static void destroyServer(ServerConfig serverConfig)", "class_method_signature": "ServerFactory.destroyServer(ServerConfig serverConfig)", "testcase": false, "constructor": false}], "file": "core/api/src/main/java/com/alipay/sofa/rpc/server/ServerFactory.java"}, "focal_method": {"identifier": "destroyServer", "parameters": "(ServerConfig serverConfig)", "modifiers": "public static", "return": "void", "body": "public static void destroyServer(ServerConfig serverConfig) {\n        try {\n            Server server = serverConfig.getServer();\n            if (server != null) {\n                serverConfig.setServer(null);\n                SERVER_MAP.remove(Integer.toString(serverConfig.getPort()));\n                server.destroy();\n            }\n        } catch (Exception e) {\n            LOGGER.error(LogCodes.getLog(LogCodes.ERROR_DESTROY_SERVER, serverConfig.getPort()), e);\n        }\n    }", "signature": "void destroyServer(ServerConfig serverConfig)", "full_signature": "public static void destroyServer(ServerConfig serverConfig)", "class_method_signature": "ServerFactory.destroyServer(ServerConfig serverConfig)", "testcase": false, "constructor": false, "invocations": ["getServer", "setServer", "remove", "toString", "getPort", "destroy", "error", "getLog", "getPort"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}