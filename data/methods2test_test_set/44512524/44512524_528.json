{"test_class": {"identifier": "StableBloomFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private StableBloomFilter<CharSequence> sbf;", "modifier": "private", "type": "StableBloomFilter<CharSequence>", "declarator": "sbf", "var_name": "sbf"}], "file": "ml/streaminer/src/test/java/org/streaminer/stream/membership/StableBloomFilterTest.java"}, "test_case": {"identifier": "testMightContain", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMightContain() throws Exception {\n        sbf.add(\"1test\");\n        sbf.add(\"2test\");\n        sbf.add(\"3test\");\n        sbf.add(\"3test\");\n        sbf.add(\"3test\");\n        sbf.add(\"3test\");\n        sbf.add(\"3test\");\n        sbf.add(\"3test\");\n        sbf.add(\"3test\");\n        sbf.add(\"3test\");        \n        //assertTrue(\"False negative\", sbf.membershipTest(\"1test\"));\n        //assertFalse(\"False positive\", sbf.membershipTest(\"10test\"));\n    }", "signature": "void testMightContain()", "full_signature": "@Test public void testMightContain()", "class_method_signature": "StableBloomFilterTest.testMightContain()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "add", "add", "add", "add", "add", "add"]}, "focal_class": {"identifier": "StableBloomFilter", "superclass": "", "interfaces": "implements IFilter<T>", "fields": [{"original_string": "private static final int MAX_VAL = 3;", "modifier": "private static final", "type": "int", "declarator": "MAX_VAL = 3", "var_name": "MAX_VAL"}, {"original_string": "private final int[] cells;", "modifier": "private final", "type": "int[]", "declarator": "cells", "var_name": "cells"}, {"original_string": "private final int numHashFunctions;", "modifier": "private final", "type": "int", "declarator": "numHashFunctions", "var_name": "numHashFunctions"}, {"original_string": "private final Funnel<T> funnel;", "modifier": "private final", "type": "Funnel<T>", "declarator": "funnel", "var_name": "funnel"}, {"original_string": "private final Murmur128_Mitz_32_Strategy strategy;", "modifier": "private final", "type": "Murmur128_Mitz_32_Strategy", "declarator": "strategy", "var_name": "strategy"}, {"original_string": "private final int numDecrementCells;", "modifier": "private final", "type": "int", "declarator": "numDecrementCells", "var_name": "numDecrementCells"}], "methods": [{"identifier": "StableBloomFilter", "parameters": "(int numCells, int numHashFunctions, int numDecrementCells, Funnel<T> funnel)", "modifiers": "public", "return": "", "signature": " StableBloomFilter(int numCells, int numHashFunctions, int numDecrementCells, Funnel<T> funnel)", "full_signature": "public  StableBloomFilter(int numCells, int numHashFunctions, int numDecrementCells, Funnel<T> funnel)", "class_method_signature": "StableBloomFilter.StableBloomFilter(int numCells, int numHashFunctions, int numDecrementCells, Funnel<T> funnel)", "testcase": false, "constructor": true}, {"identifier": "membershipTest", "parameters": "(T object)", "modifiers": "public", "return": "boolean", "signature": "boolean membershipTest(T object)", "full_signature": "public boolean membershipTest(T object)", "class_method_signature": "StableBloomFilter.membershipTest(T object)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(T object)", "modifiers": "public", "return": "void", "signature": "void add(T object)", "full_signature": "public void add(T object)", "class_method_signature": "StableBloomFilter.add(T object)", "testcase": false, "constructor": false}, {"identifier": "decrementCells", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void decrementCells()", "full_signature": "private void decrementCells()", "class_method_signature": "StableBloomFilter.decrementCells()", "testcase": false, "constructor": false}], "file": "ml/streaminer/src/main/java/org/streaminer/stream/membership/StableBloomFilter.java"}, "focal_method": {"identifier": "add", "parameters": "(T object)", "modifiers": "public", "return": "void", "body": "public void add(T object) {\n        decrementCells();\n        strategy.put(object, funnel, numHashFunctions, cells);\n    }", "signature": "void add(T object)", "full_signature": "public void add(T object)", "class_method_signature": "StableBloomFilter.add(T object)", "testcase": false, "constructor": false, "invocations": ["decrementCells", "put"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}