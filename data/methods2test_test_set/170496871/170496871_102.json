{"test_class": {"identifier": "IgniteMessageFactoryImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final short TEST_MSG_1_TYPE = 1;", "modifier": "private static final", "type": "short", "declarator": "TEST_MSG_1_TYPE = 1", "var_name": "TEST_MSG_1_TYPE"}, {"original_string": "private static final short TEST_MSG_2_TYPE = 2;", "modifier": "private static final", "type": "short", "declarator": "TEST_MSG_2_TYPE = 2", "var_name": "TEST_MSG_2_TYPE"}, {"original_string": "private static final short TEST_MSG_42_TYPE = 42;", "modifier": "private static final", "type": "short", "declarator": "TEST_MSG_42_TYPE = 42", "var_name": "TEST_MSG_42_TYPE"}, {"original_string": "private static final short UNKNOWN_MSG_TYPE = 0;", "modifier": "private static final", "type": "short", "declarator": "UNKNOWN_MSG_TYPE = 0", "var_name": "UNKNOWN_MSG_TYPE"}], "file": "modules/core/src/test/java/org/apache/ignite/internal/managers/communication/IgniteMessageFactoryImplTest.java"}, "test_case": {"identifier": "testCreate_UnknownMessageType", "parameters": "()", "modifiers": "@Test(expected = IgniteException.class) public", "return": "void", "body": "@Test(expected = IgniteException.class)\n    public void testCreate_UnknownMessageType() {\n        MessageFactory[] factories = {new TestMessageFactoryPovider(), new TestMessageFactory()};\n\n        IgniteMessageFactory msgFactory = new IgniteMessageFactoryImpl(factories);\n\n        msgFactory.create(UNKNOWN_MSG_TYPE);\n    }", "signature": "void testCreate_UnknownMessageType()", "full_signature": "@Test(expected = IgniteException.class) public void testCreate_UnknownMessageType()", "class_method_signature": "IgniteMessageFactoryImplTest.testCreate_UnknownMessageType()", "testcase": true, "constructor": false, "invocations": ["create"]}, "focal_class": {"identifier": "IgniteMessageFactoryImpl", "superclass": "", "interfaces": "implements IgniteMessageFactory", "fields": [{"original_string": "private static final int OFF = -Short.MIN_VALUE;", "modifier": "private static final", "type": "int", "declarator": "OFF = -Short.MIN_VALUE", "var_name": "OFF"}, {"original_string": "private static final int ARR_SIZE = 1 << Short.SIZE;", "modifier": "private static final", "type": "int", "declarator": "ARR_SIZE = 1 << Short.SIZE", "var_name": "ARR_SIZE"}, {"original_string": "private final Supplier<Message>[] msgSuppliers = (Supplier<Message>[]) Array.newInstance(Supplier.class, ARR_SIZE);", "modifier": "private final", "type": "Supplier<Message>[]", "declarator": "msgSuppliers = (Supplier<Message>[]) Array.newInstance(Supplier.class, ARR_SIZE)", "var_name": "msgSuppliers"}, {"original_string": "private boolean initialized;", "modifier": "private", "type": "boolean", "declarator": "initialized", "var_name": "initialized"}, {"original_string": "private int minIdx = Integer.MAX_VALUE;", "modifier": "private", "type": "int", "declarator": "minIdx = Integer.MAX_VALUE", "var_name": "minIdx"}, {"original_string": "private int maxIdx = -1;", "modifier": "private", "type": "int", "declarator": "maxIdx = -1", "var_name": "maxIdx"}, {"original_string": "private int cnt;", "modifier": "private", "type": "int", "declarator": "cnt", "var_name": "cnt"}], "methods": [{"identifier": "IgniteMessageFactoryImpl", "parameters": "(MessageFactory[] factories)", "modifiers": "public", "return": "", "signature": " IgniteMessageFactoryImpl(MessageFactory[] factories)", "full_signature": "public  IgniteMessageFactoryImpl(MessageFactory[] factories)", "class_method_signature": "IgniteMessageFactoryImpl.IgniteMessageFactoryImpl(MessageFactory[] factories)", "testcase": false, "constructor": true}, {"identifier": "register", "parameters": "(short directType, Supplier<Message> supplier)", "modifiers": "@Override public", "return": "void", "signature": "void register(short directType, Supplier<Message> supplier)", "full_signature": "@Override public void register(short directType, Supplier<Message> supplier)", "class_method_signature": "IgniteMessageFactoryImpl.register(short directType, Supplier<Message> supplier)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(short directType)", "modifiers": "@Override public @Nullable", "return": "Message", "signature": "Message create(short directType)", "full_signature": "@Override public @Nullable Message create(short directType)", "class_method_signature": "IgniteMessageFactoryImpl.create(short directType)", "testcase": false, "constructor": false}, {"identifier": "registeredDirectTypes", "parameters": "()", "modifiers": "public", "return": "short[]", "signature": "short[] registeredDirectTypes()", "full_signature": "public short[] registeredDirectTypes()", "class_method_signature": "IgniteMessageFactoryImpl.registeredDirectTypes()", "testcase": false, "constructor": false}, {"identifier": "directTypeToIndex", "parameters": "(short directType)", "modifiers": "private static", "return": "int", "signature": "int directTypeToIndex(short directType)", "full_signature": "private static int directTypeToIndex(short directType)", "class_method_signature": "IgniteMessageFactoryImpl.directTypeToIndex(short directType)", "testcase": false, "constructor": false}, {"identifier": "indexToDirectType", "parameters": "(int idx)", "modifiers": "private static", "return": "short", "signature": "short indexToDirectType(int idx)", "full_signature": "private static short indexToDirectType(int idx)", "class_method_signature": "IgniteMessageFactoryImpl.indexToDirectType(int idx)", "testcase": false, "constructor": false}], "file": "modules/core/src/main/java/org/apache/ignite/internal/managers/communication/IgniteMessageFactoryImpl.java"}, "focal_method": {"identifier": "create", "parameters": "(short directType)", "modifiers": "@Override public @Nullable", "return": "Message", "body": "@Override public @Nullable Message create(short directType) {\n        Supplier<Message> supplier = msgSuppliers[directTypeToIndex(directType)];\n\n        if (supplier == null)\n            throw new IgniteException(\"Invalid message type: \" + directType);\n\n        return supplier.get();\n    }", "signature": "Message create(short directType)", "full_signature": "@Override public @Nullable Message create(short directType)", "class_method_signature": "IgniteMessageFactoryImpl.create(short directType)", "testcase": false, "constructor": false, "invocations": ["directTypeToIndex", "get"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}