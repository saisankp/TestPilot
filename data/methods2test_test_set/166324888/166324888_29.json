{"test_class": {"identifier": "TransactionDetailPresenterTest", "superclass": "extends BaseTestCase", "interfaces": "", "fields": [{"original_string": "private TransactionDetailPresenter presenter;", "modifier": "private", "type": "TransactionDetailPresenter", "declarator": "presenter", "var_name": "presenter"}, {"original_string": "@Rule\n    public MockitoRule mockitoRule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = MockitoJUnit.rule()", "var_name": "mockitoRule"}, {"original_string": "@Mock\n    private SchedulerTestProvider schedulerTestProvider = new SchedulerTestProvider();", "modifier": "@Mock\n    private", "type": "SchedulerTestProvider", "declarator": "schedulerTestProvider = new SchedulerTestProvider()", "var_name": "schedulerTestProvider"}, {"original_string": "@Mock\n    public NodeManager nodeManager;", "modifier": "@Mock\n    public", "type": "NodeManager", "declarator": "nodeManager", "var_name": "nodeManager"}, {"original_string": "@Mock\n    public Node node;", "modifier": "@Mock\n    public", "type": "Node", "declarator": "node", "var_name": "node"}, {"original_string": "@Rule\n    public RxJavaTestSchedulerRule rule = new RxJavaTestSchedulerRule();", "modifier": "@Rule\n    public", "type": "RxJavaTestSchedulerRule", "declarator": "rule = new RxJavaTestSchedulerRule()", "var_name": "rule"}], "file": "wallet/src/test/java/com/platon/aton/component/ui/presenter/TransactionDetailPresenterTest.java"}, "test_case": {"identifier": "testLoadData", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLoadData() {\n\n        Single.fromCallable(new Callable<String>() {\n            @Override\n            public String call() throws Exception {\n                return \"0x2e95e3ce0a54951eb9a99152a6d5827872dfb4fd\";\n            }\n        }).flatMap(new Function<String, SingleSource<String>>() {\n            @Override\n            public SingleSource<String> apply(String s) throws Exception {\n                if (TextUtils.isEmpty(s)) {\n                    return Single.fromCallable(new Callable<String>() {\n                        @Override\n                        public String call() throws Exception {\n                            return \"0x2e95e3ce0a54951eb9a99152a6d5827872dfb4fd\";\n                        }\n                    });\n                } else {\n                    return Single.just(s);\n                }\n            }\n        }).subscribe(new Consumer<String>() {\n            @Override\n            public void accept(String s) throws Exception {\n                System.out.println(\"====================\" + s);\n            }\n        });\n\n    }", "signature": "void testLoadData()", "full_signature": "@Test public void testLoadData()", "class_method_signature": "TransactionDetailPresenterTest.testLoadData()", "testcase": true, "constructor": false, "invocations": ["subscribe", "flatMap", "fromCallable", "isEmpty", "fromCallable", "just", "println"]}, "focal_class": {"identifier": "TransactionDetailPresenter", "superclass": "extends BasePresenter<TransactionDetailContract.View>", "interfaces": "implements TransactionDetailContract.Presenter", "fields": [{"original_string": "private Transaction mTransaction;", "modifier": "private", "type": "Transaction", "declarator": "mTransaction", "var_name": "mTransaction"}, {"original_string": "private List<String> mQueryAddressList;", "modifier": "private", "type": "List<String>", "declarator": "mQueryAddressList", "var_name": "mQueryAddressList"}], "methods": [{"identifier": "init", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void init()", "full_signature": "@Override public void init()", "class_method_signature": "TransactionDetailPresenter.init()", "testcase": false, "constructor": false}, {"identifier": "loadData", "parameters": "()", "modifiers": "@SuppressLint(\"CheckResult\") @Override public", "return": "void", "signature": "void loadData()", "full_signature": "@SuppressLint(\"CheckResult\") @Override public void loadData()", "class_method_signature": "TransactionDetailPresenter.loadData()", "testcase": false, "constructor": false}, {"identifier": "updateTransactionDetailInfo", "parameters": "(Transaction transaction)", "modifiers": "@SuppressLint(\"CheckResult\") @Override public", "return": "void", "signature": "void updateTransactionDetailInfo(Transaction transaction)", "full_signature": "@SuppressLint(\"CheckResult\") @Override public void updateTransactionDetailInfo(Transaction transaction)", "class_method_signature": "TransactionDetailPresenter.updateTransactionDetailInfo(Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "getWalletNameByAddressFromWalletDB", "parameters": "(String address)", "modifiers": "private", "return": "Single<String>", "signature": "Single<String> getWalletNameByAddressFromWalletDB(String address)", "full_signature": "private Single<String> getWalletNameByAddressFromWalletDB(String address)", "class_method_signature": "TransactionDetailPresenter.getWalletNameByAddressFromWalletDB(String address)", "testcase": false, "constructor": false}, {"identifier": "getWalletNameByAddressFromAddressDB", "parameters": "(String address)", "modifiers": "private", "return": "Single<String>", "signature": "Single<String> getWalletNameByAddressFromAddressDB(String address)", "full_signature": "private Single<String> getWalletNameByAddressFromAddressDB(String address)", "class_method_signature": "TransactionDetailPresenter.getWalletNameByAddressFromAddressDB(String address)", "testcase": false, "constructor": false}], "file": "wallet/src/main/java/com/platon/aton/component/ui/presenter/TransactionDetailPresenter.java"}, "focal_method": {"identifier": "loadData", "parameters": "()", "modifiers": "@SuppressLint(\"CheckResult\") @Override public", "return": "void", "body": "@SuppressLint(\"CheckResult\")\n    @Override\n    public void loadData() {\n\n        if (mTransaction != null) {\n\n            getWalletNameByAddressFromWalletDB(mTransaction.getFrom())\n                    .flatMap(new Function<String, SingleSource<String>>() {\n                        @Override\n                        public SingleSource<String> apply(String s) throws Exception {\n                            if (TextUtils.isEmpty(s)) {\n                                return getWalletNameByAddressFromAddressDB(mTransaction.getFrom());\n                            } else {\n                                return Single.just(s);\n                            }\n                        }\n                    })\n                    .compose(RxUtils.getSingleSchedulerTransformer())\n                    .compose(RxUtils.bindToLifecycle(getView()))\n                    .compose(LoadingTransformer.bindToSingleLifecycle(currentActivity()))\n                    .subscribe(new Consumer<String>() {\n                        @Override\n                        public void accept(String walletName) throws Exception {\n                            if (isViewAttached()) {\n                                getView().setTransactionDetailInfo(mTransaction, mQueryAddressList, walletName);\n                            }\n                        }\n                    });\n\n        }\n\n\n    }", "signature": "void loadData()", "full_signature": "@SuppressLint(\"CheckResult\") @Override public void loadData()", "class_method_signature": "TransactionDetailPresenter.loadData()", "testcase": false, "constructor": false, "invocations": ["subscribe", "compose", "compose", "compose", "flatMap", "getWalletNameByAddressFromWalletDB", "getFrom", "isEmpty", "getWalletNameByAddressFromAddressDB", "getFrom", "just", "getSingleSchedulerTransformer", "bindToLifecycle", "getView", "bindToSingleLifecycle", "currentActivity", "isViewAttached", "setTransactionDetailInfo", "getView"]}, "repository": {"repo_id": 166324888, "url": "https://github.com/PlatONnetwork/ATON-Android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 118901, "license": "licensed"}}