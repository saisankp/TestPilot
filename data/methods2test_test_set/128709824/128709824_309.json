{"test_class": {"identifier": "SofaProtoUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "remoting/remoting-triple/src/test/java/com/alipay/sofa/rpc/utils/SofaProtoUtilsTest.java"}, "test_case": {"identifier": "testCheckIfUseGeneric", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCheckIfUseGeneric() {\n        ConsumerConfig asTrue = new ConsumerConfig();\n        asTrue.setInterfaceId(NeedGeneric.NeedGenericInterface.class.getName());\n        ConsumerConfig asFalse = new ConsumerConfig();\n        asFalse.setInterfaceId(DoNotNeedGeneric.NoNotNeedGenericInterface.class.getName());\n\n        Assert.assertTrue(SofaProtoUtils.checkIfUseGeneric(asTrue));\n        Assert.assertFalse(SofaProtoUtils.checkIfUseGeneric(asFalse));\n\n    }", "signature": "void testCheckIfUseGeneric()", "full_signature": "@Test public void testCheckIfUseGeneric()", "class_method_signature": "SofaProtoUtilsTest.testCheckIfUseGeneric()", "testcase": true, "constructor": false, "invocations": ["setInterfaceId", "getName", "setInterfaceId", "getName", "assertTrue", "checkIfUseGeneric", "assertFalse", "checkIfUseGeneric"]}, "focal_class": {"identifier": "SofaProtoUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "isProtoClass", "parameters": "(Object object)", "modifiers": "public static", "return": "boolean", "signature": "boolean isProtoClass(Object object)", "full_signature": "public static boolean isProtoClass(Object object)", "class_method_signature": "SofaProtoUtils.isProtoClass(Object object)", "testcase": false, "constructor": false}, {"identifier": "getMethodNames", "parameters": "(String interfaceId)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> getMethodNames(String interfaceId)", "full_signature": "public static Set<String> getMethodNames(String interfaceId)", "class_method_signature": "SofaProtoUtils.getMethodNames(String interfaceId)", "testcase": false, "constructor": false}, {"identifier": "checkIfUseGeneric", "parameters": "(ConsumerConfig consumerConfig)", "modifiers": "public static", "return": "boolean", "signature": "boolean checkIfUseGeneric(ConsumerConfig consumerConfig)", "full_signature": "public static boolean checkIfUseGeneric(ConsumerConfig consumerConfig)", "class_method_signature": "SofaProtoUtils.checkIfUseGeneric(ConsumerConfig consumerConfig)", "testcase": false, "constructor": false}, {"identifier": "getFullNameWithUniqueId", "parameters": "(String fullMethodName, String uniqueId)", "modifiers": "public static", "return": "String", "signature": "String getFullNameWithUniqueId(String fullMethodName, String uniqueId)", "full_signature": "public static String getFullNameWithUniqueId(String fullMethodName, String uniqueId)", "class_method_signature": "SofaProtoUtils.getFullNameWithUniqueId(String fullMethodName, String uniqueId)", "testcase": false, "constructor": false}], "file": "remoting/remoting-triple/src/main/java/com/alipay/sofa/rpc/utils/SofaProtoUtils.java"}, "focal_method": {"identifier": "checkIfUseGeneric", "parameters": "(ConsumerConfig consumerConfig)", "modifiers": "public static", "return": "boolean", "body": "public static boolean checkIfUseGeneric(ConsumerConfig consumerConfig) {\n        Class proxyClass = consumerConfig.getProxyClass();\n        Class enclosingClass = proxyClass.getEnclosingClass();\n        if (enclosingClass != null) {\n            try {\n                enclosingClass.getDeclaredMethod(\"getSofaStub\", Channel.class, CallOptions.class, int.class);\n                return false;\n            } catch (NoSuchMethodException e) {\n                //ignore\n                return true;\n            }\n        }\n\n        return true;\n    }", "signature": "boolean checkIfUseGeneric(ConsumerConfig consumerConfig)", "full_signature": "public static boolean checkIfUseGeneric(ConsumerConfig consumerConfig)", "class_method_signature": "SofaProtoUtils.checkIfUseGeneric(ConsumerConfig consumerConfig)", "testcase": false, "constructor": false, "invocations": ["getProxyClass", "getEnclosingClass", "getDeclaredMethod"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}