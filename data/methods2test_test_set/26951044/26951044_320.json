{"test_class": {"identifier": "DefaultConfigValueEvaluatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/spi-support/src/test/java/org/apache/tamaya/spisupport/DefaultConfigValueEvaluatorTest.java"}, "test_case": {"identifier": "testEvaluateRawValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEvaluateRawValues() {\n        Configuration config = Configuration.current();\n        DefaultConfigValueEvaluator instance = new DefaultConfigValueEvaluator();\n        Map<String, PropertyValue> result = instance.evaluateRawValues(config.getContext());\n        assertThat(result).containsKey(\"confkey1\");\n        assertThat(result.get(\"confkey1\").getValue()).isEqualTo(\"javaconf-value1\");\n    }", "signature": "void testEvaluateRawValues()", "full_signature": "@Test public void testEvaluateRawValues()", "class_method_signature": "DefaultConfigValueEvaluatorTest.testEvaluateRawValues()", "testcase": true, "constructor": false, "invocations": ["current", "evaluateRawValues", "getContext", "containsKey", "assertThat", "isEqualTo", "assertThat", "getValue", "get"]}, "focal_class": {"identifier": "DefaultConfigValueEvaluator", "superclass": "", "interfaces": "implements ConfigValueEvaluator", "fields": [], "methods": [{"identifier": "evaluateRawValue", "parameters": "(String key, ConfigurationContext context)", "modifiers": "@Override public", "return": "PropertyValue", "signature": "PropertyValue evaluateRawValue(String key, ConfigurationContext context)", "full_signature": "@Override public PropertyValue evaluateRawValue(String key, ConfigurationContext context)", "class_method_signature": "DefaultConfigValueEvaluator.evaluateRawValue(String key, ConfigurationContext context)", "testcase": false, "constructor": false}, {"identifier": "evaluateRawValues", "parameters": "(ConfigurationContext context)", "modifiers": "@Override public", "return": "Map<String, PropertyValue>", "signature": "Map<String, PropertyValue> evaluateRawValues(ConfigurationContext context)", "full_signature": "@Override public Map<String, PropertyValue> evaluateRawValues(ConfigurationContext context)", "class_method_signature": "DefaultConfigValueEvaluator.evaluateRawValues(ConfigurationContext context)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DefaultConfigValueEvaluator.toString()", "testcase": false, "constructor": false}], "file": "code/spi-support/src/main/java/org/apache/tamaya/spisupport/DefaultConfigValueEvaluator.java"}, "focal_method": {"identifier": "evaluateRawValues", "parameters": "(ConfigurationContext context)", "modifiers": "@Override public", "return": "Map<String, PropertyValue>", "body": "@Override\n    public Map<String, PropertyValue> evaluateRawValues(ConfigurationContext context) {\n        Map<String, PropertyValue> result = new HashMap<>();\n        for (PropertySource propertySource : context.getPropertySources()) {\n            for (PropertyValue val: propertySource.getProperties().values()) {\n                if (val!=null && (val.getValueType() != PropertyValue.ValueType.VALUE || val.getValue() != null)){\n                    result.put(val.getKey(), val);\n                }\n            }\n        }\n        return result;\n    }", "signature": "Map<String, PropertyValue> evaluateRawValues(ConfigurationContext context)", "full_signature": "@Override public Map<String, PropertyValue> evaluateRawValues(ConfigurationContext context)", "class_method_signature": "DefaultConfigValueEvaluator.evaluateRawValues(ConfigurationContext context)", "testcase": false, "constructor": false, "invocations": ["getPropertySources", "values", "getProperties", "getValueType", "getValue", "put", "getKey"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}