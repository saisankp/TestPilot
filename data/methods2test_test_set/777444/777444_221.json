{"test_class": {"identifier": "CollectionExtractorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "CollectionExtractor extractor;", "modifier": "", "type": "CollectionExtractor", "declarator": "extractor", "var_name": "extractor"}, {"original_string": "private ObjectToJsonConverter converter;", "modifier": "private", "type": "ObjectToJsonConverter", "declarator": "converter", "var_name": "converter"}], "file": "agent/core/src/test/java/org/jolokia/converter/json/CollectionExtractorTest.java"}, "test_case": {"identifier": "jsonAndInvalidPaths", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void jsonAndInvalidPaths() throws AttributeNotFoundException {\n        Collection collection = Arrays.asList(\"jolokia\",\"habanero\");\n\n\n        for (String path : new String[] { \"bla\", \"2\"}) {\n            Stack<String> paths = new Stack();\n            paths.add(path);\n            try {\n                extractor.extractObject(converter, collection, paths, true);\n                fail();\n            } catch (AttributeNotFoundException exp) {\n\n            }\n        }\n    }", "signature": "void jsonAndInvalidPaths()", "full_signature": "@Test public void jsonAndInvalidPaths()", "class_method_signature": "CollectionExtractorTest.jsonAndInvalidPaths()", "testcase": true, "constructor": false, "invocations": ["asList", "add", "extractObject", "fail"]}, "focal_class": {"identifier": "CollectionExtractor", "superclass": "", "interfaces": "implements Extractor", "fields": [], "methods": [{"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "Class", "signature": "Class getType()", "full_signature": "public Class getType()", "class_method_signature": "CollectionExtractor.getType()", "testcase": false, "constructor": false}, {"identifier": "extractObject", "parameters": "(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts, boolean jsonify)", "modifiers": "public", "return": "Object", "signature": "Object extractObject(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts, boolean jsonify)", "full_signature": "public Object extractObject(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts, boolean jsonify)", "class_method_signature": "CollectionExtractor.extractObject(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts, boolean jsonify)", "testcase": false, "constructor": false}, {"identifier": "extractWithPath", "parameters": "(ObjectToJsonConverter pConverter, Collection pCollection, Stack<String> pPathParts, boolean pJsonify, String pPathPart,int pLength)", "modifiers": "private", "return": "Object", "signature": "Object extractWithPath(ObjectToJsonConverter pConverter, Collection pCollection, Stack<String> pPathParts, boolean pJsonify, String pPathPart,int pLength)", "full_signature": "private Object extractWithPath(ObjectToJsonConverter pConverter, Collection pCollection, Stack<String> pPathParts, boolean pJsonify, String pPathPart,int pLength)", "class_method_signature": "CollectionExtractor.extractWithPath(ObjectToJsonConverter pConverter, Collection pCollection, Stack<String> pPathParts, boolean pJsonify, String pPathPart,int pLength)", "testcase": false, "constructor": false}, {"identifier": "getElement", "parameters": "(Collection pCollection, int pIdx, int pLength)", "modifiers": "private", "return": "Object", "signature": "Object getElement(Collection pCollection, int pIdx, int pLength)", "full_signature": "private Object getElement(Collection pCollection, int pIdx, int pLength)", "class_method_signature": "CollectionExtractor.getElement(Collection pCollection, int pIdx, int pLength)", "testcase": false, "constructor": false}, {"identifier": "extractListAsJson", "parameters": "(ObjectToJsonConverter pConverter, Collection pCollection, Stack<String> pPathParts, int pLength)", "modifiers": "private", "return": "Object", "signature": "Object extractListAsJson(ObjectToJsonConverter pConverter, Collection pCollection, Stack<String> pPathParts, int pLength)", "full_signature": "private Object extractListAsJson(ObjectToJsonConverter pConverter, Collection pCollection, Stack<String> pPathParts, int pLength)", "class_method_signature": "CollectionExtractor.extractListAsJson(ObjectToJsonConverter pConverter, Collection pCollection, Stack<String> pPathParts, int pLength)", "testcase": false, "constructor": false}, {"identifier": "setObjectValue", "parameters": "(StringToObjectConverter pConverter, Object pInner, String pAttribute, Object pValue)", "modifiers": "public", "return": "Object", "signature": "Object setObjectValue(StringToObjectConverter pConverter, Object pInner, String pAttribute, Object pValue)", "full_signature": "public Object setObjectValue(StringToObjectConverter pConverter, Object pInner, String pAttribute, Object pValue)", "class_method_signature": "CollectionExtractor.setObjectValue(StringToObjectConverter pConverter, Object pInner, String pAttribute, Object pValue)", "testcase": false, "constructor": false}, {"identifier": "canSetValue", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean canSetValue()", "full_signature": "public boolean canSetValue()", "class_method_signature": "CollectionExtractor.canSetValue()", "testcase": false, "constructor": false}], "file": "agent/core/src/main/java/org/jolokia/converter/json/CollectionExtractor.java"}, "focal_method": {"identifier": "extractObject", "parameters": "(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts, boolean jsonify)", "modifiers": "public", "return": "Object", "body": "public Object extractObject(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts, boolean jsonify) throws AttributeNotFoundException {\n        Collection collection = (Collection) pValue;\n        String pathPart = pPathParts.isEmpty() ? null : pPathParts.pop();\n        int length = pConverter.getCollectionLength(collection.size());\n        if (pathPart != null) {\n            return extractWithPath(pConverter, collection, pPathParts, jsonify, pathPart, length);\n        } else {\n            return jsonify ? extractListAsJson(pConverter, collection, pPathParts, length) : collection;\n        }\n    }", "signature": "Object extractObject(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts, boolean jsonify)", "full_signature": "public Object extractObject(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts, boolean jsonify)", "class_method_signature": "CollectionExtractor.extractObject(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts, boolean jsonify)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "pop", "getCollectionLength", "size", "extractWithPath", "extractListAsJson"]}, "repository": {"repo_id": 777444, "url": "https://github.com/rhuss/jolokia", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 682, "size": 20451, "license": "licensed"}}