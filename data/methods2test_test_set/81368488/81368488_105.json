{"test_class": {"identifier": "MultilinguismFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "gazeplay-commons/src/test/java/net/gazeplay/commons/utils/multilinguism/MultilinguismFactoryTest.java"}, "test_case": {"identifier": "shouldGetByResource", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldGetByResource() {\n        String path = \"data/multilinguism/multilinguism.csv\";\n        Multilinguism result = MultilinguismFactory.getForResource(path);\n\n        assertNotNull(result);\n    }", "signature": "void shouldGetByResource()", "full_signature": "@Test void shouldGetByResource()", "class_method_signature": "MultilinguismFactoryTest.shouldGetByResource()", "testcase": true, "constructor": false, "invocations": ["getForResource", "assertNotNull"]}, "focal_class": {"identifier": "MultilinguismFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static String mainFilePath = \"data/multilinguism/multilinguism.csv\";", "modifier": "private final static", "type": "String", "declarator": "mainFilePath = \"data/multilinguism/multilinguism.csv\"", "var_name": "mainFilePath"}, {"original_string": "@Getter\n    private static final Multilinguism singleton = new Multilinguism(new I18N(mainFilePath));", "modifier": "@Getter\n    private static final", "type": "Multilinguism", "declarator": "singleton = new Multilinguism(new I18N(mainFilePath))", "var_name": "singleton"}, {"original_string": "private static final Map<String, Multilinguism> byResourceLocation = new HashMap<>();", "modifier": "private static final", "type": "Map<String, Multilinguism>", "declarator": "byResourceLocation = new HashMap<>()", "var_name": "byResourceLocation"}], "methods": [{"identifier": "getForResource", "parameters": "(final String resourceLocation)", "modifiers": "public static", "return": "Multilinguism", "signature": "Multilinguism getForResource(final String resourceLocation)", "full_signature": "public static Multilinguism getForResource(final String resourceLocation)", "class_method_signature": "MultilinguismFactory.getForResource(final String resourceLocation)", "testcase": false, "constructor": false}], "file": "gazeplay-commons/src/main/java/net/gazeplay/commons/utils/multilinguism/MultilinguismFactory.java"}, "focal_method": {"identifier": "getForResource", "parameters": "(final String resourceLocation)", "modifiers": "public static", "return": "Multilinguism", "body": "public static Multilinguism getForResource(final String resourceLocation) {\n        Multilinguism result = byResourceLocation.get(resourceLocation);\n        if (result == null) {\n            result = new Multilinguism(new I18N(resourceLocation));\n            byResourceLocation.put(resourceLocation, result);\n        }\n        return result;\n    }", "signature": "Multilinguism getForResource(final String resourceLocation)", "full_signature": "public static Multilinguism getForResource(final String resourceLocation)", "class_method_signature": "MultilinguismFactory.getForResource(final String resourceLocation)", "testcase": false, "constructor": false, "invocations": ["get", "put"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}