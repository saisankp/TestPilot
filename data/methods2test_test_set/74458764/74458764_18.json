{"test_class": {"identifier": "TestUuidProvider", "superclass": "", "interfaces": "", "fields": [], "file": "session-replacement/src/test/java/com/amadeus/session/TestUuidProvider.java"}, "test_case": {"identifier": "testNewId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testNewId() {\n    UuidProvider provider = new UuidProvider();\n    assertEquals(36, provider.newId().length());\n    assertThat(provider.newId(), RegexMatchers.matchesPattern(\"[a-f0-9\\\\-]{36}\"));\n  }", "signature": "void testNewId()", "full_signature": "@Test public void testNewId()", "class_method_signature": "TestUuidProvider.testNewId()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "length", "newId", "assertThat", "newId", "matchesPattern"]}, "focal_class": {"identifier": "UuidProvider", "superclass": "", "interfaces": "implements SessionIdProvider", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(UuidProvider.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(UuidProvider.class)", "var_name": "logger"}], "methods": [{"identifier": "newId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String newId()", "full_signature": "@Override public String newId()", "class_method_signature": "UuidProvider.newId()", "testcase": false, "constructor": false}, {"identifier": "readId", "parameters": "(String value)", "modifiers": "@Override public", "return": "String", "signature": "String readId(String value)", "full_signature": "@Override public String readId(String value)", "class_method_signature": "UuidProvider.readId(String value)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(SessionConfiguration configuration)", "modifiers": "@Override public", "return": "void", "signature": "void configure(SessionConfiguration configuration)", "full_signature": "@Override public void configure(SessionConfiguration configuration)", "class_method_signature": "UuidProvider.configure(SessionConfiguration configuration)", "testcase": false, "constructor": false}], "file": "session-replacement/src/main/java/com/amadeus/session/UuidProvider.java"}, "focal_method": {"identifier": "newId", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String newId() {\n    return UUID.randomUUID().toString();\n  }", "signature": "String newId()", "full_signature": "@Override public String newId()", "class_method_signature": "UuidProvider.newId()", "testcase": false, "constructor": false, "invocations": ["toString", "randomUUID"]}, "repository": {"repo_id": 74458764, "url": "https://github.com/AmadeusITGroup/HttpSessionReplacer", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 45, "size": 514, "license": "licensed"}}