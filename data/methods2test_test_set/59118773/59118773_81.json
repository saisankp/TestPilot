{"test_class": {"identifier": "TotalCancelledTendersByYearControllerTest", "superclass": "extends AbstractEndPointControllerTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private TotalCancelledTendersByYearController totalCancelledTendersByYearController;", "modifier": "@Autowired\n    private", "type": "TotalCancelledTendersByYearController", "declarator": "totalCancelledTendersByYearController", "var_name": "totalCancelledTendersByYearController"}], "file": "web/src/test/java/org/devgateway/ocds/web/rest/controller/TotalCancelledTendersByYearControllerTest.java"}, "test_case": {"identifier": "totalCancelledTendersByYear", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void totalCancelledTendersByYear() throws Exception {\n        final List<Document> totalCancelledTendersByYear = totalCancelledTendersByYearController\n                .totalCancelledTendersByYear(new YearFilterPagingRequest());\n\n        Assert.assertEquals(0, totalCancelledTendersByYear.size());\n    }", "signature": "void totalCancelledTendersByYear()", "full_signature": "@Test public void totalCancelledTendersByYear()", "class_method_signature": "TotalCancelledTendersByYearControllerTest.totalCancelledTendersByYear()", "testcase": true, "constructor": false, "invocations": ["totalCancelledTendersByYear", "assertEquals", "size"]}, "focal_class": {"identifier": "TotalCancelledTendersByYearController", "superclass": "extends GenericOCDSController", "interfaces": "", "fields": [], "methods": [{"identifier": "totalCancelledTendersByYear", "parameters": "(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Total Cancelled tenders by year. The tender amount is read from tender.value.\" + \"The tender status has to be 'cancelled'. The year is retrieved from tender.tenderPeriod.startDate.\") @RequestMapping(value = \"/api/totalCancelledTendersByYear\", method = { RequestMethod.POST, RequestMethod.GET }, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> totalCancelledTendersByYear(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Total Cancelled tenders by year. The tender amount is read from tender.value.\" + \"The tender status has to be 'cancelled'. The year is retrieved from tender.tenderPeriod.startDate.\") @RequestMapping(value = \"/api/totalCancelledTendersByYear\", method = { RequestMethod.POST, RequestMethod.GET }, produces = \"application/json\") public List<Document> totalCancelledTendersByYear(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "class_method_signature": "TotalCancelledTendersByYearController.totalCancelledTendersByYear(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}], "file": "web/src/main/java/org/devgateway/ocds/web/rest/controller/TotalCancelledTendersByYearController.java"}, "focal_method": {"identifier": "totalCancelledTendersByYear", "parameters": "(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Total Cancelled tenders by year. The tender amount is read from tender.value.\" + \"The tender status has to be 'cancelled'. The year is retrieved from tender.tenderPeriod.startDate.\") @RequestMapping(value = \"/api/totalCancelledTendersByYear\", method = { RequestMethod.POST, RequestMethod.GET }, produces = \"application/json\") public", "return": "List<Document>", "body": "@ApiOperation(value = \"Total Cancelled tenders by year. The tender amount is read from tender.value.\"\n            + \"The tender status has to be 'cancelled'. The year is retrieved from tender.tenderPeriod.startDate.\")\n    @RequestMapping(value = \"/api/totalCancelledTendersByYear\", method = { RequestMethod.POST, RequestMethod.GET },\n            produces = \"application/json\")\n    public List<Document> totalCancelledTendersByYear(@ModelAttribute @Valid final YearFilterPagingRequest filter) {\n\n\n        DBObject project = new BasicDBObject();\n        addYearlyMonthlyProjection(filter, project, ref(MongoConstants.FieldNames.TENDER_PERIOD_START_DATE));\n        project.put(MongoConstants.FieldNames.TENDER_VALUE_AMOUNT, 1);\n\n        Aggregation agg = newAggregation(\n                match(where(MongoConstants.FieldNames.TENDER_STATUS).is(Tender.Status.cancelled.toString())\n                        .and(MongoConstants.FieldNames.TENDER_PERIOD_START_DATE).exists(true)\n                        .andOperator(getYearDefaultFilterCriteria(filter,\n                                MongoConstants.FieldNames.TENDER_PERIOD_START_DATE))),\n                new CustomOperation(new Document(\"$project\", project)),\n                getYearlyMonthlyGroupingOperation(filter).\n                sum(ref(MongoConstants.FieldNames.TENDER_VALUE_AMOUNT)).as(Keys.TOTAL_CANCELLED_TENDERS_AMOUNT),\n                transformYearlyGrouping(filter).andInclude(Keys.TOTAL_CANCELLED_TENDERS_AMOUNT),\n                getSortByYearMonth(filter));\n\n       return releaseAgg(agg);\n    }", "signature": "List<Document> totalCancelledTendersByYear(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Total Cancelled tenders by year. The tender amount is read from tender.value.\" + \"The tender status has to be 'cancelled'. The year is retrieved from tender.tenderPeriod.startDate.\") @RequestMapping(value = \"/api/totalCancelledTendersByYear\", method = { RequestMethod.POST, RequestMethod.GET }, produces = \"application/json\") public List<Document> totalCancelledTendersByYear(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "class_method_signature": "TotalCancelledTendersByYearController.totalCancelledTendersByYear(@ModelAttribute @Valid final YearFilterPagingRequest filter)", "testcase": false, "constructor": false, "invocations": ["addYearlyMonthlyProjection", "ref", "put", "newAggregation", "match", "andOperator", "exists", "and", "is", "where", "toString", "getYearDefaultFilterCriteria", "as", "sum", "getYearlyMonthlyGroupingOperation", "ref", "andInclude", "transformYearlyGrouping", "getSortByYearMonth", "releaseAgg"]}, "repository": {"repo_id": 59118773, "url": "https://github.com/devgateway/oc-explorer", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 9004, "license": "licensed"}}