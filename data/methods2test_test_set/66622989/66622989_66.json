{"test_class": {"identifier": "ScheduleFetchTodaysSentenceUCTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ScheduleFetchTodaysSentenceUC mScheduleFetchTodaysSentenceUC;", "modifier": "private", "type": "ScheduleFetchTodaysSentenceUC", "declarator": "mScheduleFetchTodaysSentenceUC", "var_name": "mScheduleFetchTodaysSentenceUC"}, {"original_string": "@Mock\n    private SentenceFetchScheduler mSentenceFetchScheduler;", "modifier": "@Mock\n    private", "type": "SentenceFetchScheduler", "declarator": "mSentenceFetchScheduler", "var_name": "mSentenceFetchScheduler"}], "file": "app/src/test/java/com/xixicm/de/domain/interactor/ScheduleFetchTodaysSentenceUCTest.java"}, "test_case": {"identifier": "testRetryScheduleFetch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRetryScheduleFetch() {\n        long startTime = System.currentTimeMillis();\n        ScheduleFetchEvent event = new ScheduleFetchEvent(startTime, ScheduleFetchEvent.TYPE.RETRY);\n        mScheduleFetchTodaysSentenceUC.setRequestValue(event);\n        mScheduleFetchTodaysSentenceUC.run();\n        // nextFetchScheduleAt(long) is called\n        verify(mSentenceFetchScheduler).nextFetchScheduleAt(startTime + ScheduleFetchTodaysSentenceUC.RETRY_FETCHING_INTERVAL);\n    }", "signature": "void testRetryScheduleFetch()", "full_signature": "@Test public void testRetryScheduleFetch()", "class_method_signature": "ScheduleFetchTodaysSentenceUCTest.testRetryScheduleFetch()", "testcase": true, "constructor": false, "invocations": ["currentTimeMillis", "setRequestValue", "run", "nextFetchScheduleAt", "verify"]}, "focal_class": {"identifier": "ScheduleFetchTodaysSentenceUC", "superclass": "extends AbstractUseCase<ScheduleFetchEvent, Void, Void>", "interfaces": "", "fields": [{"original_string": "static final long NORMAL_FETCHING_INTERVAL = 8 * 60 * 60 * 1000;", "modifier": "static final", "type": "long", "declarator": "NORMAL_FETCHING_INTERVAL = 8 * 60 * 60 * 1000", "var_name": "NORMAL_FETCHING_INTERVAL"}, {"original_string": "static final long RETRY_FETCHING_INTERVAL = 5 * 60 * 1000;", "modifier": "static final", "type": "long", "declarator": "RETRY_FETCHING_INTERVAL = 5 * 60 * 1000", "var_name": "RETRY_FETCHING_INTERVAL"}, {"original_string": "SentenceFetchScheduler mSentenceFetchScheduler;", "modifier": "", "type": "SentenceFetchScheduler", "declarator": "mSentenceFetchScheduler", "var_name": "mSentenceFetchScheduler"}], "methods": [{"identifier": "ScheduleFetchTodaysSentenceUC", "parameters": "(SentenceFetchScheduler sentenceFetchScheduler)", "modifiers": "public", "return": "", "signature": " ScheduleFetchTodaysSentenceUC(SentenceFetchScheduler sentenceFetchScheduler)", "full_signature": "public  ScheduleFetchTodaysSentenceUC(SentenceFetchScheduler sentenceFetchScheduler)", "class_method_signature": "ScheduleFetchTodaysSentenceUC.ScheduleFetchTodaysSentenceUC(SentenceFetchScheduler sentenceFetchScheduler)", "testcase": false, "constructor": true}, {"identifier": "scheduleNextFetch", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void scheduleNextFetch()", "full_signature": "private void scheduleNextFetch()", "class_method_signature": "ScheduleFetchTodaysSentenceUC.scheduleNextFetch()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "ScheduleFetchTodaysSentenceUC.run()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/xixicm/de/domain/interactor/ScheduleFetchTodaysSentenceUC.java"}, "focal_method": {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void run() {\n        scheduleNextFetch();\n    }", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "ScheduleFetchTodaysSentenceUC.run()", "testcase": false, "constructor": false, "invocations": ["scheduleNextFetch"]}, "repository": {"repo_id": 66622989, "url": "https://github.com/enuoCM/DE-MVP-Clean", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 17, "size": 278, "license": "licensed"}}