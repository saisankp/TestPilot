{"test_class": {"identifier": "PipelineMdlTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final double PRECISION = 1e-6;", "modifier": "private static final", "type": "double", "declarator": "PRECISION = 1e-6", "var_name": "PRECISION"}], "file": "modules/ml/src/test/java/org/apache/ignite/ml/pipeline/PipelineMdlTest.java"}, "test_case": {"identifier": "testPredict", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPredict() {\n        Vector weights = new DenseVector(new double[] {2.0, 3.0});\n\n        verifyPredict(getMdl(new LogisticRegressionModel(weights, 1.0).withRawLabels(true)));\n    }", "signature": "void testPredict()", "full_signature": "@Test public void testPredict()", "class_method_signature": "PipelineMdlTest.testPredict()", "testcase": true, "constructor": false, "invocations": ["verifyPredict", "getMdl", "withRawLabels"]}, "focal_class": {"identifier": "PipelineMdl", "superclass": "", "interfaces": "implements IgniteModel<Vector, Double>, DeployableObject", "fields": [{"original_string": "private IgniteModel<Vector, Double> internalMdl;", "modifier": "private", "type": "IgniteModel<Vector, Double>", "declarator": "internalMdl", "var_name": "internalMdl"}, {"original_string": "private Preprocessor<K, V> preprocessor;", "modifier": "private", "type": "Preprocessor<K, V>", "declarator": "preprocessor", "var_name": "preprocessor"}], "methods": [{"identifier": "predict", "parameters": "(Vector vector)", "modifiers": "@Override public", "return": "Double", "signature": "Double predict(Vector vector)", "full_signature": "@Override public Double predict(Vector vector)", "class_method_signature": "PipelineMdl.predict(Vector vector)", "testcase": false, "constructor": false}, {"identifier": "getPreprocessor", "parameters": "()", "modifiers": "public", "return": "Preprocessor<K, V>", "signature": "Preprocessor<K, V> getPreprocessor()", "full_signature": "public Preprocessor<K, V> getPreprocessor()", "class_method_signature": "PipelineMdl.getPreprocessor()", "testcase": false, "constructor": false}, {"identifier": "getInternalMdl", "parameters": "()", "modifiers": "public", "return": "IgniteModel<Vector, Double>", "signature": "IgniteModel<Vector, Double> getInternalMdl()", "full_signature": "public IgniteModel<Vector, Double> getInternalMdl()", "class_method_signature": "PipelineMdl.getInternalMdl()", "testcase": false, "constructor": false}, {"identifier": "withInternalMdl", "parameters": "(IgniteModel<Vector, Double> internalMdl)", "modifiers": "public", "return": "PipelineMdl<K, V>", "signature": "PipelineMdl<K, V> withInternalMdl(IgniteModel<Vector, Double> internalMdl)", "full_signature": "public PipelineMdl<K, V> withInternalMdl(IgniteModel<Vector, Double> internalMdl)", "class_method_signature": "PipelineMdl.withInternalMdl(IgniteModel<Vector, Double> internalMdl)", "testcase": false, "constructor": false}, {"identifier": "withPreprocessor", "parameters": "(Preprocessor<K, V> preprocessor)", "modifiers": "public", "return": "PipelineMdl<K, V>", "signature": "PipelineMdl<K, V> withPreprocessor(Preprocessor<K, V> preprocessor)", "full_signature": "public PipelineMdl<K, V> withPreprocessor(Preprocessor<K, V> preprocessor)", "class_method_signature": "PipelineMdl.withPreprocessor(Preprocessor<K, V> preprocessor)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PipelineMdl.toString()", "testcase": false, "constructor": false}, {"identifier": "getDependencies", "parameters": "()", "modifiers": "@Override public", "return": "List<Object>", "signature": "List<Object> getDependencies()", "full_signature": "@Override public List<Object> getDependencies()", "class_method_signature": "PipelineMdl.getDependencies()", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/pipeline/PipelineMdl.java"}, "focal_method": {"identifier": "predict", "parameters": "(Vector vector)", "modifiers": "@Override public", "return": "Double", "body": "@Override public Double predict(Vector vector) {\n        return internalMdl.predict(vector);\n    }", "signature": "Double predict(Vector vector)", "full_signature": "@Override public Double predict(Vector vector)", "class_method_signature": "PipelineMdl.predict(Vector vector)", "testcase": false, "constructor": false, "invocations": ["predict"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}