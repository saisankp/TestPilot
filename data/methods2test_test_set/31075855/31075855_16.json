{"test_class": {"identifier": "PrefserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String GIVEN_KEY = \"givenKey\";", "modifier": "private static final", "type": "String", "declarator": "GIVEN_KEY = \"givenKey\"", "var_name": "GIVEN_KEY"}, {"original_string": "private static final String GIVEN_STRING_VALUE = \"givenStringValue\";", "modifier": "private static final", "type": "String", "declarator": "GIVEN_STRING_VALUE = \"givenStringValue\"", "var_name": "GIVEN_STRING_VALUE"}, {"original_string": "private static final String KEY_WHICH_DOES_NOT_EXIST = \"keyWhichDoesNotExist\";", "modifier": "private static final", "type": "String", "declarator": "KEY_WHICH_DOES_NOT_EXIST = \"keyWhichDoesNotExist\"", "var_name": "KEY_WHICH_DOES_NOT_EXIST"}, {"original_string": "private Prefser prefser;", "modifier": "private", "type": "Prefser", "declarator": "prefser", "var_name": "prefser"}], "file": "library/src/test/java/com/github/pwittchen/prefser/library/rx2/PrefserTest.java"}, "test_case": {"identifier": "testPutShouldThrowAnExceptionWhenKeyAndValueAreNullForPut", "parameters": "()", "modifiers": "@Test(expected = NullPointerException.class) public", "return": "void", "body": "@Test(expected = NullPointerException.class)\n  public void testPutShouldThrowAnExceptionWhenKeyAndValueAreNullForPut() {\n    // given\n    String key = null;\n    String value = null;\n\n    // when\n    prefser.put(key, value);\n\n    // then\n    // throw an exception\n  }", "signature": "void testPutShouldThrowAnExceptionWhenKeyAndValueAreNullForPut()", "full_signature": "@Test(expected = NullPointerException.class) public void testPutShouldThrowAnExceptionWhenKeyAndValueAreNullForPut()", "class_method_signature": "PrefserTest.testPutShouldThrowAnExceptionWhenKeyAndValueAreNullForPut()", "testcase": true, "constructor": false, "invocations": ["put"]}, "focal_class": {"identifier": "Prefser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String KEY_IS_NULL = \"key == null\";", "modifier": "private static final", "type": "String", "declarator": "KEY_IS_NULL = \"key == null\"", "var_name": "KEY_IS_NULL"}, {"original_string": "private static final String CLASS_OF_T_IS_NULL = \"classOfT == null\";", "modifier": "private static final", "type": "String", "declarator": "CLASS_OF_T_IS_NULL = \"classOfT == null\"", "var_name": "CLASS_OF_T_IS_NULL"}, {"original_string": "private static final String TYPE_TOKEN_OF_T_IS_NULL = \"typeTokenOfT == null\";", "modifier": "private static final", "type": "String", "declarator": "TYPE_TOKEN_OF_T_IS_NULL = \"typeTokenOfT == null\"", "var_name": "TYPE_TOKEN_OF_T_IS_NULL"}, {"original_string": "private static final String VALUE_IS_NULL = \"value == null\";", "modifier": "private static final", "type": "String", "declarator": "VALUE_IS_NULL = \"value == null\"", "var_name": "VALUE_IS_NULL"}, {"original_string": "private final SharedPreferences preferences;", "modifier": "private final", "type": "SharedPreferences", "declarator": "preferences", "var_name": "preferences"}, {"original_string": "private final SharedPreferences.Editor editor;", "modifier": "private final", "type": "SharedPreferences.Editor", "declarator": "editor", "var_name": "editor"}, {"original_string": "private final JsonConverter jsonConverter;", "modifier": "private final", "type": "JsonConverter", "declarator": "jsonConverter", "var_name": "jsonConverter"}, {"original_string": "private final AccessorsProvider accessorProvider;", "modifier": "private final", "type": "AccessorsProvider", "declarator": "accessorProvider", "var_name": "accessorProvider"}], "methods": [{"identifier": "Prefser", "parameters": "(@NonNull Context context)", "modifiers": "public", "return": "", "signature": " Prefser(@NonNull Context context)", "full_signature": "public  Prefser(@NonNull Context context)", "class_method_signature": "Prefser.Prefser(@NonNull Context context)", "testcase": false, "constructor": true}, {"identifier": "Prefser", "parameters": "(@NonNull Context context, @NonNull JsonConverter jsonConverter)", "modifiers": "public", "return": "", "signature": " Prefser(@NonNull Context context, @NonNull JsonConverter jsonConverter)", "full_signature": "public  Prefser(@NonNull Context context, @NonNull JsonConverter jsonConverter)", "class_method_signature": "Prefser.Prefser(@NonNull Context context, @NonNull JsonConverter jsonConverter)", "testcase": false, "constructor": true}, {"identifier": "Prefser", "parameters": "(@NonNull SharedPreferences sharedPreferences)", "modifiers": "public", "return": "", "signature": " Prefser(@NonNull SharedPreferences sharedPreferences)", "full_signature": "public  Prefser(@NonNull SharedPreferences sharedPreferences)", "class_method_signature": "Prefser.Prefser(@NonNull SharedPreferences sharedPreferences)", "testcase": false, "constructor": true}, {"identifier": "Prefser", "parameters": "(@NonNull SharedPreferences sharedPreferences,\n      @NonNull JsonConverter jsonConverter)", "modifiers": "@SuppressLint(\"CommitPrefEdits\") public", "return": "", "signature": " Prefser(@NonNull SharedPreferences sharedPreferences,\n      @NonNull JsonConverter jsonConverter)", "full_signature": "@SuppressLint(\"CommitPrefEdits\") public  Prefser(@NonNull SharedPreferences sharedPreferences,\n      @NonNull JsonConverter jsonConverter)", "class_method_signature": "Prefser.Prefser(@NonNull SharedPreferences sharedPreferences,\n      @NonNull JsonConverter jsonConverter)", "testcase": false, "constructor": true}, {"identifier": "getPreferences", "parameters": "()", "modifiers": "public", "return": "SharedPreferences", "signature": "SharedPreferences getPreferences()", "full_signature": "public SharedPreferences getPreferences()", "class_method_signature": "Prefser.getPreferences()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(String key)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(String key)", "full_signature": "public boolean contains(String key)", "class_method_signature": "Prefser.contains(String key)", "testcase": false, "constructor": false}, {"identifier": "getAndObserve", "parameters": "(String key, Class<T> classOfT, T defaultValue)", "modifiers": "public", "return": "Observable<T>", "signature": "Observable<T> getAndObserve(String key, Class<T> classOfT, T defaultValue)", "full_signature": "public Observable<T> getAndObserve(String key, Class<T> classOfT, T defaultValue)", "class_method_signature": "Prefser.getAndObserve(String key, Class<T> classOfT, T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getAndObserve", "parameters": "(final String key, final TypeToken<T> typeTokenOfT,\n      final T defaultValue)", "modifiers": "public", "return": "Observable<T>", "signature": "Observable<T> getAndObserve(final String key, final TypeToken<T> typeTokenOfT,\n      final T defaultValue)", "full_signature": "public Observable<T> getAndObserve(final String key, final TypeToken<T> typeTokenOfT,\n      final T defaultValue)", "class_method_signature": "Prefser.getAndObserve(final String key, final TypeToken<T> typeTokenOfT,\n      final T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "observe", "parameters": "(@NonNull String key, @NonNull Class<T> classOfT,\n      T defaultValue)", "modifiers": "public", "return": "Observable<T>", "signature": "Observable<T> observe(@NonNull String key, @NonNull Class<T> classOfT,\n      T defaultValue)", "full_signature": "public Observable<T> observe(@NonNull String key, @NonNull Class<T> classOfT,\n      T defaultValue)", "class_method_signature": "Prefser.observe(@NonNull String key, @NonNull Class<T> classOfT,\n      T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "observe", "parameters": "(@NonNull final String key,\n      @NonNull final TypeToken<T> typeTokenOfT, final T defaultValue)", "modifiers": "public", "return": "Observable<T>", "signature": "Observable<T> observe(@NonNull final String key,\n      @NonNull final TypeToken<T> typeTokenOfT, final T defaultValue)", "full_signature": "public Observable<T> observe(@NonNull final String key,\n      @NonNull final TypeToken<T> typeTokenOfT, final T defaultValue)", "class_method_signature": "Prefser.observe(@NonNull final String key,\n      @NonNull final TypeToken<T> typeTokenOfT, final T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(@NonNull String key, @NonNull Class<T> classOfT, T defaultValue)", "modifiers": "public", "return": "T", "signature": "T get(@NonNull String key, @NonNull Class<T> classOfT, T defaultValue)", "full_signature": "public T get(@NonNull String key, @NonNull Class<T> classOfT, T defaultValue)", "class_method_signature": "Prefser.get(@NonNull String key, @NonNull Class<T> classOfT, T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(@NonNull String key, @NonNull TypeToken<T> typeTokenOfT, T defaultValue)", "modifiers": "public", "return": "T", "signature": "T get(@NonNull String key, @NonNull TypeToken<T> typeTokenOfT, T defaultValue)", "full_signature": "public T get(@NonNull String key, @NonNull TypeToken<T> typeTokenOfT, T defaultValue)", "class_method_signature": "Prefser.get(@NonNull String key, @NonNull TypeToken<T> typeTokenOfT, T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "observePreferences", "parameters": "()", "modifiers": "public", "return": "Observable<String>", "signature": "Observable<String> observePreferences()", "full_signature": "public Observable<String> observePreferences()", "class_method_signature": "Prefser.observePreferences()", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(@NonNull String key, @NonNull T value)", "modifiers": "public", "return": "void", "signature": "void put(@NonNull String key, @NonNull T value)", "full_signature": "public void put(@NonNull String key, @NonNull T value)", "class_method_signature": "Prefser.put(@NonNull String key, @NonNull T value)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(@NonNull String key, @NonNull T value, @NonNull TypeToken<T> typeTokenOfT)", "modifiers": "public", "return": "void", "signature": "void put(@NonNull String key, @NonNull T value, @NonNull TypeToken<T> typeTokenOfT)", "full_signature": "public void put(@NonNull String key, @NonNull T value, @NonNull TypeToken<T> typeTokenOfT)", "class_method_signature": "Prefser.put(@NonNull String key, @NonNull T value, @NonNull TypeToken<T> typeTokenOfT)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(@NonNull String key)", "modifiers": "public", "return": "void", "signature": "void remove(@NonNull String key)", "full_signature": "public void remove(@NonNull String key)", "class_method_signature": "Prefser.remove(@NonNull String key)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "Prefser.clear()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "Prefser.size()", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/github/pwittchen/prefser/library/rx2/Prefser.java"}, "focal_method": {"identifier": "put", "parameters": "(@NonNull String key, @NonNull T value)", "modifiers": "public", "return": "void", "body": "public <T> void put(@NonNull String key, @NonNull T value) {\n    Preconditions.checkNotNull(value, VALUE_IS_NULL);\n    put(key, value, TypeToken.fromValue(value));\n  }", "signature": "void put(@NonNull String key, @NonNull T value)", "full_signature": "public void put(@NonNull String key, @NonNull T value)", "class_method_signature": "Prefser.put(@NonNull String key, @NonNull T value)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "put", "fromValue"]}, "repository": {"repo_id": 31075855, "url": "https://github.com/pwittchen/prefser", "stars": 222, "created": "2/20/2015 5:25:22 PM +00:00", "updates": "2020-01-15T11:15:23+00:00", "fork": "False", "license": "licensed"}}