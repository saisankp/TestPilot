{"test_class": {"identifier": "InsertTest", "superclass": "", "interfaces": "", "fields": [], "file": "ovsdb-client/src/test/java/com/vmware/ovsdb/protocol/operation/InsertTest.java"}, "test_case": {"identifier": "testSerialization", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSerialization() throws JsonProcessingException {\n    Row row = new Row().stringColumn(\"name\", \"ls1\")\n        .stringColumn(\"description\", \"first logical switch\");\n    Insert insert = new Insert(\"Logical_Switch\", row).withUuidName(\"insert_ls1\");\n\n    String expectedResult\n        = \"{\\\"op\\\":\\\"insert\\\",\\\"table\\\":\\\"Logical_Switch\\\",\"\n        + \"\\\"row\\\":{\\\"name\\\":\\\"ls1\\\",\\\"description\\\":\\\"first logical\"\n        + \" switch\\\"},\" + \"\\\"uuid-name\\\":\\\"insert_ls1\\\"}\";\n    assertEquals(expectedResult, JsonUtil.serialize(insert));\n  }", "signature": "void testSerialization()", "full_signature": "@Test public void testSerialization()", "class_method_signature": "InsertTest.testSerialization()", "testcase": true, "constructor": false, "invocations": ["stringColumn", "stringColumn", "withUuidName", "assertEquals", "serialize"]}, "focal_class": {"identifier": "Insert", "superclass": "extends Operation", "interfaces": "", "fields": [{"original_string": "private final String table;", "modifier": "private final", "type": "String", "declarator": "table", "var_name": "table"}, {"original_string": "private final Row row;", "modifier": "private final", "type": "Row", "declarator": "row", "var_name": "row"}, {"original_string": "@JsonProperty(value = \"uuid-name\")\n  @JsonInclude(JsonInclude.Include.NON_NULL)\n  private String uuidName;", "modifier": "@JsonProperty(value = \"uuid-name\")\n  @JsonInclude(JsonInclude.Include.NON_NULL)\n  private", "type": "String", "declarator": "uuidName", "var_name": "uuidName"}], "methods": [{"identifier": "Insert", "parameters": "(String table, Row row)", "modifiers": "public", "return": "", "signature": " Insert(String table, Row row)", "full_signature": "public  Insert(String table, Row row)", "class_method_signature": "Insert.Insert(String table, Row row)", "testcase": false, "constructor": true}, {"identifier": "Insert", "parameters": "(String table, Row row, String uuidName)", "modifiers": "public", "return": "", "signature": " Insert(String table, Row row, String uuidName)", "full_signature": "public  Insert(String table, Row row, String uuidName)", "class_method_signature": "Insert.Insert(String table, Row row, String uuidName)", "testcase": false, "constructor": true}, {"identifier": "withUuidName", "parameters": "(String uuidName)", "modifiers": "public", "return": "Insert", "signature": "Insert withUuidName(String uuidName)", "full_signature": "public Insert withUuidName(String uuidName)", "class_method_signature": "Insert.withUuidName(String uuidName)", "testcase": false, "constructor": false}, {"identifier": "getTable", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTable()", "full_signature": "public String getTable()", "class_method_signature": "Insert.getTable()", "testcase": false, "constructor": false}, {"identifier": "getRow", "parameters": "()", "modifiers": "public", "return": "Row", "signature": "Row getRow()", "full_signature": "public Row getRow()", "class_method_signature": "Insert.getRow()", "testcase": false, "constructor": false}, {"identifier": "getUuidName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUuidName()", "full_signature": "public String getUuidName()", "class_method_signature": "Insert.getUuidName()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Insert.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Insert.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Insert.toString()", "testcase": false, "constructor": false}], "file": "ovsdb-client/src/main/java/com/vmware/ovsdb/protocol/operation/Insert.java"}, "focal_method": {"identifier": "withUuidName", "parameters": "(String uuidName)", "modifiers": "public", "return": "Insert", "body": "public Insert withUuidName(String uuidName) {\n    this.uuidName = uuidName;\n    return this;\n  }", "signature": "Insert withUuidName(String uuidName)", "full_signature": "public Insert withUuidName(String uuidName)", "class_method_signature": "Insert.withUuidName(String uuidName)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 125550262, "url": "https://github.com/vmware/ovsdb-client-library", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 12, "size": 288, "license": "licensed"}}