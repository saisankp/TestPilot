{"test_class": {"identifier": "DiffFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "DiffFilter diffFilter;", "modifier": "", "type": "DiffFilter", "declarator": "diffFilter", "var_name": "diffFilter"}, {"original_string": "@Mock\n  Filter filter;", "modifier": "@Mock", "type": "Filter", "declarator": "filter", "var_name": "filter"}], "file": "imcache-core/src/test/java/com/cetsoft/imcache/cache/search/filter/DiffFilterTest.java"}, "test_case": {"identifier": "filter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void filter() {\n    Object object1 = new Object();\n    Object object2 = new Object();\n    Object object3 = new Object();\n    List<Object> list1 = new ArrayList<Object>();\n    list1.add(object1);\n    list1.add(object2);\n    List<Object> list2 = new ArrayList<Object>();\n    list2.add(object2);\n    list2.add(object3);\n    doReturn(list1).doReturn(list2).when(filter).filter(anyList());\n    List<Object> actualObjects = diffFilter.filter(list1);\n    assertEquals(object1, actualObjects.get(0));\n  }", "signature": "void filter()", "full_signature": "@Test public void filter()", "class_method_signature": "DiffFilterTest.filter()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "filter", "when", "doReturn", "doReturn", "anyList", "filter", "assertEquals", "get"]}, "focal_class": {"identifier": "DiffFilter", "superclass": "extends LogicalFilter", "interfaces": "", "fields": [{"original_string": "private Filter leftFilter, rightFilter;", "modifier": "private", "type": "Filter", "declarator": "leftFilter", "var_name": "leftFilter"}], "methods": [{"identifier": "DiffFilter", "parameters": "(Filter leftFilter, Filter rightFilter)", "modifiers": "public", "return": "", "signature": " DiffFilter(Filter leftFilter, Filter rightFilter)", "full_signature": "public  DiffFilter(Filter leftFilter, Filter rightFilter)", "class_method_signature": "DiffFilter.DiffFilter(Filter leftFilter, Filter rightFilter)", "testcase": false, "constructor": true}, {"identifier": "getLeftFilter", "parameters": "()", "modifiers": "public", "return": "Filter", "signature": "Filter getLeftFilter()", "full_signature": "public Filter getLeftFilter()", "class_method_signature": "DiffFilter.getLeftFilter()", "testcase": false, "constructor": false}, {"identifier": "getRightFilter", "parameters": "()", "modifiers": "public", "return": "Filter", "signature": "Filter getRightFilter()", "full_signature": "public Filter getRightFilter()", "class_method_signature": "DiffFilter.getRightFilter()", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(List<Object> objects)", "modifiers": "public", "return": "List<Object>", "signature": "List<Object> filter(List<Object> objects)", "full_signature": "public List<Object> filter(List<Object> objects)", "class_method_signature": "DiffFilter.filter(List<Object> objects)", "testcase": false, "constructor": false}], "file": "imcache-core/src/main/java/com/cetsoft/imcache/cache/search/filter/DiffFilter.java"}, "focal_method": {"identifier": "filter", "parameters": "(List<Object> objects)", "modifiers": "public", "return": "List<Object>", "body": "public List<Object> filter(List<Object> objects) {\n    final List<Object> leftResult = leftFilter.filter(objects);\n    final List<Object> rightResult = rightFilter.filter(objects);\n    for (final Object object : rightResult) {\n      leftResult.remove(object);\n    }\n    return leftResult;\n  }", "signature": "List<Object> filter(List<Object> objects)", "full_signature": "public List<Object> filter(List<Object> objects)", "class_method_signature": "DiffFilter.filter(List<Object> objects)", "testcase": false, "constructor": false, "invocations": ["filter", "filter", "remove"]}, "repository": {"repo_id": 12849994, "url": "https://github.com/Cetsoft/imcache", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 121, "size": 1599, "license": "licensed"}}