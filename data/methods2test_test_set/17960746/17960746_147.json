{"test_class": {"identifier": "AnimComposerTest", "superclass": "", "interfaces": "", "fields": [], "file": "jme3-core/src/test/java/com/jme3/anim/AnimComposerTest.java"}, "test_case": {"identifier": "testGetAnimClipsNamesIsNotModifiable", "parameters": "()", "modifiers": "@Test(expected = UnsupportedOperationException.class) public", "return": "void", "body": "@Test(expected = UnsupportedOperationException.class)\n    public void testGetAnimClipsNamesIsNotModifiable() {\n        AnimComposer composer = new AnimComposer();\n\n        composer.getAnimClipsNames().add(\"test\");\n    }", "signature": "void testGetAnimClipsNamesIsNotModifiable()", "full_signature": "@Test(expected = UnsupportedOperationException.class) public void testGetAnimClipsNamesIsNotModifiable()", "class_method_signature": "AnimComposerTest.testGetAnimClipsNamesIsNotModifiable()", "testcase": true, "constructor": false, "invocations": ["add", "getAnimClipsNames"]}, "focal_class": {"identifier": "AnimComposer", "superclass": "extends AbstractControl", "interfaces": "", "fields": [{"original_string": "public static final String DEFAULT_LAYER = \"Default\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_LAYER = \"Default\"", "var_name": "DEFAULT_LAYER"}, {"original_string": "private Map<String, AnimClip> animClipMap = new HashMap<>();", "modifier": "private", "type": "Map<String, AnimClip>", "declarator": "animClipMap = new HashMap<>()", "var_name": "animClipMap"}, {"original_string": "private Map<String, Action> actions = new HashMap<>();", "modifier": "private", "type": "Map<String, Action>", "declarator": "actions = new HashMap<>()", "var_name": "actions"}, {"original_string": "private float globalSpeed = 1f;", "modifier": "private", "type": "float", "declarator": "globalSpeed = 1f", "var_name": "globalSpeed"}, {"original_string": "private Map<String, Layer> layers = new LinkedHashMap<>();", "modifier": "private", "type": "Map<String, Layer>", "declarator": "layers = new LinkedHashMap<>()", "var_name": "layers"}], "methods": [{"identifier": "AnimComposer", "parameters": "()", "modifiers": "public", "return": "", "signature": " AnimComposer()", "full_signature": "public  AnimComposer()", "class_method_signature": "AnimComposer.AnimComposer()", "testcase": false, "constructor": true}, {"identifier": "hasAnimClip", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "signature": "boolean hasAnimClip(String name)", "full_signature": "public boolean hasAnimClip(String name)", "class_method_signature": "AnimComposer.hasAnimClip(String name)", "testcase": false, "constructor": false}, {"identifier": "getAnimClip", "parameters": "(String name)", "modifiers": "public", "return": "AnimClip", "signature": "AnimClip getAnimClip(String name)", "full_signature": "public AnimClip getAnimClip(String name)", "class_method_signature": "AnimComposer.getAnimClip(String name)", "testcase": false, "constructor": false}, {"identifier": "addAnimClip", "parameters": "(AnimClip anim)", "modifiers": "public", "return": "void", "signature": "void addAnimClip(AnimClip anim)", "full_signature": "public void addAnimClip(AnimClip anim)", "class_method_signature": "AnimComposer.addAnimClip(AnimClip anim)", "testcase": false, "constructor": false}, {"identifier": "removeAnimClip", "parameters": "(AnimClip anim)", "modifiers": "public", "return": "void", "signature": "void removeAnimClip(AnimClip anim)", "full_signature": "public void removeAnimClip(AnimClip anim)", "class_method_signature": "AnimComposer.removeAnimClip(AnimClip anim)", "testcase": false, "constructor": false}, {"identifier": "setCurrentAction", "parameters": "(String name)", "modifiers": "public", "return": "Action", "signature": "Action setCurrentAction(String name)", "full_signature": "public Action setCurrentAction(String name)", "class_method_signature": "AnimComposer.setCurrentAction(String name)", "testcase": false, "constructor": false}, {"identifier": "setCurrentAction", "parameters": "(String actionName, String layerName)", "modifiers": "public", "return": "Action", "signature": "Action setCurrentAction(String actionName, String layerName)", "full_signature": "public Action setCurrentAction(String actionName, String layerName)", "class_method_signature": "AnimComposer.setCurrentAction(String actionName, String layerName)", "testcase": false, "constructor": false}, {"identifier": "getCurrentAction", "parameters": "()", "modifiers": "public", "return": "Action", "signature": "Action getCurrentAction()", "full_signature": "public Action getCurrentAction()", "class_method_signature": "AnimComposer.getCurrentAction()", "testcase": false, "constructor": false}, {"identifier": "getCurrentAction", "parameters": "(String layerName)", "modifiers": "public", "return": "Action", "signature": "Action getCurrentAction(String layerName)", "full_signature": "public Action getCurrentAction(String layerName)", "class_method_signature": "AnimComposer.getCurrentAction(String layerName)", "testcase": false, "constructor": false}, {"identifier": "removeCurrentAction", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeCurrentAction()", "full_signature": "public void removeCurrentAction()", "class_method_signature": "AnimComposer.removeCurrentAction()", "testcase": false, "constructor": false}, {"identifier": "removeCurrentAction", "parameters": "(String layerName)", "modifiers": "public", "return": "void", "signature": "void removeCurrentAction(String layerName)", "full_signature": "public void removeCurrentAction(String layerName)", "class_method_signature": "AnimComposer.removeCurrentAction(String layerName)", "testcase": false, "constructor": false}, {"identifier": "getTime", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getTime()", "full_signature": "public double getTime()", "class_method_signature": "AnimComposer.getTime()", "testcase": false, "constructor": false}, {"identifier": "getTime", "parameters": "(String layerName)", "modifiers": "public", "return": "double", "signature": "double getTime(String layerName)", "full_signature": "public double getTime(String layerName)", "class_method_signature": "AnimComposer.getTime(String layerName)", "testcase": false, "constructor": false}, {"identifier": "setTime", "parameters": "(double time)", "modifiers": "public", "return": "void", "signature": "void setTime(double time)", "full_signature": "public void setTime(double time)", "class_method_signature": "AnimComposer.setTime(double time)", "testcase": false, "constructor": false}, {"identifier": "setTime", "parameters": "(String layerName, double time)", "modifiers": "public", "return": "void", "signature": "void setTime(String layerName, double time)", "full_signature": "public void setTime(String layerName, double time)", "class_method_signature": "AnimComposer.setTime(String layerName, double time)", "testcase": false, "constructor": false}, {"identifier": "action", "parameters": "(String name)", "modifiers": "public", "return": "Action", "signature": "Action action(String name)", "full_signature": "public Action action(String name)", "class_method_signature": "AnimComposer.action(String name)", "testcase": false, "constructor": false}, {"identifier": "getAction", "parameters": "(String name)", "modifiers": "public", "return": "Action", "signature": "Action getAction(String name)", "full_signature": "public Action getAction(String name)", "class_method_signature": "AnimComposer.getAction(String name)", "testcase": false, "constructor": false}, {"identifier": "addAction", "parameters": "(String name, Action action)", "modifiers": "public", "return": "void", "signature": "void addAction(String name, Action action)", "full_signature": "public void addAction(String name, Action action)", "class_method_signature": "AnimComposer.addAction(String name, Action action)", "testcase": false, "constructor": false}, {"identifier": "makeAction", "parameters": "(String name)", "modifiers": "public", "return": "Action", "signature": "Action makeAction(String name)", "full_signature": "public Action makeAction(String name)", "class_method_signature": "AnimComposer.makeAction(String name)", "testcase": false, "constructor": false}, {"identifier": "hasAction", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "signature": "boolean hasAction(String name)", "full_signature": "public boolean hasAction(String name)", "class_method_signature": "AnimComposer.hasAction(String name)", "testcase": false, "constructor": false}, {"identifier": "removeAction", "parameters": "(String name)", "modifiers": "public", "return": "Action", "signature": "Action removeAction(String name)", "full_signature": "public Action removeAction(String name)", "class_method_signature": "AnimComposer.removeAction(String name)", "testcase": false, "constructor": false}, {"identifier": "makeLayer", "parameters": "(String name, AnimationMask mask)", "modifiers": "public", "return": "void", "signature": "void makeLayer(String name, AnimationMask mask)", "full_signature": "public void makeLayer(String name, AnimationMask mask)", "class_method_signature": "AnimComposer.makeLayer(String name, AnimationMask mask)", "testcase": false, "constructor": false}, {"identifier": "removeLayer", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void removeLayer(String name)", "full_signature": "public void removeLayer(String name)", "class_method_signature": "AnimComposer.removeLayer(String name)", "testcase": false, "constructor": false}, {"identifier": "actionSequence", "parameters": "(String name, Tween... tweens)", "modifiers": "public", "return": "BaseAction", "signature": "BaseAction actionSequence(String name, Tween... tweens)", "full_signature": "public BaseAction actionSequence(String name, Tween... tweens)", "class_method_signature": "AnimComposer.actionSequence(String name, Tween... tweens)", "testcase": false, "constructor": false}, {"identifier": "actionBlended", "parameters": "(String name, BlendSpace blendSpace, String... clips)", "modifiers": "public", "return": "BlendAction", "signature": "BlendAction actionBlended(String name, BlendSpace blendSpace, String... clips)", "full_signature": "public BlendAction actionBlended(String name, BlendSpace blendSpace, String... clips)", "class_method_signature": "AnimComposer.actionBlended(String name, BlendSpace blendSpace, String... clips)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reset()", "full_signature": "public void reset()", "class_method_signature": "AnimComposer.reset()", "testcase": false, "constructor": false}, {"identifier": "getAnimClips", "parameters": "()", "modifiers": "public", "return": "Collection<AnimClip>", "signature": "Collection<AnimClip> getAnimClips()", "full_signature": "public Collection<AnimClip> getAnimClips()", "class_method_signature": "AnimComposer.getAnimClips()", "testcase": false, "constructor": false}, {"identifier": "getAnimClipsNames", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getAnimClipsNames()", "full_signature": "public Set<String> getAnimClipsNames()", "class_method_signature": "AnimComposer.getAnimClipsNames()", "testcase": false, "constructor": false}, {"identifier": "controlUpdate", "parameters": "(float tpf)", "modifiers": "@Override protected", "return": "void", "signature": "void controlUpdate(float tpf)", "full_signature": "@Override protected void controlUpdate(float tpf)", "class_method_signature": "AnimComposer.controlUpdate(float tpf)", "testcase": false, "constructor": false}, {"identifier": "controlRender", "parameters": "(RenderManager rm, ViewPort vp)", "modifiers": "@Override protected", "return": "void", "signature": "void controlRender(RenderManager rm, ViewPort vp)", "full_signature": "@Override protected void controlRender(RenderManager rm, ViewPort vp)", "class_method_signature": "AnimComposer.controlRender(RenderManager rm, ViewPort vp)", "testcase": false, "constructor": false}, {"identifier": "getGlobalSpeed", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getGlobalSpeed()", "full_signature": "public float getGlobalSpeed()", "class_method_signature": "AnimComposer.getGlobalSpeed()", "testcase": false, "constructor": false}, {"identifier": "setGlobalSpeed", "parameters": "(float globalSpeed)", "modifiers": "public", "return": "void", "signature": "void setGlobalSpeed(float globalSpeed)", "full_signature": "public void setGlobalSpeed(float globalSpeed)", "class_method_signature": "AnimComposer.setGlobalSpeed(float globalSpeed)", "testcase": false, "constructor": false}, {"identifier": "jmeClone", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object jmeClone()", "full_signature": "@Override public Object jmeClone()", "class_method_signature": "AnimComposer.jmeClone()", "testcase": false, "constructor": false}, {"identifier": "cloneFields", "parameters": "(Cloner cloner, Object original)", "modifiers": "@Override public", "return": "void", "signature": "void cloneFields(Cloner cloner, Object original)", "full_signature": "@Override public void cloneFields(Cloner cloner, Object original)", "class_method_signature": "AnimComposer.cloneFields(Cloner cloner, Object original)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(JmeImporter im)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "void", "signature": "void read(JmeImporter im)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public void read(JmeImporter im)", "class_method_signature": "AnimComposer.read(JmeImporter im)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(JmeExporter ex)", "modifiers": "@Override public", "return": "void", "signature": "void write(JmeExporter ex)", "full_signature": "@Override public void write(JmeExporter ex)", "class_method_signature": "AnimComposer.write(JmeExporter ex)", "testcase": false, "constructor": false}], "file": "jme3-core/src/main/java/com/jme3/anim/AnimComposer.java"}, "focal_method": {"identifier": "getAnimClipsNames", "parameters": "()", "modifiers": "public", "return": "Set<String>", "body": "public Set<String> getAnimClipsNames() {\n        return Collections.unmodifiableSet(animClipMap.keySet());\n    }", "signature": "Set<String> getAnimClipsNames()", "full_signature": "public Set<String> getAnimClipsNames()", "class_method_signature": "AnimComposer.getAnimClipsNames()", "testcase": false, "constructor": false, "invocations": ["unmodifiableSet", "keySet"]}, "repository": {"repo_id": 17960746, "url": "https://github.com/jMonkeyEngine/jmonkeyengine", "language": "Java", "is_fork": false, "fork_count": 957, "stargazer_count": 2373, "size": 861551, "license": "licensed"}}