{"test_class": {"identifier": "MetricsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final double EPS = 0.000001;", "modifier": "private static final", "type": "double", "declarator": "EPS = 0.000001", "var_name": "EPS"}, {"original_string": "private MockTime time = new MockTime();", "modifier": "private", "type": "MockTime", "declarator": "time = new MockTime()", "var_name": "time"}, {"original_string": "private MetricConfig config = new MetricConfig();", "modifier": "private", "type": "MetricConfig", "declarator": "config = new MetricConfig()", "var_name": "config"}, {"original_string": "private Metrics metrics;", "modifier": "private", "type": "Metrics", "declarator": "metrics", "var_name": "metrics"}], "file": "clients/src/test/java/org/apache/kafka/common/metrics/MetricsTest.java"}, "test_case": {"identifier": "testRemoveMetric", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRemoveMetric() {\n        int size = metrics.metrics().size();\n        metrics.addMetric(metrics.metricName(\"test1\", \"grp1\"), new Count());\n        metrics.addMetric(metrics.metricName(\"test2\", \"grp1\"), new Count());\n\n        assertNotNull(metrics.removeMetric(metrics.metricName(\"test1\", \"grp1\")));\n        assertNull(metrics.metrics().get(metrics.metricName(\"test1\", \"grp1\")));\n        assertNotNull(metrics.metrics().get(metrics.metricName(\"test2\", \"grp1\")));\n\n        assertNotNull(metrics.removeMetric(metrics.metricName(\"test2\", \"grp1\")));\n        assertNull(metrics.metrics().get(metrics.metricName(\"test2\", \"grp1\")));\n\n        assertEquals(size, metrics.metrics().size());\n    }", "signature": "void testRemoveMetric()", "full_signature": "@Test public void testRemoveMetric()", "class_method_signature": "MetricsTest.testRemoveMetric()", "testcase": true, "constructor": false, "invocations": ["size", "metrics", "addMetric", "metricName", "addMetric", "metricName", "assertNotNull", "removeMetric", "metricName", "assertNull", "get", "metrics", "metricName", "assertNotNull", "get", "metrics", "metricName", "assertNotNull", "removeMetric", "metricName", "assertNull", "get", "metrics", "metricName", "assertEquals", "size", "metrics"]}, "focal_class": {"identifier": "Metrics", "superclass": "", "interfaces": "implements Closeable", "fields": [{"original_string": "private final MetricConfig config;", "modifier": "private final", "type": "MetricConfig", "declarator": "config", "var_name": "config"}, {"original_string": "private final ConcurrentMap<MetricName, KafkaMetric> metrics;", "modifier": "private final", "type": "ConcurrentMap<MetricName, KafkaMetric>", "declarator": "metrics", "var_name": "metrics"}, {"original_string": "private final ConcurrentMap<String, Sensor> sensors;", "modifier": "private final", "type": "ConcurrentMap<String, Sensor>", "declarator": "sensors", "var_name": "sensors"}, {"original_string": "private final ConcurrentMap<Sensor, List<Sensor>> childrenSensors;", "modifier": "private final", "type": "ConcurrentMap<Sensor, List<Sensor>>", "declarator": "childrenSensors", "var_name": "childrenSensors"}, {"original_string": "private final List<MetricsReporter> reporters;", "modifier": "private final", "type": "List<MetricsReporter>", "declarator": "reporters", "var_name": "reporters"}, {"original_string": "private final Time time;", "modifier": "private final", "type": "Time", "declarator": "time", "var_name": "time"}, {"original_string": "private final ScheduledThreadPoolExecutor metricsScheduler;", "modifier": "private final", "type": "ScheduledThreadPoolExecutor", "declarator": "metricsScheduler", "var_name": "metricsScheduler"}, {"original_string": "private static final Logger log = LoggerFactory.getLogger(Metrics.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(Metrics.class)", "var_name": "log"}], "methods": [{"identifier": "Metrics", "parameters": "()", "modifiers": "public", "return": "", "signature": " Metrics()", "full_signature": "public  Metrics()", "class_method_signature": "Metrics.Metrics()", "testcase": false, "constructor": true}, {"identifier": "Metrics", "parameters": "(Time time)", "modifiers": "public", "return": "", "signature": " Metrics(Time time)", "full_signature": "public  Metrics(Time time)", "class_method_signature": "Metrics.Metrics(Time time)", "testcase": false, "constructor": true}, {"identifier": "Metrics", "parameters": "(MetricConfig defaultConfig, Time time)", "modifiers": "public", "return": "", "signature": " Metrics(MetricConfig defaultConfig, Time time)", "full_signature": "public  Metrics(MetricConfig defaultConfig, Time time)", "class_method_signature": "Metrics.Metrics(MetricConfig defaultConfig, Time time)", "testcase": false, "constructor": true}, {"identifier": "Metrics", "parameters": "(MetricConfig defaultConfig)", "modifiers": "public", "return": "", "signature": " Metrics(MetricConfig defaultConfig)", "full_signature": "public  Metrics(MetricConfig defaultConfig)", "class_method_signature": "Metrics.Metrics(MetricConfig defaultConfig)", "testcase": false, "constructor": true}, {"identifier": "Metrics", "parameters": "(MetricConfig defaultConfig, List<MetricsReporter> reporters, Time time)", "modifiers": "public", "return": "", "signature": " Metrics(MetricConfig defaultConfig, List<MetricsReporter> reporters, Time time)", "full_signature": "public  Metrics(MetricConfig defaultConfig, List<MetricsReporter> reporters, Time time)", "class_method_signature": "Metrics.Metrics(MetricConfig defaultConfig, List<MetricsReporter> reporters, Time time)", "testcase": false, "constructor": true}, {"identifier": "Metrics", "parameters": "(MetricConfig defaultConfig, List<MetricsReporter> reporters, Time time, boolean enableExpiration)", "modifiers": "public", "return": "", "signature": " Metrics(MetricConfig defaultConfig, List<MetricsReporter> reporters, Time time, boolean enableExpiration)", "full_signature": "public  Metrics(MetricConfig defaultConfig, List<MetricsReporter> reporters, Time time, boolean enableExpiration)", "class_method_signature": "Metrics.Metrics(MetricConfig defaultConfig, List<MetricsReporter> reporters, Time time, boolean enableExpiration)", "testcase": false, "constructor": true}, {"identifier": "metricName", "parameters": "(String name, String group, String description, Map<String, String> tags)", "modifiers": "public", "return": "MetricName", "signature": "MetricName metricName(String name, String group, String description, Map<String, String> tags)", "full_signature": "public MetricName metricName(String name, String group, String description, Map<String, String> tags)", "class_method_signature": "Metrics.metricName(String name, String group, String description, Map<String, String> tags)", "testcase": false, "constructor": false}, {"identifier": "metricName", "parameters": "(String name, String group, String description)", "modifiers": "public", "return": "MetricName", "signature": "MetricName metricName(String name, String group, String description)", "full_signature": "public MetricName metricName(String name, String group, String description)", "class_method_signature": "Metrics.metricName(String name, String group, String description)", "testcase": false, "constructor": false}, {"identifier": "metricName", "parameters": "(String name, String group)", "modifiers": "public", "return": "MetricName", "signature": "MetricName metricName(String name, String group)", "full_signature": "public MetricName metricName(String name, String group)", "class_method_signature": "Metrics.metricName(String name, String group)", "testcase": false, "constructor": false}, {"identifier": "metricName", "parameters": "(String name, String group, String description, String... keyValue)", "modifiers": "public", "return": "MetricName", "signature": "MetricName metricName(String name, String group, String description, String... keyValue)", "full_signature": "public MetricName metricName(String name, String group, String description, String... keyValue)", "class_method_signature": "Metrics.metricName(String name, String group, String description, String... keyValue)", "testcase": false, "constructor": false}, {"identifier": "metricName", "parameters": "(String name, String group, Map<String, String> tags)", "modifiers": "public", "return": "MetricName", "signature": "MetricName metricName(String name, String group, Map<String, String> tags)", "full_signature": "public MetricName metricName(String name, String group, Map<String, String> tags)", "class_method_signature": "Metrics.metricName(String name, String group, Map<String, String> tags)", "testcase": false, "constructor": false}, {"identifier": "getTags", "parameters": "(String... keyValue)", "modifiers": "private static", "return": "Map<String, String>", "signature": "Map<String, String> getTags(String... keyValue)", "full_signature": "private static Map<String, String> getTags(String... keyValue)", "class_method_signature": "Metrics.getTags(String... keyValue)", "testcase": false, "constructor": false}, {"identifier": "config", "parameters": "()", "modifiers": "public", "return": "MetricConfig", "signature": "MetricConfig config()", "full_signature": "public MetricConfig config()", "class_method_signature": "Metrics.config()", "testcase": false, "constructor": false}, {"identifier": "getSensor", "parameters": "(String name)", "modifiers": "public", "return": "Sensor", "signature": "Sensor getSensor(String name)", "full_signature": "public Sensor getSensor(String name)", "class_method_signature": "Metrics.getSensor(String name)", "testcase": false, "constructor": false}, {"identifier": "sensor", "parameters": "(String name)", "modifiers": "public", "return": "Sensor", "signature": "Sensor sensor(String name)", "full_signature": "public Sensor sensor(String name)", "class_method_signature": "Metrics.sensor(String name)", "testcase": false, "constructor": false}, {"identifier": "sensor", "parameters": "(String name, Sensor... parents)", "modifiers": "public", "return": "Sensor", "signature": "Sensor sensor(String name, Sensor... parents)", "full_signature": "public Sensor sensor(String name, Sensor... parents)", "class_method_signature": "Metrics.sensor(String name, Sensor... parents)", "testcase": false, "constructor": false}, {"identifier": "sensor", "parameters": "(String name, MetricConfig config, Sensor... parents)", "modifiers": "public synchronized", "return": "Sensor", "signature": "Sensor sensor(String name, MetricConfig config, Sensor... parents)", "full_signature": "public synchronized Sensor sensor(String name, MetricConfig config, Sensor... parents)", "class_method_signature": "Metrics.sensor(String name, MetricConfig config, Sensor... parents)", "testcase": false, "constructor": false}, {"identifier": "sensor", "parameters": "(String name, MetricConfig config, long inactiveSensorExpirationTimeSeconds, Sensor... parents)", "modifiers": "public synchronized", "return": "Sensor", "signature": "Sensor sensor(String name, MetricConfig config, long inactiveSensorExpirationTimeSeconds, Sensor... parents)", "full_signature": "public synchronized Sensor sensor(String name, MetricConfig config, long inactiveSensorExpirationTimeSeconds, Sensor... parents)", "class_method_signature": "Metrics.sensor(String name, MetricConfig config, long inactiveSensorExpirationTimeSeconds, Sensor... parents)", "testcase": false, "constructor": false}, {"identifier": "removeSensor", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void removeSensor(String name)", "full_signature": "public void removeSensor(String name)", "class_method_signature": "Metrics.removeSensor(String name)", "testcase": false, "constructor": false}, {"identifier": "addMetric", "parameters": "(MetricName metricName, Measurable measurable)", "modifiers": "public", "return": "void", "signature": "void addMetric(MetricName metricName, Measurable measurable)", "full_signature": "public void addMetric(MetricName metricName, Measurable measurable)", "class_method_signature": "Metrics.addMetric(MetricName metricName, Measurable measurable)", "testcase": false, "constructor": false}, {"identifier": "addMetric", "parameters": "(MetricName metricName, MetricConfig config, Measurable measurable)", "modifiers": "public synchronized", "return": "void", "signature": "void addMetric(MetricName metricName, MetricConfig config, Measurable measurable)", "full_signature": "public synchronized void addMetric(MetricName metricName, MetricConfig config, Measurable measurable)", "class_method_signature": "Metrics.addMetric(MetricName metricName, MetricConfig config, Measurable measurable)", "testcase": false, "constructor": false}, {"identifier": "removeMetric", "parameters": "(MetricName metricName)", "modifiers": "public synchronized", "return": "KafkaMetric", "signature": "KafkaMetric removeMetric(MetricName metricName)", "full_signature": "public synchronized KafkaMetric removeMetric(MetricName metricName)", "class_method_signature": "Metrics.removeMetric(MetricName metricName)", "testcase": false, "constructor": false}, {"identifier": "addReporter", "parameters": "(MetricsReporter reporter)", "modifiers": "public synchronized", "return": "void", "signature": "void addReporter(MetricsReporter reporter)", "full_signature": "public synchronized void addReporter(MetricsReporter reporter)", "class_method_signature": "Metrics.addReporter(MetricsReporter reporter)", "testcase": false, "constructor": false}, {"identifier": "registerMetric", "parameters": "(KafkaMetric metric)", "modifiers": "synchronized", "return": "void", "signature": "void registerMetric(KafkaMetric metric)", "full_signature": "synchronized void registerMetric(KafkaMetric metric)", "class_method_signature": "Metrics.registerMetric(KafkaMetric metric)", "testcase": false, "constructor": false}, {"identifier": "metrics", "parameters": "()", "modifiers": "public", "return": "Map<MetricName, KafkaMetric>", "signature": "Map<MetricName, KafkaMetric> metrics()", "full_signature": "public Map<MetricName, KafkaMetric> metrics()", "class_method_signature": "Metrics.metrics()", "testcase": false, "constructor": false}, {"identifier": "childrenSensors", "parameters": "()", "modifiers": "", "return": "Map<Sensor, List<Sensor>>", "signature": "Map<Sensor, List<Sensor>> childrenSensors()", "full_signature": " Map<Sensor, List<Sensor>> childrenSensors()", "class_method_signature": "Metrics.childrenSensors()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "Metrics.close()", "testcase": false, "constructor": false}], "file": "clients/src/main/java/org/apache/kafka/common/metrics/Metrics.java"}, "focal_method": {"identifier": "removeMetric", "parameters": "(MetricName metricName)", "modifiers": "public synchronized", "return": "KafkaMetric", "body": "public synchronized KafkaMetric removeMetric(MetricName metricName) {\n        KafkaMetric metric = this.metrics.remove(metricName);\n        if (metric != null) {\n            for (MetricsReporter reporter : reporters)\n                reporter.metricRemoval(metric);\n        }\n        return metric;\n    }", "signature": "KafkaMetric removeMetric(MetricName metricName)", "full_signature": "public synchronized KafkaMetric removeMetric(MetricName metricName)", "class_method_signature": "Metrics.removeMetric(MetricName metricName)", "testcase": false, "constructor": false, "invocations": ["remove", "metricRemoval"]}, "repository": {"repo_id": 135978112, "url": "https://github.com/anurnomeru/kafka-0.10.0.1-source-reading", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 2953, "license": "licensed"}}