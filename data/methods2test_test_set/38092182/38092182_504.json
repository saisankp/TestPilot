{"test_class": {"identifier": "MraidBannerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String INPUT_HTML_DATA = \"%3Chtml%3E%3C%2Fhtml%3E\";", "modifier": "private static final", "type": "String", "declarator": "INPUT_HTML_DATA = \"%3Chtml%3E%3C%2Fhtml%3E\"", "var_name": "INPUT_HTML_DATA"}, {"original_string": "MraidController mockMraidController;", "modifier": "", "type": "MraidController", "declarator": "mockMraidController", "var_name": "mockMraidController"}, {"original_string": "@Mock AdConfiguration mockAdConfiguration;", "modifier": "@Mock", "type": "AdConfiguration", "declarator": "mockAdConfiguration", "var_name": "mockAdConfiguration"}, {"original_string": "@Mock CustomEventBannerListener mockBannerListener;", "modifier": "@Mock", "type": "CustomEventBannerListener", "declarator": "mockBannerListener", "var_name": "mockBannerListener"}, {"original_string": "private Context context;", "modifier": "private", "type": "Context", "declarator": "context", "var_name": "context"}, {"original_string": "private Map<String, Object> localExtras;", "modifier": "private", "type": "Map<String, Object>", "declarator": "localExtras", "var_name": "localExtras"}, {"original_string": "private Map<String, String> serverExtras;", "modifier": "private", "type": "Map<String, String>", "declarator": "serverExtras", "var_name": "serverExtras"}, {"original_string": "private MraidBanner subject;", "modifier": "private", "type": "MraidBanner", "declarator": "subject", "var_name": "subject"}], "file": "MoPubAd/mopub-sdk/src/test/java/com/mopub/mraid/MraidBannerTest.java"}, "test_case": {"identifier": "loadBanner_whenExtrasAreMalformed_shouldNotifyBannerListenerFailureAndReturn", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void loadBanner_whenExtrasAreMalformed_shouldNotifyBannerListenerFailureAndReturn() {\n        serverExtras.remove(HTML_RESPONSE_BODY_KEY);\n\n        subject.loadBanner(context, mockBannerListener, localExtras, serverExtras);\n\n        verify(mockBannerListener).onBannerFailed(eq(MRAID_LOAD_ERROR));\n    }", "signature": "void loadBanner_whenExtrasAreMalformed_shouldNotifyBannerListenerFailureAndReturn()", "full_signature": "@Test public void loadBanner_whenExtrasAreMalformed_shouldNotifyBannerListenerFailureAndReturn()", "class_method_signature": "MraidBannerTest.loadBanner_whenExtrasAreMalformed_shouldNotifyBannerListenerFailureAndReturn()", "testcase": true, "constructor": false, "invocations": ["remove", "loadBanner", "onBannerFailed", "verify", "eq"]}, "focal_class": {"identifier": "MraidBanner", "superclass": "extends CustomEventBanner", "interfaces": "", "fields": [{"original_string": "@Nullable private MraidController mMraidController;", "modifier": "@Nullable private", "type": "MraidController", "declarator": "mMraidController", "var_name": "mMraidController"}, {"original_string": "@Nullable private CustomEventBannerListener mBannerListener;", "modifier": "@Nullable private", "type": "CustomEventBannerListener", "declarator": "mBannerListener", "var_name": "mBannerListener"}, {"original_string": "@Nullable private MraidWebViewDebugListener mDebugListener;", "modifier": "@Nullable private", "type": "MraidWebViewDebugListener", "declarator": "mDebugListener", "var_name": "mDebugListener"}], "methods": [{"identifier": "loadBanner", "parameters": "(@NonNull Context context,\n                    @NonNull CustomEventBannerListener customEventBannerListener,\n                    @NonNull Map<String, Object> localExtras,\n                    @NonNull Map<String, String> serverExtras)", "modifiers": "@Override protected", "return": "void", "signature": "void loadBanner(@NonNull Context context,\n                    @NonNull CustomEventBannerListener customEventBannerListener,\n                    @NonNull Map<String, Object> localExtras,\n                    @NonNull Map<String, String> serverExtras)", "full_signature": "@Override protected void loadBanner(@NonNull Context context,\n                    @NonNull CustomEventBannerListener customEventBannerListener,\n                    @NonNull Map<String, Object> localExtras,\n                    @NonNull Map<String, String> serverExtras)", "class_method_signature": "MraidBanner.loadBanner(@NonNull Context context,\n                    @NonNull CustomEventBannerListener customEventBannerListener,\n                    @NonNull Map<String, Object> localExtras,\n                    @NonNull Map<String, String> serverExtras)", "testcase": false, "constructor": false}, {"identifier": "onInvalidate", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void onInvalidate()", "full_signature": "@Override protected void onInvalidate()", "class_method_signature": "MraidBanner.onInvalidate()", "testcase": false, "constructor": false}, {"identifier": "extrasAreValid", "parameters": "(Map<String, String> serverExtras)", "modifiers": "private", "return": "boolean", "signature": "boolean extrasAreValid(Map<String, String> serverExtras)", "full_signature": "private boolean extrasAreValid(Map<String, String> serverExtras)", "class_method_signature": "MraidBanner.extrasAreValid(Map<String, String> serverExtras)", "testcase": false, "constructor": false}, {"identifier": "setDebugListener", "parameters": "(@Nullable MraidWebViewDebugListener debugListener)", "modifiers": "@VisibleForTesting public", "return": "void", "signature": "void setDebugListener(@Nullable MraidWebViewDebugListener debugListener)", "full_signature": "@VisibleForTesting public void setDebugListener(@Nullable MraidWebViewDebugListener debugListener)", "class_method_signature": "MraidBanner.setDebugListener(@Nullable MraidWebViewDebugListener debugListener)", "testcase": false, "constructor": false}], "file": "MoPubAd/mopub-sdk/src/main/java/com/mopub/mraid/MraidBanner.java"}, "focal_method": {"identifier": "loadBanner", "parameters": "(@NonNull Context context,\n                    @NonNull CustomEventBannerListener customEventBannerListener,\n                    @NonNull Map<String, Object> localExtras,\n                    @NonNull Map<String, String> serverExtras)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void loadBanner(@NonNull Context context,\n                    @NonNull CustomEventBannerListener customEventBannerListener,\n                    @NonNull Map<String, Object> localExtras,\n                    @NonNull Map<String, String> serverExtras) {\n        mBannerListener = customEventBannerListener;\n\n        String htmlData;\n        if (extrasAreValid(serverExtras)) {\n            htmlData = Uri.decode(serverExtras.get(HTML_RESPONSE_BODY_KEY));\n        } else {\n            mBannerListener.onBannerFailed(MRAID_LOAD_ERROR);\n            return;\n        }\n\n        AdConfiguration adConfiguration = AdConfiguration.extractFromMap(localExtras);\n        if (htmlData == null || adConfiguration == null) {\n            mBannerListener.onBannerFailed(MRAID_LOAD_ERROR);\n            return;\n        }\n\n        mMraidController = MraidControllerFactory.create(\n                    context, adConfiguration, PlacementType.INLINE);\n\n        mMraidController.setDebugListener(mDebugListener);\n        mMraidController.setMraidListener(new MraidListener() {\n            @Override\n            public void onLoaded(View view) {\n                // Honoring the server dimensions forces the WebView to be the size of the banner\n                AdViewController.setShouldHonorServerDimensions(view);\n                mBannerListener.onBannerLoaded(view);\n            }\n\n            @Override\n            public void onFailedToLoad() {\n                mBannerListener.onBannerFailed(MRAID_LOAD_ERROR);\n            }\n\n            @Override\n            public void onExpand() {\n                mBannerListener.onBannerExpanded();\n                mBannerListener.onBannerClicked();\n            }\n\n            @Override\n            public void onOpen() {\n                mBannerListener.onBannerClicked();\n            }\n\n            @Override\n            public void onClose() {\n                mBannerListener.onBannerCollapsed();\n            }\n        });\n        mMraidController.loadContent(htmlData);\n    }", "signature": "void loadBanner(@NonNull Context context,\n                    @NonNull CustomEventBannerListener customEventBannerListener,\n                    @NonNull Map<String, Object> localExtras,\n                    @NonNull Map<String, String> serverExtras)", "full_signature": "@Override protected void loadBanner(@NonNull Context context,\n                    @NonNull CustomEventBannerListener customEventBannerListener,\n                    @NonNull Map<String, Object> localExtras,\n                    @NonNull Map<String, String> serverExtras)", "class_method_signature": "MraidBanner.loadBanner(@NonNull Context context,\n                    @NonNull CustomEventBannerListener customEventBannerListener,\n                    @NonNull Map<String, Object> localExtras,\n                    @NonNull Map<String, String> serverExtras)", "testcase": false, "constructor": false, "invocations": ["extrasAreValid", "decode", "get", "onBannerFailed", "extractFromMap", "onBannerFailed", "create", "setDebugListener", "setMraidListener", "setShouldHonorServerDimensions", "onBannerLoaded", "onBannerFailed", "onBannerExpanded", "onBannerClicked", "onBannerClicked", "onBannerCollapsed", "loadContent"]}, "repository": {"repo_id": 38092182, "url": "https://github.com/harshalbenake/hbworkspace2-100", "language": "Java", "is_fork": false, "fork_count": 160, "stargazer_count": 191, "size": 307516, "license": "licensed"}}