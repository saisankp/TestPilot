{"test_class": {"identifier": "TestUmundoETLProtocolAdapter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Node receivingNode;", "modifier": "private", "type": "Node", "declarator": "receivingNode", "var_name": "receivingNode"}, {"original_string": "private MockReceiver receiver;", "modifier": "private", "type": "MockReceiver", "declarator": "receiver", "var_name": "receiver"}], "file": "org.jvoicexml.callmanager.mmi.umundo/src/test/java/org/jvoicexml/callmanager/mmi/umundo/TestUmundoETLProtocolAdapter.java"}, "test_case": {"identifier": "testSendMMIEvent", "parameters": "()", "modifiers": "@Test(timeout = 5000) public", "return": "void", "body": "@Test(timeout = 5000)\n    public void testSendMMIEvent() throws Exception {\n        final Mmi mmi = new Mmi();\n        final PrepareResponse response = new PrepareResponse();\n        mmi.setLifeCycleEvent(response);\n        final String requestId = \"requestId1\";\n        final String source = \"source1\";\n        final String target = \"target1\";\n        final String context = \"context1\";\n        response.setRequestId(requestId);\n        response.setSource(source);\n        response.setTarget(target);\n        response.setContext(context);\n        final UmundoETLProtocolAdapter adapter = new UmundoETLProtocolAdapter();\n        adapter.start();\n        Thread.sleep(1000);\n        adapter.sendMMIEvent(\"desktop\", mmi);\n        receiver.waitReceivedObject();\n        final Object object = receiver.getReceivedObject();\n        adapter.stop();\n    }", "signature": "void testSendMMIEvent()", "full_signature": "@Test(timeout = 5000) public void testSendMMIEvent()", "class_method_signature": "TestUmundoETLProtocolAdapter.testSendMMIEvent()", "testcase": true, "constructor": false, "invocations": ["setLifeCycleEvent", "setRequestId", "setSource", "setTarget", "setContext", "start", "sleep", "sendMMIEvent", "waitReceivedObject", "getReceivedObject", "stop"]}, "focal_class": {"identifier": "UmundoETLProtocolAdapter", "superclass": "", "interfaces": "implements ETLProtocolAdapter", "fields": [{"original_string": "private static final Logger LOGGER = Logger\n            .getLogger(UmundoETLProtocolAdapter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger\n            .getLogger(UmundoETLProtocolAdapter.class)", "var_name": "LOGGER"}, {"original_string": "private Node node;", "modifier": "private", "type": "Node", "declarator": "node", "var_name": "node"}, {"original_string": "private TypedSubscriber subscriber;", "modifier": "private", "type": "TypedSubscriber", "declarator": "subscriber", "var_name": "subscriber"}, {"original_string": "private MmiReceiver receiver;", "modifier": "private", "type": "MmiReceiver", "declarator": "receiver", "var_name": "receiver"}, {"original_string": "private TypedPublisher publisher;", "modifier": "private", "type": "TypedPublisher", "declarator": "publisher", "var_name": "publisher"}, {"original_string": "private ExtensionRegistry registry;", "modifier": "private", "type": "ExtensionRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private String channel;", "modifier": "private", "type": "String", "declarator": "channel", "var_name": "channel"}, {"original_string": "private String sourceUrl;", "modifier": "private", "type": "String", "declarator": "sourceUrl", "var_name": "sourceUrl"}, {"original_string": "private final Collection<MMIEventListener> cachedListeners;", "modifier": "private final", "type": "Collection<MMIEventListener>", "declarator": "cachedListeners", "var_name": "cachedListeners"}], "methods": [{"identifier": "UmundoETLProtocolAdapter", "parameters": "()", "modifiers": "public", "return": "", "signature": " UmundoETLProtocolAdapter()", "full_signature": "public  UmundoETLProtocolAdapter()", "class_method_signature": "UmundoETLProtocolAdapter.UmundoETLProtocolAdapter()", "testcase": false, "constructor": true}, {"identifier": "setChannel", "parameters": "(final String name)", "modifiers": "public", "return": "void", "signature": "void setChannel(final String name)", "full_signature": "public void setChannel(final String name)", "class_method_signature": "UmundoETLProtocolAdapter.setChannel(final String name)", "testcase": false, "constructor": false}, {"identifier": "setSourceUrl", "parameters": "(final String name)", "modifiers": "public", "return": "void", "signature": "void setSourceUrl(final String name)", "full_signature": "public void setSourceUrl(final String name)", "class_method_signature": "UmundoETLProtocolAdapter.setSourceUrl(final String name)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void start()", "full_signature": "@Override public void start()", "class_method_signature": "UmundoETLProtocolAdapter.start()", "testcase": false, "constructor": false}, {"identifier": "isStarted", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isStarted()", "full_signature": "@Override public boolean isStarted()", "class_method_signature": "UmundoETLProtocolAdapter.isStarted()", "testcase": false, "constructor": false}, {"identifier": "addMMIEventListener", "parameters": "(final MMIEventListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void addMMIEventListener(final MMIEventListener listener)", "full_signature": "@Override public void addMMIEventListener(final MMIEventListener listener)", "class_method_signature": "UmundoETLProtocolAdapter.addMMIEventListener(final MMIEventListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeMMIEventListener", "parameters": "(final MMIEventListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void removeMMIEventListener(final MMIEventListener listener)", "full_signature": "@Override public void removeMMIEventListener(final MMIEventListener listener)", "class_method_signature": "UmundoETLProtocolAdapter.removeMMIEventListener(final MMIEventListener listener)", "testcase": false, "constructor": false}, {"identifier": "createResponse", "parameters": "(\n            final LifeCycleEvent evt)", "modifiers": "private", "return": "LifeCycleEvents.LifeCycleResponse", "signature": "LifeCycleEvents.LifeCycleResponse createResponse(\n            final LifeCycleEvent evt)", "full_signature": "private LifeCycleEvents.LifeCycleResponse createResponse(\n            final LifeCycleEvent evt)", "class_method_signature": "UmundoETLProtocolAdapter.createResponse(\n            final LifeCycleEvent evt)", "testcase": false, "constructor": false}, {"identifier": "getEventType", "parameters": "(\n            final LifeCycleEvent evt)", "modifiers": "private", "return": "LifeCycleEvents.LifeCycleEvent.LifeCycleEventType", "signature": "LifeCycleEvents.LifeCycleEvent.LifeCycleEventType getEventType(\n            final LifeCycleEvent evt)", "full_signature": "private LifeCycleEvents.LifeCycleEvent.LifeCycleEventType getEventType(\n            final LifeCycleEvent evt)", "class_method_signature": "UmundoETLProtocolAdapter.getEventType(\n            final LifeCycleEvent evt)", "testcase": false, "constructor": false}, {"identifier": "sendMMIEvent", "parameters": "(final Object ch, final Mmi mmi)", "modifiers": "@Override public", "return": "void", "signature": "void sendMMIEvent(final Object ch, final Mmi mmi)", "full_signature": "@Override public void sendMMIEvent(final Object ch, final Mmi mmi)", "class_method_signature": "UmundoETLProtocolAdapter.sendMMIEvent(final Object ch, final Mmi mmi)", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "UmundoETLProtocolAdapter.stop()", "testcase": false, "constructor": false}], "file": "org.jvoicexml.callmanager.mmi.umundo/src/main/java/org/jvoicexml/callmanager/mmi/umundo/UmundoETLProtocolAdapter.java"}, "focal_method": {"identifier": "sendMMIEvent", "parameters": "(final Object ch, final Mmi mmi)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void sendMMIEvent(final Object ch, final Mmi mmi)\n            throws IOException {\n        final LifeCycleEvent evt = mmi.getLifeCycleEvent();\n        LifeCycleEvents.LifeCycleResponse response =\n                createResponse(evt);\n        final LifeCycleEvents.LifeCycleEvent.LifeCycleEventType type\n            = getEventType(evt);\n        final LifeCycleEvents.LifeCycleEvent event =\n                LifeCycleEvents.LifeCycleEvent.newBuilder()\n                .setType(type)\n                .setRequestID(evt.getRequestId())\n                .setSource(sourceUrl)\n                .setTarget(evt.getTarget())\n                .setExtension(LifeCycleEvents.LifeCycleResponse.response,\n                        response)\n                .build();\n        if (LOGGER.isDebugEnabled()) {\n            LOGGER.debug(\"sending \" + evt);\n        }\n        publisher.sendObject(\"LifeCycleEvent\", event);\n    }", "signature": "void sendMMIEvent(final Object ch, final Mmi mmi)", "full_signature": "@Override public void sendMMIEvent(final Object ch, final Mmi mmi)", "class_method_signature": "UmundoETLProtocolAdapter.sendMMIEvent(final Object ch, final Mmi mmi)", "testcase": false, "constructor": false, "invocations": ["getLifeCycleEvent", "createResponse", "getEventType", "build", "setExtension", "setTarget", "setSource", "setRequestID", "setType", "newBuilder", "getRequestId", "getTarget", "isDebugEnabled", "debug", "sendObject"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}