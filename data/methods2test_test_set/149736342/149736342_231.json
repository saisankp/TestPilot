{"test_class": {"identifier": "AsyncTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/web3j/utils/AsyncTest.java"}, "test_case": {"identifier": "testRun", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRun() throws Exception {\n        assertThat(Async.run(new Callable<String>() {\n            @Override\n            public String call() throws Exception {\n                return \"\";\n            }\n        }).get(), is(\"\"));\n    }", "signature": "void testRun()", "full_signature": "@Test public void testRun()", "class_method_signature": "AsyncTest.testRun()", "testcase": true, "constructor": false, "invocations": ["assertThat", "get", "run", "is"]}, "focal_class": {"identifier": "Async", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ExecutorService executor = Executors.newCachedThreadPool();", "modifier": "private static final", "type": "ExecutorService", "declarator": "executor = Executors.newCachedThreadPool()", "var_name": "executor"}], "methods": [{"identifier": "run", "parameters": "(Callable<T> callable)", "modifiers": "public static", "return": "Future<T>", "signature": "Future<T> run(Callable<T> callable)", "full_signature": "public static Future<T> run(Callable<T> callable)", "class_method_signature": "Async.run(Callable<T> callable)", "testcase": false, "constructor": false}, {"identifier": "getCpuCount", "parameters": "()", "modifiers": "private static", "return": "int", "signature": "int getCpuCount()", "full_signature": "private static int getCpuCount()", "class_method_signature": "Async.getCpuCount()", "testcase": false, "constructor": false}, {"identifier": "defaultExecutorService", "parameters": "()", "modifiers": "public static", "return": "ScheduledExecutorService", "signature": "ScheduledExecutorService defaultExecutorService()", "full_signature": "public static ScheduledExecutorService defaultExecutorService()", "class_method_signature": "Async.defaultExecutorService()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "(ExecutorService executorService)", "modifiers": "private static", "return": "void", "signature": "void shutdown(ExecutorService executorService)", "full_signature": "private static void shutdown(ExecutorService executorService)", "class_method_signature": "Async.shutdown(ExecutorService executorService)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/web3j/utils/Async.java"}, "focal_method": {"identifier": "run", "parameters": "(Callable<T> callable)", "modifiers": "public static", "return": "Future<T>", "body": "public static <T> Future<T> run(Callable<T> callable) {\n        return executor.submit(callable);\n    }", "signature": "Future<T> run(Callable<T> callable)", "full_signature": "public static Future<T> run(Callable<T> callable)", "class_method_signature": "Async.run(Callable<T> callable)", "testcase": false, "constructor": false, "invocations": ["submit"]}, "repository": {"repo_id": 149736342, "url": "https://github.com/BrahmaOS/brahmaos-web3j", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 1779, "license": "licensed"}}