{"test_class": {"identifier": "NavigationHyperlinkListenerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String TEST_URL = \"test://one\";", "modifier": "public static final", "type": "String", "declarator": "TEST_URL = \"test://one\"", "var_name": "TEST_URL"}, {"original_string": "private PsContext myContext;", "modifier": "private", "type": "PsContext", "declarator": "myContext", "var_name": "myContext"}, {"original_string": "private LinkHandler myHandler1;", "modifier": "private", "type": "LinkHandler", "declarator": "myHandler1", "var_name": "myHandler1"}, {"original_string": "private LinkHandler myHandler2;", "modifier": "private", "type": "LinkHandler", "declarator": "myHandler2", "var_name": "myHandler2"}, {"original_string": "private NavigationHyperlinkListener listener;", "modifier": "private", "type": "NavigationHyperlinkListener", "declarator": "listener", "var_name": "listener"}], "file": "android/testSrc/com/android/tools/idea/gradle/structure/configurables/issues/NavigationHyperlinkListenerTest.java"}, "test_case": {"identifier": "navigate_noHandlersAccept", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void navigate_noHandlersAccept() throws Exception {\n    when(myHandler1.accepts(TEST_URL)).thenReturn(false);\n    when(myHandler2.accepts(TEST_URL)).thenReturn(false);\n    listener.hyperlinkActivated(\n      new HyperlinkEvent(this,\n                         HyperlinkEvent.EventType.ACTIVATED,\n                         null /* JEditorPane passes null for unknown prptocol schemes */,\n                         TEST_URL));\n    InOrder order = inOrder(myHandler1, myHandler2, myContext);\n    order.verify(myHandler1).accepts(TEST_URL);\n    order.verify(myHandler2).accepts(TEST_URL);\n    order.verifyNoMoreInteractions();\n  }", "signature": "void navigate_noHandlersAccept()", "full_signature": "@Test public void navigate_noHandlersAccept()", "class_method_signature": "NavigationHyperlinkListenerTest.navigate_noHandlersAccept()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "accepts", "thenReturn", "when", "accepts", "hyperlinkActivated", "inOrder", "accepts", "verify", "accepts", "verify", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "NavigationHyperlinkListener", "superclass": "extends HyperlinkAdapter", "interfaces": "", "fields": [{"original_string": "@NotNull private final PsContext myContext;", "modifier": "@NotNull private final", "type": "PsContext", "declarator": "myContext", "var_name": "myContext"}, {"original_string": "@NotNull private final LinkHandler[] myHandlers;", "modifier": "@NotNull private final", "type": "LinkHandler[]", "declarator": "myHandlers", "var_name": "myHandlers"}], "methods": [{"identifier": "NavigationHyperlinkListener", "parameters": "(@NotNull PsContext context)", "modifiers": "public", "return": "", "signature": " NavigationHyperlinkListener(@NotNull PsContext context)", "full_signature": "public  NavigationHyperlinkListener(@NotNull PsContext context)", "class_method_signature": "NavigationHyperlinkListener.NavigationHyperlinkListener(@NotNull PsContext context)", "testcase": false, "constructor": true}, {"identifier": "NavigationHyperlinkListener", "parameters": "(@NotNull PsContext context, @NotNull LinkHandler... handlers)", "modifiers": "public", "return": "", "signature": " NavigationHyperlinkListener(@NotNull PsContext context, @NotNull LinkHandler... handlers)", "full_signature": "public  NavigationHyperlinkListener(@NotNull PsContext context, @NotNull LinkHandler... handlers)", "class_method_signature": "NavigationHyperlinkListener.NavigationHyperlinkListener(@NotNull PsContext context, @NotNull LinkHandler... handlers)", "testcase": false, "constructor": true}, {"identifier": "hyperlinkActivated", "parameters": "(HyperlinkEvent e)", "modifiers": "@Override protected", "return": "void", "signature": "void hyperlinkActivated(HyperlinkEvent e)", "full_signature": "@Override protected void hyperlinkActivated(HyperlinkEvent e)", "class_method_signature": "NavigationHyperlinkListener.hyperlinkActivated(HyperlinkEvent e)", "testcase": false, "constructor": false}, {"identifier": "navigate", "parameters": "(@NotNull String target)", "modifiers": "public", "return": "void", "signature": "void navigate(@NotNull String target)", "full_signature": "public void navigate(@NotNull String target)", "class_method_signature": "NavigationHyperlinkListener.navigate(@NotNull String target)", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/gradle/structure/configurables/issues/NavigationHyperlinkListener.java"}, "focal_method": {"identifier": "hyperlinkActivated", "parameters": "(HyperlinkEvent e)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n  protected void hyperlinkActivated(HyperlinkEvent e) {\n    navigate(e.getDescription());\n  }", "signature": "void hyperlinkActivated(HyperlinkEvent e)", "full_signature": "@Override protected void hyperlinkActivated(HyperlinkEvent e)", "class_method_signature": "NavigationHyperlinkListener.hyperlinkActivated(HyperlinkEvent e)", "testcase": false, "constructor": false, "invocations": ["navigate", "getDescription"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}