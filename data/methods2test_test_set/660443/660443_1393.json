{"test_class": {"identifier": "AbstractHashGeneratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "tool/hash/src/test/java/org/openscience/cdk/hash/AbstractHashGeneratorTest.java"}, "test_case": {"identifier": "testRotate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRotate() throws Exception {\n        Pseudorandom pseudorandom = mock(Pseudorandom.class);\n        AbstractHashGenerator f = new AbstractHashGenerator(pseudorandom);\n        f.rotate(5L);\n        verify(pseudorandom, times(1)).next(5L);\n    }", "signature": "void testRotate()", "full_signature": "@Test public void testRotate()", "class_method_signature": "AbstractHashGeneratorTest.testRotate()", "testcase": true, "constructor": false, "invocations": ["mock", "rotate", "next", "verify", "times"]}, "focal_class": {"identifier": "AbstractHashGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Pseudorandom pseudorandom;", "modifier": "private final", "type": "Pseudorandom", "declarator": "pseudorandom", "var_name": "pseudorandom"}], "methods": [{"identifier": "AbstractHashGenerator", "parameters": "(Pseudorandom pseudorandom)", "modifiers": "public", "return": "", "signature": " AbstractHashGenerator(Pseudorandom pseudorandom)", "full_signature": "public  AbstractHashGenerator(Pseudorandom pseudorandom)", "class_method_signature": "AbstractHashGenerator.AbstractHashGenerator(Pseudorandom pseudorandom)", "testcase": false, "constructor": true}, {"identifier": "copy", "parameters": "(long[] src)", "modifiers": "static", "return": "long[]", "signature": "long[] copy(long[] src)", "full_signature": "static long[] copy(long[] src)", "class_method_signature": "AbstractHashGenerator.copy(long[] src)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(long[] src, long[] dest)", "modifiers": "static", "return": "void", "signature": "void copy(long[] src, long[] dest)", "full_signature": "static void copy(long[] src, long[] dest)", "class_method_signature": "AbstractHashGenerator.copy(long[] src, long[] dest)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(long seed)", "modifiers": "", "return": "long", "signature": "long rotate(long seed)", "full_signature": " long rotate(long seed)", "class_method_signature": "AbstractHashGenerator.rotate(long seed)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(long value, int n)", "modifiers": "", "return": "long", "signature": "long rotate(long value, int n)", "full_signature": " long rotate(long value, int n)", "class_method_signature": "AbstractHashGenerator.rotate(long value, int n)", "testcase": false, "constructor": false}, {"identifier": "lowestThreeBits", "parameters": "(long value)", "modifiers": "static", "return": "int", "signature": "int lowestThreeBits(long value)", "full_signature": "static int lowestThreeBits(long value)", "class_method_signature": "AbstractHashGenerator.lowestThreeBits(long value)", "testcase": false, "constructor": false}, {"identifier": "distribute", "parameters": "(long value)", "modifiers": "", "return": "long", "signature": "long distribute(long value)", "full_signature": " long distribute(long value)", "class_method_signature": "AbstractHashGenerator.distribute(long value)", "testcase": false, "constructor": false}, {"identifier": "toAdjList", "parameters": "(IAtomContainer container)", "modifiers": "static", "return": "int[][]", "signature": "int[][] toAdjList(IAtomContainer container)", "full_signature": "static int[][] toAdjList(IAtomContainer container)", "class_method_signature": "AbstractHashGenerator.toAdjList(IAtomContainer container)", "testcase": false, "constructor": false}], "file": "tool/hash/src/main/java/org/openscience/cdk/hash/AbstractHashGenerator.java"}, "focal_method": {"identifier": "rotate", "parameters": "(long seed)", "modifiers": "", "return": "long", "body": "long rotate(long seed) {\n        return pseudorandom.next(seed);\n    }", "signature": "long rotate(long seed)", "full_signature": " long rotate(long seed)", "class_method_signature": "AbstractHashGenerator.rotate(long seed)", "testcase": false, "constructor": false, "invocations": ["next"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}