{"test_class": {"identifier": "DeduplicatingResultSetTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/src/test/java/com/googlecode/cqengine/resultset/filter/DeduplicatingResultSetTest.java"}, "test_case": {"identifier": "testDeduplicatingResultSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDeduplicatingResultSet() {\n        Collection<Car> cars = CarFactory.createCollectionOfCars(10);\n\n        DeduplicatingResultSet<Car, String> deduplicatingResultSet = new DeduplicatingResultSet<Car, String>(\n                Car.MANUFACTURER,\n                new StoredSetBasedResultSet<Car>(new LinkedHashSet<Car>(cars)),\n                QueryFactory.all(Car.class), QueryFactory.noQueryOptions()\n        );\n        List<Integer> carIdsReturned = new ArrayList<Integer>();\n        IndexedCollectionFunctionalTest.extractCarIds(deduplicatingResultSet, carIdsReturned);\n\n        // Should return the first distinct Manufacturer...\n        Assert.assertEquals(4, deduplicatingResultSet.size());\n        Assert.assertEquals(0, deduplicatingResultSet.getRetrievalCost());\n        Assert.assertEquals(10, deduplicatingResultSet.getMergeCost());\n        Assert.assertEquals(4, carIdsReturned.size());\n        Assert.assertEquals(0, carIdsReturned.get(0).intValue());\n        Assert.assertEquals(3, carIdsReturned.get(1).intValue());\n        Assert.assertEquals(6, carIdsReturned.get(2).intValue());\n        Assert.assertEquals(9, carIdsReturned.get(3).intValue());\n\n        Assert.assertTrue(deduplicatingResultSet.contains(CarFactory.createCar(0)));\n        Assert.assertTrue(deduplicatingResultSet.contains(CarFactory.createCar(3)));\n        Assert.assertTrue(deduplicatingResultSet.contains(CarFactory.createCar(6)));\n        Assert.assertTrue(deduplicatingResultSet.contains(CarFactory.createCar(9)));\n        Assert.assertFalse(deduplicatingResultSet.contains(CarFactory.createCar(1)));\n\n        deduplicatingResultSet.close(); // No op.\n    }", "signature": "void testDeduplicatingResultSet()", "full_signature": "@Test public void testDeduplicatingResultSet()", "class_method_signature": "DeduplicatingResultSetTest.testDeduplicatingResultSet()", "testcase": true, "constructor": false, "invocations": ["createCollectionOfCars", "all", "noQueryOptions", "extractCarIds", "assertEquals", "size", "assertEquals", "getRetrievalCost", "assertEquals", "getMergeCost", "assertEquals", "size", "assertEquals", "intValue", "get", "assertEquals", "intValue", "get", "assertEquals", "intValue", "get", "assertEquals", "intValue", "get", "assertTrue", "contains", "createCar", "assertTrue", "contains", "createCar", "assertTrue", "contains", "createCar", "assertTrue", "contains", "createCar", "assertFalse", "contains", "createCar", "close"]}, "focal_class": {"identifier": "DeduplicatingResultSet", "superclass": "extends ResultSet<O>", "interfaces": "", "fields": [{"original_string": "final ResultSet<O> wrappedResultSet;", "modifier": "final", "type": "ResultSet<O>", "declarator": "wrappedResultSet", "var_name": "wrappedResultSet"}, {"original_string": "final Attribute<O, A> uniqueAttribute;", "modifier": "final", "type": "Attribute<O, A>", "declarator": "uniqueAttribute", "var_name": "uniqueAttribute"}, {"original_string": "final Query<O> query;", "modifier": "final", "type": "Query<O>", "declarator": "query", "var_name": "query"}, {"original_string": "final QueryOptions queryOptions;", "modifier": "final", "type": "QueryOptions", "declarator": "queryOptions", "var_name": "queryOptions"}], "methods": [{"identifier": "DeduplicatingResultSet", "parameters": "(Attribute<O, A> uniqueAttribute, ResultSet<O> wrappedResultSet, Query<O> query, QueryOptions queryOptions)", "modifiers": "public", "return": "", "signature": " DeduplicatingResultSet(Attribute<O, A> uniqueAttribute, ResultSet<O> wrappedResultSet, Query<O> query, QueryOptions queryOptions)", "full_signature": "public  DeduplicatingResultSet(Attribute<O, A> uniqueAttribute, ResultSet<O> wrappedResultSet, Query<O> query, QueryOptions queryOptions)", "class_method_signature": "DeduplicatingResultSet.DeduplicatingResultSet(Attribute<O, A> uniqueAttribute, ResultSet<O> wrappedResultSet, Query<O> query, QueryOptions queryOptions)", "testcase": false, "constructor": true}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<O>", "signature": "Iterator<O> iterator()", "full_signature": "@Override public Iterator<O> iterator()", "class_method_signature": "DeduplicatingResultSet.iterator()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(O object)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean contains(O object)", "full_signature": "@Override public final boolean contains(O object)", "class_method_signature": "DeduplicatingResultSet.contains(O object)", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(O object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean matches(O object)", "full_signature": "@Override public boolean matches(O object)", "class_method_signature": "DeduplicatingResultSet.matches(O object)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "DeduplicatingResultSet.size()", "testcase": false, "constructor": false}, {"identifier": "getRetrievalCost", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getRetrievalCost()", "full_signature": "@Override public int getRetrievalCost()", "class_method_signature": "DeduplicatingResultSet.getRetrievalCost()", "testcase": false, "constructor": false}, {"identifier": "getMergeCost", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMergeCost()", "full_signature": "@Override public int getMergeCost()", "class_method_signature": "DeduplicatingResultSet.getMergeCost()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "DeduplicatingResultSet.close()", "testcase": false, "constructor": false}, {"identifier": "getQuery", "parameters": "()", "modifiers": "@Override public", "return": "Query<O>", "signature": "Query<O> getQuery()", "full_signature": "@Override public Query<O> getQuery()", "class_method_signature": "DeduplicatingResultSet.getQuery()", "testcase": false, "constructor": false}, {"identifier": "getQueryOptions", "parameters": "()", "modifiers": "@Override public", "return": "QueryOptions", "signature": "QueryOptions getQueryOptions()", "full_signature": "@Override public QueryOptions getQueryOptions()", "class_method_signature": "DeduplicatingResultSet.getQueryOptions()", "testcase": false, "constructor": false}], "file": "code/src/main/java/com/googlecode/cqengine/resultset/filter/DeduplicatingResultSet.java"}, "focal_method": {"identifier": "DeduplicatingResultSet", "parameters": "(Attribute<O, A> uniqueAttribute, ResultSet<O> wrappedResultSet, Query<O> query, QueryOptions queryOptions)", "modifiers": "public", "return": "", "body": "public DeduplicatingResultSet(Attribute<O, A> uniqueAttribute, ResultSet<O> wrappedResultSet, Query<O> query, QueryOptions queryOptions) {\n        this.uniqueAttribute = uniqueAttribute;\n        this.wrappedResultSet = wrappedResultSet;\n        this.query = query;\n        this.queryOptions = queryOptions;\n    }", "signature": " DeduplicatingResultSet(Attribute<O, A> uniqueAttribute, ResultSet<O> wrappedResultSet, Query<O> query, QueryOptions queryOptions)", "full_signature": "public  DeduplicatingResultSet(Attribute<O, A> uniqueAttribute, ResultSet<O> wrappedResultSet, Query<O> query, QueryOptions queryOptions)", "class_method_signature": "DeduplicatingResultSet.DeduplicatingResultSet(Attribute<O, A> uniqueAttribute, ResultSet<O> wrappedResultSet, Query<O> query, QueryOptions queryOptions)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 41263775, "url": "https://github.com/npgall/cqengine", "language": "Java", "is_fork": false, "fork_count": 180, "stargazer_count": 1194, "size": 11701, "license": "licensed"}}