{"test_class": {"identifier": "DefaultValueGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Inject\n    DefaultValueGenerator defaultValueGenerator;", "modifier": "@Inject", "type": "DefaultValueGenerator", "declarator": "defaultValueGenerator", "var_name": "defaultValueGenerator"}], "file": "gae-studio/gae-studio-server/src/test/java/com/arcbees/gaestudio/server/util/DefaultValueGeneratorTest.java"}, "test_case": {"identifier": "givenLongValue_generateDefault_shouldReturn0", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void givenLongValue_generateDefault_shouldReturn0() {\n        // given\n        Long longValue = 3L;\n        long primitiveLong = 4L;\n\n        // when\n        Object result = defaultValueGenerator.generate(longValue);\n        Object primitiveResult = defaultValueGenerator.generate(primitiveLong);\n\n        // then\n        assertEquals(0L, result);\n        assertEquals(0L, primitiveResult);\n    }", "signature": "void givenLongValue_generateDefault_shouldReturn0()", "full_signature": "@Test public void givenLongValue_generateDefault_shouldReturn0()", "class_method_signature": "DefaultValueGeneratorTest.givenLongValue_generateDefault_shouldReturn0()", "testcase": true, "constructor": false, "invocations": ["generate", "generate", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "DefaultValueGenerator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "generate", "parameters": "(Object value)", "modifiers": "public", "return": "Object", "signature": "Object generate(Object value)", "full_signature": "public Object generate(Object value)", "class_method_signature": "DefaultValueGenerator.generate(Object value)", "testcase": false, "constructor": false}], "file": "gae-studio/gae-studio-server/src/main/java/com/arcbees/gaestudio/server/util/DefaultValueGenerator.java"}, "focal_method": {"identifier": "generate", "parameters": "(Object value)", "modifiers": "public", "return": "Object", "body": "public Object generate(Object value) {\n        if (value != null) {\n            Class<?> clazz = value.getClass();\n\n            if (clazz.isPrimitive()) {\n                return Defaults.defaultValue(clazz);\n            } else {\n                Object defaultValue = BoxedDefaults.defaultValue(clazz);\n                if (defaultValue == null) {\n                    try {\n                        defaultValue = clazz.newInstance();\n                    } catch (InstantiationException e) {\n                        return null;\n                    } catch (IllegalAccessException e) {\n                        return null;\n                    }\n                }\n\n                return defaultValue;\n            }\n        }\n\n        return null;\n    }", "signature": "Object generate(Object value)", "full_signature": "public Object generate(Object value)", "class_method_signature": "DefaultValueGenerator.generate(Object value)", "testcase": false, "constructor": false, "invocations": ["getClass", "isPrimitive", "defaultValue", "defaultValue", "newInstance"]}, "repository": {"repo_id": 29952888, "url": "https://github.com/ArcBees/gae-studio", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 21, "size": 11408, "license": "licensed"}}