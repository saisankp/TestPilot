{"test_class": {"identifier": "SimpleCachePopulatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  Cache<Object, Object> cache;", "modifier": "@Mock", "type": "Cache<Object, Object>", "declarator": "cache", "var_name": "cache"}, {"original_string": "@Mock\n  CacheEntry<Object, Object> entry;", "modifier": "@Mock", "type": "CacheEntry<Object, Object>", "declarator": "entry", "var_name": "entry"}, {"original_string": "SimpleCachePopulator<Object, Object> populator;", "modifier": "", "type": "SimpleCachePopulator<Object, Object>", "declarator": "populator", "var_name": "populator"}], "file": "imcache-core/src/test/java/com/cetsoft/imcache/cache/populator/SimpleCachePopulatorTest.java"}, "test_case": {"identifier": "populate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void populate() {\n    Object object = new Object();\n    List<CacheEntry<Object, Object>> entries = new ArrayList<CacheEntry<Object, Object>>();\n    entries.add(entry);\n    doReturn(object).when(entry).getKey();\n    doReturn(object).when(entry).getValue();\n    doReturn(entries).when(populator).loadEntries();\n    doNothing().when(cache).put(object, object);\n    populator.pupulate();\n    verify(cache).put(object, object);\n    verify(populator).loadEntries();\n  }", "signature": "void populate()", "full_signature": "@Test public void populate()", "class_method_signature": "SimpleCachePopulatorTest.populate()", "testcase": true, "constructor": false, "invocations": ["add", "getKey", "when", "doReturn", "getValue", "when", "doReturn", "loadEntries", "when", "doReturn", "put", "when", "doNothing", "pupulate", "put", "verify", "loadEntries", "verify"]}, "focal_class": {"identifier": "SimpleCachePopulator", "superclass": "extends AbstractCachePopulator<K, V>", "interfaces": "", "fields": [], "methods": [{"identifier": "SimpleCachePopulator", "parameters": "(Cache<K, V> cache)", "modifiers": "public", "return": "", "signature": " SimpleCachePopulator(Cache<K, V> cache)", "full_signature": "public  SimpleCachePopulator(Cache<K, V> cache)", "class_method_signature": "SimpleCachePopulator.SimpleCachePopulator(Cache<K, V> cache)", "testcase": false, "constructor": true}, {"identifier": "pupulate", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void pupulate()", "full_signature": "public void pupulate()", "class_method_signature": "SimpleCachePopulator.pupulate()", "testcase": false, "constructor": false}], "file": "imcache-core/src/main/java/com/cetsoft/imcache/cache/populator/SimpleCachePopulator.java"}, "focal_method": {"identifier": "pupulate", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void pupulate() {\n    final List<CacheEntry<K, V>> entries = loadEntries();\n    for (final CacheEntry<K, V> cacheEntry : entries) {\n      cache.put(cacheEntry.getKey(), cacheEntry.getValue());\n    }\n  }", "signature": "void pupulate()", "full_signature": "public void pupulate()", "class_method_signature": "SimpleCachePopulator.pupulate()", "testcase": false, "constructor": false, "invocations": ["loadEntries", "put", "getKey", "getValue"]}, "repository": {"repo_id": 12849994, "url": "https://github.com/Cetsoft/imcache", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 121, "size": 1599, "license": "licensed"}}