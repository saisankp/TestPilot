{"test_class": {"identifier": "IoUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/util/src/test/java/hera/util/IoUtilsTest.java"}, "test_case": {"identifier": "testTryFlush", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testTryFlush() {\n    final Object[][] testParameters = new Object[][] {{new Object[] {new TestFlushable()}, true},\n        {new Object[] {new TestFlushable(), new TestFlushable()}, true},\n        {new Object[] {new TestFlushable(), new TestFlushable(), new TestFlushable()}, true}};\n\n    for (final Object[] testParameter : testParameters) {\n      boolean expected = (Boolean) testParameter[1];\n      Object[] flushable = (Object[]) testParameter[0];\n\n      for (int i = 0; i < flushable.length; ++i) {\n        if (flushable[i] instanceof Flushable) {\n          TestFlushable testFlushable = (TestFlushable) flushable[i];\n          assertFalse(testFlushable.isFlushed);\n        }\n      }\n\n      IoUtils.tryFlush(flushable);\n\n      for (int i = 0; i < flushable.length; ++i) {\n        if (flushable[i] instanceof Flushable) {\n          TestFlushable testFlushable = (TestFlushable) flushable[i];\n          assertEquals(expected, testFlushable.isFlushed);\n        }\n      }\n    }\n  }", "signature": "void testTryFlush()", "full_signature": "@Test public void testTryFlush()", "class_method_signature": "IoUtilsTest.testTryFlush()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "tryFlush", "assertEquals"]}, "focal_class": {"identifier": "IoUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final Logger logger = getLogger(IoUtils.class);", "modifier": "protected static final", "type": "Logger", "declarator": "logger = getLogger(IoUtils.class)", "var_name": "logger"}], "methods": [{"identifier": "tryFlush", "parameters": "(final Object... flushable)", "modifiers": "public static", "return": "void", "signature": "void tryFlush(final Object... flushable)", "full_signature": "public static void tryFlush(final Object... flushable)", "class_method_signature": "IoUtils.tryFlush(final Object... flushable)", "testcase": false, "constructor": false}, {"identifier": "stream", "parameters": "(final InputStream in, final StreamConsumer consumer)", "modifiers": "public static", "return": "int", "signature": "int stream(final InputStream in, final StreamConsumer consumer)", "full_signature": "public static int stream(final InputStream in, final StreamConsumer consumer)", "class_method_signature": "IoUtils.stream(final InputStream in, final StreamConsumer consumer)", "testcase": false, "constructor": false}, {"identifier": "redirect", "parameters": "(final InputStream from, final OutputStream to)", "modifiers": "public static", "return": "int", "signature": "int redirect(final InputStream from, final OutputStream to)", "full_signature": "public static int redirect(final InputStream from, final OutputStream to)", "class_method_signature": "IoUtils.redirect(final InputStream from, final OutputStream to)", "testcase": false, "constructor": false}, {"identifier": "redirect", "parameters": "(final Reader from, final Writer to)", "modifiers": "public static", "return": "int", "signature": "int redirect(final Reader from, final Writer to)", "full_signature": "public static int redirect(final Reader from, final Writer to)", "class_method_signature": "IoUtils.redirect(final Reader from, final Writer to)", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(\n      final InputStream in)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] from(\n      final InputStream in)", "full_signature": "public static byte[] from(\n      final InputStream in)", "class_method_signature": "IoUtils.from(\n      final InputStream in)", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(\n      final Reader reader)", "modifiers": "public static", "return": "String", "signature": "String from(\n      final Reader reader)", "full_signature": "public static String from(\n      final Reader reader)", "class_method_signature": "IoUtils.from(\n      final Reader reader)", "testcase": false, "constructor": false}, {"identifier": "getChecksum", "parameters": "(final InputStream in)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getChecksum(final InputStream in)", "full_signature": "public static byte[] getChecksum(final InputStream in)", "class_method_signature": "IoUtils.getChecksum(final InputStream in)", "testcase": false, "constructor": false}, {"identifier": "getChecksumAsString", "parameters": "(final InputStream in)", "modifiers": "public static", "return": "String", "signature": "String getChecksumAsString(final InputStream in)", "full_signature": "public static String getChecksumAsString(final InputStream in)", "class_method_signature": "IoUtils.getChecksumAsString(final InputStream in)", "testcase": false, "constructor": false}], "file": "core/util/src/main/java/hera/util/IoUtils.java"}, "focal_method": {"identifier": "tryFlush", "parameters": "(final Object... flushable)", "modifiers": "public static", "return": "void", "body": "public static void tryFlush(final Object... flushable) {\n    for (final Object obj : flushable) {\n      try {\n        if (obj instanceof Flushable) {\n          ((Flushable) obj).flush();\n        }\n      } catch (final Throwable th) {\n        logger.trace(\"Ignore exception: {}\", th);\n      }\n    }\n  }", "signature": "void tryFlush(final Object... flushable)", "full_signature": "public static void tryFlush(final Object... flushable)", "class_method_signature": "IoUtils.tryFlush(final Object... flushable)", "testcase": false, "constructor": false, "invocations": ["flush", "trace"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}