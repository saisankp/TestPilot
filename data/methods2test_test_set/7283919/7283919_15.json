{"test_class": {"identifier": "TeradataTimestampPeriodParseDelegateTest", "superclass": "", "interfaces": "", "fields": [], "file": "dbfit-java/teradata/src/test/java/dbfit/environment/TeradataTimestampPeriodParseDelegateTest.java"}, "test_case": {"identifier": "parseTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void parseTest() {\n\n        String fromStr = \"2012-11-11 01:23:45\";\n        String toStr = \"2014-06-02 12:13:14\";\n\n        java.sql.Timestamp F = null;\n        java.sql.Timestamp T = null;\n\n        try {\n            F = (java.sql.Timestamp) SqlTimestampParseDelegate.parse(fromStr);\n            T = (java.sql.Timestamp) SqlTimestampParseDelegate.parse(toStr);\n        }\n        catch (Exception e) {\n            throw new Error(\"Parsing timestamp literals\");\n        }\n\n        Object[] range = { F, T };\n        TeradataTimestampPeriod tp = new TeradataTimestampPeriod(range);\n\n        TeradataTimestampPeriod tp2 = null;\n        try {\n            tp2 = (TeradataTimestampPeriod) TeradataTimestampPeriodParseDelegate.parse(fromStr + \",\" + toStr);\n        }\n        catch (Exception e) {\n            throw new Error(\"During TeradataTimestampPeriodParseDelegate.parse(\" + fromStr + \",\" + toStr + \")\");\n        }\n\n        assertTrue(\"Timestamp period parse does not produce expected object\", tp.equals(tp2));\n    }", "signature": "void parseTest()", "full_signature": "@Test public void parseTest()", "class_method_signature": "TeradataTimestampPeriodParseDelegateTest.parseTest()", "testcase": true, "constructor": false, "invocations": ["parse", "parse", "parse", "assertTrue", "equals"]}, "focal_class": {"identifier": "TeradataTimestampPeriodParseDelegate", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static DateFormat df = DateFormat.getDateTimeInstance();", "modifier": "private static", "type": "DateFormat", "declarator": "df = DateFormat.getDateTimeInstance()", "var_name": "df"}], "methods": [{"identifier": "parse", "parameters": "(String s)", "modifiers": "public static", "return": "Object", "signature": "Object parse(String s)", "full_signature": "public static Object parse(String s)", "class_method_signature": "TeradataTimestampPeriodParseDelegate.parse(String s)", "testcase": false, "constructor": false}], "file": "dbfit-java/teradata/src/main/java/dbfit/environment/TeradataTimestampPeriodParseDelegate.java"}, "focal_method": {"identifier": "parse", "parameters": "(String s)", "modifiers": "public static", "return": "Object", "body": "public static Object parse(String s) throws Exception {\n\n        System.out.println(\"TeradataTimestampPeriodParseDelegate: parse: s: \" + s);\n        String[] periodParts = s.split(\",\");\n\n        java.sql.Timestamp F = (java.sql.Timestamp) SqlTimestampParseDelegate.parse(periodParts[0]);\n        java.sql.Timestamp T = (java.sql.Timestamp) SqlTimestampParseDelegate.parse(periodParts[1]);\n\n        Object[] data = { F, T };\n\n        return new TeradataTimestampPeriod(data);\n    }", "signature": "Object parse(String s)", "full_signature": "public static Object parse(String s)", "class_method_signature": "TeradataTimestampPeriodParseDelegate.parse(String s)", "testcase": false, "constructor": false, "invocations": ["println", "split", "parse", "parse"]}, "repository": {"repo_id": 7283919, "url": "https://github.com/dbfit/dbfit", "language": "Java", "is_fork": false, "fork_count": 83, "stargazer_count": 181, "size": 6978, "license": "licensed"}}