{"test_class": {"identifier": "InMemoryUrlTypeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private InMemoryUrlType underTest;", "modifier": "private", "type": "InMemoryUrlType", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "private InMemoryFactory factory;", "modifier": "private", "type": "InMemoryFactory", "declarator": "factory", "var_name": "factory"}], "file": "core/src/test/java/io/nuun/kernel/core/internal/scanner/inmemory/InMemoryUrlTypeTest.java"}, "test_case": {"identifier": "testRegex", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Test public", "return": "void", "body": "@SuppressWarnings(\"unchecked\")\n    @Test\n    public void testRegex()\n    {\n        String pattern = \"(/[a-zA-Z0-9\\\\-_\\\\.]+)+\";\n\n        Object[][] data = array(\n                array(\"/zerze/efrez/ferzr/zerrerre\", true),\n                array(\"/zerze/efrez/ferzr/zerrerre.txt\", true),\n                array(\"zerzerze/zerzer/rez4re/erzre5z.txd\", false),\n                array(\"/zerzer-zrzerze/zerzere_zerzer55ze\", true),\n                array(\"/zerzer-zrzerze/zerzere_zerze/\", false),\n                array(\"/zeorzeiorize\", true)\n        );\n        for (Object[] array : data)\n        {\n            String toTest = (String) array[0];\n            Boolean assertion = (Boolean) array[1];\n            assertThat(matches(pattern, toTest)).isEqualTo(assertion)\n                    .as(\"Check that \" + toTest + \" is \" + assertion);\n        }\n    }", "signature": "void testRegex()", "full_signature": "@SuppressWarnings(\"unchecked\") @Test public void testRegex()", "class_method_signature": "InMemoryUrlTypeTest.testRegex()", "testcase": true, "constructor": false, "invocations": ["array", "array", "array", "array", "array", "array", "array", "as", "isEqualTo", "assertThat", "matches"]}, "focal_class": {"identifier": "InMemoryUrlType", "superclass": "", "interfaces": "implements UrlType", "fields": [], "methods": [{"identifier": "InMemoryUrlType", "parameters": "( )", "modifiers": "public", "return": "", "signature": " InMemoryUrlType( )", "full_signature": "public  InMemoryUrlType( )", "class_method_signature": "InMemoryUrlType.InMemoryUrlType( )", "testcase": false, "constructor": true}, {"identifier": "matches", "parameters": "(URL url)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean matches(URL url)", "full_signature": "@Override public boolean matches(URL url)", "class_method_signature": "InMemoryUrlType.matches(URL url)", "testcase": false, "constructor": false}, {"identifier": "createDir", "parameters": "(URL url)", "modifiers": "@Override public", "return": "Dir", "signature": "Dir createDir(URL url)", "full_signature": "@Override public Dir createDir(URL url)", "class_method_signature": "InMemoryUrlType.createDir(URL url)", "testcase": false, "constructor": false}], "file": "core/src/main/java/io/nuun/kernel/core/internal/scanner/inmemory/InMemoryUrlType.java"}, "focal_method": {"identifier": "matches", "parameters": "(URL url)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean matches(URL url) throws Exception\n\t{\n\t\treturn url != null && url.getProtocol().equalsIgnoreCase(\"inmemory\");\n\t}", "signature": "boolean matches(URL url)", "full_signature": "@Override public boolean matches(URL url)", "class_method_signature": "InMemoryUrlType.matches(URL url)", "testcase": false, "constructor": false, "invocations": ["equalsIgnoreCase", "getProtocol"]}, "repository": {"repo_id": 23086156, "url": "https://github.com/nuun-io/kernel", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 7, "size": 1114, "license": "licensed"}}