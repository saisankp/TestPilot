{"test_class": {"identifier": "ZooKeeperServerConfTest", "superclass": "extends ZKTestCase", "interfaces": "", "fields": [{"original_string": "private ZooKeeperServerConf c;", "modifier": "private", "type": "ZooKeeperServerConf", "declarator": "c", "var_name": "c"}], "file": "zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerConfTest.java"}, "test_case": {"identifier": "testToMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void testToMap() {\n        Map<String, Object> m = c.toMap();\n        assertEquals(8, m.size());\n        assertEquals(Integer.valueOf(1), m.get(ZooKeeperServerConf.KEY_CLIENT_PORT));\n        assertEquals(\"a\", m.get(ZooKeeperServerConf.KEY_DATA_DIR));\n        assertEquals(\"b\", m.get(ZooKeeperServerConf.KEY_DATA_LOG_DIR));\n        assertEquals(Integer.valueOf(2), m.get(ZooKeeperServerConf.KEY_TICK_TIME));\n        assertEquals(Integer.valueOf(3), m.get(ZooKeeperServerConf.KEY_MAX_CLIENT_CNXNS));\n        assertEquals(Integer.valueOf(4), m.get(ZooKeeperServerConf.KEY_MIN_SESSION_TIMEOUT));\n        assertEquals(Integer.valueOf(5), m.get(ZooKeeperServerConf.KEY_MAX_SESSION_TIMEOUT));\n        assertEquals(Long.valueOf(6L), m.get(ZooKeeperServerConf.KEY_SERVER_ID));\n    }", "signature": "void testToMap()", "full_signature": "@Test public void testToMap()", "class_method_signature": "ZooKeeperServerConfTest.testToMap()", "testcase": true, "constructor": false, "invocations": ["toMap", "assertEquals", "size", "assertEquals", "valueOf", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "valueOf", "get", "assertEquals", "valueOf", "get", "assertEquals", "valueOf", "get", "assertEquals", "valueOf", "get", "assertEquals", "valueOf", "get"]}, "focal_class": {"identifier": "ZooKeeperServerConf", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String KEY_CLIENT_PORT = \"client_port\";", "modifier": "public static final", "type": "String", "declarator": "KEY_CLIENT_PORT = \"client_port\"", "var_name": "KEY_CLIENT_PORT"}, {"original_string": "public static final String KEY_DATA_DIR = \"data_dir\";", "modifier": "public static final", "type": "String", "declarator": "KEY_DATA_DIR = \"data_dir\"", "var_name": "KEY_DATA_DIR"}, {"original_string": "public static final String KEY_DATA_LOG_DIR = \"data_log_dir\";", "modifier": "public static final", "type": "String", "declarator": "KEY_DATA_LOG_DIR = \"data_log_dir\"", "var_name": "KEY_DATA_LOG_DIR"}, {"original_string": "public static final String KEY_TICK_TIME = \"tick_time\";", "modifier": "public static final", "type": "String", "declarator": "KEY_TICK_TIME = \"tick_time\"", "var_name": "KEY_TICK_TIME"}, {"original_string": "public static final String KEY_MAX_CLIENT_CNXNS = \"max_client_cnxns\";", "modifier": "public static final", "type": "String", "declarator": "KEY_MAX_CLIENT_CNXNS = \"max_client_cnxns\"", "var_name": "KEY_MAX_CLIENT_CNXNS"}, {"original_string": "public static final String KEY_MIN_SESSION_TIMEOUT = \"min_session_timeout\";", "modifier": "public static final", "type": "String", "declarator": "KEY_MIN_SESSION_TIMEOUT = \"min_session_timeout\"", "var_name": "KEY_MIN_SESSION_TIMEOUT"}, {"original_string": "public static final String KEY_MAX_SESSION_TIMEOUT = \"max_session_timeout\";", "modifier": "public static final", "type": "String", "declarator": "KEY_MAX_SESSION_TIMEOUT = \"max_session_timeout\"", "var_name": "KEY_MAX_SESSION_TIMEOUT"}, {"original_string": "public static final String KEY_SERVER_ID = \"server_id\";", "modifier": "public static final", "type": "String", "declarator": "KEY_SERVER_ID = \"server_id\"", "var_name": "KEY_SERVER_ID"}, {"original_string": "private final int clientPort;", "modifier": "private final", "type": "int", "declarator": "clientPort", "var_name": "clientPort"}, {"original_string": "private final String dataDir;", "modifier": "private final", "type": "String", "declarator": "dataDir", "var_name": "dataDir"}, {"original_string": "private final String dataLogDir;", "modifier": "private final", "type": "String", "declarator": "dataLogDir", "var_name": "dataLogDir"}, {"original_string": "private final int tickTime;", "modifier": "private final", "type": "int", "declarator": "tickTime", "var_name": "tickTime"}, {"original_string": "private final int maxClientCnxnsPerHost;", "modifier": "private final", "type": "int", "declarator": "maxClientCnxnsPerHost", "var_name": "maxClientCnxnsPerHost"}, {"original_string": "private final int minSessionTimeout;", "modifier": "private final", "type": "int", "declarator": "minSessionTimeout", "var_name": "minSessionTimeout"}, {"original_string": "private final int maxSessionTimeout;", "modifier": "private final", "type": "int", "declarator": "maxSessionTimeout", "var_name": "maxSessionTimeout"}, {"original_string": "private final long serverId;", "modifier": "private final", "type": "long", "declarator": "serverId", "var_name": "serverId"}], "methods": [{"identifier": "ZooKeeperServerConf", "parameters": "(int clientPort, String dataDir, String dataLogDir,\n                        int tickTime, int maxClientCnxnsPerHost,\n                        int minSessionTimeout, int maxSessionTimeout,\n                        long serverId)", "modifiers": "", "return": "", "signature": " ZooKeeperServerConf(int clientPort, String dataDir, String dataLogDir,\n                        int tickTime, int maxClientCnxnsPerHost,\n                        int minSessionTimeout, int maxSessionTimeout,\n                        long serverId)", "full_signature": "  ZooKeeperServerConf(int clientPort, String dataDir, String dataLogDir,\n                        int tickTime, int maxClientCnxnsPerHost,\n                        int minSessionTimeout, int maxSessionTimeout,\n                        long serverId)", "class_method_signature": "ZooKeeperServerConf.ZooKeeperServerConf(int clientPort, String dataDir, String dataLogDir,\n                        int tickTime, int maxClientCnxnsPerHost,\n                        int minSessionTimeout, int maxSessionTimeout,\n                        long serverId)", "testcase": false, "constructor": true}, {"identifier": "getClientPort", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getClientPort()", "full_signature": "public int getClientPort()", "class_method_signature": "ZooKeeperServerConf.getClientPort()", "testcase": false, "constructor": false}, {"identifier": "getDataDir", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDataDir()", "full_signature": "public String getDataDir()", "class_method_signature": "ZooKeeperServerConf.getDataDir()", "testcase": false, "constructor": false}, {"identifier": "getDataLogDir", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDataLogDir()", "full_signature": "public String getDataLogDir()", "class_method_signature": "ZooKeeperServerConf.getDataLogDir()", "testcase": false, "constructor": false}, {"identifier": "getTickTime", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTickTime()", "full_signature": "public int getTickTime()", "class_method_signature": "ZooKeeperServerConf.getTickTime()", "testcase": false, "constructor": false}, {"identifier": "getMaxClientCnxnsPerHost", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxClientCnxnsPerHost()", "full_signature": "public int getMaxClientCnxnsPerHost()", "class_method_signature": "ZooKeeperServerConf.getMaxClientCnxnsPerHost()", "testcase": false, "constructor": false}, {"identifier": "getMinSessionTimeout", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMinSessionTimeout()", "full_signature": "public int getMinSessionTimeout()", "class_method_signature": "ZooKeeperServerConf.getMinSessionTimeout()", "testcase": false, "constructor": false}, {"identifier": "getMaxSessionTimeout", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxSessionTimeout()", "full_signature": "public int getMaxSessionTimeout()", "class_method_signature": "ZooKeeperServerConf.getMaxSessionTimeout()", "testcase": false, "constructor": false}, {"identifier": "getServerId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getServerId()", "full_signature": "public long getServerId()", "class_method_signature": "ZooKeeperServerConf.getServerId()", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> toMap()", "full_signature": "public Map<String, Object> toMap()", "class_method_signature": "ZooKeeperServerConf.toMap()", "testcase": false, "constructor": false}], "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServerConf.java"}, "focal_method": {"identifier": "toMap", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "body": "public Map<String, Object> toMap() {\n        Map<String, Object> conf = new LinkedHashMap<String, Object>();\n        conf.put(KEY_CLIENT_PORT, clientPort);\n        conf.put(KEY_DATA_DIR, dataDir);\n        conf.put(KEY_DATA_LOG_DIR, dataLogDir);\n        conf.put(KEY_TICK_TIME, tickTime);\n        conf.put(KEY_MAX_CLIENT_CNXNS, maxClientCnxnsPerHost);\n        conf.put(KEY_MIN_SESSION_TIMEOUT, minSessionTimeout);\n        conf.put(KEY_MAX_SESSION_TIMEOUT, maxSessionTimeout);\n        conf.put(KEY_SERVER_ID, serverId);\n        return conf;\n    }", "signature": "Map<String, Object> toMap()", "full_signature": "public Map<String, Object> toMap()", "class_method_signature": "ZooKeeperServerConf.toMap()", "testcase": false, "constructor": false, "invocations": ["put", "put", "put", "put", "put", "put", "put", "put"]}, "repository": {"repo_id": 230430206, "url": "https://github.com/boomblog/zookeeper-vip2", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 10, "size": 3105, "license": "licensed"}}