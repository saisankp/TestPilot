{"test_class": {"identifier": "LeaderElectionSupportTest", "superclass": "extends ClientBase", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory\n      .getLogger(LeaderElectionSupportTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory\n      .getLogger(LeaderElectionSupportTest.class)", "var_name": "logger"}, {"original_string": "private static final String testRootNode = \"/\" + System.currentTimeMillis()\n      + \"_\";", "modifier": "private static final", "type": "String", "declarator": "testRootNode = \"/\" + System.currentTimeMillis()\n      + \"_\"", "var_name": "testRootNode"}, {"original_string": "private ZooKeeper zooKeeper;", "modifier": "private", "type": "ZooKeeper", "declarator": "zooKeeper", "var_name": "zooKeeper"}], "file": "bigdata-intro/zk-intro/src/test/java/org/apache/zookeeper/recipes/leader/LeaderElectionSupportTest.java"}, "test_case": {"identifier": "testGetLeaderHostName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetLeaderHostName() throws KeeperException,\n      InterruptedException {\n\n    LeaderElectionSupport electionSupport = createLeaderElectionSupport();\n\n    electionSupport.start();\n\n    // Sketchy: We assume there will be a leader (probably us) in 3 seconds.\n    Thread.sleep(3000);\n\n    String leaderHostName = electionSupport.getLeaderHostName();\n\n    Assert.assertNotNull(leaderHostName);\n    Assert.assertEquals(\"foohost\", leaderHostName);\n\n    electionSupport.stop();\n  }", "signature": "void testGetLeaderHostName()", "full_signature": "@Test public void testGetLeaderHostName()", "class_method_signature": "LeaderElectionSupportTest.testGetLeaderHostName()", "testcase": true, "constructor": false, "invocations": ["createLeaderElectionSupport", "start", "sleep", "getLeaderHostName", "assertNotNull", "assertEquals", "stop"]}, "focal_class": {"identifier": "LeaderElectionSupport", "superclass": "", "interfaces": "implements Watcher", "fields": [{"original_string": "private static final Logger logger = LoggerFactory\n      .getLogger(LeaderElectionSupport.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory\n      .getLogger(LeaderElectionSupport.class)", "var_name": "logger"}, {"original_string": "private ZooKeeper zooKeeper;", "modifier": "private", "type": "ZooKeeper", "declarator": "zooKeeper", "var_name": "zooKeeper"}, {"original_string": "private State state;", "modifier": "private", "type": "State", "declarator": "state", "var_name": "state"}, {"original_string": "private Set<LeaderElectionAware> listeners;", "modifier": "private", "type": "Set<LeaderElectionAware>", "declarator": "listeners", "var_name": "listeners"}, {"original_string": "private String rootNodeName;", "modifier": "private", "type": "String", "declarator": "rootNodeName", "var_name": "rootNodeName"}, {"original_string": "private LeaderOffer leaderOffer;", "modifier": "private", "type": "LeaderOffer", "declarator": "leaderOffer", "var_name": "leaderOffer"}, {"original_string": "private String hostName;", "modifier": "private", "type": "String", "declarator": "hostName", "var_name": "hostName"}], "methods": [{"identifier": "LeaderElectionSupport", "parameters": "()", "modifiers": "public", "return": "", "signature": " LeaderElectionSupport()", "full_signature": "public  LeaderElectionSupport()", "class_method_signature": "LeaderElectionSupport.LeaderElectionSupport()", "testcase": false, "constructor": true}, {"identifier": "start", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void start()", "full_signature": "public synchronized void start()", "class_method_signature": "LeaderElectionSupport.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void stop()", "full_signature": "public synchronized void stop()", "class_method_signature": "LeaderElectionSupport.stop()", "testcase": false, "constructor": false}, {"identifier": "makeOffer", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void makeOffer()", "full_signature": "private void makeOffer()", "class_method_signature": "LeaderElectionSupport.makeOffer()", "testcase": false, "constructor": false}, {"identifier": "determineElectionStatus", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void determineElectionStatus()", "full_signature": "private void determineElectionStatus()", "class_method_signature": "LeaderElectionSupport.determineElectionStatus()", "testcase": false, "constructor": false}, {"identifier": "becomeReady", "parameters": "(LeaderOffer neighborLeaderOffer)", "modifiers": "private", "return": "void", "signature": "void becomeReady(LeaderOffer neighborLeaderOffer)", "full_signature": "private void becomeReady(LeaderOffer neighborLeaderOffer)", "class_method_signature": "LeaderElectionSupport.becomeReady(LeaderOffer neighborLeaderOffer)", "testcase": false, "constructor": false}, {"identifier": "becomeLeader", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void becomeLeader()", "full_signature": "private void becomeLeader()", "class_method_signature": "LeaderElectionSupport.becomeLeader()", "testcase": false, "constructor": false}, {"identifier": "becomeFailed", "parameters": "(Exception e)", "modifiers": "private", "return": "void", "signature": "void becomeFailed(Exception e)", "full_signature": "private void becomeFailed(Exception e)", "class_method_signature": "LeaderElectionSupport.becomeFailed(Exception e)", "testcase": false, "constructor": false}, {"identifier": "getLeaderHostName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLeaderHostName()", "full_signature": "public String getLeaderHostName()", "class_method_signature": "LeaderElectionSupport.getLeaderHostName()", "testcase": false, "constructor": false}, {"identifier": "toLeaderOffers", "parameters": "(List<String> strings)", "modifiers": "private", "return": "List<LeaderOffer>", "signature": "List<LeaderOffer> toLeaderOffers(List<String> strings)", "full_signature": "private List<LeaderOffer> toLeaderOffers(List<String> strings)", "class_method_signature": "LeaderElectionSupport.toLeaderOffers(List<String> strings)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(WatchedEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void process(WatchedEvent event)", "full_signature": "@Override public void process(WatchedEvent event)", "class_method_signature": "LeaderElectionSupport.process(WatchedEvent event)", "testcase": false, "constructor": false}, {"identifier": "dispatchEvent", "parameters": "(EventType eventType)", "modifiers": "private", "return": "void", "signature": "void dispatchEvent(EventType eventType)", "full_signature": "private void dispatchEvent(EventType eventType)", "class_method_signature": "LeaderElectionSupport.dispatchEvent(EventType eventType)", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(LeaderElectionAware listener)", "modifiers": "public", "return": "void", "signature": "void addListener(LeaderElectionAware listener)", "full_signature": "public void addListener(LeaderElectionAware listener)", "class_method_signature": "LeaderElectionSupport.addListener(LeaderElectionAware listener)", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(LeaderElectionAware listener)", "modifiers": "public", "return": "void", "signature": "void removeListener(LeaderElectionAware listener)", "full_signature": "public void removeListener(LeaderElectionAware listener)", "class_method_signature": "LeaderElectionSupport.removeListener(LeaderElectionAware listener)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "LeaderElectionSupport.toString()", "testcase": false, "constructor": false}, {"identifier": "getRootNodeName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRootNodeName()", "full_signature": "public String getRootNodeName()", "class_method_signature": "LeaderElectionSupport.getRootNodeName()", "testcase": false, "constructor": false}, {"identifier": "setRootNodeName", "parameters": "(String rootNodeName)", "modifiers": "public", "return": "void", "signature": "void setRootNodeName(String rootNodeName)", "full_signature": "public void setRootNodeName(String rootNodeName)", "class_method_signature": "LeaderElectionSupport.setRootNodeName(String rootNodeName)", "testcase": false, "constructor": false}, {"identifier": "getZooKeeper", "parameters": "()", "modifiers": "public", "return": "ZooKeeper", "signature": "ZooKeeper getZooKeeper()", "full_signature": "public ZooKeeper getZooKeeper()", "class_method_signature": "LeaderElectionSupport.getZooKeeper()", "testcase": false, "constructor": false}, {"identifier": "setZooKeeper", "parameters": "(ZooKeeper zooKeeper)", "modifiers": "public", "return": "void", "signature": "void setZooKeeper(ZooKeeper zooKeeper)", "full_signature": "public void setZooKeeper(ZooKeeper zooKeeper)", "class_method_signature": "LeaderElectionSupport.setZooKeeper(ZooKeeper zooKeeper)", "testcase": false, "constructor": false}, {"identifier": "getHostName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getHostName()", "full_signature": "public String getHostName()", "class_method_signature": "LeaderElectionSupport.getHostName()", "testcase": false, "constructor": false}, {"identifier": "setHostName", "parameters": "(String hostName)", "modifiers": "public", "return": "void", "signature": "void setHostName(String hostName)", "full_signature": "public void setHostName(String hostName)", "class_method_signature": "LeaderElectionSupport.setHostName(String hostName)", "testcase": false, "constructor": false}], "file": "bigdata-intro/zk-intro/src/main/java/org/apache/zookeeper/recipes/leader/LeaderElectionSupport.java"}, "focal_method": {"identifier": "getLeaderHostName", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getLeaderHostName() throws KeeperException,\n      InterruptedException {\n\n    List<LeaderOffer> leaderOffers = toLeaderOffers(zooKeeper.getChildren(\n        rootNodeName, false));\n\n    if (leaderOffers.size() > 0) {\n      return leaderOffers.get(0).getHostName();\n    }\n\n    return null;\n  }", "signature": "String getLeaderHostName()", "full_signature": "public String getLeaderHostName()", "class_method_signature": "LeaderElectionSupport.getLeaderHostName()", "testcase": false, "constructor": false, "invocations": ["toLeaderOffers", "getChildren", "size", "getHostName", "get"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}