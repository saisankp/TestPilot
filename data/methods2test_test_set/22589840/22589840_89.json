{"test_class": {"identifier": "NotificationConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private NotificationConverter notificationConverterTestObject;", "modifier": "private", "type": "NotificationConverter", "declarator": "notificationConverterTestObject", "var_name": "notificationConverterTestObject"}, {"original_string": "private NotificationEventTO eventTOMock;", "modifier": "private", "type": "NotificationEventTO", "declarator": "eventTOMock", "var_name": "eventTOMock"}, {"original_string": "private List<NotificationEventTO> eventTOs = new ArrayList<NotificationEventTO>();", "modifier": "private", "type": "List<NotificationEventTO>", "declarator": "eventTOs = new ArrayList<NotificationEventTO>()", "var_name": "eventTOs"}, {"original_string": "private NotificationEvent eventMock;", "modifier": "private", "type": "NotificationEvent", "declarator": "eventMock", "var_name": "eventMock"}, {"original_string": "private List<NotificationEvent> events = new ArrayList<NotificationEvent>();", "modifier": "private", "type": "List<NotificationEvent>", "declarator": "events = new ArrayList<NotificationEvent>()", "var_name": "events"}], "file": "OLAT-LMS/src/test/java/org/olat/lms/core/notification/impl/NotificationConverterTest.java"}, "test_case": {"identifier": "toEventTOList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toEventTOList() {\n    }", "signature": "void toEventTOList()", "full_signature": "@Test public void toEventTOList()", "class_method_signature": "NotificationConverterTest.toEventTOList()", "testcase": true, "constructor": false, "invocations": []}, "focal_class": {"identifier": "NotificationConverter", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "toEventTOList", "parameters": "(List<NotificationEvent> events)", "modifiers": "public", "return": "List<NotificationEventTO>", "signature": "List<NotificationEventTO> toEventTOList(List<NotificationEvent> events)", "full_signature": "public List<NotificationEventTO> toEventTOList(List<NotificationEvent> events)", "class_method_signature": "NotificationConverter.toEventTOList(List<NotificationEvent> events)", "testcase": false, "constructor": false}, {"identifier": "convertToEventTO", "parameters": "(NotificationEvent event)", "modifiers": "public", "return": "NotificationEventTO", "signature": "NotificationEventTO convertToEventTO(NotificationEvent event)", "full_signature": "public NotificationEventTO convertToEventTO(NotificationEvent event)", "class_method_signature": "NotificationConverter.convertToEventTO(NotificationEvent event)", "testcase": false, "constructor": false}], "file": "OLAT-LMS/src/main/java/org/olat/lms/core/notification/impl/NotificationConverter.java"}, "focal_method": {"identifier": "toEventTOList", "parameters": "(List<NotificationEvent> events)", "modifiers": "public", "return": "List<NotificationEventTO>", "body": "public List<NotificationEventTO> toEventTOList(List<NotificationEvent> events) {\n        // Prepare the list of NotificationEventTO\n        List<NotificationEventTO> eventTOList = new ArrayList<NotificationEventTO>();\n        for (NotificationEvent event : events) {\n            NotificationEventTO eventTO = convertToEventTO(event);\n            if (eventTO.isEventEligible()) {\n                eventTOList.add(eventTO);\n            }\n        }\n        return eventTOList;\n    }", "signature": "List<NotificationEventTO> toEventTOList(List<NotificationEvent> events)", "full_signature": "public List<NotificationEventTO> toEventTOList(List<NotificationEvent> events)", "class_method_signature": "NotificationConverter.toEventTOList(List<NotificationEvent> events)", "testcase": false, "constructor": false, "invocations": ["convertToEventTO", "isEventEligible", "add"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}