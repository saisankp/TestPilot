{"test_class": {"identifier": "GeometryBufferCommandTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate CommandDispatcher dispatcher;", "modifier": "@Autowired\n\tprivate", "type": "CommandDispatcher", "declarator": "dispatcher", "var_name": "dispatcher"}, {"original_string": "private List<Geometry> geometries;", "modifier": "private", "type": "List<Geometry>", "declarator": "geometries", "var_name": "geometries"}], "file": "command/src/test/java/org/geomajas/command/geometry/GeometryBufferCommandTest.java"}, "test_case": {"identifier": "quadrantTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void quadrantTest() throws GeomajasException {\n\t\tGeometry point = new Geometry(Geometry.POINT, 3, 0);\n\t\tpoint.setCoordinates(new Coordinate[]{\n\t\t\t\tnew Coordinate(5000, 5000)\t\t\t\t\n\t\t});\n\t\tGeometryBufferRequest request = new GeometryBufferRequest();\n\t\tList<Geometry> g = new ArrayList<Geometry>();\n\t\tg.add(point);\n\t\trequest.setGeometries(g);\n\t\trequest.setBufferDistance(900);\n\t\trequest.setQuadrantSegments(4);\n\t\tGeometryBufferResponse response = (GeometryBufferResponse) dispatcher.execute(\n\t\t\t\tGeometryBufferRequest.COMMAND, request, null, \"en\");\n\t\tg = response.getGeometries();\n\t\t// 4 * 4 lines with 17 coordinates (first is the same as last)\n\t\tAssert.assertTrue(g.get(0).getGeometries()[0].getCoordinates().length == 17);\n\t}", "signature": "void quadrantTest()", "full_signature": "@Test public void quadrantTest()", "class_method_signature": "GeometryBufferCommandTest.quadrantTest()", "testcase": true, "constructor": false, "invocations": ["setCoordinates", "add", "setGeometries", "setBufferDistance", "setQuadrantSegments", "execute", "getGeometries", "assertTrue", "getCoordinates", "getGeometries", "get"]}, "focal_class": {"identifier": "GeometryBufferCommand", "superclass": "", "interfaces": "implements CommandHasRequest<GeometryBufferRequest, GeometryBufferResponse>", "fields": [{"original_string": "@Autowired\n\tprivate DtoConverterService converter;", "modifier": "@Autowired\n\tprivate", "type": "DtoConverterService", "declarator": "converter", "var_name": "converter"}], "methods": [{"identifier": "getEmptyCommandRequest", "parameters": "()", "modifiers": "@Override public", "return": "GeometryBufferRequest", "signature": "GeometryBufferRequest getEmptyCommandRequest()", "full_signature": "@Override public GeometryBufferRequest getEmptyCommandRequest()", "class_method_signature": "GeometryBufferCommand.getEmptyCommandRequest()", "testcase": false, "constructor": false}, {"identifier": "getEmptyCommandResponse", "parameters": "()", "modifiers": "@Override public", "return": "GeometryBufferResponse", "signature": "GeometryBufferResponse getEmptyCommandResponse()", "full_signature": "@Override public GeometryBufferResponse getEmptyCommandResponse()", "class_method_signature": "GeometryBufferCommand.getEmptyCommandResponse()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(GeometryBufferRequest request, GeometryBufferResponse response)", "modifiers": "@Override public", "return": "void", "signature": "void execute(GeometryBufferRequest request, GeometryBufferResponse response)", "full_signature": "@Override public void execute(GeometryBufferRequest request, GeometryBufferResponse response)", "class_method_signature": "GeometryBufferCommand.execute(GeometryBufferRequest request, GeometryBufferResponse response)", "testcase": false, "constructor": false}], "file": "command/src/main/java/org/geomajas/command/geometry/GeometryBufferCommand.java"}, "focal_method": {"identifier": "execute", "parameters": "(GeometryBufferRequest request, GeometryBufferResponse response)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void execute(GeometryBufferRequest request, GeometryBufferResponse response) throws Exception {\n\t\tList<org.geomajas.geometry.Geometry> clientGeometries = request.getGeometries();\n\t\tif (clientGeometries == null || clientGeometries.size() == 0) {\n\t\t\tthrow new GeomajasException(ExceptionCode.PARAMETER_MISSING, \"request\");\n\t\t}\n\n\t\t// Convert to internal, apply buffer and convert back to DTO\n\t\tList<org.geomajas.geometry.Geometry> result = new ArrayList<org.geomajas.geometry.Geometry>();\n\t\tdouble buffer = request.getBufferDistance();\n\t\tint quadrantSegments = request.getQuadrantSegments();\n\t\tfor (Geometry clientGeometry : clientGeometries) {\n\t\t\tresult.add(converter.toDto(converter.toInternal(clientGeometry).buffer(buffer, quadrantSegments)));\n\t\t}\n\t\tresponse.setGeometries(result);\n\t}", "signature": "void execute(GeometryBufferRequest request, GeometryBufferResponse response)", "full_signature": "@Override public void execute(GeometryBufferRequest request, GeometryBufferResponse response)", "class_method_signature": "GeometryBufferCommand.execute(GeometryBufferRequest request, GeometryBufferResponse response)", "testcase": false, "constructor": false, "invocations": ["getGeometries", "size", "getBufferDistance", "getQuadrantSegments", "add", "toDto", "buffer", "toInternal", "setGeometries"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}