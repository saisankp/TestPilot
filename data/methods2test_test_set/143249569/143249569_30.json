{"test_class": {"identifier": "GeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private SkillModelSupplier mockApplication;", "modifier": "@Mock\n    private", "type": "SkillModelSupplier", "declarator": "mockApplication", "var_name": "mockApplication"}, {"original_string": "@Mock\n    private File mockDir;", "modifier": "@Mock\n    private", "type": "File", "declarator": "mockDir", "var_name": "mockDir"}, {"original_string": "@Mock\n    private File mockFile;", "modifier": "@Mock\n    private", "type": "File", "declarator": "mockFile", "var_name": "mockFile"}, {"original_string": "@Mock\n    private ObjectWriter mockWriter;", "modifier": "@Mock\n    private", "type": "ObjectWriter", "declarator": "mockWriter", "var_name": "mockWriter"}, {"original_string": "private SkillModel mockSkill = SkillModel.builder()\n        .withInvocationName(en_US, \"en_US\")\n        .withInvocationName(fr_FR, \"fr_FR\")\n        .build();", "modifier": "private", "type": "SkillModel", "declarator": "mockSkill = SkillModel.builder()\n        .withInvocationName(en_US, \"en_US\")\n        .withInvocationName(fr_FR, \"fr_FR\")\n        .build()", "var_name": "mockSkill"}, {"original_string": "@Mock\n    private SkillModelRenderer mockRenderer;", "modifier": "@Mock\n    private", "type": "SkillModelRenderer", "declarator": "mockRenderer", "var_name": "mockRenderer"}, {"original_string": "private InteractionModelEnvelope mockModel = InteractionModelEnvelope.builder().build();", "modifier": "private", "type": "InteractionModelEnvelope", "declarator": "mockModel = InteractionModelEnvelope.builder().build()", "var_name": "mockModel"}, {"original_string": "private Generator underTest;", "modifier": "private", "type": "Generator", "declarator": "underTest", "var_name": "underTest"}], "file": "ask-sdk-interaction-model-mapper/src/test/java/com/amazon/ask/interaction/build/GeneratorTest.java"}, "test_case": {"identifier": "testWriteToEmptyDir", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWriteToEmptyDir() throws GeneratorException, IOException {\n        Mockito.when(mockDir.exists()).thenReturn(false);\n        underTest.generate();\n\n        Mockito.verify(mockDir).mkdirs();\n        Mockito.verify(mockWriter).writeValue(mockFile, mockModel);\n    }", "signature": "void testWriteToEmptyDir()", "full_signature": "@Test public void testWriteToEmptyDir()", "class_method_signature": "GeneratorTest.testWriteToEmptyDir()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "exists", "generate", "mkdirs", "verify", "writeValue", "verify"]}, "focal_class": {"identifier": "Generator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ObjectWriter writer;", "modifier": "private final", "type": "ObjectWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "private final SkillModelRenderer renderer;", "modifier": "private final", "type": "SkillModelRenderer", "declarator": "renderer", "var_name": "renderer"}, {"original_string": "private final SkillModelSupplier skillModelSupplier;", "modifier": "private final", "type": "SkillModelSupplier", "declarator": "skillModelSupplier", "var_name": "skillModelSupplier"}, {"original_string": "private final File destdir;", "modifier": "private final", "type": "File", "declarator": "destdir", "var_name": "destdir"}, {"original_string": "private final List<Locale> locales;", "modifier": "private final", "type": "List<Locale>", "declarator": "locales", "var_name": "locales"}], "methods": [{"identifier": "Generator", "parameters": "(SkillModelSupplier skillModelSupplier, File destdir, List<Locale> locales)", "modifiers": "public", "return": "", "signature": " Generator(SkillModelSupplier skillModelSupplier, File destdir, List<Locale> locales)", "full_signature": "public  Generator(SkillModelSupplier skillModelSupplier, File destdir, List<Locale> locales)", "class_method_signature": "Generator.Generator(SkillModelSupplier skillModelSupplier, File destdir, List<Locale> locales)", "testcase": false, "constructor": true}, {"identifier": "Generator", "parameters": "(ObjectWriter writer, SkillModelRenderer renderer, SkillModelSupplier skillModelSupplier, File destdir, List<Locale> locales)", "modifiers": "public", "return": "", "signature": " Generator(ObjectWriter writer, SkillModelRenderer renderer, SkillModelSupplier skillModelSupplier, File destdir, List<Locale> locales)", "full_signature": "public  Generator(ObjectWriter writer, SkillModelRenderer renderer, SkillModelSupplier skillModelSupplier, File destdir, List<Locale> locales)", "class_method_signature": "Generator.Generator(ObjectWriter writer, SkillModelRenderer renderer, SkillModelSupplier skillModelSupplier, File destdir, List<Locale> locales)", "testcase": false, "constructor": true}, {"identifier": "generate", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void generate()", "full_signature": "public void generate()", "class_method_signature": "Generator.generate()", "testcase": false, "constructor": false}, {"identifier": "getDestFile", "parameters": "(String name)", "modifiers": "protected", "return": "File", "signature": "File getDestFile(String name)", "full_signature": "protected File getDestFile(String name)", "class_method_signature": "Generator.getDestFile(String name)", "testcase": false, "constructor": false}], "file": "ask-sdk-interaction-model-mapper/src/main/java/com/amazon/ask/interaction/build/Generator.java"}, "focal_method": {"identifier": "generate", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void generate() throws GeneratorException {\n        try {\n            SkillModel skillModel = skillModelSupplier.getSkillModel();\n            if (!destdir.exists()) {\n                destdir.mkdirs();\n            }\n            for (Locale locale : locales) {\n                File out = getDestFile(locale.toLanguageTag() + \".json\");\n                writer.writeValue(out, renderer.render(skillModel, locale));\n            }\n        } catch (IOException | RuntimeException ex) {\n            throw new GeneratorException(ex);\n        }\n    }", "signature": "void generate()", "full_signature": "public void generate()", "class_method_signature": "Generator.generate()", "testcase": false, "constructor": false, "invocations": ["getSkillModel", "exists", "mkdirs", "getDestFile", "toLanguageTag", "writeValue", "render"]}, "repository": {"repo_id": 143249569, "url": "https://github.com/amazon-archives/ask-sdk-frameworks-java", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 12, "size": 313, "license": "licensed"}}