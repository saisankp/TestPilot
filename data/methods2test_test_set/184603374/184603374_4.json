{"test_class": {"identifier": "SortTest", "superclass": "", "interfaces": "", "fields": [], "file": "base/src/test/java/com/learn/base/algorithm/SortTest.java"}, "test_case": {"identifier": "buildHeapTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void buildHeapTest() {\n        int[] data = {1, 4, 5, 3, 2};\n        Sort.buildHeap(data, data.length);\n        for (int i : data) {\n            System.out.println(i);\n        }\n    }", "signature": "void buildHeapTest()", "full_signature": "@Test public void buildHeapTest()", "class_method_signature": "SortTest.buildHeapTest()", "testcase": true, "constructor": false, "invocations": ["buildHeap", "println"]}, "focal_class": {"identifier": "Sort", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "maopaoSort", "parameters": "(int[] data)", "modifiers": "public static", "return": "void", "signature": "void maopaoSort(int[] data)", "full_signature": "public static void maopaoSort(int[] data)", "class_method_signature": "Sort.maopaoSort(int[] data)", "testcase": false, "constructor": false}, {"identifier": "quickSort", "parameters": "(int[] data)", "modifiers": "public static", "return": "void", "signature": "void quickSort(int[] data)", "full_signature": "public static void quickSort(int[] data)", "class_method_signature": "Sort.quickSort(int[] data)", "testcase": false, "constructor": false}, {"identifier": "insertSort", "parameters": "(int[] data)", "modifiers": "public static", "return": "void", "signature": "void insertSort(int[] data)", "full_signature": "public static void insertSort(int[] data)", "class_method_signature": "Sort.insertSort(int[] data)", "testcase": false, "constructor": false}, {"identifier": "selectSort", "parameters": "(int[] data)", "modifiers": "public static", "return": "void", "signature": "void selectSort(int[] data)", "full_signature": "public static void selectSort(int[] data)", "class_method_signature": "Sort.selectSort(int[] data)", "testcase": false, "constructor": false}, {"identifier": "quickSort", "parameters": "(int[] data, int left, int right)", "modifiers": "public static", "return": "void", "signature": "void quickSort(int[] data, int left, int right)", "full_signature": "public static void quickSort(int[] data, int left, int right)", "class_method_signature": "Sort.quickSort(int[] data, int left, int right)", "testcase": false, "constructor": false}, {"identifier": "quickSort2", "parameters": "(int[] arr, int l, int r)", "modifiers": "public static", "return": "void", "signature": "void quickSort2(int[] arr, int l, int r)", "full_signature": "public static void quickSort2(int[] arr, int l, int r)", "class_method_signature": "Sort.quickSort2(int[] arr, int l, int r)", "testcase": false, "constructor": false}, {"identifier": "heapSort", "parameters": "(int[] arr, int node)", "modifiers": "public static", "return": "void", "signature": "void heapSort(int[] arr, int node)", "full_signature": "public static void heapSort(int[] arr, int node)", "class_method_signature": "Sort.heapSort(int[] arr, int node)", "testcase": false, "constructor": false}, {"identifier": "buildHeap", "parameters": "(int[] arr, int length)", "modifiers": "public static", "return": "void", "signature": "void buildHeap(int[] arr, int length)", "full_signature": "public static void buildHeap(int[] arr, int length)", "class_method_signature": "Sort.buildHeap(int[] arr, int length)", "testcase": false, "constructor": false}, {"identifier": "adjustHeap", "parameters": "(int[] arr, int index, int length)", "modifiers": "public static", "return": "void", "signature": "void adjustHeap(int[] arr, int index, int length)", "full_signature": "public static void adjustHeap(int[] arr, int index, int length)", "class_method_signature": "Sort.adjustHeap(int[] arr, int index, int length)", "testcase": false, "constructor": false}, {"identifier": "swap", "parameters": "(int[] arr, int a_index, int b_index)", "modifiers": "public static", "return": "void", "signature": "void swap(int[] arr, int a_index, int b_index)", "full_signature": "public static void swap(int[] arr, int a_index, int b_index)", "class_method_signature": "Sort.swap(int[] arr, int a_index, int b_index)", "testcase": false, "constructor": false}], "file": "base/src/main/java/com/learn/base/algorithm/Sort.java"}, "focal_method": {"identifier": "buildHeap", "parameters": "(int[] arr, int length)", "modifiers": "public static", "return": "void", "body": "public static void buildHeap(int[] arr, int length) {\n        for (int i = 0; i < length; i++) {\n            adjustHeap(arr, i, length);\n        }\n    }", "signature": "void buildHeap(int[] arr, int length)", "full_signature": "public static void buildHeap(int[] arr, int length)", "class_method_signature": "Sort.buildHeap(int[] arr, int length)", "testcase": false, "constructor": false, "invocations": ["adjustHeap"]}, "repository": {"repo_id": 184603374, "url": "https://github.com/LuciferMS/learn", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 706, "license": "licensed"}}