{"test_class": {"identifier": "TestElasticSearchTransportClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ElasticSearchTransportClient fixture;", "modifier": "private", "type": "ElasticSearchTransportClient", "declarator": "fixture", "var_name": "fixture"}, {"original_string": "@Mock\n  private ElasticSearchEventSerializer serializer;", "modifier": "@Mock\n  private", "type": "ElasticSearchEventSerializer", "declarator": "serializer", "var_name": "serializer"}, {"original_string": "@Mock\n  private IndexNameBuilder nameBuilder;", "modifier": "@Mock\n  private", "type": "IndexNameBuilder", "declarator": "nameBuilder", "var_name": "nameBuilder"}, {"original_string": "@Mock\n  private Client elasticSearchClient;", "modifier": "@Mock\n  private", "type": "Client", "declarator": "elasticSearchClient", "var_name": "elasticSearchClient"}, {"original_string": "@Mock\n  private BulkRequestBuilder bulkRequestBuilder;", "modifier": "@Mock\n  private", "type": "BulkRequestBuilder", "declarator": "bulkRequestBuilder", "var_name": "bulkRequestBuilder"}, {"original_string": "@Mock\n  private IndexRequestBuilder indexRequestBuilder;", "modifier": "@Mock\n  private", "type": "IndexRequestBuilder", "declarator": "indexRequestBuilder", "var_name": "indexRequestBuilder"}, {"original_string": "@Mock\n  private Event event;", "modifier": "@Mock\n  private", "type": "Event", "declarator": "event", "var_name": "event"}], "file": "flume-ng-sinks/flume-ng-elasticsearch-sink/src/test/java/org/apache/flume/sink/elasticsearch/client/TestElasticSearchTransportClient.java"}, "test_case": {"identifier": "shouldAddNewEventWithoutTTL", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldAddNewEventWithoutTTL() throws Exception {\n    fixture.addEvent(event, nameBuilder, \"bar_type\", -1);\n    verify(indexRequestBuilder).setSource(\n        serializer.getContentBuilder(event).bytes());\n    verify(bulkRequestBuilder).add(indexRequestBuilder);\n  }", "signature": "void shouldAddNewEventWithoutTTL()", "full_signature": "@Test public void shouldAddNewEventWithoutTTL()", "class_method_signature": "TestElasticSearchTransportClient.shouldAddNewEventWithoutTTL()", "testcase": true, "constructor": false, "invocations": ["addEvent", "setSource", "verify", "bytes", "getContentBuilder", "add", "verify"]}, "focal_class": {"identifier": "ElasticSearchTransportClient", "superclass": "", "interfaces": "implements ElasticSearchClient", "fields": [{"original_string": "public static final Logger logger = LoggerFactory\n      .getLogger(ElasticSearchTransportClient.class);", "modifier": "public static final", "type": "Logger", "declarator": "logger = LoggerFactory\n      .getLogger(ElasticSearchTransportClient.class)", "var_name": "logger"}, {"original_string": "private InetSocketTransportAddress[] serverAddresses;", "modifier": "private", "type": "InetSocketTransportAddress[]", "declarator": "serverAddresses", "var_name": "serverAddresses"}, {"original_string": "private ElasticSearchEventSerializer serializer;", "modifier": "private", "type": "ElasticSearchEventSerializer", "declarator": "serializer", "var_name": "serializer"}, {"original_string": "private ElasticSearchIndexRequestBuilderFactory indexRequestBuilderFactory;", "modifier": "private", "type": "ElasticSearchIndexRequestBuilderFactory", "declarator": "indexRequestBuilderFactory", "var_name": "indexRequestBuilderFactory"}, {"original_string": "private BulkRequestBuilder bulkRequestBuilder;", "modifier": "private", "type": "BulkRequestBuilder", "declarator": "bulkRequestBuilder", "var_name": "bulkRequestBuilder"}, {"original_string": "private Client client;", "modifier": "private", "type": "Client", "declarator": "client", "var_name": "client"}], "methods": [{"identifier": "getServerAddresses", "parameters": "()", "modifiers": "@VisibleForTesting", "return": "InetSocketTransportAddress[]", "signature": "InetSocketTransportAddress[] getServerAddresses()", "full_signature": "@VisibleForTesting InetSocketTransportAddress[] getServerAddresses()", "class_method_signature": "ElasticSearchTransportClient.getServerAddresses()", "testcase": false, "constructor": false}, {"identifier": "setBulkRequestBuilder", "parameters": "(BulkRequestBuilder bulkRequestBuilder)", "modifiers": "@VisibleForTesting", "return": "void", "signature": "void setBulkRequestBuilder(BulkRequestBuilder bulkRequestBuilder)", "full_signature": "@VisibleForTesting void setBulkRequestBuilder(BulkRequestBuilder bulkRequestBuilder)", "class_method_signature": "ElasticSearchTransportClient.setBulkRequestBuilder(BulkRequestBuilder bulkRequestBuilder)", "testcase": false, "constructor": false}, {"identifier": "ElasticSearchTransportClient", "parameters": "(String[] hostNames, String clusterName,\n      ElasticSearchEventSerializer serializer)", "modifiers": "public", "return": "", "signature": " ElasticSearchTransportClient(String[] hostNames, String clusterName,\n      ElasticSearchEventSerializer serializer)", "full_signature": "public  ElasticSearchTransportClient(String[] hostNames, String clusterName,\n      ElasticSearchEventSerializer serializer)", "class_method_signature": "ElasticSearchTransportClient.ElasticSearchTransportClient(String[] hostNames, String clusterName,\n      ElasticSearchEventSerializer serializer)", "testcase": false, "constructor": true}, {"identifier": "ElasticSearchTransportClient", "parameters": "(String[] hostNames, String clusterName,\n      ElasticSearchIndexRequestBuilderFactory indexBuilder)", "modifiers": "public", "return": "", "signature": " ElasticSearchTransportClient(String[] hostNames, String clusterName,\n      ElasticSearchIndexRequestBuilderFactory indexBuilder)", "full_signature": "public  ElasticSearchTransportClient(String[] hostNames, String clusterName,\n      ElasticSearchIndexRequestBuilderFactory indexBuilder)", "class_method_signature": "ElasticSearchTransportClient.ElasticSearchTransportClient(String[] hostNames, String clusterName,\n      ElasticSearchIndexRequestBuilderFactory indexBuilder)", "testcase": false, "constructor": true}, {"identifier": "ElasticSearchTransportClient", "parameters": "(ElasticSearchIndexRequestBuilderFactory indexBuilderFactory)", "modifiers": "public", "return": "", "signature": " ElasticSearchTransportClient(ElasticSearchIndexRequestBuilderFactory indexBuilderFactory)", "full_signature": "public  ElasticSearchTransportClient(ElasticSearchIndexRequestBuilderFactory indexBuilderFactory)", "class_method_signature": "ElasticSearchTransportClient.ElasticSearchTransportClient(ElasticSearchIndexRequestBuilderFactory indexBuilderFactory)", "testcase": false, "constructor": true}, {"identifier": "ElasticSearchTransportClient", "parameters": "(ElasticSearchEventSerializer serializer)", "modifiers": "public", "return": "", "signature": " ElasticSearchTransportClient(ElasticSearchEventSerializer serializer)", "full_signature": "public  ElasticSearchTransportClient(ElasticSearchEventSerializer serializer)", "class_method_signature": "ElasticSearchTransportClient.ElasticSearchTransportClient(ElasticSearchEventSerializer serializer)", "testcase": false, "constructor": true}, {"identifier": "ElasticSearchTransportClient", "parameters": "(Client client,\n      ElasticSearchEventSerializer serializer)", "modifiers": "public", "return": "", "signature": " ElasticSearchTransportClient(Client client,\n      ElasticSearchEventSerializer serializer)", "full_signature": "public  ElasticSearchTransportClient(Client client,\n      ElasticSearchEventSerializer serializer)", "class_method_signature": "ElasticSearchTransportClient.ElasticSearchTransportClient(Client client,\n      ElasticSearchEventSerializer serializer)", "testcase": false, "constructor": true}, {"identifier": "ElasticSearchTransportClient", "parameters": "(Client client,\n                                      ElasticSearchIndexRequestBuilderFactory requestBuilderFactory)", "modifiers": "public", "return": "", "signature": " ElasticSearchTransportClient(Client client,\n                                      ElasticSearchIndexRequestBuilderFactory requestBuilderFactory)", "full_signature": "public  ElasticSearchTransportClient(Client client,\n                                      ElasticSearchIndexRequestBuilderFactory requestBuilderFactory)", "class_method_signature": "ElasticSearchTransportClient.ElasticSearchTransportClient(Client client,\n                                      ElasticSearchIndexRequestBuilderFactory requestBuilderFactory)", "testcase": false, "constructor": true}, {"identifier": "configureHostnames", "parameters": "(String[] hostNames)", "modifiers": "private", "return": "void", "signature": "void configureHostnames(String[] hostNames)", "full_signature": "private void configureHostnames(String[] hostNames)", "class_method_signature": "ElasticSearchTransportClient.configureHostnames(String[] hostNames)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ElasticSearchTransportClient.close()", "testcase": false, "constructor": false}, {"identifier": "addEvent", "parameters": "(Event event, IndexNameBuilder indexNameBuilder,\n      String indexType, long ttlMs)", "modifiers": "@Override public", "return": "void", "signature": "void addEvent(Event event, IndexNameBuilder indexNameBuilder,\n      String indexType, long ttlMs)", "full_signature": "@Override public void addEvent(Event event, IndexNameBuilder indexNameBuilder,\n      String indexType, long ttlMs)", "class_method_signature": "ElasticSearchTransportClient.addEvent(Event event, IndexNameBuilder indexNameBuilder,\n      String indexType, long ttlMs)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void execute()", "full_signature": "@Override public void execute()", "class_method_signature": "ElasticSearchTransportClient.execute()", "testcase": false, "constructor": false}, {"identifier": "openClient", "parameters": "(String clusterName)", "modifiers": "private", "return": "void", "signature": "void openClient(String clusterName)", "full_signature": "private void openClient(String clusterName)", "class_method_signature": "ElasticSearchTransportClient.openClient(String clusterName)", "testcase": false, "constructor": false}, {"identifier": "openLocalDiscoveryClient", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void openLocalDiscoveryClient()", "full_signature": "private void openLocalDiscoveryClient()", "class_method_signature": "ElasticSearchTransportClient.openLocalDiscoveryClient()", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(Context context)", "modifiers": "@Override public", "return": "void", "signature": "void configure(Context context)", "full_signature": "@Override public void configure(Context context)", "class_method_signature": "ElasticSearchTransportClient.configure(Context context)", "testcase": false, "constructor": false}], "file": "flume-ng-sinks/flume-ng-elasticsearch-sink/src/main/java/org/apache/flume/sink/elasticsearch/client/ElasticSearchTransportClient.java"}, "focal_method": {"identifier": "addEvent", "parameters": "(Event event, IndexNameBuilder indexNameBuilder,\n      String indexType, long ttlMs)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void addEvent(Event event, IndexNameBuilder indexNameBuilder,\n      String indexType, long ttlMs) throws Exception {\n    if (bulkRequestBuilder == null) {\n      bulkRequestBuilder = client.prepareBulk();\n    }\n\n    IndexRequestBuilder indexRequestBuilder = null;\n    if (indexRequestBuilderFactory == null) {\n      indexRequestBuilder = client\n          .prepareIndex(indexNameBuilder.getIndexName(event), indexType)\n          .setSource(serializer.getContentBuilder(event).bytes());\n    } else {\n      indexRequestBuilder = indexRequestBuilderFactory.createIndexRequest(\n          client, indexNameBuilder.getIndexPrefix(event), indexType, event);\n    }\n\n    if (ttlMs > 0) {\n      indexRequestBuilder.setTTL(ttlMs);\n    }\n    bulkRequestBuilder.add(indexRequestBuilder);\n  }", "signature": "void addEvent(Event event, IndexNameBuilder indexNameBuilder,\n      String indexType, long ttlMs)", "full_signature": "@Override public void addEvent(Event event, IndexNameBuilder indexNameBuilder,\n      String indexType, long ttlMs)", "class_method_signature": "ElasticSearchTransportClient.addEvent(Event event, IndexNameBuilder indexNameBuilder,\n      String indexType, long ttlMs)", "testcase": false, "constructor": false, "invocations": ["prepareBulk", "setSource", "prepareIndex", "getIndexName", "bytes", "getContentBuilder", "createIndexRequest", "getIndexPrefix", "setTTL", "add"]}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}