{"test_class": {"identifier": "HistoryKeyTest", "superclass": "", "interfaces": "", "fields": [], "file": "agent/core/src/test/java/org/jolokia/history/HistoryKeyTest.java"}, "test_case": {"identifier": "writeRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void writeRequest() throws MalformedObjectNameException {\n        JmxWriteRequest req = new JmxRequestBuilder(WRITE,\"test:type=blub\")\n                .attribute(\"bla\")\n                .build();\n\n        HistoryKey key = new HistoryKey(req);\n        assertTrue(key.toString().contains(\"attribute\"));\n        assertTrue(key.toString().contains(\"bla\"));\n        assertTrue(key.toString().contains(\"test:type=blub\"));\n    }", "signature": "void writeRequest()", "full_signature": "@Test public void writeRequest()", "class_method_signature": "HistoryKeyTest.writeRequest()", "testcase": true, "constructor": false, "invocations": ["build", "attribute", "assertTrue", "contains", "toString", "assertTrue", "contains", "toString", "assertTrue", "contains", "toString"]}, "focal_class": {"identifier": "HistoryKey", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 42L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 42L", "var_name": "serialVersionUID"}, {"original_string": "private String type;", "modifier": "private", "type": "String", "declarator": "type", "var_name": "type"}, {"original_string": "private ObjectName mBean;", "modifier": "private", "type": "ObjectName", "declarator": "mBean", "var_name": "mBean"}, {"original_string": "private String secondary;", "modifier": "private", "type": "String", "declarator": "secondary", "var_name": "secondary"}, {"original_string": "private String path;", "modifier": "private", "type": "String", "declarator": "path", "var_name": "path"}, {"original_string": "private String target;", "modifier": "private", "type": "String", "declarator": "target", "var_name": "target"}], "methods": [{"identifier": "HistoryKey", "parameters": "(JmxReadRequest pJmxRequest)", "modifiers": "", "return": "", "signature": " HistoryKey(JmxReadRequest pJmxRequest)", "full_signature": "  HistoryKey(JmxReadRequest pJmxRequest)", "class_method_signature": "HistoryKey.HistoryKey(JmxReadRequest pJmxRequest)", "testcase": false, "constructor": true}, {"identifier": "HistoryKey", "parameters": "(JmxWriteRequest pJmxReq)", "modifiers": "", "return": "", "signature": " HistoryKey(JmxWriteRequest pJmxReq)", "full_signature": "  HistoryKey(JmxWriteRequest pJmxReq)", "class_method_signature": "HistoryKey.HistoryKey(JmxWriteRequest pJmxReq)", "testcase": false, "constructor": true}, {"identifier": "HistoryKey", "parameters": "(JmxExecRequest pJmxReq)", "modifiers": "", "return": "", "signature": " HistoryKey(JmxExecRequest pJmxReq)", "full_signature": "  HistoryKey(JmxExecRequest pJmxReq)", "class_method_signature": "HistoryKey.HistoryKey(JmxExecRequest pJmxReq)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "(JmxObjectNameRequest pJmxReq)", "modifiers": "private", "return": "void", "signature": "void init(JmxObjectNameRequest pJmxReq)", "full_signature": "private void init(JmxObjectNameRequest pJmxReq)", "class_method_signature": "HistoryKey.init(JmxObjectNameRequest pJmxReq)", "testcase": false, "constructor": false}, {"identifier": "HistoryKey", "parameters": "(String pMBean, String pOperation, String pTarget)", "modifiers": "public", "return": "", "signature": " HistoryKey(String pMBean, String pOperation, String pTarget)", "full_signature": "public  HistoryKey(String pMBean, String pOperation, String pTarget)", "class_method_signature": "HistoryKey.HistoryKey(String pMBean, String pOperation, String pTarget)", "testcase": false, "constructor": true}, {"identifier": "sanitize", "parameters": "(String pValue)", "modifiers": "private", "return": "String", "signature": "String sanitize(String pValue)", "full_signature": "private String sanitize(String pValue)", "class_method_signature": "HistoryKey.sanitize(String pValue)", "testcase": false, "constructor": false}, {"identifier": "HistoryKey", "parameters": "(String pMBean, String pAttribute, String pPath, String pTarget)", "modifiers": "public", "return": "", "signature": " HistoryKey(String pMBean, String pAttribute, String pPath, String pTarget)", "full_signature": "public  HistoryKey(String pMBean, String pAttribute, String pPath, String pTarget)", "class_method_signature": "HistoryKey.HistoryKey(String pMBean, String pAttribute, String pPath, String pTarget)", "testcase": false, "constructor": true}, {"identifier": "isMBeanPattern", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isMBeanPattern()", "full_signature": "public boolean isMBeanPattern()", "class_method_signature": "HistoryKey.isMBeanPattern()", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(HistoryKey pKey)", "modifiers": "public", "return": "boolean", "signature": "boolean matches(HistoryKey pKey)", "full_signature": "public boolean matches(HistoryKey pKey)", "class_method_signature": "HistoryKey.matches(HistoryKey pKey)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override @SuppressWarnings(\"PMD.IfStmtsMustUseBraces\") public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override @SuppressWarnings(\"PMD.IfStmtsMustUseBraces\") public boolean equals(Object o)", "class_method_signature": "HistoryKey.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "HistoryKey.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "HistoryKey.toString()", "testcase": false, "constructor": false}], "file": "agent/core/src/main/java/org/jolokia/history/HistoryKey.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        final StringBuilder sb = new StringBuilder();\n        sb.append(\"HistoryKey\");\n        sb.append(\"{type='\").append(type).append('\\'');\n        sb.append(\", mBean=\").append(mBean);\n        sb.append(\", secondary='\").append(secondary).append('\\'');\n        sb.append(\", path='\").append(path).append('\\'');\n        sb.append(\", target='\").append(target).append('\\'');\n        sb.append('}');\n        return sb.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "HistoryKey.toString()", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "toString"]}, "repository": {"repo_id": 777444, "url": "https://github.com/rhuss/jolokia", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 682, "size": 20451, "license": "licensed"}}