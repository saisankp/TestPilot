{"test_class": {"identifier": "RectangularBoxTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-model/src/test/java/org/sejda/model/RectangularBoxTest.java"}, "test_case": {"identifier": "testRotate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRotate() {\n        RectangularBox victim = RectangularBox.newInstance(0, 1, 10, 9);\n        victim.rotate(Rotation.DEGREES_270);\n        assertEquals(1, victim.getBottom());\n        assertEquals(0, victim.getLeft());\n        assertEquals(9, victim.getTop());\n        assertEquals(10, victim.getRight());\n    }", "signature": "void testRotate()", "full_signature": "@Test public void testRotate()", "class_method_signature": "RectangularBoxTest.testRotate()", "testcase": true, "constructor": false, "invocations": ["newInstance", "rotate", "assertEquals", "getBottom", "assertEquals", "getLeft", "assertEquals", "getTop", "assertEquals", "getRight"]}, "focal_class": {"identifier": "RectangularBox", "superclass": "", "interfaces": "", "fields": [{"original_string": "private int bottom;", "modifier": "private", "type": "int", "declarator": "bottom", "var_name": "bottom"}, {"original_string": "private int left;", "modifier": "private", "type": "int", "declarator": "left", "var_name": "left"}, {"original_string": "private int top;", "modifier": "private", "type": "int", "declarator": "top", "var_name": "top"}, {"original_string": "private int right;", "modifier": "private", "type": "int", "declarator": "right", "var_name": "right"}], "methods": [{"identifier": "RectangularBox", "parameters": "(int bottom, int left, int top, int right)", "modifiers": "public", "return": "", "signature": " RectangularBox(int bottom, int left, int top, int right)", "full_signature": "public  RectangularBox(int bottom, int left, int top, int right)", "class_method_signature": "RectangularBox.RectangularBox(int bottom, int left, int top, int right)", "testcase": false, "constructor": true}, {"identifier": "getBottom", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getBottom()", "full_signature": "public int getBottom()", "class_method_signature": "RectangularBox.getBottom()", "testcase": false, "constructor": false}, {"identifier": "getLeft", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLeft()", "full_signature": "public int getLeft()", "class_method_signature": "RectangularBox.getLeft()", "testcase": false, "constructor": false}, {"identifier": "getTop", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTop()", "full_signature": "public int getTop()", "class_method_signature": "RectangularBox.getTop()", "testcase": false, "constructor": false}, {"identifier": "getRight", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRight()", "full_signature": "public int getRight()", "class_method_signature": "RectangularBox.getRight()", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(Rotation desiredRotation)", "modifiers": "public", "return": "void", "signature": "void rotate(Rotation desiredRotation)", "full_signature": "public void rotate(Rotation desiredRotation)", "class_method_signature": "RectangularBox.rotate(Rotation desiredRotation)", "testcase": false, "constructor": false}, {"identifier": "switchTopRight", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void switchTopRight()", "full_signature": "private void switchTopRight()", "class_method_signature": "RectangularBox.switchTopRight()", "testcase": false, "constructor": false}, {"identifier": "switchBottomLeft", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void switchBottomLeft()", "full_signature": "private void switchBottomLeft()", "class_method_signature": "RectangularBox.switchBottomLeft()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "RectangularBox.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "RectangularBox.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "RectangularBox.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(int bottom, int left, int top, int right)", "modifiers": "public static", "return": "RectangularBox", "signature": "RectangularBox newInstance(int bottom, int left, int top, int right)", "full_signature": "public static RectangularBox newInstance(int bottom, int left, int top, int right)", "class_method_signature": "RectangularBox.newInstance(int bottom, int left, int top, int right)", "testcase": false, "constructor": false}, {"identifier": "newInstanceFromPoints", "parameters": "(Point bottomLeft, Point topRight)", "modifiers": "public static", "return": "RectangularBox", "signature": "RectangularBox newInstanceFromPoints(Point bottomLeft, Point topRight)", "full_signature": "public static RectangularBox newInstanceFromPoints(Point bottomLeft, Point topRight)", "class_method_signature": "RectangularBox.newInstanceFromPoints(Point bottomLeft, Point topRight)", "testcase": false, "constructor": false}, {"identifier": "toTopLeftRectangularBox", "parameters": "()", "modifiers": "public", "return": "TopLeftRectangularBox", "signature": "TopLeftRectangularBox toTopLeftRectangularBox()", "full_signature": "public TopLeftRectangularBox toTopLeftRectangularBox()", "class_method_signature": "RectangularBox.toTopLeftRectangularBox()", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/RectangularBox.java"}, "focal_method": {"identifier": "rotate", "parameters": "(Rotation desiredRotation)", "modifiers": "public", "return": "void", "body": "public void rotate(Rotation desiredRotation) {\n        if (desiredRotation != null) {\n            Rotation currentRotation = Rotation.DEGREES_0;\n            while (!currentRotation.equals(desiredRotation)) {\n                switchTopRight();\n                switchBottomLeft();\n                currentRotation = currentRotation.rotateClockwise();\n            }\n        }\n    }", "signature": "void rotate(Rotation desiredRotation)", "full_signature": "public void rotate(Rotation desiredRotation)", "class_method_signature": "RectangularBox.rotate(Rotation desiredRotation)", "testcase": false, "constructor": false, "invocations": ["equals", "switchTopRight", "switchBottomLeft", "rotateClockwise"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}