{"test_class": {"identifier": "FileCompleterGeneratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "aesh/src/test/java/org/aesh/util/completer/FileCompleterGeneratorTest.java"}, "test_case": {"identifier": "testGroupCommand", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGroupCommand() {\n        CommandLineParser<CommandInvocation> parser = getParser(GutCommand1.class);\n\n        FileCompleterGenerator completerGenerator = new FileCompleterGenerator();\n\n        String out = completerGenerator.generateCompleterFile(parser);\n\n        assertTrue(out.contains(\"_complete_gut\"));\n        assertTrue(out.contains(\"_command_gut\"));\n        assertTrue(out.contains(\"_command_help\"));\n        assertTrue(out.contains(\"_command_rebase\"));\n        assertTrue(out.contains(\"ArrContains\"));\n        assertTrue(out.contains(\"ArrContains COMP_WORDS CHILD0 && { _command_help; return $?; }\"));\n\n    }", "signature": "void testGroupCommand()", "full_signature": "@Test public void testGroupCommand()", "class_method_signature": "FileCompleterGeneratorTest.testGroupCommand()", "testcase": true, "constructor": false, "invocations": ["getParser", "generateCompleterFile", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "FileCompleterGenerator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "generateCompleterFile", "parameters": "(CommandLineParser<CommandInvocation> command)", "modifiers": "", "return": "String", "signature": "String generateCompleterFile(CommandLineParser<CommandInvocation> command)", "full_signature": " String generateCompleterFile(CommandLineParser<CommandInvocation> command)", "class_method_signature": "FileCompleterGenerator.generateCompleterFile(CommandLineParser<CommandInvocation> command)", "testcase": false, "constructor": false}, {"identifier": "generateMainCompletion", "parameters": "(CommandLineParser<CommandInvocation> command)", "modifiers": "private", "return": "String", "signature": "String generateMainCompletion(CommandLineParser<CommandInvocation> command)", "full_signature": "private String generateMainCompletion(CommandLineParser<CommandInvocation> command)", "class_method_signature": "FileCompleterGenerator.generateMainCompletion(CommandLineParser<CommandInvocation> command)", "testcase": false, "constructor": false}, {"identifier": "generateCommand", "parameters": "(CommandLineParser<CommandInvocation> command)", "modifiers": "private", "return": "String", "signature": "String generateCommand(CommandLineParser<CommandInvocation> command)", "full_signature": "private String generateCommand(CommandLineParser<CommandInvocation> command)", "class_method_signature": "FileCompleterGenerator.generateCommand(CommandLineParser<CommandInvocation> command)", "testcase": false, "constructor": false}, {"identifier": "generateCompletionValues", "parameters": "(CommandLineParser<CommandInvocation> command)", "modifiers": "private", "return": "String", "signature": "String generateCompletionValues(CommandLineParser<CommandInvocation> command)", "full_signature": "private String generateCompletionValues(CommandLineParser<CommandInvocation> command)", "class_method_signature": "FileCompleterGenerator.generateCompletionValues(CommandLineParser<CommandInvocation> command)", "testcase": false, "constructor": false}, {"identifier": "generateHeader", "parameters": "(String name)", "modifiers": "private", "return": "String", "signature": "String generateHeader(String name)", "full_signature": "private String generateHeader(String name)", "class_method_signature": "FileCompleterGenerator.generateHeader(String name)", "testcase": false, "constructor": false}, {"identifier": "generateFooter", "parameters": "(String name)", "modifiers": "private", "return": "String", "signature": "String generateFooter(String name)", "full_signature": "private String generateFooter(String name)", "class_method_signature": "FileCompleterGenerator.generateFooter(String name)", "testcase": false, "constructor": false}, {"identifier": "generateArrContains", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String generateArrContains()", "full_signature": "private String generateArrContains()", "class_method_signature": "FileCompleterGenerator.generateArrContains()", "testcase": false, "constructor": false}, {"identifier": "generateDefaultCompletionVariables", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String generateDefaultCompletionVariables()", "full_signature": "private String generateDefaultCompletionVariables()", "class_method_signature": "FileCompleterGenerator.generateDefaultCompletionVariables()", "testcase": false, "constructor": false}], "file": "aesh/src/main/java/org/aesh/util/completer/FileCompleterGenerator.java"}, "focal_method": {"identifier": "generateCompleterFile", "parameters": "(CommandLineParser<CommandInvocation> command)", "modifiers": "", "return": "String", "body": "String generateCompleterFile(CommandLineParser<CommandInvocation> command) {\n         StringBuilder out = new StringBuilder();\n\n        out.append(generateHeader(command.getProcessedCommand().name()));\n\n        if(command.isGroupCommand())\n            out.append(generateArrContains());\n\n        out.append(generateMainCompletion(command));\n\n        out.append(generateCommand(command)) ;\n        if(command.isGroupCommand())\n            for(CommandLineParser<CommandInvocation> child : command.getAllChildParsers())\n                out.append(generateCommand(child));\n\n        out.append(generateFooter(command.getProcessedCommand().name()));\n\n        return out.toString();\n    }", "signature": "String generateCompleterFile(CommandLineParser<CommandInvocation> command)", "full_signature": " String generateCompleterFile(CommandLineParser<CommandInvocation> command)", "class_method_signature": "FileCompleterGenerator.generateCompleterFile(CommandLineParser<CommandInvocation> command)", "testcase": false, "constructor": false, "invocations": ["append", "generateHeader", "name", "getProcessedCommand", "isGroupCommand", "append", "generateArrContains", "append", "generateMainCompletion", "append", "generateCommand", "isGroupCommand", "getAllChildParsers", "append", "generateCommand", "append", "generateFooter", "name", "getProcessedCommand", "toString"]}, "repository": {"repo_id": 2280644, "url": "https://github.com/aeshell/aesh", "language": "Java", "is_fork": false, "fork_count": 62, "stargazer_count": 83, "size": 6068, "license": "licensed"}}