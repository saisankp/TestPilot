{"test_class": {"identifier": "CommonUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "libraries/lib-datahandler/src/test/java/org/eclipse/sw360/datahandler/common/CommonUtilsTest.java"}, "test_case": {"identifier": "testIsUrl", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsUrl() throws Exception {\n        assertThat(isValidUrl(\"http://www.google.com\"), is(true));\n    }", "signature": "void testIsUrl()", "full_signature": "@Test public void testIsUrl()", "class_method_signature": "CommonUtilsTest.testIsUrl()", "testcase": true, "constructor": false, "invocations": ["assertThat", "isValidUrl", "is"]}, "focal_class": {"identifier": "CommonUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String SYSTEM_CONFIGURATION_PATH = \"/etc/sw360\";", "modifier": "public static final", "type": "String", "declarator": "SYSTEM_CONFIGURATION_PATH = \"/etc/sw360\"", "var_name": "SYSTEM_CONFIGURATION_PATH"}, {"original_string": "private static final Ordering<String> CASE_INSENSITIVE_ORDERING = Ordering.from(String.CASE_INSENSITIVE_ORDER);", "modifier": "private static final", "type": "Ordering<String>", "declarator": "CASE_INSENSITIVE_ORDERING = Ordering.from(String.CASE_INSENSITIVE_ORDER)", "var_name": "CASE_INSENSITIVE_ORDERING"}, {"original_string": "public static final CSVFormat sw360CsvFormat = CSVFormat.RFC4180.withQuote('\\'').withEscape('\\\\').withIgnoreSurroundingSpaces(true).withQuoteMode(QuoteMode.ALL);", "modifier": "public static final", "type": "CSVFormat", "declarator": "sw360CsvFormat = CSVFormat.RFC4180.withQuote('\\'').withEscape('\\\\').withIgnoreSurroundingSpaces(true).withQuoteMode(QuoteMode.ALL)", "var_name": "sw360CsvFormat"}, {"original_string": "private static final Splitter COMMA_SPLITTER = Splitter.on(',').trimResults().omitEmptyStrings();", "modifier": "private static final", "type": "Splitter", "declarator": "COMMA_SPLITTER = Splitter.on(',').trimResults().omitEmptyStrings()", "var_name": "COMMA_SPLITTER"}, {"original_string": "public static final Joiner COMMA_JOINER = Joiner.on(\", \");", "modifier": "public static final", "type": "Joiner", "declarator": "COMMA_JOINER = Joiner.on(\", \")", "var_name": "COMMA_JOINER"}, {"original_string": "private static final Comparator<CheckStatus> CHECK_STATUS_COMPARATOR = Comparator.comparingInt(cs -> {\n        switch (cs) {\n            case ACCEPTED:\n                return 2;\n            case NOTCHECKED:\n                return 1;\n            case REJECTED:\n                return 0;\n        }\n        throw new IllegalArgumentException(\"CheckStatus is unknown to this Comparator: \" + cs.name());\n    });", "modifier": "private static final", "type": "Comparator<CheckStatus>", "declarator": "CHECK_STATUS_COMPARATOR = Comparator.comparingInt(cs -> {\n        switch (cs) {\n            case ACCEPTED:\n                return 2;\n            case NOTCHECKED:\n                return 1;\n            case REJECTED:\n                return 0;\n        }\n        throw new IllegalArgumentException(\"CheckStatus is unknown to this Comparator: \" + cs.name());\n    })", "var_name": "CHECK_STATUS_COMPARATOR"}, {"original_string": "public static final String TMP_TODO_ID_PREFIX = \"tmp\";", "modifier": "public static final", "type": "String", "declarator": "TMP_TODO_ID_PREFIX = \"tmp\"", "var_name": "TMP_TODO_ID_PREFIX"}, {"original_string": "private static final Predicate<String> NOT_EMPTY_OR_NULL = new Predicate<String>() {\n        @Override\n        public boolean apply(String input) {\n            return !Strings.isNullOrEmpty(input);\n        }\n    };", "modifier": "private static final", "type": "Predicate<String>", "declarator": "NOT_EMPTY_OR_NULL = new Predicate<String>() {\n        @Override\n        public boolean apply(String input) {\n            return !Strings.isNullOrEmpty(input);\n        }\n    }", "var_name": "NOT_EMPTY_OR_NULL"}], "methods": [{"identifier": "CommonUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " CommonUtils()", "full_signature": "private  CommonUtils()", "class_method_signature": "CommonUtils.CommonUtils()", "testcase": false, "constructor": true}, {"identifier": "getSortedList", "parameters": "(Collection<String> collection)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getSortedList(Collection<String> collection)", "full_signature": "public static List<String> getSortedList(Collection<String> collection)", "class_method_signature": "CommonUtils.getSortedList(Collection<String> collection)", "testcase": false, "constructor": false}, {"identifier": "joinStrings", "parameters": "(Iterable<String> strings)", "modifiers": "public static", "return": "String", "signature": "String joinStrings(Iterable<String> strings)", "full_signature": "public static String joinStrings(Iterable<String> strings)", "class_method_signature": "CommonUtils.joinStrings(Iterable<String> strings)", "testcase": false, "constructor": false}, {"identifier": "notEmptyOrNull", "parameters": "()", "modifiers": "public static", "return": "Predicate<String>", "signature": "Predicate<String> notEmptyOrNull()", "full_signature": "public static Predicate<String> notEmptyOrNull()", "class_method_signature": "CommonUtils.notEmptyOrNull()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(T item, Collection<T> collection)", "modifiers": "public static", "return": "boolean", "signature": "boolean contains(T item, Collection<T> collection)", "full_signature": "public static boolean contains(T item, Collection<T> collection)", "class_method_signature": "CommonUtils.contains(T item, Collection<T> collection)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(T item, T[] array)", "modifiers": "public static", "return": "boolean", "signature": "boolean contains(T item, T[] array)", "full_signature": "public static boolean contains(T item, T[] array)", "class_method_signature": "CommonUtils.contains(T item, T[] array)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Collection<T> collection, T item)", "modifiers": "public static", "return": "void", "signature": "void add(Collection<T> collection, T item)", "full_signature": "public static void add(Collection<T> collection, T item)", "class_method_signature": "CommonUtils.add(Collection<T> collection, T item)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(Collection<T> left, Collection<T> right)", "modifiers": "public static", "return": "void", "signature": "void addAll(Collection<T> left, Collection<T> right)", "full_signature": "public static void addAll(Collection<T> left, Collection<T> right)", "class_method_signature": "CommonUtils.addAll(Collection<T> left, Collection<T> right)", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "(Collection<T> left, Collection<T> right)", "modifiers": "public static", "return": "void", "signature": "void removeAll(Collection<T> left, Collection<T> right)", "full_signature": "public static void removeAll(Collection<T> left, Collection<T> right)", "class_method_signature": "CommonUtils.removeAll(Collection<T> left, Collection<T> right)", "testcase": false, "constructor": false}, {"identifier": "intersectionIfNotNull", "parameters": "(Set<T> left, Set<T> right)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> intersectionIfNotNull(Set<T> left, Set<T> right)", "full_signature": "public static Set<T> intersectionIfNotNull(Set<T> left, Set<T> right)", "class_method_signature": "CommonUtils.intersectionIfNotNull(Set<T> left, Set<T> right)", "testcase": false, "constructor": false}, {"identifier": "nullToEmptyList", "parameters": "(List<T> in)", "modifiers": "public static", "return": "List<T>", "signature": "List<T> nullToEmptyList(List<T> in)", "full_signature": "public static List<T> nullToEmptyList(List<T> in)", "class_method_signature": "CommonUtils.nullToEmptyList(List<T> in)", "testcase": false, "constructor": false}, {"identifier": "nullToEmptyCollection", "parameters": "(Collection<T> in)", "modifiers": "public static", "return": "Collection<T>", "signature": "Collection<T> nullToEmptyCollection(Collection<T> in)", "full_signature": "public static Collection<T> nullToEmptyCollection(Collection<T> in)", "class_method_signature": "CommonUtils.nullToEmptyCollection(Collection<T> in)", "testcase": false, "constructor": false}, {"identifier": "nullToEmptySet", "parameters": "(Set<T> in)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> nullToEmptySet(Set<T> in)", "full_signature": "public static Set<T> nullToEmptySet(Set<T> in)", "class_method_signature": "CommonUtils.nullToEmptySet(Set<T> in)", "testcase": false, "constructor": false}, {"identifier": "nullToEmptyMap", "parameters": "(Map<K, V> in)", "modifiers": "public static", "return": "Map<K, V>", "signature": "Map<K, V> nullToEmptyMap(Map<K, V> in)", "full_signature": "public static Map<K, V> nullToEmptyMap(Map<K, V> in)", "class_method_signature": "CommonUtils.nullToEmptyMap(Map<K, V> in)", "testcase": false, "constructor": false}, {"identifier": "toSingletonSet", "parameters": "(T in)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> toSingletonSet(T in)", "full_signature": "public static Set<T> toSingletonSet(T in)", "class_method_signature": "CommonUtils.toSingletonSet(T in)", "testcase": false, "constructor": false}, {"identifier": "nullToEmptyString", "parameters": "(Object in)", "modifiers": "public static", "return": "String", "signature": "String nullToEmptyString(Object in)", "full_signature": "public static String nullToEmptyString(Object in)", "class_method_signature": "CommonUtils.nullToEmptyString(Object in)", "testcase": false, "constructor": false}, {"identifier": "splitToSet", "parameters": "(String value)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> splitToSet(String value)", "full_signature": "public static Set<String> splitToSet(String value)", "class_method_signature": "CommonUtils.splitToSet(String value)", "testcase": false, "constructor": false}, {"identifier": "toUnsignedInt", "parameters": "(String string)", "modifiers": "public static", "return": "int", "signature": "int toUnsignedInt(String string)", "full_signature": "public static int toUnsignedInt(String string)", "class_method_signature": "CommonUtils.toUnsignedInt(String string)", "testcase": false, "constructor": false}, {"identifier": "oneIsNull", "parameters": "(Object... objects)", "modifiers": "public static", "return": "boolean", "signature": "boolean oneIsNull(Object... objects)", "full_signature": "public static boolean oneIsNull(Object... objects)", "class_method_signature": "CommonUtils.oneIsNull(Object... objects)", "testcase": false, "constructor": false}, {"identifier": "allAreEmptyOrNull", "parameters": "(Collection... collections)", "modifiers": "public static", "return": "boolean", "signature": "boolean allAreEmptyOrNull(Collection... collections)", "full_signature": "public static boolean allAreEmptyOrNull(Collection... collections)", "class_method_signature": "CommonUtils.allAreEmptyOrNull(Collection... collections)", "testcase": false, "constructor": false}, {"identifier": "allAreEmptyOrNull", "parameters": "(Map... maps)", "modifiers": "public static", "return": "boolean", "signature": "boolean allAreEmptyOrNull(Map... maps)", "full_signature": "public static boolean allAreEmptyOrNull(Map... maps)", "class_method_signature": "CommonUtils.allAreEmptyOrNull(Map... maps)", "testcase": false, "constructor": false}, {"identifier": "allAreEmptyOrNull", "parameters": "(String... strings)", "modifiers": "public static", "return": "boolean", "signature": "boolean allAreEmptyOrNull(String... strings)", "full_signature": "public static boolean allAreEmptyOrNull(String... strings)", "class_method_signature": "CommonUtils.allAreEmptyOrNull(String... strings)", "testcase": false, "constructor": false}, {"identifier": "atLeastOneIsNotEmpty", "parameters": "(Collection... collections)", "modifiers": "public static", "return": "boolean", "signature": "boolean atLeastOneIsNotEmpty(Collection... collections)", "full_signature": "public static boolean atLeastOneIsNotEmpty(Collection... collections)", "class_method_signature": "CommonUtils.atLeastOneIsNotEmpty(Collection... collections)", "testcase": false, "constructor": false}, {"identifier": "atLeastOneIsNotEmpty", "parameters": "(Map... maps)", "modifiers": "public static", "return": "boolean", "signature": "boolean atLeastOneIsNotEmpty(Map... maps)", "full_signature": "public static boolean atLeastOneIsNotEmpty(Map... maps)", "class_method_signature": "CommonUtils.atLeastOneIsNotEmpty(Map... maps)", "testcase": false, "constructor": false}, {"identifier": "atLeastOneIsNotEmpty", "parameters": "(String... strings)", "modifiers": "public static", "return": "boolean", "signature": "boolean atLeastOneIsNotEmpty(String... strings)", "full_signature": "public static boolean atLeastOneIsNotEmpty(String... strings)", "class_method_signature": "CommonUtils.atLeastOneIsNotEmpty(String... strings)", "testcase": false, "constructor": false}, {"identifier": "allAreEmpty", "parameters": "(Object... objects)", "modifiers": "public static", "return": "boolean", "signature": "boolean allAreEmpty(Object... objects)", "full_signature": "public static boolean allAreEmpty(Object... objects)", "class_method_signature": "CommonUtils.allAreEmpty(Object... objects)", "testcase": false, "constructor": false}, {"identifier": "atLeastOneIsNotEmpty", "parameters": "(Object... objects)", "modifiers": "public static", "return": "boolean", "signature": "boolean atLeastOneIsNotEmpty(Object... objects)", "full_signature": "public static boolean atLeastOneIsNotEmpty(Object... objects)", "class_method_signature": "CommonUtils.atLeastOneIsNotEmpty(Object... objects)", "testcase": false, "constructor": false}, {"identifier": "compareAsNullsAreSmaller", "parameters": "(Object o1, Object o2)", "modifiers": "public static", "return": "int", "signature": "int compareAsNullsAreSmaller(Object o1, Object o2)", "full_signature": "public static int compareAsNullsAreSmaller(Object o1, Object o2)", "class_method_signature": "CommonUtils.compareAsNullsAreSmaller(Object o1, Object o2)", "testcase": false, "constructor": false}, {"identifier": "allHaveSameLength", "parameters": "(Object... arrays)", "modifiers": "public static", "return": "boolean", "signature": "boolean allHaveSameLength(Object... arrays)", "full_signature": "public static boolean allHaveSameLength(Object... arrays)", "class_method_signature": "CommonUtils.allHaveSameLength(Object... arrays)", "testcase": false, "constructor": false}, {"identifier": "getAttachmentOptional", "parameters": "(final String attachmentId, Set<Attachment> attachments)", "modifiers": "public static", "return": "Optional<Attachment>", "signature": "Optional<Attachment> getAttachmentOptional(final String attachmentId, Set<Attachment> attachments)", "full_signature": "public static Optional<Attachment> getAttachmentOptional(final String attachmentId, Set<Attachment> attachments)", "class_method_signature": "CommonUtils.getAttachmentOptional(final String attachmentId, Set<Attachment> attachments)", "testcase": false, "constructor": false}, {"identifier": "getNewAttachment", "parameters": "(User user, String attachmentContentId, String fileName)", "modifiers": "@NotNull public static", "return": "Attachment", "signature": "Attachment getNewAttachment(User user, String attachmentContentId, String fileName)", "full_signature": "@NotNull public static Attachment getNewAttachment(User user, String attachmentContentId, String fileName)", "class_method_signature": "CommonUtils.getNewAttachment(User user, String attachmentContentId, String fileName)", "testcase": false, "constructor": false}, {"identifier": "compareByTimeStampDescending", "parameters": "()", "modifiers": "@NotNull public static", "return": "Comparator<ModerationRequest>", "signature": "Comparator<ModerationRequest> compareByTimeStampDescending()", "full_signature": "@NotNull public static Comparator<ModerationRequest> compareByTimeStampDescending()", "class_method_signature": "CommonUtils.compareByTimeStampDescending()", "testcase": false, "constructor": false}, {"identifier": "isInProgressOrPending", "parameters": "(ModerationRequest moderationRequest)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInProgressOrPending(ModerationRequest moderationRequest)", "full_signature": "public static boolean isInProgressOrPending(ModerationRequest moderationRequest)", "class_method_signature": "CommonUtils.isInProgressOrPending(ModerationRequest moderationRequest)", "testcase": false, "constructor": false}, {"identifier": "getOriginalDocumentState", "parameters": "()", "modifiers": "@NotNull public static", "return": "DocumentState", "signature": "DocumentState getOriginalDocumentState()", "full_signature": "@NotNull public static DocumentState getOriginalDocumentState()", "class_method_signature": "CommonUtils.getOriginalDocumentState()", "testcase": false, "constructor": false}, {"identifier": "getFirstModerationRequestOfUser", "parameters": "(List<ModerationRequest> moderationRequestsForDocumentId, final String email)", "modifiers": "public static", "return": "Optional<ModerationRequest>", "signature": "Optional<ModerationRequest> getFirstModerationRequestOfUser(List<ModerationRequest> moderationRequestsForDocumentId, final String email)", "full_signature": "public static Optional<ModerationRequest> getFirstModerationRequestOfUser(List<ModerationRequest> moderationRequestsForDocumentId, final String email)", "class_method_signature": "CommonUtils.getFirstModerationRequestOfUser(List<ModerationRequest> moderationRequestsForDocumentId, final String email)", "testcase": false, "constructor": false}, {"identifier": "getModeratedDocumentState", "parameters": "(ModerationRequest moderationRequest)", "modifiers": "@NotNull public static", "return": "DocumentState", "signature": "DocumentState getModeratedDocumentState(ModerationRequest moderationRequest)", "full_signature": "@NotNull public static DocumentState getModeratedDocumentState(ModerationRequest moderationRequest)", "class_method_signature": "CommonUtils.getModeratedDocumentState(ModerationRequest moderationRequest)", "testcase": false, "constructor": false}, {"identifier": "isStillRelevant", "parameters": "(ModerationRequest request)", "modifiers": "public static", "return": "boolean", "signature": "boolean isStillRelevant(ModerationRequest request)", "full_signature": "public static boolean isStillRelevant(ModerationRequest request)", "class_method_signature": "CommonUtils.isStillRelevant(ModerationRequest request)", "testcase": false, "constructor": false}, {"identifier": "afterFunction", "parameters": "(Function<V, T> function)", "modifiers": "public static", "return": "AfterFunction<T, V>", "signature": "AfterFunction<T, V> afterFunction(Function<V, T> function)", "full_signature": "public static AfterFunction<T, V> afterFunction(Function<V, T> function)", "class_method_signature": "CommonUtils.afterFunction(Function<V, T> function)", "testcase": false, "constructor": false}, {"identifier": "closeQuietly", "parameters": "(Closeable closeable, Logger logger)", "modifiers": "public static", "return": "void", "signature": "void closeQuietly(Closeable closeable, Logger logger)", "full_signature": "public static void closeQuietly(Closeable closeable, Logger logger)", "class_method_signature": "CommonUtils.closeQuietly(Closeable closeable, Logger logger)", "testcase": false, "constructor": false}, {"identifier": "isValidUrl", "parameters": "(String url)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValidUrl(String url)", "full_signature": "public static boolean isValidUrl(String url)", "class_method_signature": "CommonUtils.isValidUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "getTargetNameOfUrl", "parameters": "(String url)", "modifiers": "public static", "return": "String", "signature": "String getTargetNameOfUrl(String url)", "full_signature": "public static String getTargetNameOfUrl(String url)", "class_method_signature": "CommonUtils.getTargetNameOfUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "getBoolOrNull", "parameters": "(String in)", "modifiers": "public static", "return": "Boolean", "signature": "Boolean getBoolOrNull(String in)", "full_signature": "public static Boolean getBoolOrNull(String in)", "class_method_signature": "CommonUtils.getBoolOrNull(String in)", "testcase": false, "constructor": false}, {"identifier": "getIntegerOrNull", "parameters": "(String in)", "modifiers": "public static", "return": "Integer", "signature": "Integer getIntegerOrNull(String in)", "full_signature": "public static Integer getIntegerOrNull(String in)", "class_method_signature": "CommonUtils.getIntegerOrNull(String in)", "testcase": false, "constructor": false}, {"identifier": "getIntOrDefault", "parameters": "(String in, int defaultValue)", "modifiers": "public static", "return": "int", "signature": "int getIntOrDefault(String in, int defaultValue)", "full_signature": "public static int getIntOrDefault(String in, int defaultValue)", "class_method_signature": "CommonUtils.getIntOrDefault(String in, int defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getEnumStringOrNull", "parameters": "(T val)", "modifiers": "public static", "return": "String", "signature": "String getEnumStringOrNull(T val)", "full_signature": "public static String getEnumStringOrNull(T val)", "class_method_signature": "CommonUtils.getEnumStringOrNull(T val)", "testcase": false, "constructor": false}, {"identifier": "getStringUserMap", "parameters": "(UserService.Iface userClient)", "modifiers": "public static", "return": "Map<String, User>", "signature": "Map<String, User> getStringUserMap(UserService.Iface userClient)", "full_signature": "public static Map<String, User> getStringUserMap(UserService.Iface userClient)", "class_method_signature": "CommonUtils.getStringUserMap(UserService.Iface userClient)", "testcase": false, "constructor": false}, {"identifier": "getMessageForRequestSummary", "parameters": "(RequestSummary releaseRequestSummary, String typeInfo, StringBuilder stringBuilder)", "modifiers": "public static", "return": "void", "signature": "void getMessageForRequestSummary(RequestSummary releaseRequestSummary, String typeInfo, StringBuilder stringBuilder)", "full_signature": "public static void getMessageForRequestSummary(RequestSummary releaseRequestSummary, String typeInfo, StringBuilder stringBuilder)", "class_method_signature": "CommonUtils.getMessageForRequestSummary(RequestSummary releaseRequestSummary, String typeInfo, StringBuilder stringBuilder)", "testcase": false, "constructor": false}, {"identifier": "prepareMessage", "parameters": "(RequestSummary input, String info)", "modifiers": "public static", "return": "RequestSummary", "signature": "RequestSummary prepareMessage(RequestSummary input, String info)", "full_signature": "public static RequestSummary prepareMessage(RequestSummary input, String info)", "class_method_signature": "CommonUtils.prepareMessage(RequestSummary input, String info)", "testcase": false, "constructor": false}, {"identifier": "reduceRequestStatus", "parameters": "(RequestStatus r1, RequestStatus r2)", "modifiers": "public static", "return": "RequestStatus", "signature": "RequestStatus reduceRequestStatus(RequestStatus r1, RequestStatus r2)", "full_signature": "public static RequestStatus reduceRequestStatus(RequestStatus r1, RequestStatus r2)", "class_method_signature": "CommonUtils.reduceRequestStatus(RequestStatus r1, RequestStatus r2)", "testcase": false, "constructor": false}, {"identifier": "addToMessage", "parameters": "(RequestSummary left, RequestSummary right, String info)", "modifiers": "public static", "return": "RequestSummary", "signature": "RequestSummary addToMessage(RequestSummary left, RequestSummary right, String info)", "full_signature": "public static RequestSummary addToMessage(RequestSummary left, RequestSummary right, String info)", "class_method_signature": "CommonUtils.addToMessage(RequestSummary left, RequestSummary right, String info)", "testcase": false, "constructor": false}, {"identifier": "addRequestSummaries", "parameters": "(RequestSummary left, String typeInfoLeft, RequestSummary right, String typeInfoRight)", "modifiers": "@NotNull public static", "return": "RequestSummary", "signature": "RequestSummary addRequestSummaries(RequestSummary left, String typeInfoLeft, RequestSummary right, String typeInfoRight)", "full_signature": "@NotNull public static RequestSummary addRequestSummaries(RequestSummary left, String typeInfoLeft, RequestSummary right, String typeInfoRight)", "class_method_signature": "CommonUtils.addRequestSummaries(RequestSummary left, String typeInfoLeft, RequestSummary right, String typeInfoRight)", "testcase": false, "constructor": false}, {"identifier": "getAttachmentURLsFromAttachmentContents", "parameters": "(List<AttachmentContent> attachmentContents)", "modifiers": "public static", "return": "ImmutableList<String>", "signature": "ImmutableList<String> getAttachmentURLsFromAttachmentContents(List<AttachmentContent> attachmentContents)", "full_signature": "public static ImmutableList<String> getAttachmentURLsFromAttachmentContents(List<AttachmentContent> attachmentContents)", "class_method_signature": "CommonUtils.getAttachmentURLsFromAttachmentContents(List<AttachmentContent> attachmentContents)", "testcase": false, "constructor": false}, {"identifier": "addRequestSummaries", "parameters": "(RequestSummary left, RequestSummary right)", "modifiers": "public static", "return": "RequestSummary", "signature": "RequestSummary addRequestSummaries(RequestSummary left, RequestSummary right)", "full_signature": "public static RequestSummary addRequestSummaries(RequestSummary left, RequestSummary right)", "class_method_signature": "CommonUtils.addRequestSummaries(RequestSummary left, RequestSummary right)", "testcase": false, "constructor": false}, {"identifier": "getIdentifierToListOfDuplicates", "parameters": "(ListMultimap<String, String> identifierToIds)", "modifiers": "@NotNull public static", "return": "Map<String, List<String>>", "signature": "Map<String, List<String>> getIdentifierToListOfDuplicates(ListMultimap<String, String> identifierToIds)", "full_signature": "@NotNull public static Map<String, List<String>> getIdentifierToListOfDuplicates(ListMultimap<String, String> identifierToIds)", "class_method_signature": "CommonUtils.getIdentifierToListOfDuplicates(ListMultimap<String, String> identifierToIds)", "testcase": false, "constructor": false}, {"identifier": "getRequestSummary", "parameters": "(List<String> ids, List<DocumentOperationResult> documentOperationResults)", "modifiers": "@NotNull public static", "return": "RequestSummary", "signature": "RequestSummary getRequestSummary(List<String> ids, List<DocumentOperationResult> documentOperationResults)", "full_signature": "@NotNull public static RequestSummary getRequestSummary(List<String> ids, List<DocumentOperationResult> documentOperationResults)", "class_method_signature": "CommonUtils.getRequestSummary(List<String> ids, List<DocumentOperationResult> documentOperationResults)", "testcase": false, "constructor": false}, {"identifier": "getRequestSummary", "parameters": "(int total, int failures)", "modifiers": "public static", "return": "RequestSummary", "signature": "RequestSummary getRequestSummary(int total, int failures)", "full_signature": "public static RequestSummary getRequestSummary(int total, int failures)", "class_method_signature": "CommonUtils.getRequestSummary(int total, int failures)", "testcase": false, "constructor": false}, {"identifier": "loadProperties", "parameters": "(Class<?> clazz, String propertiesFilePath)", "modifiers": "public static", "return": "Properties", "signature": "Properties loadProperties(Class<?> clazz, String propertiesFilePath)", "full_signature": "public static Properties loadProperties(Class<?> clazz, String propertiesFilePath)", "class_method_signature": "CommonUtils.loadProperties(Class<?> clazz, String propertiesFilePath)", "testcase": false, "constructor": false}, {"identifier": "loadProperties", "parameters": "(Class<?> clazz, String propertiesFilePath, boolean useSystemConfig)", "modifiers": "public static", "return": "Properties", "signature": "Properties loadProperties(Class<?> clazz, String propertiesFilePath, boolean useSystemConfig)", "full_signature": "public static Properties loadProperties(Class<?> clazz, String propertiesFilePath, boolean useSystemConfig)", "class_method_signature": "CommonUtils.loadProperties(Class<?> clazz, String propertiesFilePath, boolean useSystemConfig)", "testcase": false, "constructor": false}, {"identifier": "loadResource", "parameters": "(Class<?> clazz, String resourceFilePath)", "modifiers": "public static", "return": "Optional<byte[]>", "signature": "Optional<byte[]> loadResource(Class<?> clazz, String resourceFilePath)", "full_signature": "public static Optional<byte[]> loadResource(Class<?> clazz, String resourceFilePath)", "class_method_signature": "CommonUtils.loadResource(Class<?> clazz, String resourceFilePath)", "testcase": false, "constructor": false}, {"identifier": "loadResource", "parameters": "(Class<?> clazz, String resourceFilePath, boolean useSystemResourses)", "modifiers": "public static", "return": "Optional<byte[]>", "signature": "Optional<byte[]> loadResource(Class<?> clazz, String resourceFilePath, boolean useSystemResourses)", "full_signature": "public static Optional<byte[]> loadResource(Class<?> clazz, String resourceFilePath, boolean useSystemResourses)", "class_method_signature": "CommonUtils.loadResource(Class<?> clazz, String resourceFilePath, boolean useSystemResourses)", "testcase": false, "constructor": false}, {"identifier": "getFirst", "parameters": "(Iterable<T> iterable)", "modifiers": "public static", "return": "T", "signature": "T getFirst(Iterable<T> iterable)", "full_signature": "public static T getFirst(Iterable<T> iterable)", "class_method_signature": "CommonUtils.getFirst(Iterable<T> iterable)", "testcase": false, "constructor": false}, {"identifier": "getBestClearingReport", "parameters": "(Release release)", "modifiers": "public static", "return": "Optional<Attachment>", "signature": "Optional<Attachment> getBestClearingReport(Release release)", "full_signature": "public static Optional<Attachment> getBestClearingReport(Release release)", "class_method_signature": "CommonUtils.getBestClearingReport(Release release)", "testcase": false, "constructor": false}, {"identifier": "isTemporaryTodo", "parameters": "(Todo todo)", "modifiers": "public static", "return": "boolean", "signature": "boolean isTemporaryTodo(Todo todo)", "full_signature": "public static boolean isTemporaryTodo(Todo todo)", "class_method_signature": "CommonUtils.isTemporaryTodo(Todo todo)", "testcase": false, "constructor": false}, {"identifier": "wrapThriftOptionalReplacement", "parameters": "(List<T> thriftOutput)", "modifiers": "public static", "return": "Optional<T>", "signature": "Optional<T> wrapThriftOptionalReplacement(List<T> thriftOutput)", "full_signature": "public static Optional<T> wrapThriftOptionalReplacement(List<T> thriftOutput)", "class_method_signature": "CommonUtils.wrapThriftOptionalReplacement(List<T> thriftOutput)", "testcase": false, "constructor": false}, {"identifier": "formatTime", "parameters": "(int seconds)", "modifiers": "public static", "return": "String", "signature": "String formatTime(int seconds)", "full_signature": "public static String formatTime(int seconds)", "class_method_signature": "CommonUtils.formatTime(int seconds)", "testcase": false, "constructor": false}, {"identifier": "mergeMapIntoMap", "parameters": "(Map<String, Set<String>> source, Map<String, Set<String>> destination)", "modifiers": "public static", "return": "Map<String, Set<String>>", "signature": "Map<String, Set<String>> mergeMapIntoMap(Map<String, Set<String>> source, Map<String, Set<String>> destination)", "full_signature": "public static Map<String, Set<String>> mergeMapIntoMap(Map<String, Set<String>> source, Map<String, Set<String>> destination)", "class_method_signature": "CommonUtils.mergeMapIntoMap(Map<String, Set<String>> source, Map<String, Set<String>> destination)", "testcase": false, "constructor": false}, {"identifier": "isNullEmptyOrWhitespace", "parameters": "(String string)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNullEmptyOrWhitespace(String string)", "full_signature": "public static boolean isNullEmptyOrWhitespace(String string)", "class_method_signature": "CommonUtils.isNullEmptyOrWhitespace(String string)", "testcase": false, "constructor": false}, {"identifier": "distinctByKey", "parameters": "(Function<? super T, Object> keyExtractor)", "modifiers": "public static", "return": "java.util.function.Predicate<T>", "signature": "java.util.function.Predicate<T> distinctByKey(Function<? super T, Object> keyExtractor)", "full_signature": "public static java.util.function.Predicate<T> distinctByKey(Function<? super T, Object> keyExtractor)", "class_method_signature": "CommonUtils.distinctByKey(Function<? super T, Object> keyExtractor)", "testcase": false, "constructor": false}, {"identifier": "getNullToEmptyKeyset", "parameters": "(Map<String, ?> map)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> getNullToEmptyKeyset(Map<String, ?> map)", "full_signature": "public static Set<String> getNullToEmptyKeyset(Map<String, ?> map)", "class_method_signature": "CommonUtils.getNullToEmptyKeyset(Map<String, ?> map)", "testcase": false, "constructor": false}, {"identifier": "getNullToEmptyValue", "parameters": "(Map<String, Set<String>> map, String key)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> getNullToEmptyValue(Map<String, Set<String>> map, String key)", "full_signature": "public static Set<String> getNullToEmptyValue(Map<String, Set<String>> map, String key)", "class_method_signature": "CommonUtils.getNullToEmptyValue(Map<String, Set<String>> map, String key)", "testcase": false, "constructor": false}, {"identifier": "unifiedKeyset", "parameters": "(Map<String, ?>... maps)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> unifiedKeyset(Map<String, ?>... maps)", "full_signature": "public static Set<String> unifiedKeyset(Map<String, ?>... maps)", "class_method_signature": "CommonUtils.unifiedKeyset(Map<String, ?>... maps)", "testcase": false, "constructor": false}, {"identifier": "isMapFieldMapOfStringSets", "parameters": "(U field,\n                                                                                                    T document,\n                                                                                                    T documentAdditions,\n                                                                                                    T documentDeletions,\n                                                                                                    Logger logger)", "modifiers": "public static", "return": "boolean", "signature": "boolean isMapFieldMapOfStringSets(U field,\n                                                                                                    T document,\n                                                                                                    T documentAdditions,\n                                                                                                    T documentDeletions,\n                                                                                                    Logger logger)", "full_signature": "public static boolean isMapFieldMapOfStringSets(U field,\n                                                                                                    T document,\n                                                                                                    T documentAdditions,\n                                                                                                    T documentDeletions,\n                                                                                                    Logger logger)", "class_method_signature": "CommonUtils.isMapFieldMapOfStringSets(U field,\n                                                                                                    T document,\n                                                                                                    T documentAdditions,\n                                                                                                    T documentDeletions,\n                                                                                                    Logger logger)", "testcase": false, "constructor": false}, {"identifier": "nonEmptyMapOfSetsContainsNonEmptySet", "parameters": "(Map<String, Set<Object>> map)", "modifiers": "private static", "return": "boolean", "signature": "boolean nonEmptyMapOfSetsContainsNonEmptySet(Map<String, Set<Object>> map)", "full_signature": "private static boolean nonEmptyMapOfSetsContainsNonEmptySet(Map<String, Set<Object>> map)", "class_method_signature": "CommonUtils.nonEmptyMapOfSetsContainsNonEmptySet(Map<String, Set<Object>> map)", "testcase": false, "constructor": false}, {"identifier": "getNonEmptySetFromMapOfSets", "parameters": "(Map<String, Set<Object>> map)", "modifiers": "private static", "return": "Optional<Set<Object>>", "signature": "Optional<Set<Object>> getNonEmptySetFromMapOfSets(Map<String, Set<Object>> map)", "full_signature": "private static Optional<Set<Object>> getNonEmptySetFromMapOfSets(Map<String, Set<Object>> map)", "class_method_signature": "CommonUtils.getNonEmptySetFromMapOfSets(Map<String, Set<Object>> map)", "testcase": false, "constructor": false}], "file": "libraries/lib-datahandler/src/main/java/org/eclipse/sw360/datahandler/common/CommonUtils.java"}, "focal_method": {"identifier": "isValidUrl", "parameters": "(String url)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isValidUrl(String url) {\n        try {\n            return !isNullOrEmpty(new URL(url).getHost());\n        } catch (MalformedURLException e) {\n            return false;\n        }\n    }", "signature": "boolean isValidUrl(String url)", "full_signature": "public static boolean isValidUrl(String url)", "class_method_signature": "CommonUtils.isValidUrl(String url)", "testcase": false, "constructor": false, "invocations": ["isNullOrEmpty", "getHost"]}, "repository": {"repo_id": 43326581, "url": "https://github.com/sw360/sw360portal", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 31, "size": 8770, "license": "licensed"}}