{"test_class": {"identifier": "MavenRuntimeRequesterTest", "superclass": "extends AntennaTestWithMockedContext", "interfaces": "", "fields": [{"original_string": "@Mock\n    private RepositorySystem repositorySystem = mock(RepositorySystem.class);", "modifier": "@Mock\n    private", "type": "RepositorySystem", "declarator": "repositorySystem = mock(RepositorySystem.class)", "var_name": "repositorySystem"}, {"original_string": "@Mock\n    private ArtifactRepository localRepositoryMock = mock(ArtifactRepository.class);", "modifier": "@Mock\n    private", "type": "ArtifactRepository", "declarator": "localRepositoryMock = mock(ArtifactRepository.class)", "var_name": "localRepositoryMock"}, {"original_string": "@Mock\n    private ArtifactRepository remoteRepositoryMock = mock(ArtifactRepository.class);", "modifier": "@Mock\n    private", "type": "ArtifactRepository", "declarator": "remoteRepositoryMock = mock(ArtifactRepository.class)", "var_name": "remoteRepositoryMock"}, {"original_string": "private ArtifactStubFactory stubFactory = new ArtifactStubFactory();", "modifier": "private", "type": "ArtifactStubFactory", "declarator": "stubFactory = new ArtifactStubFactory()", "var_name": "stubFactory"}, {"original_string": "private MavenRuntimeRequester mavenRuntimeRequester;", "modifier": "private", "type": "MavenRuntimeRequester", "declarator": "mavenRuntimeRequester", "var_name": "mavenRuntimeRequester"}, {"original_string": "private Coordinate coordinate = new Coordinate(Coordinate.Types.MAVEN, \"groupId\", \"artifactId\", \"version\");", "modifier": "private", "type": "Coordinate", "declarator": "coordinate = new Coordinate(Coordinate.Types.MAVEN, \"groupId\", \"artifactId\", \"version\")", "var_name": "coordinate"}, {"original_string": "private org.apache.maven.artifact.Artifact stubbedMavenArtifact;", "modifier": "private", "type": "org.apache.maven.artifact.Artifact", "declarator": "stubbedMavenArtifact", "var_name": "stubbedMavenArtifact"}], "file": "modules/maven/src/test/java/org/eclipse/sw360/antenna/maven/MavenRuntimeRequesterTest.java"}, "test_case": {"identifier": "testRequestFileWithExceptions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRequestFileWithExceptions() throws IOException {\n        ArtifactResolutionResult result = new ArtifactResolutionResult()\n                .setOriginatingArtifact(stubbedMavenArtifact)\n                .addMissingArtifact(stubbedMavenArtifact);\n\n        doReturn(stubbedMavenArtifact)\n                .when(repositorySystem)\n                .createArtifact(anyString(), anyString(), anyString(), anyString());\n\n        doReturn(result)\n                .when(repositorySystem)\n                .resolve(any());\n\n        Path targetDirectory = temporaryFolder.newFolder(\"dependencies\").toPath();\n        Optional<File> file = mavenRuntimeRequester.requestFile(coordinate, targetDirectory, ClassifierInformation.DEFAULT_JAR);\n\n        assertThat(file).isEmpty();\n    }", "signature": "void testRequestFileWithExceptions()", "full_signature": "@Test public void testRequestFileWithExceptions()", "class_method_signature": "MavenRuntimeRequesterTest.testRequestFileWithExceptions()", "testcase": true, "constructor": false, "invocations": ["addMissingArtifact", "setOriginatingArtifact", "createArtifact", "when", "doReturn", "anyString", "anyString", "anyString", "anyString", "resolve", "when", "doReturn", "any", "toPath", "newFolder", "requestFile", "isEmpty", "assertThat"]}, "focal_class": {"identifier": "MavenRuntimeRequester", "superclass": "extends IArtifactRequester", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(MavenRuntimeRequester.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(MavenRuntimeRequester.class)", "var_name": "LOGGER"}, {"original_string": "private final RepositorySystem repositorySystem;", "modifier": "private final", "type": "RepositorySystem", "declarator": "repositorySystem", "var_name": "repositorySystem"}, {"original_string": "private final ArtifactRepository localRepository;", "modifier": "private final", "type": "ArtifactRepository", "declarator": "localRepository", "var_name": "localRepository"}, {"original_string": "private final List<ArtifactRepository> remoteRepositories;", "modifier": "private final", "type": "List<ArtifactRepository>", "declarator": "remoteRepositories", "var_name": "remoteRepositories"}], "methods": [{"identifier": "MavenRuntimeRequester", "parameters": "(RepositorySystem repositorySystem, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories, Optional<URL> sourcesRepositoryUrl)", "modifiers": "public", "return": "", "signature": " MavenRuntimeRequester(RepositorySystem repositorySystem, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories, Optional<URL> sourcesRepositoryUrl)", "full_signature": "public  MavenRuntimeRequester(RepositorySystem repositorySystem, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories, Optional<URL> sourcesRepositoryUrl)", "class_method_signature": "MavenRuntimeRequester.MavenRuntimeRequester(RepositorySystem repositorySystem, ArtifactRepository localRepository, List<ArtifactRepository> remoteRepositories, Optional<URL> sourcesRepositoryUrl)", "testcase": false, "constructor": true}, {"identifier": "requestFile", "parameters": "(Coordinate mavenCoordinate, Path targetDirectory, ClassifierInformation classifierInformation)", "modifiers": "@Override public", "return": "Optional<File>", "signature": "Optional<File> requestFile(Coordinate mavenCoordinate, Path targetDirectory, ClassifierInformation classifierInformation)", "full_signature": "@Override public Optional<File> requestFile(Coordinate mavenCoordinate, Path targetDirectory, ClassifierInformation classifierInformation)", "class_method_signature": "MavenRuntimeRequester.requestFile(Coordinate mavenCoordinate, Path targetDirectory, ClassifierInformation classifierInformation)", "testcase": false, "constructor": false}, {"identifier": "requestFile", "parameters": "(Coordinate mavenCoordinate, Path targetDirectory, String type, ClassifierInformation classifier)", "modifiers": "private", "return": "Optional<File>", "signature": "Optional<File> requestFile(Coordinate mavenCoordinate, Path targetDirectory, String type, ClassifierInformation classifier)", "full_signature": "private Optional<File> requestFile(Coordinate mavenCoordinate, Path targetDirectory, String type, ClassifierInformation classifier)", "class_method_signature": "MavenRuntimeRequester.requestFile(Coordinate mavenCoordinate, Path targetDirectory, String type, ClassifierInformation classifier)", "testcase": false, "constructor": false}, {"identifier": "doArtifactRequest", "parameters": "(Artifact mvnArtifact)", "modifiers": "private", "return": "ArtifactResolutionResult", "signature": "ArtifactResolutionResult doArtifactRequest(Artifact mvnArtifact)", "full_signature": "private ArtifactResolutionResult doArtifactRequest(Artifact mvnArtifact)", "class_method_signature": "MavenRuntimeRequester.doArtifactRequest(Artifact mvnArtifact)", "testcase": false, "constructor": false}, {"identifier": "wasSuccessful", "parameters": "(ArtifactResolutionResult result, Artifact mvnArtifact)", "modifiers": "private", "return": "boolean", "signature": "boolean wasSuccessful(ArtifactResolutionResult result, Artifact mvnArtifact)", "full_signature": "private boolean wasSuccessful(ArtifactResolutionResult result, Artifact mvnArtifact)", "class_method_signature": "MavenRuntimeRequester.wasSuccessful(ArtifactResolutionResult result, Artifact mvnArtifact)", "testcase": false, "constructor": false}, {"identifier": "contentEquals", "parameters": "(File artifactFile, File targetFile)", "modifiers": "private", "return": "boolean", "signature": "boolean contentEquals(File artifactFile, File targetFile)", "full_signature": "private boolean contentEquals(File artifactFile, File targetFile)", "class_method_signature": "MavenRuntimeRequester.contentEquals(File artifactFile, File targetFile)", "testcase": false, "constructor": false}, {"identifier": "copyFile", "parameters": "(File artifactFile, File targetFile)", "modifiers": "private", "return": "void", "signature": "void copyFile(File artifactFile, File targetFile)", "full_signature": "private void copyFile(File artifactFile, File targetFile)", "class_method_signature": "MavenRuntimeRequester.copyFile(File artifactFile, File targetFile)", "testcase": false, "constructor": false}], "file": "modules/maven/src/main/java/org/eclipse/sw360/antenna/maven/MavenRuntimeRequester.java"}, "focal_method": {"identifier": "requestFile", "parameters": "(Coordinate mavenCoordinate, Path targetDirectory, ClassifierInformation classifierInformation)", "modifiers": "@Override public", "return": "Optional<File>", "body": "@Override\n    public Optional<File> requestFile(Coordinate mavenCoordinate, Path targetDirectory, ClassifierInformation classifierInformation) {\n        if (classifierInformation.isSource) {\n            return requestFile(mavenCoordinate, targetDirectory, \"java-source\", classifierInformation);\n        }\n        return requestFile(mavenCoordinate, targetDirectory, \"jar\", classifierInformation);\n    }", "signature": "Optional<File> requestFile(Coordinate mavenCoordinate, Path targetDirectory, ClassifierInformation classifierInformation)", "full_signature": "@Override public Optional<File> requestFile(Coordinate mavenCoordinate, Path targetDirectory, ClassifierInformation classifierInformation)", "class_method_signature": "MavenRuntimeRequester.requestFile(Coordinate mavenCoordinate, Path targetDirectory, ClassifierInformation classifierInformation)", "testcase": false, "constructor": false, "invocations": ["requestFile", "requestFile"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}