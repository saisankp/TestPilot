{"test_class": {"identifier": "PartialSQLiteIndexTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final SimpleAttribute<Car, Integer> OBJECT_TO_ID = Car.CAR_ID;", "modifier": "public static final", "type": "SimpleAttribute<Car, Integer>", "declarator": "OBJECT_TO_ID = Car.CAR_ID", "var_name": "OBJECT_TO_ID"}, {"original_string": "public static final SimpleAttribute<Integer, Car> ID_TO_OBJECT = new SimpleAttribute<Integer, Car>(\"carFromId\") {\n        public Car getValue(Integer carId, QueryOptions queryOptions) { return CarFactory.createCar(carId); }\n    };", "modifier": "public static final", "type": "SimpleAttribute<Integer, Car>", "declarator": "ID_TO_OBJECT = new SimpleAttribute<Integer, Car>(\"carFromId\") {\n        public Car getValue(Integer carId, QueryOptions queryOptions) { return CarFactory.createCar(carId); }\n    }", "var_name": "ID_TO_OBJECT"}, {"original_string": "@Rule\n    public TemporaryDatabase.TemporaryInMemoryDatabase temporaryInMemoryDatabase = new TemporaryDatabase.TemporaryInMemoryDatabase();", "modifier": "@Rule\n    public", "type": "TemporaryDatabase.TemporaryInMemoryDatabase", "declarator": "temporaryInMemoryDatabase = new TemporaryDatabase.TemporaryInMemoryDatabase()", "var_name": "temporaryInMemoryDatabase"}], "file": "code/src/test/java/com/googlecode/cqengine/index/sqlite/PartialSQLiteIndexTest.java"}, "test_case": {"identifier": "testPartialSQLiteIndex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPartialSQLiteIndex() {\n        IndexedCollection<Car> indexedCollection = new ConcurrentIndexedCollection<Car>();\n        ConnectionManager connectionManager = temporaryInMemoryDatabase.getConnectionManager(true);\n        QueryOptions queryOptions = new QueryOptions();\n        queryOptions.put(ConnectionManager.class, connectionManager);\n        PartialSQLiteIndex<String, Car, Integer> index = PartialSQLiteIndex.onAttributeWithFilterQuery(Car.MANUFACTURER, OBJECT_TO_ID, ID_TO_OBJECT, between(Car.CAR_ID, 2, 4));\n        indexedCollection.addIndex(index, queryOptions);\n        indexedCollection.update(Collections.<Car>emptySet(), CarFactory.createCollectionOfCars(10), queryOptions);\n\n        assertEquals(75,         indexedCollection.retrieve(and(equal(Car.MANUFACTURER, \"Ford\"), between(Car.CAR_ID, 2, 4)), queryOptions).getRetrievalCost());\n        assertEquals(2147483647, indexedCollection.retrieve(and(equal(Car.MANUFACTURER, \"Ford\"), between(Car.CAR_ID, 2, 5)), queryOptions).getRetrievalCost());\n    }", "signature": "void testPartialSQLiteIndex()", "full_signature": "@Test public void testPartialSQLiteIndex()", "class_method_signature": "PartialSQLiteIndexTest.testPartialSQLiteIndex()", "testcase": true, "constructor": false, "invocations": ["getConnectionManager", "put", "onAttributeWithFilterQuery", "between", "addIndex", "update", "emptySet", "createCollectionOfCars", "assertEquals", "getRetrievalCost", "retrieve", "and", "equal", "between", "assertEquals", "getRetrievalCost", "retrieve", "and", "equal", "between"]}, "focal_class": {"identifier": "PartialSQLiteIndex", "superclass": "extends PartialSortedKeyStatisticsAttributeIndex<A, O>", "interfaces": "implements NonHeapTypeIndex", "fields": [{"original_string": "final SimpleAttribute<O, K> primaryKeyAttribute;", "modifier": "final", "type": "SimpleAttribute<O, K>", "declarator": "primaryKeyAttribute", "var_name": "primaryKeyAttribute"}, {"original_string": "final SimpleAttribute<K, O> foreignKeyAttribute;", "modifier": "final", "type": "SimpleAttribute<K, O>", "declarator": "foreignKeyAttribute", "var_name": "foreignKeyAttribute"}, {"original_string": "final String tableNameSuffix;", "modifier": "final", "type": "String", "declarator": "tableNameSuffix", "var_name": "tableNameSuffix"}], "methods": [{"identifier": "PartialSQLiteIndex", "parameters": "(Attribute<O, A> attribute,\n                                 SimpleAttribute<O, K> primaryKeyAttribute,\n                                 SimpleAttribute<K, O> foreignKeyAttribute,\n                                 Query<O> filterQuery)", "modifiers": "protected", "return": "", "signature": " PartialSQLiteIndex(Attribute<O, A> attribute,\n                                 SimpleAttribute<O, K> primaryKeyAttribute,\n                                 SimpleAttribute<K, O> foreignKeyAttribute,\n                                 Query<O> filterQuery)", "full_signature": "protected  PartialSQLiteIndex(Attribute<O, A> attribute,\n                                 SimpleAttribute<O, K> primaryKeyAttribute,\n                                 SimpleAttribute<K, O> foreignKeyAttribute,\n                                 Query<O> filterQuery)", "class_method_signature": "PartialSQLiteIndex.PartialSQLiteIndex(Attribute<O, A> attribute,\n                                 SimpleAttribute<O, K> primaryKeyAttribute,\n                                 SimpleAttribute<K, O> foreignKeyAttribute,\n                                 Query<O> filterQuery)", "testcase": false, "constructor": true}, {"identifier": "createBackingIndex", "parameters": "()", "modifiers": "@Override @SuppressWarnings(\"unchecked\") // unchecked, because type K will be provided later via the init() method protected", "return": "SortedKeyStatisticsAttributeIndex<A, O>", "signature": "SortedKeyStatisticsAttributeIndex<A, O> createBackingIndex()", "full_signature": "@Override @SuppressWarnings(\"unchecked\") // unchecked, because type K will be provided later via the init() method protected SortedKeyStatisticsAttributeIndex<A, O> createBackingIndex()", "class_method_signature": "PartialSQLiteIndex.createBackingIndex()", "testcase": false, "constructor": false}, {"identifier": "onAttributeWithFilterQuery", "parameters": "(Attribute<O, A> attribute,\n                                                                                   SimpleAttribute<O, K> primaryKeyAttribute,\n                                                                                   SimpleAttribute<K, O> foreignKeyAttribute,\n                                                                                   Query<O> filterQuery)", "modifiers": "public static", "return": "PartialSQLiteIndex<A, O, K>", "signature": "PartialSQLiteIndex<A, O, K> onAttributeWithFilterQuery(Attribute<O, A> attribute,\n                                                                                   SimpleAttribute<O, K> primaryKeyAttribute,\n                                                                                   SimpleAttribute<K, O> foreignKeyAttribute,\n                                                                                   Query<O> filterQuery)", "full_signature": "public static PartialSQLiteIndex<A, O, K> onAttributeWithFilterQuery(Attribute<O, A> attribute,\n                                                                                   SimpleAttribute<O, K> primaryKeyAttribute,\n                                                                                   SimpleAttribute<K, O> foreignKeyAttribute,\n                                                                                   Query<O> filterQuery)", "class_method_signature": "PartialSQLiteIndex.onAttributeWithFilterQuery(Attribute<O, A> attribute,\n                                                                                   SimpleAttribute<O, K> primaryKeyAttribute,\n                                                                                   SimpleAttribute<K, O> foreignKeyAttribute,\n                                                                                   Query<O> filterQuery)", "testcase": false, "constructor": false}], "file": "code/src/main/java/com/googlecode/cqengine/index/sqlite/PartialSQLiteIndex.java"}, "focal_method": {"identifier": "PartialSQLiteIndex", "parameters": "(Attribute<O, A> attribute,\n                                 SimpleAttribute<O, K> primaryKeyAttribute,\n                                 SimpleAttribute<K, O> foreignKeyAttribute,\n                                 Query<O> filterQuery)", "modifiers": "protected", "return": "", "body": "protected PartialSQLiteIndex(Attribute<O, A> attribute,\n                                 SimpleAttribute<O, K> primaryKeyAttribute,\n                                 SimpleAttribute<K, O> foreignKeyAttribute,\n                                 Query<O> filterQuery) {\n        super(attribute, filterQuery);\n        this.primaryKeyAttribute = primaryKeyAttribute;\n        this.foreignKeyAttribute = foreignKeyAttribute;\n        this.tableNameSuffix = \"_partial_\" + sanitizeForTableName(filterQuery.toString());\n    }", "signature": " PartialSQLiteIndex(Attribute<O, A> attribute,\n                                 SimpleAttribute<O, K> primaryKeyAttribute,\n                                 SimpleAttribute<K, O> foreignKeyAttribute,\n                                 Query<O> filterQuery)", "full_signature": "protected  PartialSQLiteIndex(Attribute<O, A> attribute,\n                                 SimpleAttribute<O, K> primaryKeyAttribute,\n                                 SimpleAttribute<K, O> foreignKeyAttribute,\n                                 Query<O> filterQuery)", "class_method_signature": "PartialSQLiteIndex.PartialSQLiteIndex(Attribute<O, A> attribute,\n                                 SimpleAttribute<O, K> primaryKeyAttribute,\n                                 SimpleAttribute<K, O> foreignKeyAttribute,\n                                 Query<O> filterQuery)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 41263775, "url": "https://github.com/npgall/cqengine", "language": "Java", "is_fork": false, "fork_count": 180, "stargazer_count": 1194, "size": 11701, "license": "licensed"}}