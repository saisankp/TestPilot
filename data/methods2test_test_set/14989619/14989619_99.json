{"test_class": {"identifier": "HttpClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ObjectMapper mapper = new ObjectMapper();", "modifier": "private static final", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}], "file": "models/src/test/java/org/jvalue/ods/api/notifications/HttpClientTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n\tpublic final void testEquals() {\n\n\t\tHttpClient client1 = new HttpClient(\"0\", \"url1\", true);\n\t\tHttpClient client2 = new HttpClient(\"0\", \"url1\", true);\n\t\tHttpClient client3 = new HttpClient(\"0\", \"url2\", true);\n\t\tHttpClient client4 = new HttpClient(\"0\", \"url1\", false);\n\t\tHttpClient client5 = new HttpClient(\"1\", \"url1\", true);\n\n\t\tassertEquals(client1, client1);\n\t\tassertEquals(client1, client2);\n\t\tassertNotEquals(client1, client3);\n\t\tassertNotEquals(client1, client4);\n\t\tassertNotEquals(client1, client5);\n\t\tassertNotEquals(client1, null);\n\t\tassertNotEquals(client1, new Object());\n\n\t\tassertEquals(client1.hashCode(), client1.hashCode());\n\t\tassertEquals(client1.hashCode(), client2.hashCode());\n\t\tassertNotEquals(client1.hashCode(), client3.hashCode());\n\t\tassertNotEquals(client1.hashCode(), client4.hashCode());\n\t\tassertNotEquals(client1.hashCode(), client5.hashCode());\n\t}", "signature": "void testEquals()", "full_signature": "@Test public final void testEquals()", "class_method_signature": "HttpClientTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "assertEquals", "assertNotEquals", "assertNotEquals", "assertNotEquals", "assertNotEquals", "assertNotEquals", "assertEquals", "hashCode", "hashCode", "assertEquals", "hashCode", "hashCode", "assertNotEquals", "hashCode", "hashCode", "assertNotEquals", "hashCode", "hashCode", "assertNotEquals", "hashCode", "hashCode"]}, "focal_class": {"identifier": "HttpClient", "superclass": "extends Client", "interfaces": "", "fields": [{"original_string": "public static final String CLIENT_TYPE = \"HTTP\";", "modifier": "public static final", "type": "String", "declarator": "CLIENT_TYPE = \"HTTP\"", "var_name": "CLIENT_TYPE"}, {"original_string": "@NotNull private final String callbackUrl;", "modifier": "@NotNull private final", "type": "String", "declarator": "callbackUrl", "var_name": "callbackUrl"}, {"original_string": "private final boolean sendData;", "modifier": "private final", "type": "boolean", "declarator": "sendData", "var_name": "sendData"}], "methods": [{"identifier": "HttpClient", "parameters": "(\n\t\t\t@JsonProperty(\"id\") String id,\n\t\t\t@JsonProperty(\"callbackUrl\") String callbackUrl,\n\t\t\t@JsonProperty(\"sendData\") boolean sendData)", "modifiers": "@JsonCreator public", "return": "", "signature": " HttpClient(\n\t\t\t@JsonProperty(\"id\") String id,\n\t\t\t@JsonProperty(\"callbackUrl\") String callbackUrl,\n\t\t\t@JsonProperty(\"sendData\") boolean sendData)", "full_signature": "@JsonCreator public  HttpClient(\n\t\t\t@JsonProperty(\"id\") String id,\n\t\t\t@JsonProperty(\"callbackUrl\") String callbackUrl,\n\t\t\t@JsonProperty(\"sendData\") boolean sendData)", "class_method_signature": "HttpClient.HttpClient(\n\t\t\t@JsonProperty(\"id\") String id,\n\t\t\t@JsonProperty(\"callbackUrl\") String callbackUrl,\n\t\t\t@JsonProperty(\"sendData\") boolean sendData)", "testcase": false, "constructor": true}, {"identifier": "getCallbackUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCallbackUrl()", "full_signature": "public String getCallbackUrl()", "class_method_signature": "HttpClient.getCallbackUrl()", "testcase": false, "constructor": false}, {"identifier": "getSendData", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getSendData()", "full_signature": "public boolean getSendData()", "class_method_signature": "HttpClient.getSendData()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "HttpClient.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "HttpClient.hashCode()", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(ClientVisitor<P,R> visitor, P param)", "modifiers": "@Override public", "return": "R", "signature": "R accept(ClientVisitor<P,R> visitor, P param)", "full_signature": "@Override public R accept(ClientVisitor<P,R> visitor, P param)", "class_method_signature": "HttpClient.accept(ClientVisitor<P,R> visitor, P param)", "testcase": false, "constructor": false}], "file": "models/src/main/java/org/jvalue/ods/api/notifications/HttpClient.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean equals(Object other) {\n\t\tif (!super.equals(other)) return false;\n\t\tHttpClient client = (HttpClient) other;\n\t\treturn Objects.equal(callbackUrl, client.callbackUrl)\n\t\t\t\t&& Objects.equal(sendData, client.sendData);\n\t}", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "HttpClient.equals(Object other)", "testcase": false, "constructor": false, "invocations": ["equals", "equal", "equal"]}, "repository": {"repo_id": 14989619, "url": "https://github.com/jvalue/open-data-service-v1", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 4525, "license": "licensed"}}