{"test_class": {"identifier": "ServletRequestUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "libs/java/server_common/src/test/java/com/yahoo/athenz/common/server/util/ServletRequestUtilTest.java"}, "test_case": {"identifier": "testGetRemoteAddressLoopBackMultipleXFF", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetRemoteAddressLoopBackMultipleXFF() {\n        HttpServletRequest httpServletRequest = Mockito.mock(HttpServletRequest.class);\n        Mockito.when(httpServletRequest.getRemoteAddr()).thenReturn(\"127.0.0.1\");\n        Mockito.when(httpServletRequest.getHeader(\"X-Forwarded-For\")).thenReturn(\"1.2.3.4, 1.3.4.5, 1.4.5.6\");\n        assertEquals(ServletRequestUtil.getRemoteAddress(httpServletRequest), \"1.4.5.6\");\n    }", "signature": "void testGetRemoteAddressLoopBackMultipleXFF()", "full_signature": "@Test public void testGetRemoteAddressLoopBackMultipleXFF()", "class_method_signature": "ServletRequestUtilTest.testGetRemoteAddressLoopBackMultipleXFF()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getRemoteAddr", "thenReturn", "when", "getHeader", "assertEquals", "getRemoteAddress"]}, "focal_class": {"identifier": "ServletRequestUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String LOOPBACK_ADDRESS = \"127.0.0.1\";", "modifier": "public static final", "type": "String", "declarator": "LOOPBACK_ADDRESS = \"127.0.0.1\"", "var_name": "LOOPBACK_ADDRESS"}, {"original_string": "public static final String XFF_HEADER       = \"X-Forwarded-For\";", "modifier": "public static final", "type": "String", "declarator": "XFF_HEADER       = \"X-Forwarded-For\"", "var_name": "XFF_HEADER"}], "methods": [{"identifier": "getRemoteAddress", "parameters": "(final HttpServletRequest request)", "modifiers": "public static", "return": "String", "signature": "String getRemoteAddress(final HttpServletRequest request)", "full_signature": "public static String getRemoteAddress(final HttpServletRequest request)", "class_method_signature": "ServletRequestUtil.getRemoteAddress(final HttpServletRequest request)", "testcase": false, "constructor": false}], "file": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/util/ServletRequestUtil.java"}, "focal_method": {"identifier": "getRemoteAddress", "parameters": "(final HttpServletRequest request)", "modifiers": "public static", "return": "String", "body": "public static String getRemoteAddress(final HttpServletRequest request) {\n        String addr = request.getRemoteAddr();\n        if (LOOPBACK_ADDRESS.equals(addr)) {\n            String xff = request.getHeader(XFF_HEADER);\n            if (xff != null) {\n                String[] addrs = xff.split(\",\");\n                final String xffAddr = addrs[addrs.length - 1].trim();\n                if (InetAddresses.isInetAddress(xffAddr)) {\n                    addr = xffAddr;\n                }\n            }\n        }\n        return addr;\n    }", "signature": "String getRemoteAddress(final HttpServletRequest request)", "full_signature": "public static String getRemoteAddress(final HttpServletRequest request)", "class_method_signature": "ServletRequestUtil.getRemoteAddress(final HttpServletRequest request)", "testcase": false, "constructor": false, "invocations": ["getRemoteAddr", "equals", "getHeader", "split", "trim", "isInetAddress"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}