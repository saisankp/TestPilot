{"test_class": {"identifier": "SpaceBattleSimulationTest", "superclass": "", "interfaces": "", "fields": [], "file": "Space Battle Simulation/SpaceBattleSimulation/src/test/java/com/perceptivesoftware/codedash/simulation/SpaceBattleSimulationTest.java"}, "test_case": {"identifier": "battleTestEnemyLoses", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void battleTestEnemyLoses() {\n\t\tSpaceBattleSimulation sim = new SpaceBattleSimulation();\n\t\t\n\t\tList<SpaceBattleSimulation.Ship> friendly = new ArrayList<SpaceBattleSimulation.Ship>();\n\t\tList<SpaceBattleSimulation.Ship> enemy = new ArrayList<SpaceBattleSimulation.Ship>();\n\t\t\n\t\tfriendly.add(sim.new Dreadnaught());\n\t\tfriendly.add(sim.new PatrolVessel());\n\t\t\n\t\tenemy.add(sim.new Destroyer());\n\t\tenemy.add(sim.new Bomber());\n\t\tenemy.add(sim.new Bomber());\n\t\t\n\t\t\n\t\tboolean isVictory = SpaceBattleSimulation.battle(friendly, enemy);\n\t\t\n\t\tif(isVictory){\n\t\t\tSystem.out.println(\"Friendly wins!\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"Enemy Wins!\");\n\t\t}\n\t\t\n\t}", "signature": "void battleTestEnemyLoses()", "full_signature": "@Test public void battleTestEnemyLoses()", "class_method_signature": "SpaceBattleSimulationTest.battleTestEnemyLoses()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "add", "battle", "println", "println"]}, "focal_class": {"identifier": "SpaceBattleSimulation", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "SpaceBattleSimulation.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "convertInputToList", "parameters": "(String commaDelem)", "modifiers": "protected static", "return": "List<Ship>", "signature": "List<Ship> convertInputToList(String commaDelem)", "full_signature": "protected static List<Ship> convertInputToList(String commaDelem)", "class_method_signature": "SpaceBattleSimulation.convertInputToList(String commaDelem)", "testcase": false, "constructor": false}, {"identifier": "mapAbbreviationToShip", "parameters": "(String shipAbbreviation)", "modifiers": "protected static", "return": "Ship", "signature": "Ship mapAbbreviationToShip(String shipAbbreviation)", "full_signature": "protected static Ship mapAbbreviationToShip(String shipAbbreviation)", "class_method_signature": "SpaceBattleSimulation.mapAbbreviationToShip(String shipAbbreviation)", "testcase": false, "constructor": false}, {"identifier": "battle", "parameters": "(List<Ship> friendly, List<Ship> enemy)", "modifiers": "protected static", "return": "boolean", "signature": "boolean battle(List<Ship> friendly, List<Ship> enemy)", "full_signature": "protected static boolean battle(List<Ship> friendly, List<Ship> enemy)", "class_method_signature": "SpaceBattleSimulation.battle(List<Ship> friendly, List<Ship> enemy)", "testcase": false, "constructor": false}, {"identifier": "engagement", "parameters": "(Ship enemy, Ship friend)", "modifiers": "public static", "return": "void", "signature": "void engagement(Ship enemy, Ship friend)", "full_signature": "public static void engagement(Ship enemy, Ship friend)", "class_method_signature": "SpaceBattleSimulation.engagement(Ship enemy, Ship friend)", "testcase": false, "constructor": false}], "file": "Space Battle Simulation/SpaceBattleSimulation/src/main/java/com/perceptivesoftware/codedash/simulation/SpaceBattleSimulation.java"}, "focal_method": {"identifier": "battle", "parameters": "(List<Ship> friendly, List<Ship> enemy)", "modifiers": "protected static", "return": "boolean", "body": "protected static boolean battle(List<Ship> friendly, List<Ship> enemy){\n\t\t\n\t\tShip friendlyShip = friendly.remove(0);\n\t\tShip enemyShip = enemy.remove(0);\n\t\t\n\t\tint friendlyFleetSize = friendly.size() + 1;\n\t\tint enemyFleetSize = enemy.size() + 1;\n\t\t\n\t\twhile(friendlyFleetSize > 0 && enemyFleetSize > 0){\n\t\t\tengagement(enemyShip, friendlyShip);\n\n\t\t\tif(friendlyShip.isDestroyed){\n\t\t\t\tif(friendly.size() > 0){\n\t\t\t\t\tfriendlyShip = friendly.remove(0);\n\t\t\t\t}\n\t\t\t\t--friendlyFleetSize;\n\t\t\t}\n\t\t\t\n\t\t\tif(enemyShip.isDestroyed){\n\t\t\t\tif(enemy.size() > 0){\n\t\t\t\t\tenemyShip = enemy.remove(0);\n\t\t\t\t}\n\t\t\t\t--enemyFleetSize;\n\t\t\t}\n\t\t\t\n\t\t}\n\n        return friendlyFleetSize > 0 && enemyFleetSize == 0;\n\t\t\t\n\t\t\n\t}", "signature": "boolean battle(List<Ship> friendly, List<Ship> enemy)", "full_signature": "protected static boolean battle(List<Ship> friendly, List<Ship> enemy)", "class_method_signature": "SpaceBattleSimulation.battle(List<Ship> friendly, List<Ship> enemy)", "testcase": false, "constructor": false, "invocations": ["remove", "remove", "size", "size", "engagement", "size", "remove", "size", "remove"]}, "repository": {"repo_id": 13218559, "url": "https://github.com/LexmarkES/codedash2013", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 988, "license": "licensed"}}