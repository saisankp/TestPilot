{"test_class": {"identifier": "HtmlStreamTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final HtmlClass HELLO_CLASS = HtmlClass.of(\"hello\");", "modifier": "private static final", "type": "HtmlClass", "declarator": "HELLO_CLASS = HtmlClass.of(\"hello\")", "var_name": "HELLO_CLASS"}], "file": "jtss/src/test/java/ec/tss/html/HtmlStreamTest.java"}, "test_case": {"identifier": "testOpenTag", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOpenTag() throws IOException {\n        assertThat(of().open(DIV).writer.toString()).isEqualTo(\"<div>\");\n        assertThat(of().open(DIV, NO_CLASS).writer.toString()).isEqualTo(\"<div>\");\n        assertThat(of().open(DIV, HELLO_CLASS).writer.toString()).isEqualTo(\"<div class=\\\"hello\\\">\");\n    }", "signature": "void testOpenTag()", "full_signature": "@Test public void testOpenTag()", "class_method_signature": "HtmlStreamTest.testOpenTag()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "toString", "open", "of", "isEqualTo", "assertThat", "toString", "open", "of", "isEqualTo", "assertThat", "toString", "open", "of"]}, "focal_class": {"identifier": "HtmlStream", "superclass": "", "interfaces": "implements Closeable", "fields": [{"original_string": "public final Writer writer;", "modifier": "public final", "type": "Writer", "declarator": "writer", "var_name": "writer"}, {"original_string": "private static final String CLASS_ATTR = \"class\";", "modifier": "private static final", "type": "String", "declarator": "CLASS_ATTR = \"class\"", "var_name": "CLASS_ATTR"}, {"original_string": "private static final String STYLE_ATTR = \"style\";", "modifier": "private static final", "type": "String", "declarator": "STYLE_ATTR = \"style\"", "var_name": "STYLE_ATTR"}, {"original_string": "private static final String WIDTH_ATTR = \"width\";", "modifier": "private static final", "type": "String", "declarator": "WIDTH_ATTR = \"width\"", "var_name": "WIDTH_ATTR"}, {"original_string": "private static final String BORDER_ATTR = \"border\";", "modifier": "private static final", "type": "String", "declarator": "BORDER_ATTR = \"border\"", "var_name": "BORDER_ATTR"}, {"original_string": "private static final String COLSPAN_ATTR = \"colspan\";", "modifier": "private static final", "type": "String", "declarator": "COLSPAN_ATTR = \"colspan\"", "var_name": "COLSPAN_ATTR"}, {"original_string": "private static final String ROWSPAN_ATTR = \"rowspan\";", "modifier": "private static final", "type": "String", "declarator": "ROWSPAN_ATTR = \"rowspan\"", "var_name": "ROWSPAN_ATTR"}, {"original_string": "private static final String BGCOLOR_ATTR = \"bgcolor\";", "modifier": "private static final", "type": "String", "declarator": "BGCOLOR_ATTR = \"bgcolor\"", "var_name": "BGCOLOR_ATTR"}], "methods": [{"identifier": "HtmlStream", "parameters": "(Writer writer)", "modifiers": "public", "return": "", "signature": " HtmlStream(Writer writer)", "full_signature": "public  HtmlStream(Writer writer)", "class_method_signature": "HtmlStream.HtmlStream(Writer writer)", "testcase": false, "constructor": true}, {"identifier": "open", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void open()", "full_signature": "public void open()", "class_method_signature": "HtmlStream.open()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "HtmlStream.close()", "testcase": false, "constructor": false}, {"identifier": "newLine", "parameters": "()", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream newLine()", "full_signature": "public HtmlStream newLine()", "class_method_signature": "HtmlStream.newLine()", "testcase": false, "constructor": false}, {"identifier": "newLines", "parameters": "(int n)", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream newLines(int n)", "full_signature": "public HtmlStream newLines(int n)", "class_method_signature": "HtmlStream.newLines(int n)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(HtmlTag tag)", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream open(HtmlTag tag)", "full_signature": "public HtmlStream open(HtmlTag tag)", "class_method_signature": "HtmlStream.open(HtmlTag tag)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(HtmlTag tag, HtmlClass classNames)", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream open(HtmlTag tag, HtmlClass classNames)", "full_signature": "public HtmlStream open(HtmlTag tag, HtmlClass classNames)", "class_method_signature": "HtmlStream.open(HtmlTag tag, HtmlClass classNames)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "(HtmlTag tag)", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream close(HtmlTag tag)", "full_signature": "public HtmlStream close(HtmlTag tag)", "class_method_signature": "HtmlStream.close(HtmlTag tag)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(HtmlTag tag)", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream write(HtmlTag tag)", "full_signature": "public HtmlStream write(HtmlTag tag)", "class_method_signature": "HtmlStream.write(HtmlTag tag)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(HtmlTag tag, String text)", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream write(HtmlTag tag, String text)", "full_signature": "public HtmlStream write(HtmlTag tag, String text)", "class_method_signature": "HtmlStream.write(HtmlTag tag, String text)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(HtmlTag tag, String text, HtmlClass classNames)", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream write(HtmlTag tag, String text, HtmlClass classNames)", "full_signature": "public HtmlStream write(HtmlTag tag, String text, HtmlClass classNames)", "class_method_signature": "HtmlStream.write(HtmlTag tag, String text, HtmlClass classNames)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String text, HtmlClass classNames)", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream write(String text, HtmlClass classNames)", "full_signature": "public HtmlStream write(String text, HtmlClass classNames)", "class_method_signature": "HtmlStream.write(String text, HtmlClass classNames)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(char c)", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream write(char c)", "full_signature": "public HtmlStream write(char c)", "class_method_signature": "HtmlStream.write(char c)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(double d)", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream write(double d)", "full_signature": "public HtmlStream write(double d)", "class_method_signature": "HtmlStream.write(double d)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(int i)", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream write(int i)", "full_signature": "public HtmlStream write(int i)", "class_method_signature": "HtmlStream.write(int i)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String txt)", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream write(String txt)", "full_signature": "public HtmlStream write(String txt)", "class_method_signature": "HtmlStream.write(String txt)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(HtmlTable table)", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream open(HtmlTable table)", "full_signature": "public HtmlStream open(HtmlTable table)", "class_method_signature": "HtmlStream.open(HtmlTable table)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(HtmlTableCell cell)", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream write(HtmlTableCell cell)", "full_signature": "public HtmlStream write(HtmlTableCell cell)", "class_method_signature": "HtmlStream.write(HtmlTableCell cell)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(HtmlTableHeader header)", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream write(HtmlTableHeader header)", "full_signature": "public HtmlStream write(HtmlTableHeader header)", "class_method_signature": "HtmlStream.write(HtmlTableHeader header)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(IHtmlElement obj)", "modifiers": "public", "return": "HtmlStream", "signature": "HtmlStream write(IHtmlElement obj)", "full_signature": "public HtmlStream write(IHtmlElement obj)", "class_method_signature": "HtmlStream.write(IHtmlElement obj)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String text, HtmlStyle... styles)", "modifiers": "@Deprecated public", "return": "HtmlStream", "signature": "HtmlStream write(String text, HtmlStyle... styles)", "full_signature": "@Deprecated public HtmlStream write(String text, HtmlStyle... styles)", "class_method_signature": "HtmlStream.write(String text, HtmlStyle... styles)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(HtmlTag tag, String attrName, String attrValue)", "modifiers": "@Deprecated public", "return": "HtmlStream", "signature": "HtmlStream open(HtmlTag tag, String attrName, String attrValue)", "full_signature": "@Deprecated public HtmlStream open(HtmlTag tag, String attrName, String attrValue)", "class_method_signature": "HtmlStream.open(HtmlTag tag, String attrName, String attrValue)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(HtmlTag tag, CssStyle style)", "modifiers": "@Deprecated public", "return": "HtmlStream", "signature": "HtmlStream open(HtmlTag tag, CssStyle style)", "full_signature": "@Deprecated public HtmlStream open(HtmlTag tag, CssStyle style)", "class_method_signature": "HtmlStream.open(HtmlTag tag, CssStyle style)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(HtmlTag tag, CssStyle style, String attrName, String attrValue)", "modifiers": "@Deprecated public", "return": "HtmlStream", "signature": "HtmlStream open(HtmlTag tag, CssStyle style, String attrName, String attrValue)", "full_signature": "@Deprecated public HtmlStream open(HtmlTag tag, CssStyle style, String attrName, String attrValue)", "class_method_signature": "HtmlStream.open(HtmlTag tag, CssStyle style, String attrName, String attrValue)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(HtmlTag tag, Map<String, String> attributes)", "modifiers": "@Deprecated public", "return": "HtmlStream", "signature": "HtmlStream open(HtmlTag tag, Map<String, String> attributes)", "full_signature": "@Deprecated public HtmlStream open(HtmlTag tag, Map<String, String> attributes)", "class_method_signature": "HtmlStream.open(HtmlTag tag, Map<String, String> attributes)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(HtmlTag tag, CssStyle style, String text)", "modifiers": "@Deprecated public", "return": "HtmlStream", "signature": "HtmlStream write(HtmlTag tag, CssStyle style, String text)", "full_signature": "@Deprecated public HtmlStream write(HtmlTag tag, CssStyle style, String text)", "class_method_signature": "HtmlStream.write(HtmlTag tag, CssStyle style, String text)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(HtmlTableCell cell, String cellBg)", "modifiers": "@Deprecated public", "return": "HtmlStream", "signature": "HtmlStream write(HtmlTableCell cell, String cellBg)", "full_signature": "@Deprecated public HtmlStream write(HtmlTableCell cell, String cellBg)", "class_method_signature": "HtmlStream.write(HtmlTableCell cell, String cellBg)", "testcase": false, "constructor": false}, {"identifier": "writeBeg", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeBeg()", "full_signature": "private void writeBeg()", "class_method_signature": "HtmlStream.writeBeg()", "testcase": false, "constructor": false}, {"identifier": "writeEnd", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeEnd()", "full_signature": "private void writeEnd()", "class_method_signature": "HtmlStream.writeEnd()", "testcase": false, "constructor": false}, {"identifier": "writeSlash", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeSlash()", "full_signature": "private void writeSlash()", "class_method_signature": "HtmlStream.writeSlash()", "testcase": false, "constructor": false}, {"identifier": "writeTag", "parameters": "(HtmlTag tag)", "modifiers": "private", "return": "void", "signature": "void writeTag(HtmlTag tag)", "full_signature": "private void writeTag(HtmlTag tag)", "class_method_signature": "HtmlStream.writeTag(HtmlTag tag)", "testcase": false, "constructor": false}, {"identifier": "writeText", "parameters": "(String text)", "modifiers": "private", "return": "void", "signature": "void writeText(String text)", "full_signature": "private void writeText(String text)", "class_method_signature": "HtmlStream.writeText(String text)", "testcase": false, "constructor": false}, {"identifier": "writeStyle", "parameters": "(CssStyle style)", "modifiers": "private", "return": "void", "signature": "void writeStyle(CssStyle style)", "full_signature": "private void writeStyle(CssStyle style)", "class_method_signature": "HtmlStream.writeStyle(CssStyle style)", "testcase": false, "constructor": false}, {"identifier": "writeStyleAttribute", "parameters": "(@Nullable HtmlStyle[] styles)", "modifiers": "private", "return": "void", "signature": "void writeStyleAttribute(@Nullable HtmlStyle[] styles)", "full_signature": "private void writeStyleAttribute(@Nullable HtmlStyle[] styles)", "class_method_signature": "HtmlStream.writeStyleAttribute(@Nullable HtmlStyle[] styles)", "testcase": false, "constructor": false}, {"identifier": "writeAttr", "parameters": "(String name, T value, Predicate<? super T> isDefaultValue)", "modifiers": "private", "return": "void", "signature": "void writeAttr(String name, T value, Predicate<? super T> isDefaultValue)", "full_signature": "private void writeAttr(String name, T value, Predicate<? super T> isDefaultValue)", "class_method_signature": "HtmlStream.writeAttr(String name, T value, Predicate<? super T> isDefaultValue)", "testcase": false, "constructor": false}, {"identifier": "isDefaultSpan", "parameters": "(int span)", "modifiers": "private static", "return": "boolean", "signature": "boolean isDefaultSpan(int span)", "full_signature": "private static boolean isDefaultSpan(int span)", "class_method_signature": "HtmlStream.isDefaultSpan(int span)", "testcase": false, "constructor": false}], "file": "jtss/src/main/java/ec/tss/html/HtmlStream.java"}, "focal_method": {"identifier": "open", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void open() throws IOException {\n        this.writer.append(\"<html><body>\");\n    }", "signature": "void open()", "full_signature": "public void open()", "class_method_signature": "HtmlStream.open()", "testcase": false, "constructor": false, "invocations": ["append"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}