{"test_class": {"identifier": "HomeListPresenterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    HomeListContract.View view;", "modifier": "@Mock", "type": "HomeListContract.View", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock\n    TodoRepository repository;", "modifier": "@Mock", "type": "TodoRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "private HomeListPresenter presenter;", "modifier": "private", "type": "HomeListPresenter", "declarator": "presenter", "var_name": "presenter"}], "file": "app/src/test/java/com/ddmeng/todorealm/home/HomeListPresenterTest.java"}, "test_case": {"identifier": "shouldLoadDataFromRepoWhenLoadAllLists", "parameters": "()", "modifiers": "@Ignore @Test public", "return": "void", "body": "@Ignore\n    @Test\n    public void shouldLoadDataFromRepoWhenLoadAllLists() throws Exception {\n//        RealmResults mockResults = mock(RealmResults.class);\n//        RealmResults<TodoList> todoLists = new RealmResults<TodoList>();\n//        when(repository.getAllLists()).thenReturn(mockResults);\n        // because the RealmResults can not be mocked or new, this test can't be run\n\n        presenter.loadAllLists();\n\n        verify(repository).getAllLists();\n    }", "signature": "void shouldLoadDataFromRepoWhenLoadAllLists()", "full_signature": "@Ignore @Test public void shouldLoadDataFromRepoWhenLoadAllLists()", "class_method_signature": "HomeListPresenterTest.shouldLoadDataFromRepoWhenLoadAllLists()", "testcase": true, "constructor": false, "invocations": ["loadAllLists", "getAllLists", "verify"]}, "focal_class": {"identifier": "HomeListPresenter", "superclass": "", "interfaces": "implements HomeListContract.Presenter", "fields": [{"original_string": "private HomeListContract.View view;", "modifier": "private", "type": "HomeListContract.View", "declarator": "view", "var_name": "view"}, {"original_string": "private TodoRepository todoRepository;", "modifier": "private", "type": "TodoRepository", "declarator": "todoRepository", "var_name": "todoRepository"}, {"original_string": "private RealmResults<TodoList> allLists;", "modifier": "private", "type": "RealmResults<TodoList>", "declarator": "allLists", "var_name": "allLists"}, {"original_string": "private boolean isInActionMode;", "modifier": "private", "type": "boolean", "declarator": "isInActionMode", "var_name": "isInActionMode"}], "methods": [{"identifier": "HomeListPresenter", "parameters": "(TodoRepository todoRepository)", "modifiers": "", "return": "", "signature": " HomeListPresenter(TodoRepository todoRepository)", "full_signature": "  HomeListPresenter(TodoRepository todoRepository)", "class_method_signature": "HomeListPresenter.HomeListPresenter(TodoRepository todoRepository)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void init()", "full_signature": "@Override public void init()", "class_method_signature": "HomeListPresenter.init()", "testcase": false, "constructor": false}, {"identifier": "loadAllLists", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void loadAllLists()", "full_signature": "@Override public void loadAllLists()", "class_method_signature": "HomeListPresenter.loadAllLists()", "testcase": false, "constructor": false}, {"identifier": "attachView", "parameters": "(HomeListContract.View view)", "modifiers": "@Override public", "return": "void", "signature": "void attachView(HomeListContract.View view)", "full_signature": "@Override public void attachView(HomeListContract.View view)", "class_method_signature": "HomeListPresenter.attachView(HomeListContract.View view)", "testcase": false, "constructor": false}, {"identifier": "detachView", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void detachView()", "full_signature": "@Override public void detachView()", "class_method_signature": "HomeListPresenter.detachView()", "testcase": false, "constructor": false}, {"identifier": "onDestroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onDestroy()", "full_signature": "@Override public void onDestroy()", "class_method_signature": "HomeListPresenter.onDestroy()", "testcase": false, "constructor": false}, {"identifier": "onCreateListItemClicked", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onCreateListItemClicked()", "full_signature": "@Override public void onCreateListItemClicked()", "class_method_signature": "HomeListPresenter.onCreateListItemClicked()", "testcase": false, "constructor": false}, {"identifier": "onFloatingActionButtonClicked", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onFloatingActionButtonClicked()", "full_signature": "@Override public void onFloatingActionButtonClicked()", "class_method_signature": "HomeListPresenter.onFloatingActionButtonClicked()", "testcase": false, "constructor": false}, {"identifier": "onListItemClicked", "parameters": "(TodoList list)", "modifiers": "@Override public", "return": "void", "signature": "void onListItemClicked(TodoList list)", "full_signature": "@Override public void onListItemClicked(TodoList list)", "class_method_signature": "HomeListPresenter.onListItemClicked(TodoList list)", "testcase": false, "constructor": false}, {"identifier": "onListItemLongClicked", "parameters": "(TodoList list)", "modifiers": "@Override public", "return": "void", "signature": "void onListItemLongClicked(TodoList list)", "full_signature": "@Override public void onListItemLongClicked(TodoList list)", "class_method_signature": "HomeListPresenter.onListItemLongClicked(TodoList list)", "testcase": false, "constructor": false}, {"identifier": "onDestroyActionMode", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onDestroyActionMode()", "full_signature": "@Override public void onDestroyActionMode()", "class_method_signature": "HomeListPresenter.onDestroyActionMode()", "testcase": false, "constructor": false}, {"identifier": "deleteSelectedItems", "parameters": "(List<Long> itemIds)", "modifiers": "@Override public", "return": "void", "signature": "void deleteSelectedItems(List<Long> itemIds)", "full_signature": "@Override public void deleteSelectedItems(List<Long> itemIds)", "class_method_signature": "HomeListPresenter.deleteSelectedItems(List<Long> itemIds)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/ddmeng/todorealm/home/HomeListPresenter.java"}, "focal_method": {"identifier": "loadAllLists", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void loadAllLists() {\n        allLists = todoRepository.getAllLists();\n        allLists.addChangeListener(new RealmChangeListener<RealmResults<TodoList>>() {\n            @Override\n            public void onChange(RealmResults<TodoList> element) {\n                LogUtils.d(\"onChange: \" + element.size());\n                if (view != null) {\n                    view.notifyDataChanged();\n                }\n            }\n        });\n\n        view.bindListData(allLists);\n    }", "signature": "void loadAllLists()", "full_signature": "@Override public void loadAllLists()", "class_method_signature": "HomeListPresenter.loadAllLists()", "testcase": false, "constructor": false, "invocations": ["getAllLists", "addChangeListener", "d", "size", "notifyDataChanged", "bindListData"]}, "repository": {"repo_id": 81173322, "url": "https://github.com/mengdd/TodoRealm", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 10, "size": 771, "license": "licensed"}}