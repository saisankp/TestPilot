{"test_class": {"identifier": "ReadDataTest", "superclass": "", "interfaces": "", "fields": [], "file": "opendaylight/md-sal/sal-distributed-datastore/src/test/java/org/opendaylight/controller/cluster/datastore/messages/ReadDataTest.java"}, "test_case": {"identifier": "testSerialization", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSerialization() {\n        ReadData expected = new ReadData(TestModel.TEST_PATH, DataStoreVersions.CURRENT_VERSION);\n\n        Object serialized = expected.toSerializable();\n        assertEquals(\"Serialized type\", ReadData.class, serialized.getClass());\n\n        ReadData actual = ReadData.fromSerializable(SerializationUtils.clone((Serializable) serialized));\n        assertEquals(\"getPath\", expected.getPath(), actual.getPath());\n        assertEquals(\"getVersion\", DataStoreVersions.CURRENT_VERSION, actual.getVersion());\n    }", "signature": "void testSerialization()", "full_signature": "@Test public void testSerialization()", "class_method_signature": "ReadDataTest.testSerialization()", "testcase": true, "constructor": false, "invocations": ["toSerializable", "assertEquals", "getClass", "fromSerializable", "clone", "assertEquals", "getPath", "getPath", "assertEquals", "getVersion"]}, "focal_class": {"identifier": "ReadData", "superclass": "extends AbstractRead<Optional<NormalizedNode<?, ?>>>", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "ReadData", "parameters": "()", "modifiers": "public", "return": "", "signature": " ReadData()", "full_signature": "public  ReadData()", "class_method_signature": "ReadData.ReadData()", "testcase": false, "constructor": true}, {"identifier": "ReadData", "parameters": "(final YangInstanceIdentifier path, short version)", "modifiers": "public", "return": "", "signature": " ReadData(final YangInstanceIdentifier path, short version)", "full_signature": "public  ReadData(final YangInstanceIdentifier path, short version)", "class_method_signature": "ReadData.ReadData(final YangInstanceIdentifier path, short version)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(DOMStoreReadTransaction readDelegate)", "modifiers": "@Override public", "return": "FluentFuture<Optional<NormalizedNode<?, ?>>>", "signature": "FluentFuture<Optional<NormalizedNode<?, ?>>> apply(DOMStoreReadTransaction readDelegate)", "full_signature": "@Override public FluentFuture<Optional<NormalizedNode<?, ?>>> apply(DOMStoreReadTransaction readDelegate)", "class_method_signature": "ReadData.apply(DOMStoreReadTransaction readDelegate)", "testcase": false, "constructor": false}, {"identifier": "processResponse", "parameters": "(Object readResponse, SettableFuture<Optional<NormalizedNode<?, ?>>> returnFuture)", "modifiers": "@Override public", "return": "void", "signature": "void processResponse(Object readResponse, SettableFuture<Optional<NormalizedNode<?, ?>>> returnFuture)", "full_signature": "@Override public void processResponse(Object readResponse, SettableFuture<Optional<NormalizedNode<?, ?>>> returnFuture)", "class_method_signature": "ReadData.processResponse(Object readResponse, SettableFuture<Optional<NormalizedNode<?, ?>>> returnFuture)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(short withVersion)", "modifiers": "@Override protected", "return": "AbstractRead<Optional<NormalizedNode<?, ?>>>", "signature": "AbstractRead<Optional<NormalizedNode<?, ?>>> newInstance(short withVersion)", "full_signature": "@Override protected AbstractRead<Optional<NormalizedNode<?, ?>>> newInstance(short withVersion)", "class_method_signature": "ReadData.newInstance(short withVersion)", "testcase": false, "constructor": false}, {"identifier": "fromSerializable", "parameters": "(final Object serializable)", "modifiers": "public static", "return": "ReadData", "signature": "ReadData fromSerializable(final Object serializable)", "full_signature": "public static ReadData fromSerializable(final Object serializable)", "class_method_signature": "ReadData.fromSerializable(final Object serializable)", "testcase": false, "constructor": false}, {"identifier": "isSerializedType", "parameters": "(Object message)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSerializedType(Object message)", "full_signature": "public static boolean isSerializedType(Object message)", "class_method_signature": "ReadData.isSerializedType(Object message)", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/messages/ReadData.java"}, "focal_method": {"identifier": "fromSerializable", "parameters": "(final Object serializable)", "modifiers": "public static", "return": "ReadData", "body": "public static ReadData fromSerializable(final Object serializable) {\n        Preconditions.checkArgument(serializable instanceof ReadData);\n        return (ReadData)serializable;\n    }", "signature": "ReadData fromSerializable(final Object serializable)", "full_signature": "public static ReadData fromSerializable(final Object serializable)", "class_method_signature": "ReadData.fromSerializable(final Object serializable)", "testcase": false, "constructor": false, "invocations": ["checkArgument"]}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}