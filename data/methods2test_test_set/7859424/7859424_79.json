{"test_class": {"identifier": "NearAnotherStoneTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Board board;", "modifier": "private", "type": "Board", "declarator": "board", "var_name": "board"}, {"original_string": "private NearAnotherStone nearAnotherStone;", "modifier": "private", "type": "NearAnotherStone", "declarator": "nearAnotherStone", "var_name": "nearAnotherStone"}], "file": "src/edu/lclark/orego/feature/NearAnotherStoneTest.java"}, "test_case": {"identifier": "testClear", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testClear() {\n\t\tString[] before = {\n\t\t\t\t\"#....\",\n\t\t\t\t\".....\",\n\t\t\t\t\".....\",\n\t\t\t\t\".....\",\n\t\t\t\t\".....\",\n\t\t};\n\t\tboard.setUpProblem(before, BLACK);\n\t\tboard.play(\"a2\");\n\t\tassertFalse(nearAnotherStone.at(at(\"e5\")));\n\t\tassertTrue(nearAnotherStone.at(at(\"b5\")));\n\t\tassertTrue(nearAnotherStone.at(at(\"c3\")));\n\t\tboard.clear();\n\t\tassertFalse(nearAnotherStone.at(at(\"a4\")));\n\t}", "signature": "void testClear()", "full_signature": "@Test public void testClear()", "class_method_signature": "NearAnotherStoneTest.testClear()", "testcase": true, "constructor": false, "invocations": ["setUpProblem", "play", "assertFalse", "at", "at", "assertTrue", "at", "at", "assertTrue", "at", "at", "clear", "assertFalse", "at", "at"]}, "focal_class": {"identifier": "NearAnotherStone", "superclass": "", "interfaces": "implements Predicate", "fields": [{"original_string": "private static final short[][][] NEIGHBORHOODS = new short[MAX_POSSIBLE_BOARD_WIDTH + 1][][];", "modifier": "private static final", "type": "short[][][]", "declarator": "NEIGHBORHOODS = new short[MAX_POSSIBLE_BOARD_WIDTH + 1][][]", "var_name": "NEIGHBORHOODS"}, {"original_string": "public static final short[][] OFFSETS = { { 0, -1 }, { 0, 1 }, { -1, 0 },\n\t\t\t{ 1, 0 }, { -1, -1 }, { -1, 1 }, { 1, -1 }, { 1, 1 }, { -2, 0 },\n\t\t\t{ 2, 0 }, { 0, -2 }, { 0, 2 }, { -2, -1 }, { -2, 1 }, { -1, -2 },\n\t\t\t{ -1, 2 }, { 2, 1 }, { 2, -1 }, { 1, -2 }, { 1, 2 }, { 2, 2 },\n\t\t\t{ 2, -2 }, { -2, 2 }, { -2, -2 }, { 3, 0 }, { -3, 0 }, { 0, -3 },\n\t\t\t{ 0, 3 }, { 3, 1 }, { 3, -1 }, { -1, -3 }, { 1, -3 }, { -3, -1 },\n\t\t\t{ -3, 1 }, { -1, 3 }, { 1, 3 } };", "modifier": "public static final", "type": "short[][]", "declarator": "OFFSETS = { { 0, -1 }, { 0, 1 }, { -1, 0 },\n\t\t\t{ 1, 0 }, { -1, -1 }, { -1, 1 }, { 1, -1 }, { 1, 1 }, { -2, 0 },\n\t\t\t{ 2, 0 }, { 0, -2 }, { 0, 2 }, { -2, -1 }, { -2, 1 }, { -1, -2 },\n\t\t\t{ -1, 2 }, { 2, 1 }, { 2, -1 }, { 1, -2 }, { 1, 2 }, { 2, 2 },\n\t\t\t{ 2, -2 }, { -2, 2 }, { -2, -2 }, { 3, 0 }, { -3, 0 }, { 0, -3 },\n\t\t\t{ 0, 3 }, { 3, 1 }, { 3, -1 }, { -1, -3 }, { 1, -3 }, { -3, -1 },\n\t\t\t{ -3, 1 }, { -1, 3 }, { 1, 3 } }", "var_name": "OFFSETS"}, {"original_string": "private final Board board;", "modifier": "private final", "type": "Board", "declarator": "board", "var_name": "board"}, {"original_string": "private final short[][] neighborhoods;", "modifier": "private final", "type": "short[][]", "declarator": "neighborhoods", "var_name": "neighborhoods"}], "methods": [{"identifier": "findNeighborhood", "parameters": "(short p, CoordinateSystem coords)", "modifiers": "private static", "return": "short[]", "signature": "short[] findNeighborhood(short p, CoordinateSystem coords)", "full_signature": "private static short[] findNeighborhood(short p, CoordinateSystem coords)", "class_method_signature": "NearAnotherStone.findNeighborhood(short p, CoordinateSystem coords)", "testcase": false, "constructor": false}, {"identifier": "NearAnotherStone", "parameters": "(Board board)", "modifiers": "public", "return": "", "signature": " NearAnotherStone(Board board)", "full_signature": "public  NearAnotherStone(Board board)", "class_method_signature": "NearAnotherStone.NearAnotherStone(Board board)", "testcase": false, "constructor": true}, {"identifier": "at", "parameters": "(short p)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean at(short p)", "full_signature": "@Override public boolean at(short p)", "class_method_signature": "NearAnotherStone.at(short p)", "testcase": false, "constructor": false}], "file": "src/edu/lclark/orego/feature/NearAnotherStone.java"}, "focal_method": {"identifier": "at", "parameters": "(short p)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean at(short p) {\n\t\tfor (final short q : neighborhoods[p]) {\n\t\t\tif (board.getColorAt(q) != VACANT) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}", "signature": "boolean at(short p)", "full_signature": "@Override public boolean at(short p)", "class_method_signature": "NearAnotherStone.at(short p)", "testcase": false, "constructor": false, "invocations": ["getColorAt"]}, "repository": {"repo_id": 7859424, "url": "https://github.com/Orego/Orego", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 1341444, "license": "licensed"}}