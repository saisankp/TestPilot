{"test_class": {"identifier": "DistanceDatabaseAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int ID = 5;", "modifier": "private static final", "type": "int", "declarator": "ID = 5", "var_name": "ID"}, {"original_string": "private static final int PRIMARY_KEY_ID = 11;", "modifier": "private static final", "type": "int", "declarator": "PRIMARY_KEY_ID = 11", "var_name": "PRIMARY_KEY_ID"}, {"original_string": "private static final int PARENT_ID = 15;", "modifier": "private static final", "type": "int", "declarator": "PARENT_ID = 15", "var_name": "PARENT_ID"}, {"original_string": "private static final double DISTANCE = 12.55d;", "modifier": "private static final", "type": "double", "declarator": "DISTANCE = 12.55d", "var_name": "DISTANCE"}, {"original_string": "private static final String LOCATION = \"Location\";", "modifier": "private static final", "type": "String", "declarator": "LOCATION = \"Location\"", "var_name": "LOCATION"}, {"original_string": "private static final long DATE = 1409703721000L;", "modifier": "private static final", "type": "long", "declarator": "DATE = 1409703721000L", "var_name": "DATE"}, {"original_string": "private static final String TIMEZONE = TimeZone.getDefault().getID();", "modifier": "private static final", "type": "String", "declarator": "TIMEZONE = TimeZone.getDefault().getID()", "var_name": "TIMEZONE"}, {"original_string": "private static final String COMMENT = \"Comment\";", "modifier": "private static final", "type": "String", "declarator": "COMMENT = \"Comment\"", "var_name": "COMMENT"}, {"original_string": "private static final double RATE = 0.33d;", "modifier": "private static final", "type": "double", "declarator": "RATE = 0.33d", "var_name": "RATE"}, {"original_string": "private static final String CURRENCY_CODE = \"USD\";", "modifier": "private static final", "type": "String", "declarator": "CURRENCY_CODE = \"USD\"", "var_name": "CURRENCY_CODE"}, {"original_string": "private static final UUID DIST_UUID = UUID.randomUUID();", "modifier": "private static final", "type": "UUID", "declarator": "DIST_UUID = UUID.randomUUID()", "var_name": "DIST_UUID"}, {"original_string": "private static final int PAYMENT_METHOD_ID = 2;", "modifier": "private static final", "type": "int", "declarator": "PAYMENT_METHOD_ID = 2", "var_name": "PAYMENT_METHOD_ID"}, {"original_string": "private static final UUID PAYMENT_METHOD_UUID = UUID.randomUUID();", "modifier": "private static final", "type": "UUID", "declarator": "PAYMENT_METHOD_UUID = UUID.randomUUID()", "var_name": "PAYMENT_METHOD_UUID"}, {"original_string": "private static final PaymentMethod PAYMENT_METHOD = new PaymentMethod(PAYMENT_METHOD_ID, PAYMENT_METHOD_UUID, \"method\", false);", "modifier": "private static final", "type": "PaymentMethod", "declarator": "PAYMENT_METHOD = new PaymentMethod(PAYMENT_METHOD_ID, PAYMENT_METHOD_UUID, \"method\", false)", "var_name": "PAYMENT_METHOD"}, {"original_string": "private static final boolean LOCATION_HIDDEN_FROM_AUTO_COMPLETE = false;", "modifier": "private static final", "type": "boolean", "declarator": "LOCATION_HIDDEN_FROM_AUTO_COMPLETE = false", "var_name": "LOCATION_HIDDEN_FROM_AUTO_COMPLETE"}, {"original_string": "private static final boolean COMMENT_HIDDEN_FROM_AUTO_COMPLETE = false;", "modifier": "private static final", "type": "boolean", "declarator": "COMMENT_HIDDEN_FROM_AUTO_COMPLETE = false", "var_name": "COMMENT_HIDDEN_FROM_AUTO_COMPLETE"}, {"original_string": "DistanceDatabaseAdapter mDistanceDatabaseAdapter;", "modifier": "", "type": "DistanceDatabaseAdapter", "declarator": "mDistanceDatabaseAdapter", "var_name": "mDistanceDatabaseAdapter"}, {"original_string": "@Mock\n    Table<Trip> mTripsTable;", "modifier": "@Mock", "type": "Table<Trip>", "declarator": "mTripsTable", "var_name": "mTripsTable"}, {"original_string": "@Mock\n    Table<PaymentMethod> mPaymentMethodsTable;", "modifier": "@Mock", "type": "Table<PaymentMethod>", "declarator": "mPaymentMethodsTable", "var_name": "mPaymentMethodsTable"}, {"original_string": "@Mock\n    Trip mTrip;", "modifier": "@Mock", "type": "Trip", "declarator": "mTrip", "var_name": "mTrip"}, {"original_string": "@Mock\n    Cursor mCursor;", "modifier": "@Mock", "type": "Cursor", "declarator": "mCursor", "var_name": "mCursor"}, {"original_string": "@Mock\n    Distance mDistance;", "modifier": "@Mock", "type": "Distance", "declarator": "mDistance", "var_name": "mDistance"}, {"original_string": "@Mock\n    Price mPrice;", "modifier": "@Mock", "type": "Price", "declarator": "mPrice", "var_name": "mPrice"}, {"original_string": "@Mock\n    SyncStateAdapter mSyncStateAdapter;", "modifier": "@Mock", "type": "SyncStateAdapter", "declarator": "mSyncStateAdapter", "var_name": "mSyncStateAdapter"}, {"original_string": "@Mock\n    SyncState mSyncState, mGetSyncState;", "modifier": "@Mock", "type": "SyncState", "declarator": "mSyncState", "var_name": "mSyncState"}, {"original_string": "@Mock\n    AutoCompleteMetadata mAutoCompleteMetadata;", "modifier": "@Mock", "type": "AutoCompleteMetadata", "declarator": "mAutoCompleteMetadata", "var_name": "mAutoCompleteMetadata"}], "file": "app/src/test/java/co/smartreceipts/android/persistence/database/tables/adapters/DistanceDatabaseAdapterTest.java"}, "test_case": {"identifier": "read", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void read() throws Exception {\n        final Distance distance = new DistanceBuilderFactory(ID)\n                .setUuid(DIST_UUID)\n                .setTrip(mTrip)\n                .setLocation(LOCATION)\n                .setDistance(DISTANCE)\n                .setDate(DATE)\n                .setTimezone(TIMEZONE)\n                .setRate(RATE)\n                .setCurrency(CURRENCY_CODE)\n                .setComment(COMMENT)\n                .setSyncState(mSyncState)\n                .setPaymentMethod(PAYMENT_METHOD)\n                .setLocationHiddenFromAutoComplete(LOCATION_HIDDEN_FROM_AUTO_COMPLETE)\n                .setCommentHiddenFromAutoComplete(COMMENT_HIDDEN_FROM_AUTO_COMPLETE)\n                .build();\n        assertEquals(distance, mDistanceDatabaseAdapter.read(mCursor));\n    }", "signature": "void read()", "full_signature": "@Test public void read()", "class_method_signature": "DistanceDatabaseAdapterTest.read()", "testcase": true, "constructor": false, "invocations": ["build", "setCommentHiddenFromAutoComplete", "setLocationHiddenFromAutoComplete", "setPaymentMethod", "setSyncState", "setComment", "setCurrency", "setRate", "setTimezone", "setDate", "setDistance", "setLocation", "setTrip", "setUuid", "assertEquals", "read"]}, "focal_class": {"identifier": "DistanceDatabaseAdapter", "superclass": "", "interfaces": "implements SelectionBackedDatabaseAdapter<Distance, Trip>", "fields": [{"original_string": "private final Table<Trip> mTripsTable;", "modifier": "private final", "type": "Table<Trip>", "declarator": "mTripsTable", "var_name": "mTripsTable"}, {"original_string": "private final Table<PaymentMethod> mPaymentMethodTable;", "modifier": "private final", "type": "Table<PaymentMethod>", "declarator": "mPaymentMethodTable", "var_name": "mPaymentMethodTable"}, {"original_string": "private final SyncStateAdapter mSyncStateAdapter;", "modifier": "private final", "type": "SyncStateAdapter", "declarator": "mSyncStateAdapter", "var_name": "mSyncStateAdapter"}], "methods": [{"identifier": "DistanceDatabaseAdapter", "parameters": "(@NonNull Table<Trip> tripsTable, @NonNull Table<PaymentMethod> paymentMethodTable)", "modifiers": "public", "return": "", "signature": " DistanceDatabaseAdapter(@NonNull Table<Trip> tripsTable, @NonNull Table<PaymentMethod> paymentMethodTable)", "full_signature": "public  DistanceDatabaseAdapter(@NonNull Table<Trip> tripsTable, @NonNull Table<PaymentMethod> paymentMethodTable)", "class_method_signature": "DistanceDatabaseAdapter.DistanceDatabaseAdapter(@NonNull Table<Trip> tripsTable, @NonNull Table<PaymentMethod> paymentMethodTable)", "testcase": false, "constructor": true}, {"identifier": "DistanceDatabaseAdapter", "parameters": "(@NonNull Table<Trip> tripsTable, @NonNull Table<PaymentMethod> paymentMethodTable,\n                                   @NonNull SyncStateAdapter syncStateAdapter)", "modifiers": "public", "return": "", "signature": " DistanceDatabaseAdapter(@NonNull Table<Trip> tripsTable, @NonNull Table<PaymentMethod> paymentMethodTable,\n                                   @NonNull SyncStateAdapter syncStateAdapter)", "full_signature": "public  DistanceDatabaseAdapter(@NonNull Table<Trip> tripsTable, @NonNull Table<PaymentMethod> paymentMethodTable,\n                                   @NonNull SyncStateAdapter syncStateAdapter)", "class_method_signature": "DistanceDatabaseAdapter.DistanceDatabaseAdapter(@NonNull Table<Trip> tripsTable, @NonNull Table<PaymentMethod> paymentMethodTable,\n                                   @NonNull SyncStateAdapter syncStateAdapter)", "testcase": false, "constructor": true}, {"identifier": "read", "parameters": "(@NonNull Cursor cursor)", "modifiers": "@NonNull @Override public", "return": "Distance", "signature": "Distance read(@NonNull Cursor cursor)", "full_signature": "@NonNull @Override public Distance read(@NonNull Cursor cursor)", "class_method_signature": "DistanceDatabaseAdapter.read(@NonNull Cursor cursor)", "testcase": false, "constructor": false}, {"identifier": "readForSelection", "parameters": "(@NonNull Cursor cursor, @NonNull Trip trip, boolean isDescending)", "modifiers": "@NonNull @Override public", "return": "Distance", "signature": "Distance readForSelection(@NonNull Cursor cursor, @NonNull Trip trip, boolean isDescending)", "full_signature": "@NonNull @Override public Distance readForSelection(@NonNull Cursor cursor, @NonNull Trip trip, boolean isDescending)", "class_method_signature": "DistanceDatabaseAdapter.readForSelection(@NonNull Cursor cursor, @NonNull Trip trip, boolean isDescending)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(@NonNull Distance distance, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "modifiers": "@NonNull @Override public", "return": "ContentValues", "signature": "ContentValues write(@NonNull Distance distance, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "full_signature": "@NonNull @Override public ContentValues write(@NonNull Distance distance, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "class_method_signature": "DistanceDatabaseAdapter.write(@NonNull Distance distance, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(@NonNull Distance distance, int primaryKey, @NonNull UUID uuid,\n                          @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "modifiers": "@NonNull @Override public", "return": "Distance", "signature": "Distance build(@NonNull Distance distance, int primaryKey, @NonNull UUID uuid,\n                          @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "full_signature": "@NonNull @Override public Distance build(@NonNull Distance distance, int primaryKey, @NonNull UUID uuid,\n                          @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "class_method_signature": "DistanceDatabaseAdapter.build(@NonNull Distance distance, int primaryKey, @NonNull UUID uuid,\n                          @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/persistence/database/tables/adapters/DistanceDatabaseAdapter.java"}, "focal_method": {"identifier": "read", "parameters": "(@NonNull Cursor cursor)", "modifiers": "@NonNull @Override public", "return": "Distance", "body": "@NonNull\n    @Override\n    public Distance read(@NonNull Cursor cursor) {\n        final int parentIndex = cursor.getColumnIndex(ReceiptsTable.COLUMN_PARENT_TRIP_ID);\n        final Trip trip = mTripsTable.findByPrimaryKey(cursor.getInt(parentIndex)).blockingGet();\n        return readForSelection(cursor, trip, true);\n    }", "signature": "Distance read(@NonNull Cursor cursor)", "full_signature": "@NonNull @Override public Distance read(@NonNull Cursor cursor)", "class_method_signature": "DistanceDatabaseAdapter.read(@NonNull Cursor cursor)", "testcase": false, "constructor": false, "invocations": ["getColumnIndex", "blockingGet", "findByPrimaryKey", "getInt", "readForSelection"]}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}