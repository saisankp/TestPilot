{"test_class": {"identifier": "StringUtilsTest", "superclass": "extends TestLogger", "interfaces": "", "fields": [], "file": "flink-core/src/test/java/org/apache/flink/util/StringUtilsTest.java"}, "test_case": {"identifier": "testStringToHexArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testStringToHexArray() {\n\t\tString hex = \"019f314a\";\n\t\tbyte[] hexArray = StringUtils.hexStringToByte(hex);\n\t\tbyte[] expectedArray = new byte[]{1, -97, 49, 74 };\n\t\tassertArrayEquals(expectedArray, hexArray);\n\t}", "signature": "void testStringToHexArray()", "full_signature": "@Test public void testStringToHexArray()", "class_method_signature": "StringUtilsTest.testStringToHexArray()", "testcase": true, "constructor": false, "invocations": ["hexStringToByte", "assertArrayEquals"]}, "focal_class": {"identifier": "StringUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "StringUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " StringUtils()", "full_signature": "private  StringUtils()", "class_method_signature": "StringUtils.StringUtils()", "testcase": false, "constructor": true}, {"identifier": "stringifyException", "parameters": "(final Throwable e)", "modifiers": "public static", "return": "String", "signature": "String stringifyException(final Throwable e)", "full_signature": "public static String stringifyException(final Throwable e)", "class_method_signature": "StringUtils.stringifyException(final Throwable e)", "testcase": false, "constructor": false}, {"identifier": "byteToHexString", "parameters": "(final byte[] bytes, final int start, final int end)", "modifiers": "public static", "return": "String", "signature": "String byteToHexString(final byte[] bytes, final int start, final int end)", "full_signature": "public static String byteToHexString(final byte[] bytes, final int start, final int end)", "class_method_signature": "StringUtils.byteToHexString(final byte[] bytes, final int start, final int end)", "testcase": false, "constructor": false}, {"identifier": "byteToHexString", "parameters": "(final byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String byteToHexString(final byte[] bytes)", "full_signature": "public static String byteToHexString(final byte[] bytes)", "class_method_signature": "StringUtils.byteToHexString(final byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "hexStringToByte", "parameters": "(final String hex)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hexStringToByte(final String hex)", "full_signature": "public static byte[] hexStringToByte(final String hex)", "class_method_signature": "StringUtils.hexStringToByte(final String hex)", "testcase": false, "constructor": false}, {"identifier": "escapeHtml", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String escapeHtml(String str)", "full_signature": "public static String escapeHtml(String str)", "class_method_signature": "StringUtils.escapeHtml(String str)", "testcase": false, "constructor": false}, {"identifier": "arrayAwareToString", "parameters": "(Object o)", "modifiers": "public static", "return": "String", "signature": "String arrayAwareToString(Object o)", "full_signature": "public static String arrayAwareToString(Object o)", "class_method_signature": "StringUtils.arrayAwareToString(Object o)", "testcase": false, "constructor": false}, {"identifier": "arrayToString", "parameters": "(Object array)", "modifiers": "public static", "return": "String", "signature": "String arrayToString(Object array)", "full_signature": "public static String arrayToString(Object array)", "class_method_signature": "StringUtils.arrayToString(Object array)", "testcase": false, "constructor": false}, {"identifier": "showControlCharacters", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String showControlCharacters(String str)", "full_signature": "public static String showControlCharacters(String str)", "class_method_signature": "StringUtils.showControlCharacters(String str)", "testcase": false, "constructor": false}, {"identifier": "getRandomString", "parameters": "(Random rnd, int minLength, int maxLength)", "modifiers": "public static", "return": "String", "signature": "String getRandomString(Random rnd, int minLength, int maxLength)", "full_signature": "public static String getRandomString(Random rnd, int minLength, int maxLength)", "class_method_signature": "StringUtils.getRandomString(Random rnd, int minLength, int maxLength)", "testcase": false, "constructor": false}, {"identifier": "getRandomString", "parameters": "(Random rnd, int minLength, int maxLength, char minValue, char maxValue)", "modifiers": "public static", "return": "String", "signature": "String getRandomString(Random rnd, int minLength, int maxLength, char minValue, char maxValue)", "full_signature": "public static String getRandomString(Random rnd, int minLength, int maxLength, char minValue, char maxValue)", "class_method_signature": "StringUtils.getRandomString(Random rnd, int minLength, int maxLength, char minValue, char maxValue)", "testcase": false, "constructor": false}, {"identifier": "writeNullableString", "parameters": "(String str, DataOutputView out)", "modifiers": "public static", "return": "void", "signature": "void writeNullableString(String str, DataOutputView out)", "full_signature": "public static void writeNullableString(String str, DataOutputView out)", "class_method_signature": "StringUtils.writeNullableString(String str, DataOutputView out)", "testcase": false, "constructor": false}, {"identifier": "readNullableString", "parameters": "(DataInputView in)", "modifiers": "public static", "return": "String", "signature": "String readNullableString(DataInputView in)", "full_signature": "public static String readNullableString(DataInputView in)", "class_method_signature": "StringUtils.readNullableString(DataInputView in)", "testcase": false, "constructor": false}], "file": "flink-core/src/main/java/org/apache/flink/util/StringUtils.java"}, "focal_method": {"identifier": "hexStringToByte", "parameters": "(final String hex)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] hexStringToByte(final String hex) {\n\t\tfinal byte[] bts = new byte[hex.length() / 2];\n\t\tfor (int i = 0; i < bts.length; i++) {\n\t\t\tbts[i] = (byte) Integer.parseInt(hex.substring(2 * i, 2 * i + 2), 16);\n\t\t}\n\t\treturn bts;\n\t}", "signature": "byte[] hexStringToByte(final String hex)", "full_signature": "public static byte[] hexStringToByte(final String hex)", "class_method_signature": "StringUtils.hexStringToByte(final String hex)", "testcase": false, "constructor": false, "invocations": ["length", "parseInt", "substring"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}