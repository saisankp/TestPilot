{"test_class": {"identifier": "ServiceUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Proto proto;", "modifier": "private", "type": "Proto", "declarator": "proto", "var_name": "proto"}, {"original_string": "private Service service;", "modifier": "private", "type": "Service", "declarator": "service", "var_name": "service"}, {"original_string": "private ServiceMethod serviceMethod;", "modifier": "private", "type": "ServiceMethod", "declarator": "serviceMethod", "var_name": "serviceMethod"}], "file": "protostuff-generator/src/test/java/io/protostuff/generator/java/ServiceUtilTest.java"}, "test_case": {"identifier": "getClassName", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void getClassName() {\n        String name = ServiceUtil.getClassName(service);\n        assertEquals(\"Service\", name);\n    }", "signature": "void getClassName()", "full_signature": "@Test void getClassName()", "class_method_signature": "ServiceUtilTest.getClassName()", "testcase": true, "constructor": false, "invocations": ["getClassName", "assertEquals"]}, "focal_class": {"identifier": "ServiceUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ServiceUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " ServiceUtil()", "full_signature": "private  ServiceUtil()", "class_method_signature": "ServiceUtil.ServiceUtil()", "testcase": false, "constructor": true}, {"identifier": "getClassName", "parameters": "(Service service)", "modifiers": "public static", "return": "String", "signature": "String getClassName(Service service)", "full_signature": "public static String getClassName(Service service)", "class_method_signature": "ServiceUtil.getClassName(Service service)", "testcase": false, "constructor": false}, {"identifier": "getMethodName", "parameters": "(ServiceMethod serviceMethod)", "modifiers": "public static", "return": "String", "signature": "String getMethodName(ServiceMethod serviceMethod)", "full_signature": "public static String getMethodName(ServiceMethod serviceMethod)", "class_method_signature": "ServiceUtil.getMethodName(ServiceMethod serviceMethod)", "testcase": false, "constructor": false}, {"identifier": "isReservedKeyword", "parameters": "(String formattedName)", "modifiers": "private static", "return": "boolean", "signature": "boolean isReservedKeyword(String formattedName)", "full_signature": "private static boolean isReservedKeyword(String formattedName)", "class_method_signature": "ServiceUtil.isReservedKeyword(String formattedName)", "testcase": false, "constructor": false}], "file": "protostuff-generator/src/main/java/io/protostuff/generator/java/ServiceUtil.java"}, "focal_method": {"identifier": "getClassName", "parameters": "(Service service)", "modifiers": "public static", "return": "String", "body": "public static String getClassName(Service service) {\n        String name = service.getName();\n        return Formatter.toPascalCase(name);\n    }", "signature": "String getClassName(Service service)", "full_signature": "public static String getClassName(Service service)", "class_method_signature": "ServiceUtil.getClassName(Service service)", "testcase": false, "constructor": false, "invocations": ["getName", "toPascalCase"]}, "repository": {"repo_id": 32651977, "url": "https://github.com/protostuff/protostuff-compiler", "language": "Java", "is_fork": false, "fork_count": 20, "stargazer_count": 30, "size": 1539, "license": "licensed"}}