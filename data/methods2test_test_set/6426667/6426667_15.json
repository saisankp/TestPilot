{"test_class": {"identifier": "DynamicEventizerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final DynamicEventizer<DummyListener> eventizer = new DynamicEventizer<>(DummyListener.class);", "modifier": "private final", "type": "DynamicEventizer<DummyListener>", "declarator": "eventizer = new DynamicEventizer<>(DummyListener.class)", "var_name": "eventizer"}, {"original_string": "private final MessageQueue<Event<DummyListener>> queue = new MessageQueue<>();", "modifier": "private final", "type": "MessageQueue<Event<DummyListener>>", "declarator": "queue = new MessageQueue<>()", "var_name": "queue"}, {"original_string": "private final DummyListener frontend = eventizer.newFrontend(queue);", "modifier": "private final", "type": "DummyListener", "declarator": "frontend = eventizer.newFrontend(queue)", "var_name": "frontend"}, {"original_string": "@Rule\n    public final ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public final", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "jumi-actors/src/test/java/fi/jumi/actors/eventizers/dynamic/DynamicEventizerTest.java"}, "test_case": {"identifier": "event_objects_are_converted_back_into_method_calls", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void event_objects_are_converted_back_into_method_calls() {\n        DummyListener target = mock(DummyListener.class);\n        MessageSender<Event<DummyListener>> backend = eventizer.newBackend(target);\n\n        frontend.onSomething(\"param\");\n        Event<DummyListener> event = queue.poll();\n        backend.send(event);\n\n        verify(target).onSomething(\"param\");\n    }", "signature": "void event_objects_are_converted_back_into_method_calls()", "full_signature": "@Test public void event_objects_are_converted_back_into_method_calls()", "class_method_signature": "DynamicEventizerTest.event_objects_are_converted_back_into_method_calls()", "testcase": true, "constructor": false, "invocations": ["mock", "newBackend", "onSomething", "poll", "send", "onSomething", "verify"]}, "focal_class": {"identifier": "DynamicEventizer", "superclass": "", "interfaces": "implements Eventizer<T>", "fields": [{"original_string": "private final Class<T> type;", "modifier": "private final", "type": "Class<T>", "declarator": "type", "var_name": "type"}], "methods": [{"identifier": "DynamicEventizer", "parameters": "(Class<T> type)", "modifiers": "public", "return": "", "signature": " DynamicEventizer(Class<T> type)", "full_signature": "public  DynamicEventizer(Class<T> type)", "class_method_signature": "DynamicEventizer.DynamicEventizer(Class<T> type)", "testcase": false, "constructor": true}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "Class<T>", "signature": "Class<T> getType()", "full_signature": "@Override public Class<T> getType()", "class_method_signature": "DynamicEventizer.getType()", "testcase": false, "constructor": false}, {"identifier": "newFrontend", "parameters": "(MessageSender<Event<T>> target)", "modifiers": "@Override public", "return": "T", "signature": "T newFrontend(MessageSender<Event<T>> target)", "full_signature": "@Override public T newFrontend(MessageSender<Event<T>> target)", "class_method_signature": "DynamicEventizer.newFrontend(MessageSender<Event<T>> target)", "testcase": false, "constructor": false}, {"identifier": "newBackend", "parameters": "(T target)", "modifiers": "@Override public", "return": "MessageSender<Event<T>>", "signature": "MessageSender<Event<T>> newBackend(T target)", "full_signature": "@Override public MessageSender<Event<T>> newBackend(T target)", "class_method_signature": "DynamicEventizer.newBackend(T target)", "testcase": false, "constructor": false}], "file": "jumi-actors/src/main/java/fi/jumi/actors/eventizers/dynamic/DynamicEventizer.java"}, "focal_method": {"identifier": "newBackend", "parameters": "(T target)", "modifiers": "@Override public", "return": "MessageSender<Event<T>>", "body": "@Override\n    public MessageSender<Event<T>> newBackend(T target) {\n        return new EventToDynamicListener<>(target);\n    }", "signature": "MessageSender<Event<T>> newBackend(T target)", "full_signature": "@Override public MessageSender<Event<T>> newBackend(T target)", "class_method_signature": "DynamicEventizer.newBackend(T target)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 6426667, "url": "https://github.com/luontola/jumi-actors", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 78, "size": 2989, "license": "licensed"}}