{"test_class": {"identifier": "RemoteChunkingManagerStepBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n\tpublic", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "@Autowired\n\tprivate JobRepository jobRepository;", "modifier": "@Autowired\n\tprivate", "type": "JobRepository", "declarator": "jobRepository", "var_name": "jobRepository"}, {"original_string": "@Autowired\n\tprivate PlatformTransactionManager transactionManager;", "modifier": "@Autowired\n\tprivate", "type": "PlatformTransactionManager", "declarator": "transactionManager", "var_name": "transactionManager"}, {"original_string": "private PollableChannel inputChannel = new QueueChannel();", "modifier": "private", "type": "PollableChannel", "declarator": "inputChannel = new QueueChannel()", "var_name": "inputChannel"}, {"original_string": "private DirectChannel outputChannel = new DirectChannel();", "modifier": "private", "type": "DirectChannel", "declarator": "outputChannel = new DirectChannel()", "var_name": "outputChannel"}, {"original_string": "private ItemReader<String> itemReader = new ListItemReader<>(Arrays.asList(\"a\", \"b\", \"c\"));", "modifier": "private", "type": "ItemReader<String>", "declarator": "itemReader = new ListItemReader<>(Arrays.asList(\"a\", \"b\", \"c\"))", "var_name": "itemReader"}], "file": "spring-batch-integration/src/test/java/org/springframework/batch/integration/chunk/RemoteChunkingManagerStepBuilderTest.java"}, "test_case": {"identifier": "testMandatoryInputChannel", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testMandatoryInputChannel() {\n\t\t// given\n\t\tRemoteChunkingManagerStepBuilder<String, String> builder = new RemoteChunkingManagerStepBuilder<>(\"step\");\n\n\t\tthis.expectedException.expect(IllegalArgumentException.class);\n\t\tthis.expectedException.expectMessage(\"An InputChannel must be provided\");\n\n\t\t// when\n\t\tTaskletStep step = builder.build();\n\n\t\t// then\n\t\t// expected exception\n\t}", "signature": "void testMandatoryInputChannel()", "full_signature": "@Test public void testMandatoryInputChannel()", "class_method_signature": "RemoteChunkingManagerStepBuilderTest.testMandatoryInputChannel()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "build"]}, "focal_class": {"identifier": "RemoteChunkingManagerStepBuilder", "superclass": "extends FaultTolerantStepBuilder<I, O>", "interfaces": "", "fields": [{"original_string": "private MessagingTemplate messagingTemplate;", "modifier": "private", "type": "MessagingTemplate", "declarator": "messagingTemplate", "var_name": "messagingTemplate"}, {"original_string": "private PollableChannel inputChannel;", "modifier": "private", "type": "PollableChannel", "declarator": "inputChannel", "var_name": "inputChannel"}, {"original_string": "private MessageChannel outputChannel;", "modifier": "private", "type": "MessageChannel", "declarator": "outputChannel", "var_name": "outputChannel"}, {"original_string": "private final int DEFAULT_MAX_WAIT_TIMEOUTS = 40;", "modifier": "private final", "type": "int", "declarator": "DEFAULT_MAX_WAIT_TIMEOUTS = 40", "var_name": "DEFAULT_MAX_WAIT_TIMEOUTS"}, {"original_string": "private static final long DEFAULT_THROTTLE_LIMIT = 6;", "modifier": "private static final", "type": "long", "declarator": "DEFAULT_THROTTLE_LIMIT = 6", "var_name": "DEFAULT_THROTTLE_LIMIT"}, {"original_string": "private int maxWaitTimeouts = DEFAULT_MAX_WAIT_TIMEOUTS;", "modifier": "private", "type": "int", "declarator": "maxWaitTimeouts = DEFAULT_MAX_WAIT_TIMEOUTS", "var_name": "maxWaitTimeouts"}, {"original_string": "private long throttleLimit = DEFAULT_THROTTLE_LIMIT;", "modifier": "private", "type": "long", "declarator": "throttleLimit = DEFAULT_THROTTLE_LIMIT", "var_name": "throttleLimit"}], "methods": [{"identifier": "RemoteChunkingManagerStepBuilder", "parameters": "(String stepName)", "modifiers": "public", "return": "", "signature": " RemoteChunkingManagerStepBuilder(String stepName)", "full_signature": "public  RemoteChunkingManagerStepBuilder(String stepName)", "class_method_signature": "RemoteChunkingManagerStepBuilder.RemoteChunkingManagerStepBuilder(String stepName)", "testcase": false, "constructor": true}, {"identifier": "inputChannel", "parameters": "(PollableChannel inputChannel)", "modifiers": "public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> inputChannel(PollableChannel inputChannel)", "full_signature": "public RemoteChunkingManagerStepBuilder<I, O> inputChannel(PollableChannel inputChannel)", "class_method_signature": "RemoteChunkingManagerStepBuilder.inputChannel(PollableChannel inputChannel)", "testcase": false, "constructor": false}, {"identifier": "outputChannel", "parameters": "(MessageChannel outputChannel)", "modifiers": "public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> outputChannel(MessageChannel outputChannel)", "full_signature": "public RemoteChunkingManagerStepBuilder<I, O> outputChannel(MessageChannel outputChannel)", "class_method_signature": "RemoteChunkingManagerStepBuilder.outputChannel(MessageChannel outputChannel)", "testcase": false, "constructor": false}, {"identifier": "messagingTemplate", "parameters": "(MessagingTemplate messagingTemplate)", "modifiers": "public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> messagingTemplate(MessagingTemplate messagingTemplate)", "full_signature": "public RemoteChunkingManagerStepBuilder<I, O> messagingTemplate(MessagingTemplate messagingTemplate)", "class_method_signature": "RemoteChunkingManagerStepBuilder.messagingTemplate(MessagingTemplate messagingTemplate)", "testcase": false, "constructor": false}, {"identifier": "maxWaitTimeouts", "parameters": "(int maxWaitTimeouts)", "modifiers": "public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> maxWaitTimeouts(int maxWaitTimeouts)", "full_signature": "public RemoteChunkingManagerStepBuilder<I, O> maxWaitTimeouts(int maxWaitTimeouts)", "class_method_signature": "RemoteChunkingManagerStepBuilder.maxWaitTimeouts(int maxWaitTimeouts)", "testcase": false, "constructor": false}, {"identifier": "throttleLimit", "parameters": "(long throttleLimit)", "modifiers": "public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> throttleLimit(long throttleLimit)", "full_signature": "public RemoteChunkingManagerStepBuilder<I, O> throttleLimit(long throttleLimit)", "class_method_signature": "RemoteChunkingManagerStepBuilder.throttleLimit(long throttleLimit)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "TaskletStep", "signature": "TaskletStep build()", "full_signature": "public TaskletStep build()", "class_method_signature": "RemoteChunkingManagerStepBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "reader", "parameters": "(ItemReader<? extends I> reader)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> reader(ItemReader<? extends I> reader)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> reader(ItemReader<? extends I> reader)", "class_method_signature": "RemoteChunkingManagerStepBuilder.reader(ItemReader<? extends I> reader)", "testcase": false, "constructor": false}, {"identifier": "repository", "parameters": "(JobRepository jobRepository)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> repository(JobRepository jobRepository)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> repository(JobRepository jobRepository)", "class_method_signature": "RemoteChunkingManagerStepBuilder.repository(JobRepository jobRepository)", "testcase": false, "constructor": false}, {"identifier": "transactionManager", "parameters": "(PlatformTransactionManager transactionManager)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> transactionManager(PlatformTransactionManager transactionManager)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> transactionManager(PlatformTransactionManager transactionManager)", "class_method_signature": "RemoteChunkingManagerStepBuilder.transactionManager(PlatformTransactionManager transactionManager)", "testcase": false, "constructor": false}, {"identifier": "listener", "parameters": "(Object listener)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> listener(Object listener)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> listener(Object listener)", "class_method_signature": "RemoteChunkingManagerStepBuilder.listener(Object listener)", "testcase": false, "constructor": false}, {"identifier": "listener", "parameters": "(SkipListener<? super I, ? super O> listener)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> listener(SkipListener<? super I, ? super O> listener)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> listener(SkipListener<? super I, ? super O> listener)", "class_method_signature": "RemoteChunkingManagerStepBuilder.listener(SkipListener<? super I, ? super O> listener)", "testcase": false, "constructor": false}, {"identifier": "listener", "parameters": "(ChunkListener listener)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> listener(ChunkListener listener)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> listener(ChunkListener listener)", "class_method_signature": "RemoteChunkingManagerStepBuilder.listener(ChunkListener listener)", "testcase": false, "constructor": false}, {"identifier": "transactionAttribute", "parameters": "(TransactionAttribute transactionAttribute)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> transactionAttribute(TransactionAttribute transactionAttribute)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> transactionAttribute(TransactionAttribute transactionAttribute)", "class_method_signature": "RemoteChunkingManagerStepBuilder.transactionAttribute(TransactionAttribute transactionAttribute)", "testcase": false, "constructor": false}, {"identifier": "listener", "parameters": "(org.springframework.retry.RetryListener listener)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> listener(org.springframework.retry.RetryListener listener)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> listener(org.springframework.retry.RetryListener listener)", "class_method_signature": "RemoteChunkingManagerStepBuilder.listener(org.springframework.retry.RetryListener listener)", "testcase": false, "constructor": false}, {"identifier": "keyGenerator", "parameters": "(KeyGenerator keyGenerator)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> keyGenerator(KeyGenerator keyGenerator)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> keyGenerator(KeyGenerator keyGenerator)", "class_method_signature": "RemoteChunkingManagerStepBuilder.keyGenerator(KeyGenerator keyGenerator)", "testcase": false, "constructor": false}, {"identifier": "retryLimit", "parameters": "(int retryLimit)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> retryLimit(int retryLimit)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> retryLimit(int retryLimit)", "class_method_signature": "RemoteChunkingManagerStepBuilder.retryLimit(int retryLimit)", "testcase": false, "constructor": false}, {"identifier": "retryPolicy", "parameters": "(RetryPolicy retryPolicy)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> retryPolicy(RetryPolicy retryPolicy)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> retryPolicy(RetryPolicy retryPolicy)", "class_method_signature": "RemoteChunkingManagerStepBuilder.retryPolicy(RetryPolicy retryPolicy)", "testcase": false, "constructor": false}, {"identifier": "backOffPolicy", "parameters": "(BackOffPolicy backOffPolicy)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> backOffPolicy(BackOffPolicy backOffPolicy)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> backOffPolicy(BackOffPolicy backOffPolicy)", "class_method_signature": "RemoteChunkingManagerStepBuilder.backOffPolicy(BackOffPolicy backOffPolicy)", "testcase": false, "constructor": false}, {"identifier": "retryContextCache", "parameters": "(RetryContextCache retryContextCache)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> retryContextCache(RetryContextCache retryContextCache)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> retryContextCache(RetryContextCache retryContextCache)", "class_method_signature": "RemoteChunkingManagerStepBuilder.retryContextCache(RetryContextCache retryContextCache)", "testcase": false, "constructor": false}, {"identifier": "skipLimit", "parameters": "(int skipLimit)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> skipLimit(int skipLimit)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> skipLimit(int skipLimit)", "class_method_signature": "RemoteChunkingManagerStepBuilder.skipLimit(int skipLimit)", "testcase": false, "constructor": false}, {"identifier": "noSkip", "parameters": "(Class<? extends Throwable> type)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> noSkip(Class<? extends Throwable> type)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> noSkip(Class<? extends Throwable> type)", "class_method_signature": "RemoteChunkingManagerStepBuilder.noSkip(Class<? extends Throwable> type)", "testcase": false, "constructor": false}, {"identifier": "skip", "parameters": "(Class<? extends Throwable> type)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> skip(Class<? extends Throwable> type)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> skip(Class<? extends Throwable> type)", "class_method_signature": "RemoteChunkingManagerStepBuilder.skip(Class<? extends Throwable> type)", "testcase": false, "constructor": false}, {"identifier": "skipPolicy", "parameters": "(SkipPolicy skipPolicy)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> skipPolicy(SkipPolicy skipPolicy)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> skipPolicy(SkipPolicy skipPolicy)", "class_method_signature": "RemoteChunkingManagerStepBuilder.skipPolicy(SkipPolicy skipPolicy)", "testcase": false, "constructor": false}, {"identifier": "noRollback", "parameters": "(Class<? extends Throwable> type)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> noRollback(Class<? extends Throwable> type)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> noRollback(Class<? extends Throwable> type)", "class_method_signature": "RemoteChunkingManagerStepBuilder.noRollback(Class<? extends Throwable> type)", "testcase": false, "constructor": false}, {"identifier": "noRetry", "parameters": "(Class<? extends Throwable> type)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> noRetry(Class<? extends Throwable> type)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> noRetry(Class<? extends Throwable> type)", "class_method_signature": "RemoteChunkingManagerStepBuilder.noRetry(Class<? extends Throwable> type)", "testcase": false, "constructor": false}, {"identifier": "retry", "parameters": "(Class<? extends Throwable> type)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> retry(Class<? extends Throwable> type)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> retry(Class<? extends Throwable> type)", "class_method_signature": "RemoteChunkingManagerStepBuilder.retry(Class<? extends Throwable> type)", "testcase": false, "constructor": false}, {"identifier": "stream", "parameters": "(ItemStream stream)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> stream(ItemStream stream)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> stream(ItemStream stream)", "class_method_signature": "RemoteChunkingManagerStepBuilder.stream(ItemStream stream)", "testcase": false, "constructor": false}, {"identifier": "chunk", "parameters": "(int chunkSize)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> chunk(int chunkSize)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> chunk(int chunkSize)", "class_method_signature": "RemoteChunkingManagerStepBuilder.chunk(int chunkSize)", "testcase": false, "constructor": false}, {"identifier": "chunk", "parameters": "(CompletionPolicy completionPolicy)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> chunk(CompletionPolicy completionPolicy)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> chunk(CompletionPolicy completionPolicy)", "class_method_signature": "RemoteChunkingManagerStepBuilder.chunk(CompletionPolicy completionPolicy)", "testcase": false, "constructor": false}, {"identifier": "writer", "parameters": "(ItemWriter<? super O> writer)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> writer(ItemWriter<? super O> writer)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> writer(ItemWriter<? super O> writer)", "class_method_signature": "RemoteChunkingManagerStepBuilder.writer(ItemWriter<? super O> writer)", "testcase": false, "constructor": false}, {"identifier": "readerIsTransactionalQueue", "parameters": "()", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> readerIsTransactionalQueue()", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> readerIsTransactionalQueue()", "class_method_signature": "RemoteChunkingManagerStepBuilder.readerIsTransactionalQueue()", "testcase": false, "constructor": false}, {"identifier": "listener", "parameters": "(ItemReadListener<? super I> listener)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> listener(ItemReadListener<? super I> listener)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> listener(ItemReadListener<? super I> listener)", "class_method_signature": "RemoteChunkingManagerStepBuilder.listener(ItemReadListener<? super I> listener)", "testcase": false, "constructor": false}, {"identifier": "listener", "parameters": "(ItemWriteListener<? super O> listener)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> listener(ItemWriteListener<? super O> listener)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> listener(ItemWriteListener<? super O> listener)", "class_method_signature": "RemoteChunkingManagerStepBuilder.listener(ItemWriteListener<? super O> listener)", "testcase": false, "constructor": false}, {"identifier": "chunkOperations", "parameters": "(RepeatOperations repeatTemplate)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> chunkOperations(RepeatOperations repeatTemplate)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> chunkOperations(RepeatOperations repeatTemplate)", "class_method_signature": "RemoteChunkingManagerStepBuilder.chunkOperations(RepeatOperations repeatTemplate)", "testcase": false, "constructor": false}, {"identifier": "exceptionHandler", "parameters": "(ExceptionHandler exceptionHandler)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> exceptionHandler(ExceptionHandler exceptionHandler)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> exceptionHandler(ExceptionHandler exceptionHandler)", "class_method_signature": "RemoteChunkingManagerStepBuilder.exceptionHandler(ExceptionHandler exceptionHandler)", "testcase": false, "constructor": false}, {"identifier": "stepOperations", "parameters": "(RepeatOperations repeatTemplate)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> stepOperations(RepeatOperations repeatTemplate)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> stepOperations(RepeatOperations repeatTemplate)", "class_method_signature": "RemoteChunkingManagerStepBuilder.stepOperations(RepeatOperations repeatTemplate)", "testcase": false, "constructor": false}, {"identifier": "startLimit", "parameters": "(int startLimit)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> startLimit(int startLimit)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> startLimit(int startLimit)", "class_method_signature": "RemoteChunkingManagerStepBuilder.startLimit(int startLimit)", "testcase": false, "constructor": false}, {"identifier": "listener", "parameters": "(StepExecutionListener listener)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> listener(StepExecutionListener listener)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> listener(StepExecutionListener listener)", "class_method_signature": "RemoteChunkingManagerStepBuilder.listener(StepExecutionListener listener)", "testcase": false, "constructor": false}, {"identifier": "allowStartIfComplete", "parameters": "(boolean allowStartIfComplete)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> allowStartIfComplete(boolean allowStartIfComplete)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> allowStartIfComplete(boolean allowStartIfComplete)", "class_method_signature": "RemoteChunkingManagerStepBuilder.allowStartIfComplete(boolean allowStartIfComplete)", "testcase": false, "constructor": false}, {"identifier": "processor", "parameters": "(ItemProcessor<? super I, ? extends O> itemProcessor)", "modifiers": "@Override public", "return": "RemoteChunkingManagerStepBuilder<I, O>", "signature": "RemoteChunkingManagerStepBuilder<I, O> processor(ItemProcessor<? super I, ? extends O> itemProcessor)", "full_signature": "@Override public RemoteChunkingManagerStepBuilder<I, O> processor(ItemProcessor<? super I, ? extends O> itemProcessor)", "class_method_signature": "RemoteChunkingManagerStepBuilder.processor(ItemProcessor<? super I, ? extends O> itemProcessor)", "testcase": false, "constructor": false}], "file": "spring-batch-integration/src/main/java/org/springframework/batch/integration/chunk/RemoteChunkingManagerStepBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "TaskletStep", "body": "public TaskletStep build() {\n\t\tAssert.notNull(this.inputChannel, \"An InputChannel must be provided\");\n\t\tAssert.state(this.outputChannel == null || this.messagingTemplate == null,\n\t\t\t\t\"You must specify either an outputChannel or a messagingTemplate but not both.\");\n\n\t\t// configure messaging template\n\t\tif (this.messagingTemplate == null) {\n\t\t\tthis.messagingTemplate = new MessagingTemplate();\n\t\t\tthis.messagingTemplate.setDefaultChannel(this.outputChannel);\n\t\t\tif (this.logger.isDebugEnabled()) {\n\t\t\t\tthis.logger.debug(\"No messagingTemplate was provided, using a default one\");\n\t\t\t}\n\t\t}\n\n\t\t// configure item writer\n\t\tChunkMessageChannelItemWriter<O> chunkMessageChannelItemWriter = new ChunkMessageChannelItemWriter<>();\n\t\tchunkMessageChannelItemWriter.setMessagingOperations(this.messagingTemplate);\n\t\tchunkMessageChannelItemWriter.setMaxWaitTimeouts(this.maxWaitTimeouts);\n\t\tchunkMessageChannelItemWriter.setThrottleLimit(this.throttleLimit);\n\t\tchunkMessageChannelItemWriter.setReplyChannel(this.inputChannel);\n\t\tsuper.writer(chunkMessageChannelItemWriter);\n\n\t\treturn super.build();\n\t}", "signature": "TaskletStep build()", "full_signature": "public TaskletStep build()", "class_method_signature": "RemoteChunkingManagerStepBuilder.build()", "testcase": false, "constructor": false, "invocations": ["notNull", "state", "setDefaultChannel", "isDebugEnabled", "debug", "setMessagingOperations", "setMaxWaitTimeouts", "setThrottleLimit", "setReplyChannel", "writer", "build"]}, "repository": {"repo_id": 1089149, "url": "https://github.com/spring-projects/spring-batch", "stars": 1446, "created": "11/17/2010 5:53:45 PM +00:00", "updates": "2020-01-27T04:10:58+00:00", "fork": "False", "license": "licensed"}}