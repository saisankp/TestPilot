{"test_class": {"identifier": "IgniteSecurityProcessorTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/core/src/test/java/org/apache/ignite/internal/processors/security/IgniteSecurityProcessorTest.java"}, "test_case": {"identifier": "testThrowIllegalStateExceptionIfNodeNotFoundInDiscoCache", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n    public void testThrowIllegalStateExceptionIfNodeNotFoundInDiscoCache() {\n        GridKernalContext ctx = mock(GridKernalContext.class);\n        when(ctx.config()).thenReturn(new IgniteConfiguration());\n        when(ctx.discovery()).thenReturn(mock(GridDiscoveryManager.class));\n\n        GridSecurityProcessor secPrc = mock(GridSecurityProcessor.class);\n\n        IgniteSecurityProcessor ignSecPrc = new IgniteSecurityProcessor(ctx, secPrc);\n\n        ignSecPrc.withContext(UUID.randomUUID());\n    }", "signature": "void testThrowIllegalStateExceptionIfNodeNotFoundInDiscoCache()", "full_signature": "@Test(expected = IllegalStateException.class) public void testThrowIllegalStateExceptionIfNodeNotFoundInDiscoCache()", "class_method_signature": "IgniteSecurityProcessorTest.testThrowIllegalStateExceptionIfNodeNotFoundInDiscoCache()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "config", "thenReturn", "when", "discovery", "mock", "mock", "withContext", "randomUUID"]}, "focal_class": {"identifier": "IgniteSecurityProcessor", "superclass": "", "interfaces": "implements IgniteSecurity, GridProcessor", "fields": [{"original_string": "public static final String ATTR_GRID_SEC_PROC_CLASS = \"grid.security.processor.class\";", "modifier": "public static final", "type": "String", "declarator": "ATTR_GRID_SEC_PROC_CLASS = \"grid.security.processor.class\"", "var_name": "ATTR_GRID_SEC_PROC_CLASS"}, {"original_string": "private final GridKernalContext ctx;", "modifier": "private final", "type": "GridKernalContext", "declarator": "ctx", "var_name": "ctx"}, {"original_string": "private final GridSecurityProcessor secPrc;", "modifier": "private final", "type": "GridSecurityProcessor", "declarator": "secPrc", "var_name": "secPrc"}, {"original_string": "private final JdkMarshaller marsh;", "modifier": "private final", "type": "JdkMarshaller", "declarator": "marsh", "var_name": "marsh"}, {"original_string": "private final Map<UUID, SecurityContext> secCtxs = new ConcurrentHashMap<>();", "modifier": "private final", "type": "Map<UUID, SecurityContext>", "declarator": "secCtxs = new ConcurrentHashMap<>()", "var_name": "secCtxs"}, {"original_string": "private final IgniteLogger log;", "modifier": "private final", "type": "IgniteLogger", "declarator": "log", "var_name": "log"}, {"original_string": "private volatile ThreadLocal<SecurityContext> curSecCtx = ThreadLocal.withInitial(this::localSecurityContext);", "modifier": "private volatile", "type": "ThreadLocal<SecurityContext>", "declarator": "curSecCtx = ThreadLocal.withInitial(this::localSecurityContext)", "var_name": "curSecCtx"}], "methods": [{"identifier": "IgniteSecurityProcessor", "parameters": "(GridKernalContext ctx, GridSecurityProcessor secPrc)", "modifiers": "public", "return": "", "signature": " IgniteSecurityProcessor(GridKernalContext ctx, GridSecurityProcessor secPrc)", "full_signature": "public  IgniteSecurityProcessor(GridKernalContext ctx, GridSecurityProcessor secPrc)", "class_method_signature": "IgniteSecurityProcessor.IgniteSecurityProcessor(GridKernalContext ctx, GridSecurityProcessor secPrc)", "testcase": false, "constructor": true}, {"identifier": "withContext", "parameters": "(SecurityContext secCtx)", "modifiers": "@Override public", "return": "OperationSecurityContext", "signature": "OperationSecurityContext withContext(SecurityContext secCtx)", "full_signature": "@Override public OperationSecurityContext withContext(SecurityContext secCtx)", "class_method_signature": "IgniteSecurityProcessor.withContext(SecurityContext secCtx)", "testcase": false, "constructor": false}, {"identifier": "withContext", "parameters": "(UUID subjId)", "modifiers": "@Override public", "return": "OperationSecurityContext", "signature": "OperationSecurityContext withContext(UUID subjId)", "full_signature": "@Override public OperationSecurityContext withContext(UUID subjId)", "class_method_signature": "IgniteSecurityProcessor.withContext(UUID subjId)", "testcase": false, "constructor": false}, {"identifier": "securityContext", "parameters": "()", "modifiers": "@Override public", "return": "SecurityContext", "signature": "SecurityContext securityContext()", "full_signature": "@Override public SecurityContext securityContext()", "class_method_signature": "IgniteSecurityProcessor.securityContext()", "testcase": false, "constructor": false}, {"identifier": "authenticateNode", "parameters": "(ClusterNode node, SecurityCredentials cred)", "modifiers": "@Override public", "return": "SecurityContext", "signature": "SecurityContext authenticateNode(ClusterNode node, SecurityCredentials cred)", "full_signature": "@Override public SecurityContext authenticateNode(ClusterNode node, SecurityCredentials cred)", "class_method_signature": "IgniteSecurityProcessor.authenticateNode(ClusterNode node, SecurityCredentials cred)", "testcase": false, "constructor": false}, {"identifier": "isGlobalNodeAuthentication", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isGlobalNodeAuthentication()", "full_signature": "@Override public boolean isGlobalNodeAuthentication()", "class_method_signature": "IgniteSecurityProcessor.isGlobalNodeAuthentication()", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(AuthenticationContext ctx)", "modifiers": "@Override public", "return": "SecurityContext", "signature": "SecurityContext authenticate(AuthenticationContext ctx)", "full_signature": "@Override public SecurityContext authenticate(AuthenticationContext ctx)", "class_method_signature": "IgniteSecurityProcessor.authenticate(AuthenticationContext ctx)", "testcase": false, "constructor": false}, {"identifier": "authenticatedSubjects", "parameters": "()", "modifiers": "@Override public", "return": "Collection<SecuritySubject>", "signature": "Collection<SecuritySubject> authenticatedSubjects()", "full_signature": "@Override public Collection<SecuritySubject> authenticatedSubjects()", "class_method_signature": "IgniteSecurityProcessor.authenticatedSubjects()", "testcase": false, "constructor": false}, {"identifier": "authenticatedSubject", "parameters": "(UUID subjId)", "modifiers": "@Override public", "return": "SecuritySubject", "signature": "SecuritySubject authenticatedSubject(UUID subjId)", "full_signature": "@Override public SecuritySubject authenticatedSubject(UUID subjId)", "class_method_signature": "IgniteSecurityProcessor.authenticatedSubject(UUID subjId)", "testcase": false, "constructor": false}, {"identifier": "onSessionExpired", "parameters": "(UUID subjId)", "modifiers": "@Override public", "return": "void", "signature": "void onSessionExpired(UUID subjId)", "full_signature": "@Override public void onSessionExpired(UUID subjId)", "class_method_signature": "IgniteSecurityProcessor.onSessionExpired(UUID subjId)", "testcase": false, "constructor": false}, {"identifier": "authorize", "parameters": "(String name, SecurityPermission perm)", "modifiers": "@Override public", "return": "void", "signature": "void authorize(String name, SecurityPermission perm)", "full_signature": "@Override public void authorize(String name, SecurityPermission perm)", "class_method_signature": "IgniteSecurityProcessor.authorize(String name, SecurityPermission perm)", "testcase": false, "constructor": false}, {"identifier": "enabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean enabled()", "full_signature": "@Override public boolean enabled()", "class_method_signature": "IgniteSecurityProcessor.enabled()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void start()", "full_signature": "@Override public void start()", "class_method_signature": "IgniteSecurityProcessor.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "(boolean cancel)", "modifiers": "@Override public", "return": "void", "signature": "void stop(boolean cancel)", "full_signature": "@Override public void stop(boolean cancel)", "class_method_signature": "IgniteSecurityProcessor.stop(boolean cancel)", "testcase": false, "constructor": false}, {"identifier": "onKernalStart", "parameters": "(boolean active)", "modifiers": "@Override public", "return": "void", "signature": "void onKernalStart(boolean active)", "full_signature": "@Override public void onKernalStart(boolean active)", "class_method_signature": "IgniteSecurityProcessor.onKernalStart(boolean active)", "testcase": false, "constructor": false}, {"identifier": "onKernalStop", "parameters": "(boolean cancel)", "modifiers": "@Override public", "return": "void", "signature": "void onKernalStop(boolean cancel)", "full_signature": "@Override public void onKernalStop(boolean cancel)", "class_method_signature": "IgniteSecurityProcessor.onKernalStop(boolean cancel)", "testcase": false, "constructor": false}, {"identifier": "collectJoiningNodeData", "parameters": "(DiscoveryDataBag dataBag)", "modifiers": "@Override public", "return": "void", "signature": "void collectJoiningNodeData(DiscoveryDataBag dataBag)", "full_signature": "@Override public void collectJoiningNodeData(DiscoveryDataBag dataBag)", "class_method_signature": "IgniteSecurityProcessor.collectJoiningNodeData(DiscoveryDataBag dataBag)", "testcase": false, "constructor": false}, {"identifier": "collectGridNodeData", "parameters": "(DiscoveryDataBag dataBag)", "modifiers": "@Override public", "return": "void", "signature": "void collectGridNodeData(DiscoveryDataBag dataBag)", "full_signature": "@Override public void collectGridNodeData(DiscoveryDataBag dataBag)", "class_method_signature": "IgniteSecurityProcessor.collectGridNodeData(DiscoveryDataBag dataBag)", "testcase": false, "constructor": false}, {"identifier": "onGridDataReceived", "parameters": "(DiscoveryDataBag.GridDiscoveryData data)", "modifiers": "@Override public", "return": "void", "signature": "void onGridDataReceived(DiscoveryDataBag.GridDiscoveryData data)", "full_signature": "@Override public void onGridDataReceived(DiscoveryDataBag.GridDiscoveryData data)", "class_method_signature": "IgniteSecurityProcessor.onGridDataReceived(DiscoveryDataBag.GridDiscoveryData data)", "testcase": false, "constructor": false}, {"identifier": "onJoiningNodeDataReceived", "parameters": "(DiscoveryDataBag.JoiningNodeDiscoveryData data)", "modifiers": "@Override public", "return": "void", "signature": "void onJoiningNodeDataReceived(DiscoveryDataBag.JoiningNodeDiscoveryData data)", "full_signature": "@Override public void onJoiningNodeDataReceived(DiscoveryDataBag.JoiningNodeDiscoveryData data)", "class_method_signature": "IgniteSecurityProcessor.onJoiningNodeDataReceived(DiscoveryDataBag.JoiningNodeDiscoveryData data)", "testcase": false, "constructor": false}, {"identifier": "printMemoryStats", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void printMemoryStats()", "full_signature": "@Override public void printMemoryStats()", "class_method_signature": "IgniteSecurityProcessor.printMemoryStats()", "testcase": false, "constructor": false}, {"identifier": "validateNode", "parameters": "(ClusterNode node)", "modifiers": "@Override public @Nullable", "return": "IgniteNodeValidationResult", "signature": "IgniteNodeValidationResult validateNode(ClusterNode node)", "full_signature": "@Override public @Nullable IgniteNodeValidationResult validateNode(ClusterNode node)", "class_method_signature": "IgniteSecurityProcessor.validateNode(ClusterNode node)", "testcase": false, "constructor": false}, {"identifier": "validateNode", "parameters": "(ClusterNode node,\n        DiscoveryDataBag.JoiningNodeDiscoveryData discoData)", "modifiers": "@Override public @Nullable", "return": "IgniteNodeValidationResult", "signature": "IgniteNodeValidationResult validateNode(ClusterNode node,\n        DiscoveryDataBag.JoiningNodeDiscoveryData discoData)", "full_signature": "@Override public @Nullable IgniteNodeValidationResult validateNode(ClusterNode node,\n        DiscoveryDataBag.JoiningNodeDiscoveryData discoData)", "class_method_signature": "IgniteSecurityProcessor.validateNode(ClusterNode node,\n        DiscoveryDataBag.JoiningNodeDiscoveryData discoData)", "testcase": false, "constructor": false}, {"identifier": "discoveryDataType", "parameters": "()", "modifiers": "@Override public @Nullable", "return": "DiscoveryDataExchangeType", "signature": "DiscoveryDataExchangeType discoveryDataType()", "full_signature": "@Override public @Nullable DiscoveryDataExchangeType discoveryDataType()", "class_method_signature": "IgniteSecurityProcessor.discoveryDataType()", "testcase": false, "constructor": false}, {"identifier": "onDisconnected", "parameters": "(IgniteFuture<?> reconnectFut)", "modifiers": "@Override public", "return": "void", "signature": "void onDisconnected(IgniteFuture<?> reconnectFut)", "full_signature": "@Override public void onDisconnected(IgniteFuture<?> reconnectFut)", "class_method_signature": "IgniteSecurityProcessor.onDisconnected(IgniteFuture<?> reconnectFut)", "testcase": false, "constructor": false}, {"identifier": "onReconnected", "parameters": "(\n        boolean clusterRestarted)", "modifiers": "@Override public @Nullable", "return": "IgniteInternalFuture<?>", "signature": "IgniteInternalFuture<?> onReconnected(\n        boolean clusterRestarted)", "full_signature": "@Override public @Nullable IgniteInternalFuture<?> onReconnected(\n        boolean clusterRestarted)", "class_method_signature": "IgniteSecurityProcessor.onReconnected(\n        boolean clusterRestarted)", "testcase": false, "constructor": false}, {"identifier": "localSecurityContext", "parameters": "()", "modifiers": "private", "return": "SecurityContext", "signature": "SecurityContext localSecurityContext()", "full_signature": "private SecurityContext localSecurityContext()", "class_method_signature": "IgniteSecurityProcessor.localSecurityContext()", "testcase": false, "constructor": false}, {"identifier": "validateSecProcClass", "parameters": "(ClusterNode node)", "modifiers": "private", "return": "IgniteNodeValidationResult", "signature": "IgniteNodeValidationResult validateSecProcClass(ClusterNode node)", "full_signature": "private IgniteNodeValidationResult validateSecProcClass(ClusterNode node)", "class_method_signature": "IgniteSecurityProcessor.validateSecProcClass(ClusterNode node)", "testcase": false, "constructor": false}, {"identifier": "gridSecurityProcessor", "parameters": "()", "modifiers": "public", "return": "GridSecurityProcessor", "signature": "GridSecurityProcessor gridSecurityProcessor()", "full_signature": "public GridSecurityProcessor gridSecurityProcessor()", "class_method_signature": "IgniteSecurityProcessor.gridSecurityProcessor()", "testcase": false, "constructor": false}], "file": "modules/core/src/main/java/org/apache/ignite/internal/processors/security/IgniteSecurityProcessor.java"}, "focal_method": {"identifier": "withContext", "parameters": "(SecurityContext secCtx)", "modifiers": "@Override public", "return": "OperationSecurityContext", "body": "@Override public OperationSecurityContext withContext(SecurityContext secCtx) {\n        assert secCtx != null;\n\n        secPrc.touch(secCtx);\n\n        SecurityContext old = curSecCtx.get();\n\n        curSecCtx.set(secCtx);\n\n        return new OperationSecurityContext(this, old);\n    }", "signature": "OperationSecurityContext withContext(SecurityContext secCtx)", "full_signature": "@Override public OperationSecurityContext withContext(SecurityContext secCtx)", "class_method_signature": "IgniteSecurityProcessor.withContext(SecurityContext secCtx)", "testcase": false, "constructor": false, "invocations": ["touch", "get", "set"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}