{"test_class": {"identifier": "FixedIntervalRefillStrategyTest", "superclass": "", "interfaces": "", "fields": [], "file": "titus-common/src/test/java/com/netflix/titus/common/util/limiter/tokenbucket/internal/FixedIntervalRefillStrategyTest.java"}, "test_case": {"identifier": "refillShouldReturn10", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void refillShouldReturn10() {\n        TestTicker testTicker = createTestTicker();\n        Stopwatch stopwatch = Stopwatch.createStarted(testTicker);\n        testTicker.setNanos(TimeUnit.SECONDS.toNanos(9));\n\n        RefillStrategy refillStrategy = new FixedIntervalRefillStrategy(stopwatch, 1, 1, TimeUnit.SECONDS);\n\n        assertEquals(10, refillStrategy.refill());\n    }", "signature": "void refillShouldReturn10()", "full_signature": "@Test public void refillShouldReturn10()", "class_method_signature": "FixedIntervalRefillStrategyTest.refillShouldReturn10()", "testcase": true, "constructor": false, "invocations": ["createTestTicker", "createStarted", "setNanos", "toNanos", "assertEquals", "refill"]}, "focal_class": {"identifier": "FixedIntervalRefillStrategy", "superclass": "", "interfaces": "implements RefillStrategy", "fields": [{"original_string": "private final Object mutex = new Object();", "modifier": "private final", "type": "Object", "declarator": "mutex = new Object()", "var_name": "mutex"}, {"original_string": "private final Stopwatch stopwatch;", "modifier": "private final", "type": "Stopwatch", "declarator": "stopwatch", "var_name": "stopwatch"}, {"original_string": "private final long numberOfTokensPerInterval;", "modifier": "private final", "type": "long", "declarator": "numberOfTokensPerInterval", "var_name": "numberOfTokensPerInterval"}, {"original_string": "private final long intervalInNanos;", "modifier": "private final", "type": "long", "declarator": "intervalInNanos", "var_name": "intervalInNanos"}, {"original_string": "private final String toStringValue;", "modifier": "private final", "type": "String", "declarator": "toStringValue", "var_name": "toStringValue"}, {"original_string": "private long lastRefillTime;", "modifier": "private", "type": "long", "declarator": "lastRefillTime", "var_name": "lastRefillTime"}, {"original_string": "private long nextRefillTime;", "modifier": "private", "type": "long", "declarator": "nextRefillTime", "var_name": "nextRefillTime"}], "methods": [{"identifier": "FixedIntervalRefillStrategy", "parameters": "(Stopwatch stopwatch, long numberOfTokensPerInterval, long interval, TimeUnit unit)", "modifiers": "public", "return": "", "signature": " FixedIntervalRefillStrategy(Stopwatch stopwatch, long numberOfTokensPerInterval, long interval, TimeUnit unit)", "full_signature": "public  FixedIntervalRefillStrategy(Stopwatch stopwatch, long numberOfTokensPerInterval, long interval, TimeUnit unit)", "class_method_signature": "FixedIntervalRefillStrategy.FixedIntervalRefillStrategy(Stopwatch stopwatch, long numberOfTokensPerInterval, long interval, TimeUnit unit)", "testcase": false, "constructor": true}, {"identifier": "refill", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long refill()", "full_signature": "@Override public long refill()", "class_method_signature": "FixedIntervalRefillStrategy.refill()", "testcase": false, "constructor": false}, {"identifier": "getTimeUntilNextRefill", "parameters": "(TimeUnit unit)", "modifiers": "@Override public", "return": "long", "signature": "long getTimeUntilNextRefill(TimeUnit unit)", "full_signature": "@Override public long getTimeUntilNextRefill(TimeUnit unit)", "class_method_signature": "FixedIntervalRefillStrategy.getTimeUntilNextRefill(TimeUnit unit)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FixedIntervalRefillStrategy.toString()", "testcase": false, "constructor": false}], "file": "titus-common/src/main/java/com/netflix/titus/common/util/limiter/tokenbucket/internal/FixedIntervalRefillStrategy.java"}, "focal_method": {"identifier": "refill", "parameters": "()", "modifiers": "@Override public", "return": "long", "body": "@Override\n    public long refill() {\n        synchronized (mutex) {\n            long elapsed = stopwatch.elapsed(TimeUnit.NANOSECONDS);\n            if (elapsed < nextRefillTime) {\n                return 0;\n            }\n            long numberOfIntervals = Math.max(0, (elapsed - lastRefillTime) / intervalInNanos);\n            lastRefillTime += numberOfIntervals * intervalInNanos;\n            nextRefillTime = lastRefillTime + intervalInNanos;\n\n            return numberOfIntervals * numberOfTokensPerInterval;\n        }\n    }", "signature": "long refill()", "full_signature": "@Override public long refill()", "class_method_signature": "FixedIntervalRefillStrategy.refill()", "testcase": false, "constructor": false, "invocations": ["elapsed", "max"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}