{"test_class": {"identifier": "HaloServerVersionTest", "superclass": "extends HaloJUnitTest", "interfaces": "", "fields": [], "file": "sdk/halo-sdk/src/test/java/com/mobgen/halo/android/sdk/core/management/models/HaloServerVersionTest.java"}, "test_case": {"identifier": "thatVersionAreEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void thatVersionAreEquals() {\n        HaloServerVersion version = new HaloServerVersion(\"changelog\", \"1.1\");\n        HaloServerVersion version2 = new HaloServerVersion(\"changelog\", \"1.1\");\n        assertThat(version2).isEqualTo(version);\n        HaloServerVersion version3 = new HaloServerVersion(\"changelog2\", \"1.1\");\n        assertThat(version3).isNotEqualTo(version2);\n        HaloServerVersion version4 = new HaloServerVersion(\"changelog\", \"1\");\n        assertThat(version3).isNotEqualTo(version4);\n        assertThat(1).isNotEqualTo(version);\n        assertThat(version).isNotNull();\n        assertThat(new HaloServerVersion(null, \"1.1\")).isNotEqualTo(version);\n        assertThat(version).isNotEqualTo(new HaloServerVersion(null, \"1.1\"));\n        assertThat(new HaloServerVersion(null, null)).isNotEqualTo(version);\n        assertThat(new HaloServerVersion(\"changelog\", null)).isNotEqualTo(version);\n        assertThat(version).isNotEqualTo(new HaloServerVersion(\"changelog\", null));\n        assertThat(version).isEqualTo(version);\n        assertThat(version2.hashCode()).isEqualTo(version.hashCode());\n        assertThat(new HaloServerVersion(null, null).hashCode() == 0).isTrue();\n        assertThat(new HaloServerVersion(null, null).hashCode()).isNotEqualTo(version.hashCode());\n        assertThat(version3.hashCode()).isNotEqualTo(version.hashCode());\n    }", "signature": "void thatVersionAreEquals()", "full_signature": "@Test public void thatVersionAreEquals()", "class_method_signature": "HaloServerVersionTest.thatVersionAreEquals()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "isNotEqualTo", "assertThat", "isNotEqualTo", "assertThat", "isNotEqualTo", "assertThat", "isNotNull", "assertThat", "isNotEqualTo", "assertThat", "isNotEqualTo", "assertThat", "isNotEqualTo", "assertThat", "isNotEqualTo", "assertThat", "isNotEqualTo", "assertThat", "isEqualTo", "assertThat", "isEqualTo", "assertThat", "hashCode", "hashCode", "isTrue", "assertThat", "hashCode", "isNotEqualTo", "assertThat", "hashCode", "hashCode", "isNotEqualTo", "assertThat", "hashCode", "hashCode"]}, "focal_class": {"identifier": "HaloServerVersion", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int VALID = 1;", "modifier": "public static final", "type": "int", "declarator": "VALID = 1", "var_name": "VALID"}, {"original_string": "public static final int OUTDATED = 2;", "modifier": "public static final", "type": "int", "declarator": "OUTDATED = 2", "var_name": "OUTDATED"}, {"original_string": "public static final int NOT_CHECKED = 3;", "modifier": "public static final", "type": "int", "declarator": "NOT_CHECKED = 3", "var_name": "NOT_CHECKED"}, {"original_string": "@JsonField(name = \"minAndroid\")\n    String mMinHaloVersion;", "modifier": "@JsonField(name = \"minAndroid\")", "type": "String", "declarator": "mMinHaloVersion", "var_name": "mMinHaloVersion"}, {"original_string": "@JsonField(name = \"androidChangeLog\")\n    String mChangeLogUrl;", "modifier": "@JsonField(name = \"androidChangeLog\")", "type": "String", "declarator": "mChangeLogUrl", "var_name": "mChangeLogUrl"}], "methods": [{"identifier": "HaloServerVersion", "parameters": "()", "modifiers": "public", "return": "", "signature": " HaloServerVersion()", "full_signature": "public  HaloServerVersion()", "class_method_signature": "HaloServerVersion.HaloServerVersion()", "testcase": false, "constructor": true}, {"identifier": "HaloServerVersion", "parameters": "(@Nullable String changelogUrl, @Nullable String minAndroidVersion)", "modifiers": "public", "return": "", "signature": " HaloServerVersion(@Nullable String changelogUrl, @Nullable String minAndroidVersion)", "full_signature": "public  HaloServerVersion(@Nullable String changelogUrl, @Nullable String minAndroidVersion)", "class_method_signature": "HaloServerVersion.HaloServerVersion(@Nullable String changelogUrl, @Nullable String minAndroidVersion)", "testcase": false, "constructor": true}, {"identifier": "getHaloVersion", "parameters": "()", "modifiers": "@Api(1.2) @Nullable public", "return": "String", "signature": "String getHaloVersion()", "full_signature": "@Api(1.2) @Nullable public String getHaloVersion()", "class_method_signature": "HaloServerVersion.getHaloVersion()", "testcase": false, "constructor": false}, {"identifier": "getChangeLogUrl", "parameters": "()", "modifiers": "@Api(1.2) @Nullable public", "return": "String", "signature": "String getChangeLogUrl()", "full_signature": "@Api(1.2) @Nullable public String getChangeLogUrl()", "class_method_signature": "HaloServerVersion.getChangeLogUrl()", "testcase": false, "constructor": false}, {"identifier": "isOutdated", "parameters": "(@NonNull String version)", "modifiers": "@Api(1.2) public", "return": "boolean", "signature": "boolean isOutdated(@NonNull String version)", "full_signature": "@Api(1.2) public boolean isOutdated(@NonNull String version)", "class_method_signature": "HaloServerVersion.isOutdated(@NonNull String version)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "HaloServerVersion.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "HaloServerVersion.hashCode()", "testcase": false, "constructor": false}], "file": "sdk/halo-sdk/src/main/java/com/mobgen/halo/android/sdk/core/management/models/HaloServerVersion.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int hashCode() {\n        int result = mMinHaloVersion != null ? mMinHaloVersion.hashCode() : 0;\n        result = 31 * result + (mChangeLogUrl != null ? mChangeLogUrl.hashCode() : 0);\n        return result;\n    }", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "HaloServerVersion.hashCode()", "testcase": false, "constructor": false, "invocations": ["hashCode", "hashCode"]}, "repository": {"repo_id": 72189814, "url": "https://github.com/mobgen/halo-android", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 3343, "license": "licensed"}}