{"test_class": {"identifier": "PdfURLSourceTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-model/src/test/java/org/sejda/model/input/PdfURLSourceTest.java"}, "test_case": {"identifier": "testValidStream", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidStream() throws MalformedURLException {\n        URL url = new URL(\"http://www.sejda.org\");\n        PdfURLSource instance = PdfURLSource.newInstanceWithPassword(url, \"dsadsada\", \"dsdasdsa\");\n        assertNotNull(instance);\n    }", "signature": "void testValidStream()", "full_signature": "@Test public void testValidStream()", "class_method_signature": "PdfURLSourceTest.testValidStream()", "testcase": true, "constructor": false, "invocations": ["newInstanceWithPassword", "assertNotNull"]}, "focal_class": {"identifier": "PdfURLSource", "superclass": "extends AbstractPdfSource<URL>", "interfaces": "", "fields": [{"original_string": "@NotNull\n    private final URL url;", "modifier": "@NotNull\n    private final", "type": "URL", "declarator": "url", "var_name": "url"}], "methods": [{"identifier": "PdfURLSource", "parameters": "(URL url, String name, String password)", "modifiers": "private", "return": "", "signature": " PdfURLSource(URL url, String name, String password)", "full_signature": "private  PdfURLSource(URL url, String name, String password)", "class_method_signature": "PdfURLSource.PdfURLSource(URL url, String name, String password)", "testcase": false, "constructor": true}, {"identifier": "getSource", "parameters": "()", "modifiers": "@Override public", "return": "URL", "signature": "URL getSource()", "full_signature": "@Override public URL getSource()", "class_method_signature": "PdfURLSource.getSource()", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(PdfSourceOpener<T> opener)", "modifiers": "@Override public", "return": "T", "signature": "T open(PdfSourceOpener<T> opener)", "full_signature": "@Override public T open(PdfSourceOpener<T> opener)", "class_method_signature": "PdfURLSource.open(PdfSourceOpener<T> opener)", "testcase": false, "constructor": false}, {"identifier": "initializeSeekableSource", "parameters": "()", "modifiers": "@Override public", "return": "SeekableSource", "signature": "SeekableSource initializeSeekableSource()", "full_signature": "@Override public SeekableSource initializeSeekableSource()", "class_method_signature": "PdfURLSource.initializeSeekableSource()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PdfURLSource.toString()", "testcase": false, "constructor": false}, {"identifier": "newInstanceNoPassword", "parameters": "(URL url, String name)", "modifiers": "public static", "return": "PdfURLSource", "signature": "PdfURLSource newInstanceNoPassword(URL url, String name)", "full_signature": "public static PdfURLSource newInstanceNoPassword(URL url, String name)", "class_method_signature": "PdfURLSource.newInstanceNoPassword(URL url, String name)", "testcase": false, "constructor": false}, {"identifier": "newInstanceWithPassword", "parameters": "(URL url, String name, String password)", "modifiers": "public static", "return": "PdfURLSource", "signature": "PdfURLSource newInstanceWithPassword(URL url, String name, String password)", "full_signature": "public static PdfURLSource newInstanceWithPassword(URL url, String name, String password)", "class_method_signature": "PdfURLSource.newInstanceWithPassword(URL url, String name, String password)", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/input/PdfURLSource.java"}, "focal_method": {"identifier": "newInstanceWithPassword", "parameters": "(URL url, String name, String password)", "modifiers": "public static", "return": "PdfURLSource", "body": "public static PdfURLSource newInstanceWithPassword(URL url, String name, String password) {\n        if (url == null) {\n            throw new IllegalArgumentException(\"A not null url instance and a not blank name are expected.\");\n        }\n        return new PdfURLSource(url, name, password);\n    }", "signature": "PdfURLSource newInstanceWithPassword(URL url, String name, String password)", "full_signature": "public static PdfURLSource newInstanceWithPassword(URL url, String name, String password)", "class_method_signature": "PdfURLSource.newInstanceWithPassword(URL url, String name, String password)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}