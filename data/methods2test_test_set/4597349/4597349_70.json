{"test_class": {"identifier": "SwingButtonTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static XulRunner runner = null;", "modifier": "static", "type": "XulRunner", "declarator": "runner = null", "var_name": "runner"}, {"original_string": "static Document doc = null;", "modifier": "static", "type": "Document", "declarator": "doc = null", "var_name": "doc"}, {"original_string": "static XulDomContainer container;", "modifier": "static", "type": "XulDomContainer", "declarator": "container", "var_name": "container"}], "file": "swing/src/test/java/org/pentaho/ui/xul/swing/tags/SwingButtonTest.java"}, "test_case": {"identifier": "testGetImage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetImage() {\n    XulButton button1 = (XulButton) container.getDocumentRoot().getElementById( \"firstButton\" );\n    assertEquals( \"testImage.png\", button1.getImage() );\n  }", "signature": "void testGetImage()", "full_signature": "@Test public void testGetImage()", "class_method_signature": "SwingButtonTest.testGetImage()", "testcase": true, "constructor": false, "invocations": ["getElementById", "getDocumentRoot", "assertEquals", "getImage"]}, "focal_class": {"identifier": "SwingButton", "superclass": "extends SwingElement", "interfaces": "implements XulButton", "fields": [{"original_string": "private static final Log logger = LogFactory.getLog( SwingButton.class );", "modifier": "private static final", "type": "Log", "declarator": "logger = LogFactory.getLog( SwingButton.class )", "var_name": "logger"}, {"original_string": "private String image;", "modifier": "private", "type": "String", "declarator": "image", "var_name": "image"}, {"original_string": "private Direction dir;", "modifier": "private", "type": "Direction", "declarator": "dir", "var_name": "dir"}, {"original_string": "private String group;", "modifier": "private", "type": "String", "declarator": "group", "var_name": "group"}, {"original_string": "private Type type;", "modifier": "private", "type": "Type", "declarator": "type", "var_name": "type"}, {"original_string": "private ButtonGroup buttonGroup;", "modifier": "private", "type": "ButtonGroup", "declarator": "buttonGroup", "var_name": "buttonGroup"}, {"original_string": "private XulDomContainer domContainer;", "modifier": "private", "type": "XulDomContainer", "declarator": "domContainer", "var_name": "domContainer"}, {"original_string": "private String onclick;", "modifier": "private", "type": "String", "declarator": "onclick", "var_name": "onclick"}, {"original_string": "private boolean selected;", "modifier": "private", "type": "boolean", "declarator": "selected", "var_name": "selected"}], "methods": [{"identifier": "SwingButton", "parameters": "( Element self, XulComponent parent, XulDomContainer domContainer, String tagName )", "modifiers": "public", "return": "", "signature": " SwingButton( Element self, XulComponent parent, XulDomContainer domContainer, String tagName )", "full_signature": "public  SwingButton( Element self, XulComponent parent, XulDomContainer domContainer, String tagName )", "class_method_signature": "SwingButton.SwingButton( Element self, XulComponent parent, XulDomContainer domContainer, String tagName )", "testcase": false, "constructor": true}, {"identifier": "SwingButton", "parameters": "()", "modifiers": "public", "return": "", "signature": " SwingButton()", "full_signature": "public  SwingButton()", "class_method_signature": "SwingButton.SwingButton()", "testcase": false, "constructor": true}, {"identifier": "getButton", "parameters": "()", "modifiers": "protected", "return": "AbstractButton", "signature": "AbstractButton getButton()", "full_signature": "protected AbstractButton getButton()", "class_method_signature": "SwingButton.getButton()", "testcase": false, "constructor": false}, {"identifier": "onDomReady", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onDomReady()", "full_signature": "@Override public void onDomReady()", "class_method_signature": "SwingButton.onDomReady()", "testcase": false, "constructor": false}, {"identifier": "setButton", "parameters": "( final AbstractButton button )", "modifiers": "protected", "return": "void", "signature": "void setButton( final AbstractButton button )", "full_signature": "protected void setButton( final AbstractButton button )", "class_method_signature": "SwingButton.setButton( final AbstractButton button )", "testcase": false, "constructor": false}, {"identifier": "setLabel", "parameters": "( String label )", "modifiers": "public", "return": "void", "signature": "void setLabel( String label )", "full_signature": "public void setLabel( String label )", "class_method_signature": "SwingButton.setLabel( String label )", "testcase": false, "constructor": false}, {"identifier": "setOnclick", "parameters": "( final String method )", "modifiers": "public", "return": "void", "signature": "void setOnclick( final String method )", "full_signature": "public void setOnclick( final String method )", "class_method_signature": "SwingButton.setOnclick( final String method )", "testcase": false, "constructor": false}, {"identifier": "getOnclick", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOnclick()", "full_signature": "public String getOnclick()", "class_method_signature": "SwingButton.getOnclick()", "testcase": false, "constructor": false}, {"identifier": "getLabel", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLabel()", "full_signature": "public String getLabel()", "class_method_signature": "SwingButton.getLabel()", "testcase": false, "constructor": false}, {"identifier": "isDisabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDisabled()", "full_signature": "public boolean isDisabled()", "class_method_signature": "SwingButton.isDisabled()", "testcase": false, "constructor": false}, {"identifier": "setDisabled", "parameters": "( boolean dis )", "modifiers": "public", "return": "void", "signature": "void setDisabled( boolean dis )", "full_signature": "public void setDisabled( boolean dis )", "class_method_signature": "SwingButton.setDisabled( boolean dis )", "testcase": false, "constructor": false}, {"identifier": "getImage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getImage()", "full_signature": "public String getImage()", "class_method_signature": "SwingButton.getImage()", "testcase": false, "constructor": false}, {"identifier": "setImage", "parameters": "( String src )", "modifiers": "public", "return": "void", "signature": "void setImage( String src )", "full_signature": "public void setImage( String src )", "class_method_signature": "SwingButton.setImage( String src )", "testcase": false, "constructor": false}, {"identifier": "getDir", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDir()", "full_signature": "public String getDir()", "class_method_signature": "SwingButton.getDir()", "testcase": false, "constructor": false}, {"identifier": "setDir", "parameters": "( String dir )", "modifiers": "public", "return": "void", "signature": "void setDir( String dir )", "full_signature": "public void setDir( String dir )", "class_method_signature": "SwingButton.setDir( String dir )", "testcase": false, "constructor": false}, {"identifier": "layout", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void layout()", "full_signature": "@Override public void layout()", "class_method_signature": "SwingButton.layout()", "testcase": false, "constructor": false}, {"identifier": "getGroup", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getGroup()", "full_signature": "public String getGroup()", "class_method_signature": "SwingButton.getGroup()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getType()", "full_signature": "public String getType()", "class_method_signature": "SwingButton.getType()", "testcase": false, "constructor": false}, {"identifier": "setGroup", "parameters": "( final String group )", "modifiers": "public", "return": "void", "signature": "void setGroup( final String group )", "full_signature": "public void setGroup( final String group )", "class_method_signature": "SwingButton.setGroup( final String group )", "testcase": false, "constructor": false}, {"identifier": "setType", "parameters": "( String type )", "modifiers": "public", "return": "void", "signature": "void setType( String type )", "full_signature": "public void setType( String type )", "class_method_signature": "SwingButton.setType( String type )", "testcase": false, "constructor": false}, {"identifier": "setSelected", "parameters": "( String selected )", "modifiers": "public", "return": "void", "signature": "void setSelected( String selected )", "full_signature": "public void setSelected( String selected )", "class_method_signature": "SwingButton.setSelected( String selected )", "testcase": false, "constructor": false}, {"identifier": "isSelected", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSelected()", "full_signature": "public boolean isSelected()", "class_method_signature": "SwingButton.isSelected()", "testcase": false, "constructor": false}, {"identifier": "setSelected", "parameters": "( boolean selected )", "modifiers": "public", "return": "void", "signature": "void setSelected( boolean selected )", "full_signature": "public void setSelected( boolean selected )", "class_method_signature": "SwingButton.setSelected( boolean selected )", "testcase": false, "constructor": false}, {"identifier": "doClick", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void doClick()", "full_signature": "public void doClick()", "class_method_signature": "SwingButton.doClick()", "testcase": false, "constructor": false}], "file": "swing/src/main/java/org/pentaho/ui/xul/swing/tags/SwingButton.java"}, "focal_method": {"identifier": "getImage", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getImage() {\n    return this.image;\n\n  }", "signature": "String getImage()", "full_signature": "public String getImage()", "class_method_signature": "SwingButton.getImage()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4597349, "url": "https://github.com/pentaho/pentaho-commons-xul", "language": "Java", "is_fork": false, "fork_count": 108, "stargazer_count": 5, "size": 24225, "license": "licensed"}}