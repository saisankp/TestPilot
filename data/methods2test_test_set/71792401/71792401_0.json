{"test_class": {"identifier": "MyPhpRulesTest", "superclass": "", "interfaces": "", "fields": [], "file": "php-custom-rules/src/test/java/org/sonar/samples/php/MyPhpRulesTest.java"}, "test_case": {"identifier": "rules", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void rules() {\n    MyPhpRules rulesDefinition = new MyPhpRules();\n    RulesDefinition.Context context = new RulesDefinition.Context();\n    rulesDefinition.define(context);\n    RulesDefinition.Repository repository = context.repository(\"custom\");\n    assertEquals(2, repository.rules().size());\n  }", "signature": "void rules()", "full_signature": "@Test public void rules()", "class_method_signature": "MyPhpRulesTest.rules()", "testcase": true, "constructor": false, "invocations": ["define", "repository", "assertEquals", "size", "rules"]}, "focal_class": {"identifier": "MyPhpRules", "superclass": "", "interfaces": "implements RulesDefinition, PHPCustomRuleRepository", "fields": [], "methods": [{"identifier": "repositoryKey", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String repositoryKey()", "full_signature": "@Override public String repositoryKey()", "class_method_signature": "MyPhpRules.repositoryKey()", "testcase": false, "constructor": false}, {"identifier": "checkClasses", "parameters": "()", "modifiers": "@Override public", "return": "ImmutableList<Class>", "signature": "ImmutableList<Class> checkClasses()", "full_signature": "@Override public ImmutableList<Class> checkClasses()", "class_method_signature": "MyPhpRules.checkClasses()", "testcase": false, "constructor": false}, {"identifier": "define", "parameters": "(Context context)", "modifiers": "@Override public", "return": "void", "signature": "void define(Context context)", "full_signature": "@Override public void define(Context context)", "class_method_signature": "MyPhpRules.define(Context context)", "testcase": false, "constructor": false}, {"identifier": "loadResource", "parameters": "(String path)", "modifiers": "private", "return": "String", "signature": "String loadResource(String path)", "full_signature": "private String loadResource(String path)", "class_method_signature": "MyPhpRules.loadResource(String path)", "testcase": false, "constructor": false}], "file": "php-custom-rules/src/main/java/org/sonar/samples/php/MyPhpRules.java"}, "focal_method": {"identifier": "define", "parameters": "(Context context)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void define(Context context) {\n    NewRepository repository = context.createRepository(repositoryKey(), \"php\").setName(\"MyCompany Custom Repository\");\n\n    // Load rule meta data from annotations\n    RulesDefinitionAnnotationLoader annotationLoader = new RulesDefinitionAnnotationLoader();\n    checkClasses().forEach(ruleClass -> annotationLoader.load(repository, ruleClass));\n\n    // Optionally override html description from annotation with content from html files\n    repository.rules().forEach(rule -> rule.setHtmlDescription(loadResource(\"/org/sonar/l10n/php/rules/custom/\" + rule.key() + \".html\")));\n\n    // Optionally define remediation costs\n    Map<String, String> remediationCosts = new HashMap<>();\n    remediationCosts.put(ForbiddenFunctionUseCheck.KEY, \"5min\");\n    remediationCosts.put(OtherForbiddenFunctionUseCheck.KEY, \"5min\");\n    repository.rules().forEach(rule -> rule.setDebtRemediationFunction(\n      rule.debtRemediationFunctions().constantPerIssue(remediationCosts.get(rule.key()))));\n\n    repository.done();\n  }", "signature": "void define(Context context)", "full_signature": "@Override public void define(Context context)", "class_method_signature": "MyPhpRules.define(Context context)", "testcase": false, "constructor": false, "invocations": ["setName", "createRepository", "repositoryKey", "forEach", "checkClasses", "load", "forEach", "rules", "setHtmlDescription", "loadResource", "key", "put", "put", "forEach", "rules", "setDebtRemediationFunction", "constantPerIssue", "debtRemediationFunctions", "get", "key", "done"]}, "repository": {"repo_id": 71792401, "url": "https://github.com/SonarSource/sonar-custom-rules-examples", "language": "Java", "is_fork": false, "fork_count": 349, "stargazer_count": 156, "size": 190, "license": "licensed"}}