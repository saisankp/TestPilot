{"test_class": {"identifier": "ReservationClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ReservationClient client;", "modifier": "@Autowired\n    private", "type": "ReservationClient", "declarator": "client", "var_name": "client"}], "file": "consumer/src/test/java/com/example/consumer/ReservationClientTest.java"}, "test_case": {"identifier": "getAll", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getAll() {\n\n      /*  WireMock\n                .stubFor(WireMock\n                        .get(\"/reservations\")\n                        .willReturn(\n                                WireMock\n                                        .aResponse()\n                                        .withHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE)\n                                        .withBody(\"[ { \\\"id\\\":\\\"1\\\", \\\"reservationName\\\":\\\"Jane\\\" } ]\")\n                        ));\n*/\n\n        Flux<Reservation> allReservations = this.client.getAllReservations();\n        StepVerifier\n                .create(allReservations)\n                .expectNextMatches(r -> r.getName().equalsIgnoreCase(\"Jane\") && r.getId() != null)\n                .verifyComplete();\n\n    }", "signature": "void getAll()", "full_signature": "@Test public void getAll()", "class_method_signature": "ReservationClientTest.getAll()", "testcase": true, "constructor": false, "invocations": ["getAllReservations", "verifyComplete", "expectNextMatches", "create", "equalsIgnoreCase", "getName", "getId"]}, "focal_class": {"identifier": "ReservationClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final WebClient webClient;", "modifier": "private final", "type": "WebClient", "declarator": "webClient", "var_name": "webClient"}], "methods": [{"identifier": "getAllReservations", "parameters": "()", "modifiers": "public", "return": "Flux<Reservation>", "signature": "Flux<Reservation> getAllReservations()", "full_signature": "public Flux<Reservation> getAllReservations()", "class_method_signature": "ReservationClient.getAllReservations()", "testcase": false, "constructor": false}], "file": "consumer/src/main/java/com/example/consumer/ReservationClient.java"}, "focal_method": {"identifier": "getAllReservations", "parameters": "()", "modifiers": "public", "return": "Flux<Reservation>", "body": "public Flux<Reservation> getAllReservations() {\n        return this.webClient\n                .get()\n                .uri(\"http://localhost:8081/reservations\")\n                .retrieve()\n                .bodyToFlux(Reservation.class);\n    }", "signature": "Flux<Reservation> getAllReservations()", "full_signature": "public Flux<Reservation> getAllReservations()", "class_method_signature": "ReservationClient.getAllReservations()", "testcase": false, "constructor": false, "invocations": ["bodyToFlux", "retrieve", "uri", "get"]}, "repository": {"repo_id": 37813245, "url": "https://github.com/joshlong/bootiful-testing", "stars": 35, "created": "6/21/2015 3:07:04 PM +00:00", "updates": "2019-12-26T21:09:58+00:00", "fork": "False", "license": "licensed"}}