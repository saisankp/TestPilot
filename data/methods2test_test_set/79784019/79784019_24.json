{"test_class": {"identifier": "AbstractDynamoDaoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AmazonDynamoDB dynamodb;", "modifier": "private", "type": "AmazonDynamoDB", "declarator": "dynamodb", "var_name": "dynamodb"}, {"original_string": "private TestDynamoDao dao;", "modifier": "private", "type": "TestDynamoDao", "declarator": "dao", "var_name": "dao"}], "file": "stardao-dynamodb/src/test/java/io/stardog/stardao/dynamodb/AbstractDynamoDaoTest.java"}, "test_case": {"identifier": "testEnsureIndexes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEnsureIndexes() throws Exception {\n        dao.ensureIndexes();\n        Index index = dao.getTable().getIndex(\"orgId_createAt\");\n        assertNotNull(index);\n    }", "signature": "void testEnsureIndexes()", "full_signature": "@Test public void testEnsureIndexes()", "class_method_signature": "AbstractDynamoDaoTest.testEnsureIndexes()", "testcase": true, "constructor": false, "invocations": ["ensureIndexes", "getIndex", "getTable", "assertNotNull"]}, "focal_class": {"identifier": "AbstractDynamoDao", "superclass": "extends AbstractDao<M,P,K,I>", "interfaces": "", "fields": [{"original_string": "protected final ItemMapper<M> modelMapper;", "modifier": "protected final", "type": "ItemMapper<M>", "declarator": "modelMapper", "var_name": "modelMapper"}, {"original_string": "protected final ItemMapper<P> partialMapper;", "modifier": "protected final", "type": "ItemMapper<P>", "declarator": "partialMapper", "var_name": "partialMapper"}, {"original_string": "protected final AmazonDynamoDB db;", "modifier": "protected final", "type": "AmazonDynamoDB", "declarator": "db", "var_name": "db"}, {"original_string": "protected final Table table;", "modifier": "protected final", "type": "Table", "declarator": "table", "var_name": "table"}, {"original_string": "protected final String tableName;", "modifier": "protected final", "type": "String", "declarator": "tableName", "var_name": "tableName"}, {"original_string": "private final static Logger LOGGER = LoggerFactory.getLogger(AbstractDynamoDao.class);", "modifier": "private final static", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(AbstractDynamoDao.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "AbstractDynamoDao", "parameters": "(Class<M> modelClass, Class<P> partialClass, AmazonDynamoDB db, String tableName)", "modifiers": "public", "return": "", "signature": " AbstractDynamoDao(Class<M> modelClass, Class<P> partialClass, AmazonDynamoDB db, String tableName)", "full_signature": "public  AbstractDynamoDao(Class<M> modelClass, Class<P> partialClass, AmazonDynamoDB db, String tableName)", "class_method_signature": "AbstractDynamoDao.AbstractDynamoDao(Class<M> modelClass, Class<P> partialClass, AmazonDynamoDB db, String tableName)", "testcase": false, "constructor": true}, {"identifier": "AbstractDynamoDao", "parameters": "(Class<M> modelClass, Class<P> partialClass, AmazonDynamoDB db, String tableName, ItemMapper<M> modelMapper, ItemMapper<P> partialMapper)", "modifiers": "public", "return": "", "signature": " AbstractDynamoDao(Class<M> modelClass, Class<P> partialClass, AmazonDynamoDB db, String tableName, ItemMapper<M> modelMapper, ItemMapper<P> partialMapper)", "full_signature": "public  AbstractDynamoDao(Class<M> modelClass, Class<P> partialClass, AmazonDynamoDB db, String tableName, ItemMapper<M> modelMapper, ItemMapper<P> partialMapper)", "class_method_signature": "AbstractDynamoDao.AbstractDynamoDao(Class<M> modelClass, Class<P> partialClass, AmazonDynamoDB db, String tableName, ItemMapper<M> modelMapper, ItemMapper<P> partialMapper)", "testcase": false, "constructor": true}, {"identifier": "getTableName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTableName()", "full_signature": "public String getTableName()", "class_method_signature": "AbstractDynamoDao.getTableName()", "testcase": false, "constructor": false}, {"identifier": "getTable", "parameters": "()", "modifiers": "public", "return": "Table", "signature": "Table getTable()", "full_signature": "public Table getTable()", "class_method_signature": "AbstractDynamoDao.getTable()", "testcase": false, "constructor": false}, {"identifier": "getModelMapper", "parameters": "()", "modifiers": "protected", "return": "ItemMapper<M>", "signature": "ItemMapper<M> getModelMapper()", "full_signature": "protected ItemMapper<M> getModelMapper()", "class_method_signature": "AbstractDynamoDao.getModelMapper()", "testcase": false, "constructor": false}, {"identifier": "getPartialMapper", "parameters": "()", "modifiers": "protected", "return": "ItemMapper<P>", "signature": "ItemMapper<P> getPartialMapper()", "full_signature": "protected ItemMapper<P> getPartialMapper()", "class_method_signature": "AbstractDynamoDao.getPartialMapper()", "testcase": false, "constructor": false}, {"identifier": "generatePrimaryKeyValue", "parameters": "()", "modifiers": "protected", "return": "Object", "signature": "Object generatePrimaryKeyValue()", "full_signature": "protected Object generatePrimaryKeyValue()", "class_method_signature": "AbstractDynamoDao.generatePrimaryKeyValue()", "testcase": false, "constructor": false}, {"identifier": "toPrimaryKey", "parameters": "(K id)", "modifiers": "protected", "return": "PrimaryKey", "signature": "PrimaryKey toPrimaryKey(K id)", "full_signature": "protected PrimaryKey toPrimaryKey(K id)", "class_method_signature": "AbstractDynamoDao.toPrimaryKey(K id)", "testcase": false, "constructor": false}, {"identifier": "toStorageValue", "parameters": "(Object val)", "modifiers": "protected", "return": "Object", "signature": "Object toStorageValue(Object val)", "full_signature": "protected Object toStorageValue(Object val)", "class_method_signature": "AbstractDynamoDao.toStorageValue(Object val)", "testcase": false, "constructor": false}, {"identifier": "loadOpt", "parameters": "(K id)", "modifiers": "public", "return": "Optional<M>", "signature": "Optional<M> loadOpt(K id)", "full_signature": "public Optional<M> loadOpt(K id)", "class_method_signature": "AbstractDynamoDao.loadOpt(K id)", "testcase": false, "constructor": false}, {"identifier": "loadOpt", "parameters": "(K id, Iterable<String> fields)", "modifiers": "public", "return": "Optional<P>", "signature": "Optional<P> loadOpt(K id, Iterable<String> fields)", "full_signature": "public Optional<P> loadOpt(K id, Iterable<String> fields)", "class_method_signature": "AbstractDynamoDao.loadOpt(K id, Iterable<String> fields)", "testcase": false, "constructor": false}, {"identifier": "loadByIndex", "parameters": "(String indexName, String key, Object value)", "modifiers": "protected", "return": "M", "signature": "M loadByIndex(String indexName, String key, Object value)", "full_signature": "protected M loadByIndex(String indexName, String key, Object value)", "class_method_signature": "AbstractDynamoDao.loadByIndex(String indexName, String key, Object value)", "testcase": false, "constructor": false}, {"identifier": "loadByIndexOpt", "parameters": "(String indexName, String key, Object value)", "modifiers": "protected", "return": "Optional<M>", "signature": "Optional<M> loadByIndexOpt(String indexName, String key, Object value)", "full_signature": "protected Optional<M> loadByIndexOpt(String indexName, String key, Object value)", "class_method_signature": "AbstractDynamoDao.loadByIndexOpt(String indexName, String key, Object value)", "testcase": false, "constructor": false}, {"identifier": "iterateAll", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<M>", "signature": "Iterable<M> iterateAll()", "full_signature": "@Override public Iterable<M> iterateAll()", "class_method_signature": "AbstractDynamoDao.iterateAll()", "testcase": false, "constructor": false}, {"identifier": "scanAll", "parameters": "()", "modifiers": "public", "return": "Results<M,K>", "signature": "Results<M,K> scanAll()", "full_signature": "public Results<M,K> scanAll()", "class_method_signature": "AbstractDynamoDao.scanAll()", "testcase": false, "constructor": false}, {"identifier": "scan", "parameters": "(ScanSpec spec)", "modifiers": "protected", "return": "Results<M,K>", "signature": "Results<M,K> scan(ScanSpec spec)", "full_signature": "protected Results<M,K> scan(ScanSpec spec)", "class_method_signature": "AbstractDynamoDao.scan(ScanSpec spec)", "testcase": false, "constructor": false}, {"identifier": "findByIndex", "parameters": "(String indexName, QuerySpec spec)", "modifiers": "protected", "return": "Results<M,K>", "signature": "Results<M,K> findByIndex(String indexName, QuerySpec spec)", "full_signature": "protected Results<M,K> findByIndex(String indexName, QuerySpec spec)", "class_method_signature": "AbstractDynamoDao.findByIndex(String indexName, QuerySpec spec)", "testcase": false, "constructor": false}, {"identifier": "checkUniqueField", "parameters": "(String indexName, String field, Object value, K excludeId)", "modifiers": "protected", "return": "boolean", "signature": "boolean checkUniqueField(String indexName, String field, Object value, K excludeId)", "full_signature": "protected boolean checkUniqueField(String indexName, String field, Object value, K excludeId)", "class_method_signature": "AbstractDynamoDao.checkUniqueField(String indexName, String field, Object value, K excludeId)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(P partial, Instant createAt, I creatorId)", "modifiers": "@Override public", "return": "M", "signature": "M create(P partial, Instant createAt, I creatorId)", "full_signature": "@Override public M create(P partial, Instant createAt, I creatorId)", "class_method_signature": "AbstractDynamoDao.create(P partial, Instant createAt, I creatorId)", "testcase": false, "constructor": false}, {"identifier": "toCreateItem", "parameters": "(P partial, Instant createAt, I creatorId)", "modifiers": "protected", "return": "Item", "signature": "Item toCreateItem(P partial, Instant createAt, I creatorId)", "full_signature": "protected Item toCreateItem(P partial, Instant createAt, I creatorId)", "class_method_signature": "AbstractDynamoDao.toCreateItem(P partial, Instant createAt, I creatorId)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(K id, Update<P> update, Instant updateAt, I updaterId)", "modifiers": "public", "return": "void", "signature": "void update(K id, Update<P> update, Instant updateAt, I updaterId)", "full_signature": "public void update(K id, Update<P> update, Instant updateAt, I updaterId)", "class_method_signature": "AbstractDynamoDao.update(K id, Update<P> update, Instant updateAt, I updaterId)", "testcase": false, "constructor": false}, {"identifier": "updateAndReturn", "parameters": "(K id, Update<P> update, Instant updateAt, I updaterId)", "modifiers": "public", "return": "M", "signature": "M updateAndReturn(K id, Update<P> update, Instant updateAt, I updaterId)", "full_signature": "public M updateAndReturn(K id, Update<P> update, Instant updateAt, I updaterId)", "class_method_signature": "AbstractDynamoDao.updateAndReturn(K id, Update<P> update, Instant updateAt, I updaterId)", "testcase": false, "constructor": false}, {"identifier": "toUpdateItemSpec", "parameters": "(K id, Update<P> update, Instant updateAt, I updaterId)", "modifiers": "protected", "return": "UpdateItemSpec", "signature": "UpdateItemSpec toUpdateItemSpec(K id, Update<P> update, Instant updateAt, I updaterId)", "full_signature": "protected UpdateItemSpec toUpdateItemSpec(K id, Update<P> update, Instant updateAt, I updaterId)", "class_method_signature": "AbstractDynamoDao.toUpdateItemSpec(K id, Update<P> update, Instant updateAt, I updaterId)", "testcase": false, "constructor": false}, {"identifier": "updateOf", "parameters": "(P partial)", "modifiers": "public", "return": "Update<P>", "signature": "Update<P> updateOf(P partial)", "full_signature": "public Update<P> updateOf(P partial)", "class_method_signature": "AbstractDynamoDao.updateOf(P partial)", "testcase": false, "constructor": false}, {"identifier": "updateOf", "parameters": "(P partial, Iterable<String> removeFields)", "modifiers": "public", "return": "Update<P>", "signature": "Update<P> updateOf(P partial, Iterable<String> removeFields)", "full_signature": "public Update<P> updateOf(P partial, Iterable<String> removeFields)", "class_method_signature": "AbstractDynamoDao.updateOf(P partial, Iterable<String> removeFields)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(K id)", "modifiers": "@Override public", "return": "void", "signature": "void delete(K id)", "full_signature": "@Override public void delete(K id)", "class_method_signature": "AbstractDynamoDao.delete(K id)", "testcase": false, "constructor": false}, {"identifier": "getKeySchema", "parameters": "()", "modifiers": "public abstract", "return": "List<KeySchemaElement>", "signature": "List<KeySchemaElement> getKeySchema()", "full_signature": "public abstract List<KeySchemaElement> getKeySchema()", "class_method_signature": "AbstractDynamoDao.getKeySchema()", "testcase": false, "constructor": false}, {"identifier": "getAttributeDefinitions", "parameters": "()", "modifiers": "public abstract", "return": "List<AttributeDefinition>", "signature": "List<AttributeDefinition> getAttributeDefinitions()", "full_signature": "public abstract List<AttributeDefinition> getAttributeDefinitions()", "class_method_signature": "AbstractDynamoDao.getAttributeDefinitions()", "testcase": false, "constructor": false}, {"identifier": "getGlobalSecondaryIndexes", "parameters": "()", "modifiers": "public", "return": "List<GlobalSecondaryIndex>", "signature": "List<GlobalSecondaryIndex> getGlobalSecondaryIndexes()", "full_signature": "public List<GlobalSecondaryIndex> getGlobalSecondaryIndexes()", "class_method_signature": "AbstractDynamoDao.getGlobalSecondaryIndexes()", "testcase": false, "constructor": false}, {"identifier": "initTable", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void initTable()", "full_signature": "public void initTable()", "class_method_signature": "AbstractDynamoDao.initTable()", "testcase": false, "constructor": false}, {"identifier": "dropTable", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void dropTable()", "full_signature": "public void dropTable()", "class_method_signature": "AbstractDynamoDao.dropTable()", "testcase": false, "constructor": false}, {"identifier": "copyTable", "parameters": "(AmazonDynamoDB sourceDb, String sourceTable)", "modifiers": "public", "return": "void", "signature": "void copyTable(AmazonDynamoDB sourceDb, String sourceTable)", "full_signature": "public void copyTable(AmazonDynamoDB sourceDb, String sourceTable)", "class_method_signature": "AbstractDynamoDao.copyTable(AmazonDynamoDB sourceDb, String sourceTable)", "testcase": false, "constructor": false}, {"identifier": "ensureIndexes", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void ensureIndexes()", "full_signature": "public void ensureIndexes()", "class_method_signature": "AbstractDynamoDao.ensureIndexes()", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(List<AttributeDefinition> attribs, List<KeySchemaElement> keySchema, KeyType type)", "modifiers": "protected final", "return": "AttributeDefinition", "signature": "AttributeDefinition getAttribute(List<AttributeDefinition> attribs, List<KeySchemaElement> keySchema, KeyType type)", "full_signature": "protected final AttributeDefinition getAttribute(List<AttributeDefinition> attribs, List<KeySchemaElement> keySchema, KeyType type)", "class_method_signature": "AbstractDynamoDao.getAttribute(List<AttributeDefinition> attribs, List<KeySchemaElement> keySchema, KeyType type)", "testcase": false, "constructor": false}, {"identifier": "checkIndex", "parameters": "(List<GlobalSecondaryIndexDescription> actualIndexes, GlobalSecondaryIndex index)", "modifiers": "private", "return": "boolean", "signature": "boolean checkIndex(List<GlobalSecondaryIndexDescription> actualIndexes, GlobalSecondaryIndex index)", "full_signature": "private boolean checkIndex(List<GlobalSecondaryIndexDescription> actualIndexes, GlobalSecondaryIndex index)", "class_method_signature": "AbstractDynamoDao.checkIndex(List<GlobalSecondaryIndexDescription> actualIndexes, GlobalSecondaryIndex index)", "testcase": false, "constructor": false}], "file": "stardao-dynamodb/src/main/java/io/stardog/stardao/dynamodb/AbstractDynamoDao.java"}, "focal_method": {"identifier": "ensureIndexes", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void ensureIndexes() {\n        TableDescription desc = getTable().describe();\n        List<AttributeDefinition> actualAttribs = desc.getAttributeDefinitions();\n        List<GlobalSecondaryIndexDescription> actualIndexes = desc.getGlobalSecondaryIndexes();\n\n        List<AttributeDefinition> desiredAttribs = getAttributeDefinitions();\n        List<GlobalSecondaryIndex> desiredIndexes = getGlobalSecondaryIndexes();\n        for (GlobalSecondaryIndex index : desiredIndexes) {\n            if (!checkIndex(actualIndexes, index)) {\n                CreateGlobalSecondaryIndexAction create = new CreateGlobalSecondaryIndexAction()\n                        .withIndexName(index.getIndexName())\n                        .withKeySchema(index.getKeySchema())\n                        .withProvisionedThroughput(index.getProvisionedThroughput())\n                        .withProjection(index.getProjection());\n                AttributeDefinition attrHash = getAttribute(desiredAttribs, index.getKeySchema(), KeyType.HASH);\n                AttributeDefinition attrRange = getAttribute(desiredAttribs, index.getKeySchema(), KeyType.RANGE);\n                Index created;\n                if (attrRange == null) {\n                    created = getTable().createGSI(create, attrHash);\n                } else {\n                    created = getTable().createGSI(create, attrHash, attrRange);\n                }\n                try {\n                    created.waitForActive();\n                } catch (InterruptedException e) {\n                    LOGGER.warn(\"InterruptedException while waiting for index creation: \" + created, e);\n                }\n            }\n        }\n    }", "signature": "void ensureIndexes()", "full_signature": "public void ensureIndexes()", "class_method_signature": "AbstractDynamoDao.ensureIndexes()", "testcase": false, "constructor": false, "invocations": ["describe", "getTable", "getAttributeDefinitions", "getGlobalSecondaryIndexes", "getAttributeDefinitions", "getGlobalSecondaryIndexes", "checkIndex", "withProjection", "withProvisionedThroughput", "withKeySchema", "withIndexName", "getIndexName", "getKeySchema", "getProvisionedThroughput", "getProjection", "getAttribute", "getKeySchema", "getAttribute", "getKeySchema", "createGSI", "getTable", "createGSI", "getTable", "waitForActive", "warn"]}, "repository": {"repo_id": 79784019, "url": "https://github.com/stardogventures/stardao", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 8, "size": 219, "license": "licensed"}}