{"test_class": {"identifier": "ElasticsearchQueryStoreTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ObjectMapper mapper = new ObjectMapper();", "modifier": "private static final", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}, {"original_string": "private static ElasticsearchConnection elasticsearchConnection;", "modifier": "private static", "type": "ElasticsearchConnection", "declarator": "elasticsearchConnection", "var_name": "elasticsearchConnection"}, {"original_string": "private static HazelcastInstance hazelcastInstance;", "modifier": "private static", "type": "HazelcastInstance", "declarator": "hazelcastInstance", "var_name": "hazelcastInstance"}, {"original_string": "private DataStore dataStore;", "modifier": "private", "type": "DataStore", "declarator": "dataStore", "var_name": "dataStore"}, {"original_string": "private ElasticsearchQueryStore queryStore;", "modifier": "private", "type": "ElasticsearchQueryStore", "declarator": "queryStore", "var_name": "queryStore"}, {"original_string": "private TableMetadataManager tableMetadataManager;", "modifier": "private", "type": "TableMetadataManager", "declarator": "tableMetadataManager", "var_name": "tableMetadataManager"}, {"original_string": "private TextNodeRemoverConfiguration removerConfiguration;", "modifier": "private", "type": "TextNodeRemoverConfiguration", "declarator": "removerConfiguration", "var_name": "removerConfiguration"}], "file": "foxtrot-core/src/test/java/com/flipkart/foxtrot/core/querystore/impl/ElasticsearchQueryStoreTest.java"}, "test_case": {"identifier": "testGetFieldMappings", "parameters": "()", "modifiers": "@Test @Ignore public", "return": "void", "body": "@Test\n    @Ignore\n    public void testGetFieldMappings() throws FoxtrotException, InterruptedException {\n        doReturn(TestUtils.getMappingDocuments(mapper)).when(dataStore)\n                .saveAll(any(Table.class), anyListOf(Document.class));\n        queryStore.save(TestUtils.TEST_TABLE_NAME, TestUtils.getMappingDocuments(mapper));\n        await().pollDelay(500, TimeUnit.MILLISECONDS).until(() -> true);\n\n        Set<FieldMetadata> mappings = new HashSet<FieldMetadata>();\n        mappings.add(FieldMetadata.builder()\n                .field(\"time\")\n                .type(FieldType.LONG)\n                .build());\n        mappings.add(FieldMetadata.builder()\n                .field(\"word\")\n                .type(FieldType.STRING)\n                .build());\n        mappings.add(FieldMetadata.builder()\n                .field(\"data.data\")\n                .type(FieldType.STRING)\n                .build());\n        mappings.add(FieldMetadata.builder()\n                .field(\"header.hello\")\n                .type(FieldType.STRING)\n                .build());\n        mappings.add(FieldMetadata.builder()\n                .field(\"head.hello\")\n                .type(FieldType.LONG)\n                .build());\n\n        TableFieldMapping tableFieldMapping = new TableFieldMapping(TestUtils.TEST_TABLE_NAME, mappings);\n        TableFieldMapping responseMapping = queryStore.getFieldMappings(TestUtils.TEST_TABLE_NAME);\n\n        assertEquals(tableFieldMapping.getTable(), responseMapping.getTable());\n        assertEquals(tableFieldMapping.getMappings(), responseMapping.getMappings());\n    }", "signature": "void testGetFieldMappings()", "full_signature": "@Test @Ignore public void testGetFieldMappings()", "class_method_signature": "ElasticsearchQueryStoreTest.testGetFieldMappings()", "testcase": true, "constructor": false, "invocations": ["saveAll", "when", "doReturn", "getMappingDocuments", "any", "anyListOf", "save", "getMappingDocuments", "until", "pollDelay", "await", "add", "build", "type", "field", "builder", "add", "build", "type", "field", "builder", "add", "build", "type", "field", "builder", "add", "build", "type", "field", "builder", "add", "build", "type", "field", "builder", "getFieldMappings", "assertEquals", "getTable", "getTable", "assertEquals", "getMappings", "getMappings"]}, "focal_class": {"identifier": "ElasticsearchQueryStore", "superclass": "", "interfaces": "implements QueryStore", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ElasticsearchQueryStore.class.getSimpleName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ElasticsearchQueryStore.class.getSimpleName())", "var_name": "logger"}, {"original_string": "private static final String TABLE_META = \"tableMeta\";", "modifier": "private static final", "type": "String", "declarator": "TABLE_META = \"tableMeta\"", "var_name": "TABLE_META"}, {"original_string": "private static final String DATA_STORE = \"dataStore\";", "modifier": "private static final", "type": "String", "declarator": "DATA_STORE = \"dataStore\"", "var_name": "DATA_STORE"}, {"original_string": "private static final String QUERY_STORE = \"queryStore\";", "modifier": "private static final", "type": "String", "declarator": "QUERY_STORE = \"queryStore\"", "var_name": "QUERY_STORE"}, {"original_string": "private static final String UNKNOWN_TABLE_ERROR_MESSAGE = \"unknown_table table:%s\";", "modifier": "private static final", "type": "String", "declarator": "UNKNOWN_TABLE_ERROR_MESSAGE = \"unknown_table table:%s\"", "var_name": "UNKNOWN_TABLE_ERROR_MESSAGE"}, {"original_string": "private final ElasticsearchConnection connection;", "modifier": "private final", "type": "ElasticsearchConnection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private final DataStore dataStore;", "modifier": "private final", "type": "DataStore", "declarator": "dataStore", "var_name": "dataStore"}, {"original_string": "private final TableMetadataManager tableMetadataManager;", "modifier": "private final", "type": "TableMetadataManager", "declarator": "tableMetadataManager", "var_name": "tableMetadataManager"}, {"original_string": "private final List<IndexerEventMutator> mutators;", "modifier": "private final", "type": "List<IndexerEventMutator>", "declarator": "mutators", "var_name": "mutators"}, {"original_string": "private final ObjectMapper mapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "private final CardinalityConfig cardinalityConfig;", "modifier": "private final", "type": "CardinalityConfig", "declarator": "cardinalityConfig", "var_name": "cardinalityConfig"}], "methods": [{"identifier": "ElasticsearchQueryStore", "parameters": "(TableMetadataManager tableMetadataManager,\n                                   ElasticsearchConnection connection,\n                                   DataStore dataStore,\n                                   List<IndexerEventMutator> mutators,\n                                   ObjectMapper mapper,\n                                   CardinalityConfig cardinalityConfig)", "modifiers": "@Inject public", "return": "", "signature": " ElasticsearchQueryStore(TableMetadataManager tableMetadataManager,\n                                   ElasticsearchConnection connection,\n                                   DataStore dataStore,\n                                   List<IndexerEventMutator> mutators,\n                                   ObjectMapper mapper,\n                                   CardinalityConfig cardinalityConfig)", "full_signature": "@Inject public  ElasticsearchQueryStore(TableMetadataManager tableMetadataManager,\n                                   ElasticsearchConnection connection,\n                                   DataStore dataStore,\n                                   List<IndexerEventMutator> mutators,\n                                   ObjectMapper mapper,\n                                   CardinalityConfig cardinalityConfig)", "class_method_signature": "ElasticsearchQueryStore.ElasticsearchQueryStore(TableMetadataManager tableMetadataManager,\n                                   ElasticsearchConnection connection,\n                                   DataStore dataStore,\n                                   List<IndexerEventMutator> mutators,\n                                   ObjectMapper mapper,\n                                   CardinalityConfig cardinalityConfig)", "testcase": false, "constructor": true}, {"identifier": "initializeTable", "parameters": "(String table)", "modifiers": "@Override @Timed public", "return": "void", "signature": "void initializeTable(String table)", "full_signature": "@Override @Timed public void initializeTable(String table)", "class_method_signature": "ElasticsearchQueryStore.initializeTable(String table)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(String table, Document document)", "modifiers": "@Override @Timed public", "return": "void", "signature": "void save(String table, Document document)", "full_signature": "@Override @Timed public void save(String table, Document document)", "class_method_signature": "ElasticsearchQueryStore.save(String table, Document document)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(String table, List<Document> documents)", "modifiers": "@Override @Timed public", "return": "void", "signature": "void save(String table, List<Document> documents)", "full_signature": "@Override @Timed public void save(String table, List<Document> documents)", "class_method_signature": "ElasticsearchQueryStore.save(String table, List<Document> documents)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String table, String id)", "modifiers": "@Override @Timed public", "return": "Document", "signature": "Document get(String table, String id)", "full_signature": "@Override @Timed public Document get(String table, String id)", "class_method_signature": "ElasticsearchQueryStore.get(String table, String id)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "(String table, List<String> ids)", "modifiers": "@Override public", "return": "List<Document>", "signature": "List<Document> getAll(String table, List<String> ids)", "full_signature": "@Override public List<Document> getAll(String table, List<String> ids)", "class_method_signature": "ElasticsearchQueryStore.getAll(String table, List<String> ids)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "(String table, List<String> ids, boolean bypassMetalookup)", "modifiers": "@Override @Timed public", "return": "List<Document>", "signature": "List<Document> getAll(String table, List<String> ids, boolean bypassMetalookup)", "full_signature": "@Override @Timed public List<Document> getAll(String table, List<String> ids, boolean bypassMetalookup)", "class_method_signature": "ElasticsearchQueryStore.getAll(String table, List<String> ids, boolean bypassMetalookup)", "testcase": false, "constructor": false}, {"identifier": "cleanupAll", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void cleanupAll()", "full_signature": "@Override public void cleanupAll()", "class_method_signature": "ElasticsearchQueryStore.cleanupAll()", "testcase": false, "constructor": false}, {"identifier": "cleanup", "parameters": "(final String table)", "modifiers": "@Override @Timed public", "return": "void", "signature": "void cleanup(final String table)", "full_signature": "@Override @Timed public void cleanup(final String table)", "class_method_signature": "ElasticsearchQueryStore.cleanup(final String table)", "testcase": false, "constructor": false}, {"identifier": "cleanup", "parameters": "(Set<String> tables)", "modifiers": "@Override @Timed public", "return": "void", "signature": "void cleanup(Set<String> tables)", "full_signature": "@Override @Timed public void cleanup(Set<String> tables)", "class_method_signature": "ElasticsearchQueryStore.cleanup(Set<String> tables)", "testcase": false, "constructor": false}, {"identifier": "getClusterHealth", "parameters": "()", "modifiers": "@Override public", "return": "ClusterHealthResponse", "signature": "ClusterHealthResponse getClusterHealth()", "full_signature": "@Override public ClusterHealthResponse getClusterHealth()", "class_method_signature": "ElasticsearchQueryStore.getClusterHealth()", "testcase": false, "constructor": false}, {"identifier": "getNodeStats", "parameters": "()", "modifiers": "@Override public", "return": "NodesStatsResponse", "signature": "NodesStatsResponse getNodeStats()", "full_signature": "@Override public NodesStatsResponse getNodeStats()", "class_method_signature": "ElasticsearchQueryStore.getNodeStats()", "testcase": false, "constructor": false}, {"identifier": "getIndicesStats", "parameters": "()", "modifiers": "@Override public", "return": "IndicesStatsResponse", "signature": "IndicesStatsResponse getIndicesStats()", "full_signature": "@Override public IndicesStatsResponse getIndicesStats()", "class_method_signature": "ElasticsearchQueryStore.getIndicesStats()", "testcase": false, "constructor": false}, {"identifier": "getFieldMappings", "parameters": "(String table)", "modifiers": "@Override public", "return": "TableFieldMapping", "signature": "TableFieldMapping getFieldMappings(String table)", "full_signature": "@Override public TableFieldMapping getFieldMappings(String table)", "class_method_signature": "ElasticsearchQueryStore.getFieldMappings(String table)", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(String table, Document document)", "modifiers": "private", "return": "Map<String, Object>", "signature": "Map<String, Object> convert(String table, Document document)", "full_signature": "private Map<String, Object> convert(String table, Document document)", "class_method_signature": "ElasticsearchQueryStore.convert(String table, Document document)", "testcase": false, "constructor": false}, {"identifier": "deleteIndices", "parameters": "(List<String> indicesToDelete)", "modifiers": "private", "return": "void", "signature": "void deleteIndices(List<String> indicesToDelete)", "full_signature": "private void deleteIndices(List<String> indicesToDelete)", "class_method_signature": "ElasticsearchQueryStore.deleteIndices(List<String> indicesToDelete)", "testcase": false, "constructor": false}, {"identifier": "getIndicesToDelete", "parameters": "(Set<String> tables, Set<String> currentIndices)", "modifiers": "private", "return": "List<String>", "signature": "List<String> getIndicesToDelete(Set<String> tables, Set<String> currentIndices)", "full_signature": "private List<String> getIndicesToDelete(Set<String> tables, Set<String> currentIndices)", "class_method_signature": "ElasticsearchQueryStore.getIndicesToDelete(Set<String> tables, Set<String> currentIndices)", "testcase": false, "constructor": false}], "file": "foxtrot-core/src/main/java/com/flipkart/foxtrot/core/querystore/impl/ElasticsearchQueryStore.java"}, "focal_method": {"identifier": "getFieldMappings", "parameters": "(String table)", "modifiers": "@Override public", "return": "TableFieldMapping", "body": "@Override\n    public TableFieldMapping getFieldMappings(String table) {\n        return tableMetadataManager.getFieldMappings(table, false, false);\n    }", "signature": "TableFieldMapping getFieldMappings(String table)", "full_signature": "@Override public TableFieldMapping getFieldMappings(String table)", "class_method_signature": "ElasticsearchQueryStore.getFieldMappings(String table)", "testcase": false, "constructor": false, "invocations": ["getFieldMappings"]}, "repository": {"repo_id": 19980663, "url": "https://github.com/Flipkart/foxtrot", "stars": 22, "created": "5/20/2014 12:52:55 PM +00:00", "updates": "2020-01-07T07:05:03+00:00", "fork": "False", "license": "licensed"}}