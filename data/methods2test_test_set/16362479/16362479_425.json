{"test_class": {"identifier": "DatastoreContextIntrospectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final AbstractDatastoreContextIntrospectorFactory INTROSPECTOR_FACTORY =\n            new DefaultDatastoreContextIntrospectorFactory(new BindingCodecContext(\n                BindingRuntimeHelpers.createRuntimeContext(DataStorePropertiesContainer.class)));", "modifier": "static final", "type": "AbstractDatastoreContextIntrospectorFactory", "declarator": "INTROSPECTOR_FACTORY =\n            new DefaultDatastoreContextIntrospectorFactory(new BindingCodecContext(\n                BindingRuntimeHelpers.createRuntimeContext(DataStorePropertiesContainer.class)))", "var_name": "INTROSPECTOR_FACTORY"}], "file": "opendaylight/md-sal/sal-distributed-datastore/src/test/java/org/opendaylight/controller/cluster/datastore/DatastoreContextIntrospectorTest.java"}, "test_case": {"identifier": "testYangDefaults", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testYangDefaults() {\n        final DatastoreContextIntrospector introspector = INTROSPECTOR_FACTORY.newInstance(\n                DatastoreContext.newBuilder().shardBatchedModificationCount(2)\n                .transactionDebugContextEnabled(true).build());\n        DatastoreContext context = introspector.getContext();\n\n        assertEquals(1000, context.getShardBatchedModificationCount());\n        assertFalse(context.isTransactionDebugContextEnabled());\n    }", "signature": "void testYangDefaults()", "full_signature": "@Test public void testYangDefaults()", "class_method_signature": "DatastoreContextIntrospectorTest.testYangDefaults()", "testcase": true, "constructor": false, "invocations": ["newInstance", "build", "transactionDebugContextEnabled", "shardBatchedModificationCount", "newBuilder", "getContext", "assertEquals", "getShardBatchedModificationCount", "assertFalse", "isTransactionDebugContextEnabled"]}, "focal_class": {"identifier": "DatastoreContextIntrospector", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(DatastoreContextIntrospector.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(DatastoreContextIntrospector.class)", "var_name": "LOG"}, {"original_string": "private static final Map<String, Entry<Class<?>, Method>> DATA_STORE_PROP_INFO = new HashMap<>();", "modifier": "private static final", "type": "Map<String, Entry<Class<?>, Method>>", "declarator": "DATA_STORE_PROP_INFO = new HashMap<>()", "var_name": "DATA_STORE_PROP_INFO"}, {"original_string": "private static final Map<Class<?>, Constructor<?>> CONSTRUCTORS = new HashMap<>();", "modifier": "private static final", "type": "Map<Class<?>, Constructor<?>>", "declarator": "CONSTRUCTORS = new HashMap<>()", "var_name": "CONSTRUCTORS"}, {"original_string": "private static final Map<Class<?>, Method> YANG_TYPE_GETTERS = new HashMap<>();", "modifier": "private static final", "type": "Map<Class<?>, Method>", "declarator": "YANG_TYPE_GETTERS = new HashMap<>()", "var_name": "YANG_TYPE_GETTERS"}, {"original_string": "private static final Map<String, Method> BUILDER_SETTERS = new HashMap<>();", "modifier": "private static final", "type": "Map<String, Method>", "declarator": "BUILDER_SETTERS = new HashMap<>()", "var_name": "BUILDER_SETTERS"}, {"original_string": "private static final ImmutableMap<Class<?>, Function<String, Object>> UINT_FACTORIES =\n            ImmutableMap.<Class<?>, Function<String, Object>>builder()\n            .put(Uint8.class, Uint8::valueOf)\n            .put(Uint16.class, Uint16::valueOf)\n            .put(Uint32.class, Uint32::valueOf)\n            .put(Uint64.class, Uint64::valueOf)\n            .build();", "modifier": "private static final", "type": "ImmutableMap<Class<?>, Function<String, Object>>", "declarator": "UINT_FACTORIES =\n            ImmutableMap.<Class<?>, Function<String, Object>>builder()\n            .put(Uint8.class, Uint8::valueOf)\n            .put(Uint16.class, Uint16::valueOf)\n            .put(Uint32.class, Uint32::valueOf)\n            .put(Uint64.class, Uint64::valueOf)\n            .build()", "var_name": "UINT_FACTORIES"}, {"original_string": "@GuardedBy(value = \"this\")\n    private DatastoreContext context;", "modifier": "@GuardedBy(value = \"this\")\n    private", "type": "DatastoreContext", "declarator": "context", "var_name": "context"}, {"original_string": "@GuardedBy(value = \"this\")\n    private Map<String, Object> currentProperties;", "modifier": "@GuardedBy(value = \"this\")\n    private", "type": "Map<String, Object>", "declarator": "currentProperties", "var_name": "currentProperties"}], "methods": [{"identifier": "introspectPrimitiveTypes", "parameters": "()", "modifiers": "@SuppressWarnings(\"squid:S1166\") private static", "return": "void", "signature": "void introspectPrimitiveTypes()", "full_signature": "@SuppressWarnings(\"squid:S1166\") private static void introspectPrimitiveTypes()", "class_method_signature": "DatastoreContextIntrospector.introspectPrimitiveTypes()", "testcase": false, "constructor": false}, {"identifier": "introspectDatastoreContextBuilder", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void introspectDatastoreContextBuilder()", "full_signature": "private static void introspectDatastoreContextBuilder()", "class_method_signature": "DatastoreContextIntrospector.introspectDatastoreContextBuilder()", "testcase": false, "constructor": false}, {"identifier": "introspectDataStoreProperties", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void introspectDataStoreProperties()", "full_signature": "private static void introspectDataStoreProperties()", "class_method_signature": "DatastoreContextIntrospector.introspectDataStoreProperties()", "testcase": false, "constructor": false}, {"identifier": "getPropertyName", "parameters": "(final Method method)", "modifiers": "private static", "return": "String", "signature": "String getPropertyName(final Method method)", "full_signature": "private static String getPropertyName(final Method method)", "class_method_signature": "DatastoreContextIntrospector.getPropertyName(final Method method)", "testcase": false, "constructor": false}, {"identifier": "processDataStoreProperty", "parameters": "(final String name, final Class<?> propertyType,\n            final Method readMethod)", "modifiers": "@SuppressWarnings(\"checkstyle:IllegalCatch\") private static", "return": "void", "signature": "void processDataStoreProperty(final String name, final Class<?> propertyType,\n            final Method readMethod)", "full_signature": "@SuppressWarnings(\"checkstyle:IllegalCatch\") private static void processDataStoreProperty(final String name, final Class<?> propertyType,\n            final Method readMethod)", "class_method_signature": "DatastoreContextIntrospector.processDataStoreProperty(final String name, final Class<?> propertyType,\n            final Method readMethod)", "testcase": false, "constructor": false}, {"identifier": "processPropertyType", "parameters": "(final Class<?> propertyType)", "modifiers": "private static", "return": "void", "signature": "void processPropertyType(final Class<?> propertyType)", "full_signature": "private static void processPropertyType(final Class<?> propertyType)", "class_method_signature": "DatastoreContextIntrospector.processPropertyType(final Class<?> propertyType)", "testcase": false, "constructor": false}, {"identifier": "findYangTypeGetter", "parameters": "(final Class<?> type, final String propertyName)", "modifiers": "private static", "return": "void", "signature": "void findYangTypeGetter(final Class<?> type, final String propertyName)", "full_signature": "private static void findYangTypeGetter(final Class<?> type, final String propertyName)", "class_method_signature": "DatastoreContextIntrospector.findYangTypeGetter(final Class<?> type, final String propertyName)", "testcase": false, "constructor": false}, {"identifier": "DatastoreContextIntrospector", "parameters": "(final DatastoreContext context,\n            final DataStorePropertiesContainer defaultPropsContainer)", "modifiers": "public", "return": "", "signature": " DatastoreContextIntrospector(final DatastoreContext context,\n            final DataStorePropertiesContainer defaultPropsContainer)", "full_signature": "public  DatastoreContextIntrospector(final DatastoreContext context,\n            final DataStorePropertiesContainer defaultPropsContainer)", "class_method_signature": "DatastoreContextIntrospector.DatastoreContextIntrospector(final DatastoreContext context,\n            final DataStorePropertiesContainer defaultPropsContainer)", "testcase": false, "constructor": true}, {"identifier": "getContext", "parameters": "()", "modifiers": "public synchronized", "return": "DatastoreContext", "signature": "DatastoreContext getContext()", "full_signature": "public synchronized DatastoreContext getContext()", "class_method_signature": "DatastoreContextIntrospector.getContext()", "testcase": false, "constructor": false}, {"identifier": "newContextFactory", "parameters": "()", "modifiers": "public", "return": "DatastoreContextFactory", "signature": "DatastoreContextFactory newContextFactory()", "full_signature": "public DatastoreContextFactory newContextFactory()", "class_method_signature": "DatastoreContextIntrospector.newContextFactory()", "testcase": false, "constructor": false}, {"identifier": "getShardDatastoreContext", "parameters": "(final String forShardName)", "modifiers": "public synchronized", "return": "DatastoreContext", "signature": "DatastoreContext getShardDatastoreContext(final String forShardName)", "full_signature": "public synchronized DatastoreContext getShardDatastoreContext(final String forShardName)", "class_method_signature": "DatastoreContextIntrospector.getShardDatastoreContext(final String forShardName)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(final Map<String, Object> properties)", "modifiers": "public synchronized", "return": "boolean", "signature": "boolean update(final Map<String, Object> properties)", "full_signature": "public synchronized boolean update(final Map<String, Object> properties)", "class_method_signature": "DatastoreContextIntrospector.update(final Map<String, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "getSortedKeysByDatastoreType", "parameters": "(final Collection<String> inKeys,\n            final String dataStoreTypePrefix)", "modifiers": "private static", "return": "ArrayList<String>", "signature": "ArrayList<String> getSortedKeysByDatastoreType(final Collection<String> inKeys,\n            final String dataStoreTypePrefix)", "full_signature": "private static ArrayList<String> getSortedKeysByDatastoreType(final Collection<String> inKeys,\n            final String dataStoreTypePrefix)", "class_method_signature": "DatastoreContextIntrospector.getSortedKeysByDatastoreType(final Collection<String> inKeys,\n            final String dataStoreTypePrefix)", "testcase": false, "constructor": false}, {"identifier": "convertValueAndInvokeSetter", "parameters": "(final String inKey, final Object inValue, final Builder builder)", "modifiers": "@SuppressWarnings(\"checkstyle:IllegalCatch\") private", "return": "boolean", "signature": "boolean convertValueAndInvokeSetter(final String inKey, final Object inValue, final Builder builder)", "full_signature": "@SuppressWarnings(\"checkstyle:IllegalCatch\") private boolean convertValueAndInvokeSetter(final String inKey, final Object inValue, final Builder builder)", "class_method_signature": "DatastoreContextIntrospector.convertValueAndInvokeSetter(final String inKey, final Object inValue, final Builder builder)", "testcase": false, "constructor": false}, {"identifier": "convertToCamelCase", "parameters": "(final String inString)", "modifiers": "private static", "return": "String", "signature": "String convertToCamelCase(final String inString)", "full_signature": "private static String convertToCamelCase(final String inString)", "class_method_signature": "DatastoreContextIntrospector.convertToCamelCase(final String inString)", "testcase": false, "constructor": false}, {"identifier": "convertValue", "parameters": "(final String name, final Object from)", "modifiers": "private", "return": "Object", "signature": "Object convertValue(final String name, final Object from)", "full_signature": "private Object convertValue(final String name, final Object from)", "class_method_signature": "DatastoreContextIntrospector.convertValue(final String name, final Object from)", "testcase": false, "constructor": false}, {"identifier": "constructorValueRecursively", "parameters": "(final Class<?> toType, final Object fromValue)", "modifiers": "private", "return": "Object", "signature": "Object constructorValueRecursively(final Class<?> toType, final Object fromValue)", "full_signature": "private Object constructorValueRecursively(final Class<?> toType, final Object fromValue)", "class_method_signature": "DatastoreContextIntrospector.constructorValueRecursively(final Class<?> toType, final Object fromValue)", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/DatastoreContextIntrospector.java"}, "focal_method": {"identifier": "getContext", "parameters": "()", "modifiers": "public synchronized", "return": "DatastoreContext", "body": "public synchronized DatastoreContext getContext() {\n        return context;\n    }", "signature": "DatastoreContext getContext()", "full_signature": "public synchronized DatastoreContext getContext()", "class_method_signature": "DatastoreContextIntrospector.getContext()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}