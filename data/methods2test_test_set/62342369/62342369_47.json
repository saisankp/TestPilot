{"test_class": {"identifier": "LayeredCRUDAccessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ObjectId entity1_1;", "modifier": "private", "type": "ObjectId", "declarator": "entity1_1", "var_name": "entity1_1"}, {"original_string": "private ObjectId entity2_1;", "modifier": "private", "type": "ObjectId", "declarator": "entity2_1", "var_name": "entity2_1"}, {"original_string": "private ObjectId entity2_2;", "modifier": "private", "type": "ObjectId", "declarator": "entity2_2", "var_name": "entity2_2"}, {"original_string": "private InMemoryCRUDAccessor<AbstractOrganizableObject> accessor1;", "modifier": "private", "type": "InMemoryCRUDAccessor<AbstractOrganizableObject>", "declarator": "accessor1", "var_name": "accessor1"}, {"original_string": "private InMemoryCRUDAccessor<AbstractOrganizableObject> accessor2;", "modifier": "private", "type": "InMemoryCRUDAccessor<AbstractOrganizableObject>", "declarator": "accessor2", "var_name": "accessor2"}], "file": "step-core/src/test/java/step/core/accessors/LayeredCRUDAccessorTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test() {\n\t\tLayeredCRUDAccessor<AbstractOrganizableObject> accessor = new LayeredCRUDAccessor<>();\n\t\taccessor.pushAccessor(accessor2);\n\t\taccessor.pushAccessor(accessor1);\n\t\t\n\t\tperformTests(accessor);\n\t}", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "LayeredCRUDAccessorTest.test()", "testcase": true, "constructor": false, "invocations": ["pushAccessor", "pushAccessor", "performTests"]}, "focal_class": {"identifier": "LayeredCRUDAccessor", "superclass": "", "interfaces": "implements CRUDAccessor<T>", "fields": [{"original_string": "private final List<CRUDAccessor<T>> accessors = new ArrayList<>();", "modifier": "private final", "type": "List<CRUDAccessor<T>>", "declarator": "accessors = new ArrayList<>()", "var_name": "accessors"}], "methods": [{"identifier": "LayeredCRUDAccessor", "parameters": "()", "modifiers": "public", "return": "", "signature": " LayeredCRUDAccessor()", "full_signature": "public  LayeredCRUDAccessor()", "class_method_signature": "LayeredCRUDAccessor.LayeredCRUDAccessor()", "testcase": false, "constructor": true}, {"identifier": "LayeredCRUDAccessor", "parameters": "(List<? extends CRUDAccessor<T>> accessors)", "modifiers": "public", "return": "", "signature": " LayeredCRUDAccessor(List<? extends CRUDAccessor<T>> accessors)", "full_signature": "public  LayeredCRUDAccessor(List<? extends CRUDAccessor<T>> accessors)", "class_method_signature": "LayeredCRUDAccessor.LayeredCRUDAccessor(List<? extends CRUDAccessor<T>> accessors)", "testcase": false, "constructor": true}, {"identifier": "addAccessor", "parameters": "(CRUDAccessor<T> accessor)", "modifiers": "public", "return": "void", "signature": "void addAccessor(CRUDAccessor<T> accessor)", "full_signature": "public void addAccessor(CRUDAccessor<T> accessor)", "class_method_signature": "LayeredCRUDAccessor.addAccessor(CRUDAccessor<T> accessor)", "testcase": false, "constructor": false}, {"identifier": "pushAccessor", "parameters": "(CRUDAccessor<T> accessor)", "modifiers": "public", "return": "void", "signature": "void pushAccessor(CRUDAccessor<T> accessor)", "full_signature": "public void pushAccessor(CRUDAccessor<T> accessor)", "class_method_signature": "LayeredCRUDAccessor.pushAccessor(CRUDAccessor<T> accessor)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(ObjectId id)", "modifiers": "@Override public", "return": "T", "signature": "T get(ObjectId id)", "full_signature": "@Override public T get(ObjectId id)", "class_method_signature": "LayeredCRUDAccessor.get(ObjectId id)", "testcase": false, "constructor": false}, {"identifier": "layeredLookup", "parameters": "(Function<CRUDAccessor<T>, V> f)", "modifiers": "protected", "return": "V", "signature": "V layeredLookup(Function<CRUDAccessor<T>, V> f)", "full_signature": "protected V layeredLookup(Function<CRUDAccessor<T>, V> f)", "class_method_signature": "LayeredCRUDAccessor.layeredLookup(Function<CRUDAccessor<T>, V> f)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String id)", "modifiers": "@Override public", "return": "T", "signature": "T get(String id)", "full_signature": "@Override public T get(String id)", "class_method_signature": "LayeredCRUDAccessor.get(String id)", "testcase": false, "constructor": false}, {"identifier": "findByAttributes", "parameters": "(Map<String, String> attributes)", "modifiers": "@Override public", "return": "T", "signature": "T findByAttributes(Map<String, String> attributes)", "full_signature": "@Override public T findByAttributes(Map<String, String> attributes)", "class_method_signature": "LayeredCRUDAccessor.findByAttributes(Map<String, String> attributes)", "testcase": false, "constructor": false}, {"identifier": "findManyByAttributes", "parameters": "(Map<String, String> attributes)", "modifiers": "@Override public", "return": "Spliterator<T>", "signature": "Spliterator<T> findManyByAttributes(Map<String, String> attributes)", "full_signature": "@Override public Spliterator<T> findManyByAttributes(Map<String, String> attributes)", "class_method_signature": "LayeredCRUDAccessor.findManyByAttributes(Map<String, String> attributes)", "testcase": false, "constructor": false}, {"identifier": "layeredMerge", "parameters": "(Function<CRUDAccessor<T>, Spliterator<V>> f)", "modifiers": "protected", "return": "Spliterator<V>", "signature": "Spliterator<V> layeredMerge(Function<CRUDAccessor<T>, Spliterator<V>> f)", "full_signature": "protected Spliterator<V> layeredMerge(Function<CRUDAccessor<T>, Spliterator<V>> f)", "class_method_signature": "LayeredCRUDAccessor.layeredMerge(Function<CRUDAccessor<T>, Spliterator<V>> f)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<T>", "signature": "Iterator<T> getAll()", "full_signature": "@Override public Iterator<T> getAll()", "class_method_signature": "LayeredCRUDAccessor.getAll()", "testcase": false, "constructor": false}, {"identifier": "findByAttributes", "parameters": "(Map<String, String> attributes, String attributesMapKey)", "modifiers": "@Override public", "return": "T", "signature": "T findByAttributes(Map<String, String> attributes, String attributesMapKey)", "full_signature": "@Override public T findByAttributes(Map<String, String> attributes, String attributesMapKey)", "class_method_signature": "LayeredCRUDAccessor.findByAttributes(Map<String, String> attributes, String attributesMapKey)", "testcase": false, "constructor": false}, {"identifier": "findManyByAttributes", "parameters": "(Map<String, String> attributes, String attributesMapKey)", "modifiers": "@Override public", "return": "Spliterator<T>", "signature": "Spliterator<T> findManyByAttributes(Map<String, String> attributes, String attributesMapKey)", "full_signature": "@Override public Spliterator<T> findManyByAttributes(Map<String, String> attributes, String attributesMapKey)", "class_method_signature": "LayeredCRUDAccessor.findManyByAttributes(Map<String, String> attributes, String attributesMapKey)", "testcase": false, "constructor": false}, {"identifier": "getRange", "parameters": "(int skip, int limit)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> getRange(int skip, int limit)", "full_signature": "@Override public List<T> getRange(int skip, int limit)", "class_method_signature": "LayeredCRUDAccessor.getRange(int skip, int limit)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(ObjectId id)", "modifiers": "@Override public", "return": "void", "signature": "void remove(ObjectId id)", "full_signature": "@Override public void remove(ObjectId id)", "class_method_signature": "LayeredCRUDAccessor.remove(ObjectId id)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(T entity)", "modifiers": "@Override public", "return": "T", "signature": "T save(T entity)", "full_signature": "@Override public T save(T entity)", "class_method_signature": "LayeredCRUDAccessor.save(T entity)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(Collection<? extends T> entities)", "modifiers": "@Override public", "return": "void", "signature": "void save(Collection<? extends T> entities)", "full_signature": "@Override public void save(Collection<? extends T> entities)", "class_method_signature": "LayeredCRUDAccessor.save(Collection<? extends T> entities)", "testcase": false, "constructor": false}, {"identifier": "getAccessorForPersistence", "parameters": "()", "modifiers": "protected", "return": "CRUDAccessor<T>", "signature": "CRUDAccessor<T> getAccessorForPersistence()", "full_signature": "protected CRUDAccessor<T> getAccessorForPersistence()", "class_method_signature": "LayeredCRUDAccessor.getAccessorForPersistence()", "testcase": false, "constructor": false}], "file": "step-core/src/main/java/step/core/accessors/LayeredCRUDAccessor.java"}, "focal_method": {"identifier": "pushAccessor", "parameters": "(CRUDAccessor<T> accessor)", "modifiers": "public", "return": "void", "body": "public void pushAccessor(CRUDAccessor<T> accessor) {\n\t\taccessors.add(0, accessor);\n\t}", "signature": "void pushAccessor(CRUDAccessor<T> accessor)", "full_signature": "public void pushAccessor(CRUDAccessor<T> accessor)", "class_method_signature": "LayeredCRUDAccessor.pushAccessor(CRUDAccessor<T> accessor)", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": 62342369, "url": "https://github.com/exense/step", "stars": 12, "created": "6/30/2016 9:08:29 PM +00:00", "updates": "2020-01-24T17:13:24+00:00", "fork": "False", "license": "licensed"}}