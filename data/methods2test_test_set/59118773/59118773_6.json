{"test_class": {"identifier": "XMLFileImportTest", "superclass": "extends AbstractMongoTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ReleaseRepository releaseRepository;", "modifier": "@Autowired\n    private", "type": "ReleaseRepository", "declarator": "releaseRepository", "var_name": "releaseRepository"}, {"original_string": "@Autowired\n    @Qualifier(\"XMLFileImportDefault\")\n    private XMLFile xmlFile;", "modifier": "@Autowired\n    @Qualifier(\"XMLFileImportDefault\")\n    private", "type": "XMLFile", "declarator": "xmlFile", "var_name": "xmlFile"}], "file": "persistence-mongodb/src/test/java/org/devgateway/ocds/persistence/mongo/reader/XMLFileImportTest.java"}, "test_case": {"identifier": "process", "parameters": "()", "modifiers": "@Test @Ignore public", "return": "void", "body": "@Test\n    @Ignore\n    public void process() throws Exception {\n        final ClassLoader classLoader = getClass().getClassLoader();\n        final File file = new File(classLoader.getResource(\"xml/release.xml\").getFile());\n        xmlFile.process(file);\n\n        final List<Release> releases = releaseRepository.findAll();\n        Assert.assertNotNull(releases);\n\n        final Release release = releaseRepository.findById(\"xmlimport-123\").get();\n        Assert.assertNotNull(release);\n        Assert.assertEquals(\"check field\", release.getLanguage(), \"en\");\n    }", "signature": "void process()", "full_signature": "@Test @Ignore public void process()", "class_method_signature": "XMLFileImportTest.process()", "testcase": true, "constructor": false, "invocations": ["getClassLoader", "getClass", "getFile", "getResource", "process", "findAll", "assertNotNull", "get", "findById", "assertNotNull", "assertEquals", "getLanguage"]}, "focal_class": {"identifier": "XMLFileImport", "superclass": "", "interfaces": "implements XMLFile", "fields": [{"original_string": "@Autowired\n    private ReleaseRepository releaseRepository;", "modifier": "@Autowired\n    private", "type": "ReleaseRepository", "declarator": "releaseRepository", "var_name": "releaseRepository"}], "methods": [{"identifier": "process", "parameters": "(final InputStream inputStream)", "modifiers": "@Async public", "return": "void", "signature": "void process(final InputStream inputStream)", "full_signature": "@Async public void process(final InputStream inputStream)", "class_method_signature": "XMLFileImport.process(final InputStream inputStream)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(final File file)", "modifiers": "@Async public", "return": "void", "signature": "void process(final File file)", "full_signature": "@Async public void process(final File file)", "class_method_signature": "XMLFileImport.process(final File file)", "testcase": false, "constructor": false}, {"identifier": "saveRelease", "parameters": "(final Object obj)", "modifiers": "public", "return": "void", "signature": "void saveRelease(final Object obj)", "full_signature": "public void saveRelease(final Object obj)", "class_method_signature": "XMLFileImport.saveRelease(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "processRelease", "parameters": "(Release release)", "modifiers": "protected abstract", "return": "Release", "signature": "Release processRelease(Release release)", "full_signature": "protected abstract Release processRelease(Release release)", "class_method_signature": "XMLFileImport.processRelease(Release release)", "testcase": false, "constructor": false}, {"identifier": "getAbstractRulesModule", "parameters": "()", "modifiers": "protected abstract", "return": "AbstractRulesModule", "signature": "AbstractRulesModule getAbstractRulesModule()", "full_signature": "protected abstract AbstractRulesModule getAbstractRulesModule()", "class_method_signature": "XMLFileImport.getAbstractRulesModule()", "testcase": false, "constructor": false}], "file": "persistence-mongodb/src/main/java/org/devgateway/ocds/persistence/mongo/reader/XMLFileImport.java"}, "focal_method": {"identifier": "process", "parameters": "(final InputStream inputStream)", "modifiers": "@Async public", "return": "void", "body": "@Async\n    public void process(final InputStream inputStream) throws IOException, SAXException {\n        DigesterLoader digesterLoader = DigesterLoader.newLoader(getAbstractRulesModule());\n        Digester digester = digesterLoader.newDigester();\n\n        // Push this object onto Digester's stack to handle object save operation (call saveRelease method)\n        digester.push(this);\n        digester.parse(inputStream);\n    }", "signature": "void process(final InputStream inputStream)", "full_signature": "@Async public void process(final InputStream inputStream)", "class_method_signature": "XMLFileImport.process(final InputStream inputStream)", "testcase": false, "constructor": false, "invocations": ["newLoader", "getAbstractRulesModule", "newDigester", "push", "parse"]}, "repository": {"repo_id": 59118773, "url": "https://github.com/devgateway/oc-explorer", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 9004, "license": "licensed"}}