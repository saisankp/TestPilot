{"test_class": {"identifier": "RtpFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int HEART_BEAT = 20;", "modifier": "private static final", "type": "int", "declarator": "HEART_BEAT = 20", "var_name": "HEART_BEAT"}, {"original_string": "private static final AudioFormat PCMA = new AudioFormat(AudioFormat.ALAW, 8000, 8, 1);", "modifier": "private static final", "type": "AudioFormat", "declarator": "PCMA = new AudioFormat(AudioFormat.ALAW, 8000, 8, 1)", "var_name": "PCMA"}, {"original_string": "private static final AudioFormat PCMU = new AudioFormat(AudioFormat.ULAW, 8000, 8, 1);", "modifier": "private static final", "type": "AudioFormat", "declarator": "PCMU = new AudioFormat(AudioFormat.ULAW, 8000, 8, 1)", "var_name": "PCMU"}, {"original_string": "private static Map<Integer, Format> formatMap = new HashMap<Integer, Format>();", "modifier": "private static", "type": "Map<Integer, Format>", "declarator": "formatMap = new HashMap<Integer, Format>()", "var_name": "formatMap"}, {"original_string": "private RtpFactory factory = null;", "modifier": "private", "type": "RtpFactory", "declarator": "factory = null", "var_name": "factory"}], "file": "servers/media/core/server-impl/src/test/java/org/mobicents/media/server/impl/rtp/RtpFactoryTest.java"}, "test_case": {"identifier": "getRTPSocketTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getRTPSocketTest() throws Exception {\n        RtpSocket rtpSocket = factory.getRTPSocket();\n        int port = rtpSocket.getLocalPort();\n        assertEquals(9201, port);\n        assertEquals(80, rtpSocket.getJitter());\n\n        HashMap<Integer, Format> format = rtpSocket.getRtpMap();\n\n        assertEquals(2, format.size());\n\n        format.remove(0);\n\n        rtpSocket.setRtpMap(format);\n\n        assertEquals(1, rtpSocket.getRtpMap().size());\n\n        rtpSocket.release();\n\n        RtpSocket rtpSocket2 = factory.getRTPSocket();\n        assertEquals(2, rtpSocket2.getRtpMap().size());\n\n    }", "signature": "void getRTPSocketTest()", "full_signature": "@Test public void getRTPSocketTest()", "class_method_signature": "RtpFactoryTest.getRTPSocketTest()", "testcase": true, "constructor": false, "invocations": ["getRTPSocket", "getLocalPort", "assertEquals", "assertEquals", "getJitter", "getRtpMap", "assertEquals", "size", "remove", "setRtpMap", "assertEquals", "size", "getRtpMap", "release", "getRTPSocket", "assertEquals", "size", "getRtpMap"]}, "focal_class": {"identifier": "RtpFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Transceiver transceiver;", "modifier": "private", "type": "Transceiver", "declarator": "transceiver", "var_name": "transceiver"}, {"original_string": "private Integer jitter = 60;", "modifier": "private", "type": "Integer", "declarator": "jitter = 60", "var_name": "jitter"}, {"original_string": "private InetAddress bindAddress;", "modifier": "private", "type": "InetAddress", "declarator": "bindAddress", "var_name": "bindAddress"}, {"original_string": "private int localPort;", "modifier": "private", "type": "int", "declarator": "localPort", "var_name": "localPort"}, {"original_string": "protected InetSocketAddress publicAddress;", "modifier": "protected", "type": "InetSocketAddress", "declarator": "publicAddress", "var_name": "publicAddress"}, {"original_string": "private String stunHost;", "modifier": "private", "type": "String", "declarator": "stunHost", "var_name": "stunHost"}, {"original_string": "private int stunPort = 3478;", "modifier": "private", "type": "int", "declarator": "stunPort = 3478", "var_name": "stunPort"}, {"original_string": "private Timer timer;", "modifier": "private", "type": "Timer", "declarator": "timer", "var_name": "timer"}, {"original_string": "private Map<Integer, Format> formatMap;", "modifier": "private", "type": "Map<Integer, Format>", "declarator": "formatMap", "var_name": "formatMap"}, {"original_string": "protected volatile HashMap<SocketAddress, RtpSocket> rtpSockets = new HashMap();", "modifier": "protected volatile", "type": "HashMap<SocketAddress, RtpSocket>", "declarator": "rtpSockets = new HashMap()", "var_name": "rtpSockets"}, {"original_string": "private transient Logger logger = Logger.getLogger(RtpFactory.class);", "modifier": "private transient", "type": "Logger", "declarator": "logger = Logger.getLogger(RtpFactory.class)", "var_name": "logger"}], "methods": [{"identifier": "RtpFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " RtpFactory()", "full_signature": "public  RtpFactory()", "class_method_signature": "RtpFactory.RtpFactory()", "testcase": false, "constructor": true}, {"identifier": "getLocalPort", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLocalPort()", "full_signature": "public int getLocalPort()", "class_method_signature": "RtpFactory.getLocalPort()", "testcase": false, "constructor": false}, {"identifier": "setLocalPort", "parameters": "(int localPort)", "modifiers": "public", "return": "void", "signature": "void setLocalPort(int localPort)", "full_signature": "public void setLocalPort(int localPort)", "class_method_signature": "RtpFactory.setLocalPort(int localPort)", "testcase": false, "constructor": false}, {"identifier": "getStunAddress", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStunAddress()", "full_signature": "public String getStunAddress()", "class_method_signature": "RtpFactory.getStunAddress()", "testcase": false, "constructor": false}, {"identifier": "setStunAddress", "parameters": "(String address)", "modifiers": "public", "return": "void", "signature": "void setStunAddress(String address)", "full_signature": "public void setStunAddress(String address)", "class_method_signature": "RtpFactory.setStunAddress(String address)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "RtpFactory.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "RtpFactory.stop()", "testcase": false, "constructor": false}, {"identifier": "getTimer", "parameters": "()", "modifiers": "public", "return": "Timer", "signature": "Timer getTimer()", "full_signature": "public Timer getTimer()", "class_method_signature": "RtpFactory.getTimer()", "testcase": false, "constructor": false}, {"identifier": "setTimer", "parameters": "(Timer timer)", "modifiers": "public", "return": "void", "signature": "void setTimer(Timer timer)", "full_signature": "public void setTimer(Timer timer)", "class_method_signature": "RtpFactory.setTimer(Timer timer)", "testcase": false, "constructor": false}, {"identifier": "getBindAddress", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getBindAddress()", "full_signature": "public String getBindAddress()", "class_method_signature": "RtpFactory.getBindAddress()", "testcase": false, "constructor": false}, {"identifier": "setBindAddress", "parameters": "(String bindAddress)", "modifiers": "public", "return": "void", "signature": "void setBindAddress(String bindAddress)", "full_signature": "public void setBindAddress(String bindAddress)", "class_method_signature": "RtpFactory.setBindAddress(String bindAddress)", "testcase": false, "constructor": false}, {"identifier": "getJitter", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getJitter()", "full_signature": "public Integer getJitter()", "class_method_signature": "RtpFactory.getJitter()", "testcase": false, "constructor": false}, {"identifier": "setJitter", "parameters": "(Integer jitter)", "modifiers": "public", "return": "void", "signature": "void setJitter(Integer jitter)", "full_signature": "public void setJitter(Integer jitter)", "class_method_signature": "RtpFactory.setJitter(Integer jitter)", "testcase": false, "constructor": false}, {"identifier": "getRTPSocket", "parameters": "()", "modifiers": "public", "return": "RtpSocket", "signature": "RtpSocket getRTPSocket()", "full_signature": "public RtpSocket getRTPSocket()", "class_method_signature": "RtpFactory.getRTPSocket()", "testcase": false, "constructor": false}, {"identifier": "releaseRTPSocket", "parameters": "(RtpSocket rtpSocket)", "modifiers": "public", "return": "void", "signature": "void releaseRTPSocket(RtpSocket rtpSocket)", "full_signature": "public void releaseRTPSocket(RtpSocket rtpSocket)", "class_method_signature": "RtpFactory.releaseRTPSocket(RtpSocket rtpSocket)", "testcase": false, "constructor": false}, {"identifier": "getFormatMap", "parameters": "()", "modifiers": "public", "return": "Map<Integer, Format>", "signature": "Map<Integer, Format> getFormatMap()", "full_signature": "public Map<Integer, Format> getFormatMap()", "class_method_signature": "RtpFactory.getFormatMap()", "testcase": false, "constructor": false}, {"identifier": "setFormatMap", "parameters": "(Map<Integer, Format> originalFormatMap)", "modifiers": "public", "return": "void", "signature": "void setFormatMap(Map<Integer, Format> originalFormatMap)", "full_signature": "public void setFormatMap(Map<Integer, Format> originalFormatMap)", "class_method_signature": "RtpFactory.setFormatMap(Map<Integer, Format> originalFormatMap)", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(Integer payloadType, Format _f)", "modifiers": "private", "return": "Format", "signature": "Format convert(Integer payloadType, Format _f)", "full_signature": "private Format convert(Integer payloadType, Format _f)", "class_method_signature": "RtpFactory.convert(Integer payloadType, Format _f)", "testcase": false, "constructor": false}, {"identifier": "getPublicAddress", "parameters": "(InetSocketAddress localAddress)", "modifiers": "private", "return": "InetSocketAddress", "signature": "InetSocketAddress getPublicAddress(InetSocketAddress localAddress)", "full_signature": "private InetSocketAddress getPublicAddress(InetSocketAddress localAddress)", "class_method_signature": "RtpFactory.getPublicAddress(InetSocketAddress localAddress)", "testcase": false, "constructor": false}], "file": "servers/media/core/server-impl/src/main/java/org/mobicents/media/server/impl/rtp/RtpFactory.java"}, "focal_method": {"identifier": "getRTPSocket", "parameters": "()", "modifiers": "public", "return": "RtpSocket", "body": "public RtpSocket getRTPSocket() {\n        RtpSocket rtpSocket = new RtpSocket(transceiver, timer, formatMap, this);\n        return rtpSocket;\n    }", "signature": "RtpSocket getRTPSocket()", "full_signature": "public RtpSocket getRTPSocket()", "class_method_signature": "RtpFactory.getRTPSocket()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 128294, "url": "https://github.com/deruelle/mobicents", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 17, "size": 347121, "license": "licensed"}}