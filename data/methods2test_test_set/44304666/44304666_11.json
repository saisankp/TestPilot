{"test_class": {"identifier": "ProvinceInfoHandlerTest", "superclass": "extends PickViewTestSupport", "interfaces": "", "fields": [{"original_string": "private ProvinceInfoHandler provinceInfoHandler;", "modifier": "private", "type": "ProvinceInfoHandler", "declarator": "provinceInfoHandler", "var_name": "provinceInfoHandler"}, {"original_string": "private List<ProvinceModel> provinces;", "modifier": "private", "type": "List<ProvinceModel>", "declarator": "provinces", "var_name": "provinces"}], "file": "app/src/test/java/com/brucetoo/pickview/provincepick/utils/ProvinceInfoHandlerTest.java"}, "test_case": {"identifier": "testEmptyDocumentParsing", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEmptyDocumentParsing()\n            throws ParserConfigurationException, SAXException, IOException {\n\n        // when\n        parseDocument(\"empty-data.xml\");\n\n        // then\n        assertTrue(provinceInfoHandler.getProvinceList() == null ||\n                   provinceInfoHandler.getProvinceList().isEmpty());\n    }", "signature": "void testEmptyDocumentParsing()", "full_signature": "@Test public void testEmptyDocumentParsing()", "class_method_signature": "ProvinceInfoHandlerTest.testEmptyDocumentParsing()", "testcase": true, "constructor": false, "invocations": ["parseDocument", "assertTrue", "getProvinceList", "isEmpty", "getProvinceList"]}, "focal_class": {"identifier": "ProvinceInfoHandler", "superclass": "extends DefaultHandler", "interfaces": "", "fields": [{"original_string": "private StringBuilder mBuilder;", "modifier": "private", "type": "StringBuilder", "declarator": "mBuilder", "var_name": "mBuilder"}, {"original_string": "private CityModel mCity;", "modifier": "private", "type": "CityModel", "declarator": "mCity", "var_name": "mCity"}, {"original_string": "private ProvinceModel mProvince;", "modifier": "private", "type": "ProvinceModel", "declarator": "mProvince", "var_name": "mProvince"}, {"original_string": "private List<ProvinceModel> mList;", "modifier": "private", "type": "List<ProvinceModel>", "declarator": "mList", "var_name": "mList"}], "methods": [{"identifier": "ProvinceInfoHandler", "parameters": "(List<ProvinceModel> list)", "modifiers": "public", "return": "", "signature": " ProvinceInfoHandler(List<ProvinceModel> list)", "full_signature": "public  ProvinceInfoHandler(List<ProvinceModel> list)", "class_method_signature": "ProvinceInfoHandler.ProvinceInfoHandler(List<ProvinceModel> list)", "testcase": false, "constructor": true}, {"identifier": "getProvinceList", "parameters": "()", "modifiers": "public", "return": "List<ProvinceModel>", "signature": "List<ProvinceModel> getProvinceList()", "full_signature": "public List<ProvinceModel> getProvinceList()", "class_method_signature": "ProvinceInfoHandler.getProvinceList()", "testcase": false, "constructor": false}, {"identifier": "startDocument", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void startDocument()", "full_signature": "@Override public void startDocument()", "class_method_signature": "ProvinceInfoHandler.startDocument()", "testcase": false, "constructor": false}, {"identifier": "startElement", "parameters": "(String uri, String localName, String qName, Attributes attributes)", "modifiers": "@Override public", "return": "void", "signature": "void startElement(String uri, String localName, String qName, Attributes attributes)", "full_signature": "@Override public void startElement(String uri, String localName, String qName, Attributes attributes)", "class_method_signature": "ProvinceInfoHandler.startElement(String uri, String localName, String qName, Attributes attributes)", "testcase": false, "constructor": false}, {"identifier": "characters", "parameters": "(char[] ch, int start, int length)", "modifiers": "@Override public", "return": "void", "signature": "void characters(char[] ch, int start, int length)", "full_signature": "@Override public void characters(char[] ch, int start, int length)", "class_method_signature": "ProvinceInfoHandler.characters(char[] ch, int start, int length)", "testcase": false, "constructor": false}, {"identifier": "endElement", "parameters": "(String uri, String localName, String qName)", "modifiers": "@Override public", "return": "void", "signature": "void endElement(String uri, String localName, String qName)", "full_signature": "@Override public void endElement(String uri, String localName, String qName)", "class_method_signature": "ProvinceInfoHandler.endElement(String uri, String localName, String qName)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/brucetoo/pickview/provincepick/utils/ProvinceInfoHandler.java"}, "focal_method": {"identifier": "getProvinceList", "parameters": "()", "modifiers": "public", "return": "List<ProvinceModel>", "body": "public List<ProvinceModel> getProvinceList() {\n\n\t\treturn mList;\n\t}", "signature": "List<ProvinceModel> getProvinceList()", "full_signature": "public List<ProvinceModel> getProvinceList()", "class_method_signature": "ProvinceInfoHandler.getProvinceList()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 44304666, "url": "https://github.com/brucetoo/PickView", "language": "Java", "is_fork": false, "fork_count": 271, "stargazer_count": 1060, "size": 5789, "license": "licensed"}}