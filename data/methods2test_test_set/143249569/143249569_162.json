{"test_class": {"identifier": "IntentRequestHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    IntentRequestHandler<TestIntent> spy;", "modifier": "@Mock", "type": "IntentRequestHandler<TestIntent>", "declarator": "spy", "var_name": "spy"}, {"original_string": "@Mock\n    HandlerInput mockInput;", "modifier": "@Mock", "type": "HandlerInput", "declarator": "mockInput", "var_name": "mockInput"}, {"original_string": "IntentMapper mapper = IntentMapper.fromModel(Model.builder()\n        .intent(TestIntent.class)\n        .build());", "modifier": "", "type": "IntentMapper", "declarator": "mapper = IntentMapper.fromModel(Model.builder()\n        .intent(TestIntent.class)\n        .build())", "var_name": "mapper"}], "file": "ask-sdk-interaction-model-mapper/src/test/java/com/amazon/ask/interaction/IntentRequestHandlerTest.java"}, "test_case": {"identifier": "testCanHandleFalseIfMismatch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCanHandleFalseIfMismatch() {\n        TestIntentHandler underTest = new TestIntentHandler(mapper);\n\n        when(mockInput.getRequestEnvelope()).thenReturn(RequestEnvelope.builder()\n            .withRequest(IntentRequest.builder()\n                .withIntent(com.amazon.ask.model.Intent.builder()\n                    .withName(\"NoMatch\")\n                    .withSlots(Collections.emptyMap())\n                    .build())\n                .build())\n            .build());\n\n        assertFalse(underTest.canHandle(mockInput));\n    }", "signature": "void testCanHandleFalseIfMismatch()", "full_signature": "@Test public void testCanHandleFalseIfMismatch()", "class_method_signature": "IntentRequestHandlerTest.testCanHandleFalseIfMismatch()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getRequestEnvelope", "build", "withRequest", "builder", "build", "withIntent", "builder", "build", "withSlots", "withName", "builder", "emptyMap", "assertFalse", "canHandle"]}, "focal_class": {"identifier": "IntentRequestHandler", "superclass": "", "interfaces": "implements RequestHandler", "fields": [{"original_string": "protected final Logger logger = LoggerFactory.getLogger(getClass());", "modifier": "protected final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(getClass())", "var_name": "logger"}, {"original_string": "protected final IntentReader<T> intentReader;", "modifier": "protected final", "type": "IntentReader<T>", "declarator": "intentReader", "var_name": "intentReader"}, {"original_string": "protected final Class<T> intentClass;", "modifier": "protected final", "type": "Class<T>", "declarator": "intentClass", "var_name": "intentClass"}, {"original_string": "protected final String intentName;", "modifier": "protected final", "type": "String", "declarator": "intentName", "var_name": "intentName"}], "methods": [{"identifier": "IntentRequestHandler", "parameters": "(Class<T> intentClass, IntentMapper intentMapper)", "modifiers": "public", "return": "", "signature": " IntentRequestHandler(Class<T> intentClass, IntentMapper intentMapper)", "full_signature": "public  IntentRequestHandler(Class<T> intentClass, IntentMapper intentMapper)", "class_method_signature": "IntentRequestHandler.IntentRequestHandler(Class<T> intentClass, IntentMapper intentMapper)", "testcase": false, "constructor": true}, {"identifier": "IntentRequestHandler", "parameters": "(Class<T> intentClass, IntentReader<T> intentReader)", "modifiers": "public", "return": "", "signature": " IntentRequestHandler(Class<T> intentClass, IntentReader<T> intentReader)", "full_signature": "public  IntentRequestHandler(Class<T> intentClass, IntentReader<T> intentReader)", "class_method_signature": "IntentRequestHandler.IntentRequestHandler(Class<T> intentClass, IntentReader<T> intentReader)", "testcase": false, "constructor": true}, {"identifier": "canHandle", "parameters": "(HandlerInput input)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canHandle(HandlerInput input)", "full_signature": "@Override public boolean canHandle(HandlerInput input)", "class_method_signature": "IntentRequestHandler.canHandle(HandlerInput input)", "testcase": false, "constructor": false}, {"identifier": "handle", "parameters": "(HandlerInput input)", "modifiers": "@Override public", "return": "Optional<Response>", "signature": "Optional<Response> handle(HandlerInput input)", "full_signature": "@Override public Optional<Response> handle(HandlerInput input)", "class_method_signature": "IntentRequestHandler.handle(HandlerInput input)", "testcase": false, "constructor": false}, {"identifier": "handle", "parameters": "(HandlerInput input, T intent)", "modifiers": "protected abstract", "return": "Optional<Response>", "signature": "Optional<Response> handle(HandlerInput input, T intent)", "full_signature": "protected abstract Optional<Response> handle(HandlerInput input, T intent)", "class_method_signature": "IntentRequestHandler.handle(HandlerInput input, T intent)", "testcase": false, "constructor": false}], "file": "ask-sdk-interaction-model-mapper/src/main/java/com/amazon/ask/interaction/IntentRequestHandler.java"}, "focal_method": {"identifier": "canHandle", "parameters": "(HandlerInput input)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean canHandle(HandlerInput input) {\n        if (input.getRequestEnvelope().getRequest() instanceof IntentRequest) {\n            IntentRequest request = (IntentRequest) input.getRequestEnvelope().getRequest();\n            return request.getIntent().getName().equals(intentName);\n        }\n        return false;\n    }", "signature": "boolean canHandle(HandlerInput input)", "full_signature": "@Override public boolean canHandle(HandlerInput input)", "class_method_signature": "IntentRequestHandler.canHandle(HandlerInput input)", "testcase": false, "constructor": false, "invocations": ["getRequest", "getRequestEnvelope", "getRequest", "getRequestEnvelope", "equals", "getName", "getIntent"]}, "repository": {"repo_id": 143249569, "url": "https://github.com/amazon-archives/ask-sdk-frameworks-java", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 12, "size": 313, "license": "licensed"}}