{"test_class": {"identifier": "TransformationsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LifecycleOwner mOwner;", "modifier": "private", "type": "LifecycleOwner", "declarator": "mOwner", "var_name": "mOwner"}], "file": "lifecycle/extensions/src/test/java/android/arch/lifecycle/TransformationsTest.java"}, "test_case": {"identifier": "testMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMap() {\n        LiveData<String> source = new MutableLiveData<>();\n        LiveData<Integer> mapped = Transformations.map(source, new Function<String, Integer>() {\n            @Override\n            public Integer apply(String input) {\n                return input.length();\n            }\n        });\n        Observer<Integer> observer = mock(Observer.class);\n        mapped.observe(mOwner, observer);\n        source.setValue(\"four\");\n        verify(observer).onChanged(4);\n    }", "signature": "void testMap()", "full_signature": "@Test public void testMap()", "class_method_signature": "TransformationsTest.testMap()", "testcase": true, "constructor": false, "invocations": ["map", "length", "mock", "observe", "setValue", "onChanged", "verify"]}, "focal_class": {"identifier": "Transformations", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Transformations", "parameters": "()", "modifiers": "private", "return": "", "signature": " Transformations()", "full_signature": "private  Transformations()", "class_method_signature": "Transformations.Transformations()", "testcase": false, "constructor": true}, {"identifier": "map", "parameters": "(LiveData<X> source, final Function<X, Y> func)", "modifiers": "@MainThread public static", "return": "LiveData<Y>", "signature": "LiveData<Y> map(LiveData<X> source, final Function<X, Y> func)", "full_signature": "@MainThread public static LiveData<Y> map(LiveData<X> source, final Function<X, Y> func)", "class_method_signature": "Transformations.map(LiveData<X> source, final Function<X, Y> func)", "testcase": false, "constructor": false}, {"identifier": "switchMap", "parameters": "(LiveData<X> trigger,\n            final Function<X, LiveData<Y>> func)", "modifiers": "@MainThread public static", "return": "LiveData<Y>", "signature": "LiveData<Y> switchMap(LiveData<X> trigger,\n            final Function<X, LiveData<Y>> func)", "full_signature": "@MainThread public static LiveData<Y> switchMap(LiveData<X> trigger,\n            final Function<X, LiveData<Y>> func)", "class_method_signature": "Transformations.switchMap(LiveData<X> trigger,\n            final Function<X, LiveData<Y>> func)", "testcase": false, "constructor": false}], "file": "lifecycle/extensions/src/main/java/android/arch/lifecycle/Transformations.java"}, "focal_method": {"identifier": "map", "parameters": "(LiveData<X> source, final Function<X, Y> func)", "modifiers": "@MainThread public static", "return": "LiveData<Y>", "body": "@MainThread\n    public static <X, Y> LiveData<Y> map(LiveData<X> source, final Function<X, Y> func) {\n        final MediatorLiveData<Y> result = new MediatorLiveData<>();\n        result.addSource(source, new Observer<X>() {\n            @Override\n            public void onChanged(@Nullable X x) {\n                result.setValue(func.apply(x));\n            }\n        });\n        return result;\n    }", "signature": "LiveData<Y> map(LiveData<X> source, final Function<X, Y> func)", "full_signature": "@MainThread public static LiveData<Y> map(LiveData<X> source, final Function<X, Y> func)", "class_method_signature": "Transformations.map(LiveData<X> source, final Function<X, Y> func)", "testcase": false, "constructor": false, "invocations": ["addSource", "setValue", "apply"]}, "repository": {"repo_id": 104025215, "url": "https://github.com/Rayduh/support", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 8, "size": 253405, "license": "licensed"}}