{"test_class": {"identifier": "LazySecretKeyImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "agent/embedded/src/test/java/org/glowroot/agent/embedded/repo/LazySecretKeyImplTest.java"}, "test_case": {"identifier": "testLoadSecretKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLoadSecretKey() throws Exception {\n        // given\n        SecretKey secretKey = Encryption.generateNewKey();\n        File confDir = Files.createTempDir();\n        File secretKeyFile = new File(confDir, \"secret\");\n        byte[] encodedKey = secretKey.getEncoded();\n        Files.write(encodedKey, secretKeyFile);\n        // when\n        LazySecretKey lazySecretKey = new LazySecretKeyImpl(Arrays.asList(confDir));\n        // then\n        assertThat(lazySecretKey.getOrCreate().getEncoded()).isEqualTo(encodedKey);\n        // cleanup\n        secretKeyFile.delete();\n        confDir.delete();\n    }", "signature": "void testLoadSecretKey()", "full_signature": "@Test public void testLoadSecretKey()", "class_method_signature": "LazySecretKeyImplTest.testLoadSecretKey()", "testcase": true, "constructor": false, "invocations": ["generateNewKey", "createTempDir", "getEncoded", "write", "asList", "isEqualTo", "assertThat", "getEncoded", "getOrCreate", "delete", "delete"]}, "focal_class": {"identifier": "LazySecretKeyImpl", "superclass": "", "interfaces": "implements LazySecretKey", "fields": [{"original_string": "private static final String SECRET_FILE_NAME = \"secret\";", "modifier": "private static final", "type": "String", "declarator": "SECRET_FILE_NAME = \"secret\"", "var_name": "SECRET_FILE_NAME"}, {"original_string": "private final List<File> confDirs;", "modifier": "private final", "type": "List<File>", "declarator": "confDirs", "var_name": "confDirs"}, {"original_string": "private final Object lock = new Object();", "modifier": "private final", "type": "Object", "declarator": "lock = new Object()", "var_name": "lock"}, {"original_string": "@GuardedBy(\"lock\")\n    private @MonotonicNonNull SecretKey secretKey;", "modifier": "@GuardedBy(\"lock\")\n    private @MonotonicNonNull", "type": "SecretKey", "declarator": "secretKey", "var_name": "secretKey"}], "methods": [{"identifier": "LazySecretKeyImpl", "parameters": "(List<File> confDirs)", "modifiers": "", "return": "", "signature": " LazySecretKeyImpl(List<File> confDirs)", "full_signature": "  LazySecretKeyImpl(List<File> confDirs)", "class_method_signature": "LazySecretKeyImpl.LazySecretKeyImpl(List<File> confDirs)", "testcase": false, "constructor": true}, {"identifier": "getExisting", "parameters": "()", "modifiers": "@Override public @Nullable", "return": "SecretKey", "signature": "SecretKey getExisting()", "full_signature": "@Override public @Nullable SecretKey getExisting()", "class_method_signature": "LazySecretKeyImpl.getExisting()", "testcase": false, "constructor": false}, {"identifier": "getOrCreate", "parameters": "()", "modifiers": "@Override public", "return": "SecretKey", "signature": "SecretKey getOrCreate()", "full_signature": "@Override public SecretKey getOrCreate()", "class_method_signature": "LazySecretKeyImpl.getOrCreate()", "testcase": false, "constructor": false}, {"identifier": "getSecretFile", "parameters": "(List<File> confDirs)", "modifiers": "private static @Nullable", "return": "File", "signature": "File getSecretFile(List<File> confDirs)", "full_signature": "private static @Nullable File getSecretFile(List<File> confDirs)", "class_method_signature": "LazySecretKeyImpl.getSecretFile(List<File> confDirs)", "testcase": false, "constructor": false}, {"identifier": "loadKey", "parameters": "(File secretFile)", "modifiers": "private static", "return": "SecretKey", "signature": "SecretKey loadKey(File secretFile)", "full_signature": "private static SecretKey loadKey(File secretFile)", "class_method_signature": "LazySecretKeyImpl.loadKey(File secretFile)", "testcase": false, "constructor": false}], "file": "agent/embedded/src/main/java/org/glowroot/agent/embedded/repo/LazySecretKeyImpl.java"}, "focal_method": {"identifier": "getOrCreate", "parameters": "()", "modifiers": "@Override public", "return": "SecretKey", "body": "@Override\n    public SecretKey getOrCreate() throws Exception {\n        synchronized (lock) {\n            if (secretKey == null) {\n                File secretFile = getSecretFile(confDirs);\n                if (secretFile == null) {\n                    secretFile = new File(confDirs.get(0), SECRET_FILE_NAME);\n                    secretKey = Encryption.generateNewKey();\n                    Files.write(secretKey.getEncoded(), secretFile);\n                } else {\n                    secretKey = loadKey(secretFile);\n                }\n            }\n            return secretKey;\n        }\n    }", "signature": "SecretKey getOrCreate()", "full_signature": "@Override public SecretKey getOrCreate()", "class_method_signature": "LazySecretKeyImpl.getOrCreate()", "testcase": false, "constructor": false, "invocations": ["getSecretFile", "get", "generateNewKey", "write", "getEncoded", "loadKey"]}, "repository": {"repo_id": 16336212, "url": "https://github.com/glowroot/glowroot", "stars": 736, "created": "1/29/2014 5:25:58 AM +00:00", "updates": "2020-01-24T11:13:42+00:00", "fork": "False", "license": "licensed"}}