{"test_class": {"identifier": "DropWizardMetricsRegistryTest", "superclass": "", "interfaces": "", "fields": [], "file": "client/lookout-reg-dropwizard/src/test/java/com/alipay/lookout/dropwizard/metrics/DropWizardMetricsRegistryTest.java"}, "test_case": {"identifier": "testDropwizardDs", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDropwizardDs() {\n        MetricRegistry reg = new MetricRegistry();\n        DropWizardMetricsRegistry dwreg = new DropWizardMetricsRegistry(Clock.SYSTEM, reg);\n        DistributionSummary ds = dwreg.distributionSummary(dwreg.createId(\"a.b.c\"));\n        ds.record(3);\n        ds.record(3);\n        Histogram histogram = reg.histogram(\"a.b.c\");\n        System.out.println(histogram.getCount());\n        Assert.assertEquals(2, histogram.getCount());\n    }", "signature": "void testDropwizardDs()", "full_signature": "@Test public void testDropwizardDs()", "class_method_signature": "DropWizardMetricsRegistryTest.testDropwizardDs()", "testcase": true, "constructor": false, "invocations": ["distributionSummary", "createId", "record", "record", "histogram", "println", "getCount", "assertEquals", "getCount"]}, "focal_class": {"identifier": "DropWizardMetricsRegistry", "superclass": "extends MetricRegistry", "interfaces": "", "fields": [{"original_string": "protected final Logger                            logger        = LookoutLoggerFactory\n                                                                        .getLogger(DropWizardMetricsRegistry.class);", "modifier": "protected final", "type": "Logger", "declarator": "logger        = LookoutLoggerFactory\n                                                                        .getLogger(DropWizardMetricsRegistry.class)", "var_name": "logger"}, {"original_string": "private final com.codahale.metrics.MetricRegistry impl;", "modifier": "private final", "type": "com.codahale.metrics.MetricRegistry", "declarator": "impl", "var_name": "impl"}, {"original_string": "private final MetricConfig                        config;", "modifier": "private final", "type": "MetricConfig", "declarator": "config", "var_name": "config"}, {"original_string": "private volatile boolean                          maxNumWarning = true;", "modifier": "private volatile", "type": "boolean", "declarator": "maxNumWarning = true", "var_name": "maxNumWarning"}], "methods": [{"identifier": "DropWizardMetricsRegistry", "parameters": "()", "modifiers": "public", "return": "", "signature": " DropWizardMetricsRegistry()", "full_signature": "public  DropWizardMetricsRegistry()", "class_method_signature": "DropWizardMetricsRegistry.DropWizardMetricsRegistry()", "testcase": false, "constructor": true}, {"identifier": "DropWizardMetricsRegistry", "parameters": "(Clock clock, com.codahale.metrics.MetricRegistry impl)", "modifiers": "public", "return": "", "signature": " DropWizardMetricsRegistry(Clock clock, com.codahale.metrics.MetricRegistry impl)", "full_signature": "public  DropWizardMetricsRegistry(Clock clock, com.codahale.metrics.MetricRegistry impl)", "class_method_signature": "DropWizardMetricsRegistry.DropWizardMetricsRegistry(Clock clock, com.codahale.metrics.MetricRegistry impl)", "testcase": false, "constructor": true}, {"identifier": "DropWizardMetricsRegistry", "parameters": "(Clock clock, com.codahale.metrics.MetricRegistry impl,\n                                     MetricConfig metricConfig)", "modifiers": "public", "return": "", "signature": " DropWizardMetricsRegistry(Clock clock, com.codahale.metrics.MetricRegistry impl,\n                                     MetricConfig metricConfig)", "full_signature": "public  DropWizardMetricsRegistry(Clock clock, com.codahale.metrics.MetricRegistry impl,\n                                     MetricConfig metricConfig)", "class_method_signature": "DropWizardMetricsRegistry.DropWizardMetricsRegistry(Clock clock, com.codahale.metrics.MetricRegistry impl,\n                                     MetricConfig metricConfig)", "testcase": false, "constructor": true}, {"identifier": "gauge", "parameters": "(Id id, Gauge<T> gauge)", "modifiers": "@Override public", "return": "Gauge<T>", "signature": "Gauge<T> gauge(Id id, Gauge<T> gauge)", "full_signature": "@Override public Gauge<T> gauge(Id id, Gauge<T> gauge)", "class_method_signature": "DropWizardMetricsRegistry.gauge(Id id, Gauge<T> gauge)", "testcase": false, "constructor": false}, {"identifier": "counter", "parameters": "(Id id)", "modifiers": "@Override public", "return": "Counter", "signature": "Counter counter(Id id)", "full_signature": "@Override public Counter counter(Id id)", "class_method_signature": "DropWizardMetricsRegistry.counter(Id id)", "testcase": false, "constructor": false}, {"identifier": "distributionSummary", "parameters": "(Id id)", "modifiers": "@Override public", "return": "DistributionSummary", "signature": "DistributionSummary distributionSummary(Id id)", "full_signature": "@Override public DistributionSummary distributionSummary(Id id)", "class_method_signature": "DropWizardMetricsRegistry.distributionSummary(Id id)", "testcase": false, "constructor": false}, {"identifier": "timer", "parameters": "(Id id)", "modifiers": "@Override public", "return": "Timer", "signature": "Timer timer(Id id)", "full_signature": "@Override public Timer timer(Id id)", "class_method_signature": "DropWizardMetricsRegistry.timer(Id id)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(final Metric metric)", "modifiers": "@Override public", "return": "void", "signature": "void register(final Metric metric)", "full_signature": "@Override public void register(final Metric metric)", "class_method_signature": "DropWizardMetricsRegistry.register(final Metric metric)", "testcase": false, "constructor": false}, {"identifier": "removeMetric", "parameters": "(Id id)", "modifiers": "@Override public", "return": "void", "signature": "void removeMetric(Id id)", "full_signature": "@Override public void removeMetric(Id id)", "class_method_signature": "DropWizardMetricsRegistry.removeMetric(Id id)", "testcase": false, "constructor": false}, {"identifier": "propagate", "parameters": "(String msg, Throwable t)", "modifiers": "@Override public", "return": "void", "signature": "void propagate(String msg, Throwable t)", "full_signature": "@Override public void propagate(String msg, Throwable t)", "class_method_signature": "DropWizardMetricsRegistry.propagate(String msg, Throwable t)", "testcase": false, "constructor": false}, {"identifier": "mixinMetric", "parameters": "(Id id)", "modifiers": "@Override public", "return": "MixinMetric", "signature": "MixinMetric mixinMetric(Id id)", "full_signature": "@Override public MixinMetric mixinMetric(Id id)", "class_method_signature": "DropWizardMetricsRegistry.mixinMetric(Id id)", "testcase": false, "constructor": false}, {"identifier": "registerExtendedMetrics", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void registerExtendedMetrics()", "full_signature": "@Override public void registerExtendedMetrics()", "class_method_signature": "DropWizardMetricsRegistry.registerExtendedMetrics()", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "(Id id, Y info)", "modifiers": "@Override public", "return": "Info", "signature": "Info info(Id id, Y info)", "full_signature": "@Override public Info info(Id id, Y info)", "class_method_signature": "DropWizardMetricsRegistry.info(Id id, Y info)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Id id)", "modifiers": "@Override public", "return": "X", "signature": "X get(Id id)", "full_signature": "@Override public X get(Id id)", "class_method_signature": "DropWizardMetricsRegistry.get(Id id)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Metric>", "signature": "Iterator<Metric> iterator()", "full_signature": "@Override public Iterator<Metric> iterator()", "class_method_signature": "DropWizardMetricsRegistry.iterator()", "testcase": false, "constructor": false}, {"identifier": "overSize", "parameters": "(Id id)", "modifiers": "public", "return": "boolean", "signature": "boolean overSize(Id id)", "full_signature": "public boolean overSize(Id id)", "class_method_signature": "DropWizardMetricsRegistry.overSize(Id id)", "testcase": false, "constructor": false}], "file": "client/lookout-reg-dropwizard/src/main/java/com/alipay/lookout/dropwizard/metrics/DropWizardMetricsRegistry.java"}, "focal_method": {"identifier": "distributionSummary", "parameters": "(Id id)", "modifiers": "@Override public", "return": "DistributionSummary", "body": "@Override\n    public DistributionSummary distributionSummary(Id id) {\n        if (overSize(id)) {\n            return NoopRegistry.INSTANCE.distributionSummary(id);\n        }\n        final String name = toMetricName(id);\n        return new DwMetricsDistributionSummary(clock(), id, impl.histogram(name));\n    }", "signature": "DistributionSummary distributionSummary(Id id)", "full_signature": "@Override public DistributionSummary distributionSummary(Id id)", "class_method_signature": "DropWizardMetricsRegistry.distributionSummary(Id id)", "testcase": false, "constructor": false, "invocations": ["overSize", "distributionSummary", "toMetricName", "clock", "histogram"]}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}