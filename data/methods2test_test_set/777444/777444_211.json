{"test_class": {"identifier": "ArrayExtractorTest", "superclass": "extends AbstractExtractorTest", "interfaces": "", "fields": [], "file": "agent/core/src/test/java/org/jolokia/converter/json/ArrayExtractorTest.java"}, "test_case": {"identifier": "direct", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void direct() throws AttributeNotFoundException {\n        int res = (Integer) extractObject(new Integer[]{1, 2, 3}, \"2\");\n        assertEquals(res,3);\n        Integer[] res2 = (Integer[]) extractObject(new Integer[]{1,2,3});\n        assertEquals(res2.length,3);\n        assertEquals((int) res2[0],1);\n        assertEquals((int) res2[1],2);\n        assertEquals((int) res2[2],3);\n    }", "signature": "void direct()", "full_signature": "@Test public void direct()", "class_method_signature": "ArrayExtractorTest.direct()", "testcase": true, "constructor": false, "invocations": ["extractObject", "assertEquals", "extractObject", "assertEquals", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "ArrayExtractor", "superclass": "", "interfaces": "implements Extractor", "fields": [], "methods": [{"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "Class", "signature": "Class getType()", "full_signature": "public Class getType()", "class_method_signature": "ArrayExtractor.getType()", "testcase": false, "constructor": false}, {"identifier": "extractObject", "parameters": "(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts,boolean jsonify)", "modifiers": "public", "return": "Object", "signature": "Object extractObject(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts,boolean jsonify)", "full_signature": "public Object extractObject(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts,boolean jsonify)", "class_method_signature": "ArrayExtractor.extractObject(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts,boolean jsonify)", "testcase": false, "constructor": false}, {"identifier": "setObjectValue", "parameters": "(StringToObjectConverter pConverter, Object pInner, String pIndex, Object  pValue)", "modifiers": "public", "return": "Object", "signature": "Object setObjectValue(StringToObjectConverter pConverter, Object pInner, String pIndex, Object  pValue)", "full_signature": "public Object setObjectValue(StringToObjectConverter pConverter, Object pInner, String pIndex, Object  pValue)", "class_method_signature": "ArrayExtractor.setObjectValue(StringToObjectConverter pConverter, Object pInner, String pIndex, Object  pValue)", "testcase": false, "constructor": false}, {"identifier": "canSetValue", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean canSetValue()", "full_signature": "public boolean canSetValue()", "class_method_signature": "ArrayExtractor.canSetValue()", "testcase": false, "constructor": false}, {"identifier": "extractArray", "parameters": "(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPath, boolean jsonify, int pLength)", "modifiers": "private", "return": "List<Object>", "signature": "List<Object> extractArray(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPath, boolean jsonify, int pLength)", "full_signature": "private List<Object> extractArray(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPath, boolean jsonify, int pLength)", "class_method_signature": "ArrayExtractor.extractArray(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPath, boolean jsonify, int pLength)", "testcase": false, "constructor": false}, {"identifier": "extractWithPath", "parameters": "(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPath, boolean jsonify, String pPathPart)", "modifiers": "private", "return": "Object", "signature": "Object extractWithPath(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPath, boolean jsonify, String pPathPart)", "full_signature": "private Object extractWithPath(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPath, boolean jsonify, String pPathPart)", "class_method_signature": "ArrayExtractor.extractWithPath(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPath, boolean jsonify, String pPathPart)", "testcase": false, "constructor": false}], "file": "agent/core/src/main/java/org/jolokia/converter/json/ArrayExtractor.java"}, "focal_method": {"identifier": "extractObject", "parameters": "(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts,boolean jsonify)", "modifiers": "public", "return": "Object", "body": "public Object extractObject(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts,boolean jsonify) throws AttributeNotFoundException {\n        int length = pConverter.getCollectionLength(Array.getLength(pValue));\n        String pathPart = pPathParts.isEmpty() ? null : pPathParts.pop();\n        if (pathPart != null) {\n            return extractWithPath(pConverter, pValue, pPathParts, jsonify, pathPart);\n        } else {\n            return jsonify ? extractArray(pConverter, pValue, pPathParts, jsonify, length) : pValue;\n        }\n    }", "signature": "Object extractObject(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts,boolean jsonify)", "full_signature": "public Object extractObject(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts,boolean jsonify)", "class_method_signature": "ArrayExtractor.extractObject(ObjectToJsonConverter pConverter, Object pValue, Stack<String> pPathParts,boolean jsonify)", "testcase": false, "constructor": false, "invocations": ["getCollectionLength", "getLength", "isEmpty", "pop", "extractWithPath", "extractArray"]}, "repository": {"repo_id": 777444, "url": "https://github.com/rhuss/jolokia", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 682, "size": 20451, "license": "licensed"}}