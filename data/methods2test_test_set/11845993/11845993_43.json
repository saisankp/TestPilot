{"test_class": {"identifier": "ElasticsearchAlerterTest", "superclass": "extends AbstractElasticsearchTest", "interfaces": "", "fields": [{"original_string": "public AbstractAlerterTest abstractAlerterTest = new AbstractAlerterTest();", "modifier": "public", "type": "AbstractAlerterTest", "declarator": "abstractAlerterTest = new AbstractAlerterTest()", "var_name": "abstractAlerterTest"}, {"original_string": "private ElasticsearchAlerter elasticsearchAlerter;", "modifier": "private", "type": "ElasticsearchAlerter", "declarator": "elasticsearchAlerter", "var_name": "elasticsearchAlerter"}, {"original_string": "private AlertSender alertSender;", "modifier": "private", "type": "AlertSender", "declarator": "alertSender", "var_name": "alertSender"}], "file": "stagemonitor-alerting/src/test/java/org/stagemonitor/alerting/alerter/ElasticsearchAlerterTest.java"}, "test_case": {"identifier": "testAlert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testAlert() throws Exception {\n\t\tIncident incident = alertSender.sendTestAlert(abstractAlerterTest.createSubscription(elasticsearchAlerter), CheckResult.Status.ERROR);\n\t\trefresh();\n\t\tCollection<Incident> allIncidents = elasticsearchClient.getAll(\"/stagemonitor/alerts\", 10, Incident.class);\n\t\tAssert.assertEquals(1, allIncidents.size());\n\t\tAssert.assertEquals(incident, allIncidents.iterator().next());\n\t}", "signature": "void testAlert()", "full_signature": "@Test public void testAlert()", "class_method_signature": "ElasticsearchAlerterTest.testAlert()", "testcase": true, "constructor": false, "invocations": ["sendTestAlert", "createSubscription", "refresh", "getAll", "assertEquals", "size", "assertEquals", "next", "iterator"]}, "focal_class": {"identifier": "ElasticsearchAlerter", "superclass": "extends Alerter", "interfaces": "", "fields": [{"original_string": "private CorePlugin corePlugin;", "modifier": "private", "type": "CorePlugin", "declarator": "corePlugin", "var_name": "corePlugin"}, {"original_string": "private HttpClient httpClient;", "modifier": "private", "type": "HttpClient", "declarator": "httpClient", "var_name": "httpClient"}], "methods": [{"identifier": "ElasticsearchAlerter", "parameters": "(ConfigurationRegistry configuration, HttpClient httpClient)", "modifiers": "public", "return": "", "signature": " ElasticsearchAlerter(ConfigurationRegistry configuration, HttpClient httpClient)", "full_signature": "public  ElasticsearchAlerter(ConfigurationRegistry configuration, HttpClient httpClient)", "class_method_signature": "ElasticsearchAlerter.ElasticsearchAlerter(ConfigurationRegistry configuration, HttpClient httpClient)", "testcase": false, "constructor": true}, {"identifier": "alert", "parameters": "(AlertArguments alertArguments)", "modifiers": "@Override public", "return": "void", "signature": "void alert(AlertArguments alertArguments)", "full_signature": "@Override public void alert(AlertArguments alertArguments)", "class_method_signature": "ElasticsearchAlerter.alert(AlertArguments alertArguments)", "testcase": false, "constructor": false}, {"identifier": "getAlerterType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAlerterType()", "full_signature": "@Override public String getAlerterType()", "class_method_signature": "ElasticsearchAlerter.getAlerterType()", "testcase": false, "constructor": false}, {"identifier": "isAvailable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAvailable()", "full_signature": "@Override public boolean isAvailable()", "class_method_signature": "ElasticsearchAlerter.isAvailable()", "testcase": false, "constructor": false}, {"identifier": "getTargetLabel", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getTargetLabel()", "full_signature": "@Override public String getTargetLabel()", "class_method_signature": "ElasticsearchAlerter.getTargetLabel()", "testcase": false, "constructor": false}], "file": "stagemonitor-alerting/src/main/java/org/stagemonitor/alerting/alerter/ElasticsearchAlerter.java"}, "focal_method": {"identifier": "alert", "parameters": "(AlertArguments alertArguments)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void alert(AlertArguments alertArguments) {\n\t\tString target = alertArguments.getSubscription().getTarget();\n\t\tif (StringUtils.isEmpty(target)) {\n\t\t\ttarget = \"/stagemonitor/alerts\";\n\t\t}\n\t\thttpClient.send(HttpRequestBuilder.<Integer>jsonRequest(\"POST\", corePlugin.getElasticsearchUrl() + target, alertArguments.getIncident()).build());\n\t}", "signature": "void alert(AlertArguments alertArguments)", "full_signature": "@Override public void alert(AlertArguments alertArguments)", "class_method_signature": "ElasticsearchAlerter.alert(AlertArguments alertArguments)", "testcase": false, "constructor": false, "invocations": ["getTarget", "getSubscription", "isEmpty", "send", "build", "jsonRequest", "getElasticsearchUrl", "getIncident"]}, "repository": {"repo_id": 11845993, "url": "https://github.com/stagemonitor/stagemonitor", "language": "Java", "is_fork": false, "fork_count": 268, "stargazer_count": 1585, "size": 10342, "license": "licensed"}}