{"test_class": {"identifier": "DefaultMachineIdTest", "superclass": "", "interfaces": "", "fields": [], "file": "camflake/src/test/java/com/camobile/camflake/DefaultMachineIdTest.java"}, "test_case": {"identifier": "testGetIdThrowsExceptionWhenErrorOccurs", "parameters": "()", "modifiers": "@Test(expected = CamflakeException.class) public", "return": "void", "body": "@Test(expected = CamflakeException.class)\n    public void testGetIdThrowsExceptionWhenErrorOccurs() throws Exception {\n        new Expectations(InetAddress.class) {\n            {\n                InetAddress.getLocalHost();\n                result = new UnknownHostException();\n            }\n        };\n\n        DefaultMachineId testee = new DefaultMachineId();\n        testee.getId();\n    }", "signature": "void testGetIdThrowsExceptionWhenErrorOccurs()", "full_signature": "@Test(expected = CamflakeException.class) public void testGetIdThrowsExceptionWhenErrorOccurs()", "class_method_signature": "DefaultMachineIdTest.testGetIdThrowsExceptionWhenErrorOccurs()", "testcase": true, "constructor": false, "invocations": ["getLocalHost", "getId"]}, "focal_class": {"identifier": "DefaultMachineId", "superclass": "", "interfaces": "implements MachineId", "fields": [{"original_string": "private static Logger log = LoggerFactory.getLogger(MachineId.class);", "modifier": "private static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(MachineId.class)", "var_name": "log"}], "methods": [{"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getId()", "full_signature": "@Override public int getId()", "class_method_signature": "DefaultMachineId.getId()", "testcase": false, "constructor": false}], "file": "camflake/src/main/java/com/camobile/camflake/DefaultMachineId.java"}, "focal_method": {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int getId() {\n        try {\n            byte[] a = InetAddress.getLocalHost().getAddress();\n            log.debug(\"Localhost IP address: {}\", InetAddress.getLocalHost().getHostAddress());\n\n            int machineId = (Byte.toUnsignedInt(a[2]))<<8 | Byte.toUnsignedInt(a[3]);\n            log.debug(\"Calculated machineID: {}\", machineId);\n            return machineId;\n\n        } catch (UnknownHostException e) {\n            String message = \"Failed to process machine id.\";\n            log.error(message, e);\n            throw new CamflakeException(message, e);\n        }\n    }", "signature": "int getId()", "full_signature": "@Override public int getId()", "class_method_signature": "DefaultMachineId.getId()", "testcase": false, "constructor": false, "invocations": ["getAddress", "getLocalHost", "debug", "getHostAddress", "getLocalHost", "toUnsignedInt", "toUnsignedInt", "debug", "error"]}, "repository": {"repo_id": 91779577, "url": "https://github.com/cam-inc/camflake", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 17, "size": 84, "license": "licensed"}}