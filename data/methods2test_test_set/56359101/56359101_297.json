{"test_class": {"identifier": "GuestOsJdbcDaoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String sqlGetGuestOsId = \"select id from guest_os where display_name = ?\";", "modifier": "private", "type": "String", "declarator": "sqlGetGuestOsId = \"select id from guest_os where display_name = ?\"", "var_name": "sqlGetGuestOsId"}, {"original_string": "private GuestOsJdbcDao spy;", "modifier": "private", "type": "GuestOsJdbcDao", "declarator": "spy", "var_name": "spy"}], "file": "autonomic-plugin-common/src/test/java/br/com/autonomiccs/autonomic/plugin/common/daos/GuestOsJdbcDaoTest.java"}, "test_case": {"identifier": "getGuestOsUuidTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getGuestOsUuidTest() {\n        JdbcTemplate jdbcTemplate = Mockito.mock(JdbcTemplate.class);\n        spy.setJdbcTemplate(jdbcTemplate);\n\n        Mockito.doReturn(321l).when(jdbcTemplate).queryForObject(Mockito.eq(sqlGetGuestOsId), Mockito.eq(Long.class), Mockito.eq(\"guesOsName\"));\n\n        long result = spy.getGuestOsUuid(\"guesOsName\");\n\n        Mockito.verify(jdbcTemplate).queryForObject(Mockito.eq(sqlGetGuestOsId), Mockito.eq(Long.class), Mockito.eq(\"guesOsName\"));\n        Assert.assertEquals(321l, result);\n    }", "signature": "void getGuestOsUuidTest()", "full_signature": "@Test public void getGuestOsUuidTest()", "class_method_signature": "GuestOsJdbcDaoTest.getGuestOsUuidTest()", "testcase": true, "constructor": false, "invocations": ["mock", "setJdbcTemplate", "queryForObject", "when", "doReturn", "eq", "eq", "eq", "getGuestOsUuid", "queryForObject", "verify", "eq", "eq", "eq", "assertEquals"]}, "focal_class": {"identifier": "GuestOsJdbcDao", "superclass": "extends JdbcDaoSupport", "interfaces": "", "fields": [{"original_string": "private String sqlGetGuestOsId = \"select id from guest_os where display_name = ?\";", "modifier": "private", "type": "String", "declarator": "sqlGetGuestOsId = \"select id from guest_os where display_name = ?\"", "var_name": "sqlGetGuestOsId"}], "methods": [{"identifier": "getGuestOsUuid", "parameters": "(String guestOsName)", "modifiers": "public", "return": "Long", "signature": "Long getGuestOsUuid(String guestOsName)", "full_signature": "public Long getGuestOsUuid(String guestOsName)", "class_method_signature": "GuestOsJdbcDao.getGuestOsUuid(String guestOsName)", "testcase": false, "constructor": false}], "file": "autonomic-plugin-common/src/main/java/br/com/autonomiccs/autonomic/plugin/common/daos/GuestOsJdbcDao.java"}, "focal_method": {"identifier": "getGuestOsUuid", "parameters": "(String guestOsName)", "modifiers": "public", "return": "Long", "body": "public Long getGuestOsUuid(String guestOsName) {\n        return getJdbcTemplate().queryForObject(sqlGetGuestOsId, Long.class, guestOsName);\n    }", "signature": "Long getGuestOsUuid(String guestOsName)", "full_signature": "public Long getGuestOsUuid(String guestOsName)", "class_method_signature": "GuestOsJdbcDao.getGuestOsUuid(String guestOsName)", "testcase": false, "constructor": false, "invocations": ["queryForObject", "getJdbcTemplate"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}