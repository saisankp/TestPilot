{"test_class": {"identifier": "SW360ClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String BASE = \"https://scott:tiger@www.eclipse.org\";", "modifier": "private static final", "type": "String", "declarator": "BASE = \"https://scott:tiger@www.eclipse.org\"", "var_name": "BASE"}, {"original_string": "private static final String BASE_REST_URI = BASE + \"/sw360\";", "modifier": "private static final", "type": "String", "declarator": "BASE_REST_URI = BASE + \"/sw360\"", "var_name": "BASE_REST_URI"}, {"original_string": "private SW360Client client;", "modifier": "private", "type": "SW360Client", "declarator": "client", "var_name": "client"}], "file": "modules/sw360/sw360-client/src/test/java/org/eclipse/sw360/antenna/sw360/client/rest/SW360ClientTest.java"}, "test_case": {"identifier": "testBaseIsCorrectlySetWhenResolving", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBaseIsCorrectlySetWhenResolving() {\n        final String path = \"/some/relative/path?foo=bar&baz=blub#fragment\";\n        final String uri = \"http://other.host.org\" + path;\n\n        assertThat(client.resolveAgainstBase(uri).toString()).isEqualTo(BASE_REST_URI + path);\n    }", "signature": "void testBaseIsCorrectlySetWhenResolving()", "full_signature": "@Test public void testBaseIsCorrectlySetWhenResolving()", "class_method_signature": "SW360ClientTest.testBaseIsCorrectlySetWhenResolving()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "toString", "resolveAgainstBase"]}, "focal_class": {"identifier": "SW360Client", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String URI_SEPARATOR = \"/\";", "modifier": "private static final", "type": "String", "declarator": "URI_SEPARATOR = \"/\"", "var_name": "URI_SEPARATOR"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(SW360Client.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(SW360Client.class)", "var_name": "LOG"}, {"original_string": "private final SW360ClientConfig clientConfig;", "modifier": "private final", "type": "SW360ClientConfig", "declarator": "clientConfig", "var_name": "clientConfig"}, {"original_string": "private final AccessTokenProvider tokenProvider;", "modifier": "private final", "type": "AccessTokenProvider", "declarator": "tokenProvider", "var_name": "tokenProvider"}], "methods": [{"identifier": "SW360Client", "parameters": "(SW360ClientConfig config, AccessTokenProvider tokenProvider)", "modifiers": "protected", "return": "", "signature": " SW360Client(SW360ClientConfig config, AccessTokenProvider tokenProvider)", "full_signature": "protected  SW360Client(SW360ClientConfig config, AccessTokenProvider tokenProvider)", "class_method_signature": "SW360Client.SW360Client(SW360ClientConfig config, AccessTokenProvider tokenProvider)", "testcase": false, "constructor": true}, {"identifier": "getClientConfig", "parameters": "()", "modifiers": "public", "return": "SW360ClientConfig", "signature": "SW360ClientConfig getClientConfig()", "full_signature": "public SW360ClientConfig getClientConfig()", "class_method_signature": "SW360Client.getClientConfig()", "testcase": false, "constructor": false}, {"identifier": "getTokenProvider", "parameters": "()", "modifiers": "public", "return": "AccessTokenProvider", "signature": "AccessTokenProvider getTokenProvider()", "full_signature": "public AccessTokenProvider getTokenProvider()", "class_method_signature": "SW360Client.getTokenProvider()", "testcase": false, "constructor": false}, {"identifier": "executeRequest", "parameters": "(Consumer<? super RequestBuilder> producer,\n                                                      ResponseProcessor<T> processor,\n                                                      String tag)", "modifiers": "protected", "return": "CompletableFuture<T>", "signature": "CompletableFuture<T> executeRequest(Consumer<? super RequestBuilder> producer,\n                                                      ResponseProcessor<T> processor,\n                                                      String tag)", "full_signature": "protected CompletableFuture<T> executeRequest(Consumer<? super RequestBuilder> producer,\n                                                      ResponseProcessor<T> processor,\n                                                      String tag)", "class_method_signature": "SW360Client.executeRequest(Consumer<? super RequestBuilder> producer,\n                                                      ResponseProcessor<T> processor,\n                                                      String tag)", "testcase": false, "constructor": false}, {"identifier": "executeJsonRequest", "parameters": "(Consumer<? super RequestBuilder> producer,\n                                                          Class<T> resultClass, String tag)", "modifiers": "protected", "return": "CompletableFuture<T>", "signature": "CompletableFuture<T> executeJsonRequest(Consumer<? super RequestBuilder> producer,\n                                                          Class<T> resultClass, String tag)", "full_signature": "protected CompletableFuture<T> executeJsonRequest(Consumer<? super RequestBuilder> producer,\n                                                          Class<T> resultClass, String tag)", "class_method_signature": "SW360Client.executeJsonRequest(Consumer<? super RequestBuilder> producer,\n                                                          Class<T> resultClass, String tag)", "testcase": false, "constructor": false}, {"identifier": "executeDeleteRequest", "parameters": "(String endpoint,\n                                                                          Collection<String> idsToDelete,\n                                                                          String tag)", "modifiers": "protected", "return": "CompletableFuture<MultiStatusResponse>", "signature": "CompletableFuture<MultiStatusResponse> executeDeleteRequest(String endpoint,\n                                                                          Collection<String> idsToDelete,\n                                                                          String tag)", "full_signature": "protected CompletableFuture<MultiStatusResponse> executeDeleteRequest(String endpoint,\n                                                                          Collection<String> idsToDelete,\n                                                                          String tag)", "class_method_signature": "SW360Client.executeDeleteRequest(String endpoint,\n                                                                          Collection<String> idsToDelete,\n                                                                          String tag)", "testcase": false, "constructor": false}, {"identifier": "executeJsonRequestWithDefault", "parameters": "(Consumer<? super RequestBuilder> producer,\n                                                                     Class<T> resultClass, String tag,\n                                                                     Supplier<? extends T> defaultResult)", "modifiers": "protected", "return": "CompletableFuture<T>", "signature": "CompletableFuture<T> executeJsonRequestWithDefault(Consumer<? super RequestBuilder> producer,\n                                                                     Class<T> resultClass, String tag,\n                                                                     Supplier<? extends T> defaultResult)", "full_signature": "protected CompletableFuture<T> executeJsonRequestWithDefault(Consumer<? super RequestBuilder> producer,\n                                                                     Class<T> resultClass, String tag,\n                                                                     Supplier<? extends T> defaultResult)", "class_method_signature": "SW360Client.executeJsonRequestWithDefault(Consumer<? super RequestBuilder> producer,\n                                                                     Class<T> resultClass, String tag,\n                                                                     Supplier<? extends T> defaultResult)", "testcase": false, "constructor": false}, {"identifier": "resourceUrl", "parameters": "(String... paths)", "modifiers": "protected", "return": "String", "signature": "String resourceUrl(String... paths)", "full_signature": "protected String resourceUrl(String... paths)", "class_method_signature": "SW360Client.resourceUrl(String... paths)", "testcase": false, "constructor": false}, {"identifier": "resolveAgainstBase", "parameters": "(String uri)", "modifiers": "protected", "return": "URI", "signature": "URI resolveAgainstBase(String uri)", "full_signature": "protected URI resolveAgainstBase(String uri)", "class_method_signature": "SW360Client.resolveAgainstBase(String uri)", "testcase": false, "constructor": false}, {"identifier": "manageTokenAndExecute", "parameters": "(Consumer<? super RequestBuilder> producer,\n                                                           ResponseProcessor<T> processor,\n                                                           String tag,\n                                                           boolean canRetry)", "modifiers": "private", "return": "CompletableFuture<T>", "signature": "CompletableFuture<T> manageTokenAndExecute(Consumer<? super RequestBuilder> producer,\n                                                           ResponseProcessor<T> processor,\n                                                           String tag,\n                                                           boolean canRetry)", "full_signature": "private CompletableFuture<T> manageTokenAndExecute(Consumer<? super RequestBuilder> producer,\n                                                           ResponseProcessor<T> processor,\n                                                           String tag,\n                                                           boolean canRetry)", "class_method_signature": "SW360Client.manageTokenAndExecute(Consumer<? super RequestBuilder> producer,\n                                                           ResponseProcessor<T> processor,\n                                                           String tag,\n                                                           boolean canRetry)", "testcase": false, "constructor": false}, {"identifier": "checkIfRetry", "parameters": "(Throwable exception)", "modifiers": "private", "return": "boolean", "signature": "boolean checkIfRetry(Throwable exception)", "full_signature": "private boolean checkIfRetry(Throwable exception)", "class_method_signature": "SW360Client.checkIfRetry(Throwable exception)", "testcase": false, "constructor": false}, {"identifier": "createMultiStatusProcessor", "parameters": "(String tag)", "modifiers": "private", "return": "ResponseProcessor<MultiStatusResponse>", "signature": "ResponseProcessor<MultiStatusResponse> createMultiStatusProcessor(String tag)", "full_signature": "private ResponseProcessor<MultiStatusResponse> createMultiStatusProcessor(String tag)", "class_method_signature": "SW360Client.createMultiStatusProcessor(String tag)", "testcase": false, "constructor": false}, {"identifier": "resolvePath", "parameters": "(URI base, URI source)", "modifiers": "private static", "return": "String", "signature": "String resolvePath(URI base, URI source)", "full_signature": "private static String resolvePath(URI base, URI source)", "class_method_signature": "SW360Client.resolvePath(URI base, URI source)", "testcase": false, "constructor": false}], "file": "modules/sw360/sw360-client/src/main/java/org/eclipse/sw360/antenna/sw360/client/rest/SW360Client.java"}, "focal_method": {"identifier": "resolveAgainstBase", "parameters": "(String uri)", "modifiers": "protected", "return": "URI", "body": "protected URI resolveAgainstBase(String uri) {\n        URI base = getClientConfig().getBaseURI();\n        URI source = URI.create(uri);\n        String path = resolvePath(base, source);\n        try {\n            return new URI(base.getScheme(), base.getAuthority(), path,\n                    source.getQuery(), source.getFragment());\n        } catch (URISyntaxException e) {\n            // should normally not happen as the components come from valid URIs\n            throw new IllegalArgumentException(\"Invalid URI to resolve: \" + uri);\n        }\n    }", "signature": "URI resolveAgainstBase(String uri)", "full_signature": "protected URI resolveAgainstBase(String uri)", "class_method_signature": "SW360Client.resolveAgainstBase(String uri)", "testcase": false, "constructor": false, "invocations": ["getBaseURI", "getClientConfig", "create", "resolvePath", "getScheme", "getAuthority", "getQuery", "getFragment"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}