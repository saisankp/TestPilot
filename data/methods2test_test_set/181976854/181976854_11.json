{"test_class": {"identifier": "AccordionListTest", "superclass": "", "interfaces": "", "fields": [], "file": "bento/src/test/java/com/yelp/android/bento/utils/AccordionListTest.java"}, "test_case": {"identifier": "test_SpanEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_SpanEmpty() {\n        assertEquals(new Range(0, 0), new AccordionList().span());\n    }", "signature": "void test_SpanEmpty()", "full_signature": "@Test public void test_SpanEmpty()", "class_method_signature": "AccordionListTest.test_SpanEmpty()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "span"]}, "focal_class": {"identifier": "AccordionList", "superclass": "", "interfaces": "implements Iterable<RangedValue<T>>", "fields": [{"original_string": "private List<RangedValue<T>> mRangeList = new ArrayList<>();", "modifier": "private", "type": "List<RangedValue<T>>", "declarator": "mRangeList = new ArrayList<>()", "var_name": "mRangeList"}], "methods": [{"identifier": "iterator", "parameters": "()", "modifiers": "@NonNull @Override public", "return": "Iterator<RangedValue<T>>", "signature": "Iterator<RangedValue<T>> iterator()", "full_signature": "@NonNull @Override public Iterator<RangedValue<T>> iterator()", "class_method_signature": "AccordionList.iterator()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AccordionList.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object object)", "full_signature": "@Override public boolean equals(Object object)", "class_method_signature": "AccordionList.equals(Object object)", "testcase": false, "constructor": false}, {"identifier": "valueAt", "parameters": "(int location)", "modifiers": "@NonNull public", "return": "T", "signature": "T valueAt(int location)", "full_signature": "@NonNull public T valueAt(int location)", "class_method_signature": "AccordionList.valueAt(int location)", "testcase": false, "constructor": false}, {"identifier": "rangedValueAt", "parameters": "(int location)", "modifiers": "@NonNull public", "return": "RangedValue<T>", "signature": "RangedValue<T> rangedValueAt(int location)", "full_signature": "@NonNull public RangedValue<T> rangedValueAt(int location)", "class_method_signature": "AccordionList.rangedValueAt(int location)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int entryIndex)", "modifiers": "@NonNull public", "return": "RangedValue<T>", "signature": "RangedValue<T> get(int entryIndex)", "full_signature": "@NonNull public RangedValue<T> get(int entryIndex)", "class_method_signature": "AccordionList.get(int entryIndex)", "testcase": false, "constructor": false}, {"identifier": "span", "parameters": "()", "modifiers": "@NonNull public", "return": "Range", "signature": "Range span()", "full_signature": "@NonNull public Range span()", "class_method_signature": "AccordionList.span()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "AccordionList.size()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "AccordionList.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(@NonNull T value, int size)", "modifiers": "public", "return": "void", "signature": "void add(@NonNull T value, int size)", "full_signature": "public void add(@NonNull T value, int size)", "class_method_signature": "AccordionList.add(@NonNull T value, int size)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(int entryIndex, @NonNull T value, int size)", "modifiers": "public", "return": "void", "signature": "void add(int entryIndex, @NonNull T value, int size)", "full_signature": "public void add(int entryIndex, @NonNull T value, int size)", "class_method_signature": "AccordionList.add(int entryIndex, @NonNull T value, int size)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(@NonNull AccordionList<T> values)", "modifiers": "public", "return": "void", "signature": "void addAll(@NonNull AccordionList<T> values)", "full_signature": "public void addAll(@NonNull AccordionList<T> values)", "class_method_signature": "AccordionList.addAll(@NonNull AccordionList<T> values)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int entryIndex, @NonNull T value, int size)", "modifiers": "public", "return": "void", "signature": "void set(int entryIndex, @NonNull T value, int size)", "full_signature": "public void set(int entryIndex, @NonNull T value, int size)", "class_method_signature": "AccordionList.set(int entryIndex, @NonNull T value, int size)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "AccordionList.clear()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(int entryIndex)", "modifiers": "public", "return": "void", "signature": "void remove(int entryIndex)", "full_signature": "public void remove(int entryIndex)", "class_method_signature": "AccordionList.remove(int entryIndex)", "testcase": false, "constructor": false}, {"identifier": "describeAccordionList", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String describeAccordionList()", "full_signature": "private String describeAccordionList()", "class_method_signature": "AccordionList.describeAccordionList()", "testcase": false, "constructor": false}], "file": "bento/src/main/java/com/yelp/android/bento/utils/AccordionList.java"}, "focal_method": {"identifier": "span", "parameters": "()", "modifiers": "@NonNull public", "return": "Range", "body": "@NonNull\n    public Range span() {\n        return new Range(\n                0, mRangeList.isEmpty() ? 0 : mRangeList.get(mRangeList.size() - 1).mRange.mUpper);\n    }", "signature": "Range span()", "full_signature": "@NonNull public Range span()", "class_method_signature": "AccordionList.span()", "testcase": false, "constructor": false, "invocations": ["isEmpty", "get", "size"]}, "repository": {"repo_id": 181976854, "url": "https://github.com/Yelp/bento", "language": "Java", "is_fork": false, "fork_count": 24, "stargazer_count": 277, "size": 4887, "license": "licensed"}}