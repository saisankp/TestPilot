{"test_class": {"identifier": "JobFeServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String APPLICATION_ID = \"test_app\";", "modifier": "private static final", "type": "String", "declarator": "APPLICATION_ID = \"test_app\"", "var_name": "APPLICATION_ID"}, {"original_string": "private JobFeService jobFeService;", "modifier": "private", "type": "JobFeService", "declarator": "jobFeService", "var_name": "jobFeService"}, {"original_string": "@Mock\n    private RegistrationBean registrationBean;", "modifier": "@Mock\n    private", "type": "RegistrationBean", "declarator": "registrationBean", "var_name": "registrationBean"}, {"original_string": "@Mock\n    private JobServerService jobServerService;", "modifier": "@Mock\n    private", "type": "JobServerService", "declarator": "jobServerService", "var_name": "jobServerService"}], "file": "spring-batch-lightmin-server/spring-batch-lightmin-server-fe/src/test/java/org/tuxdevelop/spring/batch/lightmin/server/fe/service/JobFeServiceTest.java"}, "test_case": {"identifier": "testFindById", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFindById() {\n        final LightminClientApplication lightminClientApplication = ServiceTestHelper.createLightminClientApplication();\n        when(this.registrationBean.findById(APPLICATION_ID)).thenReturn(lightminClientApplication);\n        when(this.jobServerService.getJobInfo(anyString(), any())).thenReturn(ApiTestHelper.createJobInfo(\"test_job\", 2));\n        final List<BatchJobInfoModel> result = this.jobFeService.findById(APPLICATION_ID);\n        BDDAssertions.then(result).isNotNull();\n        BDDAssertions.then(result.size()).isEqualTo(2);\n    }", "signature": "void testFindById()", "full_signature": "@Test public void testFindById()", "class_method_signature": "JobFeServiceTest.testFindById()", "testcase": true, "constructor": false, "invocations": ["createLightminClientApplication", "thenReturn", "when", "findById", "thenReturn", "when", "getJobInfo", "anyString", "any", "createJobInfo", "findById", "isNotNull", "then", "isEqualTo", "then", "size"]}, "focal_class": {"identifier": "JobFeService", "superclass": "extends CommonFeService", "interfaces": "", "fields": [{"original_string": "private final JobServerService jobServerService;", "modifier": "private final", "type": "JobServerService", "declarator": "jobServerService", "var_name": "jobServerService"}, {"original_string": "private final RegistrationBean registrationBean;", "modifier": "private final", "type": "RegistrationBean", "declarator": "registrationBean", "var_name": "registrationBean"}], "methods": [{"identifier": "JobFeService", "parameters": "(final JobServerService jobServerService, final RegistrationBean registrationBean)", "modifiers": "public", "return": "", "signature": " JobFeService(final JobServerService jobServerService, final RegistrationBean registrationBean)", "full_signature": "public  JobFeService(final JobServerService jobServerService, final RegistrationBean registrationBean)", "class_method_signature": "JobFeService.JobFeService(final JobServerService jobServerService, final RegistrationBean registrationBean)", "testcase": false, "constructor": true}, {"identifier": "findById", "parameters": "(final String applicationId)", "modifiers": "public", "return": "List<BatchJobInfoModel>", "signature": "List<BatchJobInfoModel> findById(final String applicationId)", "full_signature": "public List<BatchJobInfoModel> findById(final String applicationId)", "class_method_signature": "JobFeService.findById(final String applicationId)", "testcase": false, "constructor": false}], "file": "spring-batch-lightmin-server/spring-batch-lightmin-server-fe/src/main/java/org/tuxdevelop/spring/batch/lightmin/server/fe/service/JobFeService.java"}, "focal_method": {"identifier": "findById", "parameters": "(final String applicationId)", "modifiers": "public", "return": "List<BatchJobInfoModel>", "body": "public List<BatchJobInfoModel> findById(final String applicationId) {\n        final LightminClientApplication lightminClientApplication = this.registrationBean.findById(applicationId);\n        final List<String> registeredJobs = lightminClientApplication.getLightminClientInformation().getRegisteredJobs();\n\n        final List<BatchJobInfoModel> batchJobInfoModels = new ArrayList<>();\n\n        registeredJobs\n                .forEach(\n                        jobName -> {\n                            final JobInfo jobInfo = this.jobServerService.getJobInfo(jobName, lightminClientApplication);\n                            final BatchJobInfoModel batchJobInfoModel = new BatchJobInfoModel();\n                            batchJobInfoModel.setInstanceCount(jobInfo.getJobInstanceCount());\n                            batchJobInfoModel.setJobName(jobInfo.getJobName());\n                            batchJobInfoModels.add(batchJobInfoModel);\n                        }\n                );\n\n        return batchJobInfoModels;\n    }", "signature": "List<BatchJobInfoModel> findById(final String applicationId)", "full_signature": "public List<BatchJobInfoModel> findById(final String applicationId)", "class_method_signature": "JobFeService.findById(final String applicationId)", "testcase": false, "constructor": false, "invocations": ["findById", "getRegisteredJobs", "getLightminClientInformation", "forEach", "getJobInfo", "setInstanceCount", "getJobInstanceCount", "setJobName", "getJobName", "add"]}, "repository": {"repo_id": 29479059, "url": "https://github.com/tuxdevelop/spring-batch-lightmin", "language": "Java", "is_fork": false, "fork_count": 34, "stargazer_count": 109, "size": 12355, "license": "licensed"}}