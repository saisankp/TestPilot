{"test_class": {"identifier": "NameParserANTLRTest", "superclass": "", "interfaces": "", "fields": [], "file": "name-parser-antlr/src/test/java/org/gbif/nameparser/NameParserANTLRTest.java"}, "test_case": {"identifier": "parse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void parse() throws UnparsableNameException {\n    NameParserANTLR parser = new NameParserANTLR();\n    System.out.println(parser.parse(\"Abies alba Mill.\"));\n    System.out.println(parser.parse(\"Abies alba L.\"));\n    System.out.println(parser.parse(\"BOLD:AAA2176\"));\n    System.out.println(parser.parse(\"SH495646.07FU\"));\n    System.out.println(parser.parse(\"Bryocyclops campaneri Rocha C.E.F. & Bjornberg M.H.G.C., 1987\"));\n    System.out.println(parser.parse(\"Equine rhinitis A virus\"));\n    System.out.println(parser.parse(\"Isosphaera pallida (ex Woronichin, 1927) Giovannoni et al., 1995\"));\n  }", "signature": "void parse()", "full_signature": "@Test public void parse()", "class_method_signature": "NameParserANTLRTest.parse()", "testcase": true, "constructor": false, "invocations": ["println", "parse", "println", "parse", "println", "parse", "println", "parse", "println", "parse", "println", "parse", "println", "parse"]}, "focal_class": {"identifier": "NameParserANTLR", "superclass": "", "interfaces": "implements org.gbif.nameparser.api.NameParser", "fields": [{"original_string": "private static Logger LOG = LoggerFactory.getLogger(NameParserANTLR.class);", "modifier": "private static", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(NameParserANTLR.class)", "var_name": "LOG"}], "methods": [{"identifier": "unparsable", "parameters": "(NameType type, String name)", "modifiers": "private static", "return": "ParsedName", "signature": "ParsedName unparsable(NameType type, String name)", "full_signature": "private static ParsedName unparsable(NameType type, String name)", "class_method_signature": "NameParserANTLR.unparsable(NameType type, String name)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String scientificName)", "modifiers": "public", "return": "ParsedName", "signature": "ParsedName parse(String scientificName)", "full_signature": "public ParsedName parse(String scientificName)", "class_method_signature": "NameParserANTLR.parse(String scientificName)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(final String scientificName, Rank rank)", "modifiers": "@Override public", "return": "ParsedName", "signature": "ParsedName parse(final String scientificName, Rank rank)", "full_signature": "@Override public ParsedName parse(final String scientificName, Rank rank)", "class_method_signature": "NameParserANTLR.parse(final String scientificName, Rank rank)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String scientificName, Rank rank, @Nullable NomCode code)", "modifiers": "public", "return": "ParsedName", "signature": "ParsedName parse(String scientificName, Rank rank, @Nullable NomCode code)", "full_signature": "public ParsedName parse(String scientificName, Rank rank, @Nullable NomCode code)", "class_method_signature": "NameParserANTLR.parse(String scientificName, Rank rank, @Nullable NomCode code)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "NameParserANTLR.close()", "testcase": false, "constructor": false}], "file": "name-parser-antlr/src/main/java/org/gbif/nameparser/NameParserANTLR.java"}, "focal_method": {"identifier": "parse", "parameters": "(String scientificName)", "modifiers": "public", "return": "ParsedName", "body": "public ParsedName parse(String scientificName) throws UnparsableNameException {\n    return parse(scientificName, Rank.UNRANKED);\n  }", "signature": "ParsedName parse(String scientificName)", "full_signature": "public ParsedName parse(String scientificName)", "class_method_signature": "NameParserANTLR.parse(String scientificName)", "testcase": false, "constructor": false, "invocations": ["parse"]}, "repository": {"repo_id": 16201889, "url": "https://github.com/gbif/name-parser", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 11, "size": 1978, "license": "licensed"}}