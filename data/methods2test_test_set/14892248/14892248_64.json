{"test_class": {"identifier": "IndicCompositeCharacterComparatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "itext/src/test/java/com/itextpdf/text/pdf/languages/IndicCompositeCharacterComparatorTest.java"}, "test_case": {"identifier": "testFirstStringIsShorter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFirstStringIsShorter() {\n        String oneString = \"\\u0938\\u0924\";\n        String twoString = \"\\u0938\\u0924\\u0938\\u0924\";\n        int result = new IndicCompositeCharacterComparator().compare(oneString, twoString);\n        assertTrue(\"expected to be greater than\", result >= 1);\n    }", "signature": "void testFirstStringIsShorter()", "full_signature": "@Test public void testFirstStringIsShorter()", "class_method_signature": "IndicCompositeCharacterComparatorTest.testFirstStringIsShorter()", "testcase": true, "constructor": false, "invocations": ["compare", "assertTrue"]}, "focal_class": {"identifier": "IndicCompositeCharacterComparator", "superclass": "", "interfaces": "implements Comparator<String>", "fields": [], "methods": [{"identifier": "compare", "parameters": "(String o1, String o2)", "modifiers": "public", "return": "int", "signature": "int compare(String o1, String o2)", "full_signature": "public int compare(String o1, String o2)", "class_method_signature": "IndicCompositeCharacterComparator.compare(String o1, String o2)", "testcase": false, "constructor": false}], "file": "itext/src/main/java/com/itextpdf/text/pdf/languages/IndicCompositeCharacterComparator.java"}, "focal_method": {"identifier": "compare", "parameters": "(String o1, String o2)", "modifiers": "public", "return": "int", "body": "public int compare(String o1, String o2) {\n        if (o1.length() < o2.length()) {\n            return 1;\n        }\n        if (o1.length() > o2.length()) {\n            return -1;\n        }\n        return o1.compareTo(o2);\n    }", "signature": "int compare(String o1, String o2)", "full_signature": "public int compare(String o1, String o2)", "class_method_signature": "IndicCompositeCharacterComparator.compare(String o1, String o2)", "testcase": false, "constructor": false, "invocations": ["length", "length", "length", "length", "compareTo"]}, "repository": {"repo_id": 14892248, "url": "https://github.com/itext/itextpdf", "language": "Java", "is_fork": false, "fork_count": 400, "stargazer_count": 1164, "size": 115070, "license": "licensed"}}