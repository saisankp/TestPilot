{"test_class": {"identifier": "PollableInfoWrapperTest", "superclass": "", "interfaces": "", "fields": [], "file": "client/lookout-reg-server/src/test/java/com/alipay/lookout/remote/step/PollableInfoWrapperTest.java"}, "test_case": {"identifier": "testAutoPollSuggestion_POLL_WHEN_UPDATED", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAutoPollSuggestion_POLL_WHEN_UPDATED() {\n        ManualClock clock = new ManualClock();\n        Registry r = new DefaultRegistry(clock);\n        PollableInfoWrapper pollableInfoWrapper = new PollableInfoWrapper(r.createId(\"name\"),\n            new AutoPollFriendlyInfo() {\n\n                @Override\n                public AutoPollSuggestion autoPollSuggest() {\n                    return POLL_WHEN_UPDATED;\n                }\n\n                @Override\n                public long lastModifiedTime() {\n                    return 1;\n                }\n\n                @Override\n                public String value() {\n                    return \"x\";\n                }\n            }, clock);\n\n        Assert.assertTrue(pollableInfoWrapper.isAutoPolledAllowed(1000));\n        Assert.assertTrue(pollableInfoWrapper.isAutoPolledAllowed(9000));\n    }", "signature": "void testAutoPollSuggestion_POLL_WHEN_UPDATED()", "full_signature": "@Test public void testAutoPollSuggestion_POLL_WHEN_UPDATED()", "class_method_signature": "PollableInfoWrapperTest.testAutoPollSuggestion_POLL_WHEN_UPDATED()", "testcase": true, "constructor": false, "invocations": ["createId", "assertTrue", "isAutoPolledAllowed", "assertTrue", "isAutoPolledAllowed"]}, "focal_class": {"identifier": "PollableInfoWrapper", "superclass": "extends InfoWrapper", "interfaces": "", "fields": [{"original_string": "private long               lastPolledTime = -1l;", "modifier": "private", "type": "long", "declarator": "lastPolledTime = -1l", "var_name": "lastPolledTime"}, {"original_string": "private AutoPollSuggestion suggestion;", "modifier": "private", "type": "AutoPollSuggestion", "declarator": "suggestion", "var_name": "suggestion"}], "methods": [{"identifier": "PollableInfoWrapper", "parameters": "(Id id, Info info, Clock clock)", "modifiers": "public", "return": "", "signature": " PollableInfoWrapper(Id id, Info info, Clock clock)", "full_signature": "public  PollableInfoWrapper(Id id, Info info, Clock clock)", "class_method_signature": "PollableInfoWrapper.PollableInfoWrapper(Id id, Info info, Clock clock)", "testcase": false, "constructor": true}, {"identifier": "isAutoPolledAllowed", "parameters": "(long stepMills)", "modifiers": "public", "return": "boolean", "signature": "boolean isAutoPolledAllowed(long stepMills)", "full_signature": "public boolean isAutoPolledAllowed(long stepMills)", "class_method_signature": "PollableInfoWrapper.isAutoPolledAllowed(long stepMills)", "testcase": false, "constructor": false}, {"identifier": "measure", "parameters": "()", "modifiers": "@Override public", "return": "Indicator", "signature": "Indicator measure()", "full_signature": "@Override public Indicator measure()", "class_method_signature": "PollableInfoWrapper.measure()", "testcase": false, "constructor": false}], "file": "client/lookout-reg-server/src/main/java/com/alipay/lookout/remote/step/PollableInfoWrapper.java"}, "focal_method": {"identifier": "isAutoPolledAllowed", "parameters": "(long stepMills)", "modifiers": "public", "return": "boolean", "body": "public boolean isAutoPolledAllowed(long stepMills) {\n        if (suggestion == null) {\n            return true;\n        }\n        if (suggestion == AutoPollSuggestion.NEVEL_AUTO_POLL) {\n            return false;\n        }\n        //        if (suggestion == AutoPollSuggestion.POLL_ONCE) {\n        //            if (lastPolledTime > 0) {\n        //                return false;\n        //            }\n        //            lastPolledTime = clock.wallTime();//\u7b2c\u4e00\u6b21\u6267\u884c\u540e\u7684\u65f6\u95f4\n        //            return true;\n        //        }\n        if (suggestion == AutoPollSuggestion.POLL_WHEN_UPDATED) {\n            //\u6700\u8fd1\u53d1\u751f\u66f4\u65b0\u4e86\n            if (lastPolledTime <= ((AutoPollFriendlyInfo) info).lastModifiedTime()) {\n                lastPolledTime = clock.wallTime();\n                return true;\n            }\n            return false;\n        }\n\n        if (suggestion.intervalMills() < stepMills) {\n            return true;//\u5ffd\u7565\u5efa\u8bae\u95f4\u9694\n        }\n        // \u9ed8\u8ba4\u4f1a\u6709\u5c0f\u4e8estep\u7684\u8bef\u5dee\uff1b\n        if (lastPolledTime <= 0\n            || (clock.wallTime() - lastPolledTime >= suggestion.intervalMills())) {\n            lastPolledTime = clock.wallTime();\n            return true;\n        }\n        return false;\n    }", "signature": "boolean isAutoPolledAllowed(long stepMills)", "full_signature": "public boolean isAutoPolledAllowed(long stepMills)", "class_method_signature": "PollableInfoWrapper.isAutoPolledAllowed(long stepMills)", "testcase": false, "constructor": false, "invocations": ["lastModifiedTime", "wallTime", "intervalMills", "wallTime", "intervalMills", "wallTime"]}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}