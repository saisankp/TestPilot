{"test_class": {"identifier": "PseudoAtomTest", "superclass": "extends AbstractPseudoAtomTest", "interfaces": "", "fields": [], "file": "base/silent/src/test/java/org/openscience/cdk/silent/PseudoAtomTest.java"}, "test_case": {"identifier": "testPseudoAtom_String_Point3d", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPseudoAtom_String_Point3d() {\n        Point3d point = new Point3d(1.0, 2.0, 3.0);\n        String label = \"Arg255\";\n        IPseudoAtom a = new PseudoAtom(label, point);\n        Assert.assertEquals(\"R\", a.getSymbol());\n        Assert.assertEquals(label, a.getLabel());\n        Assert.assertEquals(point, a.getPoint3d());\n        Assert.assertNull(a.getPoint2d());\n        Assert.assertNull(a.getFractionalPoint3d());\n    }", "signature": "void testPseudoAtom_String_Point3d()", "full_signature": "@Test public void testPseudoAtom_String_Point3d()", "class_method_signature": "PseudoAtomTest.testPseudoAtom_String_Point3d()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getSymbol", "assertEquals", "getLabel", "assertEquals", "getPoint3d", "assertNull", "getPoint2d", "assertNull", "getFractionalPoint3d"]}, "focal_class": {"identifier": "PseudoAtom", "superclass": "extends Atom", "interfaces": "implements java.io.Serializable, Cloneable, IPseudoAtom", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private String            label;", "modifier": "private", "type": "String", "declarator": "label", "var_name": "label"}, {"original_string": "private int               attachPoint;", "modifier": "private", "type": "int", "declarator": "attachPoint", "var_name": "attachPoint"}], "methods": [{"identifier": "PseudoAtom", "parameters": "()", "modifiers": "public", "return": "", "signature": " PseudoAtom()", "full_signature": "public  PseudoAtom()", "class_method_signature": "PseudoAtom.PseudoAtom()", "testcase": false, "constructor": true}, {"identifier": "PseudoAtom", "parameters": "(String label)", "modifiers": "public", "return": "", "signature": " PseudoAtom(String label)", "full_signature": "public  PseudoAtom(String label)", "class_method_signature": "PseudoAtom.PseudoAtom(String label)", "testcase": false, "constructor": true}, {"identifier": "PseudoAtom", "parameters": "(IElement element)", "modifiers": "public", "return": "", "signature": " PseudoAtom(IElement element)", "full_signature": "public  PseudoAtom(IElement element)", "class_method_signature": "PseudoAtom.PseudoAtom(IElement element)", "testcase": false, "constructor": true}, {"identifier": "PseudoAtom", "parameters": "(String label, javax.vecmath.Point3d point3d)", "modifiers": "public", "return": "", "signature": " PseudoAtom(String label, javax.vecmath.Point3d point3d)", "full_signature": "public  PseudoAtom(String label, javax.vecmath.Point3d point3d)", "class_method_signature": "PseudoAtom.PseudoAtom(String label, javax.vecmath.Point3d point3d)", "testcase": false, "constructor": true}, {"identifier": "PseudoAtom", "parameters": "(String label, javax.vecmath.Point2d point2d)", "modifiers": "public", "return": "", "signature": " PseudoAtom(String label, javax.vecmath.Point2d point2d)", "full_signature": "public  PseudoAtom(String label, javax.vecmath.Point2d point2d)", "class_method_signature": "PseudoAtom.PseudoAtom(String label, javax.vecmath.Point2d point2d)", "testcase": false, "constructor": true}, {"identifier": "getLabel", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getLabel()", "full_signature": "@Override public String getLabel()", "class_method_signature": "PseudoAtom.getLabel()", "testcase": false, "constructor": false}, {"identifier": "setLabel", "parameters": "(String label)", "modifiers": "@Override public", "return": "void", "signature": "void setLabel(String label)", "full_signature": "@Override public void setLabel(String label)", "class_method_signature": "PseudoAtom.setLabel(String label)", "testcase": false, "constructor": false}, {"identifier": "getAttachPointNum", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getAttachPointNum()", "full_signature": "@Override public int getAttachPointNum()", "class_method_signature": "PseudoAtom.getAttachPointNum()", "testcase": false, "constructor": false}, {"identifier": "setAttachPointNum", "parameters": "(int attachPoint)", "modifiers": "@Override public", "return": "void", "signature": "void setAttachPointNum(int attachPoint)", "full_signature": "@Override public void setAttachPointNum(int attachPoint)", "class_method_signature": "PseudoAtom.setAttachPointNum(int attachPoint)", "testcase": false, "constructor": false}, {"identifier": "setStereoParity", "parameters": "(Integer stereoParity)", "modifiers": "@Override public", "return": "void", "signature": "void setStereoParity(Integer stereoParity)", "full_signature": "@Override public void setStereoParity(Integer stereoParity)", "class_method_signature": "PseudoAtom.setStereoParity(Integer stereoParity)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PseudoAtom.toString()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "IPseudoAtom", "signature": "IPseudoAtom clone()", "full_signature": "@Override public IPseudoAtom clone()", "class_method_signature": "PseudoAtom.clone()", "testcase": false, "constructor": false}], "file": "base/silent/src/main/java/org/openscience/cdk/silent/PseudoAtom.java"}, "focal_method": {"identifier": "getLabel", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getLabel() {\n        return label;\n    }", "signature": "String getLabel()", "full_signature": "@Override public String getLabel()", "class_method_signature": "PseudoAtom.getLabel()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}