{"test_class": {"identifier": "UncommonLetterMapTest", "superclass": "", "interfaces": "", "fields": [], "file": "Sefaria-ElasticSearch-uncommon-letters/src/test/java/org/sefaria/sefariaplugin/analysis/UncommonLetterMapTest.java"}, "test_case": {"identifier": "TestGetMinifiedWord", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void TestGetMinifiedWord() throws Exception {\n        UncommonLetterMap ulm = new UncommonLetterMap(3);\n        assertEquals(\"\u05d0\u05d1\u05d2\",ulm.getMinifiedWord(\"\u05d0\u05d1\u05d2\"));\n        assertEquals(\"\u05d1\u05d2\u05d3\",ulm.getMinifiedWord(\"\u05d0\u05d1\u05d2\u05d3\"));\n        assertEquals(\"\u05d3\u05d2\u05d1\",ulm.getMinifiedWord(\"\u05d3\u05d2\u05d1\u05d0\"));\n        assertEquals(\"\u05d3\u05d2\u05d1\",ulm.getMinifiedWord(\"\u05d3\u05d2\u05d0\u05d1\"));\n        assertEquals(\"\u05d2\u05d3\u05d1\",ulm.getMinifiedWord(\"\u05d2\u05d0\u05d3\u05d1\"));\n        assertEquals(\"\u05e6\u05e6\u05e6\",ulm.getMinifiedWord(\"\u05d0\u05e7\u05e8\u05d0\u05dc\u05d7\u05d3\u05d2\u05da\u05db\u05dc\u05d7\u05e6\u05e9\u05db\u05d3\u05d2\u05db\u05e6\u05d3\u05d2\u05db\u05e9\u05d3\u05d2\u05db\u05e9\u05d3\u05d2\u05db\u05e6\u05e6\u05d2\u05db\u05e9\u05d3\u05d2\u05db\u05e6\"));\n        assertEquals(\"\u05d3\u05d2\",ulm.getMinifiedWord(\"\u05d3\u05d2\"));\n        assertEquals(\"\",ulm.getMinifiedWord(\"\"));\n        assertEquals(\"\u05d9\",ulm.getMinifiedWord(\"\u05d9\"));\n    }", "signature": "void TestGetMinifiedWord()", "full_signature": "@Test public void TestGetMinifiedWord()", "class_method_signature": "UncommonLetterMapTest.TestGetMinifiedWord()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "MinifiedWord(\"\u05d0", "assertEquals", "MinifiedWord(\"\u05d0", "assertEquals", "MinifiedWord(\"\u05d3", "assertEquals", "MinifiedWord(\"\u05d3", "assertEquals", "MinifiedWord(\"\u05d2", "assertEquals", "MinifiedWord(\"\u05d0", "assertEquals", "tMinifiedWord(\"", "assertEquals", "getMinifiedWord", "assertEquals", "etMinifiedWord("]}, "focal_class": {"identifier": "UncommonLetterMap", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Character[] LETTER_FREQS = {\n            '\u05d9','\u05d5','\u05d0','\u05de','\u05d4',\n            '\u05dc','\u05e8','\u05e0','\u05d1','\u05e9',\n            '\u05ea','\u05d3','\u05db','\u05e2','\u05d7',\n            '\u05e7','\u05e4','\u05e1','\u05d8','\u05d6',\n            '\u05d2','\u05e6'\n    };", "modifier": "private static final", "type": "Character[]", "declarator": "LETTER_FREQS = {\n            '\u05d9','\u05d5','\u05d0','\u05de','\u05d4',\n            '\u05dc','\u05e8','\u05e0','\u05d1','\u05e9',\n            '\u05ea','\u05d3','\u05db','\u05e2','\u05d7',\n            '\u05e7','\u05e4','\u05e1','\u05d8','\u05d6',\n            '\u05d2','\u05e6'\n    }", "var_name": "LETTER_FREQS"}, {"original_string": "private static final Character[] SOFITIM = {\n            '\u05da','\u05dd','\u05df','\u05e3','\u05e5'\n    };", "modifier": "private static final", "type": "Character[]", "declarator": "SOFITIM = {\n            '\u05da','\u05dd','\u05df','\u05e3','\u05e5'\n    }", "var_name": "SOFITIM"}, {"original_string": "private static final Character[] NONSOFITIM = {\n            '\u05db','\u05de','\u05e0','\u05e4','\u05e6'\n    };", "modifier": "private static final", "type": "Character[]", "declarator": "NONSOFITIM = {\n            '\u05db','\u05de','\u05e0','\u05e4','\u05e6'\n    }", "var_name": "NONSOFITIM"}, {"original_string": "private List<Character> letter_freq_list;", "modifier": "private", "type": "List<Character>", "declarator": "letter_freq_list", "var_name": "letter_freq_list"}, {"original_string": "private Map<Character, Character> sofitMap;", "modifier": "private", "type": "Map<Character, Character>", "declarator": "sofitMap", "var_name": "sofitMap"}, {"original_string": "private int len_min_word;", "modifier": "private", "type": "int", "declarator": "len_min_word", "var_name": "len_min_word"}], "methods": [{"identifier": "UncommonLetterMap", "parameters": "(int len_min_word)", "modifiers": "public", "return": "", "signature": " UncommonLetterMap(int len_min_word)", "full_signature": "public  UncommonLetterMap(int len_min_word)", "class_method_signature": "UncommonLetterMap.UncommonLetterMap(int len_min_word)", "testcase": false, "constructor": true}, {"identifier": "getMinifiedWord", "parameters": "(String word)", "modifiers": "public", "return": "String", "signature": "String getMinifiedWord(String word)", "full_signature": "public String getMinifiedWord(String word)", "class_method_signature": "UncommonLetterMap.getMinifiedWord(String word)", "testcase": false, "constructor": false}], "file": "Sefaria-ElasticSearch-uncommon-letters/src/main/java/org/sefaria/sefariaplugin/analysis/UncommonLetterMap.java"}, "focal_method": {"identifier": "getMinifiedWord", "parameters": "(String word)", "modifiers": "public", "return": "String", "body": "public String getMinifiedWord(String word) {\n        Queue<LetterFreqPair> mostInfreq = new LinkedList<LetterFreqPair>();\n        PriorityQueue<LetterFreqPair> infreqHeap = new PriorityQueue<LetterFreqPair>();\n        for (char letter : word.toCharArray()) {\n            letter = this.sofitMap.containsKey(letter) ? this.sofitMap.get(letter) : letter;\n            int ind = letter_freq_list.indexOf(letter);\n            if (ind != -1) {\n                if (infreqHeap.size() <= this.len_min_word || ind > infreqHeap.peek().freq) {\n                    LetterFreqPair lfp = new LetterFreqPair(letter, ind);\n                    mostInfreq.add(lfp);\n                    infreqHeap.add(lfp);\n                }\n                if (mostInfreq.size() > this.len_min_word) {\n                    mostInfreq.remove(infreqHeap.poll());\n                }\n            }\n        }\n\n        String out = \"\";\n        for (LetterFreqPair lfp : mostInfreq) {\n            out += lfp.getLetter();\n        }\n\n        return out;\n    }", "signature": "String getMinifiedWord(String word)", "full_signature": "public String getMinifiedWord(String word)", "class_method_signature": "UncommonLetterMap.getMinifiedWord(String word)", "testcase": false, "constructor": false, "invocations": ["toCharArray", "containsKey", "get", "indexOf", "size", "peek", "add", "add", "size", "remove", "poll", "getLetter"]}, "repository": {"repo_id": 82448747, "url": "https://github.com/Sefaria/Sefaria-ElasticSearch", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 6, "size": 375, "license": "licensed"}}