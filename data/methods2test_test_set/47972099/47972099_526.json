{"test_class": {"identifier": "BoltWrapperTest", "superclass": "extends AbstractTest", "interfaces": "", "fields": [], "file": "flink-contrib/flink-storm/src/test/java/org/apache/flink/storm/wrappers/BoltWrapperTest.java"}, "test_case": {"identifier": "testClose", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Test public", "return": "void", "body": "@SuppressWarnings(\"unchecked\")\n\t@Test\n\tpublic void testClose() throws Exception {\n\t\tfinal IRichBolt bolt = mock(IRichBolt.class);\n\n\t\tfinal SetupOutputFieldsDeclarer declarer = new SetupOutputFieldsDeclarer();\n\t\tdeclarer.declare(new Fields(\"dummy\"));\n\t\tPowerMockito.whenNew(SetupOutputFieldsDeclarer.class).withNoArguments().thenReturn(declarer);\n\n\t\tfinal BoltWrapper<Object, Object> wrapper = new BoltWrapper<Object, Object>(bolt);\n\n\t\twrapper.setup(createMockStreamTask(), new StreamConfig(new Configuration()), mock(Output.class));\n\n\t\twrapper.close();\n\t\twrapper.dispose();\n\n\t\tverify(bolt).cleanup();\n\t}", "signature": "void testClose()", "full_signature": "@SuppressWarnings(\"unchecked\") @Test public void testClose()", "class_method_signature": "BoltWrapperTest.testClose()", "testcase": true, "constructor": false, "invocations": ["mock", "declare", "thenReturn", "withNoArguments", "whenNew", "setup", "createMockStreamTask", "mock", "close", "dispose", "cleanup", "verify"]}, "focal_class": {"identifier": "BoltWrapper", "superclass": "extends AbstractStreamOperator<OUT>", "interfaces": "implements OneInputStreamOperator<IN, OUT>", "fields": [{"original_string": "private static final long serialVersionUID = -4788589118464155835L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -4788589118464155835L", "var_name": "serialVersionUID"}, {"original_string": "public final static String DEFAULT_ID = \"default ID\";", "modifier": "public final static", "type": "String", "declarator": "DEFAULT_ID = \"default ID\"", "var_name": "DEFAULT_ID"}, {"original_string": "public final static String DEFUALT_BOLT_NAME = \"Unnamed Bolt\";", "modifier": "public final static", "type": "String", "declarator": "DEFUALT_BOLT_NAME = \"Unnamed Bolt\"", "var_name": "DEFUALT_BOLT_NAME"}, {"original_string": "protected final IRichBolt bolt;", "modifier": "protected final", "type": "IRichBolt", "declarator": "bolt", "var_name": "bolt"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final HashMap<String, Integer> numberOfAttributes;", "modifier": "private final", "type": "HashMap<String, Integer>", "declarator": "numberOfAttributes", "var_name": "numberOfAttributes"}, {"original_string": "private StormTopology stormTopology;", "modifier": "private", "type": "StormTopology", "declarator": "stormTopology", "var_name": "stormTopology"}, {"original_string": "private transient TopologyContext topologyContext;", "modifier": "private transient", "type": "TopologyContext", "declarator": "topologyContext", "var_name": "topologyContext"}, {"original_string": "private final HashMap<Integer, String> inputStreamIds = new HashMap<Integer, String>();", "modifier": "private final", "type": "HashMap<Integer, String>", "declarator": "inputStreamIds = new HashMap<Integer, String>()", "var_name": "inputStreamIds"}, {"original_string": "private final HashMap<Integer, String> inputComponentIds = new HashMap<Integer, String>();", "modifier": "private final", "type": "HashMap<Integer, String>", "declarator": "inputComponentIds = new HashMap<Integer, String>()", "var_name": "inputComponentIds"}, {"original_string": "private final HashMap<Integer, Fields> inputSchemas = new HashMap<Integer, Fields>();", "modifier": "private final", "type": "HashMap<Integer, Fields>", "declarator": "inputSchemas = new HashMap<Integer, Fields>()", "var_name": "inputSchemas"}, {"original_string": "protected transient TimestampedCollector<OUT> flinkCollector;", "modifier": "protected transient", "type": "TimestampedCollector<OUT>", "declarator": "flinkCollector", "var_name": "flinkCollector"}], "methods": [{"identifier": "BoltWrapper", "parameters": "(final IRichBolt bolt)", "modifiers": "public", "return": "", "signature": " BoltWrapper(final IRichBolt bolt)", "full_signature": "public  BoltWrapper(final IRichBolt bolt)", "class_method_signature": "BoltWrapper.BoltWrapper(final IRichBolt bolt)", "testcase": false, "constructor": true}, {"identifier": "BoltWrapper", "parameters": "(final IRichBolt bolt, final Fields inputSchema)", "modifiers": "public", "return": "", "signature": " BoltWrapper(final IRichBolt bolt, final Fields inputSchema)", "full_signature": "public  BoltWrapper(final IRichBolt bolt, final Fields inputSchema)", "class_method_signature": "BoltWrapper.BoltWrapper(final IRichBolt bolt, final Fields inputSchema)", "testcase": false, "constructor": true}, {"identifier": "BoltWrapper", "parameters": "(final IRichBolt bolt, final String[] rawOutputs)", "modifiers": "public", "return": "", "signature": " BoltWrapper(final IRichBolt bolt, final String[] rawOutputs)", "full_signature": "public  BoltWrapper(final IRichBolt bolt, final String[] rawOutputs)", "class_method_signature": "BoltWrapper.BoltWrapper(final IRichBolt bolt, final String[] rawOutputs)", "testcase": false, "constructor": true}, {"identifier": "BoltWrapper", "parameters": "(final IRichBolt bolt, final Collection<String> rawOutputs)", "modifiers": "public", "return": "", "signature": " BoltWrapper(final IRichBolt bolt, final Collection<String> rawOutputs)", "full_signature": "public  BoltWrapper(final IRichBolt bolt, final Collection<String> rawOutputs)", "class_method_signature": "BoltWrapper.BoltWrapper(final IRichBolt bolt, final Collection<String> rawOutputs)", "testcase": false, "constructor": true}, {"identifier": "BoltWrapper", "parameters": "(final IRichBolt bolt, final Fields inputSchema, final String[] rawOutputs)", "modifiers": "public", "return": "", "signature": " BoltWrapper(final IRichBolt bolt, final Fields inputSchema, final String[] rawOutputs)", "full_signature": "public  BoltWrapper(final IRichBolt bolt, final Fields inputSchema, final String[] rawOutputs)", "class_method_signature": "BoltWrapper.BoltWrapper(final IRichBolt bolt, final Fields inputSchema, final String[] rawOutputs)", "testcase": false, "constructor": true}, {"identifier": "BoltWrapper", "parameters": "(final IRichBolt bolt, final Fields inputSchema,\n\t\t\tfinal Collection<String> rawOutputs)", "modifiers": "public", "return": "", "signature": " BoltWrapper(final IRichBolt bolt, final Fields inputSchema,\n\t\t\tfinal Collection<String> rawOutputs)", "full_signature": "public  BoltWrapper(final IRichBolt bolt, final Fields inputSchema,\n\t\t\tfinal Collection<String> rawOutputs)", "class_method_signature": "BoltWrapper.BoltWrapper(final IRichBolt bolt, final Fields inputSchema,\n\t\t\tfinal Collection<String> rawOutputs)", "testcase": false, "constructor": true}, {"identifier": "BoltWrapper", "parameters": "(final IRichBolt bolt, final String name, final String inputStreamId,\n\t\t\tfinal String inputComponentId, final Fields inputSchema,\n\t\t\tfinal Collection<String> rawOutputs)", "modifiers": "public", "return": "", "signature": " BoltWrapper(final IRichBolt bolt, final String name, final String inputStreamId,\n\t\t\tfinal String inputComponentId, final Fields inputSchema,\n\t\t\tfinal Collection<String> rawOutputs)", "full_signature": "public  BoltWrapper(final IRichBolt bolt, final String name, final String inputStreamId,\n\t\t\tfinal String inputComponentId, final Fields inputSchema,\n\t\t\tfinal Collection<String> rawOutputs)", "class_method_signature": "BoltWrapper.BoltWrapper(final IRichBolt bolt, final String name, final String inputStreamId,\n\t\t\tfinal String inputComponentId, final Fields inputSchema,\n\t\t\tfinal Collection<String> rawOutputs)", "testcase": false, "constructor": true}, {"identifier": "setStormTopology", "parameters": "(StormTopology stormTopology)", "modifiers": "public", "return": "void", "signature": "void setStormTopology(StormTopology stormTopology)", "full_signature": "public void setStormTopology(StormTopology stormTopology)", "class_method_signature": "BoltWrapper.setStormTopology(StormTopology stormTopology)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void open()", "full_signature": "@Override public void open()", "class_method_signature": "BoltWrapper.open()", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void dispose()", "full_signature": "@Override public void dispose()", "class_method_signature": "BoltWrapper.dispose()", "testcase": false, "constructor": false}, {"identifier": "processElement", "parameters": "(final StreamRecord<IN> element)", "modifiers": "@Override public", "return": "void", "signature": "void processElement(final StreamRecord<IN> element)", "full_signature": "@Override public void processElement(final StreamRecord<IN> element)", "class_method_signature": "BoltWrapper.processElement(final StreamRecord<IN> element)", "testcase": false, "constructor": false}, {"identifier": "processWatermark", "parameters": "(Watermark mark)", "modifiers": "@Override public", "return": "void", "signature": "void processWatermark(Watermark mark)", "full_signature": "@Override public void processWatermark(Watermark mark)", "class_method_signature": "BoltWrapper.processWatermark(Watermark mark)", "testcase": false, "constructor": false}], "file": "flink-contrib/flink-storm/src/main/java/org/apache/flink/storm/wrappers/BoltWrapper.java"}, "focal_method": {"identifier": "dispose", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void dispose() {\n\t\tthis.bolt.cleanup();\n\t}", "signature": "void dispose()", "full_signature": "@Override public void dispose()", "class_method_signature": "BoltWrapper.dispose()", "testcase": false, "constructor": false, "invocations": ["cleanup"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}