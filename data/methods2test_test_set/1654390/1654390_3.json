{"test_class": {"identifier": "GwtTestIO", "superclass": "extends GWTTestCase", "interfaces": "", "fields": [{"original_string": "protected final IOTester.Checker CHECKER = new IOTester.Checker() {\n        public void assertEquals (Object expected, Object got) {\n            GwtTestIO.assertEquals(expected, got);\n        }\n        public void assertEquals (double expected, double got, double epsilon) {\n            GwtTestIO.assertEquals(expected, got, epsilon);\n        }\n    };", "modifier": "protected final", "type": "IOTester.Checker", "declarator": "CHECKER = new IOTester.Checker() {\n        public void assertEquals (Object expected, Object got) {\n            GwtTestIO.assertEquals(expected, got);\n        }\n        public void assertEquals (double expected, double got, double epsilon) {\n            GwtTestIO.assertEquals(expected, got, epsilon);\n        }\n    }", "var_name": "CHECKER"}], "file": "gwt-io/src/test/java/com/threerings/nexus/io/GwtTestIO.java"}, "test_case": {"identifier": "testValueOutput", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValueOutput () {\n        StringBuffer buf = new StringBuffer();\n        IOTester.writeValue(GWTIO.newOutput(new TestSerializer(), buf));\n        // System.out.println(\"testValue: \" + buf);\n        assertEquals(IOTester.VALUE_OUT_PAYLOAD, buf.toString());\n    }", "signature": "void testValueOutput()", "full_signature": "@Test public void testValueOutput()", "class_method_signature": "GwtTestIO.testValueOutput()", "testcase": true, "constructor": false, "invocations": ["writeValue", "newOutput", "assertEquals", "toString"]}, "focal_class": {"identifier": "GWTIO", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "newInput", "parameters": "(Serializer szer, String data)", "modifiers": "public static", "return": "Streamable.Input", "signature": "Streamable.Input newInput(Serializer szer, String data)", "full_signature": "public static Streamable.Input newInput(Serializer szer, String data)", "class_method_signature": "GWTIO.newInput(Serializer szer, String data)", "testcase": false, "constructor": false}, {"identifier": "newOutput", "parameters": "(Serializer szer, StringBuffer output)", "modifiers": "public static", "return": "Streamable.Output", "signature": "Streamable.Output newOutput(Serializer szer, StringBuffer output)", "full_signature": "public static Streamable.Output newOutput(Serializer szer, StringBuffer output)", "class_method_signature": "GWTIO.newOutput(Serializer szer, StringBuffer output)", "testcase": false, "constructor": false}, {"identifier": "GWTIO", "parameters": "()", "modifiers": "private", "return": "", "signature": " GWTIO()", "full_signature": "private  GWTIO()", "class_method_signature": "GWTIO.GWTIO()", "testcase": false, "constructor": true}], "file": "gwt-io/src/main/java/com/threerings/nexus/io/GWTIO.java"}, "focal_method": {"identifier": "newOutput", "parameters": "(Serializer szer, StringBuffer output)", "modifiers": "public static", "return": "Streamable.Output", "body": "public static Streamable.Output newOutput (Serializer szer, StringBuffer output) {\n        return new ClientOutput(szer, output);\n    }", "signature": "Streamable.Output newOutput(Serializer szer, StringBuffer output)", "full_signature": "public static Streamable.Output newOutput(Serializer szer, StringBuffer output)", "class_method_signature": "GWTIO.newOutput(Serializer szer, StringBuffer output)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1654390, "url": "https://github.com/threerings/nexus", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 14, "size": 2192, "license": "licensed"}}