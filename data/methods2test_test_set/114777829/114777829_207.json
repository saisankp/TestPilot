{"test_class": {"identifier": "JarResourceTest", "superclass": "", "interfaces": "", "fields": [], "file": "resource/impl/src/test/java/cloud/piranha/resource/JarResourceTest.java"}, "test_case": {"identifier": "testGetResource2", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testGetResource2() {\n        JarResource resource = new JarResource();\n        assertThrows(NullPointerException.class, () -> resource.getResource(\"we_wont_find_this\"));\n    }", "signature": "void testGetResource2()", "full_signature": "@Test void testGetResource2()", "class_method_signature": "JarResourceTest.testGetResource2()", "testcase": true, "constructor": false, "invocations": ["assertThrows", "getResource"]}, "focal_class": {"identifier": "JarResource", "superclass": "", "interfaces": "implements Resource", "fields": [{"original_string": "private File jarFile;", "modifier": "private", "type": "File", "declarator": "jarFile", "var_name": "jarFile"}], "methods": [{"identifier": "JarResource", "parameters": "()", "modifiers": "public", "return": "", "signature": " JarResource()", "full_signature": "public  JarResource()", "class_method_signature": "JarResource.JarResource()", "testcase": false, "constructor": true}, {"identifier": "JarResource", "parameters": "(File jarFile)", "modifiers": "public", "return": "", "signature": " JarResource(File jarFile)", "full_signature": "public  JarResource(File jarFile)", "class_method_signature": "JarResource.JarResource(File jarFile)", "testcase": false, "constructor": true}, {"identifier": "getResource", "parameters": "(String location)", "modifiers": "@Override public", "return": "URL", "signature": "URL getResource(String location)", "full_signature": "@Override public URL getResource(String location)", "class_method_signature": "JarResource.getResource(String location)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsStream", "parameters": "(String location)", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getResourceAsStream(String location)", "full_signature": "@Override public InputStream getResourceAsStream(String location)", "class_method_signature": "JarResource.getResourceAsStream(String location)", "testcase": false, "constructor": false}, {"identifier": "getAllLocations", "parameters": "()", "modifiers": "@Override public", "return": "Stream<String>", "signature": "Stream<String> getAllLocations()", "full_signature": "@Override public Stream<String> getAllLocations()", "class_method_signature": "JarResource.getAllLocations()", "testcase": false, "constructor": false}, {"identifier": "getJarFile", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getJarFile()", "full_signature": "public File getJarFile()", "class_method_signature": "JarResource.getJarFile()", "testcase": false, "constructor": false}, {"identifier": "setJarFile", "parameters": "(File jarFile)", "modifiers": "public", "return": "void", "signature": "void setJarFile(File jarFile)", "full_signature": "public void setJarFile(File jarFile)", "class_method_signature": "JarResource.setJarFile(File jarFile)", "testcase": false, "constructor": false}], "file": "resource/impl/src/main/java/cloud/piranha/resource/JarResource.java"}, "focal_method": {"identifier": "getResource", "parameters": "(String location)", "modifiers": "@Override public", "return": "URL", "body": "@Override\n    public URL getResource(String location) {\n        URL result = null;\n        if (location != null) {\n            try {\n                try (JarFile jar = new JarFile(jarFile)) {\n                    if (jar.getJarEntry(location) != null) {\n                        result = new URL(\"jar:\" + jarFile.toURI() + \"!/\" + location);\n                    }\n                }\n            } catch (IOException ioe) {\n                result = null;\n            }\n        }\n        return result;\n    }", "signature": "URL getResource(String location)", "full_signature": "@Override public URL getResource(String location)", "class_method_signature": "JarResource.getResource(String location)", "testcase": false, "constructor": false, "invocations": ["getJarEntry", "toURI"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}