{"test_class": {"identifier": "JsonApiDocumentTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Dummy dummyObj01 = new Dummy(\"id_01\");", "modifier": "private final", "type": "Dummy", "declarator": "dummyObj01 = new Dummy(\"id_01\")", "var_name": "dummyObj01"}, {"original_string": "private final Dummy dummyObj42 = new Dummy(\"id_42\");", "modifier": "private final", "type": "Dummy", "declarator": "dummyObj42 = new Dummy(\"id_42\")", "var_name": "dummyObj42"}, {"original_string": "private final Dummy dummyObj43 = new Dummy(\"id_43\");", "modifier": "private final", "type": "Dummy", "declarator": "dummyObj43 = new Dummy(\"id_43\")", "var_name": "dummyObj43"}, {"original_string": "private final URI uri = URI.create(\"http://test.com\");", "modifier": "private final", "type": "URI", "declarator": "uri = URI.create(\"http://test.com\")", "var_name": "uri"}, {"original_string": "private final String linkName = \"testLink\";", "modifier": "private final", "type": "String", "declarator": "linkName = \"testLink\"", "var_name": "linkName"}, {"original_string": "@Mocked\n\tprivate UriInfo uriInfoMock;", "modifier": "@Mocked\n\tprivate", "type": "UriInfo", "declarator": "uriInfoMock", "var_name": "uriInfoMock"}], "file": "server/src/test/java/org/jvalue/ods/rest/v2/jsonapi/response/JsonApiDocumentTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n\t\tsetUpUriInfo();\n\t\tJsonApiDocument result1 = new JsonApiDocument(dummyObj01, uriInfoMock);\n\t\tJsonApiDocument result2 = new JsonApiDocument(dummyObj01, uriInfoMock);\n\t\tJsonApiDocument resultOther = new JsonApiDocument(dummyObj42, uriInfoMock);\n\n\t\tAssert.assertEquals(result1, result2);\n\t\tAssert.assertNotEquals(resultOther, result1);\n\t}", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "JsonApiDocumentTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["setUpUriInfo", "assertEquals", "assertNotEquals"]}, "focal_class": {"identifier": "JsonApiDocument", "superclass": "", "interfaces": "implements Serializable, JsonLinks", "fields": [{"original_string": "private UriInfo uriInfo;", "modifier": "private", "type": "UriInfo", "declarator": "uriInfo", "var_name": "uriInfo"}, {"original_string": "private final Map<String, URI> links = new HashMap<>();", "modifier": "private final", "type": "Map<String, URI>", "declarator": "links = new HashMap<>()", "var_name": "links"}, {"original_string": "protected JsonApiData data;", "modifier": "protected", "type": "JsonApiData", "declarator": "data", "var_name": "data"}, {"original_string": "protected List<JsonApiError> errors;", "modifier": "protected", "type": "List<JsonApiError>", "declarator": "errors", "var_name": "errors"}, {"original_string": "private List<JsonApiResource> included;", "modifier": "private", "type": "List<JsonApiResource>", "declarator": "included", "var_name": "included"}], "methods": [{"identifier": "JsonApiDocument", "parameters": "(JsonApiError error)", "modifiers": "public", "return": "", "signature": " JsonApiDocument(JsonApiError error)", "full_signature": "public  JsonApiDocument(JsonApiError error)", "class_method_signature": "JsonApiDocument.JsonApiDocument(JsonApiError error)", "testcase": false, "constructor": true}, {"identifier": "JsonApiDocument", "parameters": "(JsonApiIdentifiable entity,\n\t\t\t\t\t\t   UriInfo uriInfo)", "modifiers": "public", "return": "", "signature": " JsonApiDocument(JsonApiIdentifiable entity,\n\t\t\t\t\t\t   UriInfo uriInfo)", "full_signature": "public  JsonApiDocument(JsonApiIdentifiable entity,\n\t\t\t\t\t\t   UriInfo uriInfo)", "class_method_signature": "JsonApiDocument.JsonApiDocument(JsonApiIdentifiable entity,\n\t\t\t\t\t\t   UriInfo uriInfo)", "testcase": false, "constructor": true}, {"identifier": "JsonApiDocument", "parameters": "(Collection<? extends JsonApiIdentifiable> entityCollection,\n\t\t\t\t\t\t   UriInfo uriInfo)", "modifiers": "public", "return": "", "signature": " JsonApiDocument(Collection<? extends JsonApiIdentifiable> entityCollection,\n\t\t\t\t\t\t   UriInfo uriInfo)", "full_signature": "public  JsonApiDocument(Collection<? extends JsonApiIdentifiable> entityCollection,\n\t\t\t\t\t\t   UriInfo uriInfo)", "class_method_signature": "JsonApiDocument.JsonApiDocument(Collection<? extends JsonApiIdentifiable> entityCollection,\n\t\t\t\t\t\t   UriInfo uriInfo)", "testcase": false, "constructor": true}, {"identifier": "setResourceCollectionURI", "parameters": "(URI collectionURI)", "modifiers": "public", "return": "void", "signature": "void setResourceCollectionURI(URI collectionURI)", "full_signature": "public void setResourceCollectionURI(URI collectionURI)", "class_method_signature": "JsonApiDocument.setResourceCollectionURI(URI collectionURI)", "testcase": false, "constructor": false}, {"identifier": "getData", "parameters": "()", "modifiers": "@JsonInclude(JsonInclude.Include.NON_NULL) public", "return": "JsonApiData", "signature": "JsonApiData getData()", "full_signature": "@JsonInclude(JsonInclude.Include.NON_NULL) public JsonApiData getData()", "class_method_signature": "JsonApiDocument.getData()", "testcase": false, "constructor": false}, {"identifier": "getErrors", "parameters": "()", "modifiers": "@JsonInclude(JsonInclude.Include.NON_NULL) public", "return": "List<JsonApiError>", "signature": "List<JsonApiError> getErrors()", "full_signature": "@JsonInclude(JsonInclude.Include.NON_NULL) public List<JsonApiError> getErrors()", "class_method_signature": "JsonApiDocument.getErrors()", "testcase": false, "constructor": false}, {"identifier": "getIncluded", "parameters": "()", "modifiers": "@JsonInclude(JsonInclude.Include.NON_EMPTY) public", "return": "List<JsonApiResource>", "signature": "List<JsonApiResource> getIncluded()", "full_signature": "@JsonInclude(JsonInclude.Include.NON_EMPTY) public List<JsonApiResource> getIncluded()", "class_method_signature": "JsonApiDocument.getIncluded()", "testcase": false, "constructor": false}, {"identifier": "getRelationshipURI", "parameters": "(JsonApiIdentifiable relationship)", "modifiers": "private", "return": "URI", "signature": "URI getRelationshipURI(JsonApiIdentifiable relationship)", "full_signature": "private URI getRelationshipURI(JsonApiIdentifiable relationship)", "class_method_signature": "JsonApiDocument.getRelationshipURI(JsonApiIdentifiable relationship)", "testcase": false, "constructor": false}, {"identifier": "hasRelationshipTo", "parameters": "(JsonApiIdentifiable entity)", "modifiers": "public", "return": "boolean", "signature": "boolean hasRelationshipTo(JsonApiIdentifiable entity)", "full_signature": "public boolean hasRelationshipTo(JsonApiIdentifiable entity)", "class_method_signature": "JsonApiDocument.hasRelationshipTo(JsonApiIdentifiable entity)", "testcase": false, "constructor": false}, {"identifier": "restrictTo", "parameters": "(String attribute)", "modifiers": "public", "return": "void", "signature": "void restrictTo(String attribute)", "full_signature": "public void restrictTo(String attribute)", "class_method_signature": "JsonApiDocument.restrictTo(String attribute)", "testcase": false, "constructor": false}, {"identifier": "addRelationship", "parameters": "(String name, JsonApiIdentifiable entity, URI location)", "modifiers": "public", "return": "void", "signature": "void addRelationship(String name, JsonApiIdentifiable entity, URI location)", "full_signature": "public void addRelationship(String name, JsonApiIdentifiable entity, URI location)", "class_method_signature": "JsonApiDocument.addRelationship(String name, JsonApiIdentifiable entity, URI location)", "testcase": false, "constructor": false}, {"identifier": "addRelationship", "parameters": "(String name, Collection<? extends JsonApiIdentifiable> entity, URI location)", "modifiers": "public", "return": "void", "signature": "void addRelationship(String name, Collection<? extends JsonApiIdentifiable> entity, URI location)", "full_signature": "public void addRelationship(String name, Collection<? extends JsonApiIdentifiable> entity, URI location)", "class_method_signature": "JsonApiDocument.addRelationship(String name, Collection<? extends JsonApiIdentifiable> entity, URI location)", "testcase": false, "constructor": false}, {"identifier": "addIncluded", "parameters": "(JsonApiIdentifiable entity)", "modifiers": "public", "return": "void", "signature": "void addIncluded(JsonApiIdentifiable entity)", "full_signature": "public void addIncluded(JsonApiIdentifiable entity)", "class_method_signature": "JsonApiDocument.addIncluded(JsonApiIdentifiable entity)", "testcase": false, "constructor": false}, {"identifier": "getLinks", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, URI>", "signature": "Map<String, URI> getLinks()", "full_signature": "@Override public Map<String, URI> getLinks()", "class_method_signature": "JsonApiDocument.getLinks()", "testcase": false, "constructor": false}, {"identifier": "addLink", "parameters": "(String name, URI ref)", "modifiers": "@Override public", "return": "void", "signature": "void addLink(String name, URI ref)", "full_signature": "@Override public void addLink(String name, URI ref)", "class_method_signature": "JsonApiDocument.addLink(String name, URI ref)", "testcase": false, "constructor": false}, {"identifier": "getURI", "parameters": "()", "modifiers": "@Override public", "return": "URI", "signature": "URI getURI()", "full_signature": "@Override public URI getURI()", "class_method_signature": "JsonApiDocument.getURI()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "JsonApiDocument.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "JsonApiDocument.hashCode()", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/jvalue/ods/rest/v2/jsonapi/response/JsonApiDocument.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean equals(Object o) {\n\t\tif (this == o) return true;\n\t\tif (o == null || getClass() != o.getClass()) return false;\n\t\tJsonApiDocument that = (JsonApiDocument) o;\n\t\treturn Objects.equals(links, that.links) &&\n\t\t\tObjects.equals(uriInfo, that.uriInfo) &&\n\t\t\tObjects.equals(data, that.data);\n\t}", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "JsonApiDocument.equals(Object o)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "equals", "equals", "equals"]}, "repository": {"repo_id": 14989619, "url": "https://github.com/jvalue/open-data-service-v1", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 4525, "license": "licensed"}}