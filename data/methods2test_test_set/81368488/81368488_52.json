{"test_class": {"identifier": "UserProfileContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private Configuration mockConfig;", "modifier": "@Mock\n    private", "type": "Configuration", "declarator": "mockConfig", "var_name": "mockConfig"}, {"original_string": "@Mock\n    private GazePlay mockGazePlay;", "modifier": "@Mock\n    private", "type": "GazePlay", "declarator": "mockGazePlay", "var_name": "mockGazePlay"}, {"original_string": "@Mock\n    private Translator mockTranslator;", "modifier": "@Mock\n    private", "type": "Translator", "declarator": "mockTranslator", "var_name": "mockTranslator"}, {"original_string": "@Mock\n    private Scene mockScene;", "modifier": "@Mock\n    private", "type": "Scene", "declarator": "mockScene", "var_name": "mockScene"}, {"original_string": "@Mock\n    private Stage mockStage;", "modifier": "@Mock\n    private", "type": "Stage", "declarator": "mockStage", "var_name": "mockStage"}, {"original_string": "private static String profileRoot = \"profiles\";", "modifier": "private static", "type": "String", "declarator": "profileRoot = \"profiles\"", "var_name": "profileRoot"}, {"original_string": "private static String profileDirectory = \"test1\";", "modifier": "private static", "type": "String", "declarator": "profileDirectory = \"test1\"", "var_name": "profileDirectory"}, {"original_string": "private static String exampleFile = \"test.txt\";", "modifier": "private static", "type": "String", "declarator": "exampleFile = \"test.txt\"", "var_name": "exampleFile"}, {"original_string": "private static String hiddenDirectory = \".hidden\";", "modifier": "private static", "type": "String", "declarator": "hiddenDirectory = \".hidden\"", "var_name": "hiddenDirectory"}, {"original_string": "private final String sep = File.separator;", "modifier": "private final", "type": "String", "declarator": "sep = File.separator", "var_name": "sep"}, {"original_string": "private final String localDataFolder =\n        System.getProperty(\"user.dir\") + sep\n            + \"src\" + sep\n            + \"test\" + sep\n            + \"resources\" + sep;", "modifier": "private final", "type": "String", "declarator": "localDataFolder =\n        System.getProperty(\"user.dir\") + sep\n            + \"src\" + sep\n            + \"test\" + sep\n            + \"resources\" + sep", "var_name": "localDataFolder"}, {"original_string": "private final Dimension2D screenDimension = new Dimension2D(1920, 1080);", "modifier": "private final", "type": "Dimension2D", "declarator": "screenDimension = new Dimension2D(1920, 1080)", "var_name": "screenDimension"}], "file": "gazeplay-core/src/test/java/net/gazeplay/ui/scenes/userselect/UserProfileContextTest.java"}, "test_case": {"identifier": "shouldThrowExceptionIfUserNameIsEmpty", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldThrowExceptionIfUserNameIsEmpty() {\n        UserProfileContext context = new UserProfileContext(mockGazePlay);\n        FlowPane choicePanel = new FlowPane();\n        ImagePattern imagePattern = new ImagePattern(new Image(\"bear.jpg\"));\n\n        assertThrows(IllegalArgumentException.class,\n            () -> context.createUser(mockGazePlay, choicePanel, \"\", imagePattern, false, false, screenDimension));\n    }", "signature": "void shouldThrowExceptionIfUserNameIsEmpty()", "full_signature": "@Test void shouldThrowExceptionIfUserNameIsEmpty()", "class_method_signature": "UserProfileContextTest.shouldThrowExceptionIfUserNameIsEmpty()", "testcase": true, "constructor": false, "invocations": ["assertThrows", "createUser"]}, "focal_class": {"identifier": "UserProfileContext", "superclass": "extends GraphicalContext<BorderPane>", "interfaces": "", "fields": [{"original_string": "private final double cardHeight;", "modifier": "private final", "type": "double", "declarator": "cardHeight", "var_name": "cardHeight"}, {"original_string": "private final double cardWidth;", "modifier": "private final", "type": "double", "declarator": "cardWidth", "var_name": "cardWidth"}], "methods": [{"identifier": "UserProfileContext", "parameters": "(final GazePlay gazePlay)", "modifiers": "public", "return": "", "signature": " UserProfileContext(final GazePlay gazePlay)", "full_signature": "public  UserProfileContext(final GazePlay gazePlay)", "class_method_signature": "UserProfileContext.UserProfileContext(final GazePlay gazePlay)", "testcase": false, "constructor": true}, {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "ObservableList<Node>", "signature": "ObservableList<Node> getChildren()", "full_signature": "@Override public ObservableList<Node> getChildren()", "class_method_signature": "UserProfileContext.getChildren()", "testcase": false, "constructor": false}, {"identifier": "findAllUsersProfiles", "parameters": "()", "modifiers": "static", "return": "List<String>", "signature": "List<String> findAllUsersProfiles()", "full_signature": "static List<String> findAllUsersProfiles()", "class_method_signature": "UserProfileContext.findAllUsersProfiles()", "testcase": false, "constructor": false}, {"identifier": "createUserPickerChoicePane", "parameters": "(final GazePlay gazePlay)", "modifiers": "", "return": "ScrollPane", "signature": "ScrollPane createUserPickerChoicePane(final GazePlay gazePlay)", "full_signature": " ScrollPane createUserPickerChoicePane(final GazePlay gazePlay)", "class_method_signature": "UserProfileContext.createUserPickerChoicePane(final GazePlay gazePlay)", "testcase": false, "constructor": false}, {"identifier": "lookupProfilePicture", "parameters": "(final Configuration currentUserProfileConfiguration)", "modifiers": "static", "return": "ImagePattern", "signature": "ImagePattern lookupProfilePicture(final Configuration currentUserProfileConfiguration)", "full_signature": "static ImagePattern lookupProfilePicture(final Configuration currentUserProfileConfiguration)", "class_method_signature": "UserProfileContext.lookupProfilePicture(final Configuration currentUserProfileConfiguration)", "testcase": false, "constructor": false}, {"identifier": "createUser", "parameters": "(\n        @NonNull final GazePlay gazePlay,\n        @NonNull final FlowPane choicePanel,\n        @NonNull final String userProfileName,\n        @NonNull final ImagePattern imagePattern,\n        final boolean editable,\n        final boolean newUser,\n        final Dimension2D screenDimension\n    )", "modifiers": "", "return": "User", "signature": "User createUser(\n        @NonNull final GazePlay gazePlay,\n        @NonNull final FlowPane choicePanel,\n        @NonNull final String userProfileName,\n        @NonNull final ImagePattern imagePattern,\n        final boolean editable,\n        final boolean newUser,\n        final Dimension2D screenDimension\n    )", "full_signature": " User createUser(\n        @NonNull final GazePlay gazePlay,\n        @NonNull final FlowPane choicePanel,\n        @NonNull final String userProfileName,\n        @NonNull final ImagePattern imagePattern,\n        final boolean editable,\n        final boolean newUser,\n        final Dimension2D screenDimension\n    )", "class_method_signature": "UserProfileContext.createUser(\n        @NonNull final GazePlay gazePlay,\n        @NonNull final FlowPane choicePanel,\n        @NonNull final String userProfileName,\n        @NonNull final ImagePattern imagePattern,\n        final boolean editable,\n        final boolean newUser,\n        final Dimension2D screenDimension\n    )", "testcase": false, "constructor": false}, {"identifier": "createDeleteUserButton", "parameters": "(\n        final GazePlay gazePlay,\n        final FlowPane choicePanel,\n        final User user,\n        final double size\n    )", "modifiers": "private", "return": "BorderPane", "signature": "BorderPane createDeleteUserButton(\n        final GazePlay gazePlay,\n        final FlowPane choicePanel,\n        final User user,\n        final double size\n    )", "full_signature": "private BorderPane createDeleteUserButton(\n        final GazePlay gazePlay,\n        final FlowPane choicePanel,\n        final User user,\n        final double size\n    )", "class_method_signature": "UserProfileContext.createDeleteUserButton(\n        final GazePlay gazePlay,\n        final FlowPane choicePanel,\n        final User user,\n        final double size\n    )", "testcase": false, "constructor": false}, {"identifier": "createEditUserButton", "parameters": "(final GazePlay gazePlay, final FlowPane choicePanel, final User user, final double size, final Dimension2D screenDimension)", "modifiers": "private", "return": "BorderPane", "signature": "BorderPane createEditUserButton(final GazePlay gazePlay, final FlowPane choicePanel, final User user, final double size, final Dimension2D screenDimension)", "full_signature": "private BorderPane createEditUserButton(final GazePlay gazePlay, final FlowPane choicePanel, final User user, final double size, final Dimension2D screenDimension)", "class_method_signature": "UserProfileContext.createEditUserButton(final GazePlay gazePlay, final FlowPane choicePanel, final User user, final double size, final Dimension2D screenDimension)", "testcase": false, "constructor": false}, {"identifier": "createExitButton", "parameters": "(final Dimension2D screenDimension)", "modifiers": "private", "return": "CustomButton", "signature": "CustomButton createExitButton(final Dimension2D screenDimension)", "full_signature": "private CustomButton createExitButton(final Dimension2D screenDimension)", "class_method_signature": "UserProfileContext.createExitButton(final Dimension2D screenDimension)", "testcase": false, "constructor": false}, {"identifier": "initializeDialog", "parameters": "(Stage primaryStage)", "modifiers": "private", "return": "Stage", "signature": "Stage initializeDialog(Stage primaryStage)", "full_signature": "private Stage initializeDialog(Stage primaryStage)", "class_method_signature": "UserProfileContext.initializeDialog(Stage primaryStage)", "testcase": false, "constructor": false}, {"identifier": "initializeScroller", "parameters": "(Pane choicePane, Stage primaryStage)", "modifiers": "private", "return": "ScrollPane", "signature": "ScrollPane initializeScroller(Pane choicePane, Stage primaryStage)", "full_signature": "private ScrollPane initializeScroller(Pane choicePane, Stage primaryStage)", "class_method_signature": "UserProfileContext.initializeScroller(Pane choicePane, Stage primaryStage)", "testcase": false, "constructor": false}, {"identifier": "createRemoveDialog", "parameters": "(\n        final Stage primaryStage,\n        final FlowPane choicePanel,\n        final User user,\n        final Supplier<Dimension2D> currentScreenDimensionSupplier\n    )", "modifiers": "", "return": "Stage", "signature": "Stage createRemoveDialog(\n        final Stage primaryStage,\n        final FlowPane choicePanel,\n        final User user,\n        final Supplier<Dimension2D> currentScreenDimensionSupplier\n    )", "full_signature": " Stage createRemoveDialog(\n        final Stage primaryStage,\n        final FlowPane choicePanel,\n        final User user,\n        final Supplier<Dimension2D> currentScreenDimensionSupplier\n    )", "class_method_signature": "UserProfileContext.createRemoveDialog(\n        final Stage primaryStage,\n        final FlowPane choicePanel,\n        final User user,\n        final Supplier<Dimension2D> currentScreenDimensionSupplier\n    )", "testcase": false, "constructor": false}, {"identifier": "createDialog", "parameters": "(\n        final GazePlay gazePlay,\n        final Stage primaryStage,\n        final FlowPane choicePanel,\n        final User user,\n        final boolean newUser,\n        final Dimension2D screenDimension\n    )", "modifiers": "", "return": "Stage", "signature": "Stage createDialog(\n        final GazePlay gazePlay,\n        final Stage primaryStage,\n        final FlowPane choicePanel,\n        final User user,\n        final boolean newUser,\n        final Dimension2D screenDimension\n    )", "full_signature": " Stage createDialog(\n        final GazePlay gazePlay,\n        final Stage primaryStage,\n        final FlowPane choicePanel,\n        final User user,\n        final boolean newUser,\n        final Dimension2D screenDimension\n    )", "class_method_signature": "UserProfileContext.createDialog(\n        final GazePlay gazePlay,\n        final Stage primaryStage,\n        final FlowPane choicePanel,\n        final User user,\n        final boolean newUser,\n        final Dimension2D screenDimension\n    )", "testcase": false, "constructor": false}, {"identifier": "createDialogButton", "parameters": "(String text, double minHeight, double minWidth)", "modifiers": "private static", "return": "Button", "signature": "Button createDialogButton(String text, double minHeight, double minWidth)", "full_signature": "private static Button createDialogButton(String text, double minHeight, double minWidth)", "class_method_signature": "UserProfileContext.createDialogButton(String text, double minHeight, double minWidth)", "testcase": false, "constructor": false}, {"identifier": "checkNewName", "parameters": "(final String s)", "modifiers": "private", "return": "boolean", "signature": "boolean checkNewName(final String s)", "full_signature": "private boolean checkNewName(final String s)", "class_method_signature": "UserProfileContext.checkNewName(final String s)", "testcase": false, "constructor": false}, {"identifier": "modifyUser", "parameters": "(final HBox user, final String name, final ImagePattern ip)", "modifiers": "private", "return": "void", "signature": "void modifyUser(final HBox user, final String name, final ImagePattern ip)", "full_signature": "private void modifyUser(final HBox user, final String name, final ImagePattern ip)", "class_method_signature": "UserProfileContext.modifyUser(final HBox user, final String name, final ImagePattern ip)", "testcase": false, "constructor": false}, {"identifier": "chooseImageFile", "parameters": "(final Stage primaryStage)", "modifiers": "private", "return": "File", "signature": "File chooseImageFile(final Stage primaryStage)", "full_signature": "private File chooseImageFile(final Stage primaryStage)", "class_method_signature": "UserProfileContext.chooseImageFile(final Stage primaryStage)", "testcase": false, "constructor": false}, {"identifier": "getImage", "parameters": "(final Stage primaryStage, final Button targetButton)", "modifiers": "private", "return": "String", "signature": "String getImage(final Stage primaryStage, final Button targetButton)", "full_signature": "private String getImage(final Stage primaryStage, final Button targetButton)", "class_method_signature": "UserProfileContext.getImage(final Stage primaryStage, final Button targetButton)", "testcase": false, "constructor": false}, {"identifier": "copyFile", "parameters": "(final File source, final File dest)", "modifiers": "private static", "return": "void", "signature": "void copyFile(final File source, final File dest)", "full_signature": "private static void copyFile(final File source, final File dest)", "class_method_signature": "UserProfileContext.copyFile(final File source, final File dest)", "testcase": false, "constructor": false}], "file": "gazeplay-core/src/main/java/net/gazeplay/ui/scenes/userselect/UserProfileContext.java"}, "focal_method": {"identifier": "createUser", "parameters": "(\n        @NonNull final GazePlay gazePlay,\n        @NonNull final FlowPane choicePanel,\n        @NonNull final String userProfileName,\n        @NonNull final ImagePattern imagePattern,\n        final boolean editable,\n        final boolean newUser,\n        final Dimension2D screenDimension\n    )", "modifiers": "", "return": "User", "body": "User createUser(\n        @NonNull final GazePlay gazePlay,\n        @NonNull final FlowPane choicePanel,\n        @NonNull final String userProfileName,\n        @NonNull final ImagePattern imagePattern,\n        final boolean editable,\n        final boolean newUser,\n        final Dimension2D screenDimension\n    ) {\n        if (userProfileName.trim().isEmpty()) {\n            throw new IllegalArgumentException(\"userProfileName should not be empty\");\n        }\n\n        final User user = new User(userProfileName);\n\n        final Rectangle pictureRectangle = new Rectangle(0, 0, cardWidth, cardHeight);\n        pictureRectangle.setFill(imagePattern);\n\n        final Text userNameText = new Text(user.getName());\n        userNameText.setFill(Color.WHITE);\n        userNameText.getStyleClass().add(\"gameChooserButtonTitle\");\n        BorderPane.setAlignment(userNameText, Pos.BOTTOM_CENTER);\n\n        final BorderPane content = new BorderPane();\n        content.getStyleClass().add(\"gameChooserButton\");\n        content.getStyleClass().add(\"button\");\n        content.setPadding(new Insets(10));\n        content.setCenter(pictureRectangle);\n        content.setBottom(userNameText);\n\n        user.setAlignment(Pos.TOP_RIGHT);\n        user.getChildren().add(content);\n\n        if (editable) {\n            final double buttonsSize = screenDimension.getWidth() / 50;\n            final BorderPane editUserButton = createEditUserButton(getGazePlay(), choicePanel, user, buttonsSize, screenDimension);\n            final BorderPane deleteUserButton = createDeleteUserButton(getGazePlay(), choicePanel, user, buttonsSize);\n            final VBox buttonBox = new VBox();\n\n            buttonBox.getChildren().addAll(editUserButton, deleteUserButton);\n            user.getChildren().add(buttonBox);\n        }\n\n        final EventHandler<Event> mouseClickedEventHandler;\n        if (newUser) {\n            mouseClickedEventHandler = event -> {\n                log.info(\"Adding user\");\n                root.setEffect(new BoxBlur());\n                final Stage dialog = createDialog(gazePlay, gazePlay.getPrimaryStage(), choicePanel, user, true, screenDimension);\n\n                final String dialogTitle = getGazePlay().getTranslator().translate(\"NewUser\");\n                dialog.setTitle(dialogTitle);\n                dialog.show();\n\n                dialog.toFront();\n                dialog.setAlwaysOnTop(true);\n            };\n        } else {\n            mouseClickedEventHandler = event -> {\n                if (!user.getName().equals(getGazePlay().getTranslator().translate(\"DefaultUser\"))) {\n                    ActiveConfigurationContext.switchToUser(user.getName());\n                }\n                gazePlay.getTranslator().notifyLanguageChanged();\n\n                final Configuration config = ActiveConfigurationContext.getInstance();\n                CssUtil.setPreferredStylesheets(config, gazePlay.getPrimaryScene(), gazePlay.getCurrentScreenDimensionSupplier());\n\n                BackgroundMusicManager.onConfigurationChanged();\n\n                choicePanel.getChildren().clear();\n                gazePlay.onReturnToMenu();\n            };\n        }\n\n        content.addEventFilter(MouseEvent.MOUSE_CLICKED, mouseClickedEventHandler);\n        return user;\n    }", "signature": "User createUser(\n        @NonNull final GazePlay gazePlay,\n        @NonNull final FlowPane choicePanel,\n        @NonNull final String userProfileName,\n        @NonNull final ImagePattern imagePattern,\n        final boolean editable,\n        final boolean newUser,\n        final Dimension2D screenDimension\n    )", "full_signature": " User createUser(\n        @NonNull final GazePlay gazePlay,\n        @NonNull final FlowPane choicePanel,\n        @NonNull final String userProfileName,\n        @NonNull final ImagePattern imagePattern,\n        final boolean editable,\n        final boolean newUser,\n        final Dimension2D screenDimension\n    )", "class_method_signature": "UserProfileContext.createUser(\n        @NonNull final GazePlay gazePlay,\n        @NonNull final FlowPane choicePanel,\n        @NonNull final String userProfileName,\n        @NonNull final ImagePattern imagePattern,\n        final boolean editable,\n        final boolean newUser,\n        final Dimension2D screenDimension\n    )", "testcase": false, "constructor": false, "invocations": ["isEmpty", "trim", "setFill", "getName", "setFill", "add", "getStyleClass", "setAlignment", "add", "getStyleClass", "add", "getStyleClass", "setPadding", "setCenter", "setBottom", "setAlignment", "add", "getChildren", "getWidth", "createEditUserButton", "getGazePlay", "createDeleteUserButton", "getGazePlay", "addAll", "getChildren", "add", "getChildren", "info", "setEffect", "createDialog", "getPrimaryStage", "translate", "getTranslator", "getGazePlay", "setTitle", "show", "toFront", "setAlwaysOnTop", "equals", "getName", "translate", "getTranslator", "getGazePlay", "switchToUser", "getName", "notifyLanguageChanged", "getTranslator", "getInstance", "setPreferredStylesheets", "getPrimaryScene", "getCurrentScreenDimensionSupplier", "onConfigurationChanged", "clear", "getChildren", "onReturnToMenu", "addEventFilter"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}