{"test_class": {"identifier": "FileChannelRandomAccessSourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "byte[] data;", "modifier": "", "type": "byte[]", "declarator": "data", "var_name": "data"}, {"original_string": "File f;", "modifier": "", "type": "File", "declarator": "f", "var_name": "f"}, {"original_string": "FileChannel channel;", "modifier": "", "type": "FileChannel", "declarator": "channel", "var_name": "channel"}], "file": "itext/src/test/java/com/itextpdf/text/io/FileChannelRandomAccessSourceTest.java"}, "test_case": {"identifier": "testGet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGet() throws Exception {\n\t\tFileChannelRandomAccessSource s = new FileChannelRandomAccessSource(channel);\n\t\ttry{\n\t\t\tfor(int i = 0; i < data.length; i++){\n\t\t\t\tint ch = s.get(i);\n\t\t\t\tAssert.assertFalse(\"EOF hit unexpectedly at \" + i + \" out of \" + data.length, ch == -1);\n\t\t\t\tAssert.assertEquals(\"Position \" + i, data[i], (byte)ch);\n\t\t\t}\n\t\t\tAssert.assertEquals(-1, s.get(data.length));\n\t\t} finally {\n\t\t\ts.close();\n\t\t}\n\t}", "signature": "void testGet()", "full_signature": "@Test public void testGet()", "class_method_signature": "FileChannelRandomAccessSourceTest.testGet()", "testcase": true, "constructor": false, "invocations": ["get", "assertFalse", "assertEquals", "assertEquals", "get", "close"]}, "focal_class": {"identifier": "FileChannelRandomAccessSource", "superclass": "", "interfaces": "implements RandomAccessSource", "fields": [{"original_string": "private final FileChannel channel;", "modifier": "private final", "type": "FileChannel", "declarator": "channel", "var_name": "channel"}, {"original_string": "private final MappedChannelRandomAccessSource source;", "modifier": "private final", "type": "MappedChannelRandomAccessSource", "declarator": "source", "var_name": "source"}], "methods": [{"identifier": "FileChannelRandomAccessSource", "parameters": "(FileChannel channel)", "modifiers": "public", "return": "", "signature": " FileChannelRandomAccessSource(FileChannel channel)", "full_signature": "public  FileChannelRandomAccessSource(FileChannel channel)", "class_method_signature": "FileChannelRandomAccessSource.FileChannelRandomAccessSource(FileChannel channel)", "testcase": false, "constructor": true}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "FileChannelRandomAccessSource.close()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(long position)", "modifiers": "public", "return": "int", "signature": "int get(long position)", "full_signature": "public int get(long position)", "class_method_signature": "FileChannelRandomAccessSource.get(long position)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(long position, byte[] bytes, int off, int len)", "modifiers": "public", "return": "int", "signature": "int get(long position, byte[] bytes, int off, int len)", "full_signature": "public int get(long position, byte[] bytes, int off, int len)", "class_method_signature": "FileChannelRandomAccessSource.get(long position, byte[] bytes, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long length()", "full_signature": "public long length()", "class_method_signature": "FileChannelRandomAccessSource.length()", "testcase": false, "constructor": false}], "file": "itext/src/main/java/com/itextpdf/text/io/FileChannelRandomAccessSource.java"}, "focal_method": {"identifier": "get", "parameters": "(long position)", "modifiers": "public", "return": "int", "body": "public int get(long position) throws IOException {\n\t\treturn source.get(position);\n\t}", "signature": "int get(long position)", "full_signature": "public int get(long position)", "class_method_signature": "FileChannelRandomAccessSource.get(long position)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 14892248, "url": "https://github.com/itext/itextpdf", "language": "Java", "is_fork": false, "fork_count": 400, "stargazer_count": 1164, "size": 115070, "license": "licensed"}}