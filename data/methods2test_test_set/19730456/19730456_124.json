{"test_class": {"identifier": "ConstantinopleConfigTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final byte[] FAKE_HASH = {11, 12};", "modifier": "private static final", "type": "byte[]", "declarator": "FAKE_HASH = {11, 12}", "var_name": "FAKE_HASH"}, {"original_string": "private static final ConstantinopleConfig constantinopleConfig = new ConstantinopleConfig(new TestBlockchainConfig());", "modifier": "private static final", "type": "ConstantinopleConfig", "declarator": "constantinopleConfig = new ConstantinopleConfig(new TestBlockchainConfig())", "var_name": "constantinopleConfig"}], "file": "ethereumj-core/src/test/java/org/ethereum/config/blockchain/ConstantinopleConfigTest.java"}, "test_case": {"identifier": "testExplosionChanges", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExplosionChanges() throws Exception {\n\n        BlockHeader beforePauseBlock = new BlockHeaderBuilder(FAKE_HASH, 4_000_000, 0).build();\n        assertEquals(-2, constantinopleConfig.getExplosion(beforePauseBlock, null));\n\n        BlockHeader endOfIceAge = new BlockHeaderBuilder(FAKE_HASH, 5_000_000, 0).build();\n        assertEquals(-2, constantinopleConfig.getExplosion(endOfIceAge, null));\n\n        BlockHeader startExplodingBlock = new BlockHeaderBuilder(FAKE_HASH, 5_200_000, 0).build();\n        assertEquals(0, constantinopleConfig.getExplosion(startExplodingBlock, null));\n\n        startExplodingBlock = new BlockHeaderBuilder(FAKE_HASH, 6_000_000, 0).build();\n        assertEquals(8, constantinopleConfig.getExplosion(startExplodingBlock, null));\n\n        startExplodingBlock = new BlockHeaderBuilder(FAKE_HASH, 8_000_000, 0).build();\n        assertEquals(28, constantinopleConfig.getExplosion(startExplodingBlock, null));\n    }", "signature": "void testExplosionChanges()", "full_signature": "@Test public void testExplosionChanges()", "class_method_signature": "ConstantinopleConfigTest.testExplosionChanges()", "testcase": true, "constructor": false, "invocations": ["build", "assertEquals", "getExplosion", "build", "assertEquals", "getExplosion", "build", "assertEquals", "getExplosion", "build", "assertEquals", "getExplosion", "build", "assertEquals", "getExplosion"]}, "focal_class": {"identifier": "ConstantinopleConfig", "superclass": "extends ByzantiumConfig", "interfaces": "", "fields": [{"original_string": "private final Constants constants;", "modifier": "private final", "type": "Constants", "declarator": "constants", "var_name": "constants"}], "methods": [{"identifier": "ConstantinopleConfig", "parameters": "(BlockchainConfig parent)", "modifiers": "public", "return": "", "signature": " ConstantinopleConfig(BlockchainConfig parent)", "full_signature": "public  ConstantinopleConfig(BlockchainConfig parent)", "class_method_signature": "ConstantinopleConfig.ConstantinopleConfig(BlockchainConfig parent)", "testcase": false, "constructor": true}, {"identifier": "getConstants", "parameters": "()", "modifiers": "@Override public", "return": "Constants", "signature": "Constants getConstants()", "full_signature": "@Override public Constants getConstants()", "class_method_signature": "ConstantinopleConfig.getConstants()", "testcase": false, "constructor": false}, {"identifier": "getExplosion", "parameters": "(BlockHeader curBlock, BlockHeader parent)", "modifiers": "@Override protected", "return": "int", "signature": "int getExplosion(BlockHeader curBlock, BlockHeader parent)", "full_signature": "@Override protected int getExplosion(BlockHeader curBlock, BlockHeader parent)", "class_method_signature": "ConstantinopleConfig.getExplosion(BlockHeader curBlock, BlockHeader parent)", "testcase": false, "constructor": false}, {"identifier": "eip1052", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip1052()", "full_signature": "@Override public boolean eip1052()", "class_method_signature": "ConstantinopleConfig.eip1052()", "testcase": false, "constructor": false}, {"identifier": "eip145", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip145()", "full_signature": "@Override public boolean eip145()", "class_method_signature": "ConstantinopleConfig.eip145()", "testcase": false, "constructor": false}, {"identifier": "eip1283", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip1283()", "full_signature": "@Override public boolean eip1283()", "class_method_signature": "ConstantinopleConfig.eip1283()", "testcase": false, "constructor": false}, {"identifier": "eip1014", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip1014()", "full_signature": "@Override public boolean eip1014()", "class_method_signature": "ConstantinopleConfig.eip1014()", "testcase": false, "constructor": false}], "file": "ethereumj-core/src/main/java/org/ethereum/config/blockchain/ConstantinopleConfig.java"}, "focal_method": {"identifier": "getExplosion", "parameters": "(BlockHeader curBlock, BlockHeader parent)", "modifiers": "@Override protected", "return": "int", "body": "@Override\n    protected int getExplosion(BlockHeader curBlock, BlockHeader parent) {\n        int periodCount = (int) (Math.max(0, curBlock.getNumber() - 5_000_000) / getConstants().getEXP_DIFFICULTY_PERIOD());\n        return periodCount - 2;\n    }", "signature": "int getExplosion(BlockHeader curBlock, BlockHeader parent)", "full_signature": "@Override protected int getExplosion(BlockHeader curBlock, BlockHeader parent)", "class_method_signature": "ConstantinopleConfig.getExplosion(BlockHeader curBlock, BlockHeader parent)", "testcase": false, "constructor": false, "invocations": ["max", "getNumber", "getEXP_DIFFICULTY_PERIOD", "getConstants"]}, "repository": {"repo_id": 19730456, "url": "https://github.com/ethereum/ethereumj", "language": "Java", "is_fork": false, "fork_count": 1034, "stargazer_count": 2058, "size": 47979, "license": "licensed"}}