{"test_class": {"identifier": "ResultSetsTest", "superclass": "extends TestBase", "interfaces": "", "fields": [{"original_string": "Object[] uuids = {\n        UUID.fromString(\"e6af74a8-4711-4609-a94f-2cbfab9695e5\"),\n        UUID.fromString(\"281336f4-2a52-4535-847c-11a4d3682ec1\"),\n        UUID.fromString(\"c32b8d37-89bd-4dfe-a7d5-5f0258692d05\"),\n        UUID.fromString(\"973fe99f-5715-4dfd-a28d-5b3751b26ab5\"),\n        UUID.fromString(\"0aabb840-bab6-474b-9f08-c18527a2b47f\") };", "modifier": "", "type": "Object[]", "declarator": "uuids = {\n        UUID.fromString(\"e6af74a8-4711-4609-a94f-2cbfab9695e5\"),\n        UUID.fromString(\"281336f4-2a52-4535-847c-11a4d3682ec1\"),\n        UUID.fromString(\"c32b8d37-89bd-4dfe-a7d5-5f0258692d05\"),\n        UUID.fromString(\"973fe99f-5715-4dfd-a28d-5b3751b26ab5\"),\n        UUID.fromString(\"0aabb840-bab6-474b-9f08-c18527a2b47f\") }", "var_name": "uuids"}], "file": "db/cassandra-intro/src/main/java/com/async/ResultSetsTest.java"}, "test_case": {"identifier": "should_query_partitions_with_futures_in_order", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_query_partitions_with_futures_in_order() throws Exception {\n        List<ListenableFuture<ResultSet>> futures = ResultSets.queryAll(session,\n            \"SELECT * FROM users WHERE id = ?\",\n            uuids);\n\n        List<String> names = Lists.newArrayList();\n        for (ListenableFuture<ResultSet> future : futures) {\n            ResultSet rs = future.get(100, MILLISECONDS);\n            names.add(rs.one().getString(\"name\"));\n        }\n\n        Assertions.assertThat(names).containsOnly(\"user1\", \"user2\", \"user3\", \"user4\", \"user5\");\n    }", "signature": "void should_query_partitions_with_futures_in_order()", "full_signature": "@Test public void should_query_partitions_with_futures_in_order()", "class_method_signature": "ResultSetsTest.should_query_partitions_with_futures_in_order()", "testcase": true, "constructor": false, "invocations": ["queryAll", "newArrayList", "get", "add", "getString", "one", "containsOnly", "assertThat"]}, "focal_class": {"identifier": "ResultSets", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "queryAllAsList", "parameters": "(Session session, String query, Object... partitionKeys)", "modifiers": "public static", "return": "Future<List<ResultSet>>", "signature": "Future<List<ResultSet>> queryAllAsList(Session session, String query, Object... partitionKeys)", "full_signature": "public static Future<List<ResultSet>> queryAllAsList(Session session, String query, Object... partitionKeys)", "class_method_signature": "ResultSets.queryAllAsList(Session session, String query, Object... partitionKeys)", "testcase": false, "constructor": false}, {"identifier": "queryAll", "parameters": "(Session session, String query, Object... partitionKeys)", "modifiers": "public static", "return": "List<ListenableFuture<ResultSet>>", "signature": "List<ListenableFuture<ResultSet>> queryAll(Session session, String query, Object... partitionKeys)", "full_signature": "public static List<ListenableFuture<ResultSet>> queryAll(Session session, String query, Object... partitionKeys)", "class_method_signature": "ResultSets.queryAll(Session session, String query, Object... partitionKeys)", "testcase": false, "constructor": false}, {"identifier": "queryAllAsObservable", "parameters": "(Session session, String query, Object... partitionKeys)", "modifiers": "public static", "return": "Observable<ResultSet>", "signature": "Observable<ResultSet> queryAllAsObservable(Session session, String query, Object... partitionKeys)", "full_signature": "public static Observable<ResultSet> queryAllAsObservable(Session session, String query, Object... partitionKeys)", "class_method_signature": "ResultSets.queryAllAsObservable(Session session, String query, Object... partitionKeys)", "testcase": false, "constructor": false}, {"identifier": "sendQueries", "parameters": "(Session session, String query, Object[] partitionKeys)", "modifiers": "private static", "return": "List<ResultSetFuture>", "signature": "List<ResultSetFuture> sendQueries(Session session, String query, Object[] partitionKeys)", "full_signature": "private static List<ResultSetFuture> sendQueries(Session session, String query, Object[] partitionKeys)", "class_method_signature": "ResultSets.sendQueries(Session session, String query, Object[] partitionKeys)", "testcase": false, "constructor": false}], "file": "db/cassandra-intro/src/main/java/com/async/ResultSets.java"}, "focal_method": {"identifier": "queryAll", "parameters": "(Session session, String query, Object... partitionKeys)", "modifiers": "public static", "return": "List<ListenableFuture<ResultSet>>", "body": "public static List<ListenableFuture<ResultSet>> queryAll(Session session, String query, Object... partitionKeys) {\n        List<ResultSetFuture> futures = sendQueries(session, query, partitionKeys);\n        //\u539f\u5148List\u91cc\u662fResultSetFuture, Future\u91cc\u662fResultSet: ResultSetFuture<ResultSet>,\n        //\u5c06ResultSetFuture\u8f6c\u6362\u4e3a\u53ef\u76d1\u542c\u7684ListenableFuture, \u7ed3\u679c\u8fd8\u662fResultSet.\n        return Futures.inCompletionOrder(futures);\n    }", "signature": "List<ListenableFuture<ResultSet>> queryAll(Session session, String query, Object... partitionKeys)", "full_signature": "public static List<ListenableFuture<ResultSet>> queryAll(Session session, String query, Object... partitionKeys)", "class_method_signature": "ResultSets.queryAll(Session session, String query, Object... partitionKeys)", "testcase": false, "constructor": false, "invocations": ["sendQueries", "inCompletionOrder"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}