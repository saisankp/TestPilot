{"test_class": {"identifier": "HystrixTest", "superclass": "", "interfaces": "", "fields": [], "file": "hystrix-core/src/test/java/com/netflix/hystrix/HystrixTest.java"}, "test_case": {"identifier": "testNotInThread", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNotInThread() {\n        assertNull(Hystrix.getCurrentThreadExecutingCommand());\n    }", "signature": "void testNotInThread()", "full_signature": "@Test public void testNotInThread()", "class_method_signature": "HystrixTest.testNotInThread()", "testcase": true, "constructor": false, "invocations": ["assertNull", "getCurrentThreadExecutingCommand"]}, "focal_class": {"identifier": "Hystrix", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(Hystrix.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(Hystrix.class)", "var_name": "logger"}, {"original_string": "private static ThreadLocal<ConcurrentStack<HystrixCommandKey>> currentCommand = new ThreadLocal<ConcurrentStack<HystrixCommandKey>>() {\n        @Override\n        protected ConcurrentStack<HystrixCommandKey> initialValue() {\n            return new ConcurrentStack<HystrixCommandKey>();\n        }\n    };", "modifier": "private static", "type": "ThreadLocal<ConcurrentStack<HystrixCommandKey>>", "declarator": "currentCommand = new ThreadLocal<ConcurrentStack<HystrixCommandKey>>() {\n        @Override\n        protected ConcurrentStack<HystrixCommandKey> initialValue() {\n            return new ConcurrentStack<HystrixCommandKey>();\n        }\n    }", "var_name": "currentCommand"}], "methods": [{"identifier": "reset", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void reset()", "full_signature": "public static void reset()", "class_method_signature": "Hystrix.reset()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "(long time, TimeUnit unit)", "modifiers": "public static", "return": "void", "signature": "void reset(long time, TimeUnit unit)", "full_signature": "public static void reset(long time, TimeUnit unit)", "class_method_signature": "Hystrix.reset(long time, TimeUnit unit)", "testcase": false, "constructor": false}, {"identifier": "_reset", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void _reset()", "full_signature": "private static void _reset()", "class_method_signature": "Hystrix._reset()", "testcase": false, "constructor": false}, {"identifier": "getCurrentThreadExecutingCommand", "parameters": "()", "modifiers": "public static", "return": "HystrixCommandKey", "signature": "HystrixCommandKey getCurrentThreadExecutingCommand()", "full_signature": "public static HystrixCommandKey getCurrentThreadExecutingCommand()", "class_method_signature": "Hystrix.getCurrentThreadExecutingCommand()", "testcase": false, "constructor": false}, {"identifier": "startCurrentThreadExecutingCommand", "parameters": "(HystrixCommandKey key)", "modifiers": "static", "return": "Action0", "signature": "Action0 startCurrentThreadExecutingCommand(HystrixCommandKey key)", "full_signature": "static Action0 startCurrentThreadExecutingCommand(HystrixCommandKey key)", "class_method_signature": "Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey key)", "testcase": false, "constructor": false}, {"identifier": "endCurrentThreadExecutingCommand", "parameters": "()", "modifiers": "static", "return": "void", "signature": "void endCurrentThreadExecutingCommand()", "full_signature": "static void endCurrentThreadExecutingCommand()", "class_method_signature": "Hystrix.endCurrentThreadExecutingCommand()", "testcase": false, "constructor": false}, {"identifier": "endCurrentThreadExecutingCommand", "parameters": "(ConcurrentStack<HystrixCommandKey> list)", "modifiers": "private static", "return": "void", "signature": "void endCurrentThreadExecutingCommand(ConcurrentStack<HystrixCommandKey> list)", "full_signature": "private static void endCurrentThreadExecutingCommand(ConcurrentStack<HystrixCommandKey> list)", "class_method_signature": "Hystrix.endCurrentThreadExecutingCommand(ConcurrentStack<HystrixCommandKey> list)", "testcase": false, "constructor": false}, {"identifier": "getCommandCount", "parameters": "()", "modifiers": "static", "return": "int", "signature": "int getCommandCount()", "full_signature": "static int getCommandCount()", "class_method_signature": "Hystrix.getCommandCount()", "testcase": false, "constructor": false}], "file": "hystrix-core/src/main/java/com/netflix/hystrix/Hystrix.java"}, "focal_method": {"identifier": "getCurrentThreadExecutingCommand", "parameters": "()", "modifiers": "public static", "return": "HystrixCommandKey", "body": "public static HystrixCommandKey getCurrentThreadExecutingCommand() {\n        if (currentCommand == null) {\n            // statics do \"interesting\" things across classloaders apparently so this can somehow be null ... \n            return null;\n        }\n        return currentCommand.get().peek();\n    }", "signature": "HystrixCommandKey getCurrentThreadExecutingCommand()", "full_signature": "public static HystrixCommandKey getCurrentThreadExecutingCommand()", "class_method_signature": "Hystrix.getCurrentThreadExecutingCommand()", "testcase": false, "constructor": false, "invocations": ["peek", "get"]}, "repository": {"repo_id": 6766558, "url": "https://github.com/Netflix/Hystrix", "stars": 19028, "created": "11/19/2012 8:14:46 PM +00:00", "updates": "2020-01-27T17:55:28+00:00", "fork": "False", "license": "licensed"}}