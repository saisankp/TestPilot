{"test_class": {"identifier": "MapConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HierarchicalStreamWriter writerMock;", "modifier": "private", "type": "HierarchicalStreamWriter", "declarator": "writerMock", "var_name": "writerMock"}, {"original_string": "private MapConverter mapConverter;", "modifier": "private", "type": "MapConverter", "declarator": "mapConverter", "var_name": "mapConverter"}, {"original_string": "private Map<String, Object> data;", "modifier": "private", "type": "Map<String, Object>", "declarator": "data", "var_name": "data"}], "file": "geoclient-service/src/test/java/gov/nyc/doitt/gis/geoclient/service/xstream/MapConverterTest.java"}, "test_case": {"identifier": "testMarshalNestedMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMarshalNestedMap() {\n        Map<String, Object> outerMap = new HashMap<String, Object>();\n        outerMap.put(\"Foo\", this.data);\n        this.mapConverter.marshal(outerMap, this.writerMock, null);\n        Mockito.verify(this.writerMock).startNode(\"Foo\");\n        Mockito.verify(this.writerMock).startNode(\"ONE\");\n        Mockito.verify(this.writerMock).setValue(\"1.0\");\n        Mockito.verify(this.writerMock).startNode(\"TWO\");\n        Mockito.verify(this.writerMock).setValue(\"2\");\n        Mockito.verify(this.writerMock).startNode(\"THREE\");\n        Mockito.verify(this.writerMock).setValue(null);\n        Mockito.verify(this.writerMock, Mockito.times(4)).endNode();\n    }", "signature": "void testMarshalNestedMap()", "full_signature": "@Test public void testMarshalNestedMap()", "class_method_signature": "MapConverterTest.testMarshalNestedMap()", "testcase": true, "constructor": false, "invocations": ["put", "marshal", "startNode", "verify", "startNode", "verify", "setValue", "verify", "startNode", "verify", "setValue", "verify", "startNode", "verify", "setValue", "verify", "endNode", "verify", "times"]}, "focal_class": {"identifier": "MapConverter", "superclass": "", "interfaces": "implements Converter", "fields": [], "methods": [{"identifier": "canConvert", "parameters": "(@SuppressWarnings(\"rawtypes\") Class type)", "modifiers": "public", "return": "boolean", "signature": "boolean canConvert(@SuppressWarnings(\"rawtypes\") Class type)", "full_signature": "public boolean canConvert(@SuppressWarnings(\"rawtypes\") Class type)", "class_method_signature": "MapConverter.canConvert(@SuppressWarnings(\"rawtypes\") Class type)", "testcase": false, "constructor": false}, {"identifier": "marshal", "parameters": "(Object source, HierarchicalStreamWriter writer, MarshallingContext context)", "modifiers": "public", "return": "void", "signature": "void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context)", "full_signature": "public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context)", "class_method_signature": "MapConverter.marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context)", "testcase": false, "constructor": false}, {"identifier": "unmarshal", "parameters": "(HierarchicalStreamReader reader, UnmarshallingContext context)", "modifiers": "public", "return": "Object", "signature": "Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context)", "full_signature": "public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context)", "class_method_signature": "MapConverter.unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context)", "testcase": false, "constructor": false}], "file": "geoclient-service/src/main/java/gov/nyc/doitt/gis/geoclient/service/xstream/MapConverter.java"}, "focal_method": {"identifier": "marshal", "parameters": "(Object source, HierarchicalStreamWriter writer, MarshallingContext context)", "modifiers": "public", "return": "void", "body": "public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context) {\n        @SuppressWarnings(\"unchecked\")\n        Map<String, Object> data = (Map<String, Object>) source;\n        for (Map.Entry<String, Object> entry : data.entrySet()) {\n            writer.startNode(entry.getKey());\n            Object value = entry.getValue();\n            if (value instanceof Map) {\n                // Recursively map any sub-Maps\n                this.marshal(value, writer, context);\n            } else if (value instanceof Collection<?>) {\n                context.convertAnother(value);\n            } else {\n                writer.setValue(value != null ? entry.getValue().toString() : null);\n            }\n            writer.endNode();\n        }\n    }", "signature": "void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context)", "full_signature": "public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context)", "class_method_signature": "MapConverter.marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context)", "testcase": false, "constructor": false, "invocations": ["entrySet", "startNode", "getKey", "getValue", "marshal", "convertAnother", "setValue", "toString", "getValue", "endNode"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}