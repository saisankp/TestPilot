{"test_class": {"identifier": "TransactionTest", "superclass": "", "interfaces": "", "fields": [], "file": "kin-sdk/kin-base/src/test/java/kin/base/TransactionTest.java"}, "test_case": {"identifier": "testNoOperations", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNoOperations() throws FormatException, IOException {\n        // GBPMKIRA2OQW2XZZQUCQILI5TMVZ6JNRKM423BSAISDM7ZFWQ6KWEBC4\n        KeyPair source = KeyPair.fromSecretSeed(\"SCH27VUZZ6UAKB67BDNF6FA42YMBMQCBKXWGMFD5TZ6S5ZZCZFLRXKHS\");\n\n        Account account = new Account(source, 2908908335136768L);\n        try {\n            Transaction transaction = new Transaction.Builder(account).build();\n            fail();\n        } catch (RuntimeException exception) {\n            assertTrue(exception.getMessage().contains(\"At least one operation required\"));\n            assertEquals(new Long(2908908335136768L), account.getSequenceNumber());\n        }\n    }", "signature": "void testNoOperations()", "full_signature": "@Test public void testNoOperations()", "class_method_signature": "TransactionTest.testNoOperations()", "testcase": true, "constructor": false, "invocations": ["fromSecretSeed", "build", "fail", "assertTrue", "contains", "getMessage", "assertEquals", "getSequenceNumber"]}, "focal_class": {"identifier": "Transaction", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final int mFee;", "modifier": "private final", "type": "int", "declarator": "mFee", "var_name": "mFee"}, {"original_string": "private final KeyPair mSourceAccount;", "modifier": "private final", "type": "KeyPair", "declarator": "mSourceAccount", "var_name": "mSourceAccount"}, {"original_string": "private final long mSequenceNumber;", "modifier": "private final", "type": "long", "declarator": "mSequenceNumber", "var_name": "mSequenceNumber"}, {"original_string": "private final Operation[] mOperations;", "modifier": "private final", "type": "Operation[]", "declarator": "mOperations", "var_name": "mOperations"}, {"original_string": "private final Memo mMemo;", "modifier": "private final", "type": "Memo", "declarator": "mMemo", "var_name": "mMemo"}, {"original_string": "private final TimeBounds mTimeBounds;", "modifier": "private final", "type": "TimeBounds", "declarator": "mTimeBounds", "var_name": "mTimeBounds"}, {"original_string": "private List<DecoratedSignature> mSignatures;", "modifier": "private", "type": "List<DecoratedSignature>", "declarator": "mSignatures", "var_name": "mSignatures"}], "methods": [{"identifier": "Transaction", "parameters": "(KeyPair sourceAccount, int fee, long sequenceNumber, Operation[] operations, Memo memo, TimeBounds timeBounds)", "modifiers": "", "return": "", "signature": " Transaction(KeyPair sourceAccount, int fee, long sequenceNumber, Operation[] operations, Memo memo, TimeBounds timeBounds)", "full_signature": "  Transaction(KeyPair sourceAccount, int fee, long sequenceNumber, Operation[] operations, Memo memo, TimeBounds timeBounds)", "class_method_signature": "Transaction.Transaction(KeyPair sourceAccount, int fee, long sequenceNumber, Operation[] operations, Memo memo, TimeBounds timeBounds)", "testcase": false, "constructor": true}, {"identifier": "sign", "parameters": "(KeyPair signer)", "modifiers": "public", "return": "void", "signature": "void sign(KeyPair signer)", "full_signature": "public void sign(KeyPair signer)", "class_method_signature": "Transaction.sign(KeyPair signer)", "testcase": false, "constructor": false}, {"identifier": "sign", "parameters": "(byte[] preimage)", "modifiers": "public", "return": "void", "signature": "void sign(byte[] preimage)", "full_signature": "public void sign(byte[] preimage)", "class_method_signature": "Transaction.sign(byte[] preimage)", "testcase": false, "constructor": false}, {"identifier": "hash", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] hash()", "full_signature": "public byte[] hash()", "class_method_signature": "Transaction.hash()", "testcase": false, "constructor": false}, {"identifier": "signatureBase", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] signatureBase()", "full_signature": "public byte[] signatureBase()", "class_method_signature": "Transaction.signatureBase()", "testcase": false, "constructor": false}, {"identifier": "getSourceAccount", "parameters": "()", "modifiers": "public", "return": "KeyPair", "signature": "KeyPair getSourceAccount()", "full_signature": "public KeyPair getSourceAccount()", "class_method_signature": "Transaction.getSourceAccount()", "testcase": false, "constructor": false}, {"identifier": "getSequenceNumber", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getSequenceNumber()", "full_signature": "public long getSequenceNumber()", "class_method_signature": "Transaction.getSequenceNumber()", "testcase": false, "constructor": false}, {"identifier": "getSignatures", "parameters": "()", "modifiers": "public", "return": "List<DecoratedSignature>", "signature": "List<DecoratedSignature> getSignatures()", "full_signature": "public List<DecoratedSignature> getSignatures()", "class_method_signature": "Transaction.getSignatures()", "testcase": false, "constructor": false}, {"identifier": "getMemo", "parameters": "()", "modifiers": "public", "return": "Memo", "signature": "Memo getMemo()", "full_signature": "public Memo getMemo()", "class_method_signature": "Transaction.getMemo()", "testcase": false, "constructor": false}, {"identifier": "getOperations", "parameters": "()", "modifiers": "public", "return": "Operation[]", "signature": "Operation[] getOperations()", "full_signature": "public Operation[] getOperations()", "class_method_signature": "Transaction.getOperations()", "testcase": false, "constructor": false}, {"identifier": "getTimeBounds", "parameters": "()", "modifiers": "public", "return": "TimeBounds", "signature": "TimeBounds getTimeBounds()", "full_signature": "public TimeBounds getTimeBounds()", "class_method_signature": "Transaction.getTimeBounds()", "testcase": false, "constructor": false}, {"identifier": "getFee", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFee()", "full_signature": "public int getFee()", "class_method_signature": "Transaction.getFee()", "testcase": false, "constructor": false}, {"identifier": "toXdr", "parameters": "()", "modifiers": "public", "return": "kin.base.xdr.Transaction", "signature": "kin.base.xdr.Transaction toXdr()", "full_signature": "public kin.base.xdr.Transaction toXdr()", "class_method_signature": "Transaction.toXdr()", "testcase": false, "constructor": false}, {"identifier": "toEnvelopeXdr", "parameters": "()", "modifiers": "public", "return": "kin.base.xdr.TransactionEnvelope", "signature": "kin.base.xdr.TransactionEnvelope toEnvelopeXdr()", "full_signature": "public kin.base.xdr.TransactionEnvelope toEnvelopeXdr()", "class_method_signature": "Transaction.toEnvelopeXdr()", "testcase": false, "constructor": false}, {"identifier": "toEnvelopeXdrBase64", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toEnvelopeXdrBase64()", "full_signature": "public String toEnvelopeXdrBase64()", "class_method_signature": "Transaction.toEnvelopeXdrBase64()", "testcase": false, "constructor": false}, {"identifier": "fromEnvelopeXdr", "parameters": "(String envelope)", "modifiers": "public static", "return": "Transaction", "signature": "Transaction fromEnvelopeXdr(String envelope)", "full_signature": "public static Transaction fromEnvelopeXdr(String envelope)", "class_method_signature": "Transaction.fromEnvelopeXdr(String envelope)", "testcase": false, "constructor": false}, {"identifier": "fromEnvelopeXdr", "parameters": "(TransactionEnvelope envelope)", "modifiers": "public static", "return": "Transaction", "signature": "Transaction fromEnvelopeXdr(TransactionEnvelope envelope)", "full_signature": "public static Transaction fromEnvelopeXdr(TransactionEnvelope envelope)", "class_method_signature": "Transaction.fromEnvelopeXdr(TransactionEnvelope envelope)", "testcase": false, "constructor": false}], "file": "kin-sdk/kin-base/src/main/java/kin/base/Transaction.java"}, "focal_method": {"identifier": "getSequenceNumber", "parameters": "()", "modifiers": "public", "return": "long", "body": "public long getSequenceNumber() {\n        return mSequenceNumber;\n    }", "signature": "long getSequenceNumber()", "full_signature": "public long getSequenceNumber()", "class_method_signature": "Transaction.getSequenceNumber()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 156408389, "url": "https://github.com/kinecosystem/kin-sdk-android", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 9, "size": 3232, "license": "licensed"}}