{"test_class": {"identifier": "IpLiteralTest", "superclass": "", "interfaces": "", "fields": [], "file": "brave/src/test/java/brave/internal/codec/IpLiteralTest.java"}, "test_case": {"identifier": "ipOrNull_ipv6_compatIpv4", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void ipOrNull_ipv6_compatIpv4() {\n    assertThat(IpLiteral.ipOrNull(\"::0000:43.0.192.2\")).isEqualTo(\"43.0.192.2\");\n  }", "signature": "void ipOrNull_ipv6_compatIpv4()", "full_signature": "@Test public void ipOrNull_ipv6_compatIpv4()", "class_method_signature": "IpLiteralTest.ipOrNull_ipv6_compatIpv4()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "ipOrNull"]}, "focal_class": {"identifier": "IpLiteral", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ipOrNull", "parameters": "(@Nullable String ip)", "modifiers": "@Nullable public static", "return": "String", "signature": "String ipOrNull(@Nullable String ip)", "full_signature": "@Nullable public static String ipOrNull(@Nullable String ip)", "class_method_signature": "IpLiteral.ipOrNull(@Nullable String ip)", "testcase": false, "constructor": false}, {"identifier": "detectFamily", "parameters": "(String ipString)", "modifiers": "public static", "return": "IpFamily", "signature": "IpFamily detectFamily(String ipString)", "full_signature": "public static IpFamily detectFamily(String ipString)", "class_method_signature": "IpLiteral.detectFamily(String ipString)", "testcase": false, "constructor": false}, {"identifier": "notHex", "parameters": "(char c)", "modifiers": "private static", "return": "boolean", "signature": "boolean notHex(char c)", "full_signature": "private static boolean notHex(char c)", "class_method_signature": "IpLiteral.notHex(char c)", "testcase": false, "constructor": false}, {"identifier": "isValidIpV4Address", "parameters": "(String ip, int from, int toExcluded)", "modifiers": "private static", "return": "boolean", "signature": "boolean isValidIpV4Address(String ip, int from, int toExcluded)", "full_signature": "private static boolean isValidIpV4Address(String ip, int from, int toExcluded)", "class_method_signature": "IpLiteral.isValidIpV4Address(String ip, int from, int toExcluded)", "testcase": false, "constructor": false}, {"identifier": "isValidIpV4Word", "parameters": "(CharSequence word, int from, int toExclusive)", "modifiers": "private static", "return": "boolean", "signature": "boolean isValidIpV4Word(CharSequence word, int from, int toExclusive)", "full_signature": "private static boolean isValidIpV4Word(CharSequence word, int from, int toExclusive)", "class_method_signature": "IpLiteral.isValidIpV4Word(CharSequence word, int from, int toExclusive)", "testcase": false, "constructor": false}, {"identifier": "isValidNumericChar", "parameters": "(char c)", "modifiers": "private static", "return": "boolean", "signature": "boolean isValidNumericChar(char c)", "full_signature": "private static boolean isValidNumericChar(char c)", "class_method_signature": "IpLiteral.isValidNumericChar(char c)", "testcase": false, "constructor": false}], "file": "brave/src/main/java/brave/internal/codec/IpLiteral.java"}, "focal_method": {"identifier": "ipOrNull", "parameters": "(@Nullable String ip)", "modifiers": "@Nullable public static", "return": "String", "body": "@Nullable public static String ipOrNull(@Nullable String ip) {\n    if (ip == null || ip.isEmpty()) return null;\n    if (\"::1\".equals(ip) || \"127.0.0.1\".equals(ip)) return ip; // special-case localhost\n    IpFamily format = detectFamily(ip);\n    if (format == IpFamily.IPv4Embedded) {\n      ip = ip.substring(ip.lastIndexOf(':') + 1);\n    } else if (format == IpFamily.Unknown) {\n      ip = null;\n    }\n    return ip;\n  }", "signature": "String ipOrNull(@Nullable String ip)", "full_signature": "@Nullable public static String ipOrNull(@Nullable String ip)", "class_method_signature": "IpLiteral.ipOrNull(@Nullable String ip)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "equals", "equals", "detectFamily", "substring", "lastIndexOf"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}