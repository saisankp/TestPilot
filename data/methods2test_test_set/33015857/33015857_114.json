{"test_class": {"identifier": "IntTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "boolean ok;", "modifier": "", "type": "boolean", "declarator": "ok", "var_name": "ok"}], "file": "reflekt/src/test/java/io/advantageous/boon/primitive/IntTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test() {\n\n\n\n        long sum =  reduceBy(new int[]{1,2,3,4,5,6,7,8}, this);\n\n\n        if (sum != 36)\n            die(Str.sputs(\"Sum was 36\", sum));\n\n\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "IntTest.test()", "testcase": true, "constructor": false, "invocations": ["reduceBy", "die", "sputs"]}, "focal_class": {"identifier": "Int", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "grow", "parameters": "( int[] array, final int size )", "modifiers": "public static", "return": "int[]", "signature": "int[] grow( int[] array, final int size )", "full_signature": "public static int[] grow( int[] array, final int size )", "class_method_signature": "Int.grow( int[] array, final int size )", "testcase": false, "constructor": false}, {"identifier": "grow", "parameters": "( int[] array )", "modifiers": "public static", "return": "int[]", "signature": "int[] grow( int[] array )", "full_signature": "public static int[] grow( int[] array )", "class_method_signature": "Int.grow( int[] array )", "testcase": false, "constructor": false}, {"identifier": "shrink", "parameters": "( int[] array, int size )", "modifiers": "public static", "return": "int[]", "signature": "int[] shrink( int[] array, int size )", "full_signature": "public static int[] shrink( int[] array, int size )", "class_method_signature": "Int.shrink( int[] array, int size )", "testcase": false, "constructor": false}, {"identifier": "compact", "parameters": "( int[] array )", "modifiers": "public static", "return": "int[]", "signature": "int[] compact( int[] array )", "full_signature": "public static int[] compact( int[] array )", "class_method_signature": "Int.compact( int[] array )", "testcase": false, "constructor": false}, {"identifier": "arrayOfInt", "parameters": "( final int size )", "modifiers": "public static", "return": "int[]", "signature": "int[] arrayOfInt( final int size )", "full_signature": "public static int[] arrayOfInt( final int size )", "class_method_signature": "Int.arrayOfInt( final int size )", "testcase": false, "constructor": false}, {"identifier": "array", "parameters": "( final int... array )", "modifiers": "public static", "return": "int[]", "signature": "int[] array( final int... array )", "full_signature": "public static int[] array( final int... array )", "class_method_signature": "Int.array( final int... array )", "testcase": false, "constructor": false}, {"identifier": "lengthOf", "parameters": "( int[] array )", "modifiers": "public static", "return": "int", "signature": "int lengthOf( int[] array )", "full_signature": "public static int lengthOf( int[] array )", "class_method_signature": "Int.lengthOf( int[] array )", "testcase": false, "constructor": false}, {"identifier": "len", "parameters": "( int[] array )", "modifiers": "public static", "return": "int", "signature": "int len( int[] array )", "full_signature": "public static int len( int[] array )", "class_method_signature": "Int.len( int[] array )", "testcase": false, "constructor": false}, {"identifier": "idx", "parameters": "( final int[] array, final int index )", "modifiers": "public static", "return": "int", "signature": "int idx( final int[] array, final int index )", "full_signature": "public static int idx( final int[] array, final int index )", "class_method_signature": "Int.idx( final int[] array, final int index )", "testcase": false, "constructor": false}, {"identifier": "atIndex", "parameters": "( final int[] array, final int index )", "modifiers": "public static", "return": "int", "signature": "int atIndex( final int[] array, final int index )", "full_signature": "public static int atIndex( final int[] array, final int index )", "class_method_signature": "Int.atIndex( final int[] array, final int index )", "testcase": false, "constructor": false}, {"identifier": "idx", "parameters": "( final int[] array, int index, int value )", "modifiers": "public static", "return": "void", "signature": "void idx( final int[] array, int index, int value )", "full_signature": "public static void idx( final int[] array, int index, int value )", "class_method_signature": "Int.idx( final int[] array, int index, int value )", "testcase": false, "constructor": false}, {"identifier": "atIndex", "parameters": "( final int[] array, int index, int value )", "modifiers": "public static", "return": "void", "signature": "void atIndex( final int[] array, int index, int value )", "full_signature": "public static void atIndex( final int[] array, int index, int value )", "class_method_signature": "Int.atIndex( final int[] array, int index, int value )", "testcase": false, "constructor": false}, {"identifier": "slc", "parameters": "( int[] array, int startIndex, int endIndex )", "modifiers": "public static", "return": "int[]", "signature": "int[] slc( int[] array, int startIndex, int endIndex )", "full_signature": "public static int[] slc( int[] array, int startIndex, int endIndex )", "class_method_signature": "Int.slc( int[] array, int startIndex, int endIndex )", "testcase": false, "constructor": false}, {"identifier": "sliceOf", "parameters": "( int[] array, int startIndex, int endIndex )", "modifiers": "public static", "return": "int[]", "signature": "int[] sliceOf( int[] array, int startIndex, int endIndex )", "full_signature": "public static int[] sliceOf( int[] array, int startIndex, int endIndex )", "class_method_signature": "Int.sliceOf( int[] array, int startIndex, int endIndex )", "testcase": false, "constructor": false}, {"identifier": "slc", "parameters": "( int[] array, int startIndex )", "modifiers": "public static", "return": "int[]", "signature": "int[] slc( int[] array, int startIndex )", "full_signature": "public static int[] slc( int[] array, int startIndex )", "class_method_signature": "Int.slc( int[] array, int startIndex )", "testcase": false, "constructor": false}, {"identifier": "sliceOf", "parameters": "( int[] array, int startIndex )", "modifiers": "public static", "return": "int[]", "signature": "int[] sliceOf( int[] array, int startIndex )", "full_signature": "public static int[] sliceOf( int[] array, int startIndex )", "class_method_signature": "Int.sliceOf( int[] array, int startIndex )", "testcase": false, "constructor": false}, {"identifier": "slcEnd", "parameters": "( int[] array, int endIndex )", "modifiers": "public static", "return": "int[]", "signature": "int[] slcEnd( int[] array, int endIndex )", "full_signature": "public static int[] slcEnd( int[] array, int endIndex )", "class_method_signature": "Int.slcEnd( int[] array, int endIndex )", "testcase": false, "constructor": false}, {"identifier": "endSliceOf", "parameters": "( int[] array, int endIndex )", "modifiers": "public static", "return": "int[]", "signature": "int[] endSliceOf( int[] array, int endIndex )", "full_signature": "public static int[] endSliceOf( int[] array, int endIndex )", "class_method_signature": "Int.endSliceOf( int[] array, int endIndex )", "testcase": false, "constructor": false}, {"identifier": "in", "parameters": "( int value, int[] array )", "modifiers": "public static", "return": "boolean", "signature": "boolean in( int value, int[] array )", "full_signature": "public static boolean in( int value, int[] array )", "class_method_signature": "Int.in( int value, int[] array )", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "( int[] array )", "modifiers": "public static", "return": "int[]", "signature": "int[] copy( int[] array )", "full_signature": "public static int[] copy( int[] array )", "class_method_signature": "Int.copy( int[] array )", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "( int[] array, int v )", "modifiers": "public static", "return": "int[]", "signature": "int[] add( int[] array, int v )", "full_signature": "public static int[] add( int[] array, int v )", "class_method_signature": "Int.add( int[] array, int v )", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "( int[] array, int[] array2 )", "modifiers": "public static", "return": "int[]", "signature": "int[] add( int[] array, int[] array2 )", "full_signature": "public static int[] add( int[] array, int[] array2 )", "class_method_signature": "Int.add( int[] array, int[] array2 )", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "( final int[] array, final int idx, final int v )", "modifiers": "public static", "return": "int[]", "signature": "int[] insert( final int[] array, final int idx, final int v )", "full_signature": "public static int[] insert( final int[] array, final int idx, final int v )", "class_method_signature": "Int.insert( final int[] array, final int idx, final int v )", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "( final int[] array, final int fromIndex, final int[] values )", "modifiers": "public static", "return": "int[]", "signature": "int[] insert( final int[] array, final int fromIndex, final int[] values )", "full_signature": "public static int[] insert( final int[] array, final int fromIndex, final int[] values )", "class_method_signature": "Int.insert( final int[] array, final int fromIndex, final int[] values )", "testcase": false, "constructor": false}, {"identifier": "calculateIndex", "parameters": "( int[] array, int originalIndex )", "modifiers": "private static", "return": "int", "signature": "int calculateIndex( int[] array, int originalIndex )", "full_signature": "private static int calculateIndex( int[] array, int originalIndex )", "class_method_signature": "Int.calculateIndex( int[] array, int originalIndex )", "testcase": false, "constructor": false}, {"identifier": "calculateEndIndex", "parameters": "( int[] array, int originalIndex )", "modifiers": "private static", "return": "int", "signature": "int calculateEndIndex( int[] array, int originalIndex )", "full_signature": "private static int calculateEndIndex( int[] array, int originalIndex )", "class_method_signature": "Int.calculateEndIndex( int[] array, int originalIndex )", "testcase": false, "constructor": false}, {"identifier": "reduceBy", "parameters": "( final int[] array, ReduceBy reduceBy )", "modifiers": "public static", "return": "long", "signature": "long reduceBy( final int[] array, ReduceBy reduceBy )", "full_signature": "public static long reduceBy( final int[] array, ReduceBy reduceBy )", "class_method_signature": "Int.reduceBy( final int[] array, ReduceBy reduceBy )", "testcase": false, "constructor": false}, {"identifier": "reduceBy", "parameters": "( final int[] array, final int start, final int length, ReduceBy reduceBy )", "modifiers": "public static", "return": "long", "signature": "long reduceBy( final int[] array, final int start, final int length, ReduceBy reduceBy )", "full_signature": "public static long reduceBy( final int[] array, final int start, final int length, ReduceBy reduceBy )", "class_method_signature": "Int.reduceBy( final int[] array, final int start, final int length, ReduceBy reduceBy )", "testcase": false, "constructor": false}, {"identifier": "reduceBy", "parameters": "( final int[] array, final int length, ReduceBy reduceBy )", "modifiers": "public static", "return": "long", "signature": "long reduceBy( final int[] array, final int length, ReduceBy reduceBy )", "full_signature": "public static long reduceBy( final int[] array, final int length, ReduceBy reduceBy )", "class_method_signature": "Int.reduceBy( final int[] array, final int length, ReduceBy reduceBy )", "testcase": false, "constructor": false}, {"identifier": "reduceBy", "parameters": "( final int[] array, T object )", "modifiers": "public static", "return": "long", "signature": "long reduceBy( final int[] array, T object )", "full_signature": "public static long reduceBy( final int[] array, T object )", "class_method_signature": "Int.reduceBy( final int[] array, T object )", "testcase": false, "constructor": false}, {"identifier": "reduceBy", "parameters": "( final int[] array, T object, String methodName )", "modifiers": "public static", "return": "long", "signature": "long reduceBy( final int[] array, T object, String methodName )", "full_signature": "public static long reduceBy( final int[] array, T object, String methodName )", "class_method_signature": "Int.reduceBy( final int[] array, T object, String methodName )", "testcase": false, "constructor": false}, {"identifier": "reduceByR", "parameters": "( final int[] array, T object )", "modifiers": "private static", "return": "long", "signature": "long reduceByR( final int[] array, T object )", "full_signature": "private static long reduceByR( final int[] array, T object )", "class_method_signature": "Int.reduceByR( final int[] array, T object )", "testcase": false, "constructor": false}, {"identifier": "reduceByR", "parameters": "( final int[] array, T object, String methodName )", "modifiers": "private static", "return": "long", "signature": "long reduceByR( final int[] array, T object, String methodName )", "full_signature": "private static long reduceByR( final int[] array, T object, String methodName )", "class_method_signature": "Int.reduceByR( final int[] array, T object, String methodName )", "testcase": false, "constructor": false}, {"identifier": "reduceByR", "parameters": "( final int[] array, int length, T object, String methodName )", "modifiers": "private static", "return": "long", "signature": "long reduceByR( final int[] array, int length, T object, String methodName )", "full_signature": "private static long reduceByR( final int[] array, int length, T object, String methodName )", "class_method_signature": "Int.reduceByR( final int[] array, int length, T object, String methodName )", "testcase": false, "constructor": false}, {"identifier": "reduceByR", "parameters": "( final int[] array, int length, T object )", "modifiers": "private static", "return": "long", "signature": "long reduceByR( final int[] array, int length, T object )", "full_signature": "private static long reduceByR( final int[] array, int length, T object )", "class_method_signature": "Int.reduceByR( final int[] array, int length, T object )", "testcase": false, "constructor": false}, {"identifier": "reduceBy", "parameters": "( final int[] array,  int length,\n                                 Object object )", "modifiers": "public static", "return": "long", "signature": "long reduceBy( final int[] array,  int length,\n                                 Object object )", "full_signature": "public static long reduceBy( final int[] array,  int length,\n                                 Object object )", "class_method_signature": "Int.reduceBy( final int[] array,  int length,\n                                 Object object )", "testcase": false, "constructor": false}, {"identifier": "reduceBy", "parameters": "( final int[] array,  int length,\n                                 Object function, String functionName )", "modifiers": "public static", "return": "long", "signature": "long reduceBy( final int[] array,  int length,\n                                 Object function, String functionName )", "full_signature": "public static long reduceBy( final int[] array,  int length,\n                                 Object function, String functionName )", "class_method_signature": "Int.reduceBy( final int[] array,  int length,\n                                 Object function, String functionName )", "testcase": false, "constructor": false}, {"identifier": "reduceBy", "parameters": "( final int[] array, int start, int length,\n                                 Object object )", "modifiers": "public static", "return": "long", "signature": "long reduceBy( final int[] array, int start, int length,\n                                 Object object )", "full_signature": "public static long reduceBy( final int[] array, int start, int length,\n                                 Object object )", "class_method_signature": "Int.reduceBy( final int[] array, int start, int length,\n                                 Object object )", "testcase": false, "constructor": false}, {"identifier": "equalsOrDie", "parameters": "(int expected, int got)", "modifiers": "public static", "return": "boolean", "signature": "boolean equalsOrDie(int expected, int got)", "full_signature": "public static boolean equalsOrDie(int expected, int got)", "class_method_signature": "Int.equalsOrDie(int expected, int got)", "testcase": false, "constructor": false}, {"identifier": "equalsOrDie", "parameters": "(int[] expected, int[] got)", "modifiers": "public static", "return": "boolean", "signature": "boolean equalsOrDie(int[] expected, int[] got)", "full_signature": "public static boolean equalsOrDie(int[] expected, int[] got)", "class_method_signature": "Int.equalsOrDie(int[] expected, int[] got)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(int expected, int got)", "modifiers": "public static", "return": "boolean", "signature": "boolean equals(int expected, int got)", "full_signature": "public static boolean equals(int expected, int got)", "class_method_signature": "Int.equals(int expected, int got)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(int[] expected, int[] got)", "modifiers": "public static", "return": "boolean", "signature": "boolean equals(int[] expected, int[] got)", "full_signature": "public static boolean equals(int[] expected, int[] got)", "class_method_signature": "Int.equals(int[] expected, int[] got)", "testcase": false, "constructor": false}, {"identifier": "sum", "parameters": "( int[] values )", "modifiers": "public static", "return": "int", "signature": "int sum( int[] values )", "full_signature": "public static int sum( int[] values )", "class_method_signature": "Int.sum( int[] values )", "testcase": false, "constructor": false}, {"identifier": "sum", "parameters": "( int[] values,  int length )", "modifiers": "public static", "return": "int", "signature": "int sum( int[] values,  int length )", "full_signature": "public static int sum( int[] values,  int length )", "class_method_signature": "Int.sum( int[] values,  int length )", "testcase": false, "constructor": false}, {"identifier": "sum", "parameters": "( int[] values, int start, int length )", "modifiers": "public static", "return": "int", "signature": "int sum( int[] values, int start, int length )", "full_signature": "public static int sum( int[] values, int start, int length )", "class_method_signature": "Int.sum( int[] values, int start, int length )", "testcase": false, "constructor": false}, {"identifier": "bigSum", "parameters": "( int[] values )", "modifiers": "public static", "return": "long", "signature": "long bigSum( int[] values )", "full_signature": "public static long bigSum( int[] values )", "class_method_signature": "Int.bigSum( int[] values )", "testcase": false, "constructor": false}, {"identifier": "bigSum", "parameters": "( int[] values,  int length )", "modifiers": "public static", "return": "long", "signature": "long bigSum( int[] values,  int length )", "full_signature": "public static long bigSum( int[] values,  int length )", "class_method_signature": "Int.bigSum( int[] values,  int length )", "testcase": false, "constructor": false}, {"identifier": "bigSum", "parameters": "( int[] values, int start, int length )", "modifiers": "public static", "return": "long", "signature": "long bigSum( int[] values, int start, int length )", "full_signature": "public static long bigSum( int[] values, int start, int length )", "class_method_signature": "Int.bigSum( int[] values, int start, int length )", "testcase": false, "constructor": false}, {"identifier": "max", "parameters": "( int[] values, final int start, final int length )", "modifiers": "public static", "return": "int", "signature": "int max( int[] values, final int start, final int length )", "full_signature": "public static int max( int[] values, final int start, final int length )", "class_method_signature": "Int.max( int[] values, final int start, final int length )", "testcase": false, "constructor": false}, {"identifier": "max", "parameters": "( int[] values )", "modifiers": "public static", "return": "int", "signature": "int max( int[] values )", "full_signature": "public static int max( int[] values )", "class_method_signature": "Int.max( int[] values )", "testcase": false, "constructor": false}, {"identifier": "max", "parameters": "( int[] values, int length )", "modifiers": "public static", "return": "int", "signature": "int max( int[] values, int length )", "full_signature": "public static int max( int[] values, int length )", "class_method_signature": "Int.max( int[] values, int length )", "testcase": false, "constructor": false}, {"identifier": "min", "parameters": "( int[] values, final int start, final int length )", "modifiers": "public static", "return": "int", "signature": "int min( int[] values, final int start, final int length )", "full_signature": "public static int min( int[] values, final int start, final int length )", "class_method_signature": "Int.min( int[] values, final int start, final int length )", "testcase": false, "constructor": false}, {"identifier": "min", "parameters": "( int[] values )", "modifiers": "public static", "return": "int", "signature": "int min( int[] values )", "full_signature": "public static int min( int[] values )", "class_method_signature": "Int.min( int[] values )", "testcase": false, "constructor": false}, {"identifier": "min", "parameters": "( int[] values, int length )", "modifiers": "public static", "return": "int", "signature": "int min( int[] values, int length )", "full_signature": "public static int min( int[] values, int length )", "class_method_signature": "Int.min( int[] values, int length )", "testcase": false, "constructor": false}, {"identifier": "mean", "parameters": "( int[] values, final int start, final int length )", "modifiers": "public static", "return": "int", "signature": "int mean( int[] values, final int start, final int length )", "full_signature": "public static int mean( int[] values, final int start, final int length )", "class_method_signature": "Int.mean( int[] values, final int start, final int length )", "testcase": false, "constructor": false}, {"identifier": "mean", "parameters": "( int[] values, final int length )", "modifiers": "public static", "return": "int", "signature": "int mean( int[] values, final int length )", "full_signature": "public static int mean( int[] values, final int length )", "class_method_signature": "Int.mean( int[] values, final int length )", "testcase": false, "constructor": false}, {"identifier": "mean", "parameters": "( int[] values )", "modifiers": "public static", "return": "int", "signature": "int mean( int[] values )", "full_signature": "public static int mean( int[] values )", "class_method_signature": "Int.mean( int[] values )", "testcase": false, "constructor": false}, {"identifier": "variance", "parameters": "(int[] values, final int start, final int length)", "modifiers": "public static", "return": "int", "signature": "int variance(int[] values, final int start, final int length)", "full_signature": "public static int variance(int[] values, final int start, final int length)", "class_method_signature": "Int.variance(int[] values, final int start, final int length)", "testcase": false, "constructor": false}, {"identifier": "meanDouble", "parameters": "( int[] values, final int start, final int length )", "modifiers": "private static", "return": "double", "signature": "double meanDouble( int[] values, final int start, final int length )", "full_signature": "private static double meanDouble( int[] values, final int start, final int length )", "class_method_signature": "Int.meanDouble( int[] values, final int start, final int length )", "testcase": false, "constructor": false}, {"identifier": "varianceDouble", "parameters": "(int[] values, final int start, final int length)", "modifiers": "public static", "return": "double", "signature": "double varianceDouble(int[] values, final int start, final int length)", "full_signature": "public static double varianceDouble(int[] values, final int start, final int length)", "class_method_signature": "Int.varianceDouble(int[] values, final int start, final int length)", "testcase": false, "constructor": false}, {"identifier": "variance", "parameters": "(int[] values,  final int length)", "modifiers": "public static", "return": "int", "signature": "int variance(int[] values,  final int length)", "full_signature": "public static int variance(int[] values,  final int length)", "class_method_signature": "Int.variance(int[] values,  final int length)", "testcase": false, "constructor": false}, {"identifier": "variance", "parameters": "(int[] values)", "modifiers": "public static", "return": "int", "signature": "int variance(int[] values)", "full_signature": "public static int variance(int[] values)", "class_method_signature": "Int.variance(int[] values)", "testcase": false, "constructor": false}, {"identifier": "standardDeviation", "parameters": "(int[] values, final int start, final int length)", "modifiers": "public static", "return": "int", "signature": "int standardDeviation(int[] values, final int start, final int length)", "full_signature": "public static int standardDeviation(int[] values, final int start, final int length)", "class_method_signature": "Int.standardDeviation(int[] values, final int start, final int length)", "testcase": false, "constructor": false}, {"identifier": "standardDeviation", "parameters": "(int[] values,  final int length)", "modifiers": "public static", "return": "int", "signature": "int standardDeviation(int[] values,  final int length)", "full_signature": "public static int standardDeviation(int[] values,  final int length)", "class_method_signature": "Int.standardDeviation(int[] values,  final int length)", "testcase": false, "constructor": false}, {"identifier": "standardDeviation", "parameters": "(int[] values)", "modifiers": "public static", "return": "int", "signature": "int standardDeviation(int[] values)", "full_signature": "public static int standardDeviation(int[] values)", "class_method_signature": "Int.standardDeviation(int[] values)", "testcase": false, "constructor": false}, {"identifier": "median", "parameters": "(int[] values, final int start, final int length)", "modifiers": "public static", "return": "int", "signature": "int median(int[] values, final int start, final int length)", "full_signature": "public static int median(int[] values, final int start, final int length)", "class_method_signature": "Int.median(int[] values, final int start, final int length)", "testcase": false, "constructor": false}, {"identifier": "median", "parameters": "(int[] values, final int length)", "modifiers": "public static", "return": "int", "signature": "int median(int[] values, final int length)", "full_signature": "public static int median(int[] values, final int length)", "class_method_signature": "Int.median(int[] values, final int length)", "testcase": false, "constructor": false}, {"identifier": "median", "parameters": "(int[] values)", "modifiers": "public static", "return": "int", "signature": "int median(int[] values)", "full_signature": "public static int median(int[] values)", "class_method_signature": "Int.median(int[] values)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(int start, int end, int[] expected, int[] got)", "modifiers": "public static", "return": "boolean", "signature": "boolean equals(int start, int end, int[] expected, int[] got)", "full_signature": "public static boolean equals(int start, int end, int[] expected, int[] got)", "class_method_signature": "Int.equals(int start, int end, int[] expected, int[] got)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "(int array[])", "modifiers": "public static", "return": "int", "signature": "int hashCode(int array[])", "full_signature": "public static int hashCode(int array[])", "class_method_signature": "Int.hashCode(int array[])", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "(int start, int end, int array[])", "modifiers": "public static", "return": "int", "signature": "int hashCode(int start, int end, int array[])", "full_signature": "public static int hashCode(int start, int end, int array[])", "class_method_signature": "Int.hashCode(int start, int end, int array[])", "testcase": false, "constructor": false}, {"identifier": "sum", "parameters": "( Collection<?> inputList, String propertyPath )", "modifiers": "public static", "return": "long", "signature": "long sum( Collection<?> inputList, String propertyPath )", "full_signature": "public static long sum( Collection<?> inputList, String propertyPath )", "class_method_signature": "Int.sum( Collection<?> inputList, String propertyPath )", "testcase": false, "constructor": false}, {"identifier": "mean", "parameters": "( Collection<?> inputList, String propertyPath )", "modifiers": "private static", "return": "double", "signature": "double mean( Collection<?> inputList, String propertyPath )", "full_signature": "private static double mean( Collection<?> inputList, String propertyPath )", "class_method_signature": "Int.mean( Collection<?> inputList, String propertyPath )", "testcase": false, "constructor": false}, {"identifier": "variance", "parameters": "(Collection<?> inputList, String propertyPath)", "modifiers": "public static", "return": "double", "signature": "double variance(Collection<?> inputList, String propertyPath)", "full_signature": "public static double variance(Collection<?> inputList, String propertyPath)", "class_method_signature": "Int.variance(Collection<?> inputList, String propertyPath)", "testcase": false, "constructor": false}, {"identifier": "standardDeviation", "parameters": "(Collection<?> inputList, String propertyPath)", "modifiers": "public static", "return": "double", "signature": "double standardDeviation(Collection<?> inputList, String propertyPath)", "full_signature": "public static double standardDeviation(Collection<?> inputList, String propertyPath)", "class_method_signature": "Int.standardDeviation(Collection<?> inputList, String propertyPath)", "testcase": false, "constructor": false}, {"identifier": "roundUpToPowerOf2", "parameters": "( int number )", "modifiers": "public static", "return": "int", "signature": "int roundUpToPowerOf2( int number )", "full_signature": "public static int roundUpToPowerOf2( int number )", "class_method_signature": "Int.roundUpToPowerOf2( int number )", "testcase": false, "constructor": false}], "file": "reflekt/src/main/java/io/advantageous/boon/primitive/Int.java"}, "focal_method": {"identifier": "reduceBy", "parameters": "( final int[] array, ReduceBy reduceBy )", "modifiers": "public static", "return": "long", "body": "public static long reduceBy( final int[] array, ReduceBy reduceBy ) {\n\n\n        long sum = 0;\n        for ( int v : array ) {\n            sum = reduceBy.reduce(sum, v);\n        }\n        return sum;\n    }", "signature": "long reduceBy( final int[] array, ReduceBy reduceBy )", "full_signature": "public static long reduceBy( final int[] array, ReduceBy reduceBy )", "class_method_signature": "Int.reduceBy( final int[] array, ReduceBy reduceBy )", "testcase": false, "constructor": false, "invocations": ["reduce"]}, "repository": {"repo_id": 33015857, "url": "https://github.com/advantageous/boon", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 18, "size": 6174, "license": "licensed"}}