{"test_class": {"identifier": "JolokiaMBeanServerUtilTest", "superclass": "", "interfaces": "implements LogHandler", "fields": [{"original_string": "MBeanServerHandler handler;", "modifier": "", "type": "MBeanServerHandler", "declarator": "handler", "var_name": "handler"}], "file": "agent/jmx/src/test/java/org/jolokia/jmx/JolokiaMBeanServerUtilTest.java"}, "test_case": {"identifier": "registerMBean", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void registerMBean() throws MalformedObjectNameException, NotCompliantMBeanException,\n                                       InstanceAlreadyExistsException, MBeanRegistrationException, InstanceNotFoundException {\n        MBeanServer jolokiaServer = JolokiaMBeanServerUtil.getJolokiaMBeanServer();\n\n        Dummy test = new Dummy();\n        ObjectName name = new ObjectName(\"jolokia.test:name=test\");\n        JolokiaMBeanServerUtil.registerMBean(test, name);\n        assertTrue(jolokiaServer.isRegistered(name));\n        JolokiaMBeanServerUtil.unregisterMBean(name);\n        Assert.assertFalse(jolokiaServer.isRegistered(name));\n    }", "signature": "void registerMBean()", "full_signature": "@Test public void registerMBean()", "class_method_signature": "JolokiaMBeanServerUtilTest.registerMBean()", "testcase": true, "constructor": false, "invocations": ["getJolokiaMBeanServer", "registerMBean", "assertTrue", "isRegistered", "unregisterMBean", "assertFalse", "isRegistered"]}, "focal_class": {"identifier": "JolokiaMBeanServerUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String JOLOKIA_MBEAN_SERVER_ATTRIBUTE = \"JolokiaMBeanServer\";", "modifier": "public static final", "type": "String", "declarator": "JOLOKIA_MBEAN_SERVER_ATTRIBUTE = \"JolokiaMBeanServer\"", "var_name": "JOLOKIA_MBEAN_SERVER_ATTRIBUTE"}], "methods": [{"identifier": "JolokiaMBeanServerUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " JolokiaMBeanServerUtil()", "full_signature": "private  JolokiaMBeanServerUtil()", "class_method_signature": "JolokiaMBeanServerUtil.JolokiaMBeanServerUtil()", "testcase": false, "constructor": true}, {"identifier": "getJolokiaMBeanServer", "parameters": "()", "modifiers": "public static", "return": "MBeanServer", "signature": "MBeanServer getJolokiaMBeanServer()", "full_signature": "public static MBeanServer getJolokiaMBeanServer()", "class_method_signature": "JolokiaMBeanServerUtil.getJolokiaMBeanServer()", "testcase": false, "constructor": false}, {"identifier": "registerMBean", "parameters": "(Object object, ObjectName name)", "modifiers": "public static", "return": "ObjectInstance", "signature": "ObjectInstance registerMBean(Object object, ObjectName name)", "full_signature": "public static ObjectInstance registerMBean(Object object, ObjectName name)", "class_method_signature": "JolokiaMBeanServerUtil.registerMBean(Object object, ObjectName name)", "testcase": false, "constructor": false}, {"identifier": "unregisterMBean", "parameters": "(ObjectName name)", "modifiers": "public static", "return": "void", "signature": "void unregisterMBean(ObjectName name)", "full_signature": "public static void unregisterMBean(ObjectName name)", "class_method_signature": "JolokiaMBeanServerUtil.unregisterMBean(ObjectName name)", "testcase": false, "constructor": false}, {"identifier": "registerJolokiaMBeanServerHolderMBean", "parameters": "(MBeanServer pServer)", "modifiers": "static", "return": "MBeanServer", "signature": "MBeanServer registerJolokiaMBeanServerHolderMBean(MBeanServer pServer)", "full_signature": "static MBeanServer registerJolokiaMBeanServerHolderMBean(MBeanServer pServer)", "class_method_signature": "JolokiaMBeanServerUtil.registerJolokiaMBeanServerHolderMBean(MBeanServer pServer)", "testcase": false, "constructor": false}, {"identifier": "createObjectName", "parameters": "(String pName)", "modifiers": "private static", "return": "ObjectName", "signature": "ObjectName createObjectName(String pName)", "full_signature": "private static ObjectName createObjectName(String pName)", "class_method_signature": "JolokiaMBeanServerUtil.createObjectName(String pName)", "testcase": false, "constructor": false}], "file": "agent/jmx/src/main/java/org/jolokia/jmx/JolokiaMBeanServerUtil.java"}, "focal_method": {"identifier": "registerMBean", "parameters": "(Object object, ObjectName name)", "modifiers": "public static", "return": "ObjectInstance", "body": "public static ObjectInstance registerMBean(Object object, ObjectName name) throws InstanceAlreadyExistsException, MBeanRegistrationException, NotCompliantMBeanException {\n        return getJolokiaMBeanServer().registerMBean(object, name);\n    }", "signature": "ObjectInstance registerMBean(Object object, ObjectName name)", "full_signature": "public static ObjectInstance registerMBean(Object object, ObjectName name)", "class_method_signature": "JolokiaMBeanServerUtil.registerMBean(Object object, ObjectName name)", "testcase": false, "constructor": false, "invocations": ["registerMBean", "getJolokiaMBeanServer"]}, "repository": {"repo_id": 777444, "url": "https://github.com/rhuss/jolokia", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 682, "size": 20451, "license": "licensed"}}