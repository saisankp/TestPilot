{"test_class": {"identifier": "AbstractConfigTest", "superclass": "", "interfaces": "", "fields": [], "file": "clients/src/test/java/org/apache/kafka/common/config/AbstractConfigTest.java"}, "test_case": {"identifier": "testOriginalsWithPrefix", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOriginalsWithPrefix() {\n        Properties props = new Properties();\n        props.put(\"foo.bar\", \"abc\");\n        props.put(\"setting\", \"def\");\n        TestConfig config = new TestConfig(props);\n        Map<String, Object> expected = new HashMap<>();\n        expected.put(\"bar\", \"abc\");\n        assertEquals(expected, config.originalsWithPrefix(\"foo.\"));\n    }", "signature": "void testOriginalsWithPrefix()", "full_signature": "@Test public void testOriginalsWithPrefix()", "class_method_signature": "AbstractConfigTest.testOriginalsWithPrefix()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "assertEquals", "originalsWithPrefix"]}, "focal_class": {"identifier": "AbstractConfig", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger log = LoggerFactory.getLogger(getClass());", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(getClass())", "var_name": "log"}, {"original_string": "private final Set<String> used;", "modifier": "private final", "type": "Set<String>", "declarator": "used", "var_name": "used"}, {"original_string": "private final Map<String, ?> originals;", "modifier": "private final", "type": "Map<String, ?>", "declarator": "originals", "var_name": "originals"}, {"original_string": "private final Map<String, Object> values;", "modifier": "private final", "type": "Map<String, Object>", "declarator": "values", "var_name": "values"}], "methods": [{"identifier": "AbstractConfig", "parameters": "(ConfigDef definition, Map<?, ?> originals, boolean doLog)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "", "signature": " AbstractConfig(ConfigDef definition, Map<?, ?> originals, boolean doLog)", "full_signature": "@SuppressWarnings(\"unchecked\") public  AbstractConfig(ConfigDef definition, Map<?, ?> originals, boolean doLog)", "class_method_signature": "AbstractConfig.AbstractConfig(ConfigDef definition, Map<?, ?> originals, boolean doLog)", "testcase": false, "constructor": true}, {"identifier": "AbstractConfig", "parameters": "(ConfigDef definition, Map<?, ?> originals)", "modifiers": "public", "return": "", "signature": " AbstractConfig(ConfigDef definition, Map<?, ?> originals)", "full_signature": "public  AbstractConfig(ConfigDef definition, Map<?, ?> originals)", "class_method_signature": "AbstractConfig.AbstractConfig(ConfigDef definition, Map<?, ?> originals)", "testcase": false, "constructor": true}, {"identifier": "AbstractConfig", "parameters": "(Map<String, Object> parsedConfig)", "modifiers": "public", "return": "", "signature": " AbstractConfig(Map<String, Object> parsedConfig)", "full_signature": "public  AbstractConfig(Map<String, Object> parsedConfig)", "class_method_signature": "AbstractConfig.AbstractConfig(Map<String, Object> parsedConfig)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "(String key)", "modifiers": "protected", "return": "Object", "signature": "Object get(String key)", "full_signature": "protected Object get(String key)", "class_method_signature": "AbstractConfig.get(String key)", "testcase": false, "constructor": false}, {"identifier": "ignore", "parameters": "(String key)", "modifiers": "public", "return": "void", "signature": "void ignore(String key)", "full_signature": "public void ignore(String key)", "class_method_signature": "AbstractConfig.ignore(String key)", "testcase": false, "constructor": false}, {"identifier": "getShort", "parameters": "(String key)", "modifiers": "public", "return": "Short", "signature": "Short getShort(String key)", "full_signature": "public Short getShort(String key)", "class_method_signature": "AbstractConfig.getShort(String key)", "testcase": false, "constructor": false}, {"identifier": "getInt", "parameters": "(String key)", "modifiers": "public", "return": "Integer", "signature": "Integer getInt(String key)", "full_signature": "public Integer getInt(String key)", "class_method_signature": "AbstractConfig.getInt(String key)", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(String key)", "modifiers": "public", "return": "Long", "signature": "Long getLong(String key)", "full_signature": "public Long getLong(String key)", "class_method_signature": "AbstractConfig.getLong(String key)", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "(String key)", "modifiers": "public", "return": "Double", "signature": "Double getDouble(String key)", "full_signature": "public Double getDouble(String key)", "class_method_signature": "AbstractConfig.getDouble(String key)", "testcase": false, "constructor": false}, {"identifier": "getList", "parameters": "(String key)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "List<String>", "signature": "List<String> getList(String key)", "full_signature": "@SuppressWarnings(\"unchecked\") public List<String> getList(String key)", "class_method_signature": "AbstractConfig.getList(String key)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(String key)", "modifiers": "public", "return": "Boolean", "signature": "Boolean getBoolean(String key)", "full_signature": "public Boolean getBoolean(String key)", "class_method_signature": "AbstractConfig.getBoolean(String key)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(String key)", "modifiers": "public", "return": "String", "signature": "String getString(String key)", "full_signature": "public String getString(String key)", "class_method_signature": "AbstractConfig.getString(String key)", "testcase": false, "constructor": false}, {"identifier": "getPassword", "parameters": "(String key)", "modifiers": "public", "return": "Password", "signature": "Password getPassword(String key)", "full_signature": "public Password getPassword(String key)", "class_method_signature": "AbstractConfig.getPassword(String key)", "testcase": false, "constructor": false}, {"identifier": "getClass", "parameters": "(String key)", "modifiers": "public", "return": "Class<?>", "signature": "Class<?> getClass(String key)", "full_signature": "public Class<?> getClass(String key)", "class_method_signature": "AbstractConfig.getClass(String key)", "testcase": false, "constructor": false}, {"identifier": "unused", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> unused()", "full_signature": "public Set<String> unused()", "class_method_signature": "AbstractConfig.unused()", "testcase": false, "constructor": false}, {"identifier": "originals", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> originals()", "full_signature": "public Map<String, Object> originals()", "class_method_signature": "AbstractConfig.originals()", "testcase": false, "constructor": false}, {"identifier": "originalsStrings", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> originalsStrings()", "full_signature": "public Map<String, String> originalsStrings()", "class_method_signature": "AbstractConfig.originalsStrings()", "testcase": false, "constructor": false}, {"identifier": "originalsWithPrefix", "parameters": "(String prefix)", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> originalsWithPrefix(String prefix)", "full_signature": "public Map<String, Object> originalsWithPrefix(String prefix)", "class_method_signature": "AbstractConfig.originalsWithPrefix(String prefix)", "testcase": false, "constructor": false}, {"identifier": "values", "parameters": "()", "modifiers": "public", "return": "Map<String, ?>", "signature": "Map<String, ?> values()", "full_signature": "public Map<String, ?> values()", "class_method_signature": "AbstractConfig.values()", "testcase": false, "constructor": false}, {"identifier": "logAll", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void logAll()", "full_signature": "private void logAll()", "class_method_signature": "AbstractConfig.logAll()", "testcase": false, "constructor": false}, {"identifier": "logUnused", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void logUnused()", "full_signature": "public void logUnused()", "class_method_signature": "AbstractConfig.logUnused()", "testcase": false, "constructor": false}, {"identifier": "getConfiguredInstance", "parameters": "(String key, Class<T> t)", "modifiers": "public", "return": "T", "signature": "T getConfiguredInstance(String key, Class<T> t)", "full_signature": "public T getConfiguredInstance(String key, Class<T> t)", "class_method_signature": "AbstractConfig.getConfiguredInstance(String key, Class<T> t)", "testcase": false, "constructor": false}, {"identifier": "getConfiguredInstances", "parameters": "(String key, Class<T> t)", "modifiers": "public", "return": "List<T>", "signature": "List<T> getConfiguredInstances(String key, Class<T> t)", "full_signature": "public List<T> getConfiguredInstances(String key, Class<T> t)", "class_method_signature": "AbstractConfig.getConfiguredInstances(String key, Class<T> t)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "AbstractConfig.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AbstractConfig.hashCode()", "testcase": false, "constructor": false}], "file": "clients/src/main/java/org/apache/kafka/common/config/AbstractConfig.java"}, "focal_method": {"identifier": "originalsWithPrefix", "parameters": "(String prefix)", "modifiers": "public", "return": "Map<String, Object>", "body": "public Map<String, Object> originalsWithPrefix(String prefix) {\n        Map<String, Object> result = new RecordingMap<>();\n        for (Map.Entry<String, ?> entry : originals.entrySet()) {\n            if (entry.getKey()\n                     .startsWith(prefix) && entry.getKey()\n                                                 .length() > prefix.length()) {\n                result.put(entry.getKey()\n                                .substring(prefix.length()), entry.getValue());\n            }\n        }\n        return result;\n    }", "signature": "Map<String, Object> originalsWithPrefix(String prefix)", "full_signature": "public Map<String, Object> originalsWithPrefix(String prefix)", "class_method_signature": "AbstractConfig.originalsWithPrefix(String prefix)", "testcase": false, "constructor": false, "invocations": ["entrySet", "startsWith", "getKey", "length", "getKey", "length", "put", "substring", "getKey", "length", "getValue"]}, "repository": {"repo_id": 135978112, "url": "https://github.com/anurnomeru/kafka-0.10.0.1-source-reading", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 2953, "license": "licensed"}}