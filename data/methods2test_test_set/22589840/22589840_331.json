{"test_class": {"identifier": "CatalogServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CatalogDao catalogDaoMock;", "modifier": "private", "type": "CatalogDao", "declarator": "catalogDaoMock", "var_name": "catalogDaoMock"}, {"original_string": "private CatalogServiceImpl catalogService;", "modifier": "private", "type": "CatalogServiceImpl", "declarator": "catalogService", "var_name": "catalogService"}, {"original_string": "private BaseSecurity securityManagerMock;", "modifier": "private", "type": "BaseSecurity", "declarator": "securityManagerMock", "var_name": "securityManagerMock"}, {"original_string": "private BookmarkService bookmarkServiceMock;", "modifier": "private", "type": "BookmarkService", "declarator": "bookmarkServiceMock", "var_name": "bookmarkServiceMock"}, {"original_string": "private UserDeletionManager userDeletionMock;", "modifier": "private", "type": "UserDeletionManager", "declarator": "userDeletionMock", "var_name": "userDeletionMock"}, {"original_string": "private DeletionModule deletionModule;", "modifier": "private", "type": "DeletionModule", "declarator": "deletionModule", "var_name": "deletionModule"}, {"original_string": "Identity myIdentity;", "modifier": "", "type": "Identity", "declarator": "myIdentity", "var_name": "myIdentity"}, {"original_string": "CatalogEntry commonTestCatalogEntryMock;", "modifier": "", "type": "CatalogEntry", "declarator": "commonTestCatalogEntryMock", "var_name": "commonTestCatalogEntryMock"}, {"original_string": "int catalogEntryKey1 = 1;", "modifier": "", "type": "int", "declarator": "catalogEntryKey1 = 1", "var_name": "catalogEntryKey1"}, {"original_string": "int catalogEntryKey2 = 2;", "modifier": "", "type": "int", "declarator": "catalogEntryKey2 = 2", "var_name": "catalogEntryKey2"}, {"original_string": "int catalogEntryKey3 = 3;", "modifier": "", "type": "int", "declarator": "catalogEntryKey3 = 3", "var_name": "catalogEntryKey3"}], "file": "olat7.8/src/test/java/org/olat/lms/catalog/CatalogServiceImplTest.java"}, "test_case": {"identifier": "testCreateOLATResouceableFor_nullInput", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateOLATResouceableFor_nullInput() {\n        OLATResourceable olatResourcable = catalogService.createOLATResouceableFor(null);\n        assertNull(\"null input must return null\", olatResourcable);\n    }", "signature": "void testCreateOLATResouceableFor_nullInput()", "full_signature": "@Test public void testCreateOLATResouceableFor_nullInput()", "class_method_signature": "CatalogServiceImplTest.testCreateOLATResouceableFor_nullInput()", "testcase": true, "constructor": false, "invocations": ["createOLATResouceableFor", "assertNull"]}, "focal_class": {"identifier": "CatalogServiceImpl", "superclass": "extends BasicManager", "interfaces": "implements UserDataDeletable, Initializable, CatalogService", "fields": [{"original_string": "private static final Logger log = LoggerHelper.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerHelper.getLogger()", "var_name": "log"}, {"original_string": "@Autowired\n    private CatalogDao catalogDao;", "modifier": "@Autowired\n    private", "type": "CatalogDao", "declarator": "catalogDao", "var_name": "catalogDao"}, {"original_string": "@Autowired\n    private BaseSecurity securityManager;", "modifier": "@Autowired\n    private", "type": "BaseSecurity", "declarator": "securityManager", "var_name": "securityManager"}, {"original_string": "@Autowired\n    private BookmarkService bookmarkService;", "modifier": "@Autowired\n    private", "type": "BookmarkService", "declarator": "bookmarkService", "var_name": "bookmarkService"}, {"original_string": "@Autowired\n    DeletionModule deletionModule;", "modifier": "@Autowired", "type": "DeletionModule", "declarator": "deletionModule", "var_name": "deletionModule"}], "methods": [{"identifier": "CatalogServiceImpl", "parameters": "()", "modifiers": "@SuppressWarnings(\"unused\") private", "return": "", "signature": " CatalogServiceImpl()", "full_signature": "@SuppressWarnings(\"unused\") private  CatalogServiceImpl()", "class_method_signature": "CatalogServiceImpl.CatalogServiceImpl()", "testcase": false, "constructor": true}, {"identifier": "CatalogServiceImpl", "parameters": "(CatalogDao catalogDao, BaseSecurity securityManager, BookmarkService bookmarkService, DeletionModule deletionModule)", "modifiers": "", "return": "", "signature": " CatalogServiceImpl(CatalogDao catalogDao, BaseSecurity securityManager, BookmarkService bookmarkService, DeletionModule deletionModule)", "full_signature": "  CatalogServiceImpl(CatalogDao catalogDao, BaseSecurity securityManager, BookmarkService bookmarkService, DeletionModule deletionModule)", "class_method_signature": "CatalogServiceImpl.CatalogServiceImpl(CatalogDao catalogDao, BaseSecurity securityManager, BookmarkService bookmarkService, DeletionModule deletionModule)", "testcase": false, "constructor": true}, {"identifier": "createCatalogEntry", "parameters": "()", "modifiers": "@Override public", "return": "CatalogEntry", "signature": "CatalogEntry createCatalogEntry()", "full_signature": "@Override public CatalogEntry createCatalogEntry()", "class_method_signature": "CatalogServiceImpl.createCatalogEntry()", "testcase": false, "constructor": false}, {"identifier": "getChildrenOf", "parameters": "(final CatalogEntry ce)", "modifiers": "@Override public", "return": "List<CatalogEntry>", "signature": "List<CatalogEntry> getChildrenOf(final CatalogEntry ce)", "full_signature": "@Override public List<CatalogEntry> getChildrenOf(final CatalogEntry ce)", "class_method_signature": "CatalogServiceImpl.getChildrenOf(final CatalogEntry ce)", "testcase": false, "constructor": false}, {"identifier": "getAllCatalogNodes", "parameters": "()", "modifiers": "@Override public", "return": "List<CatalogEntry>", "signature": "List<CatalogEntry> getAllCatalogNodes()", "full_signature": "@Override public List<CatalogEntry> getAllCatalogNodes()", "class_method_signature": "CatalogServiceImpl.getAllCatalogNodes()", "testcase": false, "constructor": false}, {"identifier": "hasChildEntries", "parameters": "(final CatalogEntry ce, final int type)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasChildEntries(final CatalogEntry ce, final int type)", "full_signature": "@Override public boolean hasChildEntries(final CatalogEntry ce, final int type)", "class_method_signature": "CatalogServiceImpl.hasChildEntries(final CatalogEntry ce, final int type)", "testcase": false, "constructor": false}, {"identifier": "filterOwnedLeafs", "parameters": "(final Identity identity, final List catalogEntries)", "modifiers": "@Override public", "return": "List", "signature": "List filterOwnedLeafs(final Identity identity, final List catalogEntries)", "full_signature": "@Override public List filterOwnedLeafs(final Identity identity, final List catalogEntries)", "class_method_signature": "CatalogServiceImpl.filterOwnedLeafs(final Identity identity, final List catalogEntries)", "testcase": false, "constructor": false}, {"identifier": "loadCatalogEntry", "parameters": "(final CatalogEntry catalogEntry)", "modifiers": "@Override public", "return": "CatalogEntry", "signature": "CatalogEntry loadCatalogEntry(final CatalogEntry catalogEntry)", "full_signature": "@Override public CatalogEntry loadCatalogEntry(final CatalogEntry catalogEntry)", "class_method_signature": "CatalogServiceImpl.loadCatalogEntry(final CatalogEntry catalogEntry)", "testcase": false, "constructor": false}, {"identifier": "loadCatalogEntry", "parameters": "(final Long catEntryId)", "modifiers": "@Override public", "return": "CatalogEntry", "signature": "CatalogEntry loadCatalogEntry(final Long catEntryId)", "full_signature": "@Override public CatalogEntry loadCatalogEntry(final Long catEntryId)", "class_method_signature": "CatalogServiceImpl.loadCatalogEntry(final Long catEntryId)", "testcase": false, "constructor": false}, {"identifier": "saveCatalogEntry", "parameters": "(final CatalogEntry ce)", "modifiers": "@Override public", "return": "void", "signature": "void saveCatalogEntry(final CatalogEntry ce)", "full_signature": "@Override public void saveCatalogEntry(final CatalogEntry ce)", "class_method_signature": "CatalogServiceImpl.saveCatalogEntry(final CatalogEntry ce)", "testcase": false, "constructor": false}, {"identifier": "updateCatalogEntry", "parameters": "(final CatalogEntry ce)", "modifiers": "@Override public", "return": "void", "signature": "void updateCatalogEntry(final CatalogEntry ce)", "full_signature": "@Override public void updateCatalogEntry(final CatalogEntry ce)", "class_method_signature": "CatalogServiceImpl.updateCatalogEntry(final CatalogEntry ce)", "testcase": false, "constructor": false}, {"identifier": "deleteCatalogEntry", "parameters": "(final CatalogEntry ce)", "modifiers": "@Override public", "return": "void", "signature": "void deleteCatalogEntry(final CatalogEntry ce)", "full_signature": "@Override public void deleteCatalogEntry(final CatalogEntry ce)", "class_method_signature": "CatalogServiceImpl.deleteCatalogEntry(final CatalogEntry ce)", "testcase": false, "constructor": false}, {"identifier": "deleteCatalogSubtree", "parameters": "(CatalogEntry ce, final List secGroupsToBeDeleted)", "modifiers": "private", "return": "void", "signature": "void deleteCatalogSubtree(CatalogEntry ce, final List secGroupsToBeDeleted)", "full_signature": "private void deleteCatalogSubtree(CatalogEntry ce, final List secGroupsToBeDeleted)", "class_method_signature": "CatalogServiceImpl.deleteCatalogSubtree(CatalogEntry ce, final List secGroupsToBeDeleted)", "testcase": false, "constructor": false}, {"identifier": "getCatalogCategoriesFor", "parameters": "(final RepositoryEntry repoEntry)", "modifiers": "@Override public", "return": "List", "signature": "List getCatalogCategoriesFor(final RepositoryEntry repoEntry)", "full_signature": "@Override public List getCatalogCategoriesFor(final RepositoryEntry repoEntry)", "class_method_signature": "CatalogServiceImpl.getCatalogCategoriesFor(final RepositoryEntry repoEntry)", "testcase": false, "constructor": false}, {"identifier": "getCatalogEntriesOwnedBy", "parameters": "(final Identity identity)", "modifiers": "@Override public", "return": "List", "signature": "List getCatalogEntriesOwnedBy(final Identity identity)", "full_signature": "@Override public List getCatalogEntriesOwnedBy(final Identity identity)", "class_method_signature": "CatalogServiceImpl.getCatalogEntriesOwnedBy(final Identity identity)", "testcase": false, "constructor": false}, {"identifier": "addCatalogEntry", "parameters": "(final CatalogEntry parent, final CatalogEntry newEntry)", "modifiers": "@Override public", "return": "void", "signature": "void addCatalogEntry(final CatalogEntry parent, final CatalogEntry newEntry)", "full_signature": "@Override public void addCatalogEntry(final CatalogEntry parent, final CatalogEntry newEntry)", "class_method_signature": "CatalogServiceImpl.addCatalogEntry(final CatalogEntry parent, final CatalogEntry newEntry)", "testcase": false, "constructor": false}, {"identifier": "getRootCatalogEntries", "parameters": "()", "modifiers": "@Override public", "return": "List", "signature": "List getRootCatalogEntries()", "full_signature": "@Override public List getRootCatalogEntries()", "class_method_signature": "CatalogServiceImpl.getRootCatalogEntries()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void init()", "full_signature": "@Override public void init()", "class_method_signature": "CatalogServiceImpl.init()", "testcase": false, "constructor": false}, {"identifier": "saveCatEntry", "parameters": "(final String name, final String desc, final int type, final SecurityGroup ownerGroup, final RepositoryEntry repoEntry,\n            final CatalogEntry parent)", "modifiers": "private", "return": "CatalogEntry", "signature": "CatalogEntry saveCatEntry(final String name, final String desc, final int type, final SecurityGroup ownerGroup, final RepositoryEntry repoEntry,\n            final CatalogEntry parent)", "full_signature": "private CatalogEntry saveCatEntry(final String name, final String desc, final int type, final SecurityGroup ownerGroup, final RepositoryEntry repoEntry,\n            final CatalogEntry parent)", "class_method_signature": "CatalogServiceImpl.saveCatEntry(final String name, final String desc, final int type, final SecurityGroup ownerGroup, final RepositoryEntry repoEntry,\n            final CatalogEntry parent)", "testcase": false, "constructor": false}, {"identifier": "moveCatalogEntry", "parameters": "(CatalogEntry toBeMovedEntry, CatalogEntry newParentEntry)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean moveCatalogEntry(CatalogEntry toBeMovedEntry, CatalogEntry newParentEntry)", "full_signature": "@Override public boolean moveCatalogEntry(CatalogEntry toBeMovedEntry, CatalogEntry newParentEntry)", "class_method_signature": "CatalogServiceImpl.moveCatalogEntry(CatalogEntry toBeMovedEntry, CatalogEntry newParentEntry)", "testcase": false, "constructor": false}, {"identifier": "resourceableDeleted", "parameters": "(final RepositoryEntry repositoryEntry)", "modifiers": "@Override public", "return": "void", "signature": "void resourceableDeleted(final RepositoryEntry repositoryEntry)", "full_signature": "@Override public void resourceableDeleted(final RepositoryEntry repositoryEntry)", "class_method_signature": "CatalogServiceImpl.resourceableDeleted(final RepositoryEntry repositoryEntry)", "testcase": false, "constructor": false}, {"identifier": "deleteUserData", "parameters": "(final Identity identity, final String newDeletedUserName)", "modifiers": "@Override public", "return": "void", "signature": "void deleteUserData(final Identity identity, final String newDeletedUserName)", "full_signature": "@Override public void deleteUserData(final Identity identity, final String newDeletedUserName)", "class_method_signature": "CatalogServiceImpl.deleteUserData(final Identity identity, final String newDeletedUserName)", "testcase": false, "constructor": false}, {"identifier": "isEntryWithinCategory", "parameters": "(final CatalogEntry toBeCheckedEntry, final List<CatalogEntry> entriesList)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEntryWithinCategory(final CatalogEntry toBeCheckedEntry, final List<CatalogEntry> entriesList)", "full_signature": "@Override public boolean isEntryWithinCategory(final CatalogEntry toBeCheckedEntry, final List<CatalogEntry> entriesList)", "class_method_signature": "CatalogServiceImpl.isEntryWithinCategory(final CatalogEntry toBeCheckedEntry, final List<CatalogEntry> entriesList)", "testcase": false, "constructor": false}, {"identifier": "createOLATResouceableFor", "parameters": "(final CatalogEntry currentCatalogEntry)", "modifiers": "@Override public", "return": "OLATResourceable", "signature": "OLATResourceable createOLATResouceableFor(final CatalogEntry currentCatalogEntry)", "full_signature": "@Override public OLATResourceable createOLATResouceableFor(final CatalogEntry currentCatalogEntry)", "class_method_signature": "CatalogServiceImpl.createOLATResouceableFor(final CatalogEntry currentCatalogEntry)", "testcase": false, "constructor": false}, {"identifier": "createCatalogEntryLeaf", "parameters": "(RepositoryEntry repositoryEntry, String parentNodeIdent)", "modifiers": "@Override public", "return": "CatalogEntry", "signature": "CatalogEntry createCatalogEntryLeaf(RepositoryEntry repositoryEntry, String parentNodeIdent)", "full_signature": "@Override public CatalogEntry createCatalogEntryLeaf(RepositoryEntry repositoryEntry, String parentNodeIdent)", "class_method_signature": "CatalogServiceImpl.createCatalogEntryLeaf(RepositoryEntry repositoryEntry, String parentNodeIdent)", "testcase": false, "constructor": false}, {"identifier": "createCatalogEntryLeafAndAddParent", "parameters": "(RepositoryEntry repositoryEntry, CatalogEntry parentCatalogEntry)", "modifiers": "@Override public", "return": "CatalogEntry", "signature": "CatalogEntry createCatalogEntryLeafAndAddParent(RepositoryEntry repositoryEntry, CatalogEntry parentCatalogEntry)", "full_signature": "@Override public CatalogEntry createCatalogEntryLeafAndAddParent(RepositoryEntry repositoryEntry, CatalogEntry parentCatalogEntry)", "class_method_signature": "CatalogServiceImpl.createCatalogEntryLeafAndAddParent(RepositoryEntry repositoryEntry, CatalogEntry parentCatalogEntry)", "testcase": false, "constructor": false}, {"identifier": "hasParentAllreadyCatalogEntryAsChild", "parameters": "(String nodeIdent, RepositoryEntry toBeAddedEntry)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasParentAllreadyCatalogEntryAsChild(String nodeIdent, RepositoryEntry toBeAddedEntry)", "full_signature": "@Override public boolean hasParentAllreadyCatalogEntryAsChild(String nodeIdent, RepositoryEntry toBeAddedEntry)", "class_method_signature": "CatalogServiceImpl.hasParentAllreadyCatalogEntryAsChild(String nodeIdent, RepositoryEntry toBeAddedEntry)", "testcase": false, "constructor": false}, {"identifier": "importStructure", "parameters": "()", "modifiers": "public", "return": "CatalogEntry", "signature": "CatalogEntry importStructure()", "full_signature": "public CatalogEntry importStructure()", "class_method_signature": "CatalogServiceImpl.importStructure()", "testcase": false, "constructor": false}, {"identifier": "isOwner", "parameters": "(CatalogEntry ce, Identity identity)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isOwner(CatalogEntry ce, Identity identity)", "full_signature": "@Override public boolean isOwner(CatalogEntry ce, Identity identity)", "class_method_signature": "CatalogServiceImpl.isOwner(CatalogEntry ce, Identity identity)", "testcase": false, "constructor": false}, {"identifier": "addOwners", "parameters": "(CatalogEntry catalogEntry, List<Identity> addIdentities)", "modifiers": "@Override public", "return": "void", "signature": "void addOwners(CatalogEntry catalogEntry, List<Identity> addIdentities)", "full_signature": "@Override public void addOwners(CatalogEntry catalogEntry, List<Identity> addIdentities)", "class_method_signature": "CatalogServiceImpl.addOwners(CatalogEntry catalogEntry, List<Identity> addIdentities)", "testcase": false, "constructor": false}, {"identifier": "removeOwners", "parameters": "(CatalogEntry catalogEntry, List<Identity> removeIdentities)", "modifiers": "@Override public", "return": "void", "signature": "void removeOwners(CatalogEntry catalogEntry, List<Identity> removeIdentities)", "full_signature": "@Override public void removeOwners(CatalogEntry catalogEntry, List<Identity> removeIdentities)", "class_method_signature": "CatalogServiceImpl.removeOwners(CatalogEntry catalogEntry, List<Identity> removeIdentities)", "testcase": false, "constructor": false}, {"identifier": "createCatalogEntryWithoutRepositoryEntry", "parameters": "(CatalogEntry parentCatalogEntry)", "modifiers": "@Override public", "return": "CatalogEntry", "signature": "CatalogEntry createCatalogEntryWithoutRepositoryEntry(CatalogEntry parentCatalogEntry)", "full_signature": "@Override public CatalogEntry createCatalogEntryWithoutRepositoryEntry(CatalogEntry parentCatalogEntry)", "class_method_signature": "CatalogServiceImpl.createCatalogEntryWithoutRepositoryEntry(CatalogEntry parentCatalogEntry)", "testcase": false, "constructor": false}, {"identifier": "setEmptyOwnerGroup", "parameters": "(CatalogEntry currentCatalogEntry)", "modifiers": "@Override public", "return": "CatalogEntry", "signature": "CatalogEntry setEmptyOwnerGroup(CatalogEntry currentCatalogEntry)", "full_signature": "@Override public CatalogEntry setEmptyOwnerGroup(CatalogEntry currentCatalogEntry)", "class_method_signature": "CatalogServiceImpl.setEmptyOwnerGroup(CatalogEntry currentCatalogEntry)", "testcase": false, "constructor": false}, {"identifier": "getCaretakerFormCatalogEntryList", "parameters": "(List<CatalogEntry> historyStack)", "modifiers": "public", "return": "List<Identity>", "signature": "List<Identity> getCaretakerFormCatalogEntryList(List<CatalogEntry> historyStack)", "full_signature": "public List<Identity> getCaretakerFormCatalogEntryList(List<CatalogEntry> historyStack)", "class_method_signature": "CatalogServiceImpl.getCaretakerFormCatalogEntryList(List<CatalogEntry> historyStack)", "testcase": false, "constructor": false}], "file": "olat7.8/src/main/java/org/olat/lms/catalog/CatalogServiceImpl.java"}, "focal_method": {"identifier": "createOLATResouceableFor", "parameters": "(final CatalogEntry currentCatalogEntry)", "modifiers": "@Override public", "return": "OLATResourceable", "body": "@Override\n    public OLATResourceable createOLATResouceableFor(final CatalogEntry currentCatalogEntry) {\n        if (currentCatalogEntry == null) {\n            return null;\n        }\n        return new OLATResourceable() {\n            @Override\n            public Long getResourceableId() {\n                return new Long(currentCatalogEntry.getKey());\n            }\n\n            @Override\n            public String getResourceableTypeName() {\n                return CATALOGENTRY;\n            }\n        };\n    }", "signature": "OLATResourceable createOLATResouceableFor(final CatalogEntry currentCatalogEntry)", "full_signature": "@Override public OLATResourceable createOLATResouceableFor(final CatalogEntry currentCatalogEntry)", "class_method_signature": "CatalogServiceImpl.createOLATResouceableFor(final CatalogEntry currentCatalogEntry)", "testcase": false, "constructor": false, "invocations": ["getKey"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}