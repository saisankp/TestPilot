{"test_class": {"identifier": "ToFileDumpProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private File file;", "modifier": "private", "type": "File", "declarator": "file", "var_name": "file"}], "file": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/diagnostic/pagelocktracker/dumpprocessors/ToFileDumpProcessorTest.java"}, "test_case": {"identifier": "toFileDump", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toFileDump() throws Exception {\n        String igHome = U.defaultWorkDirectory();\n\n        System.out.println(\"IGNITE_HOME:\" + igHome);\n\n        SharedPageLockTracker pageLockTracker = new SharedPageLockTracker();\n\n        pageLockTracker.onBeforeReadLock(1, 2, 3);\n        pageLockTracker.onReadLock(1, 2, 3, 4);\n\n        SharedPageLockTrackerDump pageLockDump = pageLockTracker.dump();\n\n        Assert.assertNotNull(pageLockDump);\n\n        String expDumpStr = ToStringDumpHelper.toStringDump(pageLockDump);\n\n        String filePath = ToFileDumpProcessor.toFileDump(pageLockDump, file = new File(igHome), \"test\");\n\n        System.out.println(\"Dump saved:\" + filePath);\n\n        boolean found = false;\n\n        for (File file : file.listFiles()) {\n            if (file.getAbsolutePath().equals(filePath)) {\n                found = true;\n\n                break;\n            }\n        }\n\n        Assert.assertTrue(found);\n\n        String actDumpStr;\n\n        try (FileChannel ch = FileChannel.open(get(filePath), StandardOpenOption.READ)) {\n            long size = ch.size();\n\n            ByteBuffer buf = ByteBuffer.allocate((int)size);\n\n            while (buf.position() != buf.capacity())\n                ch.read(buf);\n\n            actDumpStr = new String(buf.array());\n        }\n\n        Assert.assertEquals(expDumpStr, actDumpStr);\n    }", "signature": "void toFileDump()", "full_signature": "@Test public void toFileDump()", "class_method_signature": "ToFileDumpProcessorTest.toFileDump()", "testcase": true, "constructor": false, "invocations": ["defaultWorkDirectory", "println", "onBeforeReadLock", "onReadLock", "dump", "assertNotNull", "toStringDump", "toFileDump", "println", "listFiles", "equals", "getAbsolutePath", "assertTrue", "open", "get", "size", "allocate", "position", "capacity", "read", "array", "assertEquals"]}, "focal_class": {"identifier": "ToFileDumpProcessor", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final SimpleDateFormat DATE_FMT = new SimpleDateFormat(\"yyyy_MM_dd_HH_mm_ss_SSS\");", "modifier": "public static final", "type": "SimpleDateFormat", "declarator": "DATE_FMT = new SimpleDateFormat(\"yyyy_MM_dd_HH_mm_ss_SSS\")", "var_name": "DATE_FMT"}, {"original_string": "public static final String PREFIX_NAME = \"page_lock_dump_\";", "modifier": "public static final", "type": "String", "declarator": "PREFIX_NAME = \"page_lock_dump_\"", "var_name": "PREFIX_NAME"}], "methods": [{"identifier": "toFileDump", "parameters": "(SharedPageLockTrackerDump pageLockDump, File dir, String name)", "modifiers": "public static", "return": "String", "signature": "String toFileDump(SharedPageLockTrackerDump pageLockDump, File dir, String name)", "full_signature": "public static String toFileDump(SharedPageLockTrackerDump pageLockDump, File dir, String name)", "class_method_signature": "ToFileDumpProcessor.toFileDump(SharedPageLockTrackerDump pageLockDump, File dir, String name)", "testcase": false, "constructor": false}, {"identifier": "saveToFile", "parameters": "(String dump, File file)", "modifiers": "private static", "return": "String", "signature": "String saveToFile(String dump, File file)", "full_signature": "private static String saveToFile(String dump, File file)", "class_method_signature": "ToFileDumpProcessor.saveToFile(String dump, File file)", "testcase": false, "constructor": false}], "file": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/diagnostic/pagelocktracker/dumpprocessors/ToFileDumpProcessor.java"}, "focal_method": {"identifier": "toFileDump", "parameters": "(SharedPageLockTrackerDump pageLockDump, File dir, String name)", "modifiers": "public static", "return": "String", "body": "public static String toFileDump(SharedPageLockTrackerDump pageLockDump, File dir, String name) throws IgniteCheckedException {\n        try {\n            if (!dir.exists())\n                dir.mkdirs();\n\n            File file = new File(dir, PREFIX_NAME + name + \"_\" + DATE_FMT.format(new Date(pageLockDump.time)));\n\n            return saveToFile(ToStringDumpHelper.toStringDump(pageLockDump), file);\n        }\n        catch (IOException e) {\n            throw new IgniteCheckedException(e);\n        }\n    }", "signature": "String toFileDump(SharedPageLockTrackerDump pageLockDump, File dir, String name)", "full_signature": "public static String toFileDump(SharedPageLockTrackerDump pageLockDump, File dir, String name)", "class_method_signature": "ToFileDumpProcessor.toFileDump(SharedPageLockTrackerDump pageLockDump, File dir, String name)", "testcase": false, "constructor": false, "invocations": ["exists", "mkdirs", "format", "saveToFile", "toStringDump"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}