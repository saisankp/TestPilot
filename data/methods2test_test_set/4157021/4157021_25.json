{"test_class": {"identifier": "ResourceServiceImplTest", "superclass": "extends ServiceTestBase", "interfaces": "", "fields": [], "file": "src/core/services-impl/src/test/java/it/geosolutions/geostore/services/ResourceServiceImplTest.java"}, "test_case": {"identifier": "testUpdateSecurityRules", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUpdateSecurityRules() throws Exception {\n    \tlong resourceId = createResource(\"name1\", \"description1\", \"MAP\");\n    \t\n    \tList<SecurityRule> writtenRules = resourceService.getSecurityRules(resourceId);\n    \tassertEquals(0, writtenRules.size());\n    \t\n    \tList<SecurityRule> rules = new ArrayList<SecurityRule>();\n    \t\n\t\tlong userId = createUser(\"user1\", Role.USER, \"password\");\n\t\tUser user = new User();\n\t\tuser.setId(userId);\n\t\t\n\t\tlong groupId = createGroup(\"group1\");\n\t\tUserGroup group = new UserGroup();\n\t\tgroup.setId(groupId);\n\t\t\n\t\tlong otherGroupId = createGroup(\"group2\");\n\t\tUserGroup othergroup = new UserGroup();\n\t\tothergroup.setId(otherGroupId);\n\n    \tSecurityRule rule = new SecurityRule();\n    \trule.setUser(user);\n    \trule.setCanRead(true);\n    \trules.add(rule);\n    \t\n    \trule = new SecurityRule();\n    \trule.setCanRead(true);\n    \trule.setCanWrite(true);\n    \trule.setGroup(group);\n    \trules.add(rule);\n    \t\n    \tresourceService.updateSecurityRules(resourceId, rules);\n    \t\n    \twrittenRules = resourceService.getSecurityRules(resourceId);\n    \tassertEquals(2, writtenRules.size());\n    \t\n    \trules.clear();\n    \t\n    \trule = new SecurityRule();\n    \trule.setUser(user);\n    \trule.setCanRead(true);\n    \trules.add(rule);\n    \t\n    \trule = new SecurityRule();\n    \trule.setCanRead(true);\n    \trule.setCanWrite(true);\n    \trule.setGroup(group);\n    \trules.add(rule);\n    \trule = new SecurityRule();\n    \trule.setCanRead(true);\n    \trule.setCanWrite(true);\n    \trule.setGroup(othergroup);\n    \trules.add(rule);\n    \t\n    \tresourceService.updateSecurityRules(resourceId, rules);\n    \t\n    \twrittenRules = resourceService.getSecurityRules(resourceId);\n    \tassertEquals(3, writtenRules.size());\n    }", "signature": "void testUpdateSecurityRules()", "full_signature": "@Test public void testUpdateSecurityRules()", "class_method_signature": "ResourceServiceImplTest.testUpdateSecurityRules()", "testcase": true, "constructor": false, "invocations": ["createResource", "getSecurityRules", "assertEquals", "size", "createUser", "setId", "createGroup", "setId", "createGroup", "setId", "setUser", "setCanRead", "add", "setCanRead", "setCanWrite", "setGroup", "add", "updateSecurityRules", "getSecurityRules", "assertEquals", "size", "clear", "setUser", "setCanRead", "add", "setCanRead", "setCanWrite", "setGroup", "add", "setCanRead", "setCanWrite", "setGroup", "add", "updateSecurityRules", "getSecurityRules", "assertEquals", "size"]}, "focal_class": {"identifier": "ResourceServiceImpl", "superclass": "", "interfaces": "implements ResourceService", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(ResourceServiceImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(ResourceServiceImpl.class)", "var_name": "LOGGER"}, {"original_string": "private UserGroupDAO userGroupDAO;", "modifier": "private", "type": "UserGroupDAO", "declarator": "userGroupDAO", "var_name": "userGroupDAO"}, {"original_string": "private ResourceDAO resourceDAO;", "modifier": "private", "type": "ResourceDAO", "declarator": "resourceDAO", "var_name": "resourceDAO"}, {"original_string": "private AttributeDAO attributeDAO;", "modifier": "private", "type": "AttributeDAO", "declarator": "attributeDAO", "var_name": "attributeDAO"}, {"original_string": "private StoredDataDAO storedDataDAO;", "modifier": "private", "type": "StoredDataDAO", "declarator": "storedDataDAO", "var_name": "storedDataDAO"}, {"original_string": "private CategoryDAO categoryDAO;", "modifier": "private", "type": "CategoryDAO", "declarator": "categoryDAO", "var_name": "categoryDAO"}, {"original_string": "private SecurityDAO securityDAO;", "modifier": "private", "type": "SecurityDAO", "declarator": "securityDAO", "var_name": "securityDAO"}], "methods": [{"identifier": "setSecurityDAO", "parameters": "(SecurityDAO securityDAO)", "modifiers": "public", "return": "void", "signature": "void setSecurityDAO(SecurityDAO securityDAO)", "full_signature": "public void setSecurityDAO(SecurityDAO securityDAO)", "class_method_signature": "ResourceServiceImpl.setSecurityDAO(SecurityDAO securityDAO)", "testcase": false, "constructor": false}, {"identifier": "setStoredDataDAO", "parameters": "(StoredDataDAO storedDataDAO)", "modifiers": "public", "return": "void", "signature": "void setStoredDataDAO(StoredDataDAO storedDataDAO)", "full_signature": "public void setStoredDataDAO(StoredDataDAO storedDataDAO)", "class_method_signature": "ResourceServiceImpl.setStoredDataDAO(StoredDataDAO storedDataDAO)", "testcase": false, "constructor": false}, {"identifier": "setResourceDAO", "parameters": "(ResourceDAO resourceDAO)", "modifiers": "public", "return": "void", "signature": "void setResourceDAO(ResourceDAO resourceDAO)", "full_signature": "public void setResourceDAO(ResourceDAO resourceDAO)", "class_method_signature": "ResourceServiceImpl.setResourceDAO(ResourceDAO resourceDAO)", "testcase": false, "constructor": false}, {"identifier": "setAttributeDAO", "parameters": "(AttributeDAO attributeDAO)", "modifiers": "public", "return": "void", "signature": "void setAttributeDAO(AttributeDAO attributeDAO)", "full_signature": "public void setAttributeDAO(AttributeDAO attributeDAO)", "class_method_signature": "ResourceServiceImpl.setAttributeDAO(AttributeDAO attributeDAO)", "testcase": false, "constructor": false}, {"identifier": "setCategoryDAO", "parameters": "(CategoryDAO categoryDAO)", "modifiers": "public", "return": "void", "signature": "void setCategoryDAO(CategoryDAO categoryDAO)", "full_signature": "public void setCategoryDAO(CategoryDAO categoryDAO)", "class_method_signature": "ResourceServiceImpl.setCategoryDAO(CategoryDAO categoryDAO)", "testcase": false, "constructor": false}, {"identifier": "setUserGroupDAO", "parameters": "(UserGroupDAO userGroupDAO)", "modifiers": "public", "return": "void", "signature": "void setUserGroupDAO(UserGroupDAO userGroupDAO)", "full_signature": "public void setUserGroupDAO(UserGroupDAO userGroupDAO)", "class_method_signature": "ResourceServiceImpl.setUserGroupDAO(UserGroupDAO userGroupDAO)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(Resource resource)", "modifiers": "@Override public", "return": "long", "signature": "long insert(Resource resource)", "full_signature": "@Override public long insert(Resource resource)", "class_method_signature": "ResourceServiceImpl.insert(Resource resource)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Resource resource)", "modifiers": "@Override public", "return": "long", "signature": "long update(Resource resource)", "full_signature": "@Override public long update(Resource resource)", "class_method_signature": "ResourceServiceImpl.update(Resource resource)", "testcase": false, "constructor": false}, {"identifier": "updateAttributes", "parameters": "(long id, List<Attribute> attributes)", "modifiers": "@Override public", "return": "void", "signature": "void updateAttributes(long id, List<Attribute> attributes)", "full_signature": "@Override public void updateAttributes(long id, List<Attribute> attributes)", "class_method_signature": "ResourceServiceImpl.updateAttributes(long id, List<Attribute> attributes)", "testcase": false, "constructor": false}, {"identifier": "validateResourceName", "parameters": "(Resource resource, boolean isUpdate)", "modifiers": "private", "return": "void", "signature": "void validateResourceName(Resource resource, boolean isUpdate)", "full_signature": "private void validateResourceName(Resource resource, boolean isUpdate)", "class_method_signature": "ResourceServiceImpl.validateResourceName(Resource resource, boolean isUpdate)", "testcase": false, "constructor": false}, {"identifier": "suggestValidResourceName", "parameters": "(String baseResourceName)", "modifiers": "private", "return": "String", "signature": "String suggestValidResourceName(String baseResourceName)", "full_signature": "private String suggestValidResourceName(String baseResourceName)", "class_method_signature": "ResourceServiceImpl.suggestValidResourceName(String baseResourceName)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(long id)", "modifiers": "@Override public", "return": "Resource", "signature": "Resource get(long id)", "full_signature": "@Override public Resource get(long id)", "class_method_signature": "ResourceServiceImpl.get(long id)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(long id)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean delete(long id)", "full_signature": "@Override public boolean delete(long id)", "class_method_signature": "ResourceServiceImpl.delete(long id)", "testcase": false, "constructor": false}, {"identifier": "deleteResources", "parameters": "(SearchFilter filter)", "modifiers": "@Override public", "return": "void", "signature": "void deleteResources(SearchFilter filter)", "full_signature": "@Override public void deleteResources(SearchFilter filter)", "class_method_signature": "ResourceServiceImpl.deleteResources(SearchFilter filter)", "testcase": false, "constructor": false}, {"identifier": "getList", "parameters": "(String nameLike, Integer page, Integer entries, User authUser)", "modifiers": "@Override public", "return": "List<ShortResource>", "signature": "List<ShortResource> getList(String nameLike, Integer page, Integer entries, User authUser)", "full_signature": "@Override public List<ShortResource> getList(String nameLike, Integer page, Integer entries, User authUser)", "class_method_signature": "ResourceServiceImpl.getList(String nameLike, Integer page, Integer entries, User authUser)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "(Integer page, Integer entries, User authUser)", "modifiers": "@Override public", "return": "List<ShortResource>", "signature": "List<ShortResource> getAll(Integer page, Integer entries, User authUser)", "full_signature": "@Override public List<ShortResource> getAll(Integer page, Integer entries, User authUser)", "class_method_signature": "ResourceServiceImpl.getAll(Integer page, Integer entries, User authUser)", "testcase": false, "constructor": false}, {"identifier": "getCount", "parameters": "(String nameLike)", "modifiers": "@Override public", "return": "long", "signature": "long getCount(String nameLike)", "full_signature": "@Override public long getCount(String nameLike)", "class_method_signature": "ResourceServiceImpl.getCount(String nameLike)", "testcase": false, "constructor": false}, {"identifier": "getCountByFilter", "parameters": "(SearchFilter filter)", "modifiers": "@Override public", "return": "long", "signature": "long getCountByFilter(SearchFilter filter)", "full_signature": "@Override public long getCountByFilter(SearchFilter filter)", "class_method_signature": "ResourceServiceImpl.getCountByFilter(SearchFilter filter)", "testcase": false, "constructor": false}, {"identifier": "convertToShortList", "parameters": "(List<Resource> list, User authUser)", "modifiers": "private", "return": "List<ShortResource>", "signature": "List<ShortResource> convertToShortList(List<Resource> list, User authUser)", "full_signature": "private List<ShortResource> convertToShortList(List<Resource> list, User authUser)", "class_method_signature": "ResourceServiceImpl.convertToShortList(List<Resource> list, User authUser)", "testcase": false, "constructor": false}, {"identifier": "extratcGroupNames", "parameters": "(Set<UserGroup> groups)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> extratcGroupNames(Set<UserGroup> groups)", "full_signature": "public static List<String> extratcGroupNames(Set<UserGroup> groups)", "class_method_signature": "ResourceServiceImpl.extratcGroupNames(Set<UserGroup> groups)", "testcase": false, "constructor": false}, {"identifier": "getAttributes", "parameters": "(long id)", "modifiers": "@Override public", "return": "List<ShortAttribute>", "signature": "List<ShortAttribute> getAttributes(long id)", "full_signature": "@Override public List<ShortAttribute> getAttributes(long id)", "class_method_signature": "ResourceServiceImpl.getAttributes(long id)", "testcase": false, "constructor": false}, {"identifier": "convertToShortAttributeList", "parameters": "(List<Attribute> list)", "modifiers": "private", "return": "List<ShortAttribute>", "signature": "List<ShortAttribute> convertToShortAttributeList(List<Attribute> list)", "full_signature": "private List<ShortAttribute> convertToShortAttributeList(List<Attribute> list)", "class_method_signature": "ResourceServiceImpl.convertToShortAttributeList(List<Attribute> list)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(long id, String name)", "modifiers": "@Override public", "return": "ShortAttribute", "signature": "ShortAttribute getAttribute(long id, String name)", "full_signature": "@Override public ShortAttribute getAttribute(long id, String name)", "class_method_signature": "ResourceServiceImpl.getAttribute(long id, String name)", "testcase": false, "constructor": false}, {"identifier": "updateAttribute", "parameters": "(long id, String name, String value)", "modifiers": "@Override public", "return": "long", "signature": "long updateAttribute(long id, String name, String value)", "full_signature": "@Override public long updateAttribute(long id, String name, String value)", "class_method_signature": "ResourceServiceImpl.updateAttribute(long id, String name, String value)", "testcase": false, "constructor": false}, {"identifier": "insertAttribute", "parameters": "(long id, String name, String value, DataType type)", "modifiers": "@Override public", "return": "long", "signature": "long insertAttribute(long id, String name, String value, DataType type)", "full_signature": "@Override public long insertAttribute(long id, String name, String value, DataType type)", "class_method_signature": "ResourceServiceImpl.insertAttribute(long id, String name, String value, DataType type)", "testcase": false, "constructor": false}, {"identifier": "getResources", "parameters": "(SearchFilter filter, User authUser)", "modifiers": "@Override public", "return": "List<ShortResource>", "signature": "List<ShortResource> getResources(SearchFilter filter, User authUser)", "full_signature": "@Override public List<ShortResource> getResources(SearchFilter filter, User authUser)", "class_method_signature": "ResourceServiceImpl.getResources(SearchFilter filter, User authUser)", "testcase": false, "constructor": false}, {"identifier": "getResources", "parameters": "(SearchFilter filter, Integer page, Integer entries,\n            boolean includeAttributes, boolean includeData, User authUser)", "modifiers": "public", "return": "List<Resource>", "signature": "List<Resource> getResources(SearchFilter filter, Integer page, Integer entries,\n            boolean includeAttributes, boolean includeData, User authUser)", "full_signature": "public List<Resource> getResources(SearchFilter filter, Integer page, Integer entries,\n            boolean includeAttributes, boolean includeData, User authUser)", "class_method_signature": "ResourceServiceImpl.getResources(SearchFilter filter, Integer page, Integer entries,\n            boolean includeAttributes, boolean includeData, User authUser)", "testcase": false, "constructor": false}, {"identifier": "configResourceList", "parameters": "(List<Resource> list, boolean includeAttributes,\n            boolean includeData, User authUser)", "modifiers": "private", "return": "List<Resource>", "signature": "List<Resource> configResourceList(List<Resource> list, boolean includeAttributes,\n            boolean includeData, User authUser)", "full_signature": "private List<Resource> configResourceList(List<Resource> list, boolean includeAttributes,\n            boolean includeData, User authUser)", "class_method_signature": "ResourceServiceImpl.configResourceList(List<Resource> list, boolean includeAttributes,\n            boolean includeData, User authUser)", "testcase": false, "constructor": false}, {"identifier": "getResources", "parameters": "(SearchFilter filter, Integer page, Integer entries,\n            User authUser)", "modifiers": "@Override public", "return": "List<ShortResource>", "signature": "List<ShortResource> getResources(SearchFilter filter, Integer page, Integer entries,\n            User authUser)", "full_signature": "@Override public List<ShortResource> getResources(SearchFilter filter, Integer page, Integer entries,\n            User authUser)", "class_method_signature": "ResourceServiceImpl.getResources(SearchFilter filter, Integer page, Integer entries,\n            User authUser)", "testcase": false, "constructor": false}, {"identifier": "getResourcesFull", "parameters": "(SearchFilter filter, User authUser)", "modifiers": "@Override public", "return": "List<Resource>", "signature": "List<Resource> getResourcesFull(SearchFilter filter, User authUser)", "full_signature": "@Override public List<Resource> getResourcesFull(SearchFilter filter, User authUser)", "class_method_signature": "ResourceServiceImpl.getResourcesFull(SearchFilter filter, User authUser)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(Search searchCriteria)", "modifiers": "private", "return": "List<Resource>", "signature": "List<Resource> search(Search searchCriteria)", "full_signature": "private List<Resource> search(Search searchCriteria)", "class_method_signature": "ResourceServiceImpl.search(Search searchCriteria)", "testcase": false, "constructor": false}, {"identifier": "getUserSecurityRule", "parameters": "(String userName, long resourceId)", "modifiers": "@Override public", "return": "List<SecurityRule>", "signature": "List<SecurityRule> getUserSecurityRule(String userName, long resourceId)", "full_signature": "@Override public List<SecurityRule> getUserSecurityRule(String userName, long resourceId)", "class_method_signature": "ResourceServiceImpl.getUserSecurityRule(String userName, long resourceId)", "testcase": false, "constructor": false}, {"identifier": "getGroupSecurityRule", "parameters": "(List<String> groupNames, long resourceId)", "modifiers": "@Override public", "return": "List<SecurityRule>", "signature": "List<SecurityRule> getGroupSecurityRule(List<String> groupNames, long resourceId)", "full_signature": "@Override public List<SecurityRule> getGroupSecurityRule(List<String> groupNames, long resourceId)", "class_method_signature": "ResourceServiceImpl.getGroupSecurityRule(List<String> groupNames, long resourceId)", "testcase": false, "constructor": false}, {"identifier": "getSecurityRules", "parameters": "(long id)", "modifiers": "@Override public", "return": "List<SecurityRule>", "signature": "List<SecurityRule> getSecurityRules(long id)", "full_signature": "@Override public List<SecurityRule> getSecurityRules(long id)", "class_method_signature": "ResourceServiceImpl.getSecurityRules(long id)", "testcase": false, "constructor": false}, {"identifier": "updateSecurityRules", "parameters": "(long id, List<SecurityRule> rules)", "modifiers": "@Override public", "return": "void", "signature": "void updateSecurityRules(long id, List<SecurityRule> rules)", "full_signature": "@Override public void updateSecurityRules(long id, List<SecurityRule> rules)", "class_method_signature": "ResourceServiceImpl.updateSecurityRules(long id, List<SecurityRule> rules)", "testcase": false, "constructor": false}, {"identifier": "getCountByFilterAndUser", "parameters": "(SearchFilter filter, User user)", "modifiers": "public", "return": "long", "signature": "long getCountByFilterAndUser(SearchFilter filter, User user)", "full_signature": "public long getCountByFilterAndUser(SearchFilter filter, User user)", "class_method_signature": "ResourceServiceImpl.getCountByFilterAndUser(SearchFilter filter, User user)", "testcase": false, "constructor": false}, {"identifier": "getCountByFilterAndUser", "parameters": "(String nameLike, User user)", "modifiers": "public", "return": "long", "signature": "long getCountByFilterAndUser(String nameLike, User user)", "full_signature": "public long getCountByFilterAndUser(String nameLike, User user)", "class_method_signature": "ResourceServiceImpl.getCountByFilterAndUser(String nameLike, User user)", "testcase": false, "constructor": false}], "file": "src/core/services-impl/src/main/java/it/geosolutions/geostore/services/ResourceServiceImpl.java"}, "focal_method": {"identifier": "updateSecurityRules", "parameters": "(long id, List<SecurityRule> rules)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void updateSecurityRules(long id, List<SecurityRule> rules)\n            throws BadRequestServiceEx, InternalErrorServiceEx, NotFoundServiceEx\n    {\n        Resource resource = resourceDAO.find(id);\n\n        if (resource != null) {\n            Search searchCriteria = new Search();\n            searchCriteria.addFilterEqual(\"resource.id\", id);\n\n            List<SecurityRule> resourceRules = this.securityDAO.search(searchCriteria);\n\n            // remove previous rules\n            for (SecurityRule rule : resourceRules) {\n                securityDAO.remove(rule);\n            }\n            // insert new rules\n            for (SecurityRule rule : rules) {\n                rule.setResource(resource);\n                if (rule.getGroup() != null) {\n                    UserGroup ug = userGroupDAO.find(rule.getGroup().getId());\n                    if (ug != null) {\n                        rule.setGroup(ug);\n                    }\n                }\n                securityDAO.persist(rule);\n            }\n        } else {\n            throw new NotFoundServiceEx(\"Resource not found \" + id);\n        }\n    }", "signature": "void updateSecurityRules(long id, List<SecurityRule> rules)", "full_signature": "@Override public void updateSecurityRules(long id, List<SecurityRule> rules)", "class_method_signature": "ResourceServiceImpl.updateSecurityRules(long id, List<SecurityRule> rules)", "testcase": false, "constructor": false, "invocations": ["find", "addFilterEqual", "search", "remove", "setResource", "getGroup", "find", "getId", "getGroup", "setGroup", "persist"]}, "repository": {"repo_id": 4157021, "url": "https://github.com/geosolutions-it/geostore", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 19, "size": 1798, "license": "licensed"}}