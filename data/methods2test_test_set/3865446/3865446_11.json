{"test_class": {"identifier": "MathUtilsTest", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "jcool/benchmark/src/test/java/cz/cvut/felk/cig/jcool/benchmark/util/MathUtilsTest.java"}, "test_case": {"identifier": "testSumSizes2", "parameters": "()", "modifiers": "@Test // tests sumSizes(int[], int) public", "return": "void", "body": "@Test\n    // tests sumSizes(int[], int)\n    public void testSumSizes2() throws Exception {\n        int[] sizes = new int[]{2, 5, 7, 9, 3};\n        int sum = MathUtils.sumSizes(sizes, 2);\n        Assert.assertTrue(sum == (2 + 5));\n    }", "signature": "void testSumSizes2()", "full_signature": "@Test // tests sumSizes(int[], int) public void testSumSizes2()", "class_method_signature": "MathUtilsTest.testSumSizes2()", "testcase": true, "constructor": false, "invocations": ["sumSizes", "assertTrue"]}, "focal_class": {"identifier": "MathUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "sumSizes", "parameters": "(int[] sizes)", "modifiers": "public static", "return": "int", "signature": "int sumSizes(int[] sizes)", "full_signature": "public static int sumSizes(int[] sizes)", "class_method_signature": "MathUtils.sumSizes(int[] sizes)", "testcase": false, "constructor": false}, {"identifier": "sumSizes", "parameters": "(int[] sizes, int maxIndexExclusive)", "modifiers": "public static", "return": "int", "signature": "int sumSizes(int[] sizes, int maxIndexExclusive)", "full_signature": "public static int sumSizes(int[] sizes, int maxIndexExclusive)", "class_method_signature": "MathUtils.sumSizes(int[] sizes, int maxIndexExclusive)", "testcase": false, "constructor": false}], "file": "jcool/benchmark/src/main/java/cz/cvut/felk/cig/jcool/benchmark/util/MathUtils.java"}, "focal_method": {"identifier": "sumSizes", "parameters": "(int[] sizes)", "modifiers": "public static", "return": "int", "body": "public static int sumSizes(int[] sizes){\n        if (sizes == null){\n            throw new OptimizationException(\"array of sizes cannot be null\");\n        }\n        return sumSizes(sizes, sizes.length);\n    }", "signature": "int sumSizes(int[] sizes)", "full_signature": "public static int sumSizes(int[] sizes)", "class_method_signature": "MathUtils.sumSizes(int[] sizes)", "testcase": false, "constructor": false, "invocations": ["sumSizes"]}, "repository": {"repo_id": 3865446, "url": "https://github.com/dhonza/JCOOL", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 415, "license": "licensed"}}