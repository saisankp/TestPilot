{"test_class": {"identifier": "CodeServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private CodeService codeService;", "modifier": "@Mock\n    private", "type": "CodeService", "declarator": "codeService", "var_name": "codeService"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/service/CodeServiceTest.java"}, "test_case": {"identifier": "isNotExistByNameTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isNotExistByNameTest() throws SQLException {\n        Assert.assertTrue(codeService.isTaskCountByProjectId(1L));\n    }", "signature": "void isNotExistByNameTest()", "full_signature": "@Test public void isNotExistByNameTest()", "class_method_signature": "CodeServiceTest.isNotExistByNameTest()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isTaskCountByProjectId"]}, "focal_class": {"identifier": "CodeService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private Consts consts;", "modifier": "@Autowired\n    private", "type": "Consts", "declarator": "consts", "var_name": "consts"}, {"original_string": "@Autowired\n    private DeleteCheckDao deleteCheckDao;", "modifier": "@Autowired\n    private", "type": "DeleteCheckDao", "declarator": "deleteCheckDao", "var_name": "deleteCheckDao"}], "methods": [{"identifier": "isTaskCountByProjectId", "parameters": "(Long projectId)", "modifiers": "public", "return": "boolean", "signature": "boolean isTaskCountByProjectId(Long projectId)", "full_signature": "public boolean isTaskCountByProjectId(Long projectId)", "class_method_signature": "CodeService.isTaskCountByProjectId(Long projectId)", "testcase": false, "constructor": false}, {"identifier": "getFileContent", "parameters": "(String projectId, String name)", "modifiers": "public", "return": "ServiceResult<String>", "signature": "ServiceResult<String> getFileContent(String projectId, String name)", "full_signature": "public ServiceResult<String> getFileContent(String projectId, String name)", "class_method_signature": "CodeService.getFileContent(String projectId, String name)", "testcase": false, "constructor": false}, {"identifier": "generateProject", "parameters": "(GenerateCodeModel generateCodeRequest, HttpServletRequest request)", "modifiers": "public", "return": "ServiceResult", "signature": "ServiceResult generateProject(GenerateCodeModel generateCodeRequest, HttpServletRequest request)", "full_signature": "public ServiceResult generateProject(GenerateCodeModel generateCodeRequest, HttpServletRequest request)", "class_method_signature": "CodeService.generateProject(GenerateCodeModel generateCodeRequest, HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "generateLanguageProject", "parameters": "(JavaDasGenerator generator, JavaCodeGenContext context)", "modifiers": "private", "return": "void", "signature": "void generateLanguageProject(JavaDasGenerator generator, JavaCodeGenContext context)", "full_signature": "private void generateLanguageProject(JavaDasGenerator generator, JavaCodeGenContext context)", "class_method_signature": "CodeService.generateLanguageProject(JavaDasGenerator generator, JavaCodeGenContext context)", "testcase": false, "constructor": false}, {"identifier": "generateTable", "parameters": "(GenerateCodeModel generateCodeRequest, HttpServletRequest request, Long db_set_id)", "modifiers": "public", "return": "ServiceResult", "signature": "ServiceResult generateTable(GenerateCodeModel generateCodeRequest, HttpServletRequest request, Long db_set_id)", "full_signature": "public ServiceResult generateTable(GenerateCodeModel generateCodeRequest, HttpServletRequest request, Long db_set_id)", "class_method_signature": "CodeService.generateTable(GenerateCodeModel generateCodeRequest, HttpServletRequest request, Long db_set_id)", "testcase": false, "constructor": false}, {"identifier": "generateLanguageTable", "parameters": "(JavaDasGenerator generator, JavaCodeGenContext context, Long db_set_id)", "modifiers": "private", "return": "void", "signature": "void generateLanguageTable(JavaDasGenerator generator, JavaCodeGenContext context, Long db_set_id)", "full_signature": "private void generateLanguageTable(JavaDasGenerator generator, JavaCodeGenContext context, Long db_set_id)", "class_method_signature": "CodeService.generateLanguageTable(JavaDasGenerator generator, JavaCodeGenContext context, Long db_set_id)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/service/CodeService.java"}, "focal_method": {"identifier": "isTaskCountByProjectId", "parameters": "(Long projectId)", "modifiers": "public", "return": "boolean", "body": "public boolean isTaskCountByProjectId(Long projectId) throws SQLException {\n        return deleteCheckDao.isProjectIdInTaskTable(projectId) || deleteCheckDao.isProjectIdInTaskSQL(projectId);\n    }", "signature": "boolean isTaskCountByProjectId(Long projectId)", "full_signature": "public boolean isTaskCountByProjectId(Long projectId)", "class_method_signature": "CodeService.isTaskCountByProjectId(Long projectId)", "testcase": false, "constructor": false, "invocations": ["isProjectIdInTaskTable", "isProjectIdInTaskSQL"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}