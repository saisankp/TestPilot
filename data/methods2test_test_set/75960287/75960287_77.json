{"test_class": {"identifier": "UUIDUtilityTest", "superclass": "", "interfaces": "", "fields": [], "file": "Plan/common/src/test/java/com/djrapitops/plan/identification/UUIDUtilityTest.java"}, "test_case": {"identifier": "stringUUIDIsParsed", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void stringUUIDIsParsed() {\n        String test = \"f3cc3e96-1bc9-35ad-994f-d894e9764b93\";\n        assertEquals(UUID.fromString(test), UUIDUtility.parseFromString(test).orElse(null));\n    }", "signature": "void stringUUIDIsParsed()", "full_signature": "@Test void stringUUIDIsParsed()", "class_method_signature": "UUIDUtilityTest.stringUUIDIsParsed()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "fromString", "orElse", "parseFromString"]}, "focal_class": {"identifier": "UUIDUtility", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final DBSystem dbSystem;", "modifier": "private final", "type": "DBSystem", "declarator": "dbSystem", "var_name": "dbSystem"}, {"original_string": "private final ErrorLogger errorLogger;", "modifier": "private final", "type": "ErrorLogger", "declarator": "errorLogger", "var_name": "errorLogger"}], "methods": [{"identifier": "UUIDUtility", "parameters": "(DBSystem dbSystem, ErrorLogger errorLogger)", "modifiers": "@Inject public", "return": "", "signature": " UUIDUtility(DBSystem dbSystem, ErrorLogger errorLogger)", "full_signature": "@Inject public  UUIDUtility(DBSystem dbSystem, ErrorLogger errorLogger)", "class_method_signature": "UUIDUtility.UUIDUtility(DBSystem dbSystem, ErrorLogger errorLogger)", "testcase": false, "constructor": true}, {"identifier": "parseFromString", "parameters": "(String uuidString)", "modifiers": "public static", "return": "Optional<UUID>", "signature": "Optional<UUID> parseFromString(String uuidString)", "full_signature": "public static Optional<UUID> parseFromString(String uuidString)", "class_method_signature": "UUIDUtility.parseFromString(String uuidString)", "testcase": false, "constructor": false}, {"identifier": "getUUIDOf", "parameters": "(String playerName)", "modifiers": "public", "return": "UUID", "signature": "UUID getUUIDOf(String playerName)", "full_signature": "public UUID getUUIDOf(String playerName)", "class_method_signature": "UUIDUtility.getUUIDOf(String playerName)", "testcase": false, "constructor": false}, {"identifier": "getUUIDFromString", "parameters": "(String playerName)", "modifiers": "private", "return": "UUID", "signature": "UUID getUUIDFromString(String playerName)", "full_signature": "private UUID getUUIDFromString(String playerName)", "class_method_signature": "UUIDUtility.getUUIDFromString(String playerName)", "testcase": false, "constructor": false}, {"identifier": "getUUIDViaUUIDFetcher", "parameters": "(String playerName)", "modifiers": "private", "return": "UUID", "signature": "UUID getUUIDViaUUIDFetcher(String playerName)", "full_signature": "private UUID getUUIDViaUUIDFetcher(String playerName)", "class_method_signature": "UUIDUtility.getUUIDViaUUIDFetcher(String playerName)", "testcase": false, "constructor": false}, {"identifier": "getUUIDFromDB", "parameters": "(String playerName)", "modifiers": "private", "return": "Optional<UUID>", "signature": "Optional<UUID> getUUIDFromDB(String playerName)", "full_signature": "private Optional<UUID> getUUIDFromDB(String playerName)", "class_method_signature": "UUIDUtility.getUUIDFromDB(String playerName)", "testcase": false, "constructor": false}], "file": "Plan/common/src/main/java/com/djrapitops/plan/identification/UUIDUtility.java"}, "focal_method": {"identifier": "parseFromString", "parameters": "(String uuidString)", "modifiers": "public static", "return": "Optional<UUID>", "body": "public static Optional<UUID> parseFromString(String uuidString) {\n        try {\n            return Optional.of(UUID.fromString(uuidString));\n        } catch (IllegalArgumentException malformedUUIDException) {\n            return Optional.empty();\n        }\n    }", "signature": "Optional<UUID> parseFromString(String uuidString)", "full_signature": "public static Optional<UUID> parseFromString(String uuidString)", "class_method_signature": "UUIDUtility.parseFromString(String uuidString)", "testcase": false, "constructor": false, "invocations": ["of", "fromString", "empty"]}, "repository": {"repo_id": 75960287, "url": "https://github.com/plan-player-analytics/Plan", "stars": 172, "created": "12/8/2016 5:34:11 PM +00:00", "updates": "2020-01-27T14:34:49+00:00", "fork": "False", "license": "licensed"}}