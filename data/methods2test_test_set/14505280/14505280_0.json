{"test_class": {"identifier": "TmsLayerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\t@Qualifier(\"tmsLayer\")\n\tprivate TmsLayer layer;", "modifier": "@Autowired\n\t@Qualifier(\"tmsLayer\")\n\tprivate", "type": "TmsLayer", "declarator": "layer", "var_name": "layer"}, {"original_string": "@Autowired\n\t@Qualifier(\"tmsLayerWithBadUrl\")\n\tprivate TmsLayer layerWithBadUrl;", "modifier": "@Autowired\n\t@Qualifier(\"tmsLayerWithBadUrl\")\n\tprivate", "type": "TmsLayer", "declarator": "layerWithBadUrl", "var_name": "layerWithBadUrl"}, {"original_string": "@Autowired\n\t@Qualifier(\"tmsLayerProxy\")\n\tprivate TmsLayer proxyLayer;", "modifier": "@Autowired\n\t@Qualifier(\"tmsLayerProxy\")\n\tprivate", "type": "TmsLayer", "declarator": "proxyLayer", "var_name": "proxyLayer"}, {"original_string": "@Autowired\n\tprivate GeoService geoService;", "modifier": "@Autowired\n\tprivate", "type": "GeoService", "declarator": "geoService", "var_name": "geoService"}], "file": "plugin/layer-tms/tms/src/test/java/org/geomajas/layer/tms/TmsLayerTest.java"}, "test_case": {"identifier": "testRetryInit", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testRetryInit() throws LayerException, GeomajasException, InterruptedException {\n\t\t// context is loaded but layer in unusable state\n\t\tAssert.assertFalse(layerWithBadUrl.isUsable());\n\t\t// check that unusable layer throws at us\n\t\tEnvelope maxBounds = new Envelope(18000.0, 259500.250, 152999.75, 244500.0);\n\t\ttry {\n\t\t\tlayerWithBadUrl.paint(geoService.getCrs(\"EPSG:31370\"), maxBounds, 1.0 / 1024.0);\n\t\t\tAssert.fail(\"Unusable layer should throw exception on painting\");\n\t\t} catch (Exception e) {\n\t\t}\n\t\t// set a perfectly good url to simulate server is up again\n\t\tlayerWithBadUrl.setBaseTmsUrl(\"classpath:/org/geomajas/layer/tms/tileMapCapa2.xml\");\n\t\tAssert.assertFalse(layerWithBadUrl.isUsable());\n\t\t// wait a second\n\t\tThread.sleep(1000);\n\t\t// this will now retry init !!!\n\t\tlayerWithBadUrl.paint(geoService.getCrs(\"EPSG:31370\"), maxBounds, 1.0 / 1024.0);\n\t\tAssert.assertTrue(layerWithBadUrl.isUsable());\t\t\t\t\n\t}", "signature": "void testRetryInit()", "full_signature": "@Test public void testRetryInit()", "class_method_signature": "TmsLayerTest.testRetryInit()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isUsable", "paint", "getCrs", "fail", "setBaseTmsUrl", "assertFalse", "isUsable", "sleep", "paint", "getCrs", "assertTrue", "isUsable"]}, "focal_class": {"identifier": "TmsLayer", "superclass": "", "interfaces": "implements RasterLayer, ProxyLayerSupport", "fields": [{"original_string": "private static final long DEFAULT_COOLDOWN_TIME = 60000;", "modifier": "private static final", "type": "long", "declarator": "DEFAULT_COOLDOWN_TIME = 60000", "var_name": "DEFAULT_COOLDOWN_TIME"}, {"original_string": "private static final RasterLayerInfo UNUSABLE_LAYER_INFO = new RasterLayerInfo();", "modifier": "private static final", "type": "RasterLayerInfo", "declarator": "UNUSABLE_LAYER_INFO = new RasterLayerInfo()", "var_name": "UNUSABLE_LAYER_INFO"}, {"original_string": "private final Logger log = LoggerFactory.getLogger(TmsLayer.class);", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(TmsLayer.class)", "var_name": "log"}, {"original_string": "private String id;", "modifier": "private", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private String baseTmsUrl;", "modifier": "private", "type": "String", "declarator": "baseTmsUrl", "var_name": "baseTmsUrl"}, {"original_string": "private String extension = \"jpg\";", "modifier": "private", "type": "String", "declarator": "extension = \"jpg\"", "var_name": "extension"}, {"original_string": "private String version = \"1.0.0\";", "modifier": "private", "type": "String", "declarator": "version = \"1.0.0\"", "var_name": "version"}, {"original_string": "private TileMap tileMap;", "modifier": "private", "type": "TileMap", "declarator": "tileMap", "var_name": "tileMap"}, {"original_string": "private RasterLayerInfo layerInfo;", "modifier": "private", "type": "RasterLayerInfo", "declarator": "layerInfo", "var_name": "layerInfo"}, {"original_string": "private LayerAuthentication authentication;", "modifier": "private", "type": "LayerAuthentication", "declarator": "authentication", "var_name": "authentication"}, {"original_string": "private boolean useProxy;", "modifier": "private", "type": "boolean", "declarator": "useProxy", "var_name": "useProxy"}, {"original_string": "private boolean useCache;", "modifier": "private", "type": "boolean", "declarator": "useCache", "var_name": "useCache"}, {"original_string": "private boolean usable;", "modifier": "private", "type": "boolean", "declarator": "usable", "var_name": "usable"}, {"original_string": "private long lastInitRetry;", "modifier": "private", "type": "long", "declarator": "lastInitRetry", "var_name": "lastInitRetry"}, {"original_string": "private long cooldownTimeBetweenInitializationRetries = DEFAULT_COOLDOWN_TIME;", "modifier": "private", "type": "long", "declarator": "cooldownTimeBetweenInitializationRetries = DEFAULT_COOLDOWN_TIME", "var_name": "cooldownTimeBetweenInitializationRetries"}, {"original_string": "@Autowired\n\tprivate GeoService geoService;", "modifier": "@Autowired\n\tprivate", "type": "GeoService", "declarator": "geoService", "var_name": "geoService"}, {"original_string": "@Autowired\n\tprivate TmsConfigurationService configurationService;", "modifier": "@Autowired\n\tprivate", "type": "TmsConfigurationService", "declarator": "configurationService", "var_name": "configurationService"}, {"original_string": "@Autowired(required = false)\n\tprivate DispatcherUrlService dispatcherUrlService;", "modifier": "@Autowired(required = false)\n\tprivate", "type": "DispatcherUrlService", "declarator": "dispatcherUrlService", "var_name": "dispatcherUrlService"}, {"original_string": "@Autowired(required = false)\n\tprivate CacheManagerService cacheManagerService;", "modifier": "@Autowired(required = false)\n\tprivate", "type": "CacheManagerService", "declarator": "cacheManagerService", "var_name": "cacheManagerService"}, {"original_string": "@Autowired\n\tprivate SecurityContext securityContext;", "modifier": "@Autowired\n\tprivate", "type": "SecurityContext", "declarator": "securityContext", "var_name": "securityContext"}, {"original_string": "@Autowired\n\tprivate TileService tileService;", "modifier": "@Autowired\n\tprivate", "type": "TileService", "declarator": "tileService", "var_name": "tileService"}, {"original_string": "private TileServiceState state;", "modifier": "private", "type": "TileServiceState", "declarator": "state", "var_name": "state"}, {"original_string": "private TileUrlBuilder urlBuilder;", "modifier": "private", "type": "TileUrlBuilder", "declarator": "urlBuilder", "var_name": "urlBuilder"}], "methods": [{"identifier": "postConstruct", "parameters": "()", "modifiers": "@PostConstruct protected", "return": "void", "signature": "void postConstruct()", "full_signature": "@PostConstruct protected void postConstruct()", "class_method_signature": "TmsLayer.postConstruct()", "testcase": false, "constructor": false}, {"identifier": "getLayerInfo", "parameters": "()", "modifiers": "@Override public", "return": "RasterLayerInfo", "signature": "RasterLayerInfo getLayerInfo()", "full_signature": "@Override public RasterLayerInfo getLayerInfo()", "class_method_signature": "TmsLayer.getLayerInfo()", "testcase": false, "constructor": false}, {"identifier": "getCrs", "parameters": "()", "modifiers": "@Override public", "return": "CoordinateReferenceSystem", "signature": "CoordinateReferenceSystem getCrs()", "full_signature": "@Override public CoordinateReferenceSystem getCrs()", "class_method_signature": "TmsLayer.getCrs()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "TmsLayer.getId()", "testcase": false, "constructor": false}, {"identifier": "setCooldownTimeBetweenInitializationRetries", "parameters": "(long cooldownTimeBetweenInitializationRetries)", "modifiers": "@Api public", "return": "void", "signature": "void setCooldownTimeBetweenInitializationRetries(long cooldownTimeBetweenInitializationRetries)", "full_signature": "@Api public void setCooldownTimeBetweenInitializationRetries(long cooldownTimeBetweenInitializationRetries)", "class_method_signature": "TmsLayer.setCooldownTimeBetweenInitializationRetries(long cooldownTimeBetweenInitializationRetries)", "testcase": false, "constructor": false}, {"identifier": "paint", "parameters": "(CoordinateReferenceSystem boundsCrs, Envelope bounds, double scale)", "modifiers": "@Override public", "return": "List<RasterTile>", "signature": "List<RasterTile> paint(CoordinateReferenceSystem boundsCrs, Envelope bounds, double scale)", "full_signature": "@Override public List<RasterTile> paint(CoordinateReferenceSystem boundsCrs, Envelope bounds, double scale)", "class_method_signature": "TmsLayer.paint(CoordinateReferenceSystem boundsCrs, Envelope bounds, double scale)", "testcase": false, "constructor": false}, {"identifier": "isUsable", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean isUsable()", "full_signature": "protected boolean isUsable()", "class_method_signature": "TmsLayer.isUsable()", "testcase": false, "constructor": false}, {"identifier": "retryInit", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void retryInit()", "full_signature": "private void retryInit()", "class_method_signature": "TmsLayer.retryInit()", "testcase": false, "constructor": false}, {"identifier": "getTmsTargetUrl", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getTmsTargetUrl()", "full_signature": "private String getTmsTargetUrl()", "class_method_signature": "TmsLayer.getTmsTargetUrl()", "testcase": false, "constructor": false}, {"identifier": "formatUrl", "parameters": "(String imageUrl)", "modifiers": "private", "return": "String", "signature": "String formatUrl(String imageUrl)", "full_signature": "private String formatUrl(String imageUrl)", "class_method_signature": "TmsLayer.formatUrl(String imageUrl)", "testcase": false, "constructor": false}, {"identifier": "setLayerInfo", "parameters": "(RasterLayerInfo layerInfo)", "modifiers": "public", "return": "void", "signature": "void setLayerInfo(RasterLayerInfo layerInfo)", "full_signature": "public void setLayerInfo(RasterLayerInfo layerInfo)", "class_method_signature": "TmsLayer.setLayerInfo(RasterLayerInfo layerInfo)", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(String id)", "modifiers": "public", "return": "void", "signature": "void setId(String id)", "full_signature": "public void setId(String id)", "class_method_signature": "TmsLayer.setId(String id)", "testcase": false, "constructor": false}, {"identifier": "getBaseTmsUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getBaseTmsUrl()", "full_signature": "public String getBaseTmsUrl()", "class_method_signature": "TmsLayer.getBaseTmsUrl()", "testcase": false, "constructor": false}, {"identifier": "setBaseTmsUrl", "parameters": "(String baseTmsUrl)", "modifiers": "@Api public", "return": "void", "signature": "void setBaseTmsUrl(String baseTmsUrl)", "full_signature": "@Api public void setBaseTmsUrl(String baseTmsUrl)", "class_method_signature": "TmsLayer.setBaseTmsUrl(String baseTmsUrl)", "testcase": false, "constructor": false}, {"identifier": "getExtension", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getExtension()", "full_signature": "public String getExtension()", "class_method_signature": "TmsLayer.getExtension()", "testcase": false, "constructor": false}, {"identifier": "setExtension", "parameters": "(String extension)", "modifiers": "@Api public", "return": "void", "signature": "void setExtension(String extension)", "full_signature": "@Api public void setExtension(String extension)", "class_method_signature": "TmsLayer.setExtension(String extension)", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "TmsLayer.getVersion()", "testcase": false, "constructor": false}, {"identifier": "setVersion", "parameters": "(String version)", "modifiers": "public", "return": "void", "signature": "void setVersion(String version)", "full_signature": "public void setVersion(String version)", "class_method_signature": "TmsLayer.setVersion(String version)", "testcase": false, "constructor": false}, {"identifier": "getAuthentication", "parameters": "()", "modifiers": "public", "return": "LayerAuthentication", "signature": "LayerAuthentication getAuthentication()", "full_signature": "public LayerAuthentication getAuthentication()", "class_method_signature": "TmsLayer.getAuthentication()", "testcase": false, "constructor": false}, {"identifier": "setAuthentication", "parameters": "(LayerAuthentication authentication)", "modifiers": "@Api public", "return": "void", "signature": "void setAuthentication(LayerAuthentication authentication)", "full_signature": "@Api public void setAuthentication(LayerAuthentication authentication)", "class_method_signature": "TmsLayer.setAuthentication(LayerAuthentication authentication)", "testcase": false, "constructor": false}, {"identifier": "setUseProxy", "parameters": "(boolean useProxy)", "modifiers": "@Api public", "return": "void", "signature": "void setUseProxy(boolean useProxy)", "full_signature": "@Api public void setUseProxy(boolean useProxy)", "class_method_signature": "TmsLayer.setUseProxy(boolean useProxy)", "testcase": false, "constructor": false}, {"identifier": "setUseCache", "parameters": "(boolean useCache)", "modifiers": "@Api public", "return": "void", "signature": "void setUseCache(boolean useCache)", "full_signature": "@Api public void setUseCache(boolean useCache)", "class_method_signature": "TmsLayer.setUseCache(boolean useCache)", "testcase": false, "constructor": false}, {"identifier": "getProxyAuthentication", "parameters": "()", "modifiers": "@Override public", "return": "ProxyAuthentication", "signature": "ProxyAuthentication getProxyAuthentication()", "full_signature": "@Override public ProxyAuthentication getProxyAuthentication()", "class_method_signature": "TmsLayer.getProxyAuthentication()", "testcase": false, "constructor": false}, {"identifier": "isUseCache", "parameters": "()", "modifiers": "@Api public", "return": "boolean", "signature": "boolean isUseCache()", "full_signature": "@Api public boolean isUseCache()", "class_method_signature": "TmsLayer.isUseCache()", "testcase": false, "constructor": false}, {"identifier": "getTileMap", "parameters": "()", "modifiers": "public", "return": "TileMap", "signature": "TileMap getTileMap()", "full_signature": "public TileMap getTileMap()", "class_method_signature": "TmsLayer.getTileMap()", "testcase": false, "constructor": false}], "file": "plugin/layer-tms/tms/src/main/java/org/geomajas/layer/tms/TmsLayer.java"}, "focal_method": {"identifier": "retryInit", "parameters": "()", "modifiers": "private", "return": "void", "body": "private void retryInit() throws GeomajasException {\n\t\t// do not hammer the service\n\t\tlong now = System.currentTimeMillis();\n\t\tif (now > lastInitRetry + cooldownTimeBetweenInitializationRetries) {\n\t\t\tlastInitRetry = now;\n\t\t\ttry {\n\t\t\t\tlog.debug(\"Retrying to (re-)initialize layer {}\", getId());\n\t\t\t\tpostConstruct();\n\t\t\t} catch (Exception e) { // NOSONAR\n\t\t\t\tlog.warn(\"Failed initializing layer: \", e.getMessage());\n\t\t\t}\n\t\t}\n\t\tif (!usable) {\n\t\t\tthrow new GeomajasException(ExceptionCode.LAYER_CONFIGURATION_PROBLEM);\n\t\t}\n\t}", "signature": "void retryInit()", "full_signature": "private void retryInit()", "class_method_signature": "TmsLayer.retryInit()", "testcase": false, "constructor": false, "invocations": ["currentTimeMillis", "debug", "getId", "postConstruct", "warn", "getMessage"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}