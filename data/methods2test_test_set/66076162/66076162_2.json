{"test_class": {"identifier": "ErrorMessageFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock private Context context;", "modifier": "@Mock private", "type": "Context", "declarator": "context", "var_name": "context"}], "file": "presentation/src/test/java/com/remotecraft/app/exception/ErrorMessageFactoryTest.java"}, "test_case": {"identifier": "shouldReturnDefaultErrorMessageForNoInternetConnectionException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldReturnDefaultErrorMessageForNoInternetConnectionException()\n      throws Exception {\n    when(context.getString(R.string.exception_no_internet_connection)).thenReturn(\n        \"No Internet Connection Default Error Message\");\n    NoInternetConnectionException noInternetConnectionException =\n        new NoInternetConnectionException();\n\n    String errorMessage = ErrorMessageFactory.create(context, noInternetConnectionException);\n\n    verify(context, times(1)).getString(R.string.exception_no_internet_connection);\n    assertThat(errorMessage, notNullValue());\n    assertThat(errorMessage, is(\"No Internet Connection Default Error Message\"));\n  }", "signature": "void shouldReturnDefaultErrorMessageForNoInternetConnectionException()", "full_signature": "@Test public void shouldReturnDefaultErrorMessageForNoInternetConnectionException()", "class_method_signature": "ErrorMessageFactoryTest.shouldReturnDefaultErrorMessageForNoInternetConnectionException()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getString", "create", "getString", "verify", "times", "assertThat", "notNullValue", "assertThat", "is"]}, "focal_class": {"identifier": "ErrorMessageFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ErrorMessageFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " ErrorMessageFactory()", "full_signature": "private  ErrorMessageFactory()", "class_method_signature": "ErrorMessageFactory.ErrorMessageFactory()", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(Context context, Exception exception)", "modifiers": "public static", "return": "String", "signature": "String create(Context context, Exception exception)", "full_signature": "public static String create(Context context, Exception exception)", "class_method_signature": "ErrorMessageFactory.create(Context context, Exception exception)", "testcase": false, "constructor": false}], "file": "presentation/src/main/java/com/remotecraft/app/exception/ErrorMessageFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(Context context, Exception exception)", "modifiers": "public static", "return": "String", "body": "public static String create(Context context, Exception exception) {\n    String errorMessage = context.getString(R.string.exception_generic);\n\n    if (exception instanceof NoInternetConnectionException) {\n      errorMessage = context.getString(R.string.exception_no_internet_connection);\n    } else if (exception instanceof NoResponseException) {\n      errorMessage = context.getString(R.string.exception_no_response);\n    } else if (exception instanceof InvalidServerException) {\n      errorMessage = context.getString(R.string.exception_invalid_server);\n    } else if (exception.getMessage() != null && !exception.getMessage().isEmpty()) {\n      errorMessage = exception.getMessage();\n    }\n\n    return errorMessage;\n  }", "signature": "String create(Context context, Exception exception)", "full_signature": "public static String create(Context context, Exception exception)", "class_method_signature": "ErrorMessageFactory.create(Context context, Exception exception)", "testcase": false, "constructor": false, "invocations": ["getString", "getString", "getString", "getString", "getMessage", "isEmpty", "getMessage", "getMessage"]}, "repository": {"repo_id": 66076162, "url": "https://github.com/RemotecraftProject/RemotecraftApp", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 2502, "license": "licensed"}}