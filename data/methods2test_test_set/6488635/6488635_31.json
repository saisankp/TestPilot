{"test_class": {"identifier": "OCompositeIndexDefinitionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private OCompositeIndexDefinition compositeIndex;", "modifier": "private", "type": "OCompositeIndexDefinition", "declarator": "compositeIndex", "var_name": "compositeIndex"}], "file": "core/src/test/java/com/orientechnologies/orient/core/index/OCompositeIndexDefinitionTest.java"}, "test_case": {"identifier": "testDocumentToIndexSuccessful", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDocumentToIndexSuccessful() {\n    final ODocument document = new ODocument();\n\n    document.field(\"fOne\", 12);\n    document.field(\"fTwo\", \"test\");\n\n    final Object result = compositeIndex.getDocumentValueToIndex(document);\n    Assert.assertEquals(result, new OCompositeKey(Arrays.asList(12, \"test\")));\n  }", "signature": "void testDocumentToIndexSuccessful()", "full_signature": "@Test public void testDocumentToIndexSuccessful()", "class_method_signature": "OCompositeIndexDefinitionTest.testDocumentToIndexSuccessful()", "testcase": true, "constructor": false, "invocations": ["field", "field", "getDocumentValueToIndex", "assertEquals", "asList"]}, "focal_class": {"identifier": "OCompositeIndexDefinition", "superclass": "extends ODocumentWrapperNoClass", "interfaces": "implements OIndexDefinition", "fields": [{"original_string": "private final List<OIndexDefinition> indexDefinitions;", "modifier": "private final", "type": "List<OIndexDefinition>", "declarator": "indexDefinitions", "var_name": "indexDefinitions"}, {"original_string": "private String                       className;", "modifier": "private", "type": "String", "declarator": "className", "var_name": "className"}, {"original_string": "private int                          multiValueDefinitionIndex = -1;", "modifier": "private", "type": "int", "declarator": "multiValueDefinitionIndex = -1", "var_name": "multiValueDefinitionIndex"}], "methods": [{"identifier": "OCompositeIndexDefinition", "parameters": "()", "modifiers": "public", "return": "", "signature": " OCompositeIndexDefinition()", "full_signature": "public  OCompositeIndexDefinition()", "class_method_signature": "OCompositeIndexDefinition.OCompositeIndexDefinition()", "testcase": false, "constructor": true}, {"identifier": "OCompositeIndexDefinition", "parameters": "(final String iClassName)", "modifiers": "public", "return": "", "signature": " OCompositeIndexDefinition(final String iClassName)", "full_signature": "public  OCompositeIndexDefinition(final String iClassName)", "class_method_signature": "OCompositeIndexDefinition.OCompositeIndexDefinition(final String iClassName)", "testcase": false, "constructor": true}, {"identifier": "OCompositeIndexDefinition", "parameters": "(final String iClassName, final List<? extends OIndexDefinition> iIndexes)", "modifiers": "public", "return": "", "signature": " OCompositeIndexDefinition(final String iClassName, final List<? extends OIndexDefinition> iIndexes)", "full_signature": "public  OCompositeIndexDefinition(final String iClassName, final List<? extends OIndexDefinition> iIndexes)", "class_method_signature": "OCompositeIndexDefinition.OCompositeIndexDefinition(final String iClassName, final List<? extends OIndexDefinition> iIndexes)", "testcase": false, "constructor": true}, {"identifier": "getClassName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClassName()", "full_signature": "public String getClassName()", "class_method_signature": "OCompositeIndexDefinition.getClassName()", "testcase": false, "constructor": false}, {"identifier": "addIndex", "parameters": "(final OIndexDefinition indexDefinition)", "modifiers": "public", "return": "void", "signature": "void addIndex(final OIndexDefinition indexDefinition)", "full_signature": "public void addIndex(final OIndexDefinition indexDefinition)", "class_method_signature": "OCompositeIndexDefinition.addIndex(final OIndexDefinition indexDefinition)", "testcase": false, "constructor": false}, {"identifier": "getFields", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getFields()", "full_signature": "public List<String> getFields()", "class_method_signature": "OCompositeIndexDefinition.getFields()", "testcase": false, "constructor": false}, {"identifier": "getFieldsToIndex", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getFieldsToIndex()", "full_signature": "public List<String> getFieldsToIndex()", "class_method_signature": "OCompositeIndexDefinition.getFieldsToIndex()", "testcase": false, "constructor": false}, {"identifier": "getDocumentValueToIndex", "parameters": "(final ODocument iDocument)", "modifiers": "public", "return": "Object", "signature": "Object getDocumentValueToIndex(final ODocument iDocument)", "full_signature": "public Object getDocumentValueToIndex(final ODocument iDocument)", "class_method_signature": "OCompositeIndexDefinition.getDocumentValueToIndex(final ODocument iDocument)", "testcase": false, "constructor": false}, {"identifier": "getMultiValueDefinitionIndex", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMultiValueDefinitionIndex()", "full_signature": "public int getMultiValueDefinitionIndex()", "class_method_signature": "OCompositeIndexDefinition.getMultiValueDefinitionIndex()", "testcase": false, "constructor": false}, {"identifier": "getMultiValueField", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMultiValueField()", "full_signature": "public String getMultiValueField()", "class_method_signature": "OCompositeIndexDefinition.getMultiValueField()", "testcase": false, "constructor": false}, {"identifier": "createValue", "parameters": "(final List<?> params)", "modifiers": "public", "return": "Object", "signature": "Object createValue(final List<?> params)", "full_signature": "public Object createValue(final List<?> params)", "class_method_signature": "OCompositeIndexDefinition.createValue(final List<?> params)", "testcase": false, "constructor": false}, {"identifier": "getMultiValueDefinition", "parameters": "()", "modifiers": "public", "return": "OIndexDefinitionMultiValue", "signature": "OIndexDefinitionMultiValue getMultiValueDefinition()", "full_signature": "public OIndexDefinitionMultiValue getMultiValueDefinition()", "class_method_signature": "OCompositeIndexDefinition.getMultiValueDefinition()", "testcase": false, "constructor": false}, {"identifier": "createSingleValue", "parameters": "(final List<?> params)", "modifiers": "public", "return": "OCompositeKey", "signature": "OCompositeKey createSingleValue(final List<?> params)", "full_signature": "public OCompositeKey createSingleValue(final List<?> params)", "class_method_signature": "OCompositeIndexDefinition.createSingleValue(final List<?> params)", "testcase": false, "constructor": false}, {"identifier": "addKey", "parameters": "(OCompositeKey firstKey, List<OCompositeKey> compositeKeys, boolean containsCollection,\n      Object keyValue)", "modifiers": "private static", "return": "boolean", "signature": "boolean addKey(OCompositeKey firstKey, List<OCompositeKey> compositeKeys, boolean containsCollection,\n      Object keyValue)", "full_signature": "private static boolean addKey(OCompositeKey firstKey, List<OCompositeKey> compositeKeys, boolean containsCollection,\n      Object keyValue)", "class_method_signature": "OCompositeIndexDefinition.addKey(OCompositeKey firstKey, List<OCompositeKey> compositeKeys, boolean containsCollection,\n      Object keyValue)", "testcase": false, "constructor": false}, {"identifier": "createValue", "parameters": "(final Object... params)", "modifiers": "public", "return": "Object", "signature": "Object createValue(final Object... params)", "full_signature": "public Object createValue(final Object... params)", "class_method_signature": "OCompositeIndexDefinition.createValue(final Object... params)", "testcase": false, "constructor": false}, {"identifier": "processChangeEvent", "parameters": "(OMultiValueChangeEvent<?, ?> changeEvent, Map<OCompositeKey, Integer> keysToAdd,\n      Map<OCompositeKey, Integer> keysToRemove, Object... params)", "modifiers": "public", "return": "void", "signature": "void processChangeEvent(OMultiValueChangeEvent<?, ?> changeEvent, Map<OCompositeKey, Integer> keysToAdd,\n      Map<OCompositeKey, Integer> keysToRemove, Object... params)", "full_signature": "public void processChangeEvent(OMultiValueChangeEvent<?, ?> changeEvent, Map<OCompositeKey, Integer> keysToAdd,\n      Map<OCompositeKey, Integer> keysToRemove, Object... params)", "class_method_signature": "OCompositeIndexDefinition.processChangeEvent(OMultiValueChangeEvent<?, ?> changeEvent, Map<OCompositeKey, Integer> keysToAdd,\n      Map<OCompositeKey, Integer> keysToRemove, Object... params)", "testcase": false, "constructor": false}, {"identifier": "getParamCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getParamCount()", "full_signature": "public int getParamCount()", "class_method_signature": "OCompositeIndexDefinition.getParamCount()", "testcase": false, "constructor": false}, {"identifier": "getTypes", "parameters": "()", "modifiers": "public", "return": "OType[]", "signature": "OType[] getTypes()", "full_signature": "public OType[] getTypes()", "class_method_signature": "OCompositeIndexDefinition.getTypes()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "OCompositeIndexDefinition.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "OCompositeIndexDefinition.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "OCompositeIndexDefinition.toString()", "testcase": false, "constructor": false}, {"identifier": "toStream", "parameters": "()", "modifiers": "@Override public", "return": "ODocument", "signature": "ODocument toStream()", "full_signature": "@Override public ODocument toStream()", "class_method_signature": "OCompositeIndexDefinition.toStream()", "testcase": false, "constructor": false}, {"identifier": "toCreateIndexDDL", "parameters": "(final String indexName, final String indexType)", "modifiers": "public", "return": "String", "signature": "String toCreateIndexDDL(final String indexName, final String indexType)", "full_signature": "public String toCreateIndexDDL(final String indexName, final String indexType)", "class_method_signature": "OCompositeIndexDefinition.toCreateIndexDDL(final String indexName, final String indexType)", "testcase": false, "constructor": false}, {"identifier": "fromStream", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void fromStream()", "full_signature": "@Override protected void fromStream()", "class_method_signature": "OCompositeIndexDefinition.fromStream()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/orientechnologies/orient/core/index/OCompositeIndexDefinition.java"}, "focal_method": {"identifier": "getDocumentValueToIndex", "parameters": "(final ODocument iDocument)", "modifiers": "public", "return": "Object", "body": "public Object getDocumentValueToIndex(final ODocument iDocument) {\n    final List<OCompositeKey> compositeKeys = new ArrayList<OCompositeKey>(10);\n    final OCompositeKey firstKey = new OCompositeKey();\n    boolean containsCollection = false;\n\n    compositeKeys.add(firstKey);\n\n    for (final OIndexDefinition indexDefinition : indexDefinitions) {\n      final Object result = indexDefinition.getDocumentValueToIndex(iDocument);\n\n      if (result == null)\n        return null;\n\n      containsCollection = addKey(firstKey, compositeKeys, containsCollection, result);\n    }\n\n    if (!containsCollection)\n      return firstKey;\n\n    return compositeKeys;\n  }", "signature": "Object getDocumentValueToIndex(final ODocument iDocument)", "full_signature": "public Object getDocumentValueToIndex(final ODocument iDocument)", "class_method_signature": "OCompositeIndexDefinition.getDocumentValueToIndex(final ODocument iDocument)", "testcase": false, "constructor": false, "invocations": ["add", "getDocumentValueToIndex", "addKey"]}, "repository": {"repo_id": 6488635, "url": "https://github.com/wuman/orientdb-android", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 35, "size": 13080, "license": "licensed"}}