{"test_class": {"identifier": "ApplicationContextUtilTest", "superclass": "extends AbstractJUnit4SpringContextTests", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ApplicationContextUtilTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ApplicationContextUtilTest.class)", "var_name": "LOGGER"}], "file": "feilong-spring-core/src/test/java/com/feilong/spring/context/ApplicationContextUtilTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test(){\n        Map<String, Object> applicationContextForLogMap = ApplicationContextUtil.getApplicationContextInfoMapForLog(applicationContext);\n        LOGGER.debug(\"ApplicationContextForLogMap:{}\", JsonUtil.format(applicationContextForLogMap));\n        LOGGER.debug(\"\" + applicationContext.containsBean(\"feitian@\"));\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "ApplicationContextUtilTest.test()", "testcase": true, "constructor": false, "invocations": ["getApplicationContextInfoMapForLog", "debug", "format", "debug", "containsBean"]}, "focal_class": {"identifier": "ApplicationContextUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ApplicationContextUtil.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ApplicationContextUtil.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "ApplicationContextUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " ApplicationContextUtil()", "full_signature": "private  ApplicationContextUtil()", "class_method_signature": "ApplicationContextUtil.ApplicationContextUtil()", "testcase": false, "constructor": true}, {"identifier": "getApplicationContextInfoMapForLog", "parameters": "(ApplicationContext applicationContext)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> getApplicationContextInfoMapForLog(ApplicationContext applicationContext)", "full_signature": "public static Map<String, Object> getApplicationContextInfoMapForLog(ApplicationContext applicationContext)", "class_method_signature": "ApplicationContextUtil.getApplicationContextInfoMapForLog(ApplicationContext applicationContext)", "testcase": false, "constructor": false}, {"identifier": "getApplicationContextInfoMapForLog", "parameters": "(ApplicationContext applicationContext,boolean loadParent)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> getApplicationContextInfoMapForLog(ApplicationContext applicationContext,boolean loadParent)", "full_signature": "public static Map<String, Object> getApplicationContextInfoMapForLog(ApplicationContext applicationContext,boolean loadParent)", "class_method_signature": "ApplicationContextUtil.getApplicationContextInfoMapForLog(ApplicationContext applicationContext,boolean loadParent)", "testcase": false, "constructor": false}, {"identifier": "getBeanNameAndBeanMap", "parameters": "(ApplicationContext applicationContext,Class<T> klass)", "modifiers": "public static", "return": "Map<String, T>", "signature": "Map<String, T> getBeanNameAndBeanMap(ApplicationContext applicationContext,Class<T> klass)", "full_signature": "public static Map<String, T> getBeanNameAndBeanMap(ApplicationContext applicationContext,Class<T> klass)", "class_method_signature": "ApplicationContextUtil.getBeanNameAndBeanMap(ApplicationContext applicationContext,Class<T> klass)", "testcase": false, "constructor": false}, {"identifier": "buildBeanDefinitionNameAndClassMap", "parameters": "(\n                    ApplicationContext applicationContext,\n                    String[] beanDefinitionNames)", "modifiers": "private static", "return": "Map<String, String>", "signature": "Map<String, String> buildBeanDefinitionNameAndClassMap(\n                    ApplicationContext applicationContext,\n                    String[] beanDefinitionNames)", "full_signature": "private static Map<String, String> buildBeanDefinitionNameAndClassMap(\n                    ApplicationContext applicationContext,\n                    String[] beanDefinitionNames)", "class_method_signature": "ApplicationContextUtil.buildBeanDefinitionNameAndClassMap(\n                    ApplicationContext applicationContext,\n                    String[] beanDefinitionNames)", "testcase": false, "constructor": false}, {"identifier": "buildKeyMessage", "parameters": "(ApplicationContext applicationContext)", "modifiers": "private static", "return": "String", "signature": "String buildKeyMessage(ApplicationContext applicationContext)", "full_signature": "private static String buildKeyMessage(ApplicationContext applicationContext)", "class_method_signature": "ApplicationContextUtil.buildKeyMessage(ApplicationContext applicationContext)", "testcase": false, "constructor": false}, {"identifier": "buildValue", "parameters": "(ApplicationContext applicationContext,String beanDefinitionName)", "modifiers": "private static", "return": "String", "signature": "String buildValue(ApplicationContext applicationContext,String beanDefinitionName)", "full_signature": "private static String buildValue(ApplicationContext applicationContext,String beanDefinitionName)", "class_method_signature": "ApplicationContextUtil.buildValue(ApplicationContext applicationContext,String beanDefinitionName)", "testcase": false, "constructor": false}, {"identifier": "buildValue", "parameters": "(ApplicationContext applicationContext,String beanDefinitionName,Object bean)", "modifiers": "private static", "return": "String", "signature": "String buildValue(ApplicationContext applicationContext,String beanDefinitionName,Object bean)", "full_signature": "private static String buildValue(ApplicationContext applicationContext,String beanDefinitionName,Object bean)", "class_method_signature": "ApplicationContextUtil.buildValue(ApplicationContext applicationContext,String beanDefinitionName,Object bean)", "testcase": false, "constructor": false}], "file": "feilong-spring-core/src/main/java/com/feilong/spring/context/ApplicationContextUtil.java"}, "focal_method": {"identifier": "getApplicationContextInfoMapForLog", "parameters": "(ApplicationContext applicationContext)", "modifiers": "public static", "return": "Map<String, Object>", "body": "public static Map<String, Object> getApplicationContextInfoMapForLog(ApplicationContext applicationContext){\n        return getApplicationContextInfoMapForLog(applicationContext, true);\n    }", "signature": "Map<String, Object> getApplicationContextInfoMapForLog(ApplicationContext applicationContext)", "full_signature": "public static Map<String, Object> getApplicationContextInfoMapForLog(ApplicationContext applicationContext)", "class_method_signature": "ApplicationContextUtil.getApplicationContextInfoMapForLog(ApplicationContext applicationContext)", "testcase": false, "constructor": false, "invocations": ["getApplicationContextInfoMapForLog"]}, "repository": {"repo_id": 36185854, "url": "https://github.com/ifeilong/feilong-spring", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 5, "size": 2088, "license": "licensed"}}