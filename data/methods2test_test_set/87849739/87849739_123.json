{"test_class": {"identifier": "JsonParseExceptionTest", "superclass": "", "interfaces": "", "fields": [], "file": "json/src/test/java/org/eclipse/ditto/json/JsonParseExceptionTest.java"}, "test_case": {"identifier": "getMessageReturnsNullIfNotExplicitlySet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getMessageReturnsNullIfNotExplicitlySet() {\n        final JsonParseException underTest = JsonParseException.newBuilder().build();\n\n        assertThat(underTest.getMessage()).isNull();\n    }", "signature": "void getMessageReturnsNullIfNotExplicitlySet()", "full_signature": "@Test public void getMessageReturnsNullIfNotExplicitlySet()", "class_method_signature": "JsonParseExceptionTest.getMessageReturnsNullIfNotExplicitlySet()", "testcase": true, "constructor": false, "invocations": ["build", "newBuilder", "isNull", "assertThat", "getMessage"]}, "focal_class": {"identifier": "JsonParseException", "superclass": "extends JsonRuntimeException", "interfaces": "", "fields": [{"original_string": "public static final String ERROR_CODE = \"json.invalid\";", "modifier": "public static final", "type": "String", "declarator": "ERROR_CODE = \"json.invalid\"", "var_name": "ERROR_CODE"}, {"original_string": "private static final String DEFAULT_DESCRIPTION =\n            \"Check if the JSON was valid (e.g. on https://jsonlint.com) and if it was in required format.\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_DESCRIPTION =\n            \"Check if the JSON was valid (e.g. on https://jsonlint.com) and if it was in required format.\"", "var_name": "DEFAULT_DESCRIPTION"}, {"original_string": "private static final long serialVersionUID = -7585793723086474449L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -7585793723086474449L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "JsonParseException", "parameters": "(@Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "modifiers": "private", "return": "", "signature": " JsonParseException(@Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "full_signature": "private  JsonParseException(@Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "class_method_signature": "JsonParseException.JsonParseException(@Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "testcase": false, "constructor": true}, {"identifier": "JsonParseException", "parameters": "(@Nullable final String message)", "modifiers": "public", "return": "", "signature": " JsonParseException(@Nullable final String message)", "full_signature": "public  JsonParseException(@Nullable final String message)", "class_method_signature": "JsonParseException.JsonParseException(@Nullable final String message)", "testcase": false, "constructor": true}, {"identifier": "newBuilder", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder newBuilder()", "full_signature": "public static Builder newBuilder()", "class_method_signature": "JsonParseException.newBuilder()", "testcase": false, "constructor": false}], "file": "json/src/main/java/org/eclipse/ditto/json/JsonParseException.java"}, "focal_method": {"identifier": "newBuilder", "parameters": "()", "modifiers": "public static", "return": "Builder", "body": "public static Builder newBuilder() {\n        return new Builder();\n    }", "signature": "Builder newBuilder()", "full_signature": "public static Builder newBuilder()", "class_method_signature": "JsonParseException.newBuilder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}