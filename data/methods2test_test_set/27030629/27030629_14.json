{"test_class": {"identifier": "DiskUserDataStoreTest", "superclass": "extends ApplicationTestCase", "interfaces": "", "fields": [{"original_string": "private static final int FAKE_USER_ID = 11;", "modifier": "private static final", "type": "int", "declarator": "FAKE_USER_ID = 11", "var_name": "FAKE_USER_ID"}, {"original_string": "@InjectMocks\n    private DiskUserDataStore diskUserDataStore;", "modifier": "@InjectMocks\n    private", "type": "DiskUserDataStore", "declarator": "diskUserDataStore", "var_name": "diskUserDataStore"}, {"original_string": "@Mock\n    private UserCache mockUserCache;", "modifier": "@Mock\n    private", "type": "UserCache", "declarator": "mockUserCache", "var_name": "mockUserCache"}, {"original_string": "@Mock\n    private UserDataStore.UserDetailsCallback mockUserDetailsDataStoreCallback;", "modifier": "@Mock\n    private", "type": "UserDataStore.UserDetailsCallback", "declarator": "mockUserDetailsDataStoreCallback", "var_name": "mockUserDetailsDataStoreCallback"}, {"original_string": "@Captor\n    private ArgumentCaptor<UserCache.UserCacheCallback> userCacheCallbackArgumentCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<UserCache.UserCacheCallback>", "declarator": "userCacheCallbackArgumentCaptor", "var_name": "userCacheCallbackArgumentCaptor"}, {"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}], "file": "Data/src/test/java/com/example/data/repository/datasource/DiskUserDataStoreTest.java"}, "test_case": {"identifier": "testGetUserEntityByIdSuccessfully", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetUserEntityByIdSuccessfully() {\n        UserEntity mockUserEntity = mock(UserEntity.class);\n\n        diskUserDataStore.getUserEntityDetails(FAKE_USER_ID, mockUserDetailsDataStoreCallback);\n\n        verify(mockUserCache).get(anyInt(), userCacheCallbackArgumentCaptor.capture());\n        verifyZeroInteractions(mockUserDetailsDataStoreCallback);\n\n        userCacheCallbackArgumentCaptor.getValue().onUserEntityLoaded(mockUserEntity);\n\n        verify(mockUserDetailsDataStoreCallback).onUserEntityLoaded(mockUserEntity);\n    }", "signature": "void testGetUserEntityByIdSuccessfully()", "full_signature": "@Test public void testGetUserEntityByIdSuccessfully()", "class_method_signature": "DiskUserDataStoreTest.testGetUserEntityByIdSuccessfully()", "testcase": true, "constructor": false, "invocations": ["mock", "getUserEntityDetails", "get", "verify", "anyInt", "capture", "verifyZeroInteractions", "onUserEntityLoaded", "getValue", "onUserEntityLoaded", "verify"]}, "focal_class": {"identifier": "DiskUserDataStore", "superclass": "", "interfaces": "implements UserDataStore", "fields": [{"original_string": "@Bean(UserCacheImpl.class)\n    protected UserCache userCache;", "modifier": "@Bean(UserCacheImpl.class)\n    protected", "type": "UserCache", "declarator": "userCache", "var_name": "userCache"}], "methods": [{"identifier": "getUsersEntityList", "parameters": "(UserListCallback userListCallback)", "modifiers": "@Override public", "return": "void", "signature": "void getUsersEntityList(UserListCallback userListCallback)", "full_signature": "@Override public void getUsersEntityList(UserListCallback userListCallback)", "class_method_signature": "DiskUserDataStore.getUsersEntityList(UserListCallback userListCallback)", "testcase": false, "constructor": false}, {"identifier": "getUserEntityDetails", "parameters": "(int id,\n                                     final UserDetailsCallback userDetailsCallback)", "modifiers": "@Override public", "return": "void", "signature": "void getUserEntityDetails(int id,\n                                     final UserDetailsCallback userDetailsCallback)", "full_signature": "@Override public void getUserEntityDetails(int id,\n                                     final UserDetailsCallback userDetailsCallback)", "class_method_signature": "DiskUserDataStore.getUserEntityDetails(int id,\n                                     final UserDetailsCallback userDetailsCallback)", "testcase": false, "constructor": false}], "file": "Data/src/main/java/com/example/data/repository/datasource/DiskUserDataStore.java"}, "focal_method": {"identifier": "getUserEntityDetails", "parameters": "(int id,\n                                     final UserDetailsCallback userDetailsCallback)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void getUserEntityDetails(int id,\n                                     final UserDetailsCallback userDetailsCallback) {\n        this.userCache.get(id, new UserCache.UserCacheCallback() {\n            @Override\n            public void onUserEntityLoaded(UserEntity userEntity) {\n                userDetailsCallback.onUserEntityLoaded(userEntity);\n            }\n\n            @Override\n            public void onError(Exception exception) {\n                userDetailsCallback.onError(exception);\n            }\n        });\n    }", "signature": "void getUserEntityDetails(int id,\n                                     final UserDetailsCallback userDetailsCallback)", "full_signature": "@Override public void getUserEntityDetails(int id,\n                                     final UserDetailsCallback userDetailsCallback)", "class_method_signature": "DiskUserDataStore.getUserEntityDetails(int id,\n                                     final UserDetailsCallback userDetailsCallback)", "testcase": false, "constructor": false, "invocations": ["get", "onUserEntityLoaded", "onError"]}, "repository": {"repo_id": 27030629, "url": "https://github.com/nenick/AndroidAppDevelopment", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 17, "size": 6155, "license": "licensed"}}