{"test_class": {"identifier": "DlmsConnectionFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DlmsConnectionFactory factory;", "modifier": "private", "type": "DlmsConnectionFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "@Mock\n    private Hls5Connector hls5Connector;", "modifier": "@Mock\n    private", "type": "Hls5Connector", "declarator": "hls5Connector", "var_name": "hls5Connector"}, {"original_string": "@Mock\n    private Lls1Connector lls1Connector;", "modifier": "@Mock\n    private", "type": "Lls1Connector", "declarator": "lls1Connector", "var_name": "lls1Connector"}, {"original_string": "@Mock\n    private Lls0Connector lls0Connector;", "modifier": "@Mock\n    private", "type": "Lls0Connector", "declarator": "lls0Connector", "var_name": "lls0Connector"}, {"original_string": "@Mock\n    private DomainHelperService domainHelperService;", "modifier": "@Mock\n    private", "type": "DomainHelperService", "declarator": "domainHelperService", "var_name": "domainHelperService"}, {"original_string": "@Mock\n    private DlmsConnection connection;", "modifier": "@Mock\n    private", "type": "DlmsConnection", "declarator": "connection", "var_name": "connection"}], "file": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/factories/DlmsConnectionFactoryTest.java"}, "test_case": {"identifier": "getConnection_throwsForHls3Device", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getConnection_throwsForHls3Device() throws Exception {\n        final DlmsDevice device = new DlmsDeviceBuilder().withHls3Active(true).build();\n        final DlmsMessageListener listener = new InvocationCountingDlmsMessageListener();\n\n        assertThatExceptionOfType(FunctionalException.class).isThrownBy(() -> {\n            this.factory.getConnection(device, listener);\n        });\n    }", "signature": "void getConnection_throwsForHls3Device()", "full_signature": "@Test public void getConnection_throwsForHls3Device()", "class_method_signature": "DlmsConnectionFactoryTest.getConnection_throwsForHls3Device()", "testcase": true, "constructor": false, "invocations": ["build", "withHls3Active", "isThrownBy", "assertThatExceptionOfType", "getConnection"]}, "focal_class": {"identifier": "DlmsConnectionFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(DlmsConnectionFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(DlmsConnectionFactory.class)", "var_name": "LOGGER"}, {"original_string": "private final Hls5Connector hls5Connector;", "modifier": "private final", "type": "Hls5Connector", "declarator": "hls5Connector", "var_name": "hls5Connector"}, {"original_string": "private final Lls1Connector lls1Connector;", "modifier": "private final", "type": "Lls1Connector", "declarator": "lls1Connector", "var_name": "lls1Connector"}, {"original_string": "private final Lls0Connector lls0Connector;", "modifier": "private final", "type": "Lls0Connector", "declarator": "lls0Connector", "var_name": "lls0Connector"}, {"original_string": "private final DomainHelperService domainHelperService;", "modifier": "private final", "type": "DomainHelperService", "declarator": "domainHelperService", "var_name": "domainHelperService"}], "methods": [{"identifier": "DlmsConnectionFactory", "parameters": "(final Hls5Connector hls5Connector, final Lls1Connector lls1Connector,\n            final Lls0Connector lls0Connector, final DomainHelperService domainHelperService)", "modifiers": "@Autowired public", "return": "", "signature": " DlmsConnectionFactory(final Hls5Connector hls5Connector, final Lls1Connector lls1Connector,\n            final Lls0Connector lls0Connector, final DomainHelperService domainHelperService)", "full_signature": "@Autowired public  DlmsConnectionFactory(final Hls5Connector hls5Connector, final Lls1Connector lls1Connector,\n            final Lls0Connector lls0Connector, final DomainHelperService domainHelperService)", "class_method_signature": "DlmsConnectionFactory.DlmsConnectionFactory(final Hls5Connector hls5Connector, final Lls1Connector lls1Connector,\n            final Lls0Connector lls0Connector, final DomainHelperService domainHelperService)", "testcase": false, "constructor": true}, {"identifier": "getConnection", "parameters": "(final DlmsDevice device, final DlmsMessageListener dlmsMessageListener)", "modifiers": "public", "return": "DlmsConnectionManager", "signature": "DlmsConnectionManager getConnection(final DlmsDevice device, final DlmsMessageListener dlmsMessageListener)", "full_signature": "public DlmsConnectionManager getConnection(final DlmsDevice device, final DlmsMessageListener dlmsMessageListener)", "class_method_signature": "DlmsConnectionFactory.getConnection(final DlmsDevice device, final DlmsMessageListener dlmsMessageListener)", "testcase": false, "constructor": false}, {"identifier": "getPublicClientConnection", "parameters": "(final DlmsDevice device,\n            final DlmsMessageListener dlmsMessageListener)", "modifiers": "public", "return": "DlmsConnectionManager", "signature": "DlmsConnectionManager getPublicClientConnection(final DlmsDevice device,\n            final DlmsMessageListener dlmsMessageListener)", "full_signature": "public DlmsConnectionManager getPublicClientConnection(final DlmsDevice device,\n            final DlmsMessageListener dlmsMessageListener)", "class_method_signature": "DlmsConnectionFactory.getPublicClientConnection(final DlmsDevice device,\n            final DlmsMessageListener dlmsMessageListener)", "testcase": false, "constructor": false}, {"identifier": "newConnectionWithSecurityLevel", "parameters": "(final DlmsDevice device,\n            final DlmsMessageListener dlmsMessageListener, final SecurityLevel securityLevel)", "modifiers": "private", "return": "DlmsConnectionManager", "signature": "DlmsConnectionManager newConnectionWithSecurityLevel(final DlmsDevice device,\n            final DlmsMessageListener dlmsMessageListener, final SecurityLevel securityLevel)", "full_signature": "private DlmsConnectionManager newConnectionWithSecurityLevel(final DlmsDevice device,\n            final DlmsMessageListener dlmsMessageListener, final SecurityLevel securityLevel)", "class_method_signature": "DlmsConnectionFactory.newConnectionWithSecurityLevel(final DlmsDevice device,\n            final DlmsMessageListener dlmsMessageListener, final SecurityLevel securityLevel)", "testcase": false, "constructor": false}, {"identifier": "connectorFor", "parameters": "(final SecurityLevel securityLevel)", "modifiers": "private", "return": "DlmsConnector", "signature": "DlmsConnector connectorFor(final SecurityLevel securityLevel)", "full_signature": "private DlmsConnector connectorFor(final SecurityLevel securityLevel)", "class_method_signature": "DlmsConnectionFactory.connectorFor(final SecurityLevel securityLevel)", "testcase": false, "constructor": false}], "file": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/factories/DlmsConnectionFactory.java"}, "focal_method": {"identifier": "getConnection", "parameters": "(final DlmsDevice device, final DlmsMessageListener dlmsMessageListener)", "modifiers": "public", "return": "DlmsConnectionManager", "body": "public DlmsConnectionManager getConnection(final DlmsDevice device, final DlmsMessageListener dlmsMessageListener)\n            throws OsgpException {\n        return this.newConnectionWithSecurityLevel(device, dlmsMessageListener, SecurityLevel.forDevice(device));\n    }", "signature": "DlmsConnectionManager getConnection(final DlmsDevice device, final DlmsMessageListener dlmsMessageListener)", "full_signature": "public DlmsConnectionManager getConnection(final DlmsDevice device, final DlmsMessageListener dlmsMessageListener)", "class_method_signature": "DlmsConnectionFactory.getConnection(final DlmsDevice device, final DlmsMessageListener dlmsMessageListener)", "testcase": false, "constructor": false, "invocations": ["newConnectionWithSecurityLevel", "forDevice"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}