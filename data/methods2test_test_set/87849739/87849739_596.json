{"test_class": {"identifier": "PreparedKamonTimerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PreparedTimer sut;", "modifier": "private", "type": "PreparedTimer", "declarator": "sut", "var_name": "sut"}], "file": "services/utils/metrics/src/test/java/org/eclipse/ditto/services/utils/metrics/instruments/timer/PreparedKamonTimerTest.java"}, "test_case": {"identifier": "canStartMultipleTimes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void canStartMultipleTimes() {\n        final StartedTimer started1 = sut.start();\n        final StartedTimer started2 = sut.start();\n        assertThat(started1.getStartTimeStamp()).isNotEqualTo(started2.getStartTimeStamp());\n    }", "signature": "void canStartMultipleTimes()", "full_signature": "@Test public void canStartMultipleTimes()", "class_method_signature": "PreparedKamonTimerTest.canStartMultipleTimes()", "testcase": true, "constructor": false, "invocations": ["start", "start", "isNotEqualTo", "assertThat", "getStartTimeStamp", "getStartTimeStamp"]}, "focal_class": {"identifier": "PreparedKamonTimer", "superclass": "", "interfaces": "implements PreparedTimer", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(PreparedKamonTimer.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(PreparedKamonTimer.class)", "var_name": "LOGGER"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final Map<String, String> tags;", "modifier": "private final", "type": "Map<String, String>", "declarator": "tags", "var_name": "tags"}], "methods": [{"identifier": "PreparedKamonTimer", "parameters": "(final String name)", "modifiers": "private", "return": "", "signature": " PreparedKamonTimer(final String name)", "full_signature": "private  PreparedKamonTimer(final String name)", "class_method_signature": "PreparedKamonTimer.PreparedKamonTimer(final String name)", "testcase": false, "constructor": true}, {"identifier": "newTimer", "parameters": "(final String name)", "modifiers": "static", "return": "PreparedTimer", "signature": "PreparedTimer newTimer(final String name)", "full_signature": "static PreparedTimer newTimer(final String name)", "class_method_signature": "PreparedKamonTimer.newTimer(final String name)", "testcase": false, "constructor": false}, {"identifier": "tags", "parameters": "(final Map<String, String> tags)", "modifiers": "@Override public", "return": "PreparedTimer", "signature": "PreparedTimer tags(final Map<String, String> tags)", "full_signature": "@Override public PreparedTimer tags(final Map<String, String> tags)", "class_method_signature": "PreparedKamonTimer.tags(final Map<String, String> tags)", "testcase": false, "constructor": false}, {"identifier": "getTag", "parameters": "(final String key)", "modifiers": "@Nullable @Override public", "return": "String", "signature": "String getTag(final String key)", "full_signature": "@Nullable @Override public String getTag(final String key)", "class_method_signature": "PreparedKamonTimer.getTag(final String key)", "testcase": false, "constructor": false}, {"identifier": "getTags", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getTags()", "full_signature": "@Override public Map<String, String> getTags()", "class_method_signature": "PreparedKamonTimer.getTags()", "testcase": false, "constructor": false}, {"identifier": "tag", "parameters": "(final String key, final String value)", "modifiers": "@Override public", "return": "PreparedTimer", "signature": "PreparedTimer tag(final String key, final String value)", "full_signature": "@Override public PreparedTimer tag(final String key, final String value)", "class_method_signature": "PreparedKamonTimer.tag(final String key, final String value)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "StartedTimer", "signature": "StartedTimer start()", "full_signature": "public StartedTimer start()", "class_method_signature": "PreparedKamonTimer.start()", "testcase": false, "constructor": false}, {"identifier": "record", "parameters": "(final long time, final TimeUnit timeUnit)", "modifiers": "@Override public", "return": "PreparedTimer", "signature": "PreparedTimer record(final long time, final TimeUnit timeUnit)", "full_signature": "@Override public PreparedTimer record(final long time, final TimeUnit timeUnit)", "class_method_signature": "PreparedKamonTimer.record(final long time, final TimeUnit timeUnit)", "testcase": false, "constructor": false}, {"identifier": "getTotalTime", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getTotalTime()", "full_signature": "@Override public Long getTotalTime()", "class_method_signature": "PreparedKamonTimer.getTotalTime()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfRecords", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getNumberOfRecords()", "full_signature": "@Override public Long getNumberOfRecords()", "class_method_signature": "PreparedKamonTimer.getNumberOfRecords()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "PreparedKamonTimer.getName()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean reset()", "full_signature": "@Override public boolean reset()", "class_method_signature": "PreparedKamonTimer.reset()", "testcase": false, "constructor": false}, {"identifier": "getSnapshot", "parameters": "(boolean reset)", "modifiers": "private", "return": "Distribution", "signature": "Distribution getSnapshot(boolean reset)", "full_signature": "private Distribution getSnapshot(boolean reset)", "class_method_signature": "PreparedKamonTimer.getSnapshot(boolean reset)", "testcase": false, "constructor": false}, {"identifier": "getKamonInternalTimer", "parameters": "()", "modifiers": "private", "return": "kamon.metric.Timer", "signature": "kamon.metric.Timer getKamonInternalTimer()", "full_signature": "private kamon.metric.Timer getKamonInternalTimer()", "class_method_signature": "PreparedKamonTimer.getKamonInternalTimer()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PreparedKamonTimer.toString()", "testcase": false, "constructor": false}], "file": "services/utils/metrics/src/main/java/org/eclipse/ditto/services/utils/metrics/instruments/timer/PreparedKamonTimer.java"}, "focal_method": {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "StartedTimer", "body": "public StartedTimer start() {\n        return StartedKamonTimer.fromPreparedTimer(this);\n    }", "signature": "StartedTimer start()", "full_signature": "public StartedTimer start()", "class_method_signature": "PreparedKamonTimer.start()", "testcase": false, "constructor": false, "invocations": ["fromPreparedTimer"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}