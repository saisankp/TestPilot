{"test_class": {"identifier": "HaloMigration2", "superclass": "extends HaloJUnitTest", "interfaces": "", "fields": [{"original_string": "private HaloMigration2$0$0 mMigration;", "modifier": "private", "type": "HaloMigration2", "declarator": "mMigration", "var_name": "mMigration"}], "file": "sdk/halo-sdk/src/test/java/com/mobgen/halo/android/sdk/core/internal/storage/HaloMigration2$0$0Test.java"}, "test_case": {"identifier": "thatEnsureCreateTables", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void thatEnsureCreateTables() {\n        SQLiteDatabase database = mock(SQLiteDatabase.class);\n        final int[] numOps = {0};\n        doAnswer(new Answer() {\n            @Override\n            public Object answer(InvocationOnMock invocation) throws Throwable {\n                numOps[0]++;\n                return null;\n            }\n        }).when(database).execSQL(any(String.class));\n        mMigration.updateDatabase(database);\n        assertThat(numOps[0]).isEqualTo(1);\n    }", "signature": "void thatEnsureCreateTables()", "full_signature": "@Test public void thatEnsureCreateTables()", "class_method_signature": "HaloMigration2.thatEnsureCreateTables()", "testcase": true, "constructor": false, "invocations": ["mock", "execSQL", "when", "doAnswer", "any", "updateDatabase", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "HaloMigration2", "superclass": "extends HaloDatabaseMigration", "interfaces": "", "fields": [{"original_string": "public static final int VERSION = 1;", "modifier": "public static final", "type": "int", "declarator": "VERSION = 1", "var_name": "VERSION"}], "methods": [{"identifier": "updateDatabase", "parameters": "(@NonNull SQLiteDatabase database)", "modifiers": "@Override public", "return": "void", "signature": "void updateDatabase(@NonNull SQLiteDatabase database)", "full_signature": "@Override public void updateDatabase(@NonNull SQLiteDatabase database)", "class_method_signature": "HaloMigration2.updateDatabase(@NonNull SQLiteDatabase database)", "testcase": false, "constructor": false}, {"identifier": "getDatabaseVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getDatabaseVersion()", "full_signature": "@Override public int getDatabaseVersion()", "class_method_signature": "HaloMigration2.getDatabaseVersion()", "testcase": false, "constructor": false}], "file": "sdk/halo-sdk/src/main/java/com/mobgen/halo/android/sdk/core/internal/storage/HaloMigration2$0$0.java"}, "focal_method": {"identifier": "updateDatabase", "parameters": "(@NonNull SQLiteDatabase database)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void updateDatabase(@NonNull SQLiteDatabase database) {\n        //General content table\n        Create.table(HaloManagerContract.RemoteModules.class).on(database, \"Create module table\");\n    }", "signature": "void updateDatabase(@NonNull SQLiteDatabase database)", "full_signature": "@Override public void updateDatabase(@NonNull SQLiteDatabase database)", "class_method_signature": "HaloMigration2.updateDatabase(@NonNull SQLiteDatabase database)", "testcase": false, "constructor": false, "invocations": ["on", "table"]}, "repository": {"repo_id": 72189814, "url": "https://github.com/mobgen/halo-android", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 3343, "license": "licensed"}}