{"test_class": {"identifier": "UpdateDeserializerTest", "superclass": "", "interfaces": "", "fields": [], "file": "stardao-core/src/test/java/io/stardog/stardao/jackson/UpdateDeserializerTest.java"}, "test_case": {"identifier": "testDeserialize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDeserialize() throws Exception {\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n\n        String json = \"{\\\"name\\\":\\\"Marty\\\",\\\"birthday\\\":\\\"1985-10-26\\\",\\\"email\\\":null,\\\"country\\\":\\\"\\\"}\";\n        Update<TestModel> update = mapper.readValue(json, new TypeReference<Update<TestModel>>() {});\n        assertEquals(\"Marty\", update.getPartial().getName());\n        assertEquals(LocalDate.of(1985, 10, 26), update.getPartial().getBirthday());\n        assertNull(update.getPartial().getEmail());\n        assertNull(update.getPartial().getCountry());\n        assertEquals(ImmutableSet.of(\"email\", \"country\"), update.getRemoveFields());\n    }", "signature": "void testDeserialize()", "full_signature": "@Test public void testDeserialize()", "class_method_signature": "UpdateDeserializerTest.testDeserialize()", "testcase": true, "constructor": false, "invocations": ["registerModule", "readValue", "assertEquals", "getName", "getPartial", "assertEquals", "of", "getBirthday", "getPartial", "assertNull", "getEmail", "getPartial", "assertNull", "getCountry", "getPartial", "assertEquals", "of", "getRemoveFields"]}, "focal_class": {"identifier": "UpdateDeserializer", "superclass": "extends JsonDeserializer<Update<?>>", "interfaces": "implements ContextualDeserializer", "fields": [{"original_string": "private JavaType valueType;", "modifier": "private", "type": "JavaType", "declarator": "valueType", "var_name": "valueType"}], "methods": [{"identifier": "createContextual", "parameters": "(DeserializationContext ctx, BeanProperty property)", "modifiers": "@Override public", "return": "JsonDeserializer<?>", "signature": "JsonDeserializer<?> createContextual(DeserializationContext ctx, BeanProperty property)", "full_signature": "@Override public JsonDeserializer<?> createContextual(DeserializationContext ctx, BeanProperty property)", "class_method_signature": "UpdateDeserializer.createContextual(DeserializationContext ctx, BeanProperty property)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(JsonParser parser, DeserializationContext ctx)", "modifiers": "@Override public", "return": "Update<?>", "signature": "Update<?> deserialize(JsonParser parser, DeserializationContext ctx)", "full_signature": "@Override public Update<?> deserialize(JsonParser parser, DeserializationContext ctx)", "class_method_signature": "UpdateDeserializer.deserialize(JsonParser parser, DeserializationContext ctx)", "testcase": false, "constructor": false}], "file": "stardao-core/src/main/java/io/stardog/stardao/jackson/UpdateDeserializer.java"}, "focal_method": {"identifier": "deserialize", "parameters": "(JsonParser parser, DeserializationContext ctx)", "modifiers": "@Override public", "return": "Update<?>", "body": "@Override\n    public Update<?> deserialize(JsonParser parser, DeserializationContext ctx) throws IOException {\n        ObjectMapper mapper = (ObjectMapper) parser.getCodec();\n\n        JsonNode node = mapper.readTree(parser);\n\n        ImmutableSet.Builder<String> setFields = ImmutableSet.builder();\n        ImmutableSet.Builder<String> removeFields = ImmutableSet.builder();\n        Map<String,JsonNode> setNodes = new HashMap<>();\n\n        Iterator<String> iter = node.fieldNames();\n        while (iter.hasNext()) {\n            String field = iter.next();\n            JsonNode value = node.get(field);\n            if (value instanceof NullNode) {\n                removeFields.add(field);\n            } else if (value instanceof TextNode && value.toString().equals(\"\\\"\\\"\")) {\n                removeFields.add(field);\n            } else {\n                setFields.add(field);\n                setNodes.put(field, value);\n            }\n        }\n        Object setObject = mapper.convertValue(setNodes, valueType);\n\n        return Update.of(setObject, setFields.build(), removeFields.build());\n    }", "signature": "Update<?> deserialize(JsonParser parser, DeserializationContext ctx)", "full_signature": "@Override public Update<?> deserialize(JsonParser parser, DeserializationContext ctx)", "class_method_signature": "UpdateDeserializer.deserialize(JsonParser parser, DeserializationContext ctx)", "testcase": false, "constructor": false, "invocations": ["getCodec", "readTree", "builder", "builder", "fieldNames", "hasNext", "next", "get", "add", "equals", "toString", "add", "add", "put", "convertValue", "of", "build", "build"]}, "repository": {"repo_id": 79784019, "url": "https://github.com/stardogventures/stardao", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 8, "size": 219, "license": "licensed"}}