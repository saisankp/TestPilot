{"test_class": {"identifier": "SseUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundles/org.openhab.core.io.rest.sse/src/test/java/org/openhab/core/io/rest/sse/internal/util/SseUtilTest.java"}, "test_case": {"identifier": "testValidInvalidFilters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidInvalidFilters() {\n        // invalid\n        assertThat(SseUtil.isValidTopicFilter(\"openhab/.*\"), is(false));\n        assertThat(SseUtil.isValidTopicFilter(\"openhab/\\\\w*/\"), is(false));\n        assertThat(SseUtil.isValidTopicFilter(\"sm.*/test/\"), is(false));\n        assertThat(SseUtil.isValidTopicFilter(\"openhab.*\"), is(false));\n\n        // valid\n        assertThat(SseUtil.isValidTopicFilter(\"openhab\"), is(true));\n        assertThat(SseUtil.isValidTopicFilter(\"\"), is(true));\n        assertThat(SseUtil.isValidTopicFilter(\", openhab/*\"), is(true));\n        assertThat(SseUtil.isValidTopicFilter(\"openhab,qivicon\"), is(true));\n        assertThat(SseUtil.isValidTopicFilter(\"openhab , qivicon\"), is(true));\n        assertThat(SseUtil.isValidTopicFilter(\"openhab,    qivicon\"), is(true));\n        assertThat(SseUtil.isValidTopicFilter(\"openhab/test\"), is(true));\n        assertThat(SseUtil.isValidTopicFilter(\"openhab/test/test/test/test/test\"), is(true));\n        assertThat(SseUtil.isValidTopicFilter(\"openhab/test/test/test/test/test,    openhab/test/test/test/test/test\"),\n                is(true));\n        assertThat(\n                SseUtil.isValidTopicFilter(\n                        \"openhab/test/test/test/test/test,    openhab/test/test/test/test/test, openhab,qivicon\"),\n                is(true));\n        assertThat(SseUtil.isValidTopicFilter(\"////////////\"), is(true));\n        assertThat(SseUtil.isValidTopicFilter(\"*/added\"), is(true));\n        assertThat(SseUtil.isValidTopicFilter(\"*added\"), is(true));\n        assertThat(SseUtil.isValidTopicFilter(\"openhab/test/test:test:123/test\"), is(true));\n        assertThat(SseUtil.isValidTopicFilter(\"openhab/test/test-test-123-test:test:123/test\"), is(true));\n    }", "signature": "void testValidInvalidFilters()", "full_signature": "@Test public void testValidInvalidFilters()", "class_method_signature": "SseUtilTest.testValidInvalidFilters()", "testcase": true, "constructor": false, "invocations": ["assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is", "assertThat", "isValidTopicFilter", "is"]}, "focal_class": {"identifier": "SseUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String TOPIC_VALIDATE_PATTERN = \"(\\\\w*\\\\*?\\\\/?,?:?-?\\\\s*)*\";", "modifier": "static final", "type": "String", "declarator": "TOPIC_VALIDATE_PATTERN = \"(\\\\w*\\\\*?\\\\/?,?:?-?\\\\s*)*\"", "var_name": "TOPIC_VALIDATE_PATTERN"}], "methods": [{"identifier": "buildDTO", "parameters": "(final Event event)", "modifiers": "public static", "return": "EventDTO", "signature": "EventDTO buildDTO(final Event event)", "full_signature": "public static EventDTO buildDTO(final Event event)", "class_method_signature": "SseUtil.buildDTO(final Event event)", "testcase": false, "constructor": false}, {"identifier": "buildEvent", "parameters": "(OutboundSseEvent.Builder eventBuilder, EventDTO event)", "modifiers": "public static", "return": "OutboundSseEvent", "signature": "OutboundSseEvent buildEvent(OutboundSseEvent.Builder eventBuilder, EventDTO event)", "full_signature": "public static OutboundSseEvent buildEvent(OutboundSseEvent.Builder eventBuilder, EventDTO event)", "class_method_signature": "SseUtil.buildEvent(OutboundSseEvent.Builder eventBuilder, EventDTO event)", "testcase": false, "constructor": false}, {"identifier": "isValidTopicFilter", "parameters": "(@Nullable String topicFilter)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValidTopicFilter(@Nullable String topicFilter)", "full_signature": "public static boolean isValidTopicFilter(@Nullable String topicFilter)", "class_method_signature": "SseUtil.isValidTopicFilter(@Nullable String topicFilter)", "testcase": false, "constructor": false}, {"identifier": "convertToRegex", "parameters": "(@Nullable String topicFilter)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> convertToRegex(@Nullable String topicFilter)", "full_signature": "public static List<String> convertToRegex(@Nullable String topicFilter)", "class_method_signature": "SseUtil.convertToRegex(@Nullable String topicFilter)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.io.rest.sse/src/main/java/org/openhab/core/io/rest/sse/internal/util/SseUtil.java"}, "focal_method": {"identifier": "isValidTopicFilter", "parameters": "(@Nullable String topicFilter)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isValidTopicFilter(@Nullable String topicFilter) {\n        return topicFilter == null || topicFilter.isEmpty() || topicFilter.matches(TOPIC_VALIDATE_PATTERN);\n    }", "signature": "boolean isValidTopicFilter(@Nullable String topicFilter)", "full_signature": "public static boolean isValidTopicFilter(@Nullable String topicFilter)", "class_method_signature": "SseUtil.isValidTopicFilter(@Nullable String topicFilter)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "matches"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}