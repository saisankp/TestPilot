{"test_class": {"identifier": "HandicapGroupSetDaoTest", "superclass": "extends AbstractDaoTest", "interfaces": "", "fields": [{"original_string": "private HandicapGroupSetDao setDao;", "modifier": "private", "type": "HandicapGroupSetDao", "declarator": "setDao", "var_name": "setDao"}, {"original_string": "private HandicapGroupDao entityDao;", "modifier": "private", "type": "HandicapGroupDao", "declarator": "entityDao", "var_name": "entityDao"}, {"original_string": "@Rule\n    public DAOTestRule daoTestRule = getDaoTestRuleBuilder()\n            .addEntityClass(HandicapGroupSetHibernateEntity.class)\n            .addEntityClass(HandicapGroupHibernateEntity.class)\n            .build();", "modifier": "@Rule\n    public", "type": "DAOTestRule", "declarator": "daoTestRule = getDaoTestRuleBuilder()\n            .addEntityClass(HandicapGroupSetHibernateEntity.class)\n            .addEntityClass(HandicapGroupHibernateEntity.class)\n            .build()", "var_name": "daoTestRule"}], "file": "service/src/test/java/org/coner/core/hibernate/dao/HandicapGroupSetDaoTest.java"}, "test_case": {"identifier": "itShouldSaveMultipleSetsAssociatedToSameHandicapGroup", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void itShouldSaveMultipleSetsAssociatedToSameHandicapGroup() {\n        daoTestRule.inTransaction(() -> {\n            // create and store an entity\n            HandicapGroupHibernateEntity entity = HibernateEntityTestUtils.fullHandicapGroup();\n            entity.setId(null);\n            entityDao.create(entity);\n\n            // create and store a set1\n            HandicapGroupSetHibernateEntity setEntity1 = HibernateEntityTestUtils.fullHandicapGroupSet();\n            setEntity1.setId(null);\n            setEntity1.setHandicapGroups(Sets.newHashSet());\n            setDao.create(setEntity1);\n\n            // create and store a set2\n            HandicapGroupSetHibernateEntity setEntity2 = HibernateEntityTestUtils.fullHandicapGroupSet();\n            setEntity2.setId(null);\n            setEntity2.setHandicapGroups(Sets.newHashSet());\n            setDao.create(setEntity2);\n\n            assertThat(setEntity1.getId()).isNotEqualTo(setEntity2.getId()); // sanity check\n\n            // add entity to both sets and update\n            setEntity1.getHandicapGroups().add(entity);\n            setEntity2.getHandicapGroups().add(entity);\n            setDao.update(setEntity1);\n            setDao.update(setEntity2);\n        });\n    }", "signature": "void itShouldSaveMultipleSetsAssociatedToSameHandicapGroup()", "full_signature": "@Test public void itShouldSaveMultipleSetsAssociatedToSameHandicapGroup()", "class_method_signature": "HandicapGroupSetDaoTest.itShouldSaveMultipleSetsAssociatedToSameHandicapGroup()", "testcase": true, "constructor": false, "invocations": ["inTransaction", "fullHandicapGroup", "setId", "create", "fullHandicapGroupSet", "setId", "setHandicapGroups", "newHashSet", "create", "fullHandicapGroupSet", "setId", "setHandicapGroups", "newHashSet", "create", "isNotEqualTo", "assertThat", "getId", "getId", "add", "getHandicapGroups", "add", "getHandicapGroups", "update", "update"]}, "focal_class": {"identifier": "HandicapGroupSetDao", "superclass": "extends BaseHibernateEntityDao<HandicapGroupSetHibernateEntity>", "interfaces": "", "fields": [], "methods": [{"identifier": "HandicapGroupSetDao", "parameters": "(SessionFactory sessionFactory)", "modifiers": "@Inject public", "return": "", "signature": " HandicapGroupSetDao(SessionFactory sessionFactory)", "full_signature": "@Inject public  HandicapGroupSetDao(SessionFactory sessionFactory)", "class_method_signature": "HandicapGroupSetDao.HandicapGroupSetDao(SessionFactory sessionFactory)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(HandicapGroupSetHibernateEntity entity)", "modifiers": "@Override public", "return": "void", "signature": "void create(HandicapGroupSetHibernateEntity entity)", "full_signature": "@Override public void create(HandicapGroupSetHibernateEntity entity)", "class_method_signature": "HandicapGroupSetDao.create(HandicapGroupSetHibernateEntity entity)", "testcase": false, "constructor": false}, {"identifier": "findAll", "parameters": "()", "modifiers": "@Override public", "return": "List<HandicapGroupSetHibernateEntity>", "signature": "List<HandicapGroupSetHibernateEntity> findAll()", "full_signature": "@Override public List<HandicapGroupSetHibernateEntity> findAll()", "class_method_signature": "HandicapGroupSetDao.findAll()", "testcase": false, "constructor": false}, {"identifier": "findById", "parameters": "(String id)", "modifiers": "@Override public", "return": "HandicapGroupSetHibernateEntity", "signature": "HandicapGroupSetHibernateEntity findById(String id)", "full_signature": "@Override public HandicapGroupSetHibernateEntity findById(String id)", "class_method_signature": "HandicapGroupSetDao.findById(String id)", "testcase": false, "constructor": false}], "file": "service/src/main/java/org/coner/core/hibernate/dao/HandicapGroupSetDao.java"}, "focal_method": {"identifier": "create", "parameters": "(HandicapGroupSetHibernateEntity entity)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void create(HandicapGroupSetHibernateEntity entity) {\n        persist(entity);\n    }", "signature": "void create(HandicapGroupSetHibernateEntity entity)", "full_signature": "@Override public void create(HandicapGroupSetHibernateEntity entity)", "class_method_signature": "HandicapGroupSetDao.create(HandicapGroupSetHibernateEntity entity)", "testcase": false, "constructor": false, "invocations": ["persist"]}, "repository": {"repo_id": 28649714, "url": "https://github.com/caeos/coner-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 1027, "license": "licensed"}}