{"test_class": {"identifier": "DecimalStringSplitTest", "superclass": "", "interfaces": "", "fields": [], "file": "hbase0.98/hbase-common-0.98/src/test/java/com/kakao/hbase/common/util/DecimalStringSplitTest.java"}, "test_case": {"identifier": "testDigits", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDigits() throws Exception {\n        assertEquals(1, DecimalStringSplit.digits(0));\n        assertEquals(1, DecimalStringSplit.digits(1));\n        assertEquals(1, DecimalStringSplit.digits(9));\n        assertEquals(2, DecimalStringSplit.digits(10));\n        assertEquals(2, DecimalStringSplit.digits(99));\n        assertEquals(3, DecimalStringSplit.digits(100));\n        assertEquals(6, DecimalStringSplit.digits(100000));\n        assertEquals(1, DecimalStringSplit.digits(-1));\n    }", "signature": "void testDigits()", "full_signature": "@Test public void testDigits()", "class_method_signature": "DecimalStringSplitTest.testDigits()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "digits", "assertEquals", "digits", "assertEquals", "digits", "assertEquals", "digits", "assertEquals", "digits", "assertEquals", "digits", "assertEquals", "digits", "assertEquals", "digits"]}, "focal_class": {"identifier": "DecimalStringSplit", "superclass": "", "interfaces": "implements org.apache.hadoop.hbase.util.RegionSplitter.SplitAlgorithm", "fields": [{"original_string": "static final int MAX_NUM_REGIONS = 10000;", "modifier": "static final", "type": "int", "declarator": "MAX_NUM_REGIONS = 10000", "var_name": "MAX_NUM_REGIONS"}, {"original_string": "private final int cardinality;", "modifier": "private final", "type": "int", "declarator": "cardinality", "var_name": "cardinality"}], "methods": [{"identifier": "DecimalStringSplit", "parameters": "(int cardinality)", "modifiers": "public", "return": "", "signature": " DecimalStringSplit(int cardinality)", "full_signature": "public  DecimalStringSplit(int cardinality)", "class_method_signature": "DecimalStringSplit.DecimalStringSplit(int cardinality)", "testcase": false, "constructor": true}, {"identifier": "digits", "parameters": "(int number)", "modifiers": "@VisibleForTesting static", "return": "int", "signature": "int digits(int number)", "full_signature": "@VisibleForTesting static int digits(int number)", "class_method_signature": "DecimalStringSplit.digits(int number)", "testcase": false, "constructor": false}, {"identifier": "splitPoint", "parameters": "(int numRegions, int cardinality, int index)", "modifiers": "@VisibleForTesting static", "return": "int", "signature": "int splitPoint(int numRegions, int cardinality, int index)", "full_signature": "@VisibleForTesting static int splitPoint(int numRegions, int cardinality, int index)", "class_method_signature": "DecimalStringSplit.splitPoint(int numRegions, int cardinality, int index)", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(byte[] start, byte[] end)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] split(byte[] start, byte[] end)", "full_signature": "@Override public byte[] split(byte[] start, byte[] end)", "class_method_signature": "DecimalStringSplit.split(byte[] start, byte[] end)", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(int numRegions)", "modifiers": "@Override public", "return": "byte[][]", "signature": "byte[][] split(int numRegions)", "full_signature": "@Override public byte[][] split(int numRegions)", "class_method_signature": "DecimalStringSplit.split(int numRegions)", "testcase": false, "constructor": false}, {"identifier": "firstRow", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] firstRow()", "full_signature": "@Override public byte[] firstRow()", "class_method_signature": "DecimalStringSplit.firstRow()", "testcase": false, "constructor": false}, {"identifier": "lastRow", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] lastRow()", "full_signature": "@Override public byte[] lastRow()", "class_method_signature": "DecimalStringSplit.lastRow()", "testcase": false, "constructor": false}, {"identifier": "setFirstRow", "parameters": "(String userInput)", "modifiers": "@Override public", "return": "void", "signature": "void setFirstRow(String userInput)", "full_signature": "@Override public void setFirstRow(String userInput)", "class_method_signature": "DecimalStringSplit.setFirstRow(String userInput)", "testcase": false, "constructor": false}, {"identifier": "setLastRow", "parameters": "(String userInput)", "modifiers": "@Override public", "return": "void", "signature": "void setLastRow(String userInput)", "full_signature": "@Override public void setLastRow(String userInput)", "class_method_signature": "DecimalStringSplit.setLastRow(String userInput)", "testcase": false, "constructor": false}, {"identifier": "strToRow", "parameters": "(String input)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] strToRow(String input)", "full_signature": "@Override public byte[] strToRow(String input)", "class_method_signature": "DecimalStringSplit.strToRow(String input)", "testcase": false, "constructor": false}, {"identifier": "rowToStr", "parameters": "(byte[] row)", "modifiers": "@Override public", "return": "String", "signature": "String rowToStr(byte[] row)", "full_signature": "@Override public String rowToStr(byte[] row)", "class_method_signature": "DecimalStringSplit.rowToStr(byte[] row)", "testcase": false, "constructor": false}, {"identifier": "separator", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String separator()", "full_signature": "@Override public String separator()", "class_method_signature": "DecimalStringSplit.separator()", "testcase": false, "constructor": false}, {"identifier": "setFirstRow", "parameters": "(byte[] userInput)", "modifiers": "public", "return": "void", "signature": "void setFirstRow(byte[] userInput)", "full_signature": "public void setFirstRow(byte[] userInput)", "class_method_signature": "DecimalStringSplit.setFirstRow(byte[] userInput)", "testcase": false, "constructor": false}, {"identifier": "setLastRow", "parameters": "(byte[] userInput)", "modifiers": "public", "return": "void", "signature": "void setLastRow(byte[] userInput)", "full_signature": "public void setLastRow(byte[] userInput)", "class_method_signature": "DecimalStringSplit.setLastRow(byte[] userInput)", "testcase": false, "constructor": false}], "file": "hbase0.98/hbase-common-0.98/src/main/java/com/kakao/hbase/common/util/DecimalStringSplit.java"}, "focal_method": {"identifier": "digits", "parameters": "(int number)", "modifiers": "@VisibleForTesting static", "return": "int", "body": "@VisibleForTesting\n    static int digits(int number) {\n        return number == 0 ? 1 : (int) (Math.log10(Math.abs(number)) + 1);\n    }", "signature": "int digits(int number)", "full_signature": "@VisibleForTesting static int digits(int number)", "class_method_signature": "DecimalStringSplit.digits(int number)", "testcase": false, "constructor": false, "invocations": ["log10", "abs"]}, "repository": {"repo_id": 46396068, "url": "https://github.com/kakao/hbase-tools", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 49, "size": 1758, "license": "licensed"}}