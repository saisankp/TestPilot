{"test_class": {"identifier": "ResourceContextTest", "superclass": "", "interfaces": "", "fields": [], "file": "libs/java/server_common/src/test/java/com/yahoo/athenz/common/server/rest/ResourceContextTest.java"}, "test_case": {"identifier": "testAuthorize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAuthorize() {\n        HttpServletRequest httpServletRequest = Mockito.mock(HttpServletRequest.class);\n        HttpServletResponse httpServletResponse = Mockito.mock(HttpServletResponse.class);\n        Principal principal = Mockito.mock(Principal.class);\n        Authorizer authorizer = Mockito.mock(Authorizer.class);\n        Mockito.when(authorizer.access(ArgumentMatchers.anyString(), ArgumentMatchers.anyString(),\n                ArgumentMatchers.any(Principal.class), ArgumentMatchers.anyString())).thenReturn(true);\n        Authority authority = Mockito.mock(Authority.class);\n        Mockito.when(authority.getCredSource()).thenReturn(Authority.CredSource.HEADER);\n        Mockito.when(authority.getHeader()).thenReturn(\"Athenz-Principal-Auth\");\n        Mockito.when(httpServletRequest.getHeader(\"Athenz-Principal-Auth\")).thenReturn(\"Creds\");\n        Mockito.when(authority.authenticate(ArgumentMatchers.any(), ArgumentMatchers.any(),\n                ArgumentMatchers.any(), ArgumentMatchers.any())).thenReturn(principal);\n        Http.AuthorityList authorities = new Http.AuthorityList();\n        authorities.add(authority);\n        ResourceContext context = new ResourceContext(httpServletRequest, httpServletResponse,\n                authorities, authorizer);\n\n        context.authorize(\"action\", \"resource\", \"domain\");\n        assertTrue(true);\n    }", "signature": "void testAuthorize()", "full_signature": "@Test public void testAuthorize()", "class_method_signature": "ResourceContextTest.testAuthorize()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "mock", "mock", "thenReturn", "when", "access", "anyString", "anyString", "any", "anyString", "mock", "thenReturn", "when", "getCredSource", "thenReturn", "when", "getHeader", "thenReturn", "when", "getHeader", "thenReturn", "when", "authenticate", "any", "any", "any", "any", "add", "authorize", "assertTrue"]}, "focal_class": {"identifier": "ResourceContext", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static boolean SEND_MULTIPLE_WWW_AUTHENTICATE_HEADERS = Boolean.parseBoolean(\n            System.getProperty(\"athenz.http.www-authenticate.multiple-headers\", \"true\"));", "modifier": "private static", "type": "boolean", "declarator": "SEND_MULTIPLE_WWW_AUTHENTICATE_HEADERS = Boolean.parseBoolean(\n            System.getProperty(\"athenz.http.www-authenticate.multiple-headers\", \"true\"))", "var_name": "SEND_MULTIPLE_WWW_AUTHENTICATE_HEADERS"}, {"original_string": "private final HttpServletRequest request;", "modifier": "private final", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "private final HttpServletResponse response;", "modifier": "private final", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "private final Http.AuthorityList authorities;", "modifier": "private final", "type": "Http.AuthorityList", "declarator": "authorities", "var_name": "authorities"}, {"original_string": "private final Authorizer authorizer;", "modifier": "private final", "type": "Authorizer", "declarator": "authorizer", "var_name": "authorizer"}, {"original_string": "protected Principal principal;", "modifier": "protected", "type": "Principal", "declarator": "principal", "var_name": "principal"}, {"original_string": "protected boolean checked;", "modifier": "protected", "type": "boolean", "declarator": "checked", "var_name": "checked"}, {"original_string": "private String requestDomain;", "modifier": "private", "type": "String", "declarator": "requestDomain", "var_name": "requestDomain"}], "methods": [{"identifier": "ResourceContext", "parameters": "(HttpServletRequest request, HttpServletResponse response,\n            Http.AuthorityList authorities, Authorizer authorizer)", "modifiers": "public", "return": "", "signature": " ResourceContext(HttpServletRequest request, HttpServletResponse response,\n            Http.AuthorityList authorities, Authorizer authorizer)", "full_signature": "public  ResourceContext(HttpServletRequest request, HttpServletResponse response,\n            Http.AuthorityList authorities, Authorizer authorizer)", "class_method_signature": "ResourceContext.ResourceContext(HttpServletRequest request, HttpServletResponse response,\n            Http.AuthorityList authorities, Authorizer authorizer)", "testcase": false, "constructor": true}, {"identifier": "setSendMultipleWwwAuthenticateHeaders", "parameters": "(boolean bSendMultipleHeaders)", "modifiers": "public static", "return": "void", "signature": "void setSendMultipleWwwAuthenticateHeaders(boolean bSendMultipleHeaders)", "full_signature": "public static void setSendMultipleWwwAuthenticateHeaders(boolean bSendMultipleHeaders)", "class_method_signature": "ResourceContext.setSendMultipleWwwAuthenticateHeaders(boolean bSendMultipleHeaders)", "testcase": false, "constructor": false}, {"identifier": "request", "parameters": "()", "modifiers": "public", "return": "HttpServletRequest", "signature": "HttpServletRequest request()", "full_signature": "public HttpServletRequest request()", "class_method_signature": "ResourceContext.request()", "testcase": false, "constructor": false}, {"identifier": "response", "parameters": "()", "modifiers": "public", "return": "HttpServletResponse", "signature": "HttpServletResponse response()", "full_signature": "public HttpServletResponse response()", "class_method_signature": "ResourceContext.response()", "testcase": false, "constructor": false}, {"identifier": "principal", "parameters": "()", "modifiers": "public", "return": "Principal", "signature": "Principal principal()", "full_signature": "public Principal principal()", "class_method_signature": "ResourceContext.principal()", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "()", "modifiers": "public", "return": "Principal", "signature": "Principal authenticate()", "full_signature": "public Principal authenticate()", "class_method_signature": "ResourceContext.authenticate()", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(boolean optionalAuth)", "modifiers": "public", "return": "Principal", "signature": "Principal authenticate(boolean optionalAuth)", "full_signature": "public Principal authenticate(boolean optionalAuth)", "class_method_signature": "ResourceContext.authenticate(boolean optionalAuth)", "testcase": false, "constructor": false}, {"identifier": "authorize", "parameters": "(String action, String resource, String trustedDomain)", "modifiers": "public", "return": "void", "signature": "void authorize(String action, String resource, String trustedDomain)", "full_signature": "public void authorize(String action, String resource, String trustedDomain)", "class_method_signature": "ResourceContext.authorize(String action, String resource, String trustedDomain)", "testcase": false, "constructor": false}, {"identifier": "sendAuthenticateChallenges", "parameters": "(ResourceException exc)", "modifiers": "public", "return": "void", "signature": "void sendAuthenticateChallenges(ResourceException exc)", "full_signature": "public void sendAuthenticateChallenges(ResourceException exc)", "class_method_signature": "ResourceContext.sendAuthenticateChallenges(ResourceException exc)", "testcase": false, "constructor": false}, {"identifier": "getRequestDomain", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRequestDomain()", "full_signature": "public String getRequestDomain()", "class_method_signature": "ResourceContext.getRequestDomain()", "testcase": false, "constructor": false}, {"identifier": "setRequestDomain", "parameters": "(String requestDomain)", "modifiers": "public", "return": "void", "signature": "void setRequestDomain(String requestDomain)", "full_signature": "public void setRequestDomain(String requestDomain)", "class_method_signature": "ResourceContext.setRequestDomain(String requestDomain)", "testcase": false, "constructor": false}], "file": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/rest/ResourceContext.java"}, "focal_method": {"identifier": "authorize", "parameters": "(String action, String resource, String trustedDomain)", "modifiers": "public", "return": "void", "body": "public void authorize(String action, String resource, String trustedDomain) {\n        principal = authenticate();\n        Http.authorize(authorizer, principal, action, resource, trustedDomain);\n    }", "signature": "void authorize(String action, String resource, String trustedDomain)", "full_signature": "public void authorize(String action, String resource, String trustedDomain)", "class_method_signature": "ResourceContext.authorize(String action, String resource, String trustedDomain)", "testcase": false, "constructor": false, "invocations": ["authenticate", "authorize"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}