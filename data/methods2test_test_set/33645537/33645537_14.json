{"test_class": {"identifier": "StupidSortTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Comparator<Integer> ascOrderComparator = new Comparator<Integer>() {\n\t\t@Override\n\t\tpublic int compare(Integer a, Integer b) {\n\t\t\treturn a - b;\n\t\t}\n\t};", "modifier": "private final", "type": "Comparator<Integer>", "declarator": "ascOrderComparator = new Comparator<Integer>() {\n\t\t@Override\n\t\tpublic int compare(Integer a, Integer b) {\n\t\t\treturn a - b;\n\t\t}\n\t}", "var_name": "ascOrderComparator"}, {"original_string": "private final Comparator<Integer> descOrderComparator = new Comparator<Integer>() {\n\t\t@Override\n\t\tpublic int compare(Integer a, Integer b) {\n\t\t\treturn b - a;\n\t\t}\n\t};", "modifier": "private final", "type": "Comparator<Integer>", "declarator": "descOrderComparator = new Comparator<Integer>() {\n\t\t@Override\n\t\tpublic int compare(Integer a, Integer b) {\n\t\t\treturn b - a;\n\t\t}\n\t}", "var_name": "descOrderComparator"}], "file": "algs/src/test/java/com/github/kowshik/bigo/sorting/StupidSortTest.java"}, "test_case": {"identifier": "ascendingOrderSort", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void ascendingOrderSort() {\n\t\tint[] array = { 5, 4, 3, 2, 1 };\n\t\tint[] sorted = StupidSort.stupidSort(array, ascOrderComparator);\n\t\tassertArrayEquals(\"Failure => Array returned is not sorted.\", sorted,\n\t\t\t\tnew int[] { 1, 2, 3, 4, 5 });\n\t}", "signature": "void ascendingOrderSort()", "full_signature": "@Test public void ascendingOrderSort()", "class_method_signature": "StupidSortTest.ascendingOrderSort()", "testcase": true, "constructor": false, "invocations": ["stupidSort", "assertArrayEquals"]}, "focal_class": {"identifier": "StupidSort", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "swap", "parameters": "(int[] array, int foo, int bar)", "modifiers": "public static", "return": "void", "signature": "void swap(int[] array, int foo, int bar)", "full_signature": "public static void swap(int[] array, int foo, int bar)", "class_method_signature": "StupidSort.swap(int[] array, int foo, int bar)", "testcase": false, "constructor": false}, {"identifier": "stupidSort", "parameters": "(int[] array, Comparator<Integer> comparator)", "modifiers": "public static", "return": "int[]", "signature": "int[] stupidSort(int[] array, Comparator<Integer> comparator)", "full_signature": "public static int[] stupidSort(int[] array, Comparator<Integer> comparator)", "class_method_signature": "StupidSort.stupidSort(int[] array, Comparator<Integer> comparator)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/kowshik/bigo/sorting/StupidSort.java"}, "focal_method": {"identifier": "stupidSort", "parameters": "(int[] array, Comparator<Integer> comparator)", "modifiers": "public static", "return": "int[]", "body": "public static int[] stupidSort(int[] array, Comparator<Integer> comparator) {\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tfor (int j = i + 1; j < array.length; j++) {\n\t\t\t\tif (comparator.compare(array[i], array[j]) > 0) {\n\t\t\t\t\tswap(array, i, j);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn array;\n\t}", "signature": "int[] stupidSort(int[] array, Comparator<Integer> comparator)", "full_signature": "public static int[] stupidSort(int[] array, Comparator<Integer> comparator)", "class_method_signature": "StupidSort.stupidSort(int[] array, Comparator<Integer> comparator)", "testcase": false, "constructor": false, "invocations": ["compare", "swap"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}