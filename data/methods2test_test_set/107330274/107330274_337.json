{"test_class": {"identifier": "DefaultTaskToPodConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final S3LogLocation DEFAULT_S3_LOG_LOCATION = new S3LogLocation(\n            \"myAccount\", \"myAccountId\", \"myRegion\", \"defaultBucket\", \"key\"\n    );", "modifier": "private static final", "type": "S3LogLocation", "declarator": "DEFAULT_S3_LOG_LOCATION = new S3LogLocation(\n            \"myAccount\", \"myAccountId\", \"myRegion\", \"defaultBucket\", \"key\"\n    )", "var_name": "DEFAULT_S3_LOG_LOCATION"}, {"original_string": "private final DirectKubeConfiguration configuration = mock(DirectKubeConfiguration.class);", "modifier": "private final", "type": "DirectKubeConfiguration", "declarator": "configuration = mock(DirectKubeConfiguration.class)", "var_name": "configuration"}, {"original_string": "private final PodAffinityFactory podAffinityFactory = mock(PodAffinityFactory.class);", "modifier": "private final", "type": "PodAffinityFactory", "declarator": "podAffinityFactory = mock(PodAffinityFactory.class)", "var_name": "podAffinityFactory"}, {"original_string": "private final TaintTolerationFactory taintTolerationFactory = mock(TaintTolerationFactory.class);", "modifier": "private final", "type": "TaintTolerationFactory", "declarator": "taintTolerationFactory = mock(TaintTolerationFactory.class)", "var_name": "taintTolerationFactory"}, {"original_string": "private final LogStorageInfo<Task> logStorageInfo = mock(LogStorageInfo.class);", "modifier": "private final", "type": "LogStorageInfo<Task>", "declarator": "logStorageInfo = mock(LogStorageInfo.class)", "var_name": "logStorageInfo"}, {"original_string": "private final DefaultTaskToPodConverter converter = new DefaultTaskToPodConverter(\n            configuration,\n            podAffinityFactory,\n            taintTolerationFactory,\n            logStorageInfo\n    );", "modifier": "private final", "type": "DefaultTaskToPodConverter", "declarator": "converter = new DefaultTaskToPodConverter(\n            configuration,\n            podAffinityFactory,\n            taintTolerationFactory,\n            logStorageInfo\n    )", "var_name": "converter"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/mesos/kubeapiserver/direct/DefaultTaskToPodConverterTest.java"}, "test_case": {"identifier": "testByteResourceUnits", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testByteResourceUnits() {\n        ContainerResources containerResources = ContainerResources.newBuilder()\n                .withMemoryMB(2)\n                .withDiskMB(4)\n                .withNetworkMbps(128)\n                .build();\n\n        // Legacy\n        when(configuration.isBytePodResourceEnabled()).thenReturn(false);\n        V1ResourceRequirements podResources = converter.buildV1ResourceRequirements(containerResources);\n        assertThat(podResources.getLimits().get(\"memory\").toSuffixedString()).isEqualTo(\"2\");\n        assertThat(podResources.getLimits().get(\"ephemeral-storage\").toSuffixedString()).isEqualTo(\"4\");\n        assertThat(podResources.getLimits().get(\"titus/network\").toSuffixedString()).isEqualTo(\"128\");\n\n        // Bytes\n        when(configuration.isBytePodResourceEnabled()).thenReturn(true);\n        podResources = converter.buildV1ResourceRequirements(containerResources);\n        assertThat(podResources.getLimits().get(\"memory\").toSuffixedString()).isEqualTo(\"2Mi\");\n        assertThat(podResources.getLimits().get(\"ephemeral-storage\").toSuffixedString()).isEqualTo(\"4Mi\");\n        assertThat(podResources.getLimits().get(\"titus/network\").toSuffixedString()).isEqualTo(\"128M\");\n    }", "signature": "void testByteResourceUnits()", "full_signature": "@Test public void testByteResourceUnits()", "class_method_signature": "DefaultTaskToPodConverterTest.testByteResourceUnits()", "testcase": true, "constructor": false, "invocations": ["build", "withNetworkMbps", "withDiskMB", "withMemoryMB", "newBuilder", "thenReturn", "when", "isBytePodResourceEnabled", "buildV1ResourceRequirements", "isEqualTo", "assertThat", "toSuffixedString", "get", "getLimits", "isEqualTo", "assertThat", "toSuffixedString", "get", "getLimits", "isEqualTo", "assertThat", "toSuffixedString", "get", "getLimits", "thenReturn", "when", "isBytePodResourceEnabled", "buildV1ResourceRequirements", "isEqualTo", "assertThat", "toSuffixedString", "get", "getLimits", "isEqualTo", "assertThat", "toSuffixedString", "get", "getLimits", "isEqualTo", "assertThat", "toSuffixedString", "get", "getLimits"]}, "focal_class": {"identifier": "DefaultTaskToPodConverter", "superclass": "", "interfaces": "implements TaskToPodConverter", "fields": [{"original_string": "private static final String PASSTHROUGH_ATTRIBUTES_PREFIX = \"titusParameter.agent.\";", "modifier": "private static final", "type": "String", "declarator": "PASSTHROUGH_ATTRIBUTES_PREFIX = \"titusParameter.agent.\"", "var_name": "PASSTHROUGH_ATTRIBUTES_PREFIX"}, {"original_string": "static final String S3_WRITER_ROLE = PASSTHROUGH_ATTRIBUTES_PREFIX + \"log.s3WriterRole\";", "modifier": "static final", "type": "String", "declarator": "S3_WRITER_ROLE = PASSTHROUGH_ATTRIBUTES_PREFIX + \"log.s3WriterRole\"", "var_name": "S3_WRITER_ROLE"}, {"original_string": "static final String S3_BUCKET_NAME = PASSTHROUGH_ATTRIBUTES_PREFIX + \"log.s3BucketName\";", "modifier": "static final", "type": "String", "declarator": "S3_BUCKET_NAME = PASSTHROUGH_ATTRIBUTES_PREFIX + \"log.s3BucketName\"", "var_name": "S3_BUCKET_NAME"}, {"original_string": "private static final String TITUS_AGENT_ATTRIBUTE_PREFIX = \"titus.agent.\";", "modifier": "private static final", "type": "String", "declarator": "TITUS_AGENT_ATTRIBUTE_PREFIX = \"titus.agent.\"", "var_name": "TITUS_AGENT_ATTRIBUTE_PREFIX"}, {"original_string": "private static final String OWNER_EMAIL_ATTRIBUTE = TITUS_AGENT_ATTRIBUTE_PREFIX + \"ownerEmail\";", "modifier": "private static final", "type": "String", "declarator": "OWNER_EMAIL_ATTRIBUTE = TITUS_AGENT_ATTRIBUTE_PREFIX + \"ownerEmail\"", "var_name": "OWNER_EMAIL_ATTRIBUTE"}, {"original_string": "private static final String JOB_TYPE_ATTRIBUTE = TITUS_AGENT_ATTRIBUTE_PREFIX + \"jobType\";", "modifier": "private static final", "type": "String", "declarator": "JOB_TYPE_ATTRIBUTE = TITUS_AGENT_ATTRIBUTE_PREFIX + \"jobType\"", "var_name": "JOB_TYPE_ATTRIBUTE"}, {"original_string": "private static final String JOB_ID_ATTRIBUTE = TITUS_AGENT_ATTRIBUTE_PREFIX + \"jobId\";", "modifier": "private static final", "type": "String", "declarator": "JOB_ID_ATTRIBUTE = TITUS_AGENT_ATTRIBUTE_PREFIX + \"jobId\"", "var_name": "JOB_ID_ATTRIBUTE"}, {"original_string": "private static final String APPLICATION_NAME_ATTRIBUTE = TITUS_AGENT_ATTRIBUTE_PREFIX + \"applicationName\";", "modifier": "private static final", "type": "String", "declarator": "APPLICATION_NAME_ATTRIBUTE = TITUS_AGENT_ATTRIBUTE_PREFIX + \"applicationName\"", "var_name": "APPLICATION_NAME_ATTRIBUTE"}, {"original_string": "private static final String RUNTIME_PREDICTION_ATTRIBUTE = TITUS_AGENT_ATTRIBUTE_PREFIX + \"runtimePredictionSec\";", "modifier": "private static final", "type": "String", "declarator": "RUNTIME_PREDICTION_ATTRIBUTE = TITUS_AGENT_ATTRIBUTE_PREFIX + \"runtimePredictionSec\"", "var_name": "RUNTIME_PREDICTION_ATTRIBUTE"}, {"original_string": "private static final String RUNTIME_PREDICTIONS_AVAILABLE_ATTRIBUTE = TITUS_AGENT_ATTRIBUTE_PREFIX + \"runtimePredictionsAvailable\";", "modifier": "private static final", "type": "String", "declarator": "RUNTIME_PREDICTIONS_AVAILABLE_ATTRIBUTE = TITUS_AGENT_ATTRIBUTE_PREFIX + \"runtimePredictionsAvailable\"", "var_name": "RUNTIME_PREDICTIONS_AVAILABLE_ATTRIBUTE"}, {"original_string": "private static final long POD_TERMINATION_GRACE_PERIOD_SECONDS = 600L;", "modifier": "private static final", "type": "long", "declarator": "POD_TERMINATION_GRACE_PERIOD_SECONDS = 600L", "var_name": "POD_TERMINATION_GRACE_PERIOD_SECONDS"}, {"original_string": "private static final String NEVER_RESTART_POLICY = \"Never\";", "modifier": "private static final", "type": "String", "declarator": "NEVER_RESTART_POLICY = \"Never\"", "var_name": "NEVER_RESTART_POLICY"}, {"original_string": "private static final String DEFAULT_DNS_POLICY = \"Default\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_DNS_POLICY = \"Default\"", "var_name": "DEFAULT_DNS_POLICY"}, {"original_string": "private static final String ARN_PREFIX = \"arn:aws:iam::\";", "modifier": "private static final", "type": "String", "declarator": "ARN_PREFIX = \"arn:aws:iam::\"", "var_name": "ARN_PREFIX"}, {"original_string": "private static final String ARN_SUFFIX = \":role/\";", "modifier": "private static final", "type": "String", "declarator": "ARN_SUFFIX = \":role/\"", "var_name": "ARN_SUFFIX"}, {"original_string": "private static final Pattern IAM_PROFILE_RE = Pattern.compile(ARN_PREFIX + \"(\\\\d+)\" + ARN_SUFFIX + \"\\\\S+\");", "modifier": "private static final", "type": "Pattern", "declarator": "IAM_PROFILE_RE = Pattern.compile(ARN_PREFIX + \"(\\\\d+)\" + ARN_SUFFIX + \"\\\\S+\")", "var_name": "IAM_PROFILE_RE"}, {"original_string": "private static final int SOFT_MAX_SKEW = 100_000;", "modifier": "private static final", "type": "int", "declarator": "SOFT_MAX_SKEW = 100_000", "var_name": "SOFT_MAX_SKEW"}, {"original_string": "private final DirectKubeConfiguration configuration;", "modifier": "private final", "type": "DirectKubeConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private final PodAffinityFactory podAffinityFactory;", "modifier": "private final", "type": "PodAffinityFactory", "declarator": "podAffinityFactory", "var_name": "podAffinityFactory"}, {"original_string": "private final TaintTolerationFactory taintTolerationFactory;", "modifier": "private final", "type": "TaintTolerationFactory", "declarator": "taintTolerationFactory", "var_name": "taintTolerationFactory"}, {"original_string": "private final LogStorageInfo<Task> logStorageInfo;", "modifier": "private final", "type": "LogStorageInfo<Task>", "declarator": "logStorageInfo", "var_name": "logStorageInfo"}, {"original_string": "private final String iamArnPrefix;", "modifier": "private final", "type": "String", "declarator": "iamArnPrefix", "var_name": "iamArnPrefix"}], "methods": [{"identifier": "DefaultTaskToPodConverter", "parameters": "(DirectKubeConfiguration configuration,\n                                     PodAffinityFactory podAffinityFactory,\n                                     TaintTolerationFactory taintTolerationFactory,\n                                     LogStorageInfo<Task> logStorageInfo)", "modifiers": "@Inject public", "return": "", "signature": " DefaultTaskToPodConverter(DirectKubeConfiguration configuration,\n                                     PodAffinityFactory podAffinityFactory,\n                                     TaintTolerationFactory taintTolerationFactory,\n                                     LogStorageInfo<Task> logStorageInfo)", "full_signature": "@Inject public  DefaultTaskToPodConverter(DirectKubeConfiguration configuration,\n                                     PodAffinityFactory podAffinityFactory,\n                                     TaintTolerationFactory taintTolerationFactory,\n                                     LogStorageInfo<Task> logStorageInfo)", "class_method_signature": "DefaultTaskToPodConverter.DefaultTaskToPodConverter(DirectKubeConfiguration configuration,\n                                     PodAffinityFactory podAffinityFactory,\n                                     TaintTolerationFactory taintTolerationFactory,\n                                     LogStorageInfo<Task> logStorageInfo)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(Job<?> job, Task task)", "modifiers": "@Override public", "return": "V1Pod", "signature": "V1Pod apply(Job<?> job, Task task)", "full_signature": "@Override public V1Pod apply(Job<?> job, Task task)", "class_method_signature": "DefaultTaskToPodConverter.apply(Job<?> job, Task task)", "testcase": false, "constructor": false}, {"identifier": "buildV1ResourceRequirements", "parameters": "(ContainerResources containerResources)", "modifiers": "@VisibleForTesting", "return": "V1ResourceRequirements", "signature": "V1ResourceRequirements buildV1ResourceRequirements(ContainerResources containerResources)", "full_signature": "@VisibleForTesting V1ResourceRequirements buildV1ResourceRequirements(ContainerResources containerResources)", "class_method_signature": "DefaultTaskToPodConverter.buildV1ResourceRequirements(ContainerResources containerResources)", "testcase": false, "constructor": false}, {"identifier": "buildContainerInfo", "parameters": "(Job<?> job, Task task)", "modifiers": "private", "return": "TitanProtos.ContainerInfo", "signature": "TitanProtos.ContainerInfo buildContainerInfo(Job<?> job, Task task)", "full_signature": "private TitanProtos.ContainerInfo buildContainerInfo(Job<?> job, Task task)", "class_method_signature": "DefaultTaskToPodConverter.buildContainerInfo(Job<?> job, Task task)", "testcase": false, "constructor": false}, {"identifier": "appendS3WriterRole", "parameters": "(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Job<?> job, Task task)", "modifiers": "@VisibleForTesting", "return": "void", "signature": "void appendS3WriterRole(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Job<?> job, Task task)", "full_signature": "@VisibleForTesting void appendS3WriterRole(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Job<?> job, Task task)", "class_method_signature": "DefaultTaskToPodConverter.appendS3WriterRole(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Job<?> job, Task task)", "testcase": false, "constructor": false}, {"identifier": "setImage", "parameters": "(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Image image)", "modifiers": "private", "return": "void", "signature": "void setImage(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Image image)", "full_signature": "private void setImage(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Image image)", "class_method_signature": "DefaultTaskToPodConverter.setImage(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Image image)", "testcase": false, "constructor": false}, {"identifier": "setEntryPointCommand", "parameters": "(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Container container, Map<String, String> jobAttributes)", "modifiers": "private", "return": "void", "signature": "void setEntryPointCommand(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Container container, Map<String, String> jobAttributes)", "full_signature": "private void setEntryPointCommand(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Container container, Map<String, String> jobAttributes)", "class_method_signature": "DefaultTaskToPodConverter.setEntryPointCommand(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Container container, Map<String, String> jobAttributes)", "testcase": false, "constructor": false}, {"identifier": "shouldSkipEntryPointJoin", "parameters": "(Map<String, String> jobAttributes)", "modifiers": "private", "return": "boolean", "signature": "boolean shouldSkipEntryPointJoin(Map<String, String> jobAttributes)", "full_signature": "private boolean shouldSkipEntryPointJoin(Map<String, String> jobAttributes)", "class_method_signature": "DefaultTaskToPodConverter.shouldSkipEntryPointJoin(Map<String, String> jobAttributes)", "testcase": false, "constructor": false}, {"identifier": "setSignedAddressAllocation", "parameters": "(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Task task, ContainerResources containerResources)", "modifiers": "private", "return": "void", "signature": "void setSignedAddressAllocation(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Task task, ContainerResources containerResources)", "full_signature": "private void setSignedAddressAllocation(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Task task, ContainerResources containerResources)", "class_method_signature": "DefaultTaskToPodConverter.setSignedAddressAllocation(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Task task, ContainerResources containerResources)", "testcase": false, "constructor": false}, {"identifier": "setJobAcceptedTimestamp", "parameters": "(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Job<?> job)", "modifiers": "private", "return": "void", "signature": "void setJobAcceptedTimestamp(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Job<?> job)", "full_signature": "private void setJobAcceptedTimestamp(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Job<?> job)", "class_method_signature": "DefaultTaskToPodConverter.setJobAcceptedTimestamp(TitanProtos.ContainerInfo.Builder containerInfoBuilder, Job<?> job)", "testcase": false, "constructor": false}, {"identifier": "setupEfsMounts", "parameters": "(List<EfsMount> efsMounts)", "modifiers": "private", "return": "List<TitanProtos.ContainerInfo.EfsConfigInfo>", "signature": "List<TitanProtos.ContainerInfo.EfsConfigInfo> setupEfsMounts(List<EfsMount> efsMounts)", "full_signature": "private List<TitanProtos.ContainerInfo.EfsConfigInfo> setupEfsMounts(List<EfsMount> efsMounts)", "class_method_signature": "DefaultTaskToPodConverter.setupEfsMounts(List<EfsMount> efsMounts)", "testcase": false, "constructor": false}, {"identifier": "buildTopologySpreadConstraints", "parameters": "(Job<?> job)", "modifiers": "@VisibleForTesting", "return": "List<V1TopologySpreadConstraint>", "signature": "List<V1TopologySpreadConstraint> buildTopologySpreadConstraints(Job<?> job)", "full_signature": "@VisibleForTesting List<V1TopologySpreadConstraint> buildTopologySpreadConstraints(Job<?> job)", "class_method_signature": "DefaultTaskToPodConverter.buildTopologySpreadConstraints(Job<?> job)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/DefaultTaskToPodConverter.java"}, "focal_method": {"identifier": "buildV1ResourceRequirements", "parameters": "(ContainerResources containerResources)", "modifiers": "@VisibleForTesting", "return": "V1ResourceRequirements", "body": "@VisibleForTesting\n    V1ResourceRequirements buildV1ResourceRequirements(ContainerResources containerResources) {\n        Map<String, Quantity> requests = new HashMap<>();\n        Map<String, Quantity> limits = new HashMap<>();\n\n        requests.put(\"cpu\", new Quantity(String.valueOf(containerResources.getCpu())));\n        limits.put(\"cpu\", new Quantity(String.valueOf(containerResources.getCpu())));\n\n        requests.put(\"nvidia.com/gpu\", new Quantity(String.valueOf(containerResources.getGpu())));\n        limits.put(\"nvidia.com/gpu\", new Quantity(String.valueOf(containerResources.getGpu())));\n\n        Quantity memory;\n        Quantity disk;\n        Quantity network;\n        if (configuration.isBytePodResourceEnabled()) {\n            memory = new Quantity(containerResources.getMemoryMB() + \"Mi\");\n            disk = new Quantity(containerResources.getDiskMB() + \"Mi\");\n            network = new Quantity(containerResources.getNetworkMbps() + \"M\");\n        } else {\n            memory = new Quantity(String.valueOf(containerResources.getMemoryMB()));\n            disk = new Quantity(String.valueOf(containerResources.getDiskMB()));\n            network = new Quantity(String.valueOf(containerResources.getNetworkMbps()));\n        }\n\n        requests.put(\"memory\", memory);\n        limits.put(\"memory\", memory);\n\n        requests.put(\"ephemeral-storage\", disk);\n        limits.put(\"ephemeral-storage\", disk);\n\n        requests.put(\"titus/network\", network);\n        limits.put(\"titus/network\", network);\n\n        return new V1ResourceRequirements().requests(requests).limits(limits);\n    }", "signature": "V1ResourceRequirements buildV1ResourceRequirements(ContainerResources containerResources)", "full_signature": "@VisibleForTesting V1ResourceRequirements buildV1ResourceRequirements(ContainerResources containerResources)", "class_method_signature": "DefaultTaskToPodConverter.buildV1ResourceRequirements(ContainerResources containerResources)", "testcase": false, "constructor": false, "invocations": ["put", "valueOf", "getCpu", "put", "valueOf", "getCpu", "put", "valueOf", "getGpu", "put", "valueOf", "getGpu", "isBytePodResourceEnabled", "getMemoryMB", "getDiskMB", "getNetworkMbps", "valueOf", "getMemoryMB", "valueOf", "getDiskMB", "valueOf", "getNetworkMbps", "put", "put", "put", "put", "put", "put", "limits", "requests"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}