{"test_class": {"identifier": "HKeySegmentTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SCHEMA = \"hkeytest\";", "modifier": "private static final", "type": "String", "declarator": "SCHEMA = \"hkeytest\"", "var_name": "SCHEMA"}], "file": "fdb-sql-layer-core/src/test/java/com/foundationdb/ais/model/HKeySegmentTest.java"}, "test_case": {"identifier": "multiColumnPkNoCascade", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void multiColumnPkNoCascade() {\n        AkibanInformationSchema ais = AISBBasedBuilder.create(SCHEMA, MTypesTranslator.INSTANCE)\n                .table(\"c\")\n                    .colInt(\"cid1\")\n                    .colInt(\"cid2\")\n                    .colString(\"name\", 64)\n                    .pk(\"cid1\", \"cid2\")\n                .table(\"o\")\n                    .colInt(\"oid\")\n                    .colInt(\"c_id1\")\n                    .colInt(\"c_id2\")\n                    .colString(\"date\", 32)\n                    .pk(\"oid\")\n                    .joinTo(\"c\").on(\"c_id1\", \"cid1\").and(\"c_id2\", \"cid2\")\n                .table(\"i\")\n                    .colInt(\"iid\")\n                    .colInt(\"o_id\")\n                    .colInt(\"sku\")\n                    .pk(\"iid\")\n                    .joinTo(\"o\").on(\"o_id\", \"oid\")\n                .ais();\n\n        checkHKeyColumn(\n                ais, \"c\",\n                expectedSegments(1).checkSegment(0).expectedCols(2).checkCol(0).expectAtIndex(0),\n                c(\"c\", \"cid1\"), c(\"o\", \"c_id1\"));\n        checkHKeyColumn(\n                ais, \"c\",\n                expectedSegments(1).checkSegment(0).expectedCols(2).checkCol(1).expectAtIndex(0),\n                c(\"c\", \"cid2\"), c(\"o\", \"c_id2\"));\n\n        checkHKeyColumn(\n                ais, \"o\",\n                expectedSegments(2).checkSegment(0).expectedCols(2).checkCol(0).expectAtIndex(1),\n                c(\"c\", \"cid1\"), c(\"o\", \"c_id1\"));\n        checkHKeyColumn(\n                ais, \"o\",\n                expectedSegments(2).checkSegment(0).expectedCols(2).checkCol(1).expectAtIndex(1),\n                c(\"c\", \"cid2\"), c(\"o\", \"c_id2\"));\n        checkHKeyColumn(\n                ais, \"o\",\n                expectedSegments(2).checkSegment(1).expectedCols(1).checkCol(0).expectAtIndex(0),\n                c(\"o\", \"oid\"), c(\"i\", \"o_id\"));\n\n        checkHKeyColumn(\n                ais, \"i\",\n                expectedSegments(3).checkSegment(0).expectedCols(2).checkCol(0).expectAtIndex(1),\n                c(\"c\", \"cid1\"), c(\"o\", \"c_id1\"));\n        checkHKeyColumn(\n                ais, \"i\",\n                expectedSegments(3).checkSegment(0).expectedCols(2).checkCol(1).expectAtIndex(1),\n                c(\"c\", \"cid2\"), c(\"o\", \"c_id2\"));\n        checkHKeyColumn(\n                ais, \"i\",\n                expectedSegments(3).checkSegment(1).expectedCols(1).checkCol(0).expectAtIndex(1),\n                c(\"o\", \"oid\"), c(\"i\", \"o_id\"));\n        checkHKeyColumn(\n                ais, \"i\",\n                expectedSegments(3).checkSegment(2).expectedCols(1).checkCol(0).expectAtIndex(0),\n                c(\"i\", \"iid\"));\n    }", "signature": "void multiColumnPkNoCascade()", "full_signature": "@Test public void multiColumnPkNoCascade()", "class_method_signature": "HKeySegmentTest.multiColumnPkNoCascade()", "testcase": true, "constructor": false, "invocations": ["ais", "on", "joinTo", "pk", "colInt", "colInt", "colInt", "table", "and", "on", "joinTo", "pk", "colString", "colInt", "colInt", "colInt", "table", "pk", "colString", "colInt", "colInt", "table", "create", "checkHKeyColumn", "expectAtIndex", "checkCol", "expectedCols", "checkSegment", "expectedSegments", "c", "c", "checkHKeyColumn", "expectAtIndex", "checkCol", "expectedCols", "checkSegment", "expectedSegments", "c", "c", "checkHKeyColumn", "expectAtIndex", "checkCol", "expectedCols", "checkSegment", "expectedSegments", "c", "c", "checkHKeyColumn", "expectAtIndex", "checkCol", "expectedCols", "checkSegment", "expectedSegments", "c", "c", "checkHKeyColumn", "expectAtIndex", "checkCol", "expectedCols", "checkSegment", "expectedSegments", "c", "c", "checkHKeyColumn", "expectAtIndex", "checkCol", "expectedCols", "checkSegment", "expectedSegments", "c", "c", "checkHKeyColumn", "expectAtIndex", "checkCol", "expectedCols", "checkSegment", "expectedSegments", "c", "c", "checkHKeyColumn", "expectAtIndex", "checkCol", "expectedCols", "checkSegment", "expectedSegments", "c", "c", "checkHKeyColumn", "expectAtIndex", "checkCol", "expectedCols", "checkSegment", "expectedSegments", "c"]}, "focal_class": {"identifier": "HKeySegment", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final HKey hKey;", "modifier": "private final", "type": "HKey", "declarator": "hKey", "var_name": "hKey"}, {"original_string": "private final Table table;", "modifier": "private final", "type": "Table", "declarator": "table", "var_name": "table"}, {"original_string": "private final List<HKeyColumn> columns = new ArrayList<>();", "modifier": "private final", "type": "List<HKeyColumn>", "declarator": "columns = new ArrayList<>()", "var_name": "columns"}, {"original_string": "private final int positionInHKey;", "modifier": "private final", "type": "int", "declarator": "positionInHKey", "var_name": "positionInHKey"}], "methods": [{"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "HKeySegment.toString()", "testcase": false, "constructor": false}, {"identifier": "HKeySegment", "parameters": "(HKey hKey, Table table)", "modifiers": "public", "return": "", "signature": " HKeySegment(HKey hKey, Table table)", "full_signature": "public  HKeySegment(HKey hKey, Table table)", "class_method_signature": "HKeySegment.HKeySegment(HKey hKey, Table table)", "testcase": false, "constructor": true}, {"identifier": "hKey", "parameters": "()", "modifiers": "public", "return": "HKey", "signature": "HKey hKey()", "full_signature": "public HKey hKey()", "class_method_signature": "HKeySegment.hKey()", "testcase": false, "constructor": false}, {"identifier": "table", "parameters": "()", "modifiers": "public", "return": "Table", "signature": "Table table()", "full_signature": "public Table table()", "class_method_signature": "HKeySegment.table()", "testcase": false, "constructor": false}, {"identifier": "positionInHKey", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int positionInHKey()", "full_signature": "public int positionInHKey()", "class_method_signature": "HKeySegment.positionInHKey()", "testcase": false, "constructor": false}, {"identifier": "columns", "parameters": "()", "modifiers": "public", "return": "List<HKeyColumn>", "signature": "List<HKeyColumn> columns()", "full_signature": "public List<HKeyColumn> columns()", "class_method_signature": "HKeySegment.columns()", "testcase": false, "constructor": false}, {"identifier": "addColumn", "parameters": "(Column column)", "modifiers": "public", "return": "HKeyColumn", "signature": "HKeyColumn addColumn(Column column)", "full_signature": "public HKeyColumn addColumn(Column column)", "class_method_signature": "HKeySegment.addColumn(Column column)", "testcase": false, "constructor": false}], "file": "fdb-sql-layer-core/src/main/java/com/foundationdb/ais/model/HKeySegment.java"}, "focal_method": {"identifier": "table", "parameters": "()", "modifiers": "public", "return": "Table", "body": "public Table table()\n    {\n        return table;\n    }", "signature": "Table table()", "full_signature": "public Table table()", "class_method_signature": "HKeySegment.table()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 32884360, "url": "https://github.com/jaytaylor/sql-layer", "language": "Java", "is_fork": false, "fork_count": 120, "stargazer_count": 77, "size": 138665, "license": "licensed"}}