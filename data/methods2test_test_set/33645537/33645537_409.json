{"test_class": {"identifier": "FindKthElementTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FindKthElement findElement;", "modifier": "private", "type": "FindKthElement", "declarator": "findElement", "var_name": "findElement"}], "file": "algs/src/test/java/com/github/pedrovgs/problem58/FindKthElementTest.java"}, "test_case": {"identifier": "shouldNotAcceptNullListNodes2", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class) public void shouldNotAcceptNullListNodes2() {\n    findElement.find2(null, 4);\n  }", "signature": "void shouldNotAcceptNullListNodes2()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void shouldNotAcceptNullListNodes2()", "class_method_signature": "FindKthElementTest.shouldNotAcceptNullListNodes2()", "testcase": true, "constructor": false, "invocations": ["find2"]}, "focal_class": {"identifier": "FindKthElement", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ReverseLinkedList reverseLinkedList;", "modifier": "private", "type": "ReverseLinkedList", "declarator": "reverseLinkedList", "var_name": "reverseLinkedList"}], "methods": [{"identifier": "FindKthElement", "parameters": "()", "modifiers": "public", "return": "", "signature": " FindKthElement()", "full_signature": "public  FindKthElement()", "class_method_signature": "FindKthElement.FindKthElement()", "testcase": false, "constructor": true}, {"identifier": "find", "parameters": "(ListNode listNode, int k)", "modifiers": "public", "return": "ListNode", "signature": "ListNode find(ListNode listNode, int k)", "full_signature": "public ListNode find(ListNode listNode, int k)", "class_method_signature": "FindKthElement.find(ListNode listNode, int k)", "testcase": false, "constructor": false}, {"identifier": "find2", "parameters": "(ListNode listNode, int k)", "modifiers": "public", "return": "ListNode", "signature": "ListNode find2(ListNode listNode, int k)", "full_signature": "public ListNode find2(ListNode listNode, int k)", "class_method_signature": "FindKthElement.find2(ListNode listNode, int k)", "testcase": false, "constructor": false}, {"identifier": "find3", "parameters": "(ListNode listNode, int k)", "modifiers": "public", "return": "ListNode", "signature": "ListNode find3(ListNode listNode, int k)", "full_signature": "public ListNode find3(ListNode listNode, int k)", "class_method_signature": "FindKthElement.find3(ListNode listNode, int k)", "testcase": false, "constructor": false}, {"identifier": "calculateListSize", "parameters": "(ListNode listNode)", "modifiers": "private", "return": "int", "signature": "int calculateListSize(ListNode listNode)", "full_signature": "private int calculateListSize(ListNode listNode)", "class_method_signature": "FindKthElement.calculateListSize(ListNode listNode)", "testcase": false, "constructor": false}, {"identifier": "validateInput", "parameters": "(ListNode listNode, int k)", "modifiers": "private", "return": "void", "signature": "void validateInput(ListNode listNode, int k)", "full_signature": "private void validateInput(ListNode listNode, int k)", "class_method_signature": "FindKthElement.validateInput(ListNode listNode, int k)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem58/FindKthElement.java"}, "focal_method": {"identifier": "find2", "parameters": "(ListNode listNode, int k)", "modifiers": "public", "return": "ListNode", "body": "public ListNode find2(ListNode listNode, int k) {\n    validateInput(listNode, k);\n\n    int size = calculateListSize(listNode);\n    if (k > (size - 1)) {\n      throw new IndexOutOfBoundsException();\n    }\n    ListNode result = listNode;\n    int n = size - 1 - k;\n    while (n > 0) {\n      result = result.getNext();\n      n--;\n    }\n    return result;\n  }", "signature": "ListNode find2(ListNode listNode, int k)", "full_signature": "public ListNode find2(ListNode listNode, int k)", "class_method_signature": "FindKthElement.find2(ListNode listNode, int k)", "testcase": false, "constructor": false, "invocations": ["validateInput", "calculateListSize", "getNext"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}