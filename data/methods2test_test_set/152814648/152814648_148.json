{"test_class": {"identifier": "RegexpFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PATTERN = \"pattern\";", "modifier": "private static final", "type": "String", "declarator": "PATTERN = \"pattern\"", "var_name": "PATTERN"}, {"original_string": "private static final IssueBuilder ISSUE_BUILDER = new IssueBuilder();", "modifier": "private static final", "type": "IssueBuilder", "declarator": "ISSUE_BUILDER = new IssueBuilder()", "var_name": "ISSUE_BUILDER"}], "file": "plugin/src/test/java/io/jenkins/plugins/analysis/core/filter/RegexpFilterTest.java"}, "test_case": {"identifier": "shouldCallIncludeModuleMethod", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldCallIncludeModuleMethod() {\n        RegexpFilter filter = new IncludeModule(PATTERN);\n\n        IssueFilterBuilder filterBuilder = mock(IssueFilterBuilder.class);\n        filter.apply(filterBuilder);\n        \n        verify(filterBuilder).setIncludeModuleNameFilter(PATTERN);\n    }", "signature": "void shouldCallIncludeModuleMethod()", "full_signature": "@Test void shouldCallIncludeModuleMethod()", "class_method_signature": "RegexpFilterTest.shouldCallIncludeModuleMethod()", "testcase": true, "constructor": false, "invocations": ["mock", "apply", "setIncludeModuleNameFilter", "verify"]}, "focal_class": {"identifier": "RegexpFilter", "superclass": "extends AbstractDescribableImpl<RegexpFilter>", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 1892735849628260157L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1892735849628260157L", "var_name": "serialVersionUID"}, {"original_string": "private final String pattern;", "modifier": "private final", "type": "String", "declarator": "pattern", "var_name": "pattern"}], "methods": [{"identifier": "RegexpFilter", "parameters": "(final String pattern)", "modifiers": "", "return": "", "signature": " RegexpFilter(final String pattern)", "full_signature": "  RegexpFilter(final String pattern)", "class_method_signature": "RegexpFilter.RegexpFilter(final String pattern)", "testcase": false, "constructor": true}, {"identifier": "getPattern", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPattern()", "full_signature": "public String getPattern()", "class_method_signature": "RegexpFilter.getPattern()", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(IssueFilterBuilder builder)", "modifiers": "public abstract", "return": "void", "signature": "void apply(IssueFilterBuilder builder)", "full_signature": "public abstract void apply(IssueFilterBuilder builder)", "class_method_signature": "RegexpFilter.apply(IssueFilterBuilder builder)", "testcase": false, "constructor": false}], "file": "plugin/src/main/java/io/jenkins/plugins/analysis/core/filter/RegexpFilter.java"}, "focal_method": {"identifier": "apply", "parameters": "(IssueFilterBuilder builder)", "modifiers": "public abstract", "return": "void", "body": "public abstract void apply(IssueFilterBuilder builder);", "signature": "void apply(IssueFilterBuilder builder)", "full_signature": "public abstract void apply(IssueFilterBuilder builder)", "class_method_signature": "RegexpFilter.apply(IssueFilterBuilder builder)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 152814648, "url": "https://github.com/jenkinsci/warnings-ng-plugin", "stars": 158, "created": "10/12/2018 10:41:36 PM +00:00", "updates": "2020-01-27T14:00:03+00:00", "fork": "False", "license": "licensed"}}