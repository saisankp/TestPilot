{"test_class": {"identifier": "MetricNameTest", "superclass": "", "interfaces": "", "fields": [], "file": "stagemonitor-core/src/test/java/org/stagemonitor/core/metrics/metrics2/MetricNameTest.java"}, "test_case": {"identifier": "testTemplateSingleValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testTemplateSingleValue() {\n\t\tfinal MetricName.MetricNameTemplate metricNameTemplate = name(\"foo\").tag(\"bar\", \"\").tag(\"qux\", \"quux\").templateFor(\"bar\");\n\t\tassertEquals(name(\"foo\").tag(\"bar\", \"baz\").tag(\"qux\", \"quux\").build(), metricNameTemplate.build(\"baz\"));\n\t\tassertSame(metricNameTemplate.build(\"baz\"), metricNameTemplate.build(\"baz\"));\n\t\tassertNotEquals(metricNameTemplate.build(\"baz\"), metricNameTemplate.build(\"baz2\"));\n\t}", "signature": "void testTemplateSingleValue()", "full_signature": "@Test public void testTemplateSingleValue()", "class_method_signature": "MetricNameTest.testTemplateSingleValue()", "testcase": true, "constructor": false, "invocations": ["templateFor", "tag", "tag", "name", "assertEquals", "build", "tag", "tag", "name", "build", "assertSame", "build", "build", "assertNotEquals", "build", "build"]}, "focal_class": {"identifier": "MetricName", "superclass": "", "interfaces": "", "fields": [{"original_string": "@JsonIgnore\n\tprivate int hashCode;", "modifier": "@JsonIgnore\n\tprivate", "type": "int", "declarator": "hashCode", "var_name": "hashCode"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final LinkedHashMap<String, String> tags;", "modifier": "private final", "type": "LinkedHashMap<String, String>", "declarator": "tags", "var_name": "tags"}], "methods": [{"identifier": "MetricName", "parameters": "(String name, LinkedHashMap<String, String> tags)", "modifiers": "private", "return": "", "signature": " MetricName(String name, LinkedHashMap<String, String> tags)", "full_signature": "private  MetricName(String name, LinkedHashMap<String, String> tags)", "class_method_signature": "MetricName.MetricName(String name, LinkedHashMap<String, String> tags)", "testcase": false, "constructor": true}, {"identifier": "MetricName", "parameters": "(@JsonProperty(\"name\") String name, @JsonProperty(\"tags\") Map<String, String> tags)", "modifiers": "@JsonCreator private", "return": "", "signature": " MetricName(@JsonProperty(\"name\") String name, @JsonProperty(\"tags\") Map<String, String> tags)", "full_signature": "@JsonCreator private  MetricName(@JsonProperty(\"name\") String name, @JsonProperty(\"tags\") Map<String, String> tags)", "class_method_signature": "MetricName.MetricName(@JsonProperty(\"name\") String name, @JsonProperty(\"tags\") Map<String, String> tags)", "testcase": false, "constructor": true}, {"identifier": "withTag", "parameters": "(String key, String value)", "modifiers": "public", "return": "MetricName", "signature": "MetricName withTag(String key, String value)", "full_signature": "public MetricName withTag(String key, String value)", "class_method_signature": "MetricName.withTag(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "name", "parameters": "(String name)", "modifiers": "public static", "return": "Builder", "signature": "Builder name(String name)", "full_signature": "public static Builder name(String name)", "class_method_signature": "MetricName.name(String name)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "MetricName.getName()", "testcase": false, "constructor": false}, {"identifier": "getTags", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getTags()", "full_signature": "public Map<String, String> getTags()", "class_method_signature": "MetricName.getTags()", "testcase": false, "constructor": false}, {"identifier": "getTagKeys", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "List<String>", "signature": "List<String> getTagKeys()", "full_signature": "@JsonIgnore public List<String> getTagKeys()", "class_method_signature": "MetricName.getTagKeys()", "testcase": false, "constructor": false}, {"identifier": "getTagValues", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "List<String>", "signature": "List<String> getTagValues()", "full_signature": "@JsonIgnore public List<String> getTagValues()", "class_method_signature": "MetricName.getTagValues()", "testcase": false, "constructor": false}, {"identifier": "toGraphiteName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toGraphiteName()", "full_signature": "public String toGraphiteName()", "class_method_signature": "MetricName.toGraphiteName()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "MetricName.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "MetricName.hashCode()", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(MetricName other)", "modifiers": "public", "return": "boolean", "signature": "boolean matches(MetricName other)", "full_signature": "public boolean matches(MetricName other)", "class_method_signature": "MetricName.matches(MetricName other)", "testcase": false, "constructor": false}, {"identifier": "containsAllTags", "parameters": "(Map<String, String> tags)", "modifiers": "private", "return": "boolean", "signature": "boolean containsAllTags(Map<String, String> tags)", "full_signature": "private boolean containsAllTags(Map<String, String> tags)", "class_method_signature": "MetricName.containsAllTags(Map<String, String> tags)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "MetricName.toString()", "testcase": false, "constructor": false}], "file": "stagemonitor-core/src/main/java/org/stagemonitor/core/metrics/metrics2/MetricName.java"}, "focal_method": {"identifier": "name", "parameters": "(String name)", "modifiers": "public static", "return": "Builder", "body": "public static Builder name(String name) {\n\t\treturn new Builder(name);\n\t}", "signature": "Builder name(String name)", "full_signature": "public static Builder name(String name)", "class_method_signature": "MetricName.name(String name)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 11845993, "url": "https://github.com/stagemonitor/stagemonitor", "language": "Java", "is_fork": false, "fork_count": 268, "stargazer_count": 1585, "size": 10342, "license": "licensed"}}