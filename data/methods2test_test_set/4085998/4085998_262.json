{"test_class": {"identifier": "urn_perun_user_attribute_def_virt_eduPersonScopedAffiliationsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations classInstance;", "modifier": "private static", "type": "urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations", "declarator": "classInstance", "var_name": "classInstance"}, {"original_string": "private PerunSessionImpl session;", "modifier": "private", "type": "PerunSessionImpl", "declarator": "session", "var_name": "session"}, {"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private UserExtSource ues1;", "modifier": "private", "type": "UserExtSource", "declarator": "ues1", "var_name": "ues1"}, {"original_string": "private UserExtSource ues2;", "modifier": "private", "type": "UserExtSource", "declarator": "ues2", "var_name": "ues2"}, {"original_string": "private Attribute uesAtt1;", "modifier": "private", "type": "Attribute", "declarator": "uesAtt1", "var_name": "uesAtt1"}, {"original_string": "private Attribute uesAtt2;", "modifier": "private", "type": "Attribute", "declarator": "uesAtt2", "var_name": "uesAtt2"}, {"original_string": "private Attribute userAtt1;", "modifier": "private", "type": "Attribute", "declarator": "userAtt1", "var_name": "userAtt1"}, {"original_string": "private final String VALUE1 = \"11aff11@somewhere.edu\";", "modifier": "private final", "type": "String", "declarator": "VALUE1 = \"11aff11@somewhere.edu\"", "var_name": "VALUE1"}, {"original_string": "private final String VALUE2 = \"22aff22@somewhere.edu\";", "modifier": "private final", "type": "String", "declarator": "VALUE2 = \"22aff22@somewhere.edu\"", "var_name": "VALUE2"}, {"original_string": "private final String VALUE3 = \"33aff33@somewhere.edu\";", "modifier": "private final", "type": "String", "declarator": "VALUE3 = \"33aff33@somewhere.edu\"", "var_name": "VALUE3"}, {"original_string": "private final String VALUE4 = \"44aff44@somewhere.edu\";", "modifier": "private final", "type": "String", "declarator": "VALUE4 = \"44aff44@somewhere.edu\"", "var_name": "VALUE4"}, {"original_string": "private final String VALUE5 = \"55aff55@somewhere.edu\";", "modifier": "private final", "type": "String", "declarator": "VALUE5 = \"55aff55@somewhere.edu\"", "var_name": "VALUE5"}, {"original_string": "private final String VALUE6 = \"66aff66@somewhere.edu\";", "modifier": "private final", "type": "String", "declarator": "VALUE6 = \"66aff66@somewhere.edu\"", "var_name": "VALUE6"}, {"original_string": "private final String VALUE7 = \"77aff77@somewhere.edu\";", "modifier": "private final", "type": "String", "declarator": "VALUE7 = \"77aff77@somewhere.edu\"", "var_name": "VALUE7"}, {"original_string": "private LocalDate valid;", "modifier": "private", "type": "LocalDate", "declarator": "valid", "var_name": "valid"}, {"original_string": "private LocalDate invalid;", "modifier": "private", "type": "LocalDate", "declarator": "invalid", "var_name": "invalid"}, {"original_string": "private Member validMember;", "modifier": "private", "type": "Member", "declarator": "validMember", "var_name": "validMember"}, {"original_string": "private Member groupMember1;", "modifier": "private", "type": "Member", "declarator": "groupMember1", "var_name": "groupMember1"}, {"original_string": "private Member groupMember2;", "modifier": "private", "type": "Member", "declarator": "groupMember2", "var_name": "groupMember2"}, {"original_string": "private final int gId1 = 1;", "modifier": "private final", "type": "int", "declarator": "gId1 = 1", "var_name": "gId1"}, {"original_string": "private final int gId2 = 2;", "modifier": "private final", "type": "int", "declarator": "gId2 = 2", "var_name": "gId2"}, {"original_string": "private Group group1;", "modifier": "private", "type": "Group", "declarator": "group1", "var_name": "group1"}, {"original_string": "private Attribute groupAtt1;", "modifier": "private", "type": "Attribute", "declarator": "groupAtt1", "var_name": "groupAtt1"}], "file": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_eduPersonScopedAffiliationsTest.java"}, "test_case": {"identifier": "resolveAttributeValueChangeTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void resolveAttributeValueChangeTest() throws Exception {\n\t\twhen(session.getPerunBl().getUsersManagerBl().getUserById(session, 1)).thenReturn(user);\n\t\tAuditEvent event = new AllAttributesRemovedForUserExtSource(ues1);\n\t\tList<AuditEvent> auditEvents = classInstance.resolveVirtualAttributeValueChange(session, event);\n\n\t\tassertEquals(auditEvents.get(0).getClass(), AttributeChangedForUser.class);\n\n\t\tevent = new AllAttributesRemovedForUser(user);\n\t\tauditEvents = classInstance.resolveVirtualAttributeValueChange(session, event);\n\t\tassertEquals(auditEvents.get(0).getClass(), AttributeChangedForUser.class);\n\n\t\tAttribute attribute = new Attribute();\n\t\tattribute.setFriendlyName(\"eduPersonScopedAffiliationsManuallyAssigned\");\n\n\t\tevent = new AttributeSetForUser(attribute, user);\n\t\tauditEvents = classInstance.resolveVirtualAttributeValueChange(session, event);\n\t\tassertEquals(auditEvents.get(0).getClass(), AttributeChangedForUser.class);\n\n\t\twhen(session.getPerunBl().getAttributesManagerBl().getAttribute(session, user, AttributesManager.NS_USER_ATTR_VIRT + \":\" + \"eduPersonScopedAffiliations\")).thenReturn(attribute);\n\t\tauditEvents = classInstance.resolveVirtualAttributeValueChange(session, event);\n\t\tassertEquals(auditEvents.get(0).getClass(), AttributeChangedForUser.class);\n\t}", "signature": "void resolveAttributeValueChangeTest()", "full_signature": "@Test public void resolveAttributeValueChangeTest()", "class_method_signature": "urn_perun_user_attribute_def_virt_eduPersonScopedAffiliationsTest.resolveAttributeValueChangeTest()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getUserById", "getUsersManagerBl", "getPerunBl", "resolveVirtualAttributeValueChange", "assertEquals", "getClass", "get", "resolveVirtualAttributeValueChange", "assertEquals", "getClass", "get", "setFriendlyName", "resolveVirtualAttributeValueChange", "assertEquals", "getClass", "get", "thenReturn", "when", "getAttribute", "getAttributesManagerBl", "getPerunBl", "resolveVirtualAttributeValueChange", "assertEquals", "getClass", "get"]}, "focal_class": {"identifier": "urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations", "superclass": "extends UserVirtualAttributeCollectedFromUserExtSource", "interfaces": "", "fields": [{"original_string": "private final Logger log = LoggerFactory.getLogger(this.getClass());", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(this.getClass())", "var_name": "log"}, {"original_string": "private final Pattern userAllAttrsRemovedPattern = Pattern.compile(\"All attributes removed for User:\\\\[(.*)]\", Pattern.DOTALL);", "modifier": "private final", "type": "Pattern", "declarator": "userAllAttrsRemovedPattern = Pattern.compile(\"All attributes removed for User:\\\\[(.*)]\", Pattern.DOTALL)", "var_name": "userAllAttrsRemovedPattern"}, {"original_string": "private final Pattern userEPSAMASetPattern = Pattern.compile(\"Attribute:\\\\[(.*)friendlyName=<\" + getSecondarySourceAttributeFriendlyName() +\">(.*)] set for User:\\\\[(.*)]\", Pattern.DOTALL);", "modifier": "private final", "type": "Pattern", "declarator": "userEPSAMASetPattern = Pattern.compile(\"Attribute:\\\\[(.*)friendlyName=<\" + getSecondarySourceAttributeFriendlyName() +\">(.*)] set for User:\\\\[(.*)]\", Pattern.DOTALL)", "var_name": "userEPSAMASetPattern"}, {"original_string": "private final Pattern userEPSAMARemovePattern = Pattern.compile(\"AttributeDefinition:\\\\[(.*)friendlyName=<\" + getSecondarySourceAttributeFriendlyName() + \">(.*)] removed for User:\\\\[(.*)]\", Pattern.DOTALL);", "modifier": "private final", "type": "Pattern", "declarator": "userEPSAMARemovePattern = Pattern.compile(\"AttributeDefinition:\\\\[(.*)friendlyName=<\" + getSecondarySourceAttributeFriendlyName() + \">(.*)] removed for User:\\\\[(.*)]\", Pattern.DOTALL)", "var_name": "userEPSAMARemovePattern"}, {"original_string": "private final String VALIDITY_DATE_FORMAT = \"yyyy-MM-dd\";", "modifier": "private final", "type": "String", "declarator": "VALIDITY_DATE_FORMAT = \"yyyy-MM-dd\"", "var_name": "VALIDITY_DATE_FORMAT"}], "methods": [{"identifier": "getSourceAttributeFriendlyName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSourceAttributeFriendlyName()", "full_signature": "@Override public String getSourceAttributeFriendlyName()", "class_method_signature": "urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.getSourceAttributeFriendlyName()", "testcase": false, "constructor": false}, {"identifier": "getSecondarySourceAttributeFriendlyName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSecondarySourceAttributeFriendlyName()", "full_signature": "public String getSecondarySourceAttributeFriendlyName()", "class_method_signature": "urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.getSecondarySourceAttributeFriendlyName()", "testcase": false, "constructor": false}, {"identifier": "getSecondarySourceAttributeName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSecondarySourceAttributeName()", "full_signature": "public String getSecondarySourceAttributeName()", "class_method_signature": "urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.getSecondarySourceAttributeName()", "testcase": false, "constructor": false}, {"identifier": "getTertiarySourceAttributeFriendlyName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTertiarySourceAttributeFriendlyName()", "full_signature": "public String getTertiarySourceAttributeFriendlyName()", "class_method_signature": "urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.getTertiarySourceAttributeFriendlyName()", "testcase": false, "constructor": false}, {"identifier": "getTertiarySourceAttributeName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTertiarySourceAttributeName()", "full_signature": "public String getTertiarySourceAttributeName()", "class_method_signature": "urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.getTertiarySourceAttributeName()", "testcase": false, "constructor": false}, {"identifier": "getDestinationAttributeFriendlyName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDestinationAttributeFriendlyName()", "full_signature": "@Override public String getDestinationAttributeFriendlyName()", "class_method_signature": "urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.getDestinationAttributeFriendlyName()", "testcase": false, "constructor": false}, {"identifier": "getAttributeValue", "parameters": "(PerunSessionImpl sess, User user, AttributeDefinition destinationAttributeDefinition)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition destinationAttributeDefinition)", "full_signature": "@Override public Attribute getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition destinationAttributeDefinition)", "class_method_signature": "urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.getAttributeValue(PerunSessionImpl sess, User user, AttributeDefinition destinationAttributeDefinition)", "testcase": false, "constructor": false}, {"identifier": "getAffiliationsManuallyAssigned", "parameters": "(PerunSessionImpl sess, User user)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> getAffiliationsManuallyAssigned(PerunSessionImpl sess, User user)", "full_signature": "private Set<String> getAffiliationsManuallyAssigned(PerunSessionImpl sess, User user)", "class_method_signature": "urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.getAffiliationsManuallyAssigned(PerunSessionImpl sess, User user)", "testcase": false, "constructor": false}, {"identifier": "getAffiliationsFromGroups", "parameters": "(PerunSessionImpl sess, User user)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> getAffiliationsFromGroups(PerunSessionImpl sess, User user)", "full_signature": "private Set<String> getAffiliationsFromGroups(PerunSessionImpl sess, User user)", "class_method_signature": "urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.getAffiliationsFromGroups(PerunSessionImpl sess, User user)", "testcase": false, "constructor": false}, {"identifier": "getHandleIdentifiers", "parameters": "()", "modifiers": "@Override public", "return": "List<AttributeHandleIdentifier>", "signature": "List<AttributeHandleIdentifier> getHandleIdentifiers()", "full_signature": "@Override public List<AttributeHandleIdentifier> getHandleIdentifiers()", "class_method_signature": "urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.getHandleIdentifiers()", "testcase": false, "constructor": false}, {"identifier": "resolveVirtualAttributeValueChange", "parameters": "(PerunSessionImpl perunSession, AuditEvent message)", "modifiers": "@Override public", "return": "List<AuditEvent>", "signature": "List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message)", "full_signature": "@Override public List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message)", "class_method_signature": "urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message)", "testcase": false, "constructor": false}], "file": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.java"}, "focal_method": {"identifier": "resolveVirtualAttributeValueChange", "parameters": "(PerunSessionImpl perunSession, AuditEvent message)", "modifiers": "@Override public", "return": "List<AuditEvent>", "body": "@Override\n\tpublic List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message) throws WrongReferenceAttributeValueException, AttributeNotExistsException, WrongAttributeAssignmentException {\n\n\t\t// generic handling\n\t\tList<AuditEvent> resolvingMessages = super.resolveVirtualAttributeValueChange(perunSession, message);\n\n\t\t// handle source user attribute changes\n\n\t\tif (message instanceof AttributeSetForUser &&\n\t\t\t\t((AttributeSetForUser) message).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n\n\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeSetForUser) message).getUser()));\n\n\t\t} else if (message instanceof AttributeRemovedForUser &&\n\t\t\t\t((AttributeRemovedForUser) message).getAttribute().getFriendlyName().equals(getSecondarySourceAttributeFriendlyName())) {\n\n\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AttributeRemovedForUser) message).getUser()));\n\n\t\t} else if (message instanceof AllAttributesRemovedForUser) {\n\n\t\t\tboolean skip = false;\n\t\t\ttry {\n\t\t\t\tAttributeDefinition sourceExists = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getSecondarySourceAttributeName());\n\t\t\t\tUser user = perunSession.getPerunBl().getUsersManagerBl().getUserById(perunSession, ((AllAttributesRemovedForUser) message).getUser().getId());\n\t\t\t} catch (AttributeNotExistsException | UserNotExistsException ex) {\n\t\t\t\t// silently skip this event, since source attribute couldn't be between deleted\n\t\t\t\t// or user no longer exist\n\t\t\t\tskip = true;\n\t\t\t}\n\n\t\t\tif (!skip) {\n\t\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n\t\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), ((AllAttributesRemovedForUser) message).getUser()));\n\t\t\t}\n\n\t\t}\n\n\t\t// handle group attr changes, exclude \"members\" group, since its not counted within attr value\n\n\t\tif (message instanceof AttributeSetForGroup &&\n\t\t\t\t!VosManager.MEMBERS_GROUP.equals(((AttributeSetForGroup) message).getGroup().getName()) &&\n\t\t\t\t((AttributeSetForGroup) message).getAttribute().getName().equals(getTertiarySourceAttributeName())) {\n\n\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n\t\t\t// TODO - get only active group users, since expired are not affected by current group affiliations\n\t\t\tList<User> users = perunSession.getPerunBl().getGroupsManagerBl().getGroupUsers(perunSession, ((AttributeSetForGroup) message).getGroup());\n\t\t\tfor (User user : users) {\n\t\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), user));\n\t\t\t}\n\n\t\t} else if (message instanceof AttributeRemovedForGroup &&\n\t\t\t\t!VosManager.MEMBERS_GROUP.equals(((AttributeRemovedForGroup) message).getGroup().getName()) &&\n\t\t\t\t((AttributeRemovedForGroup) message).getAttribute().getName().equals(getTertiarySourceAttributeName())) {\n\n\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n\t\t\t// TODO - get only active group users, since expired are not affected by current group affiliations\n\t\t\tList<User> users = perunSession.getPerunBl().getGroupsManagerBl().getGroupUsers(perunSession, ((AttributeRemovedForGroup) message).getGroup());\n\t\t\tfor (User user : users) {\n\t\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), user));\n\t\t\t}\n\n\t\t} else if (message instanceof AllAttributesRemovedForGroup &&\n\t\t\t\t!VosManager.MEMBERS_GROUP.equals(((AllAttributesRemovedForGroup) message).getGroup().getName())) {\n\n\t\t\tboolean skip = false;\n\t\t\ttry {\n\t\t\t\tAttributeDefinition sourceExists = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getTertiarySourceAttributeName());\n\t\t\t\tGroup group = perunSession.getPerunBl().getGroupsManagerBl().getGroupById(perunSession, ((AllAttributesRemovedForGroup) message).getGroup().getId());\n\t\t\t} catch (AttributeNotExistsException | GroupNotExistsException ex) {\n\t\t\t\t// silently skip this event, since source attribute couldn't be between deleted\n\t\t\t\t// or group no longer exist.\n\t\t\t\tskip = true;\n\t\t\t}\n\n\t\t\tif (!skip) {\n\t\t\t\tAttributeDefinition attributeDefinition = perunSession.getPerunBl().getAttributesManagerBl().getAttributeDefinition(perunSession, getDestinationAttributeName());\n\t\t\t\t// TODO - get only active group users, since expired are not affected by current group affiliations\n\t\t\t\tList<User> users = perunSession.getPerunBl().getGroupsManagerBl().getGroupUsers(perunSession, ((AllAttributesRemovedForGroup) message).getGroup());\n\t\t\t\tfor (User user : users) {\n\t\t\t\t\tresolvingMessages.add(new AttributeChangedForUser(new Attribute(attributeDefinition), user));\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\t// case AllAttributesRemovedForGroup doesn't matter, everything was processed by removing members before group deletion\n\n\t\treturn resolvingMessages;\n\n\t}", "signature": "List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message)", "full_signature": "@Override public List<AuditEvent> resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message)", "class_method_signature": "urn_perun_user_attribute_def_virt_eduPersonScopedAffiliations.resolveVirtualAttributeValueChange(PerunSessionImpl perunSession, AuditEvent message)", "testcase": false, "constructor": false, "invocations": ["resolveVirtualAttributeValueChange", "equals", "getFriendlyName", "getAttribute", "getSecondarySourceAttributeFriendlyName", "getAttributeDefinition", "getAttributesManagerBl", "getPerunBl", "getDestinationAttributeName", "add", "getUser", "equals", "getFriendlyName", "getAttribute", "getSecondarySourceAttributeFriendlyName", "getAttributeDefinition", "getAttributesManagerBl", "getPerunBl", "getDestinationAttributeName", "add", "getUser", "getAttributeDefinition", "getAttributesManagerBl", "getPerunBl", "getSecondarySourceAttributeName", "getUserById", "getUsersManagerBl", "getPerunBl", "getId", "getUser", "getAttributeDefinition", "getAttributesManagerBl", "getPerunBl", "getDestinationAttributeName", "add", "getUser", "equals", "getName", "getGroup", "equals", "getName", "getAttribute", "getTertiarySourceAttributeName", "getAttributeDefinition", "getAttributesManagerBl", "getPerunBl", "getDestinationAttributeName", "getGroupUsers", "getGroupsManagerBl", "getPerunBl", "getGroup", "add", "equals", "getName", "getGroup", "equals", "getName", "getAttribute", "getTertiarySourceAttributeName", "getAttributeDefinition", "getAttributesManagerBl", "getPerunBl", "getDestinationAttributeName", "getGroupUsers", "getGroupsManagerBl", "getPerunBl", "getGroup", "add", "equals", "getName", "getGroup", "getAttributeDefinition", "getAttributesManagerBl", "getPerunBl", "getTertiarySourceAttributeName", "getGroupById", "getGroupsManagerBl", "getPerunBl", "getId", "getGroup", "getAttributeDefinition", "getAttributesManagerBl", "getPerunBl", "getDestinationAttributeName", "getGroupUsers", "getGroupsManagerBl", "getPerunBl", "getGroup", "add"]}, "repository": {"repo_id": 4085998, "url": "https://github.com/CESNET/perun", "stars": 38, "created": "4/20/2012 11:55:38 AM +00:00", "updates": "2020-01-27T09:51:13+00:00", "fork": "False", "license": "licensed"}}