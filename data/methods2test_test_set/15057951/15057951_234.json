{"test_class": {"identifier": "StringHolderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "StringHolder h1 = new StringHolder(\"abc\");", "modifier": "", "type": "StringHolder", "declarator": "h1 = new StringHolder(\"abc\")", "var_name": "h1"}, {"original_string": "StringHolder h2 = new StringHolder(null);", "modifier": "", "type": "StringHolder", "declarator": "h2 = new StringHolder(null)", "var_name": "h2"}], "file": "smartparam-engine/src/test/java/org/smartparam/engine/types/string/StringHolderTest.java"}, "test_case": {"identifier": "testCompareTo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCompareTo() {\n\n        // dane testowe\n        StringHolder[] array = {\n            new StringHolder(\"DF\"),\n            new StringHolder(null),\n            new StringHolder(\"Ab\"),\n            new StringHolder(\"z\"),\n            new StringHolder(\"AB\"),\n            new StringHolder(\"\")\n        };\n\n        // oczekiwany wynik sortowania\n        String[] expectedResult = {\n            null,\n            \"\",\n            \"AB\",\n            \"Ab\",\n            \"DF\",\n            \"z\"\n        };\n\n        // wykonanie sortowania\n        Arrays.sort(array);\n\n        // weryfikacja\n        for (int i = 0; i < array.length; i++) {\n            String value = array[i].getValue();\n            String expected = expectedResult[i];\n            assertEquals(expected, value);\n        }\n    }", "signature": "void testCompareTo()", "full_signature": "@Test public void testCompareTo()", "class_method_signature": "StringHolderTest.testCompareTo()", "testcase": true, "constructor": false, "invocations": ["sort", "getValue", "assertEquals"]}, "focal_class": {"identifier": "StringHolder", "superclass": "extends AbstractValueHolder", "interfaces": "", "fields": [{"original_string": "private String value;", "modifier": "private", "type": "String", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "StringHolder", "parameters": "(String value)", "modifiers": "public", "return": "", "signature": " StringHolder(String value)", "full_signature": "public  StringHolder(String value)", "class_method_signature": "StringHolder.StringHolder(String value)", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getValue()", "full_signature": "@Override public String getValue()", "class_method_signature": "StringHolder.getValue()", "testcase": false, "constructor": false}], "file": "smartparam-engine/src/main/java/org/smartparam/engine/types/string/StringHolder.java"}, "focal_method": {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getValue() {\n        return value;\n    }", "signature": "String getValue()", "full_signature": "@Override public String getValue()", "class_method_signature": "StringHolder.getValue()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}