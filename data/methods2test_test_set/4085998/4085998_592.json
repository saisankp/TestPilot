{"test_class": {"identifier": "ExtSourceREMSTest", "superclass": "extends AbstractPerunIntegrationTest", "interfaces": "", "fields": [{"original_string": "@Spy\n\tprivate static ExtSourceREMS extSourceREMS;", "modifier": "@Spy\n\tprivate static", "type": "ExtSourceREMS", "declarator": "extSourceREMS", "var_name": "extSourceREMS"}, {"original_string": "private static PerunBlImpl perunBl;", "modifier": "private static", "type": "PerunBlImpl", "declarator": "perunBl", "var_name": "perunBl"}], "file": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/ExtSourceREMSTest.java"}, "test_case": {"identifier": "getUsersSubjectsTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getUsersSubjectsTest() throws Exception {\n\t\tSystem.out.println(\"getUsersSubjectsTest\");\n\n\t\t// define needed attributes\n\t\tString usersQuery = \"usersQuery\";\n\t\tMap<String, String> mapOfAttributes = new HashMap<>();\n\t\tmapOfAttributes.put(\"usersQuery\", usersQuery);\n\t\tmapOfAttributes.put(\"url\", \"some.url.com\");\n\t\tdoReturn(mapOfAttributes).when(extSourceREMS).getAttributes();\n\n\t\t// mock data got from database\n\t\tdoNothing().when(extSourceREMS).createConnection();\n\t\tPreparedStatement preparedStatement = mock(PreparedStatement.class);\n\t\tdoReturn(preparedStatement).when(extSourceREMS).getPreparedStatement(usersQuery, null, 0);\n\t\tResultSet resultSet = mock(ResultSet.class, RETURNS_DEEP_STUBS);\n\t\tdoReturn(resultSet).when(preparedStatement).executeQuery();\n\t\tdoReturn(true, false).when(resultSet).next();\n\t\tdoReturn(\"josef\").when(resultSet).getString(\"firstName\");\n\t\tdoReturn(\"xjosef\").when(resultSet).getString(\"login\");\n\t\tUser user = new User();\n\t\tuser.setFirstName(\"josef\");\n\t\twhen(perunBl.getUsersManagerBl().getUsersByExtSourceTypeAndLogin(any(), anyString(), eq(\"xjosef\"))).thenReturn(Collections.singletonList(user));\n\n\t\t// create expected subject to get\n\t\tList<Map<String, String>> expectedSubjects = new ArrayList<>();\n\t\tMap<String, String> subject = new HashMap<>();\n\t\tsubject.put(\"firstName\", \"josef\");\n\t\tsubject.put(\"login\", \"xjosef\");\n\t\tsubject.put(\"lastName\", null);\n\t\tsubject.put(\"titleBefore\", null);\n\t\tsubject.put(\"titleAfter\", null);\n\t\tsubject.put(\"middleName\", null);\n\t\texpectedSubjects.add(subject);\n\n\t\t// test the method\n\t\tList<Map<String, String>> actualSubjects = extSourceREMS.getUsersSubjects();\n\t\tassertEquals(\"subjects should be same\", expectedSubjects, actualSubjects);\n\t}", "signature": "void getUsersSubjectsTest()", "full_signature": "@Test public void getUsersSubjectsTest()", "class_method_signature": "ExtSourceREMSTest.getUsersSubjectsTest()", "testcase": true, "constructor": false, "invocations": ["println", "put", "put", "getAttributes", "when", "doReturn", "createConnection", "when", "doNothing", "mock", "getPreparedStatement", "when", "doReturn", "mock", "executeQuery", "when", "doReturn", "next", "when", "doReturn", "getString", "when", "doReturn", "getString", "when", "doReturn", "setFirstName", "thenReturn", "when", "getUsersByExtSourceTypeAndLogin", "getUsersManagerBl", "any", "anyString", "eq", "singletonList", "put", "put", "put", "put", "put", "put", "add", "getUsersSubjects", "assertEquals"]}, "focal_class": {"identifier": "ExtSourceREMS", "superclass": "extends ExtSourceSqlComplex", "interfaces": "implements ExtSourceApi", "fields": [{"original_string": "private final static Logger log = LoggerFactory.getLogger(ExtSourceREMS.class);", "modifier": "private final static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(ExtSourceREMS.class)", "var_name": "log"}, {"original_string": "private static PerunBlImpl perunBl;", "modifier": "private static", "type": "PerunBlImpl", "declarator": "perunBl", "var_name": "perunBl"}], "methods": [{"identifier": "setPerunBlImpl", "parameters": "(PerunBlImpl perun)", "modifiers": "public static", "return": "PerunBlImpl", "signature": "PerunBlImpl setPerunBlImpl(PerunBlImpl perun)", "full_signature": "public static PerunBlImpl setPerunBlImpl(PerunBlImpl perun)", "class_method_signature": "ExtSourceREMS.setPerunBlImpl(PerunBlImpl perun)", "testcase": false, "constructor": false}, {"identifier": "findSubjects", "parameters": "(String searchString)", "modifiers": "@Override public", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> findSubjects(String searchString)", "full_signature": "@Override public List<Map<String, String>> findSubjects(String searchString)", "class_method_signature": "ExtSourceREMS.findSubjects(String searchString)", "testcase": false, "constructor": false}, {"identifier": "findSubjects", "parameters": "(String searchString, int maxResults)", "modifiers": "@Override public", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> findSubjects(String searchString, int maxResults)", "full_signature": "@Override public List<Map<String, String>> findSubjects(String searchString, int maxResults)", "class_method_signature": "ExtSourceREMS.findSubjects(String searchString, int maxResults)", "testcase": false, "constructor": false}, {"identifier": "getSubjectByLogin", "parameters": "(String login)", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getSubjectByLogin(String login)", "full_signature": "@Override public Map<String, String> getSubjectByLogin(String login)", "class_method_signature": "ExtSourceREMS.getSubjectByLogin(String login)", "testcase": false, "constructor": false}, {"identifier": "findSubjectsLogins", "parameters": "(String searchString)", "modifiers": "@Override public", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> findSubjectsLogins(String searchString)", "full_signature": "@Override public List<Map<String, String>> findSubjectsLogins(String searchString)", "class_method_signature": "ExtSourceREMS.findSubjectsLogins(String searchString)", "testcase": false, "constructor": false}, {"identifier": "findSubjectsLogins", "parameters": "(String searchString, int maxResults)", "modifiers": "@Override public", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> findSubjectsLogins(String searchString, int maxResults)", "full_signature": "@Override public List<Map<String, String>> findSubjectsLogins(String searchString, int maxResults)", "class_method_signature": "ExtSourceREMS.findSubjectsLogins(String searchString, int maxResults)", "testcase": false, "constructor": false}, {"identifier": "getGroupSubjects", "parameters": "(Map<String, String> attributes)", "modifiers": "@Override public", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> getGroupSubjects(Map<String, String> attributes)", "full_signature": "@Override public List<Map<String, String>> getGroupSubjects(Map<String, String> attributes)", "class_method_signature": "ExtSourceREMS.getGroupSubjects(Map<String, String> attributes)", "testcase": false, "constructor": false}, {"identifier": "getSubjectGroups", "parameters": "(Map<String, String> attributes)", "modifiers": "@Override public", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> getSubjectGroups(Map<String, String> attributes)", "full_signature": "@Override public List<Map<String, String>> getSubjectGroups(Map<String, String> attributes)", "class_method_signature": "ExtSourceREMS.getSubjectGroups(Map<String, String> attributes)", "testcase": false, "constructor": false}, {"identifier": "getUsersSubjects", "parameters": "()", "modifiers": "@Override public", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> getUsersSubjects()", "full_signature": "@Override public List<Map<String, String>> getUsersSubjects()", "class_method_signature": "ExtSourceREMS.getUsersSubjects()", "testcase": false, "constructor": false}, {"identifier": "filterNonExistingUsers", "parameters": "(List<Map<String, String>> subjects)", "modifiers": "private", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> filterNonExistingUsers(List<Map<String, String>> subjects)", "full_signature": "private List<Map<String, String>> filterNonExistingUsers(List<Map<String, String>> subjects)", "class_method_signature": "ExtSourceREMS.filterNonExistingUsers(List<Map<String, String>> subjects)", "testcase": false, "constructor": false}, {"identifier": "isExistingUser", "parameters": "(Map<String, String> subject)", "modifiers": "private", "return": "boolean", "signature": "boolean isExistingUser(Map<String, String> subject)", "full_signature": "private boolean isExistingUser(Map<String, String> subject)", "class_method_signature": "ExtSourceREMS.isExistingUser(Map<String, String> subject)", "testcase": false, "constructor": false}, {"identifier": "existsSubjectWithUes", "parameters": "(String ues)", "modifiers": "private", "return": "boolean", "signature": "boolean existsSubjectWithUes(String ues)", "full_signature": "private boolean existsSubjectWithUes(String ues)", "class_method_signature": "ExtSourceREMS.existsSubjectWithUes(String ues)", "testcase": false, "constructor": false}, {"identifier": "getAdditionalUESes", "parameters": "(Map<String, String> subject)", "modifiers": "private", "return": "List<String>", "signature": "List<String> getAdditionalUESes(Map<String, String> subject)", "full_signature": "private List<String> getAdditionalUESes(Map<String, String> subject)", "class_method_signature": "ExtSourceREMS.getAdditionalUESes(Map<String, String> subject)", "testcase": false, "constructor": false}, {"identifier": "getSession", "parameters": "()", "modifiers": "private", "return": "PerunSession", "signature": "PerunSession getSession()", "full_signature": "private PerunSession getSession()", "class_method_signature": "ExtSourceREMS.getSession()", "testcase": false, "constructor": false}], "file": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/ExtSourceREMS.java"}, "focal_method": {"identifier": "getUsersSubjects", "parameters": "()", "modifiers": "@Override public", "return": "List<Map<String, String>>", "body": "@Override\n\tpublic List<Map<String, String>> getUsersSubjects() {\n\t\tList<Map<String, String>> subjects = super.getUsersSubjects();\n\t\treturn filterNonExistingUsers(subjects);\n\t}", "signature": "List<Map<String, String>> getUsersSubjects()", "full_signature": "@Override public List<Map<String, String>> getUsersSubjects()", "class_method_signature": "ExtSourceREMS.getUsersSubjects()", "testcase": false, "constructor": false, "invocations": ["getUsersSubjects", "filterNonExistingUsers"]}, "repository": {"repo_id": 4085998, "url": "https://github.com/CESNET/perun", "stars": 38, "created": "4/20/2012 11:55:38 AM +00:00", "updates": "2020-01-27T09:51:13+00:00", "fork": "False", "license": "licensed"}}