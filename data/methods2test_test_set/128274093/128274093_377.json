{"test_class": {"identifier": "CompletableCacheTest", "superclass": "", "interfaces": "implements Consumer<Object>, Action", "fields": [{"original_string": "volatile int count;", "modifier": "volatile", "type": "int", "declarator": "count", "var_name": "count"}], "file": "rxjava/src/test/java/io/reactivex/internal/operators/completable/CompletableCacheTest.java"}, "test_case": {"identifier": "crossDisposeOnError", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void crossDisposeOnError() {\n        PublishSubject<Integer> ps = PublishSubject.create();\n\n        final TestObserver<Void> to1 = new TestObserver<Void>();\n\n        final TestObserver<Void> to2 = new TestObserver<Void>() {\n            @Override\n            public void onError(Throwable ex) {\n                super.onError(ex);\n                to1.cancel();\n            }\n        };\n\n        Completable c = ps.ignoreElements().cache();\n\n        c.subscribe(to2);\n        c.subscribe(to1);\n\n        ps.onError(new TestException());\n\n        to1.assertEmpty();\n        to2.assertFailure(TestException.class);\n    }", "signature": "void crossDisposeOnError()", "full_signature": "@Test public void crossDisposeOnError()", "class_method_signature": "CompletableCacheTest.crossDisposeOnError()", "testcase": true, "constructor": false, "invocations": ["create", "onError", "cancel", "cache", "ignoreElements", "subscribe", "subscribe", "onError", "assertEmpty", "assertFailure"]}, "focal_class": {"identifier": "CompletableCache", "superclass": "extends Completable", "interfaces": "implements CompletableObserver", "fields": [{"original_string": "static final InnerCompletableCache[] EMPTY = new InnerCompletableCache[0];", "modifier": "static final", "type": "InnerCompletableCache[]", "declarator": "EMPTY = new InnerCompletableCache[0]", "var_name": "EMPTY"}, {"original_string": "static final InnerCompletableCache[] TERMINATED = new InnerCompletableCache[0];", "modifier": "static final", "type": "InnerCompletableCache[]", "declarator": "TERMINATED = new InnerCompletableCache[0]", "var_name": "TERMINATED"}, {"original_string": "final CompletableSource source;", "modifier": "final", "type": "CompletableSource", "declarator": "source", "var_name": "source"}, {"original_string": "final AtomicReference<InnerCompletableCache[]> observers;", "modifier": "final", "type": "AtomicReference<InnerCompletableCache[]>", "declarator": "observers", "var_name": "observers"}, {"original_string": "final AtomicBoolean once;", "modifier": "final", "type": "AtomicBoolean", "declarator": "once", "var_name": "once"}, {"original_string": "Throwable error;", "modifier": "", "type": "Throwable", "declarator": "error", "var_name": "error"}], "methods": [{"identifier": "CompletableCache", "parameters": "(CompletableSource source)", "modifiers": "public", "return": "", "signature": " CompletableCache(CompletableSource source)", "full_signature": "public  CompletableCache(CompletableSource source)", "class_method_signature": "CompletableCache.CompletableCache(CompletableSource source)", "testcase": false, "constructor": true}, {"identifier": "subscribeActual", "parameters": "(CompletableObserver s)", "modifiers": "@Override protected", "return": "void", "signature": "void subscribeActual(CompletableObserver s)", "full_signature": "@Override protected void subscribeActual(CompletableObserver s)", "class_method_signature": "CompletableCache.subscribeActual(CompletableObserver s)", "testcase": false, "constructor": false}, {"identifier": "onSubscribe", "parameters": "(Disposable d)", "modifiers": "@Override public", "return": "void", "signature": "void onSubscribe(Disposable d)", "full_signature": "@Override public void onSubscribe(Disposable d)", "class_method_signature": "CompletableCache.onSubscribe(Disposable d)", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(Throwable e)", "modifiers": "@Override public", "return": "void", "signature": "void onError(Throwable e)", "full_signature": "@Override public void onError(Throwable e)", "class_method_signature": "CompletableCache.onError(Throwable e)", "testcase": false, "constructor": false}, {"identifier": "onComplete", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onComplete()", "full_signature": "@Override public void onComplete()", "class_method_signature": "CompletableCache.onComplete()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(InnerCompletableCache inner)", "modifiers": "", "return": "boolean", "signature": "boolean add(InnerCompletableCache inner)", "full_signature": " boolean add(InnerCompletableCache inner)", "class_method_signature": "CompletableCache.add(InnerCompletableCache inner)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(InnerCompletableCache inner)", "modifiers": "", "return": "void", "signature": "void remove(InnerCompletableCache inner)", "full_signature": " void remove(InnerCompletableCache inner)", "class_method_signature": "CompletableCache.remove(InnerCompletableCache inner)", "testcase": false, "constructor": false}], "file": "rxjava/src/main/java/io/reactivex/internal/operators/completable/CompletableCache.java"}, "focal_method": {"identifier": "onError", "parameters": "(Throwable e)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onError(Throwable e) {\n        error = e;\n        for (InnerCompletableCache inner : observers.getAndSet(TERMINATED)) {\n            if (!inner.get()) {\n                inner.actual.onError(e);\n            }\n        }\n    }", "signature": "void onError(Throwable e)", "full_signature": "@Override public void onError(Throwable e)", "class_method_signature": "CompletableCache.onError(Throwable e)", "testcase": false, "constructor": false, "invocations": ["getAndSet", "get", "onError"]}, "repository": {"repo_id": 128274093, "url": "https://github.com/artem-zinnatullin/error-prone-performance", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 13, "size": 22484, "license": "licensed"}}