{"test_class": {"identifier": "PrimesTest", "superclass": "", "interfaces": "", "fields": [], "file": "java/algorithm/src/test/java/org/apidesign/demo/sieve/eratosthenes/PrimesTest.java"}, "test_case": {"identifier": "fifthThousandThPrime", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void fifthThousandThPrime() {\n        Primes p = new Primes() {\n            @Override\n            protected void log(String msg) {\n            }\n        };\n        int last = p.compute();\n        assertEquals(\"100000th prime is\", 1_299_709, last);\n    }", "signature": "void fifthThousandThPrime()", "full_signature": "@Test public void fifthThousandThPrime()", "class_method_signature": "PrimesTest.fifthThousandThPrime()", "testcase": true, "constructor": false, "invocations": ["compute", "assertEquals"]}, "focal_class": {"identifier": "Primes", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Natural natural;", "modifier": "private final", "type": "Natural", "declarator": "natural", "var_name": "natural"}, {"original_string": "private Filter filter;", "modifier": "private", "type": "Filter", "declarator": "filter", "var_name": "filter"}], "methods": [{"identifier": "Primes", "parameters": "()", "modifiers": "protected", "return": "", "signature": " Primes()", "full_signature": "protected  Primes()", "class_method_signature": "Primes.Primes()", "testcase": false, "constructor": true}, {"identifier": "next", "parameters": "()", "modifiers": "", "return": "int", "signature": "int next()", "full_signature": " int next()", "class_method_signature": "Primes.next()", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(String msg)", "modifiers": "protected abstract", "return": "void", "signature": "void log(String msg)", "full_signature": "protected abstract void log(String msg)", "class_method_signature": "Primes.log(String msg)", "testcase": false, "constructor": false}, {"identifier": "compute", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int compute()", "full_signature": "public final int compute()", "class_method_signature": "Primes.compute()", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String... args)", "modifiers": "public static", "return": "void", "signature": "void main(String... args)", "full_signature": "public static void main(String... args)", "class_method_signature": "Primes.main(String... args)", "testcase": false, "constructor": false}], "file": "java/algorithm/src/main/java/org/apidesign/demo/sieve/eratosthenes/Primes.java"}, "focal_method": {"identifier": "compute", "parameters": "()", "modifiers": "public final", "return": "int", "body": "public final int compute() {\n        long start = System.currentTimeMillis();\n        int cnt = 0;\n        int prntCnt = 97;\n        int res;\n        for (;;) {\n            res = next();\n            cnt += 1;\n            if (cnt % prntCnt == 0) {\n                log(\"Computed \" + cnt + \" primes in \" + (System.currentTimeMillis() - start) + \" ms. Last one is \" + res);\n                prntCnt *= 2;\n            }\n            if (cnt >= 100000) {\n                break;\n            }\n        }\n        return res;\n    }", "signature": "int compute()", "full_signature": "public final int compute()", "class_method_signature": "Primes.compute()", "testcase": false, "constructor": false, "invocations": ["currentTimeMillis", "next", "log", "currentTimeMillis"]}, "repository": {"repo_id": 49875177, "url": "https://github.com/jtulach/sieve", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 23, "size": 135, "license": "licensed"}}