{"test_class": {"identifier": "DefaultCommandRunnerTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/github/swissquote/carnotzet/core/runtime/DefaultCommandRunnerTest.java"}, "test_case": {"identifier": "test_large_output", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test_large_output() throws Exception {\n\n\t\t// create temp file of about 274k\n\t\tfinal File tmp = File.createTempFile(\"carnotzet-test\", null);\n\t\ttmp.deleteOnExit();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor (int i = 0; i < 10000; i++){\n\t\t\tsb.append(\"This line is repeated a lot\\n\");\n\t\t}\n\t\tString expected = sb.toString();\n\t\tFileUtils.write(tmp, expected);\n\n\t\t// When\n\t\tString actual = new SimpleTimeLimiter().callWithTimeout(\n\t\t\t\t() -> DefaultCommandRunner.INSTANCE.runCommandAndCaptureOutput(\"cat\", tmp.getAbsolutePath()),\n\t\t\t\t2, TimeUnit.SECONDS, true);\n\n\t\t// Then\n\t\tAssert.assertThat(actual, Is.is(expected.trim()));\n\t}", "signature": "void test_large_output()", "full_signature": "@Test public void test_large_output()", "class_method_signature": "DefaultCommandRunnerTest.test_large_output()", "testcase": true, "constructor": false, "invocations": ["createTempFile", "deleteOnExit", "append", "toString", "write", "callWithTimeout", "runCommandAndCaptureOutput", "getAbsolutePath", "assertThat", "is", "trim"]}, "focal_class": {"identifier": "DefaultCommandRunner", "superclass": "", "interfaces": "implements CommandRunner", "fields": [{"original_string": "public static final DefaultCommandRunner INSTANCE = new DefaultCommandRunner();", "modifier": "public static final", "type": "DefaultCommandRunner", "declarator": "INSTANCE = new DefaultCommandRunner()", "var_name": "INSTANCE"}], "methods": [{"identifier": "DefaultCommandRunner", "parameters": "()", "modifiers": "private", "return": "", "signature": " DefaultCommandRunner()", "full_signature": "private  DefaultCommandRunner()", "class_method_signature": "DefaultCommandRunner.DefaultCommandRunner()", "testcase": false, "constructor": true}, {"identifier": "runCommand", "parameters": "(String... command)", "modifiers": "public", "return": "int", "signature": "int runCommand(String... command)", "full_signature": "public int runCommand(String... command)", "class_method_signature": "DefaultCommandRunner.runCommand(String... command)", "testcase": false, "constructor": false}, {"identifier": "runCommand", "parameters": "(Boolean inheritIo, String... command)", "modifiers": "public", "return": "int", "signature": "int runCommand(Boolean inheritIo, String... command)", "full_signature": "public int runCommand(Boolean inheritIo, String... command)", "class_method_signature": "DefaultCommandRunner.runCommand(Boolean inheritIo, String... command)", "testcase": false, "constructor": false}, {"identifier": "runCommand", "parameters": "(File directoryForRunning, String... command)", "modifiers": "public", "return": "int", "signature": "int runCommand(File directoryForRunning, String... command)", "full_signature": "public int runCommand(File directoryForRunning, String... command)", "class_method_signature": "DefaultCommandRunner.runCommand(File directoryForRunning, String... command)", "testcase": false, "constructor": false}, {"identifier": "runCommand", "parameters": "(Boolean inheritIo, File directoryForRunning, String... command)", "modifiers": "public", "return": "int", "signature": "int runCommand(Boolean inheritIo, File directoryForRunning, String... command)", "full_signature": "public int runCommand(Boolean inheritIo, File directoryForRunning, String... command)", "class_method_signature": "DefaultCommandRunner.runCommand(Boolean inheritIo, File directoryForRunning, String... command)", "testcase": false, "constructor": false}, {"identifier": "runCommandAndCaptureOutput", "parameters": "(String... command)", "modifiers": "public", "return": "String", "signature": "String runCommandAndCaptureOutput(String... command)", "full_signature": "public String runCommandAndCaptureOutput(String... command)", "class_method_signature": "DefaultCommandRunner.runCommandAndCaptureOutput(String... command)", "testcase": false, "constructor": false}, {"identifier": "runCommandAndCaptureOutput", "parameters": "(File directoryForRunning, String... command)", "modifiers": "public", "return": "String", "signature": "String runCommandAndCaptureOutput(File directoryForRunning, String... command)", "full_signature": "public String runCommandAndCaptureOutput(File directoryForRunning, String... command)", "class_method_signature": "DefaultCommandRunner.runCommandAndCaptureOutput(File directoryForRunning, String... command)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/github/swissquote/carnotzet/core/runtime/DefaultCommandRunner.java"}, "focal_method": {"identifier": "runCommandAndCaptureOutput", "parameters": "(String... command)", "modifiers": "public", "return": "String", "body": "public String runCommandAndCaptureOutput(String... command) {\n\t\treturn runCommandAndCaptureOutput(new File(\"/\"), command);\n\t}", "signature": "String runCommandAndCaptureOutput(String... command)", "full_signature": "public String runCommandAndCaptureOutput(String... command)", "class_method_signature": "DefaultCommandRunner.runCommandAndCaptureOutput(String... command)", "testcase": false, "constructor": false, "invocations": ["runCommandAndCaptureOutput"]}, "repository": {"repo_id": 86467203, "url": "https://github.com/swissquote/carnotzet", "language": "Java", "is_fork": false, "fork_count": 16, "stargazer_count": 36, "size": 803, "license": "licensed"}}