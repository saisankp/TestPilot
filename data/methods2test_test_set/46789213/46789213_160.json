{"test_class": {"identifier": "TestByteArrayHelper", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/dk/alexandra/fresco/framework/util/TestByteArrayHelper.java"}, "test_case": {"identifier": "testShiftArray2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testShiftArray2() {\n    byte[] input = new byte[] { (byte) 0x80, (byte) 0x01 };\n    byte[] output = new byte[4];\n    ByteArrayHelper.shiftArray(input, output, 8);\n    byte[] expected = new byte[] { (byte) 0x00, (byte) 0x80, (byte) 0x01,\n        (byte) 0x00 };\n    for (int i = 0; i < 4; i++) {\n      assertEquals(expected[i], output[i]);\n    }\n  }", "signature": "void testShiftArray2()", "full_signature": "@Test public void testShiftArray2()", "class_method_signature": "TestByteArrayHelper.testShiftArray2()", "testcase": true, "constructor": false, "invocations": ["shiftArray", "assertEquals"]}, "focal_class": {"identifier": "ByteArrayHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ByteArrayHelper", "parameters": "()", "modifiers": "private", "return": "", "signature": " ByteArrayHelper()", "full_signature": "private  ByteArrayHelper()", "class_method_signature": "ByteArrayHelper.ByteArrayHelper()", "testcase": false, "constructor": true}, {"identifier": "getBit", "parameters": "(byte[] input, int index)", "modifiers": "public static", "return": "boolean", "signature": "boolean getBit(byte[] input, int index)", "full_signature": "public static boolean getBit(byte[] input, int index)", "class_method_signature": "ByteArrayHelper.getBit(byte[] input, int index)", "testcase": false, "constructor": false}, {"identifier": "setBit", "parameters": "(byte[] input, int index, boolean choice)", "modifiers": "public static", "return": "void", "signature": "void setBit(byte[] input, int index, boolean choice)", "full_signature": "public static void setBit(byte[] input, int index, boolean choice)", "class_method_signature": "ByteArrayHelper.setBit(byte[] input, int index, boolean choice)", "testcase": false, "constructor": false}, {"identifier": "xor", "parameters": "(List<byte[]> vector1, List<byte[]> vector2)", "modifiers": "public static", "return": "void", "signature": "void xor(List<byte[]> vector1, List<byte[]> vector2)", "full_signature": "public static void xor(List<byte[]> vector1, List<byte[]> vector2)", "class_method_signature": "ByteArrayHelper.xor(List<byte[]> vector1, List<byte[]> vector2)", "testcase": false, "constructor": false}, {"identifier": "xor", "parameters": "(byte[] arr1, byte[] arr2)", "modifiers": "public static", "return": "void", "signature": "void xor(byte[] arr1, byte[] arr2)", "full_signature": "public static void xor(byte[] arr1, byte[] arr2)", "class_method_signature": "ByteArrayHelper.xor(byte[] arr1, byte[] arr2)", "testcase": false, "constructor": false}, {"identifier": "shiftArray", "parameters": "(byte[] input, byte[] output, int positions)", "modifiers": "public static", "return": "void", "signature": "void shiftArray(byte[] input, byte[] output, int positions)", "full_signature": "public static void shiftArray(byte[] input, byte[] output, int positions)", "class_method_signature": "ByteArrayHelper.shiftArray(byte[] input, byte[] output, int positions)", "testcase": false, "constructor": false}], "file": "core/src/main/java/dk/alexandra/fresco/framework/util/ByteArrayHelper.java"}, "focal_method": {"identifier": "shiftArray", "parameters": "(byte[] input, byte[] output, int positions)", "modifiers": "public static", "return": "void", "body": "public static void shiftArray(byte[] input, byte[] output, int positions) {\n    for (int i = 0; i < input.length * 8; i++) {\n      setBit(output, positions + i, getBit(input, i));\n    }\n  }", "signature": "void shiftArray(byte[] input, byte[] output, int positions)", "full_signature": "public static void shiftArray(byte[] input, byte[] output, int positions)", "class_method_signature": "ByteArrayHelper.shiftArray(byte[] input, byte[] output, int positions)", "testcase": false, "constructor": false, "invocations": ["setBit", "getBit"]}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}