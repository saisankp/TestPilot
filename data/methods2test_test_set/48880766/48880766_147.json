{"test_class": {"identifier": "SourceTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/tech/tablesaw/io/SourceTest.java"}, "test_case": {"identifier": "getCharSet", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void getCharSet() {\n    assertEquals(\n        \"ISO-8859-1\",\n        Source.getCharSet(Paths.get(\"../data\", \"urb_cpop1_1_Data.csv\").toFile()).name());\n  }", "signature": "void getCharSet()", "full_signature": "@Test void getCharSet()", "class_method_signature": "SourceTest.getCharSet()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "name", "getCharSet", "toFile", "get"]}, "focal_class": {"identifier": "Source", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected final File file;", "modifier": "protected final", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "protected final Reader reader;", "modifier": "protected final", "type": "Reader", "declarator": "reader", "var_name": "reader"}, {"original_string": "protected final InputStream inputStream;", "modifier": "protected final", "type": "InputStream", "declarator": "inputStream", "var_name": "inputStream"}, {"original_string": "protected final Charset charset;", "modifier": "protected final", "type": "Charset", "declarator": "charset", "var_name": "charset"}], "methods": [{"identifier": "Source", "parameters": "(File file)", "modifiers": "public", "return": "", "signature": " Source(File file)", "full_signature": "public  Source(File file)", "class_method_signature": "Source.Source(File file)", "testcase": false, "constructor": true}, {"identifier": "Source", "parameters": "(File file, Charset charset)", "modifiers": "public", "return": "", "signature": " Source(File file, Charset charset)", "full_signature": "public  Source(File file, Charset charset)", "class_method_signature": "Source.Source(File file, Charset charset)", "testcase": false, "constructor": true}, {"identifier": "Source", "parameters": "(Reader reader)", "modifiers": "public", "return": "", "signature": " Source(Reader reader)", "full_signature": "public  Source(Reader reader)", "class_method_signature": "Source.Source(Reader reader)", "testcase": false, "constructor": true}, {"identifier": "Source", "parameters": "(InputStream inputStream)", "modifiers": "public", "return": "", "signature": " Source(InputStream inputStream)", "full_signature": "public  Source(InputStream inputStream)", "class_method_signature": "Source.Source(InputStream inputStream)", "testcase": false, "constructor": true}, {"identifier": "Source", "parameters": "(InputStream inputStream, Charset charset)", "modifiers": "public", "return": "", "signature": " Source(InputStream inputStream, Charset charset)", "full_signature": "public  Source(InputStream inputStream, Charset charset)", "class_method_signature": "Source.Source(InputStream inputStream, Charset charset)", "testcase": false, "constructor": true}, {"identifier": "fromString", "parameters": "(String s)", "modifiers": "public static", "return": "Source", "signature": "Source fromString(String s)", "full_signature": "public static Source fromString(String s)", "class_method_signature": "Source.fromString(String s)", "testcase": false, "constructor": false}, {"identifier": "fromUrl", "parameters": "(String url)", "modifiers": "public static", "return": "Source", "signature": "Source fromUrl(String url)", "full_signature": "public static Source fromUrl(String url)", "class_method_signature": "Source.fromUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "file", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File file()", "full_signature": "public File file()", "class_method_signature": "Source.file()", "testcase": false, "constructor": false}, {"identifier": "reader", "parameters": "()", "modifiers": "public", "return": "Reader", "signature": "Reader reader()", "full_signature": "public Reader reader()", "class_method_signature": "Source.reader()", "testcase": false, "constructor": false}, {"identifier": "inputStream", "parameters": "()", "modifiers": "public", "return": "InputStream", "signature": "InputStream inputStream()", "full_signature": "public InputStream inputStream()", "class_method_signature": "Source.inputStream()", "testcase": false, "constructor": false}, {"identifier": "createReader", "parameters": "(byte[] cachedBytes)", "modifiers": "public", "return": "Reader", "signature": "Reader createReader(byte[] cachedBytes)", "full_signature": "public Reader createReader(byte[] cachedBytes)", "class_method_signature": "Source.createReader(byte[] cachedBytes)", "testcase": false, "constructor": false}, {"identifier": "loadUrl", "parameters": "(String url)", "modifiers": "private static", "return": "String", "signature": "String loadUrl(String url)", "full_signature": "private static String loadUrl(String url)", "class_method_signature": "Source.loadUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "getCharSet", "parameters": "(File file)", "modifiers": "@VisibleForTesting static", "return": "Charset", "signature": "Charset getCharSet(File file)", "full_signature": "@VisibleForTesting static Charset getCharSet(File file)", "class_method_signature": "Source.getCharSet(File file)", "testcase": false, "constructor": false}, {"identifier": "getCharSet", "parameters": "(byte[] buffer)", "modifiers": "private static", "return": "Charset", "signature": "Charset getCharSet(byte[] buffer)", "full_signature": "private static Charset getCharSet(byte[] buffer)", "class_method_signature": "Source.getCharSet(byte[] buffer)", "testcase": false, "constructor": false}], "file": "core/src/main/java/tech/tablesaw/io/Source.java"}, "focal_method": {"identifier": "getCharSet", "parameters": "(File file)", "modifiers": "@VisibleForTesting static", "return": "Charset", "body": "@VisibleForTesting\n  static Charset getCharSet(File file) {\n    long bufferSize = file.length() < 9999 ? file.length() : 9999;\n    byte[] buffer = new byte[(int) bufferSize];\n    try (InputStream initialStream = new FileInputStream(file)) {\n      int bytesRead = initialStream.read(buffer);\n      if (bytesRead < bufferSize) {\n        throw new IOException(\"Was not able to read expected number of bytes\");\n      }\n    } catch (IOException e) {\n      throw new IllegalStateException(e);\n    }\n    return getCharSet(buffer);\n  }", "signature": "Charset getCharSet(File file)", "full_signature": "@VisibleForTesting static Charset getCharSet(File file)", "class_method_signature": "Source.getCharSet(File file)", "testcase": false, "constructor": false, "invocations": ["length", "length", "read", "getCharSet"]}, "repository": {"repo_id": 48880766, "url": "https://github.com/jtablesaw/tablesaw", "stars": 2021, "created": "1/1/2016 2:58:28 PM +00:00", "updates": "2020-01-24T23:26:07+00:00", "fork": "False", "license": "licensed"}}