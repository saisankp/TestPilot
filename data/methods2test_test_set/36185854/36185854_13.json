{"test_class": {"identifier": "MultiUriTemplateUtilTest", "superclass": "extends AbstractTest", "interfaces": "", "fields": [], "file": "feilong-spring-web/src/test/java/com/feilong/spring/web/util/MultiUriTemplateUtilTest.java"}, "test_case": {"identifier": "removeMultiVariableValue2222", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void removeMultiVariableValue2222(){\n        String requestPath = \"/s/c-m-c-s-k-s500,100,200,9000-o.htm\";\n        String matchingPatternPath = \"/s/c{categoryCode}-m{material}-c{color}-s{size}-k{kind}-s{style}-o{order}.htm\";\n        String variableName = \"style\";\n        String value = \"20000\";\n        String valueSeparator = \",\";\n        LOGGER.debug(MultiUriTemplateUtil.removeMultiVariableValue(requestPath, matchingPatternPath, variableName, value, valueSeparator));\n    }", "signature": "void removeMultiVariableValue2222()", "full_signature": "@Test public void removeMultiVariableValue2222()", "class_method_signature": "MultiUriTemplateUtilTest.removeMultiVariableValue2222()", "testcase": true, "constructor": false, "invocations": ["debug", "removeMultiVariableValue"]}, "focal_class": {"identifier": "MultiUriTemplateUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(MultiUriTemplateUtil.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(MultiUriTemplateUtil.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "MultiUriTemplateUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " MultiUriTemplateUtil()", "full_signature": "private  MultiUriTemplateUtil()", "class_method_signature": "MultiUriTemplateUtil.MultiUriTemplateUtil()", "testcase": false, "constructor": true}, {"identifier": "expandBestMatchingPatternMulti", "parameters": "(HttpServletRequest request,String variableName,String value,String valueSeparator)", "modifiers": "public static", "return": "String", "signature": "String expandBestMatchingPatternMulti(HttpServletRequest request,String variableName,String value,String valueSeparator)", "full_signature": "public static String expandBestMatchingPatternMulti(HttpServletRequest request,String variableName,String value,String valueSeparator)", "class_method_signature": "MultiUriTemplateUtil.expandBestMatchingPatternMulti(HttpServletRequest request,String variableName,String value,String valueSeparator)", "testcase": false, "constructor": false}, {"identifier": "expandWithMultiVariable", "parameters": "(\n                    String requestPath,\n                    String matchingPatternPath,\n                    String variableName,\n                    String value,\n                    String valueSeparator)", "modifiers": "public static", "return": "String", "signature": "String expandWithMultiVariable(\n                    String requestPath,\n                    String matchingPatternPath,\n                    String variableName,\n                    String value,\n                    String valueSeparator)", "full_signature": "public static String expandWithMultiVariable(\n                    String requestPath,\n                    String matchingPatternPath,\n                    String variableName,\n                    String value,\n                    String valueSeparator)", "class_method_signature": "MultiUriTemplateUtil.expandWithMultiVariable(\n                    String requestPath,\n                    String matchingPatternPath,\n                    String variableName,\n                    String value,\n                    String valueSeparator)", "testcase": false, "constructor": false}, {"identifier": "expandWithMultiVariable", "parameters": "(\n                    String matchingPatternPath,\n                    Map<String, String> map,\n                    String variableName,\n                    String value,\n                    String valueSeparator)", "modifiers": "public static", "return": "String", "signature": "String expandWithMultiVariable(\n                    String matchingPatternPath,\n                    Map<String, String> map,\n                    String variableName,\n                    String value,\n                    String valueSeparator)", "full_signature": "public static String expandWithMultiVariable(\n                    String matchingPatternPath,\n                    Map<String, String> map,\n                    String variableName,\n                    String value,\n                    String valueSeparator)", "class_method_signature": "MultiUriTemplateUtil.expandWithMultiVariable(\n                    String matchingPatternPath,\n                    Map<String, String> map,\n                    String variableName,\n                    String value,\n                    String valueSeparator)", "testcase": false, "constructor": false}, {"identifier": "defaultIfNull", "parameters": "(Map<String, String> map,HashMap<String, String> hashMap)", "modifiers": "private static", "return": "Map<String, String>", "signature": "Map<String, String> defaultIfNull(Map<String, String> map,HashMap<String, String> hashMap)", "full_signature": "private static Map<String, String> defaultIfNull(Map<String, String> map,HashMap<String, String> hashMap)", "class_method_signature": "MultiUriTemplateUtil.defaultIfNull(Map<String, String> map,HashMap<String, String> hashMap)", "testcase": false, "constructor": false}, {"identifier": "buildMutiValue", "parameters": "(String value,String valueSeparator,String oldValue)", "modifiers": "private static", "return": "String", "signature": "String buildMutiValue(String value,String valueSeparator,String oldValue)", "full_signature": "private static String buildMutiValue(String value,String valueSeparator,String oldValue)", "class_method_signature": "MultiUriTemplateUtil.buildMutiValue(String value,String valueSeparator,String oldValue)", "testcase": false, "constructor": false}, {"identifier": "removeMultiVariableValue", "parameters": "(\n                    String requestPath,\n                    String matchingPatternPath,\n                    String variableName,\n                    String value,\n                    String valueSeparator)", "modifiers": "public static", "return": "String", "signature": "String removeMultiVariableValue(\n                    String requestPath,\n                    String matchingPatternPath,\n                    String variableName,\n                    String value,\n                    String valueSeparator)", "full_signature": "public static String removeMultiVariableValue(\n                    String requestPath,\n                    String matchingPatternPath,\n                    String variableName,\n                    String value,\n                    String valueSeparator)", "class_method_signature": "MultiUriTemplateUtil.removeMultiVariableValue(\n                    String requestPath,\n                    String matchingPatternPath,\n                    String variableName,\n                    String value,\n                    String valueSeparator)", "testcase": false, "constructor": false}, {"identifier": "toList", "parameters": "(String oldValue,String valueSeparator)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> toList(String oldValue,String valueSeparator)", "full_signature": "private static List<String> toList(String oldValue,String valueSeparator)", "class_method_signature": "MultiUriTemplateUtil.toList(String oldValue,String valueSeparator)", "testcase": false, "constructor": false}, {"identifier": "toMutiValue", "parameters": "(List<String> list,String valueSeparator)", "modifiers": "private static", "return": "String", "signature": "String toMutiValue(List<String> list,String valueSeparator)", "full_signature": "private static String toMutiValue(List<String> list,String valueSeparator)", "class_method_signature": "MultiUriTemplateUtil.toMutiValue(List<String> list,String valueSeparator)", "testcase": false, "constructor": false}], "file": "feilong-spring-web/src/main/java/com/feilong/spring/web/util/MultiUriTemplateUtil.java"}, "focal_method": {"identifier": "removeMultiVariableValue", "parameters": "(\n                    String requestPath,\n                    String matchingPatternPath,\n                    String variableName,\n                    String value,\n                    String valueSeparator)", "modifiers": "public static", "return": "String", "body": "public static String removeMultiVariableValue(\n                    String requestPath,\n                    String matchingPatternPath,\n                    String variableName,\n                    String value,\n                    String valueSeparator){\n        Map<String, String> map = UriTemplateUtil.extractUriTemplateVariables(requestPath, matchingPatternPath);\n        String oldValue = map.get(variableName);\n        // \u5982\u679c\u6ca1\u6709\u503c\n        if (isNullOrEmpty(oldValue)){\n            String messagePattern = \"the requestPath:[{}],matchingPatternPath:[{}],variableName:[{}],value is null or empty~~~\";\n            LOGGER.debug(messagePattern, requestPath, matchingPatternPath, variableName);\n            return requestPath; // \u539f\u6837\u8f93\u51fa\n        }\n\n        //---------------------------------------------------------------\n        List<String> list = toList(oldValue, valueSeparator);\n\n        if (!list.contains(value)){\n            String messagePattern = \"requestPath:[{}],matchingPatternPath:[{}],variableName:[{}],oldValue:[{}],not contains({})~~~\";\n            LOGGER.debug(messagePattern, requestPath, matchingPatternPath, variableName, oldValue, value);\n            return requestPath; // \u539f\u6837\u8f93\u51fa\n        }\n\n        list.remove(value);// \u5982\u679c\u503c\u91cc\u9762\u6709 \u5c31\u79fb\u9664\n\n        map.put(variableName, toMutiValue(list, valueSeparator));\n\n        return UriTemplateUtil.expand(matchingPatternPath, map);\n    }", "signature": "String removeMultiVariableValue(\n                    String requestPath,\n                    String matchingPatternPath,\n                    String variableName,\n                    String value,\n                    String valueSeparator)", "full_signature": "public static String removeMultiVariableValue(\n                    String requestPath,\n                    String matchingPatternPath,\n                    String variableName,\n                    String value,\n                    String valueSeparator)", "class_method_signature": "MultiUriTemplateUtil.removeMultiVariableValue(\n                    String requestPath,\n                    String matchingPatternPath,\n                    String variableName,\n                    String value,\n                    String valueSeparator)", "testcase": false, "constructor": false, "invocations": ["extractUriTemplateVariables", "get", "isNullOrEmpty", "debug", "toList", "contains", "debug", "remove", "put", "toMutiValue", "expand"]}, "repository": {"repo_id": 36185854, "url": "https://github.com/ifeilong/feilong-spring", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 5, "size": 2088, "license": "licensed"}}