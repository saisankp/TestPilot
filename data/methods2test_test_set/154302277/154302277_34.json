{"test_class": {"identifier": "LongTermIntervalAndLongTermIntervalTypeValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LongTermIntervalAndLongTermIntervalTypeValidator validator = new LongTermIntervalAndLongTermIntervalTypeValidator();", "modifier": "private", "type": "LongTermIntervalAndLongTermIntervalTypeValidator", "declarator": "validator = new LongTermIntervalAndLongTermIntervalTypeValidator()", "var_name": "validator"}], "file": "osgp/platform/osgp-domain-core/src/test/java/org/opensmartgridplatform/domain/core/validation/LongTermIntervalAndLongTermIntervalTypeValidatorTest.java"}, "test_case": {"identifier": "testValidDayUpperRange", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidDayUpperRange() {\n        final Configuration input = this.createConfigurationInstance(30, LongTermIntervalType.DAYS);\n\n        assertThat(this.validator.isValid(input, null)).isTrue();\n    }", "signature": "void testValidDayUpperRange()", "full_signature": "@Test public void testValidDayUpperRange()", "class_method_signature": "LongTermIntervalAndLongTermIntervalTypeValidatorTest.testValidDayUpperRange()", "testcase": true, "constructor": false, "invocations": ["createConfigurationInstance", "isTrue", "assertThat", "isValid"]}, "focal_class": {"identifier": "LongTermIntervalAndLongTermIntervalTypeValidator", "superclass": "", "interfaces": "implements ConstraintValidator<LongTermIntervalAndLongTermIntervalType, Configuration>", "fields": [], "methods": [{"identifier": "initialize", "parameters": "(final LongTermIntervalAndLongTermIntervalType constraintAnnotation)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(final LongTermIntervalAndLongTermIntervalType constraintAnnotation)", "full_signature": "@Override public void initialize(final LongTermIntervalAndLongTermIntervalType constraintAnnotation)", "class_method_signature": "LongTermIntervalAndLongTermIntervalTypeValidator.initialize(final LongTermIntervalAndLongTermIntervalType constraintAnnotation)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(final Configuration value, final ConstraintValidatorContext context)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isValid(final Configuration value, final ConstraintValidatorContext context)", "full_signature": "@Override public boolean isValid(final Configuration value, final ConstraintValidatorContext context)", "class_method_signature": "LongTermIntervalAndLongTermIntervalTypeValidator.isValid(final Configuration value, final ConstraintValidatorContext context)", "testcase": false, "constructor": false}, {"identifier": "checkRanges", "parameters": "(final Integer interval, final LongTermIntervalType type)", "modifiers": "private", "return": "boolean", "signature": "boolean checkRanges(final Integer interval, final LongTermIntervalType type)", "full_signature": "private boolean checkRanges(final Integer interval, final LongTermIntervalType type)", "class_method_signature": "LongTermIntervalAndLongTermIntervalTypeValidator.checkRanges(final Integer interval, final LongTermIntervalType type)", "testcase": false, "constructor": false}], "file": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/validation/LongTermIntervalAndLongTermIntervalTypeValidator.java"}, "focal_method": {"identifier": "isValid", "parameters": "(final Configuration value, final ConstraintValidatorContext context)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isValid(final Configuration value, final ConstraintValidatorContext context) {\n        if (value == null) {\n            return true;\n        }\n        // If LongTermHistoryInterval or LongTermHistoryIntervalType is not\n        // present, the other must be not present as well.\n        if (value.getLongTermHistoryInterval() == null && value.getLongTermHistoryIntervalType() == null) {\n            return true;\n        }\n        // And, the value of long term history interval must be among the\n        // permitted values, defined by the ranges:\n        // - from 1 to 30 for long term history interval type DAYS.\n        // - from 1 to 12 for long term history interval type MONTHS.\n        final Integer interval = value.getLongTermHistoryInterval();\n        final LongTermIntervalType type = value.getLongTermHistoryIntervalType();\n        return this.checkRanges(interval, type);\n    }", "signature": "boolean isValid(final Configuration value, final ConstraintValidatorContext context)", "full_signature": "@Override public boolean isValid(final Configuration value, final ConstraintValidatorContext context)", "class_method_signature": "LongTermIntervalAndLongTermIntervalTypeValidator.isValid(final Configuration value, final ConstraintValidatorContext context)", "testcase": false, "constructor": false, "invocations": ["getLongTermHistoryInterval", "getLongTermHistoryIntervalType", "getLongTermHistoryInterval", "getLongTermHistoryIntervalType", "checkRanges"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}