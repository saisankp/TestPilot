{"test_class": {"identifier": "UserPropertyTransformerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final UUID uuid = UUID.fromString( \"6507f586-f154-4ec1-a25e-d7aa51de5216\" );", "modifier": "private static final", "type": "UUID", "declarator": "uuid = UUID.fromString( \"6507f586-f154-4ec1-a25e-d7aa51de5216\" )", "var_name": "uuid"}], "file": "dhis-2/dhis-api/src/test/java/org/hisp/dhis/schema/transformer/UserPropertyTransformerTest.java"}, "test_case": {"identifier": "testUserTransform", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUserTransform()\n    {\n        User user = new User();\n        UserCredentials userCredentials = new UserCredentials();\n        userCredentials.setUuid( uuid );\n        userCredentials.setUser( user );\n        userCredentials.setUsername( \"test\" );\n        userCredentials.setUserInfo( user );\n\n        user.setUserCredentials( userCredentials );\n        user.setUser( user );\n\n        UserPropertyTransformer transformer = new UserPropertyTransformer();\n        UserPropertyTransformer.UserDto userDto = (UserPropertyTransformer.UserDto) transformer.transform( user );\n\n        // assertEquals( uuid.toString(), userDto.getId() );\n        assertEquals( user.getUid(), userDto.getId() );\n        assertEquals( \"test\", userDto.getUsername() );\n    }", "signature": "void testUserTransform()", "full_signature": "@Test public void testUserTransform()", "class_method_signature": "UserPropertyTransformerTest.testUserTransform()", "testcase": true, "constructor": false, "invocations": ["setUuid", "setUser", "setUsername", "setUserInfo", "setUserCredentials", "setUser", "transform", "assertEquals", "getUid", "getId", "assertEquals", "getUsername"]}, "focal_class": {"identifier": "UserPropertyTransformer", "superclass": "extends AbstractPropertyTransformer<User>", "interfaces": "", "fields": [], "methods": [{"identifier": "UserPropertyTransformer", "parameters": "()", "modifiers": "public", "return": "", "signature": " UserPropertyTransformer()", "full_signature": "public  UserPropertyTransformer()", "class_method_signature": "UserPropertyTransformer.UserPropertyTransformer()", "testcase": false, "constructor": true}, {"identifier": "transform", "parameters": "( Object o )", "modifiers": "@Override @SuppressWarnings( { \"unchecked\", \"rawtypes\" } ) public", "return": "Object", "signature": "Object transform( Object o )", "full_signature": "@Override @SuppressWarnings( { \"unchecked\", \"rawtypes\" } ) public Object transform( Object o )", "class_method_signature": "UserPropertyTransformer.transform( Object o )", "testcase": false, "constructor": false}, {"identifier": "buildUserDto", "parameters": "( User user )", "modifiers": "private", "return": "UserDto", "signature": "UserDto buildUserDto( User user )", "full_signature": "private UserDto buildUserDto( User user )", "class_method_signature": "UserPropertyTransformer.buildUserDto( User user )", "testcase": false, "constructor": false}, {"identifier": "newCollectionInstance", "parameters": "( Class<?> clazz )", "modifiers": "private static", "return": "Collection<E>", "signature": "Collection<E> newCollectionInstance( Class<?> clazz )", "full_signature": "private static Collection<E> newCollectionInstance( Class<?> clazz )", "class_method_signature": "UserPropertyTransformer.newCollectionInstance( Class<?> clazz )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/schema/transformer/UserPropertyTransformer.java"}, "focal_method": {"identifier": "transform", "parameters": "( Object o )", "modifiers": "@Override @SuppressWarnings( { \"unchecked\", \"rawtypes\" } ) public", "return": "Object", "body": "@Override\n    @SuppressWarnings( { \"unchecked\", \"rawtypes\" } )\n    public Object transform( Object o )\n    {\n        if ( !(o instanceof User) )\n        {\n            if ( o instanceof Collection )\n            {\n                Collection collection = (Collection) o;\n\n                if ( collection.isEmpty() )\n                {\n                    return o;\n                }\n\n                Object next = collection.iterator().next();\n\n                if ( !(next instanceof User) )\n                {\n                    return o;\n                }\n\n                Collection<UserDto> userDtoCollection = newCollectionInstance( collection.getClass() );\n                collection.forEach( user -> userDtoCollection.add( buildUserDto( (User) user ) ) );\n\n                return userDtoCollection;\n            }\n\n            return o;\n        }\n\n        return buildUserDto( (User) o );\n    }", "signature": "Object transform( Object o )", "full_signature": "@Override @SuppressWarnings( { \"unchecked\", \"rawtypes\" } ) public Object transform( Object o )", "class_method_signature": "UserPropertyTransformer.transform( Object o )", "testcase": false, "constructor": false, "invocations": ["isEmpty", "next", "iterator", "newCollectionInstance", "getClass", "forEach", "add", "buildUserDto", "buildUserDto"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}