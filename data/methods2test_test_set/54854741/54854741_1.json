{"test_class": {"identifier": "ReportsServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final TransactionsService transactionsService = mock(TransactionsService.class);", "modifier": "private final", "type": "TransactionsService", "declarator": "transactionsService = mock(TransactionsService.class)", "var_name": "transactionsService"}, {"original_string": "private final ReportsService service = new ReportsService(transactionsService);", "modifier": "private final", "type": "ReportsService", "declarator": "service = new ReportsService(transactionsService)", "var_name": "service"}, {"original_string": "private Transactions transactions = createTransactions();", "modifier": "private", "type": "Transactions", "declarator": "transactions = createTransactions()", "var_name": "transactions"}], "file": "services/src/test/java/com/greensopinion/finance/services/reports/ReportsServiceTest.java"}, "test_case": {"identifier": "transactionsForMonth", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void transactionsForMonth() {\n\t\tPeriodTransactions transactionsForMonth = service.transactionsForMonth(201502);\n\t\tassertEquals(\"February 2015\", transactionsForMonth.getName());\n\t\tassertEquals(1, transactionsForMonth.getTransactions().size());\n\t\tassertTransaction(createTransactions().getTransactions().get(4), transactionsForMonth.getTransactions().get(0));\n\t}", "signature": "void transactionsForMonth()", "full_signature": "@Test public void transactionsForMonth()", "class_method_signature": "ReportsServiceTest.transactionsForMonth()", "testcase": true, "constructor": false, "invocations": ["transactionsForMonth", "assertEquals", "getName", "assertEquals", "size", "getTransactions", "assertTransaction", "get", "getTransactions", "createTransactions", "get", "getTransactions"]}, "focal_class": {"identifier": "ReportsService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ThreadLocal<DateFormat> yearMonthFormat = new ThreadLocal<DateFormat>() {\n\t\t@Override\n\t\tprotected DateFormat initialValue() {\n\t\t\treturn new SimpleDateFormat(\"yyyyMM\");\n\t\t}\n\t};", "modifier": "private static final", "type": "ThreadLocal<DateFormat>", "declarator": "yearMonthFormat = new ThreadLocal<DateFormat>() {\n\t\t@Override\n\t\tprotected DateFormat initialValue() {\n\t\t\treturn new SimpleDateFormat(\"yyyyMM\");\n\t\t}\n\t}", "var_name": "yearMonthFormat"}, {"original_string": "private static final ThreadLocal<DateFormat> readableYearMonthFormat = new ThreadLocal<DateFormat>() {\n\t\t@Override\n\t\tprotected DateFormat initialValue() {\n\t\t\treturn new SimpleDateFormat(\"MMMMMMMMMMM yyyy\");\n\t\t}\n\t};", "modifier": "private static final", "type": "ThreadLocal<DateFormat>", "declarator": "readableYearMonthFormat = new ThreadLocal<DateFormat>() {\n\t\t@Override\n\t\tprotected DateFormat initialValue() {\n\t\t\treturn new SimpleDateFormat(\"MMMMMMMMMMM yyyy\");\n\t\t}\n\t}", "var_name": "readableYearMonthFormat"}, {"original_string": "private final TransactionsService transactionsService;", "modifier": "private final", "type": "TransactionsService", "declarator": "transactionsService", "var_name": "transactionsService"}], "methods": [{"identifier": "ReportsService", "parameters": "(TransactionsService transactionsService)", "modifiers": "@Inject", "return": "", "signature": " ReportsService(TransactionsService transactionsService)", "full_signature": "@Inject  ReportsService(TransactionsService transactionsService)", "class_method_signature": "ReportsService.ReportsService(TransactionsService transactionsService)", "testcase": false, "constructor": true}, {"identifier": "incomeVersusExpenses", "parameters": "()", "modifiers": "public", "return": "IncomeVersusExpensesReport", "signature": "IncomeVersusExpensesReport incomeVersusExpenses()", "full_signature": "public IncomeVersusExpensesReport incomeVersusExpenses()", "class_method_signature": "ReportsService.incomeVersusExpenses()", "testcase": false, "constructor": false}, {"identifier": "expensesByCategory", "parameters": "()", "modifiers": "public", "return": "ExpensesByCategoryReport", "signature": "ExpensesByCategoryReport expensesByCategory()", "full_signature": "public ExpensesByCategoryReport expensesByCategory()", "class_method_signature": "ReportsService.expensesByCategory()", "testcase": false, "constructor": false}, {"identifier": "transactionsForMonth", "parameters": "(long yearMonth)", "modifiers": "public", "return": "PeriodTransactions", "signature": "PeriodTransactions transactionsForMonth(long yearMonth)", "full_signature": "public PeriodTransactions transactionsForMonth(long yearMonth)", "class_method_signature": "ReportsService.transactionsForMonth(long yearMonth)", "testcase": false, "constructor": false}, {"identifier": "detailsForMonth", "parameters": "(long yearMonth)", "modifiers": "public", "return": "PeriodDetails", "signature": "PeriodDetails detailsForMonth(long yearMonth)", "full_signature": "public PeriodDetails detailsForMonth(long yearMonth)", "class_method_signature": "ReportsService.detailsForMonth(long yearMonth)", "testcase": false, "constructor": false}, {"identifier": "transactions", "parameters": "(long yearMonth)", "modifiers": "private", "return": "List<Transaction>", "signature": "List<Transaction> transactions(long yearMonth)", "full_signature": "private List<Transaction> transactions(long yearMonth)", "class_method_signature": "ReportsService.transactions(long yearMonth)", "testcase": false, "constructor": false}, {"identifier": "monthName", "parameters": "(final Long yearMonth)", "modifiers": "private", "return": "String", "signature": "String monthName(final Long yearMonth)", "full_signature": "private String monthName(final Long yearMonth)", "class_method_signature": "ReportsService.monthName(final Long yearMonth)", "testcase": false, "constructor": false}, {"identifier": "yearMonth", "parameters": "(Date date)", "modifiers": "private", "return": "Long", "signature": "Long yearMonth(Date date)", "full_signature": "private Long yearMonth(Date date)", "class_method_signature": "ReportsService.yearMonth(Date date)", "testcase": false, "constructor": false}, {"identifier": "yearMonthFormat", "parameters": "()", "modifiers": "private", "return": "DateFormat", "signature": "DateFormat yearMonthFormat()", "full_signature": "private DateFormat yearMonthFormat()", "class_method_signature": "ReportsService.yearMonthFormat()", "testcase": false, "constructor": false}, {"identifier": "readableYearMonthFormat", "parameters": "()", "modifiers": "private", "return": "DateFormat", "signature": "DateFormat readableYearMonthFormat()", "full_signature": "private DateFormat readableYearMonthFormat()", "class_method_signature": "ReportsService.readableYearMonthFormat()", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/greensopinion/finance/services/reports/ReportsService.java"}, "focal_method": {"identifier": "transactionsForMonth", "parameters": "(long yearMonth)", "modifiers": "public", "return": "PeriodTransactions", "body": "public PeriodTransactions transactionsForMonth(long yearMonth) {\n\t\treturn new PeriodTransactions(monthName(yearMonth), transactions(yearMonth));\n\t}", "signature": "PeriodTransactions transactionsForMonth(long yearMonth)", "full_signature": "public PeriodTransactions transactionsForMonth(long yearMonth)", "class_method_signature": "ReportsService.transactionsForMonth(long yearMonth)", "testcase": false, "constructor": false, "invocations": ["monthName", "transactions"]}, "repository": {"repo_id": 54854741, "url": "https://github.com/greensopinion/greenbeans", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 30, "size": 1684, "license": "licensed"}}