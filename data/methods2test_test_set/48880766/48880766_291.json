{"test_class": {"identifier": "TextColumnTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final TextColumn column = TextColumn.create(\"testing\");", "modifier": "private final", "type": "TextColumn", "declarator": "column = TextColumn.create(\"testing\")", "var_name": "column"}], "file": "core/src/test/java/tech/tablesaw/api/TextColumnTest.java"}, "test_case": {"identifier": "testSize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSize() {\n    assertEquals(4, column.size());\n  }", "signature": "void testSize()", "full_signature": "@Test public void testSize()", "class_method_signature": "TextColumnTest.testSize()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "size"]}, "focal_class": {"identifier": "TextColumn", "superclass": "extends AbstractStringColumn<TextColumn>", "interfaces": "", "fields": [{"original_string": "private List<String> values;", "modifier": "private", "type": "List<String>", "declarator": "values", "var_name": "values"}, {"original_string": "private final IntComparator rowComparator =\n      (i, i1) -> {\n        String f1 = get(i);\n        String f2 = get(i1);\n        return f1.compareTo(f2);\n      };", "modifier": "private final", "type": "IntComparator", "declarator": "rowComparator =\n      (i, i1) -> {\n        String f1 = get(i);\n        String f2 = get(i1);\n        return f1.compareTo(f2);\n      }", "var_name": "rowComparator"}, {"original_string": "private final Comparator<String> descendingStringComparator = Comparator.reverseOrder();", "modifier": "private final", "type": "Comparator<String>", "declarator": "descendingStringComparator = Comparator.reverseOrder()", "var_name": "descendingStringComparator"}], "methods": [{"identifier": "TextColumn", "parameters": "(String name, Collection<String> strings)", "modifiers": "private", "return": "", "signature": " TextColumn(String name, Collection<String> strings)", "full_signature": "private  TextColumn(String name, Collection<String> strings)", "class_method_signature": "TextColumn.TextColumn(String name, Collection<String> strings)", "testcase": false, "constructor": true}, {"identifier": "TextColumn", "parameters": "(String name)", "modifiers": "private", "return": "", "signature": " TextColumn(String name)", "full_signature": "private  TextColumn(String name)", "class_method_signature": "TextColumn.TextColumn(String name)", "testcase": false, "constructor": true}, {"identifier": "TextColumn", "parameters": "(String name, String[] strings)", "modifiers": "private", "return": "", "signature": " TextColumn(String name, String[] strings)", "full_signature": "private  TextColumn(String name, String[] strings)", "class_method_signature": "TextColumn.TextColumn(String name, String[] strings)", "testcase": false, "constructor": true}, {"identifier": "valueIsMissing", "parameters": "(String string)", "modifiers": "public static", "return": "boolean", "signature": "boolean valueIsMissing(String string)", "full_signature": "public static boolean valueIsMissing(String string)", "class_method_signature": "TextColumn.valueIsMissing(String string)", "testcase": false, "constructor": false}, {"identifier": "appendMissing", "parameters": "()", "modifiers": "@Override public", "return": "TextColumn", "signature": "TextColumn appendMissing()", "full_signature": "@Override public TextColumn appendMissing()", "class_method_signature": "TextColumn.appendMissing()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name)", "modifiers": "public static", "return": "TextColumn", "signature": "TextColumn create(String name)", "full_signature": "public static TextColumn create(String name)", "class_method_signature": "TextColumn.create(String name)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name, String... strings)", "modifiers": "public static", "return": "TextColumn", "signature": "TextColumn create(String name, String... strings)", "full_signature": "public static TextColumn create(String name, String... strings)", "class_method_signature": "TextColumn.create(String name, String... strings)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name, Collection<String> strings)", "modifiers": "public static", "return": "TextColumn", "signature": "TextColumn create(String name, Collection<String> strings)", "full_signature": "public static TextColumn create(String name, Collection<String> strings)", "class_method_signature": "TextColumn.create(String name, Collection<String> strings)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name, int size)", "modifiers": "public static", "return": "TextColumn", "signature": "TextColumn create(String name, int size)", "full_signature": "public static TextColumn create(String name, int size)", "class_method_signature": "TextColumn.create(String name, int size)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name, Stream<String> stream)", "modifiers": "public static", "return": "TextColumn", "signature": "TextColumn create(String name, Stream<String> stream)", "full_signature": "public static TextColumn create(String name, Stream<String> stream)", "class_method_signature": "TextColumn.create(String name, Stream<String> stream)", "testcase": false, "constructor": false}, {"identifier": "isMissing", "parameters": "(int rowNumber)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isMissing(int rowNumber)", "full_signature": "@Override public boolean isMissing(int rowNumber)", "class_method_signature": "TextColumn.isMissing(int rowNumber)", "testcase": false, "constructor": false}, {"identifier": "emptyCopy", "parameters": "()", "modifiers": "@Override public", "return": "TextColumn", "signature": "TextColumn emptyCopy()", "full_signature": "@Override public TextColumn emptyCopy()", "class_method_signature": "TextColumn.emptyCopy()", "testcase": false, "constructor": false}, {"identifier": "emptyCopy", "parameters": "(int rowSize)", "modifiers": "@Override public", "return": "TextColumn", "signature": "TextColumn emptyCopy(int rowSize)", "full_signature": "@Override public TextColumn emptyCopy(int rowSize)", "class_method_signature": "TextColumn.emptyCopy(int rowSize)", "testcase": false, "constructor": false}, {"identifier": "sortAscending", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sortAscending()", "full_signature": "@Override public void sortAscending()", "class_method_signature": "TextColumn.sortAscending()", "testcase": false, "constructor": false}, {"identifier": "sortDescending", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sortDescending()", "full_signature": "@Override public void sortDescending()", "class_method_signature": "TextColumn.sortDescending()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "TextColumn.size()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int rowIndex)", "modifiers": "public", "return": "String", "signature": "String get(int rowIndex)", "full_signature": "public String get(int rowIndex)", "class_method_signature": "TextColumn.get(int rowIndex)", "testcase": false, "constructor": false}, {"identifier": "asList", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> asList()", "full_signature": "@Override public List<String> asList()", "class_method_signature": "TextColumn.asList()", "testcase": false, "constructor": false}, {"identifier": "summary", "parameters": "()", "modifiers": "@Override public", "return": "Table", "signature": "Table summary()", "full_signature": "@Override public Table summary()", "class_method_signature": "TextColumn.summary()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "TextColumn.clear()", "testcase": false, "constructor": false}, {"identifier": "lead", "parameters": "(int n)", "modifiers": "@Override public", "return": "TextColumn", "signature": "TextColumn lead(int n)", "full_signature": "@Override public TextColumn lead(int n)", "class_method_signature": "TextColumn.lead(int n)", "testcase": false, "constructor": false}, {"identifier": "lag", "parameters": "(int n)", "modifiers": "@Override public", "return": "TextColumn", "signature": "TextColumn lag(int n)", "full_signature": "@Override public TextColumn lag(int n)", "class_method_signature": "TextColumn.lag(int n)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(Selection rowSelection, String newValue)", "modifiers": "@Override public", "return": "TextColumn", "signature": "TextColumn set(Selection rowSelection, String newValue)", "full_signature": "@Override public TextColumn set(Selection rowSelection, String newValue)", "class_method_signature": "TextColumn.set(Selection rowSelection, String newValue)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int rowIndex, String stringValue)", "modifiers": "@Override public", "return": "TextColumn", "signature": "TextColumn set(int rowIndex, String stringValue)", "full_signature": "@Override public TextColumn set(int rowIndex, String stringValue)", "class_method_signature": "TextColumn.set(int rowIndex, String stringValue)", "testcase": false, "constructor": false}, {"identifier": "countUnique", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int countUnique()", "full_signature": "@Override public int countUnique()", "class_method_signature": "TextColumn.countUnique()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(String aString)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(String aString)", "full_signature": "@Override public boolean contains(String aString)", "class_method_signature": "TextColumn.contains(String aString)", "testcase": false, "constructor": false}, {"identifier": "setMissing", "parameters": "(int i)", "modifiers": "@Override public", "return": "TextColumn", "signature": "TextColumn setMissing(int i)", "full_signature": "@Override public TextColumn setMissing(int i)", "class_method_signature": "TextColumn.setMissing(int i)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(List<String> stringValues)", "modifiers": "public", "return": "TextColumn", "signature": "TextColumn addAll(List<String> stringValues)", "full_signature": "public TextColumn addAll(List<String> stringValues)", "class_method_signature": "TextColumn.addAll(List<String> stringValues)", "testcase": false, "constructor": false}, {"identifier": "appendCell", "parameters": "(String object)", "modifiers": "@Override public", "return": "TextColumn", "signature": "TextColumn appendCell(String object)", "full_signature": "@Override public TextColumn appendCell(String object)", "class_method_signature": "TextColumn.appendCell(String object)", "testcase": false, "constructor": false}, {"identifier": "appendCell", "parameters": "(String object, AbstractColumnParser<?> parser)", "modifiers": "@Override public", "return": "TextColumn", "signature": "TextColumn appendCell(String object, AbstractColumnParser<?> parser)", "full_signature": "@Override public TextColumn appendCell(String object, AbstractColumnParser<?> parser)", "class_method_signature": "TextColumn.appendCell(String object, AbstractColumnParser<?> parser)", "testcase": false, "constructor": false}, {"identifier": "rowComparator", "parameters": "()", "modifiers": "@Override public", "return": "IntComparator", "signature": "IntComparator rowComparator()", "full_signature": "@Override public IntComparator rowComparator()", "class_method_signature": "TextColumn.rowComparator()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "TextColumn.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "unique", "parameters": "()", "modifiers": "@Override public", "return": "TextColumn", "signature": "TextColumn unique()", "full_signature": "@Override public TextColumn unique()", "class_method_signature": "TextColumn.unique()", "testcase": false, "constructor": false}, {"identifier": "where", "parameters": "(Selection selection)", "modifiers": "public", "return": "TextColumn", "signature": "TextColumn where(Selection selection)", "full_signature": "public TextColumn where(Selection selection)", "class_method_signature": "TextColumn.where(Selection selection)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "@Override public", "return": "TextColumn", "signature": "TextColumn copy()", "full_signature": "@Override public TextColumn copy()", "class_method_signature": "TextColumn.copy()", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(Column<String> column)", "modifiers": "@Override public", "return": "TextColumn", "signature": "TextColumn append(Column<String> column)", "full_signature": "@Override public TextColumn append(Column<String> column)", "class_method_signature": "TextColumn.append(Column<String> column)", "testcase": false, "constructor": false}, {"identifier": "countMissing", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int countMissing()", "full_signature": "@Override public int countMissing()", "class_method_signature": "TextColumn.countMissing()", "testcase": false, "constructor": false}, {"identifier": "removeMissing", "parameters": "()", "modifiers": "@Override public", "return": "TextColumn", "signature": "TextColumn removeMissing()", "full_signature": "@Override public TextColumn removeMissing()", "class_method_signature": "TextColumn.removeMissing()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<String>", "signature": "Iterator<String> iterator()", "full_signature": "@Override public Iterator<String> iterator()", "class_method_signature": "TextColumn.iterator()", "testcase": false, "constructor": false}, {"identifier": "asSet", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> asSet()", "full_signature": "public Set<String> asSet()", "class_method_signature": "TextColumn.asSet()", "testcase": false, "constructor": false}, {"identifier": "asBytes", "parameters": "(int rowNumber)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] asBytes(int rowNumber)", "full_signature": "@Override public byte[] asBytes(int rowNumber)", "class_method_signature": "TextColumn.asBytes(int rowNumber)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(String value)", "modifiers": "public", "return": "TextColumn", "signature": "TextColumn append(String value)", "full_signature": "public TextColumn append(String value)", "class_method_signature": "TextColumn.append(String value)", "testcase": false, "constructor": false}, {"identifier": "appendObj", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "TextColumn", "signature": "TextColumn appendObj(Object obj)", "full_signature": "@Override public TextColumn appendObj(Object obj)", "class_method_signature": "TextColumn.appendObj(Object obj)", "testcase": false, "constructor": false}, {"identifier": "isIn", "parameters": "(String... strings)", "modifiers": "@Override public", "return": "Selection", "signature": "Selection isIn(String... strings)", "full_signature": "@Override public Selection isIn(String... strings)", "class_method_signature": "TextColumn.isIn(String... strings)", "testcase": false, "constructor": false}, {"identifier": "isIn", "parameters": "(Collection<String> strings)", "modifiers": "@Override public", "return": "Selection", "signature": "Selection isIn(Collection<String> strings)", "full_signature": "@Override public Selection isIn(Collection<String> strings)", "class_method_signature": "TextColumn.isIn(Collection<String> strings)", "testcase": false, "constructor": false}, {"identifier": "isNotIn", "parameters": "(String... strings)", "modifiers": "@Override public", "return": "Selection", "signature": "Selection isNotIn(String... strings)", "full_signature": "@Override public Selection isNotIn(String... strings)", "class_method_signature": "TextColumn.isNotIn(String... strings)", "testcase": false, "constructor": false}, {"identifier": "isNotIn", "parameters": "(Collection<String> strings)", "modifiers": "@Override public", "return": "Selection", "signature": "Selection isNotIn(Collection<String> strings)", "full_signature": "@Override public Selection isNotIn(Collection<String> strings)", "class_method_signature": "TextColumn.isNotIn(Collection<String> strings)", "testcase": false, "constructor": false}, {"identifier": "firstIndexOf", "parameters": "(String value)", "modifiers": "public", "return": "int", "signature": "int firstIndexOf(String value)", "full_signature": "public int firstIndexOf(String value)", "class_method_signature": "TextColumn.firstIndexOf(String value)", "testcase": false, "constructor": false}, {"identifier": "asObjectArray", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] asObjectArray()", "full_signature": "@Override public String[] asObjectArray()", "class_method_signature": "TextColumn.asObjectArray()", "testcase": false, "constructor": false}, {"identifier": "asStringColumn", "parameters": "()", "modifiers": "@Override public", "return": "StringColumn", "signature": "StringColumn asStringColumn()", "full_signature": "@Override public StringColumn asStringColumn()", "class_method_signature": "TextColumn.asStringColumn()", "testcase": false, "constructor": false}], "file": "core/src/main/java/tech/tablesaw/api/TextColumn.java"}, "focal_method": {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n  public int size() {\n    return values.size();\n  }", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "TextColumn.size()", "testcase": false, "constructor": false, "invocations": ["size"]}, "repository": {"repo_id": 48880766, "url": "https://github.com/jtablesaw/tablesaw", "stars": 2021, "created": "1/1/2016 2:58:28 PM +00:00", "updates": "2020-01-24T23:26:07+00:00", "fork": "False", "license": "licensed"}}