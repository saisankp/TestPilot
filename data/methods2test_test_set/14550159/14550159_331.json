{"test_class": {"identifier": "TemplatesParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TemplatesParser templatesParser;", "modifier": "private", "type": "TemplatesParser", "declarator": "templatesParser", "var_name": "templatesParser"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/provider/TemplatesParserTest.java"}, "test_case": {"identifier": "parsesGivenSourceToTemplates", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void parsesGivenSourceToTemplates() throws Exception {\n        try (InputStream testXslResource = Thread.currentThread().getContextClassLoader().getResourceAsStream(\"xslt/book.xsl\")) {\n            Source source = new StreamSource(testXslResource);\n            Templates templates = templatesParser.parseTemplates(source);\n            assertNotNull(templates);\n        }\n    }", "signature": "void parsesGivenSourceToTemplates()", "full_signature": "@Test public void parsesGivenSourceToTemplates()", "class_method_signature": "TemplatesParserTest.parsesGivenSourceToTemplates()", "testcase": true, "constructor": false, "invocations": ["getResourceAsStream", "getContextClassLoader", "currentThread", "parseTemplates", "assertNotNull"]}, "focal_class": {"identifier": "TemplatesParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EntityResolver resolver;", "modifier": "private", "type": "EntityResolver", "declarator": "resolver", "var_name": "resolver"}], "methods": [{"identifier": "setResolver", "parameters": "(EntityResolver resolver)", "modifiers": "public", "return": "void", "signature": "void setResolver(EntityResolver resolver)", "full_signature": "public void setResolver(EntityResolver resolver)", "class_method_signature": "TemplatesParser.setResolver(EntityResolver resolver)", "testcase": false, "constructor": false}, {"identifier": "parseTemplates", "parameters": "(Source source)", "modifiers": "public", "return": "Templates", "signature": "Templates parseTemplates(Source source)", "full_signature": "public Templates parseTemplates(Source source)", "class_method_signature": "TemplatesParser.parseTemplates(Source source)", "testcase": false, "constructor": false}, {"identifier": "createFeaturedSaxTransformerFactory", "parameters": "()", "modifiers": "private", "return": "SAXTransformerFactory", "signature": "SAXTransformerFactory createFeaturedSaxTransformerFactory()", "full_signature": "private SAXTransformerFactory createFeaturedSaxTransformerFactory()", "class_method_signature": "TemplatesParser.createFeaturedSaxTransformerFactory()", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/provider/TemplatesParser.java"}, "focal_method": {"identifier": "parseTemplates", "parameters": "(Source source)", "modifiers": "public", "return": "Templates", "body": "public Templates parseTemplates(Source source) throws TransformerConfigurationException, SAXException, IOException {\n        InputSource inputSource = SAXSource.sourceToInputSource(source);\n        if (inputSource == null) {\n            throw new RuntimeException(\"Unable convert to Input Source\");\n        }\n\n        SAXTransformerFactory saxTransformerFactory = createFeaturedSaxTransformerFactory();\n        TemplatesHandler templateHandler = saxTransformerFactory.newTemplatesHandler();\n        XMLReader xmlReader = XMLReaderFactory.createXMLReader();\n        if (resolver != null) {\n            xmlReader.setEntityResolver(resolver);\n        }\n        xmlReader.setContentHandler(templateHandler);\n\n        xmlReader.parse(inputSource);\n\n        Templates templates = templateHandler.getTemplates();\n        if (templates == null) {\n            throw new RuntimeException(\"Unable create templates from given source\");\n        }\n        return templates;\n    }", "signature": "Templates parseTemplates(Source source)", "full_signature": "public Templates parseTemplates(Source source)", "class_method_signature": "TemplatesParser.parseTemplates(Source source)", "testcase": false, "constructor": false, "invocations": ["sourceToInputSource", "createFeaturedSaxTransformerFactory", "newTemplatesHandler", "createXMLReader", "setEntityResolver", "setContentHandler", "parse", "getTemplates"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}