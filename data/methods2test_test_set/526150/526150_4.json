{"test_class": {"identifier": "GCTileFileTest", "superclass": "", "interfaces": "", "fields": [], "file": "beam-glob-due-reader/src/test/java/org/esa/beam/dataio/globcover/GCTileFileTest.java"}, "test_case": {"identifier": "testCreateGeoPos", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateGeoPos() {\n        GeoPos geoPos;\n        geoPos = GCTileFile.createGeoPos(\"012034059.567\", \"50012019.00000\");\n        assertEquals(12.583213, geoPos.getLon(), 1.0e-6);\n        assertEquals(50.205280, geoPos.getLat(), 1.0e-6);\n        geoPos = GCTileFile.createGeoPos(\"1005000.0\", \"0059059.99900\");\n        assertEquals(1.083333, geoPos.getLon(), 1.0e-6);\n        assertEquals(0.999999, geoPos.getLat(), 1.0e-6);\n        geoPos = GCTileFile.createGeoPos(\"5.00000\", \"2007.00000\");\n        assertEquals(0.001389, geoPos.getLon(), 1.0e-6);\n        assertEquals(0.035278, geoPos.getLat(), 1.0e-6);\n\n        geoPos = GCTileFile.createGeoPos(\"012034059.567\", \"-50012019.00000\");\n        assertEquals(12.583213, geoPos.getLon(), 1.0e-6);\n        assertEquals(-50.205280, geoPos.getLat(), 1.0e-6);\n    }", "signature": "void testCreateGeoPos()", "full_signature": "@Test public void testCreateGeoPos()", "class_method_signature": "GCTileFileTest.testCreateGeoPos()", "testcase": true, "constructor": false, "invocations": ["createGeoPos", "assertEquals", "getLon", "assertEquals", "getLat", "createGeoPos", "assertEquals", "getLon", "assertEquals", "getLat", "createGeoPos", "assertEquals", "getLon", "assertEquals", "getLat", "createGeoPos", "assertEquals", "getLon", "assertEquals", "getLat"]}, "focal_class": {"identifier": "GCTileFile", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String XDIM = \"XDim\";", "modifier": "private static final", "type": "String", "declarator": "XDIM = \"XDim\"", "var_name": "XDIM"}, {"original_string": "private static final String YDIM = \"YDim\";", "modifier": "private static final", "type": "String", "declarator": "YDIM = \"YDim\"", "var_name": "YDIM"}, {"original_string": "private static final String GROUP_POSTEL = \"POSTEL\";", "modifier": "private static final", "type": "String", "declarator": "GROUP_POSTEL = \"POSTEL\"", "var_name": "GROUP_POSTEL"}, {"original_string": "private static final String GROUP_DATA_FIELDS = \"Data Fields\";", "modifier": "private static final", "type": "String", "declarator": "GROUP_DATA_FIELDS = \"Data Fields\"", "var_name": "GROUP_DATA_FIELDS"}, {"original_string": "private static final String GROUP_GRID_ATTRIBUTES = \"Grid Attributes\";", "modifier": "private static final", "type": "String", "declarator": "GROUP_GRID_ATTRIBUTES = \"Grid Attributes\"", "var_name": "GROUP_GRID_ATTRIBUTES"}, {"original_string": "private static final String STRUCT_METADATA_0 = \"StructMetadata%2e0\";", "modifier": "private static final", "type": "String", "declarator": "STRUCT_METADATA_0 = \"StructMetadata%2e0\"", "var_name": "STRUCT_METADATA_0"}, {"original_string": "private static final String DF_DIMENSION_X = GROUP_POSTEL + \"/\" + GROUP_DATA_FIELDS + \"/\" + XDIM;", "modifier": "private static final", "type": "String", "declarator": "DF_DIMENSION_X = GROUP_POSTEL + \"/\" + GROUP_DATA_FIELDS + \"/\" + XDIM", "var_name": "DF_DIMENSION_X"}, {"original_string": "private static final String DF_DIMENSION_Y = GROUP_POSTEL + \"/\" + GROUP_DATA_FIELDS + \"/\" + YDIM;", "modifier": "private static final", "type": "String", "declarator": "DF_DIMENSION_Y = GROUP_POSTEL + \"/\" + GROUP_DATA_FIELDS + \"/\" + YDIM", "var_name": "DF_DIMENSION_Y"}, {"original_string": "private static final String GA_START_DATE = GROUP_POSTEL + \"/\" + GROUP_GRID_ATTRIBUTES + \"/Product start date\";", "modifier": "private static final", "type": "String", "declarator": "GA_START_DATE = GROUP_POSTEL + \"/\" + GROUP_GRID_ATTRIBUTES + \"/Product start date\"", "var_name": "GA_START_DATE"}, {"original_string": "private static final String GA_END_DATE = GROUP_POSTEL + \"/\" + GROUP_GRID_ATTRIBUTES + \"/Product end date\";", "modifier": "private static final", "type": "String", "declarator": "GA_END_DATE = GROUP_POSTEL + \"/\" + GROUP_GRID_ATTRIBUTES + \"/Product end date\"", "var_name": "GA_END_DATE"}, {"original_string": "private static final String ATTRIB_UNSIGNED = \"_Unsigned\";", "modifier": "private static final", "type": "String", "declarator": "ATTRIB_UNSIGNED = \"_Unsigned\"", "var_name": "ATTRIB_UNSIGNED"}, {"original_string": "private static final String ATTRIB_FILL_VALUE = \"_FillValue\";", "modifier": "private static final", "type": "String", "declarator": "ATTRIB_FILL_VALUE = \"_FillValue\"", "var_name": "ATTRIB_FILL_VALUE"}, {"original_string": "private final NetcdfFile ncFile;", "modifier": "private final", "type": "NetcdfFile", "declarator": "ncFile", "var_name": "ncFile"}], "methods": [{"identifier": "GCTileFile", "parameters": "(File ncfile)", "modifiers": "", "return": "", "signature": " GCTileFile(File ncfile)", "full_signature": "  GCTileFile(File ncfile)", "class_method_signature": "GCTileFile.GCTileFile(File ncfile)", "testcase": false, "constructor": true}, {"identifier": "getFilePath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFilePath()", "full_signature": "public String getFilePath()", "class_method_signature": "GCTileFile.getFilePath()", "testcase": false, "constructor": false}, {"identifier": "getWidth", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getWidth()", "full_signature": "public int getWidth()", "class_method_signature": "GCTileFile.getWidth()", "testcase": false, "constructor": false}, {"identifier": "getHeight", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getHeight()", "full_signature": "public int getHeight()", "class_method_signature": "GCTileFile.getHeight()", "testcase": false, "constructor": false}, {"identifier": "getStartDate", "parameters": "()", "modifiers": "public", "return": "ProductData.UTC", "signature": "ProductData.UTC getStartDate()", "full_signature": "public ProductData.UTC getStartDate()", "class_method_signature": "GCTileFile.getStartDate()", "testcase": false, "constructor": false}, {"identifier": "getEndDate", "parameters": "()", "modifiers": "public", "return": "ProductData.UTC", "signature": "ProductData.UTC getEndDate()", "full_signature": "public ProductData.UTC getEndDate()", "class_method_signature": "GCTileFile.getEndDate()", "testcase": false, "constructor": false}, {"identifier": "getUpperLeftCorner", "parameters": "()", "modifiers": "public", "return": "GeoPos", "signature": "GeoPos getUpperLeftCorner()", "full_signature": "public GeoPos getUpperLeftCorner()", "class_method_signature": "GCTileFile.getUpperLeftCorner()", "testcase": false, "constructor": false}, {"identifier": "readData", "parameters": "(String variableName,\n                          int offsetX, int offsetY,\n                          int width, int height,\n                          int stepX, int stepY)", "modifiers": "public", "return": "Array", "signature": "Array readData(String variableName,\n                          int offsetX, int offsetY,\n                          int width, int height,\n                          int stepX, int stepY)", "full_signature": "public Array readData(String variableName,\n                          int offsetX, int offsetY,\n                          int width, int height,\n                          int stepX, int stepY)", "class_method_signature": "GCTileFile.readData(String variableName,\n                          int offsetX, int offsetY,\n                          int width, int height,\n                          int stepX, int stepY)", "testcase": false, "constructor": false}, {"identifier": "getBandDescriptorList", "parameters": "()", "modifiers": "public", "return": "List<BandDescriptor>", "signature": "List<BandDescriptor> getBandDescriptorList()", "full_signature": "public List<BandDescriptor> getBandDescriptorList()", "class_method_signature": "GCTileFile.getBandDescriptorList()", "testcase": false, "constructor": false}, {"identifier": "isAnnualFile", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAnnualFile()", "full_signature": "public boolean isAnnualFile()", "class_method_signature": "GCTileFile.isAnnualFile()", "testcase": false, "constructor": false}, {"identifier": "readMetadata", "parameters": "(MetadataElement metadataRoot)", "modifiers": "public", "return": "void", "signature": "void readMetadata(MetadataElement metadataRoot)", "full_signature": "public void readMetadata(MetadataElement metadataRoot)", "class_method_signature": "GCTileFile.readMetadata(MetadataElement metadataRoot)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "GCTileFile.toString()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "GCTileFile.close()", "testcase": false, "constructor": false}, {"identifier": "getDate", "parameters": "(String attribName)", "modifiers": "private", "return": "ProductData.UTC", "signature": "ProductData.UTC getDate(String attribName)", "full_signature": "private ProductData.UTC getDate(String attribName)", "class_method_signature": "GCTileFile.getDate(String attribName)", "testcase": false, "constructor": false}, {"identifier": "getBandDescriptor", "parameters": "(Variable variable)", "modifiers": "private", "return": "BandDescriptor", "signature": "BandDescriptor getBandDescriptor(Variable variable)", "full_signature": "private BandDescriptor getBandDescriptor(Variable variable)", "class_method_signature": "GCTileFile.getBandDescriptor(Variable variable)", "testcase": false, "constructor": false}, {"identifier": "getProductDataType", "parameters": "(Variable variable)", "modifiers": "private", "return": "Integer", "signature": "Integer getProductDataType(Variable variable)", "full_signature": "private Integer getProductDataType(Variable variable)", "class_method_signature": "GCTileFile.getProductDataType(Variable variable)", "testcase": false, "constructor": false}, {"identifier": "createGeoPos", "parameters": "(String lonString, String latString)", "modifiers": "static", "return": "GeoPos", "signature": "GeoPos createGeoPos(String lonString, String latString)", "full_signature": "static GeoPos createGeoPos(String lonString, String latString)", "class_method_signature": "GCTileFile.createGeoPos(String lonString, String latString)", "testcase": false, "constructor": false}, {"identifier": "dgmToDec", "parameters": "(String dgmString)", "modifiers": "private static", "return": "float", "signature": "float dgmToDec(String dgmString)", "full_signature": "private static float dgmToDec(String dgmString)", "class_method_signature": "GCTileFile.dgmToDec(String dgmString)", "testcase": false, "constructor": false}], "file": "beam-glob-due-reader/src/main/java/org/esa/beam/dataio/globcover/GCTileFile.java"}, "focal_method": {"identifier": "createGeoPos", "parameters": "(String lonString, String latString)", "modifiers": "static", "return": "GeoPos", "body": "static GeoPos createGeoPos(String lonString, String latString) {\n        float lon = dgmToDec(lonString);\n        float lat = dgmToDec(latString);\n        return new GeoPos(lat, lon);\n    }", "signature": "GeoPos createGeoPos(String lonString, String latString)", "full_signature": "static GeoPos createGeoPos(String lonString, String latString)", "class_method_signature": "GCTileFile.createGeoPos(String lonString, String latString)", "testcase": false, "constructor": false, "invocations": ["dgmToDec", "dgmToDec"]}, "repository": {"repo_id": 526150, "url": "https://github.com/bcdev/glob-box", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 6, "size": 6440, "license": "licensed"}}