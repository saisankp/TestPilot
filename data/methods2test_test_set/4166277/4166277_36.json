{"test_class": {"identifier": "TagDictionaryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "TagDictionary dic = new TagDictionary(4);", "modifier": "", "type": "TagDictionary", "declarator": "dic = new TagDictionary(4)", "var_name": "dic"}, {"original_string": "TestEncoder encoder = new TestEncoder();", "modifier": "", "type": "TestEncoder", "declarator": "encoder = new TestEncoder()", "var_name": "encoder"}], "file": "sjk-stacktrace/src/test/java/org/gridkit/jvmtool/stacktrace/TagDictionaryTest.java"}, "test_case": {"identifier": "tag_encoding", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tag_encoding() {\n        int id1 = dic.intern(tags(\"A\", \"1\"), encoder);\n        int id2 = dic.intern(tags(\"A\", \"2\"), encoder);\n        int id3 = dic.intern(tags(\"B\", \"1\", \"A\", \"1\"), encoder);\n\n        assertThat(id1).isEqualTo(1);\n        assertThat(id2).isEqualTo(2);\n        assertThat(id3).isEqualTo(3);\n        assertThat(encoder.toString()).isEqualTo(\n          \"[1,0] +A:1! [2,0] +A:2! [3,1] +B:1!\");\n    }", "signature": "void tag_encoding()", "full_signature": "@Test public void tag_encoding()", "class_method_signature": "TagDictionaryTest.tag_encoding()", "testcase": true, "constructor": false, "invocations": ["intern", "tags", "intern", "tags", "intern", "tags", "isEqualTo", "assertThat", "isEqualTo", "assertThat", "isEqualTo", "assertThat", "isEqualTo", "assertThat", "toString"]}, "focal_class": {"identifier": "TagDictionary", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final TagSet EMPTY = new TagSet(new SimpleTagCollection());", "modifier": "private static final", "type": "TagSet", "declarator": "EMPTY = new TagSet(new SimpleTagCollection())", "var_name": "EMPTY"}, {"original_string": "private Map<TagSet, Integer> tagSetDic = new LinkedHashMap<TagSet, Integer>();", "modifier": "private", "type": "Map<TagSet, Integer>", "declarator": "tagSetDic = new LinkedHashMap<TagSet, Integer>()", "var_name": "tagSetDic"}, {"original_string": "private int limit;", "modifier": "private", "type": "int", "declarator": "limit", "var_name": "limit"}], "methods": [{"identifier": "TagDictionary", "parameters": "(int limit)", "modifiers": "public", "return": "", "signature": " TagDictionary(int limit)", "full_signature": "public  TagDictionary(int limit)", "class_method_signature": "TagDictionary.TagDictionary(int limit)", "testcase": false, "constructor": true}, {"identifier": "intern", "parameters": "(TagCollection tags, TagSetEncoder encoder)", "modifiers": "public", "return": "int", "signature": "int intern(TagCollection tags, TagSetEncoder encoder)", "full_signature": "public int intern(TagCollection tags, TagSetEncoder encoder)", "class_method_signature": "TagDictionary.intern(TagCollection tags, TagSetEncoder encoder)", "testcase": false, "constructor": false}, {"identifier": "evict", "parameters": "()", "modifiers": "protected", "return": "int", "signature": "int evict()", "full_signature": "protected int evict()", "class_method_signature": "TagDictionary.evict()", "testcase": false, "constructor": false}, {"identifier": "encodeTag", "parameters": "(int id, TagSet ts, TagSetEncoder encoder)", "modifiers": "private", "return": "void", "signature": "void encodeTag(int id, TagSet ts, TagSetEncoder encoder)", "full_signature": "private void encodeTag(int id, TagSet ts, TagSetEncoder encoder)", "class_method_signature": "TagDictionary.encodeTag(int id, TagSet ts, TagSetEncoder encoder)", "testcase": false, "constructor": false}, {"identifier": "touch", "parameters": "(TagSet baseSet, int baseRef)", "modifiers": "private", "return": "void", "signature": "void touch(TagSet baseSet, int baseRef)", "full_signature": "private void touch(TagSet baseSet, int baseRef)", "class_method_signature": "TagDictionary.touch(TagSet baseSet, int baseRef)", "testcase": false, "constructor": false}, {"identifier": "distance", "parameters": "(TagSet base, TagSet set, TagSetEncoder encoder)", "modifiers": "private", "return": "int", "signature": "int distance(TagSet base, TagSet set, TagSetEncoder encoder)", "full_signature": "private int distance(TagSet base, TagSet set, TagSetEncoder encoder)", "class_method_signature": "TagDictionary.distance(TagSet base, TagSet set, TagSetEncoder encoder)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(TagSet base, TagSet set, TagSetEncoder encoder)", "modifiers": "private", "return": "void", "signature": "void encode(TagSet base, TagSet set, TagSetEncoder encoder)", "full_signature": "private void encode(TagSet base, TagSet set, TagSetEncoder encoder)", "class_method_signature": "TagDictionary.encode(TagSet base, TagSet set, TagSetEncoder encoder)", "testcase": false, "constructor": false}, {"identifier": "encodeRemoveTag", "parameters": "(TagSet base, TagSetEncoder encoder, int nb)", "modifiers": "protected", "return": "void", "signature": "void encodeRemoveTag(TagSet base, TagSetEncoder encoder, int nb)", "full_signature": "protected void encodeRemoveTag(TagSet base, TagSetEncoder encoder, int nb)", "class_method_signature": "TagDictionary.encodeRemoveTag(TagSet base, TagSetEncoder encoder, int nb)", "testcase": false, "constructor": false}], "file": "sjk-stacktrace/src/main/java/org/gridkit/jvmtool/stacktrace/TagDictionary.java"}, "focal_method": {"identifier": "intern", "parameters": "(TagCollection tags, TagSetEncoder encoder)", "modifiers": "public", "return": "int", "body": "public int intern(TagCollection tags, TagSetEncoder encoder) {\n        TagSet ts = new TagSet(tags);\n        Integer id = tagSetDic.remove(ts);\n        if (id != null) {\n            tagSetDic.put(ts, id); // TODO garbage hotspot\n            return id;\n        }\n        else if (tagSetDic.size() < limit) {\n            id = tagSetDic.size();\n            encodeTag(id, ts, encoder);\n            return id;\n        }\n        else {\n            id = evict();\n            encodeTag(id, ts, encoder);\n            return id;\n        }\n    }", "signature": "int intern(TagCollection tags, TagSetEncoder encoder)", "full_signature": "public int intern(TagCollection tags, TagSetEncoder encoder)", "class_method_signature": "TagDictionary.intern(TagCollection tags, TagSetEncoder encoder)", "testcase": false, "constructor": false, "invocations": ["remove", "put", "size", "size", "encodeTag", "evict", "encodeTag"]}, "repository": {"repo_id": 4166277, "url": "https://github.com/aragozin/jvm-tools", "language": "Java", "is_fork": false, "fork_count": 443, "stargazer_count": 2728, "size": 4961, "license": "licensed"}}