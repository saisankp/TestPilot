{"test_class": {"identifier": "BigIntegerModulusTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/dk/alexandra/fresco/framework/builder/numeric/field/BigIntegerModulusTest.java"}, "test_case": {"identifier": "testOfToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testOfToString() {\n    BigInteger modulus = new BigInteger(\"13\");\n    Assert.assertThat(\n        new BigIntegerModulus(modulus).toString(),\n        Matchers.containsString(modulus.toString()));\n    Assert.assertThat(\n        new BigIntegerModulus(modulus).toString(),\n        Matchers.containsString(\"BigIntegerModulus\"));\n  }", "signature": "void testOfToString()", "full_signature": "@Test public void testOfToString()", "class_method_signature": "BigIntegerModulusTest.testOfToString()", "testcase": true, "constructor": false, "invocations": ["assertThat", "toString", "containsString", "toString", "assertThat", "toString", "containsString"]}, "focal_class": {"identifier": "BigIntegerModulus", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private final BigInteger value;", "modifier": "private final", "type": "BigInteger", "declarator": "value", "var_name": "value"}, {"original_string": "private transient ModularReductionAlgorithm reducer;", "modifier": "private transient", "type": "ModularReductionAlgorithm", "declarator": "reducer", "var_name": "reducer"}], "methods": [{"identifier": "BigIntegerModulus", "parameters": "(BigInteger value)", "modifiers": "", "return": "", "signature": " BigIntegerModulus(BigInteger value)", "full_signature": "  BigIntegerModulus(BigInteger value)", "class_method_signature": "BigIntegerModulus.BigIntegerModulus(BigInteger value)", "testcase": false, "constructor": true}, {"identifier": "getBigInteger", "parameters": "()", "modifiers": "", "return": "BigInteger", "signature": "BigInteger getBigInteger()", "full_signature": " BigInteger getBigInteger()", "class_method_signature": "BigIntegerModulus.getBigInteger()", "testcase": false, "constructor": false}, {"identifier": "reduceModThis", "parameters": "(BigInteger x)", "modifiers": "", "return": "BigInteger", "signature": "BigInteger reduceModThis(BigInteger x)", "full_signature": " BigInteger reduceModThis(BigInteger x)", "class_method_signature": "BigIntegerModulus.reduceModThis(BigInteger x)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BigIntegerModulus.toString()", "testcase": false, "constructor": false}], "file": "core/src/main/java/dk/alexandra/fresco/framework/builder/numeric/field/BigIntegerModulus.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String toString() {\n    return \"BigIntegerModulus{\"\n        + \"value=\" + value\n        + '}';\n  }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BigIntegerModulus.toString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}