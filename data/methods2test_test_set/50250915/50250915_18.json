{"test_class": {"identifier": "AbstractPipelineImplTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [], "file": "blueocean-rest-impl/src/test/java/io/jenkins/blueocean/service/embedded/rest/AbstractPipelineImplTest.java"}, "test_case": {"identifier": "testFreestyle", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFreestyle() throws Exception {\n        Job job = j.createFreeStyleProject(\"freestyle\");\n        login();\n        Assert.assertEquals(\n            get(\"/organizations/jenkins/pipelines/\" + job.getFullName() + \"/\").get(\"disabled\"),\n            false\n        );\n        put(\"/organizations/jenkins/pipelines/\" + job.getFullName() + \"/disable\", \"{}\");\n        Assert.assertEquals(\n            get(\"/organizations/jenkins/pipelines/\" + job.getFullName() + \"/\").get(\"disabled\"),\n            true\n        );\n        put(\"/organizations/jenkins/pipelines/\" + job.getFullName() + \"/enable\", \"{}\");\n        Assert.assertEquals(\n            get(\"/organizations/jenkins/pipelines/\" + job.getFullName() + \"/\").get(\"disabled\"),\n            false\n        );\n    }", "signature": "void testFreestyle()", "full_signature": "@Test public void testFreestyle()", "class_method_signature": "AbstractPipelineImplTest.testFreestyle()", "testcase": true, "constructor": false, "invocations": ["createFreeStyleProject", "login", "assertEquals", "get", "get", "getFullName", "put", "getFullName", "assertEquals", "get", "get", "getFullName", "put", "getFullName", "assertEquals", "get", "get", "getFullName"]}, "focal_class": {"identifier": "AbstractPipelineImpl", "superclass": "extends BluePipeline", "interfaces": "", "fields": [{"original_string": "private final Job job;", "modifier": "private final", "type": "Job", "declarator": "job", "var_name": "job"}, {"original_string": "protected final BlueOrganization organization;", "modifier": "protected final", "type": "BlueOrganization", "declarator": "organization", "var_name": "organization"}, {"original_string": "public static final Predicate<Run> isRunning = new Predicate<Run>() {\n        public boolean apply(Run r) {\n            return r != null && r.isBuilding();\n        }\n    };", "modifier": "public static final", "type": "Predicate<Run>", "declarator": "isRunning = new Predicate<Run>() {\n        public boolean apply(Run r) {\n            return r != null && r.isBuilding();\n        }\n    }", "var_name": "isRunning"}], "methods": [{"identifier": "AbstractPipelineImpl", "parameters": "(BlueOrganization organization, Job job)", "modifiers": "protected", "return": "", "signature": " AbstractPipelineImpl(BlueOrganization organization, Job job)", "full_signature": "protected  AbstractPipelineImpl(BlueOrganization organization, Job job)", "class_method_signature": "AbstractPipelineImpl.AbstractPipelineImpl(BlueOrganization organization, Job job)", "testcase": false, "constructor": true}, {"identifier": "getOrganizationName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getOrganizationName()", "full_signature": "@Override public String getOrganizationName()", "class_method_signature": "AbstractPipelineImpl.getOrganizationName()", "testcase": false, "constructor": false}, {"identifier": "getOrganization", "parameters": "()", "modifiers": "@Override @Nonnull public", "return": "BlueOrganization", "signature": "BlueOrganization getOrganization()", "full_signature": "@Override @Nonnull public BlueOrganization getOrganization()", "class_method_signature": "AbstractPipelineImpl.getOrganization()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "AbstractPipelineImpl.getName()", "testcase": false, "constructor": false}, {"identifier": "getDisplayName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDisplayName()", "full_signature": "@Override public String getDisplayName()", "class_method_signature": "AbstractPipelineImpl.getDisplayName()", "testcase": false, "constructor": false}, {"identifier": "getWeatherScore", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getWeatherScore()", "full_signature": "@Override public Integer getWeatherScore()", "class_method_signature": "AbstractPipelineImpl.getWeatherScore()", "testcase": false, "constructor": false}, {"identifier": "getLatestRun", "parameters": "()", "modifiers": "@Override public", "return": "BlueRun", "signature": "BlueRun getLatestRun()", "full_signature": "@Override public BlueRun getLatestRun()", "class_method_signature": "AbstractPipelineImpl.getLatestRun()", "testcase": false, "constructor": false}, {"identifier": "getEstimatedDurationInMillis", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getEstimatedDurationInMillis()", "full_signature": "@Override public Long getEstimatedDurationInMillis()", "class_method_signature": "AbstractPipelineImpl.getEstimatedDurationInMillis()", "testcase": false, "constructor": false}, {"identifier": "getRuns", "parameters": "()", "modifiers": "@Override public", "return": "BlueRunContainer", "signature": "BlueRunContainer getRuns()", "full_signature": "@Override public BlueRunContainer getRuns()", "class_method_signature": "AbstractPipelineImpl.getRuns()", "testcase": false, "constructor": false}, {"identifier": "getActions", "parameters": "()", "modifiers": "@Override public", "return": "Collection<BlueActionProxy>", "signature": "Collection<BlueActionProxy> getActions()", "full_signature": "@Override public Collection<BlueActionProxy> getActions()", "class_method_signature": "AbstractPipelineImpl.getActions()", "testcase": false, "constructor": false}, {"identifier": "getQueue", "parameters": "()", "modifiers": "@Override @Navigable public", "return": "BlueQueueContainer", "signature": "BlueQueueContainer getQueue()", "full_signature": "@Override @Navigable public BlueQueueContainer getQueue()", "class_method_signature": "AbstractPipelineImpl.getQueue()", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "()", "modifiers": "@WebMethod(name=\"\") @DELETE public", "return": "void", "signature": "void delete()", "full_signature": "@WebMethod(name=\"\") @DELETE public void delete()", "class_method_signature": "AbstractPipelineImpl.delete()", "testcase": false, "constructor": false}, {"identifier": "favorite", "parameters": "(@JsonBody BlueFavoriteAction favoriteAction)", "modifiers": "@Override public", "return": "BlueFavorite", "signature": "BlueFavorite favorite(@JsonBody BlueFavoriteAction favoriteAction)", "full_signature": "@Override public BlueFavorite favorite(@JsonBody BlueFavoriteAction favoriteAction)", "class_method_signature": "AbstractPipelineImpl.favorite(@JsonBody BlueFavoriteAction favoriteAction)", "testcase": false, "constructor": false}, {"identifier": "getFullName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getFullName()", "full_signature": "@Override public String getFullName()", "class_method_signature": "AbstractPipelineImpl.getFullName()", "testcase": false, "constructor": false}, {"identifier": "getFullDisplayName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getFullDisplayName()", "full_signature": "@Override public String getFullDisplayName()", "class_method_signature": "AbstractPipelineImpl.getFullDisplayName()", "testcase": false, "constructor": false}, {"identifier": "getDisabled", "parameters": "()", "modifiers": "@Override @SuppressFBWarnings(value = \"NP_BOOLEAN_RETURN_NULL\", justification = \"isDisabled will return null if the job type doesn't support it\") public", "return": "Boolean", "signature": "Boolean getDisabled()", "full_signature": "@Override @SuppressFBWarnings(value = \"NP_BOOLEAN_RETURN_NULL\", justification = \"isDisabled will return null if the job type doesn't support it\") public Boolean getDisabled()", "class_method_signature": "AbstractPipelineImpl.getDisabled()", "testcase": false, "constructor": false}, {"identifier": "enable", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void enable()", "full_signature": "@Override public void enable()", "class_method_signature": "AbstractPipelineImpl.enable()", "testcase": false, "constructor": false}, {"identifier": "disable", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void disable()", "full_signature": "@Override public void disable()", "class_method_signature": "AbstractPipelineImpl.disable()", "testcase": false, "constructor": false}, {"identifier": "getFullDisplayName", "parameters": "(@Nullable BlueOrganization org, @Nonnull Item item)", "modifiers": "public static", "return": "String", "signature": "String getFullDisplayName(@Nullable BlueOrganization org, @Nonnull Item item)", "full_signature": "public static String getFullDisplayName(@Nullable BlueOrganization org, @Nonnull Item item)", "class_method_signature": "AbstractPipelineImpl.getFullDisplayName(@Nullable BlueOrganization org, @Nonnull Item item)", "testcase": false, "constructor": false}, {"identifier": "getFullName", "parameters": "(@Nullable BlueOrganization org, @Nonnull Item item)", "modifiers": "public static", "return": "String", "signature": "String getFullName(@Nullable BlueOrganization org, @Nonnull Item item)", "full_signature": "public static String getFullName(@Nullable BlueOrganization org, @Nonnull Item item)", "class_method_signature": "AbstractPipelineImpl.getFullName(@Nullable BlueOrganization org, @Nonnull Item item)", "testcase": false, "constructor": false}, {"identifier": "getBaseGroup", "parameters": "(BlueOrganization org)", "modifiers": "public static", "return": "ItemGroup<?>", "signature": "ItemGroup<?> getBaseGroup(BlueOrganization org)", "full_signature": "public static ItemGroup<?> getBaseGroup(BlueOrganization org)", "class_method_signature": "AbstractPipelineImpl.getBaseGroup(BlueOrganization org)", "testcase": false, "constructor": false}, {"identifier": "getLink", "parameters": "()", "modifiers": "@Override public", "return": "Link", "signature": "Link getLink()", "full_signature": "@Override public Link getLink()", "class_method_signature": "AbstractPipelineImpl.getLink()", "testcase": false, "constructor": false}, {"identifier": "getRecursivePathFromFullName", "parameters": "(BluePipeline pipeline)", "modifiers": "public static", "return": "String", "signature": "String getRecursivePathFromFullName(BluePipeline pipeline)", "full_signature": "public static String getRecursivePathFromFullName(BluePipeline pipeline)", "class_method_signature": "AbstractPipelineImpl.getRecursivePathFromFullName(BluePipeline pipeline)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "@Override public", "return": "List<Object>", "signature": "List<Object> getParameters()", "full_signature": "@Override public List<Object> getParameters()", "class_method_signature": "AbstractPipelineImpl.getParameters()", "testcase": false, "constructor": false}, {"identifier": "getParameterDefinitions", "parameters": "(Job job)", "modifiers": "public static", "return": "List<Object>", "signature": "List<Object> getParameterDefinitions(Job job)", "full_signature": "public static List<Object> getParameterDefinitions(Job job)", "class_method_signature": "AbstractPipelineImpl.getParameterDefinitions(Job job)", "testcase": false, "constructor": false}, {"identifier": "getJob", "parameters": "()", "modifiers": "public", "return": "Job", "signature": "Job getJob()", "full_signature": "public Job getJob()", "class_method_signature": "AbstractPipelineImpl.getJob()", "testcase": false, "constructor": false}, {"identifier": "getPermissions", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Boolean>", "signature": "Map<String, Boolean> getPermissions()", "full_signature": "@Override public Map<String, Boolean> getPermissions()", "class_method_signature": "AbstractPipelineImpl.getPermissions()", "testcase": false, "constructor": false}, {"identifier": "getScm", "parameters": "()", "modifiers": "@Override public", "return": "BluePipelineScm", "signature": "BluePipelineScm getScm()", "full_signature": "@Override public BluePipelineScm getScm()", "class_method_signature": "AbstractPipelineImpl.getScm()", "testcase": false, "constructor": false}, {"identifier": "getTrends", "parameters": "()", "modifiers": "@Override public", "return": "BlueTrendContainer", "signature": "BlueTrendContainer getTrends()", "full_signature": "@Override public BlueTrendContainer getTrends()", "class_method_signature": "AbstractPipelineImpl.getTrends()", "testcase": false, "constructor": false}, {"identifier": "getPermissions", "parameters": "(AbstractItem item)", "modifiers": "public static", "return": "Map<String, Boolean>", "signature": "Map<String, Boolean> getPermissions(AbstractItem item)", "full_signature": "public static Map<String, Boolean> getPermissions(AbstractItem item)", "class_method_signature": "AbstractPipelineImpl.getPermissions(AbstractItem item)", "testcase": false, "constructor": false}, {"identifier": "isFavorite", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFavorite()", "full_signature": "public boolean isFavorite()", "class_method_signature": "AbstractPipelineImpl.isFavorite()", "testcase": false, "constructor": false}], "file": "blueocean-rest-impl/src/main/java/io/jenkins/blueocean/service/embedded/rest/AbstractPipelineImpl.java"}, "focal_method": {"identifier": "getFullName", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getFullName(){\n        return getFullName(organization, job);\n    }", "signature": "String getFullName()", "full_signature": "@Override public String getFullName()", "class_method_signature": "AbstractPipelineImpl.getFullName()", "testcase": false, "constructor": false, "invocations": ["getFullName"]}, "repository": {"repo_id": 50250915, "url": "https://github.com/jenkinsci/blueocean-plugin", "stars": 2605, "created": "1/23/2016 6:02:45 PM +00:00", "updates": "2020-01-25T17:58:46+00:00", "fork": "False", "license": "licensed"}}