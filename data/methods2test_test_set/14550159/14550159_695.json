{"test_class": {"identifier": "ContainerRequestTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String httpMethod = \"POST\";", "modifier": "private", "type": "String", "declarator": "httpMethod = \"POST\"", "var_name": "httpMethod"}, {"original_string": "private URI requestUri = URI.create(\"http://localhost:8080/servlet/a/b/c\");", "modifier": "private", "type": "URI", "declarator": "requestUri = URI.create(\"http://localhost:8080/servlet/a/b/c\")", "var_name": "requestUri"}, {"original_string": "private URI baseUri = URI.create(\"http://localhost:8080/servlet\");", "modifier": "private", "type": "URI", "declarator": "baseUri = URI.create(\"http://localhost:8080/servlet\")", "var_name": "baseUri"}, {"original_string": "private MultivaluedMap<String, String> headers = new MultivaluedHashMap<>();", "modifier": "private", "type": "MultivaluedMap<String, String>", "declarator": "headers = new MultivaluedHashMap<>()", "var_name": "headers"}, {"original_string": "private InputStream        entityStream;", "modifier": "private", "type": "InputStream", "declarator": "entityStream", "var_name": "entityStream"}, {"original_string": "private SecurityContext    securityContext;", "modifier": "private", "type": "SecurityContext", "declarator": "securityContext", "var_name": "securityContext"}, {"original_string": "private ApplicationContext applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private ContainerRequest containerRequest;", "modifier": "private", "type": "ContainerRequest", "declarator": "containerRequest", "var_name": "containerRequest"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/ContainerRequestTest.java"}, "test_case": {"identifier": "getsAcceptableMediaType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getsAcceptableMediaType() {\n        headers.putSingle(ACCEPT, \"text/*;q=0.3, text/html;q=0.7, text/xml\");\n        List<MediaType> checkMediaTypes = newArrayList(new MediaType(), new MediaType(\"application\", \"xml\"), new MediaType(\"text\", \"plain\"));\n        MediaType acceptableMediaType = containerRequest.getAcceptableMediaType(checkMediaTypes);\n        assertEquals(new MediaType(\"text\", \"plain\"), acceptableMediaType);\n    }", "signature": "void getsAcceptableMediaType()", "full_signature": "@Test public void getsAcceptableMediaType()", "class_method_signature": "ContainerRequestTest.getsAcceptableMediaType()", "testcase": true, "constructor": false, "invocations": ["putSingle", "newArrayList", "getAcceptableMediaType", "assertEquals"]}, "focal_class": {"identifier": "ContainerRequest", "superclass": "", "interfaces": "implements GenericContainerRequest", "fields": [{"original_string": "private String method;", "modifier": "private", "type": "String", "declarator": "method", "var_name": "method"}, {"original_string": "private InputStream entityStream;", "modifier": "private", "type": "InputStream", "declarator": "entityStream", "var_name": "entityStream"}, {"original_string": "private MultivaluedMap<String, String> httpHeaders;", "modifier": "private", "type": "MultivaluedMap<String, String>", "declarator": "httpHeaders", "var_name": "httpHeaders"}, {"original_string": "private Map<String, Cookie> cookies;", "modifier": "private", "type": "Map<String, Cookie>", "declarator": "cookies", "var_name": "cookies"}, {"original_string": "private List<String> cookieHeaders;", "modifier": "private", "type": "List<String>", "declarator": "cookieHeaders", "var_name": "cookieHeaders"}, {"original_string": "private MediaType contentType;", "modifier": "private", "type": "MediaType", "declarator": "contentType", "var_name": "contentType"}, {"original_string": "private Locale contentLanguage;", "modifier": "private", "type": "Locale", "declarator": "contentLanguage", "var_name": "contentLanguage"}, {"original_string": "private List<AcceptMediaType> acceptableMediaTypes;", "modifier": "private", "type": "List<AcceptMediaType>", "declarator": "acceptableMediaTypes", "var_name": "acceptableMediaTypes"}, {"original_string": "private List<Locale> acceptLanguages;", "modifier": "private", "type": "List<Locale>", "declarator": "acceptLanguages", "var_name": "acceptLanguages"}, {"original_string": "private URI requestUri;", "modifier": "private", "type": "URI", "declarator": "requestUri", "var_name": "requestUri"}, {"original_string": "private URI baseUri;", "modifier": "private", "type": "URI", "declarator": "baseUri", "var_name": "baseUri"}, {"original_string": "private SecurityContext securityContext;", "modifier": "private", "type": "SecurityContext", "declarator": "securityContext", "var_name": "securityContext"}, {"original_string": "private VariantsHandler variantsHandler = new VariantsHandler();", "modifier": "private", "type": "VariantsHandler", "declarator": "variantsHandler = new VariantsHandler()", "var_name": "variantsHandler"}], "methods": [{"identifier": "ContainerRequest", "parameters": "(String method, URI requestUri, URI baseUri, InputStream entityStream,\n                            MultivaluedMap<String, String> httpHeaders, SecurityContext securityContext)", "modifiers": "public", "return": "", "signature": " ContainerRequest(String method, URI requestUri, URI baseUri, InputStream entityStream,\n                            MultivaluedMap<String, String> httpHeaders, SecurityContext securityContext)", "full_signature": "public  ContainerRequest(String method, URI requestUri, URI baseUri, InputStream entityStream,\n                            MultivaluedMap<String, String> httpHeaders, SecurityContext securityContext)", "class_method_signature": "ContainerRequest.ContainerRequest(String method, URI requestUri, URI baseUri, InputStream entityStream,\n                            MultivaluedMap<String, String> httpHeaders, SecurityContext securityContext)", "testcase": false, "constructor": true}, {"identifier": "getAcceptableMediaType", "parameters": "(List<MediaType> mediaTypes)", "modifiers": "@Override public", "return": "MediaType", "signature": "MediaType getAcceptableMediaType(List<MediaType> mediaTypes)", "full_signature": "@Override public MediaType getAcceptableMediaType(List<MediaType> mediaTypes)", "class_method_signature": "ContainerRequest.getAcceptableMediaType(List<MediaType> mediaTypes)", "testcase": false, "constructor": false}, {"identifier": "getCookieHeaders", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getCookieHeaders()", "full_signature": "@Override public List<String> getCookieHeaders()", "class_method_signature": "ContainerRequest.getCookieHeaders()", "testcase": false, "constructor": false}, {"identifier": "getEntityStream", "parameters": "()", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getEntityStream()", "full_signature": "@Override public InputStream getEntityStream()", "class_method_signature": "ContainerRequest.getEntityStream()", "testcase": false, "constructor": false}, {"identifier": "getRequestUri", "parameters": "()", "modifiers": "@Override public", "return": "URI", "signature": "URI getRequestUri()", "full_signature": "@Override public URI getRequestUri()", "class_method_signature": "ContainerRequest.getRequestUri()", "testcase": false, "constructor": false}, {"identifier": "getBaseUri", "parameters": "()", "modifiers": "@Override public", "return": "URI", "signature": "URI getBaseUri()", "full_signature": "@Override public URI getBaseUri()", "class_method_signature": "ContainerRequest.getBaseUri()", "testcase": false, "constructor": false}, {"identifier": "getMethod", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getMethod()", "full_signature": "@Override public String getMethod()", "class_method_signature": "ContainerRequest.getMethod()", "testcase": false, "constructor": false}, {"identifier": "setMethod", "parameters": "(String method)", "modifiers": "@Override public", "return": "void", "signature": "void setMethod(String method)", "full_signature": "@Override public void setMethod(String method)", "class_method_signature": "ContainerRequest.setMethod(String method)", "testcase": false, "constructor": false}, {"identifier": "setEntityStream", "parameters": "(InputStream entityStream)", "modifiers": "@Override public", "return": "void", "signature": "void setEntityStream(InputStream entityStream)", "full_signature": "@Override public void setEntityStream(InputStream entityStream)", "class_method_signature": "ContainerRequest.setEntityStream(InputStream entityStream)", "testcase": false, "constructor": false}, {"identifier": "setUris", "parameters": "(URI requestUri, URI baseUri)", "modifiers": "@Override public", "return": "void", "signature": "void setUris(URI requestUri, URI baseUri)", "full_signature": "@Override public void setUris(URI requestUri, URI baseUri)", "class_method_signature": "ContainerRequest.setUris(URI requestUri, URI baseUri)", "testcase": false, "constructor": false}, {"identifier": "setCookieHeaders", "parameters": "(List<String> cookieHeaders)", "modifiers": "@Override public", "return": "void", "signature": "void setCookieHeaders(List<String> cookieHeaders)", "full_signature": "@Override public void setCookieHeaders(List<String> cookieHeaders)", "class_method_signature": "ContainerRequest.setCookieHeaders(List<String> cookieHeaders)", "testcase": false, "constructor": false}, {"identifier": "setRequestHeaders", "parameters": "(MultivaluedMap<String, String> httpHeaders)", "modifiers": "@Override public", "return": "void", "signature": "void setRequestHeaders(MultivaluedMap<String, String> httpHeaders)", "full_signature": "@Override public void setRequestHeaders(MultivaluedMap<String, String> httpHeaders)", "class_method_signature": "ContainerRequest.setRequestHeaders(MultivaluedMap<String, String> httpHeaders)", "testcase": false, "constructor": false}, {"identifier": "getAuthenticationScheme", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAuthenticationScheme()", "full_signature": "@Override public String getAuthenticationScheme()", "class_method_signature": "ContainerRequest.getAuthenticationScheme()", "testcase": false, "constructor": false}, {"identifier": "getUserPrincipal", "parameters": "()", "modifiers": "@Override public", "return": "Principal", "signature": "Principal getUserPrincipal()", "full_signature": "@Override public Principal getUserPrincipal()", "class_method_signature": "ContainerRequest.getUserPrincipal()", "testcase": false, "constructor": false}, {"identifier": "isSecure", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSecure()", "full_signature": "@Override public boolean isSecure()", "class_method_signature": "ContainerRequest.isSecure()", "testcase": false, "constructor": false}, {"identifier": "isUserInRole", "parameters": "(String role)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isUserInRole(String role)", "full_signature": "@Override public boolean isUserInRole(String role)", "class_method_signature": "ContainerRequest.isUserInRole(String role)", "testcase": false, "constructor": false}, {"identifier": "evaluatePreconditions", "parameters": "(EntityTag etag)", "modifiers": "@Override public", "return": "ResponseBuilder", "signature": "ResponseBuilder evaluatePreconditions(EntityTag etag)", "full_signature": "@Override public ResponseBuilder evaluatePreconditions(EntityTag etag)", "class_method_signature": "ContainerRequest.evaluatePreconditions(EntityTag etag)", "testcase": false, "constructor": false}, {"identifier": "evaluatePreconditions", "parameters": "(Date lastModified)", "modifiers": "@Override public", "return": "ResponseBuilder", "signature": "ResponseBuilder evaluatePreconditions(Date lastModified)", "full_signature": "@Override public ResponseBuilder evaluatePreconditions(Date lastModified)", "class_method_signature": "ContainerRequest.evaluatePreconditions(Date lastModified)", "testcase": false, "constructor": false}, {"identifier": "evaluatePreconditions", "parameters": "(Date lastModified, EntityTag etag)", "modifiers": "@Override public", "return": "ResponseBuilder", "signature": "ResponseBuilder evaluatePreconditions(Date lastModified, EntityTag etag)", "full_signature": "@Override public ResponseBuilder evaluatePreconditions(Date lastModified, EntityTag etag)", "class_method_signature": "ContainerRequest.evaluatePreconditions(Date lastModified, EntityTag etag)", "testcase": false, "constructor": false}, {"identifier": "evaluatePreconditions", "parameters": "()", "modifiers": "@Override public", "return": "ResponseBuilder", "signature": "ResponseBuilder evaluatePreconditions()", "full_signature": "@Override public ResponseBuilder evaluatePreconditions()", "class_method_signature": "ContainerRequest.evaluatePreconditions()", "testcase": false, "constructor": false}, {"identifier": "selectVariant", "parameters": "(List<Variant> variants)", "modifiers": "@Override public", "return": "Variant", "signature": "Variant selectVariant(List<Variant> variants)", "full_signature": "@Override public Variant selectVariant(List<Variant> variants)", "class_method_signature": "ContainerRequest.selectVariant(List<Variant> variants)", "testcase": false, "constructor": false}, {"identifier": "getAcceptableLanguages", "parameters": "()", "modifiers": "@Override public", "return": "List<Locale>", "signature": "List<Locale> getAcceptableLanguages()", "full_signature": "@Override public List<Locale> getAcceptableLanguages()", "class_method_signature": "ContainerRequest.getAcceptableLanguages()", "testcase": false, "constructor": false}, {"identifier": "getAcceptableMediaTypes", "parameters": "()", "modifiers": "@Override public", "return": "List<MediaType>", "signature": "List<MediaType> getAcceptableMediaTypes()", "full_signature": "@Override public List<MediaType> getAcceptableMediaTypes()", "class_method_signature": "ContainerRequest.getAcceptableMediaTypes()", "testcase": false, "constructor": false}, {"identifier": "getAcceptMediaTypeList", "parameters": "()", "modifiers": "@Override public", "return": "List<AcceptMediaType>", "signature": "List<AcceptMediaType> getAcceptMediaTypeList()", "full_signature": "@Override public List<AcceptMediaType> getAcceptMediaTypeList()", "class_method_signature": "ContainerRequest.getAcceptMediaTypeList()", "testcase": false, "constructor": false}, {"identifier": "getCookies", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Cookie>", "signature": "Map<String, Cookie> getCookies()", "full_signature": "@Override public Map<String, Cookie> getCookies()", "class_method_signature": "ContainerRequest.getCookies()", "testcase": false, "constructor": false}, {"identifier": "getDate", "parameters": "()", "modifiers": "@Override public", "return": "Date", "signature": "Date getDate()", "full_signature": "@Override public Date getDate()", "class_method_signature": "ContainerRequest.getDate()", "testcase": false, "constructor": false}, {"identifier": "getLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getLength()", "full_signature": "@Override public int getLength()", "class_method_signature": "ContainerRequest.getLength()", "testcase": false, "constructor": false}, {"identifier": "getLanguage", "parameters": "()", "modifiers": "@Override public", "return": "Locale", "signature": "Locale getLanguage()", "full_signature": "@Override public Locale getLanguage()", "class_method_signature": "ContainerRequest.getLanguage()", "testcase": false, "constructor": false}, {"identifier": "getMediaType", "parameters": "()", "modifiers": "@Override public", "return": "MediaType", "signature": "MediaType getMediaType()", "full_signature": "@Override public MediaType getMediaType()", "class_method_signature": "ContainerRequest.getMediaType()", "testcase": false, "constructor": false}, {"identifier": "getRequestHeader", "parameters": "(String name)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getRequestHeader(String name)", "full_signature": "@Override public List<String> getRequestHeader(String name)", "class_method_signature": "ContainerRequest.getRequestHeader(String name)", "testcase": false, "constructor": false}, {"identifier": "getHeaderString", "parameters": "(String name)", "modifiers": "@Override public", "return": "String", "signature": "String getHeaderString(String name)", "full_signature": "@Override public String getHeaderString(String name)", "class_method_signature": "ContainerRequest.getHeaderString(String name)", "testcase": false, "constructor": false}, {"identifier": "getRequestHeaders", "parameters": "()", "modifiers": "@Override public", "return": "MultivaluedMap<String, String>", "signature": "MultivaluedMap<String, String> getRequestHeaders()", "full_signature": "@Override public MultivaluedMap<String, String> getRequestHeaders()", "class_method_signature": "ContainerRequest.getRequestHeaders()", "testcase": false, "constructor": false}, {"identifier": "evaluateIfMatch", "parameters": "(EntityTag etag)", "modifiers": "private", "return": "ResponseBuilder", "signature": "ResponseBuilder evaluateIfMatch(EntityTag etag)", "full_signature": "private ResponseBuilder evaluateIfMatch(EntityTag etag)", "class_method_signature": "ContainerRequest.evaluateIfMatch(EntityTag etag)", "testcase": false, "constructor": false}, {"identifier": "evaluateIfNoneMatch", "parameters": "(EntityTag etag)", "modifiers": "private", "return": "ResponseBuilder", "signature": "ResponseBuilder evaluateIfNoneMatch(EntityTag etag)", "full_signature": "private ResponseBuilder evaluateIfNoneMatch(EntityTag etag)", "class_method_signature": "ContainerRequest.evaluateIfNoneMatch(EntityTag etag)", "testcase": false, "constructor": false}, {"identifier": "eTagsStrongEqual", "parameters": "(EntityTag etag, EntityTag otherEtag)", "modifiers": "private", "return": "boolean", "signature": "boolean eTagsStrongEqual(EntityTag etag, EntityTag otherEtag)", "full_signature": "private boolean eTagsStrongEqual(EntityTag etag, EntityTag otherEtag)", "class_method_signature": "ContainerRequest.eTagsStrongEqual(EntityTag etag, EntityTag otherEtag)", "testcase": false, "constructor": false}, {"identifier": "eTagsWeakEqual", "parameters": "(EntityTag etag, EntityTag otherEtag)", "modifiers": "private", "return": "boolean", "signature": "boolean eTagsWeakEqual(EntityTag etag, EntityTag otherEtag)", "full_signature": "private boolean eTagsWeakEqual(EntityTag etag, EntityTag otherEtag)", "class_method_signature": "ContainerRequest.eTagsWeakEqual(EntityTag etag, EntityTag otherEtag)", "testcase": false, "constructor": false}, {"identifier": "evaluateIfUnmodified", "parameters": "(long lastModified)", "modifiers": "private", "return": "ResponseBuilder", "signature": "ResponseBuilder evaluateIfUnmodified(long lastModified)", "full_signature": "private ResponseBuilder evaluateIfUnmodified(long lastModified)", "class_method_signature": "ContainerRequest.evaluateIfUnmodified(long lastModified)", "testcase": false, "constructor": false}, {"identifier": "evaluateIfModified", "parameters": "(long lastModified)", "modifiers": "private", "return": "ResponseBuilder", "signature": "ResponseBuilder evaluateIfModified(long lastModified)", "full_signature": "private ResponseBuilder evaluateIfModified(long lastModified)", "class_method_signature": "ContainerRequest.evaluateIfModified(long lastModified)", "testcase": false, "constructor": false}, {"identifier": "setVariantsHandler", "parameters": "(VariantsHandler variantsHandler)", "modifiers": "", "return": "void", "signature": "void setVariantsHandler(VariantsHandler variantsHandler)", "full_signature": " void setVariantsHandler(VariantsHandler variantsHandler)", "class_method_signature": "ContainerRequest.setVariantsHandler(VariantsHandler variantsHandler)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ContainerRequest.toString()", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/ContainerRequest.java"}, "focal_method": {"identifier": "getAcceptableMediaType", "parameters": "(List<MediaType> mediaTypes)", "modifiers": "@Override public", "return": "MediaType", "body": "@Override\n    public MediaType getAcceptableMediaType(List<MediaType> mediaTypes) {\n        for (MediaType acceptMediaType : getAcceptableMediaTypes()) {\n            for (MediaType checkMediaType : mediaTypes) {\n                if (MediaTypeHelper.isMatched(acceptMediaType, checkMediaType)) {\n                    return checkMediaType;\n                }\n            }\n        }\n        return null;\n    }", "signature": "MediaType getAcceptableMediaType(List<MediaType> mediaTypes)", "full_signature": "@Override public MediaType getAcceptableMediaType(List<MediaType> mediaTypes)", "class_method_signature": "ContainerRequest.getAcceptableMediaType(List<MediaType> mediaTypes)", "testcase": false, "constructor": false, "invocations": ["getAcceptableMediaTypes", "isMatched"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}