{"test_class": {"identifier": "JcrSqlQueryParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TypeSystem typeSystem;", "modifier": "private", "type": "TypeSystem", "declarator": "typeSystem", "var_name": "typeSystem"}, {"original_string": "private JcrSqlQueryParser parser;", "modifier": "private", "type": "JcrSqlQueryParser", "declarator": "parser", "var_name": "parser"}, {"original_string": "private Query query;", "modifier": "private", "type": "Query", "declarator": "query", "var_name": "query"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/query/parse/JcrSqlQueryParserTest.java"}, "test_case": {"identifier": "shouldFailToRemoveDoubleQuotesAroundOneWord", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldFailToRemoveDoubleQuotesAroundOneWord() {\n        assertThat(parser.removeBracketsAndQuotes(\"\\\"string\\\"\", null), is(\"\\\"string\\\"\"));\n        assertThat(parser.removeBracketsAndQuotes(\"\\\"string\\\"\", null), is(\"\\\"string\\\"\"));\n        assertThat(parser.removeBracketsAndQuotes(\"\\\"word one and two\\\"\", null), is(\"\\\"word one and two\\\"\"));\n        assertThat(parser.removeBracketsAndQuotes(\"[word one and two]\", null), is(\"[word one and two]\"));\n    }", "signature": "void shouldFailToRemoveDoubleQuotesAroundOneWord()", "full_signature": "@Test public void shouldFailToRemoveDoubleQuotesAroundOneWord()", "class_method_signature": "JcrSqlQueryParserTest.shouldFailToRemoveDoubleQuotesAroundOneWord()", "testcase": true, "constructor": false, "invocations": ["assertThat", "removeBracketsAndQuotes", "is", "assertThat", "removeBracketsAndQuotes", "is", "assertThat", "removeBracketsAndQuotes", "is", "assertThat", "removeBracketsAndQuotes", "is"]}, "focal_class": {"identifier": "JcrSqlQueryParser", "superclass": "extends BasicSqlQueryParser", "interfaces": "", "fields": [{"original_string": "@SuppressWarnings( \"deprecation\" )\n    public static final String LANGUAGE = javax.jcr.query.Query.SQL;", "modifier": "@SuppressWarnings( \"deprecation\" )\n    public static final", "type": "String", "declarator": "LANGUAGE = javax.jcr.query.Query.SQL", "var_name": "LANGUAGE"}], "methods": [{"identifier": "JcrSqlQueryParser", "parameters": "()", "modifiers": "public", "return": "", "signature": " JcrSqlQueryParser()", "full_signature": "public  JcrSqlQueryParser()", "class_method_signature": "JcrSqlQueryParser.JcrSqlQueryParser()", "testcase": false, "constructor": true}, {"identifier": "getLanguage", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getLanguage()", "full_signature": "@Override public String getLanguage()", "class_method_signature": "JcrSqlQueryParser.getLanguage()", "testcase": false, "constructor": false}, {"identifier": "parseQuery", "parameters": "( TokenStream tokens,\n                                TypeSystem typeSystem )", "modifiers": "@Override protected", "return": "Query", "signature": "Query parseQuery( TokenStream tokens,\n                                TypeSystem typeSystem )", "full_signature": "@Override protected Query parseQuery( TokenStream tokens,\n                                TypeSystem typeSystem )", "class_method_signature": "JcrSqlQueryParser.parseQuery( TokenStream tokens,\n                                TypeSystem typeSystem )", "testcase": false, "constructor": false}, {"identifier": "parseFrom", "parameters": "( TokenStream tokens,\n                                TypeSystem typeSystem )", "modifiers": "@Override protected", "return": "Source", "signature": "Source parseFrom( TokenStream tokens,\n                                TypeSystem typeSystem )", "full_signature": "@Override protected Source parseFrom( TokenStream tokens,\n                                TypeSystem typeSystem )", "class_method_signature": "JcrSqlQueryParser.parseFrom( TokenStream tokens,\n                                TypeSystem typeSystem )", "testcase": false, "constructor": false}, {"identifier": "parseConstraint", "parameters": "( TokenStream tokens,\n                                          TypeSystem typeSystem,\n                                          Source source )", "modifiers": "@Override protected", "return": "Constraint", "signature": "Constraint parseConstraint( TokenStream tokens,\n                                          TypeSystem typeSystem,\n                                          Source source )", "full_signature": "@Override protected Constraint parseConstraint( TokenStream tokens,\n                                          TypeSystem typeSystem,\n                                          Source source )", "class_method_signature": "JcrSqlQueryParser.parseConstraint( TokenStream tokens,\n                                          TypeSystem typeSystem,\n                                          Source source )", "testcase": false, "constructor": false}, {"identifier": "parsePropertyExistance", "parameters": "( TokenStream tokens,\n                                                 TypeSystem typeSystem,\n                                                 Source source )", "modifiers": "@Override protected", "return": "Constraint", "signature": "Constraint parsePropertyExistance( TokenStream tokens,\n                                                 TypeSystem typeSystem,\n                                                 Source source )", "full_signature": "@Override protected Constraint parsePropertyExistance( TokenStream tokens,\n                                                 TypeSystem typeSystem,\n                                                 Source source )", "class_method_signature": "JcrSqlQueryParser.parsePropertyExistance( TokenStream tokens,\n                                                 TypeSystem typeSystem,\n                                                 Source source )", "testcase": false, "constructor": false}, {"identifier": "getSelectorNameFor", "parameters": "( Source source )", "modifiers": "protected", "return": "SelectorName", "signature": "SelectorName getSelectorNameFor( Source source )", "full_signature": "protected SelectorName getSelectorNameFor( Source source )", "class_method_signature": "JcrSqlQueryParser.getSelectorNameFor( Source source )", "testcase": false, "constructor": false}, {"identifier": "rewriteConstraint", "parameters": "( Constraint constraint )", "modifiers": "protected", "return": "Constraint", "signature": "Constraint rewriteConstraint( Constraint constraint )", "full_signature": "protected Constraint rewriteConstraint( Constraint constraint )", "class_method_signature": "JcrSqlQueryParser.rewriteConstraint( Constraint constraint )", "testcase": false, "constructor": false}, {"identifier": "parseName", "parameters": "( TokenStream tokens,\n                                TypeSystem typeSystem )", "modifiers": "@Override protected", "return": "String", "signature": "String parseName( TokenStream tokens,\n                                TypeSystem typeSystem )", "full_signature": "@Override protected String parseName( TokenStream tokens,\n                                TypeSystem typeSystem )", "class_method_signature": "JcrSqlQueryParser.parseName( TokenStream tokens,\n                                TypeSystem typeSystem )", "testcase": false, "constructor": false}, {"identifier": "parseLiteralValue", "parameters": "( TokenStream tokens,\n                                        TypeSystem typeSystem )", "modifiers": "@Override protected", "return": "Object", "signature": "Object parseLiteralValue( TokenStream tokens,\n                                        TypeSystem typeSystem )", "full_signature": "@Override protected Object parseLiteralValue( TokenStream tokens,\n                                        TypeSystem typeSystem )", "class_method_signature": "JcrSqlQueryParser.parseLiteralValue( TokenStream tokens,\n                                        TypeSystem typeSystem )", "testcase": false, "constructor": false}, {"identifier": "removeBracketsAndQuotes", "parameters": "( String text,\n                                              Position position )", "modifiers": "@Override protected", "return": "String", "signature": "String removeBracketsAndQuotes( String text,\n                                              Position position )", "full_signature": "@Override protected String removeBracketsAndQuotes( String text,\n                                              Position position )", "class_method_signature": "JcrSqlQueryParser.removeBracketsAndQuotes( String text,\n                                              Position position )", "testcase": false, "constructor": false}, {"identifier": "rewrite", "parameters": "( JoinableSources joinableSources )", "modifiers": "protected", "return": "Source", "signature": "Source rewrite( JoinableSources joinableSources )", "full_signature": "protected Source rewrite( JoinableSources joinableSources )", "class_method_signature": "JcrSqlQueryParser.rewrite( JoinableSources joinableSources )", "testcase": false, "constructor": false}, {"identifier": "usesSelector", "parameters": "( Join join,\n                                    SelectorName selector )", "modifiers": "protected", "return": "boolean", "signature": "boolean usesSelector( Join join,\n                                    SelectorName selector )", "full_signature": "protected boolean usesSelector( Join join,\n                                    SelectorName selector )", "class_method_signature": "JcrSqlQueryParser.usesSelector( Join join,\n                                    SelectorName selector )", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/query/parse/JcrSqlQueryParser.java"}, "focal_method": {"identifier": "removeBracketsAndQuotes", "parameters": "( String text,\n                                              Position position )", "modifiers": "@Override protected", "return": "String", "body": "@Override\n    protected String removeBracketsAndQuotes( String text,\n                                              Position position ) {\n        if (text.length() > 0) {\n            char firstChar = text.charAt(0);\n            switch (firstChar) {\n                case '\\'':\n                    assert text.charAt(text.length() - 1) == firstChar;\n                    return removeBracketsAndQuotes(text.substring(1, text.length() - 1), position);\n            }\n        }\n        return text;\n    }", "signature": "String removeBracketsAndQuotes( String text,\n                                              Position position )", "full_signature": "@Override protected String removeBracketsAndQuotes( String text,\n                                              Position position )", "class_method_signature": "JcrSqlQueryParser.removeBracketsAndQuotes( String text,\n                                              Position position )", "testcase": false, "constructor": false, "invocations": ["length", "charAt", "charAt", "length", "removeBracketsAndQuotes", "substring", "length"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}