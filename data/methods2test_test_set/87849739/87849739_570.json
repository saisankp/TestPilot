{"test_class": {"identifier": "RetrieveThingStrategyTest", "superclass": "extends AbstractCommandStrategyTest", "interfaces": "", "fields": [{"original_string": "private RetrieveThingStrategy underTest;", "modifier": "private", "type": "RetrieveThingStrategy", "declarator": "underTest", "var_name": "underTest"}], "file": "services/things/persistence/src/test/java/org/eclipse/ditto/services/things/persistence/actors/strategies/commands/RetrieveThingStrategyTest.java"}, "test_case": {"identifier": "isNotDefinedForDeviantThingIds", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isNotDefinedForDeviantThingIds() {\n        final CommandStrategy.Context<ThingId> context = getDefaultContext();\n        final RetrieveThing command = RetrieveThing.of(ThingId.of(\"org.example\", \"myThing\"), DittoHeaders.empty());\n\n        final boolean defined = underTest.isDefined(context, THING_V2, command);\n\n        assertThat(defined).isFalse();\n    }", "signature": "void isNotDefinedForDeviantThingIds()", "full_signature": "@Test public void isNotDefinedForDeviantThingIds()", "class_method_signature": "RetrieveThingStrategyTest.isNotDefinedForDeviantThingIds()", "testcase": true, "constructor": false, "invocations": ["getDefaultContext", "of", "of", "empty", "isDefined", "isFalse", "assertThat"]}, "focal_class": {"identifier": "RetrieveThingStrategy", "superclass": "extends AbstractThingCommandStrategy<RetrieveThing>", "interfaces": "", "fields": [], "methods": [{"identifier": "RetrieveThingStrategy", "parameters": "()", "modifiers": "", "return": "", "signature": " RetrieveThingStrategy()", "full_signature": "  RetrieveThingStrategy()", "class_method_signature": "RetrieveThingStrategy.RetrieveThingStrategy()", "testcase": false, "constructor": true}, {"identifier": "isDefined", "parameters": "(final Context<ThingId> context, @Nullable final Thing thing,\n            final RetrieveThing command)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDefined(final Context<ThingId> context, @Nullable final Thing thing,\n            final RetrieveThing command)", "full_signature": "@Override public boolean isDefined(final Context<ThingId> context, @Nullable final Thing thing,\n            final RetrieveThing command)", "class_method_signature": "RetrieveThingStrategy.isDefined(final Context<ThingId> context, @Nullable final Thing thing,\n            final RetrieveThing command)", "testcase": false, "constructor": false}, {"identifier": "doApply", "parameters": "(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final RetrieveThing command,\n            @Nullable final Metadata metadata)", "modifiers": "@Override protected", "return": "Result<ThingEvent>", "signature": "Result<ThingEvent> doApply(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final RetrieveThing command,\n            @Nullable final Metadata metadata)", "full_signature": "@Override protected Result<ThingEvent> doApply(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final RetrieveThing command,\n            @Nullable final Metadata metadata)", "class_method_signature": "RetrieveThingStrategy.doApply(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final RetrieveThing command,\n            @Nullable final Metadata metadata)", "testcase": false, "constructor": false}, {"identifier": "getRetrieveThingResponse", "parameters": "(@Nullable final Thing thing,\n            final ThingQueryCommand<RetrieveThing> command)", "modifiers": "private static", "return": "WithDittoHeaders", "signature": "WithDittoHeaders getRetrieveThingResponse(@Nullable final Thing thing,\n            final ThingQueryCommand<RetrieveThing> command)", "full_signature": "private static WithDittoHeaders getRetrieveThingResponse(@Nullable final Thing thing,\n            final ThingQueryCommand<RetrieveThing> command)", "class_method_signature": "RetrieveThingStrategy.getRetrieveThingResponse(@Nullable final Thing thing,\n            final ThingQueryCommand<RetrieveThing> command)", "testcase": false, "constructor": false}, {"identifier": "getThingJson", "parameters": "(final Thing thing, final ThingQueryCommand<RetrieveThing> command)", "modifiers": "private static", "return": "JsonObject", "signature": "JsonObject getThingJson(final Thing thing, final ThingQueryCommand<RetrieveThing> command)", "full_signature": "private static JsonObject getThingJson(final Thing thing, final ThingQueryCommand<RetrieveThing> command)", "class_method_signature": "RetrieveThingStrategy.getThingJson(final Thing thing, final ThingQueryCommand<RetrieveThing> command)", "testcase": false, "constructor": false}, {"identifier": "notAccessible", "parameters": "(final ThingQueryCommand<?> command)", "modifiers": "private static", "return": "ThingNotAccessibleException", "signature": "ThingNotAccessibleException notAccessible(final ThingQueryCommand<?> command)", "full_signature": "private static ThingNotAccessibleException notAccessible(final ThingQueryCommand<?> command)", "class_method_signature": "RetrieveThingStrategy.notAccessible(final ThingQueryCommand<?> command)", "testcase": false, "constructor": false}, {"identifier": "unhandled", "parameters": "(final Context<ThingId> context, @Nullable final Thing thing,\n            final long nextRevision, final RetrieveThing command)", "modifiers": "@Override public", "return": "Result<ThingEvent>", "signature": "Result<ThingEvent> unhandled(final Context<ThingId> context, @Nullable final Thing thing,\n            final long nextRevision, final RetrieveThing command)", "full_signature": "@Override public Result<ThingEvent> unhandled(final Context<ThingId> context, @Nullable final Thing thing,\n            final long nextRevision, final RetrieveThing command)", "class_method_signature": "RetrieveThingStrategy.unhandled(final Context<ThingId> context, @Nullable final Thing thing,\n            final long nextRevision, final RetrieveThing command)", "testcase": false, "constructor": false}, {"identifier": "previousEntityTag", "parameters": "(final RetrieveThing command, @Nullable final Thing previousEntity)", "modifiers": "@Override public", "return": "Optional<EntityTag>", "signature": "Optional<EntityTag> previousEntityTag(final RetrieveThing command, @Nullable final Thing previousEntity)", "full_signature": "@Override public Optional<EntityTag> previousEntityTag(final RetrieveThing command, @Nullable final Thing previousEntity)", "class_method_signature": "RetrieveThingStrategy.previousEntityTag(final RetrieveThing command, @Nullable final Thing previousEntity)", "testcase": false, "constructor": false}, {"identifier": "nextEntityTag", "parameters": "(final RetrieveThing command, @Nullable final Thing newEntity)", "modifiers": "@Override public", "return": "Optional<EntityTag>", "signature": "Optional<EntityTag> nextEntityTag(final RetrieveThing command, @Nullable final Thing newEntity)", "full_signature": "@Override public Optional<EntityTag> nextEntityTag(final RetrieveThing command, @Nullable final Thing newEntity)", "class_method_signature": "RetrieveThingStrategy.nextEntityTag(final RetrieveThing command, @Nullable final Thing newEntity)", "testcase": false, "constructor": false}], "file": "services/things/persistence/src/main/java/org/eclipse/ditto/services/things/persistence/actors/strategies/commands/RetrieveThingStrategy.java"}, "focal_method": {"identifier": "isDefined", "parameters": "(final Context<ThingId> context, @Nullable final Thing thing,\n            final RetrieveThing command)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isDefined(final Context<ThingId> context, @Nullable final Thing thing,\n            final RetrieveThing command) {\n        final boolean thingExists = Optional.ofNullable(thing)\n                .map(t -> !t.isDeleted())\n                .orElse(false);\n\n        return Objects.equals(context.getState(), command.getEntityId()) && thingExists;\n    }", "signature": "boolean isDefined(final Context<ThingId> context, @Nullable final Thing thing,\n            final RetrieveThing command)", "full_signature": "@Override public boolean isDefined(final Context<ThingId> context, @Nullable final Thing thing,\n            final RetrieveThing command)", "class_method_signature": "RetrieveThingStrategy.isDefined(final Context<ThingId> context, @Nullable final Thing thing,\n            final RetrieveThing command)", "testcase": false, "constructor": false, "invocations": ["orElse", "map", "ofNullable", "isDeleted", "equals", "getState", "getEntityId"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}