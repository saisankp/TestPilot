{"test_class": {"identifier": "GameContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private GazePlay mockGazePlay;", "modifier": "@Mock\n    private", "type": "GazePlay", "declarator": "mockGazePlay", "var_name": "mockGazePlay"}, {"original_string": "@Mock\n    private Translator mockTranslator;", "modifier": "@Mock\n    private", "type": "Translator", "declarator": "mockTranslator", "var_name": "mockTranslator"}, {"original_string": "@Mock\n    private Pane mockRoot;", "modifier": "@Mock\n    private", "type": "Pane", "declarator": "mockRoot", "var_name": "mockRoot"}, {"original_string": "@Mock\n    private Pane mockGamingRoot;", "modifier": "@Mock\n    private", "type": "Pane", "declarator": "mockGamingRoot", "var_name": "mockGamingRoot"}, {"original_string": "@Mock\n    private Bravo mockBravo;", "modifier": "@Mock\n    private", "type": "Bravo", "declarator": "mockBravo", "var_name": "mockBravo"}, {"original_string": "@Mock\n    private HBox mockHBox;", "modifier": "@Mock\n    private", "type": "HBox", "declarator": "mockHBox", "var_name": "mockHBox"}, {"original_string": "@Mock\n    private GazeDeviceManager mockGazeDeviceManager;", "modifier": "@Mock\n    private", "type": "GazeDeviceManager", "declarator": "mockGazeDeviceManager", "var_name": "mockGazeDeviceManager"}, {"original_string": "@Mock\n    private SoundManager mockSoundManager;", "modifier": "@Mock\n    private", "type": "SoundManager", "declarator": "mockSoundManager", "var_name": "mockSoundManager"}, {"original_string": "@Mock\n    private Pane mockConfigPane;", "modifier": "@Mock\n    private", "type": "Pane", "declarator": "mockConfigPane", "var_name": "mockConfigPane"}, {"original_string": "@Mock\n    private Configuration mockConfiguration;", "modifier": "@Mock\n    private", "type": "Configuration", "declarator": "mockConfiguration", "var_name": "mockConfiguration"}, {"original_string": "@Mock\n    private ObservableList<Node> mockList;", "modifier": "@Mock\n    private", "type": "ObservableList<Node>", "declarator": "mockList", "var_name": "mockList"}, {"original_string": "@Mock\n    private Stats mockStats;", "modifier": "@Mock\n    private", "type": "Stats", "declarator": "mockStats", "var_name": "mockStats"}, {"original_string": "@Mock\n    private GameLifeCycle mockGameLifeCycle;", "modifier": "@Mock\n    private", "type": "GameLifeCycle", "declarator": "mockGameLifeCycle", "var_name": "mockGameLifeCycle"}, {"original_string": "private SavedStatsInfo mockSavedStatsInfo = new SavedStatsInfo(\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\")\n    );", "modifier": "private", "type": "SavedStatsInfo", "declarator": "mockSavedStatsInfo = new SavedStatsInfo(\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\")\n    )", "var_name": "mockSavedStatsInfo"}], "file": "gazeplay-core/src/test/java/net/gazeplay/ui/scenes/ingame/GameContextTest.java"}, "test_case": {"identifier": "shouldInitialisePointersOnConstruction", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldInitialisePointersOnConstruction() {\n        when(mockConfiguration.isVideoRecordingEnabled()).thenReturn(true);\n        when(mockRoot.getChildren()).thenReturn(mockList);\n\n        new GameContext(mockGazePlay, mockTranslator, mockRoot, mockGamingRoot, mockBravo, mockHBox, mockGazeDeviceManager, mockSoundManager, mockConfigPane);\n\n        verify(mockList, times(2)).add(any());\n        verify(mockRoot, times(2)).addEventFilter(any(), any());\n    }", "signature": "void shouldInitialisePointersOnConstruction()", "full_signature": "@Test void shouldInitialisePointersOnConstruction()", "class_method_signature": "GameContextTest.shouldInitialisePointersOnConstruction()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "isVideoRecordingEnabled", "thenReturn", "when", "getChildren", "add", "verify", "times", "any", "addEventFilter", "verify", "times", "any", "any"]}, "focal_class": {"identifier": "GameContext", "superclass": "extends GraphicalContext<Pane>", "interfaces": "implements IGameContext", "fields": [{"original_string": "boolean limiterS = false;", "modifier": "", "type": "boolean", "declarator": "limiterS = false", "var_name": "limiterS"}, {"original_string": "boolean limiterT = false;", "modifier": "", "type": "boolean", "declarator": "limiterT = false", "var_name": "limiterT"}, {"original_string": "long startTime = 0;", "modifier": "", "type": "long", "declarator": "startTime = 0", "var_name": "startTime"}, {"original_string": "long endTime = 0;", "modifier": "", "type": "long", "declarator": "endTime = 0", "var_name": "endTime"}, {"original_string": "boolean limiteUsed =false;", "modifier": "", "type": "boolean", "declarator": "limiteUsed =false", "var_name": "limiteUsed"}, {"original_string": "@Setter\n    private static boolean runAsynchronousStatsPersist = false;", "modifier": "@Setter\n    private static", "type": "boolean", "declarator": "runAsynchronousStatsPersist = false", "var_name": "runAsynchronousStatsPersist"}, {"original_string": "@Getter\n    private final Translator translator;", "modifier": "@Getter\n    private final", "type": "Translator", "declarator": "translator", "var_name": "translator"}, {"original_string": "private final Bravo bravo;", "modifier": "private final", "type": "Bravo", "declarator": "bravo", "var_name": "bravo"}, {"original_string": "@Getter\n    private final HBox menuHBox;", "modifier": "@Getter\n    private final", "type": "HBox", "declarator": "menuHBox", "var_name": "menuHBox"}, {"original_string": "@Getter\n    private final RandomPositionGenerator randomPositionGenerator;", "modifier": "@Getter\n    private final", "type": "RandomPositionGenerator", "declarator": "randomPositionGenerator", "var_name": "randomPositionGenerator"}, {"original_string": "@Getter\n    private final GamePanelDimensionProvider gamePanelDimensionProvider;", "modifier": "@Getter\n    private final", "type": "GamePanelDimensionProvider", "declarator": "gamePanelDimensionProvider", "var_name": "gamePanelDimensionProvider"}, {"original_string": "@Getter\n    private final GazeDeviceManager gazeDeviceManager;", "modifier": "@Getter\n    private final", "type": "GazeDeviceManager", "declarator": "gazeDeviceManager", "var_name": "gazeDeviceManager"}, {"original_string": "@Getter\n    private final SoundManager soundManager;", "modifier": "@Getter\n    private final", "type": "SoundManager", "declarator": "soundManager", "var_name": "soundManager"}, {"original_string": "private final Pane configPane;", "modifier": "private final", "type": "Pane", "declarator": "configPane", "var_name": "configPane"}, {"original_string": "private final Pane gamingRoot;", "modifier": "private final", "type": "Pane", "declarator": "gamingRoot", "var_name": "gamingRoot"}, {"original_string": "private VideoRecordingContext videoRecordingContext;", "modifier": "private", "type": "VideoRecordingContext", "declarator": "videoRecordingContext", "var_name": "videoRecordingContext"}], "methods": [{"identifier": "updateConfigPane", "parameters": "(final Pane configPane, Stage primaryStage)", "modifiers": "public static", "return": "void", "signature": "void updateConfigPane(final Pane configPane, Stage primaryStage)", "full_signature": "public static void updateConfigPane(final Pane configPane, Stage primaryStage)", "class_method_signature": "GameContext.updateConfigPane(final Pane configPane, Stage primaryStage)", "testcase": false, "constructor": false}, {"identifier": "GameContext", "parameters": "(\n        @NonNull GazePlay gazePlay,\n        @NonNull Translator translator,\n        @NonNull Pane root,\n        @NonNull Pane gamingRoot,\n        @NonNull Bravo bravo,\n        @NonNull HBox menuHBox,\n        @NonNull GazeDeviceManager gazeDeviceManager,\n        @NonNull SoundManager soundManager,\n        @NonNull Pane configPane\n    )", "modifiers": "protected", "return": "", "signature": " GameContext(\n        @NonNull GazePlay gazePlay,\n        @NonNull Translator translator,\n        @NonNull Pane root,\n        @NonNull Pane gamingRoot,\n        @NonNull Bravo bravo,\n        @NonNull HBox menuHBox,\n        @NonNull GazeDeviceManager gazeDeviceManager,\n        @NonNull SoundManager soundManager,\n        @NonNull Pane configPane\n    )", "full_signature": "protected  GameContext(\n        @NonNull GazePlay gazePlay,\n        @NonNull Translator translator,\n        @NonNull Pane root,\n        @NonNull Pane gamingRoot,\n        @NonNull Bravo bravo,\n        @NonNull HBox menuHBox,\n        @NonNull GazeDeviceManager gazeDeviceManager,\n        @NonNull SoundManager soundManager,\n        @NonNull Pane configPane\n    )", "class_method_signature": "GameContext.GameContext(\n        @NonNull GazePlay gazePlay,\n        @NonNull Translator translator,\n        @NonNull Pane root,\n        @NonNull Pane gamingRoot,\n        @NonNull Bravo bravo,\n        @NonNull HBox menuHBox,\n        @NonNull GazeDeviceManager gazeDeviceManager,\n        @NonNull SoundManager soundManager,\n        @NonNull Pane configPane\n    )", "testcase": false, "constructor": true}, {"identifier": "setUpOnStage", "parameters": "(final Scene scene)", "modifiers": "@Override public", "return": "void", "signature": "void setUpOnStage(final Scene scene)", "full_signature": "@Override public void setUpOnStage(final Scene scene)", "class_method_signature": "GameContext.setUpOnStage(final Scene scene)", "testcase": false, "constructor": false}, {"identifier": "resetBordersToFront", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void resetBordersToFront()", "full_signature": "public void resetBordersToFront()", "class_method_signature": "GameContext.resetBordersToFront()", "testcase": false, "constructor": false}, {"identifier": "getCurrentScreenDimensionSupplier", "parameters": "()", "modifiers": "@Override public", "return": "Supplier<Dimension2D>", "signature": "Supplier<Dimension2D> getCurrentScreenDimensionSupplier()", "full_signature": "@Override public Supplier<Dimension2D> getCurrentScreenDimensionSupplier()", "class_method_signature": "GameContext.getCurrentScreenDimensionSupplier()", "testcase": false, "constructor": false}, {"identifier": "startScoreLimiter", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void startScoreLimiter()", "full_signature": "@Override public void startScoreLimiter()", "class_method_signature": "GameContext.startScoreLimiter()", "testcase": false, "constructor": false}, {"identifier": "startTimeLimiter", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void startTimeLimiter()", "full_signature": "@Override public void startTimeLimiter()", "class_method_signature": "GameContext.startTimeLimiter()", "testcase": false, "constructor": false}, {"identifier": "setLimiterAvailable", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void setLimiterAvailable()", "full_signature": "@Override public void setLimiterAvailable()", "class_method_signature": "GameContext.setLimiterAvailable()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void start()", "full_signature": "@Override public void start()", "class_method_signature": "GameContext.start()", "testcase": false, "constructor": false}, {"identifier": "firstStart", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void firstStart()", "full_signature": "@Override public void firstStart()", "class_method_signature": "GameContext.firstStart()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "GameContext.stop()", "testcase": false, "constructor": false}, {"identifier": "updateScore", "parameters": "(Stats stats, GameLifeCycle currentGame)", "modifiers": "@Override public", "return": "void", "signature": "void updateScore(Stats stats, GameLifeCycle currentGame)", "full_signature": "@Override public void updateScore(Stats stats, GameLifeCycle currentGame)", "class_method_signature": "GameContext.updateScore(Stats stats, GameLifeCycle currentGame)", "testcase": false, "constructor": false}, {"identifier": "updateScore", "parameters": "(Stats stats, GameLifeCycle currentGame,  EventHandler<ActionEvent> onTimeLimiterEndEventHandler, EventHandler<ActionEvent> onScoreLimiterEndEventHandler)", "modifiers": "@Override public", "return": "void", "signature": "void updateScore(Stats stats, GameLifeCycle currentGame,  EventHandler<ActionEvent> onTimeLimiterEndEventHandler, EventHandler<ActionEvent> onScoreLimiterEndEventHandler)", "full_signature": "@Override public void updateScore(Stats stats, GameLifeCycle currentGame,  EventHandler<ActionEvent> onTimeLimiterEndEventHandler, EventHandler<ActionEvent> onScoreLimiterEndEventHandler)", "class_method_signature": "GameContext.updateScore(Stats stats, GameLifeCycle currentGame,  EventHandler<ActionEvent> onTimeLimiterEndEventHandler, EventHandler<ActionEvent> onScoreLimiterEndEventHandler)", "testcase": false, "constructor": false}, {"identifier": "time", "parameters": "(double start, double end)", "modifiers": "private", "return": "double", "signature": "double time(double start, double end)", "full_signature": "private double time(double start, double end)", "class_method_signature": "GameContext.time(double start, double end)", "testcase": false, "constructor": false}, {"identifier": "createQuitShortcut", "parameters": "(@NonNull GazePlay gazePlay, @NonNull Stats stats, GameLifeCycle currentGame)", "modifiers": "public", "return": "void", "signature": "void createQuitShortcut(@NonNull GazePlay gazePlay, @NonNull Stats stats, GameLifeCycle currentGame)", "full_signature": "public void createQuitShortcut(@NonNull GazePlay gazePlay, @NonNull Stats stats, GameLifeCycle currentGame)", "class_method_signature": "GameContext.createQuitShortcut(@NonNull GazePlay gazePlay, @NonNull Stats stats, GameLifeCycle currentGame)", "testcase": false, "constructor": false}, {"identifier": "createControlPanel", "parameters": "(@NonNull GazePlay gazePlay, @NonNull Stats stats, GameLifeCycle currentGame)", "modifiers": "public", "return": "void", "signature": "void createControlPanel(@NonNull GazePlay gazePlay, @NonNull Stats stats, GameLifeCycle currentGame)", "full_signature": "public void createControlPanel(@NonNull GazePlay gazePlay, @NonNull Stats stats, GameLifeCycle currentGame)", "class_method_signature": "GameContext.createControlPanel(@NonNull GazePlay gazePlay, @NonNull Stats stats, GameLifeCycle currentGame)", "testcase": false, "constructor": false}, {"identifier": "createHomeButtonInGameScreen", "parameters": "(@NonNull GazePlay gazePlay, @NonNull Stats stats,\n                                                   @NonNull GameLifeCycle currentGame)", "modifiers": "public", "return": "HomeButton", "signature": "HomeButton createHomeButtonInGameScreen(@NonNull GazePlay gazePlay, @NonNull Stats stats,\n                                                   @NonNull GameLifeCycle currentGame)", "full_signature": "public HomeButton createHomeButtonInGameScreen(@NonNull GazePlay gazePlay, @NonNull Stats stats,\n                                                   @NonNull GameLifeCycle currentGame)", "class_method_signature": "GameContext.createHomeButtonInGameScreen(@NonNull GazePlay gazePlay, @NonNull Stats stats,\n                                                   @NonNull GameLifeCycle currentGame)", "testcase": false, "constructor": false}, {"identifier": "exitGame", "parameters": "(@NonNull Stats stats, @NonNull GazePlay gazePlay, @NonNull GameLifeCycle currentGame)", "modifiers": "", "return": "void", "signature": "void exitGame(@NonNull Stats stats, @NonNull GazePlay gazePlay, @NonNull GameLifeCycle currentGame)", "full_signature": " void exitGame(@NonNull Stats stats, @NonNull GazePlay gazePlay, @NonNull GameLifeCycle currentGame)", "class_method_signature": "GameContext.exitGame(@NonNull Stats stats, @NonNull GazePlay gazePlay, @NonNull GameLifeCycle currentGame)", "testcase": false, "constructor": false}, {"identifier": "getConfiguration", "parameters": "()", "modifiers": "@Override public @NonNull", "return": "Configuration", "signature": "Configuration getConfiguration()", "full_signature": "@Override public @NonNull Configuration getConfiguration()", "class_method_signature": "GameContext.getConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getAnimationSpeedRatioSource", "parameters": "()", "modifiers": "@Override public", "return": "AnimationSpeedRatioSource", "signature": "AnimationSpeedRatioSource getAnimationSpeedRatioSource()", "full_signature": "@Override public AnimationSpeedRatioSource getAnimationSpeedRatioSource()", "class_method_signature": "GameContext.getAnimationSpeedRatioSource()", "testcase": false, "constructor": false}, {"identifier": "getPrimaryStage", "parameters": "()", "modifiers": "@Override public", "return": "Stage", "signature": "Stage getPrimaryStage()", "full_signature": "@Override public Stage getPrimaryStage()", "class_method_signature": "GameContext.getPrimaryStage()", "testcase": false, "constructor": false}, {"identifier": "getPrimaryScene", "parameters": "()", "modifiers": "@Override public", "return": "Scene", "signature": "Scene getPrimaryScene()", "full_signature": "@Override public Scene getPrimaryScene()", "class_method_signature": "GameContext.getPrimaryScene()", "testcase": false, "constructor": false}, {"identifier": "showRoundStats", "parameters": "(Stats stats, GameLifeCycle currentGame)", "modifiers": "@Override public", "return": "void", "signature": "void showRoundStats(Stats stats, GameLifeCycle currentGame)", "full_signature": "@Override public void showRoundStats(Stats stats, GameLifeCycle currentGame)", "class_method_signature": "GameContext.showRoundStats(Stats stats, GameLifeCycle currentGame)", "testcase": false, "constructor": false}, {"identifier": "playWinTransition", "parameters": "(long delay, EventHandler<ActionEvent> onFinishedEventHandler)", "modifiers": "@Override public", "return": "void", "signature": "void playWinTransition(long delay, EventHandler<ActionEvent> onFinishedEventHandler)", "full_signature": "@Override public void playWinTransition(long delay, EventHandler<ActionEvent> onFinishedEventHandler)", "class_method_signature": "GameContext.playWinTransition(long delay, EventHandler<ActionEvent> onFinishedEventHandler)", "testcase": false, "constructor": false}, {"identifier": "endWinTransition", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void endWinTransition()", "full_signature": "@Override public void endWinTransition()", "class_method_signature": "GameContext.endWinTransition()", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "ObservableList<Node>", "signature": "ObservableList<Node> getChildren()", "full_signature": "@Override public ObservableList<Node> getChildren()", "class_method_signature": "GameContext.getChildren()", "testcase": false, "constructor": false}, {"identifier": "getRoot", "parameters": "()", "modifiers": "@Override public", "return": "Pane", "signature": "Pane getRoot()", "full_signature": "@Override public Pane getRoot()", "class_method_signature": "GameContext.getRoot()", "testcase": false, "constructor": false}, {"identifier": "onGameStarted", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onGameStarted()", "full_signature": "public void onGameStarted()", "class_method_signature": "GameContext.onGameStarted()", "testcase": false, "constructor": false}], "file": "gazeplay-core/src/main/java/net/gazeplay/ui/scenes/ingame/GameContext.java"}, "focal_method": {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "ObservableList<Node>", "body": "@Override\n    public ObservableList<Node> getChildren() {\n        return gamingRoot.getChildren();\n    }", "signature": "ObservableList<Node> getChildren()", "full_signature": "@Override public ObservableList<Node> getChildren()", "class_method_signature": "GameContext.getChildren()", "testcase": false, "constructor": false, "invocations": ["getChildren"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}