{"test_class": {"identifier": "MessageFileHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String APPLICATION_JSON = \"application/json\";", "modifier": "private static final", "type": "String", "declarator": "APPLICATION_JSON = \"application/json\"", "var_name": "APPLICATION_JSON"}, {"original_string": "@Mock\n    private PrintWriter printWriter;", "modifier": "@Mock\n    private", "type": "PrintWriter", "declarator": "printWriter", "var_name": "printWriter"}, {"original_string": "@Mock\n    private HttpServletRequest request;", "modifier": "@Mock\n    private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private HttpServletResponse response;", "modifier": "@Mock\n    private", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "@Mock\n    private WebAppConfigurationAccess configurationAccess;", "modifier": "@Mock\n    private", "type": "WebAppConfigurationAccess", "declarator": "configurationAccess", "var_name": "configurationAccess"}, {"original_string": "@Mock\n    private PropertyDTO properties;", "modifier": "@Mock\n    private", "type": "PropertyDTO", "declarator": "properties", "var_name": "properties"}, {"original_string": "@Mock\n    private FileListJsonProperties fileListProperties;", "modifier": "@Mock\n    private", "type": "FileListJsonProperties", "declarator": "fileListProperties", "var_name": "fileListProperties"}, {"original_string": "@Mock\n    private Path path;", "modifier": "@Mock\n    private", "type": "Path", "declarator": "path", "var_name": "path"}, {"original_string": "@Mock\n    private File file;", "modifier": "@Mock\n    private", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "@Mock\n    private LogFileHandler logFileHandler;", "modifier": "@Mock\n    private", "type": "LogFileHandler", "declarator": "logFileHandler", "var_name": "logFileHandler"}, {"original_string": "@Mock\n    private FileListJsonBuilder messageFileJsonBuilder;", "modifier": "@Mock\n    private", "type": "FileListJsonBuilder", "declarator": "messageFileJsonBuilder", "var_name": "messageFileJsonBuilder"}, {"original_string": "@InjectMocks\n    private MessageFileHandler underTest;", "modifier": "@InjectMocks\n    private", "type": "MessageFileHandler", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-webapp/src/test/java/com/epam/wilma/webapp/config/servlet/helper/MessageFileHandlerTest.java"}, "test_case": {"identifier": "testWriteFileNamesToResponse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWriteFileNamesToResponse() throws IOException {\n        //GIVEN\n        String expectedJson = \"{\\\"test\\\":\\\"test\\\"}\";\n        given(fileListProperties.getMaximumCountOfMessages()).willReturn(10);\n        given(path.toFile()).willReturn(file);\n        given(messageFileJsonBuilder.buildMessageFileListJson(file, 10)).willReturn(expectedJson);\n        //WHEN\n        underTest.writeFileNamesToResponse(response, path);\n        //THEN\n        verify(response).setContentType(APPLICATION_JSON);\n        verify(messageFileJsonBuilder).buildMessageFileListJson(file, 10);\n        verify(printWriter).write(expectedJson);\n        verify(printWriter).flush();\n    }", "signature": "void testWriteFileNamesToResponse()", "full_signature": "@Test public void testWriteFileNamesToResponse()", "class_method_signature": "MessageFileHandlerTest.testWriteFileNamesToResponse()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getMaximumCountOfMessages", "willReturn", "given", "toFile", "willReturn", "given", "buildMessageFileListJson", "writeFileNamesToResponse", "setContentType", "verify", "buildMessageFileListJson", "verify", "write", "verify", "flush", "verify"]}, "focal_class": {"identifier": "MessageFileHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String APPLICATION_JSON = \"application/json\";", "modifier": "private static final", "type": "String", "declarator": "APPLICATION_JSON = \"application/json\"", "var_name": "APPLICATION_JSON"}, {"original_string": "@Autowired\n    private FileListJsonBuilder messageFileJsonBuilder;", "modifier": "@Autowired\n    private", "type": "FileListJsonBuilder", "declarator": "messageFileJsonBuilder", "var_name": "messageFileJsonBuilder"}, {"original_string": "@Autowired\n    private WebAppConfigurationAccess configurationAccess;", "modifier": "@Autowired\n    private", "type": "WebAppConfigurationAccess", "declarator": "configurationAccess", "var_name": "configurationAccess"}, {"original_string": "@Autowired\n    private LogFileHandler logFileHandler;", "modifier": "@Autowired\n    private", "type": "LogFileHandler", "declarator": "logFileHandler", "var_name": "logFileHandler"}], "methods": [{"identifier": "writeFileNamesToResponse", "parameters": "(final HttpServletResponse resp, final Path path)", "modifiers": "public", "return": "void", "signature": "void writeFileNamesToResponse(final HttpServletResponse resp, final Path path)", "full_signature": "public void writeFileNamesToResponse(final HttpServletResponse resp, final Path path)", "class_method_signature": "MessageFileHandler.writeFileNamesToResponse(final HttpServletResponse resp, final Path path)", "testcase": false, "constructor": false}, {"identifier": "writeFileContentToResponse", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp, final String pathInfo, final Path path)", "modifiers": "public", "return": "void", "signature": "void writeFileContentToResponse(final HttpServletRequest req, final HttpServletResponse resp, final String pathInfo, final Path path)", "full_signature": "public void writeFileContentToResponse(final HttpServletRequest req, final HttpServletResponse resp, final String pathInfo, final Path path)", "class_method_signature": "MessageFileHandler.writeFileContentToResponse(final HttpServletRequest req, final HttpServletResponse resp, final String pathInfo, final Path path)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-webapp/src/main/java/com/epam/wilma/webapp/config/servlet/helper/MessageFileHandler.java"}, "focal_method": {"identifier": "writeFileNamesToResponse", "parameters": "(final HttpServletResponse resp, final Path path)", "modifiers": "public", "return": "void", "body": "public void writeFileNamesToResponse(final HttpServletResponse resp, final Path path) throws IOException {\n        FileListJsonProperties properties = configurationAccess.getProperties().getFileListProperties();\n        PrintWriter out = resp.getWriter();\n        resp.setContentType(APPLICATION_JSON);\n        out.write(messageFileJsonBuilder.buildMessageFileListJson(path.toFile(), properties.getMaximumCountOfMessages()));\n        out.flush();\n        out.close();\n    }", "signature": "void writeFileNamesToResponse(final HttpServletResponse resp, final Path path)", "full_signature": "public void writeFileNamesToResponse(final HttpServletResponse resp, final Path path)", "class_method_signature": "MessageFileHandler.writeFileNamesToResponse(final HttpServletResponse resp, final Path path)", "testcase": false, "constructor": false, "invocations": ["getFileListProperties", "getProperties", "getWriter", "setContentType", "write", "buildMessageFileListJson", "toFile", "getMaximumCountOfMessages", "flush", "close"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}