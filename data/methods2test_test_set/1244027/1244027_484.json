{"test_class": {"identifier": "MimeTypeDetectorsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Environment environment = new LocalEnvironment();", "modifier": "private final", "type": "Environment", "declarator": "environment = new LocalEnvironment()", "var_name": "environment"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/mimetype/MimeTypeDetectorsTest.java"}, "test_case": {"identifier": "shouldReturnValidContentDetector", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnValidContentDetector() {\n        assertNotNull(MimeTypeDetectors.createDetectorFor(RepositoryConfiguration.FieldValue.MIMETYPE_DETECTION_CONTENT,\n                                                          environment));\n    }", "signature": "void shouldReturnValidContentDetector()", "full_signature": "@Test public void shouldReturnValidContentDetector()", "class_method_signature": "MimeTypeDetectorsTest.shouldReturnValidContentDetector()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "createDetectorFor"]}, "focal_class": {"identifier": "MimeTypeDetectors", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(MimeTypeDetector.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(MimeTypeDetector.class)", "var_name": "LOGGER"}, {"original_string": "private static final boolean TIKA_AVAILABLE;", "modifier": "private static final", "type": "boolean", "declarator": "TIKA_AVAILABLE", "var_name": "TIKA_AVAILABLE"}], "methods": [{"identifier": "MimeTypeDetectors", "parameters": "()", "modifiers": "private", "return": "", "signature": " MimeTypeDetectors()", "full_signature": "private  MimeTypeDetectors()", "class_method_signature": "MimeTypeDetectors.MimeTypeDetectors()", "testcase": false, "constructor": true}, {"identifier": "createDetectorFor", "parameters": "(String mimeTypeDetectionConfig, Environment environment)", "modifiers": "public static", "return": "MimeTypeDetector", "signature": "MimeTypeDetector createDetectorFor(String mimeTypeDetectionConfig, Environment environment)", "full_signature": "public static MimeTypeDetector createDetectorFor(String mimeTypeDetectionConfig, Environment environment)", "class_method_signature": "MimeTypeDetectors.createDetectorFor(String mimeTypeDetectionConfig, Environment environment)", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/mimetype/MimeTypeDetectors.java"}, "focal_method": {"identifier": "createDetectorFor", "parameters": "(String mimeTypeDetectionConfig, Environment environment)", "modifiers": "public static", "return": "MimeTypeDetector", "body": "public static MimeTypeDetector createDetectorFor(String mimeTypeDetectionConfig, Environment environment) {\n        switch (mimeTypeDetectionConfig.toLowerCase()) {\n            case RepositoryConfiguration.FieldValue.MIMETYPE_DETECTION_CONTENT: {\n                return TIKA_AVAILABLE ? new TikaContentDetector(environment) : new DefaultMimeTypeDetector();\n            }\n            case RepositoryConfiguration.FieldValue.MIMETYPE_DETECTION_NAME: {\n                return TIKA_AVAILABLE ? new TikaNameOnlyDetector(environment) : new DefaultMimeTypeDetector();\n            }\n            case RepositoryConfiguration.FieldValue.MIMETYPE_DETECTION_NONE: {\n                return NullMimeTypeDetector.INSTANCE;\n            }\n            default: {\n                throw new IllegalArgumentException(\"Unknown mime-type detector setting: \" + mimeTypeDetectionConfig);\n            }\n        }   \n    }", "signature": "MimeTypeDetector createDetectorFor(String mimeTypeDetectionConfig, Environment environment)", "full_signature": "public static MimeTypeDetector createDetectorFor(String mimeTypeDetectionConfig, Environment environment)", "class_method_signature": "MimeTypeDetectors.createDetectorFor(String mimeTypeDetectionConfig, Environment environment)", "testcase": false, "constructor": false, "invocations": ["toLowerCase"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}