{"test_class": {"identifier": "AssertUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "anomdetect/src/test/java/com/expedia/adaptivealerting/anomdetect/util/AssertUtilTest.java"}, "test_case": {"identifier": "testIsStrictlyPositive_falseValue", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testIsStrictlyPositive_falseValue() {\n        isStrictlyPositive(-3, \"Blah blah blah\");\n    }", "signature": "void testIsStrictlyPositive_falseValue()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testIsStrictlyPositive_falseValue()", "class_method_signature": "AssertUtilTest.testIsStrictlyPositive_falseValue()", "testcase": true, "constructor": false, "invocations": ["isStrictlyPositive"]}, "focal_class": {"identifier": "AssertUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "isTrue", "parameters": "(boolean b, String message)", "modifiers": "public static", "return": "void", "signature": "void isTrue(boolean b, String message)", "full_signature": "public static void isTrue(boolean b, String message)", "class_method_signature": "AssertUtil.isTrue(boolean b, String message)", "testcase": false, "constructor": false}, {"identifier": "isFalse", "parameters": "(boolean b, String message)", "modifiers": "public static", "return": "void", "signature": "void isFalse(boolean b, String message)", "full_signature": "public static void isFalse(boolean b, String message)", "class_method_signature": "AssertUtil.isFalse(boolean b, String message)", "testcase": false, "constructor": false}, {"identifier": "isNull", "parameters": "(Object o, String message)", "modifiers": "public static", "return": "void", "signature": "void isNull(Object o, String message)", "full_signature": "public static void isNull(Object o, String message)", "class_method_signature": "AssertUtil.isNull(Object o, String message)", "testcase": false, "constructor": false}, {"identifier": "notNull", "parameters": "(Object o, String message)", "modifiers": "public static", "return": "void", "signature": "void notNull(Object o, String message)", "full_signature": "public static void notNull(Object o, String message)", "class_method_signature": "AssertUtil.notNull(Object o, String message)", "testcase": false, "constructor": false}, {"identifier": "isEqual", "parameters": "(int v1, int v2, String message)", "modifiers": "public static", "return": "void", "signature": "void isEqual(int v1, int v2, String message)", "full_signature": "public static void isEqual(int v1, int v2, String message)", "class_method_signature": "AssertUtil.isEqual(int v1, int v2, String message)", "testcase": false, "constructor": false}, {"identifier": "isStrictlyPositive", "parameters": "(long value, String message)", "modifiers": "public static", "return": "void", "signature": "void isStrictlyPositive(long value, String message)", "full_signature": "public static void isStrictlyPositive(long value, String message)", "class_method_signature": "AssertUtil.isStrictlyPositive(long value, String message)", "testcase": false, "constructor": false}, {"identifier": "isBetween", "parameters": "(double value, double lowerBd, double upperBd, String message)", "modifiers": "public static", "return": "void", "signature": "void isBetween(double value, double lowerBd, double upperBd, String message)", "full_signature": "public static void isBetween(double value, double lowerBd, double upperBd, String message)", "class_method_signature": "AssertUtil.isBetween(double value, double lowerBd, double upperBd, String message)", "testcase": false, "constructor": false}], "file": "anomdetect/src/main/java/com/expedia/adaptivealerting/anomdetect/util/AssertUtil.java"}, "focal_method": {"identifier": "isStrictlyPositive", "parameters": "(long value, String message)", "modifiers": "public static", "return": "void", "body": "public static void isStrictlyPositive(long value, String message) {\n        isTrue(value > 0, message);\n    }", "signature": "void isStrictlyPositive(long value, String message)", "full_signature": "public static void isStrictlyPositive(long value, String message)", "class_method_signature": "AssertUtil.isStrictlyPositive(long value, String message)", "testcase": false, "constructor": false, "invocations": ["isTrue"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}