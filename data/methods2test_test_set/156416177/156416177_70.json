{"test_class": {"identifier": "ReadRecordsRespParsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SW1SW2_KO = \"6A82\";", "modifier": "private static final", "type": "String", "declarator": "SW1SW2_KO = \"6A82\"", "var_name": "SW1SW2_KO"}, {"original_string": "private static final String SW1SW2_OK = \"9000\";", "modifier": "private static final", "type": "String", "declarator": "SW1SW2_OK = \"9000\"", "var_name": "SW1SW2_OK"}, {"original_string": "private static final String REC1 = \"112233445566778899AABBCCDDEEFF00\";", "modifier": "private static final", "type": "String", "declarator": "REC1 = \"112233445566778899AABBCCDDEEFF00\"", "var_name": "REC1"}, {"original_string": "private static final String REC2 = \"00FFEEDDCCBBAA998877665544332211\";", "modifier": "private static final", "type": "String", "declarator": "REC2 = \"00FFEEDDCCBBAA998877665544332211\"", "var_name": "REC2"}, {"original_string": "private static final String APDU_BAD_SW1SW2 = SW1SW2_KO;", "modifier": "private static final", "type": "String", "declarator": "APDU_BAD_SW1SW2 = SW1SW2_KO", "var_name": "APDU_BAD_SW1SW2"}, {"original_string": "private static final String APDU_ONE_RECORD = REC1 + SW1SW2_OK;", "modifier": "private static final", "type": "String", "declarator": "APDU_ONE_RECORD = REC1 + SW1SW2_OK", "var_name": "APDU_ONE_RECORD"}, {"original_string": "private static final String APDU_TWO_RECORDS =\n      String.format(\"01%02X\", REC1.length() / 2)\n          + REC1\n          + String.format(\"02%02X\", REC2.length() / 2)\n          + REC2\n          + SW1SW2_OK;", "modifier": "private static final", "type": "String", "declarator": "APDU_TWO_RECORDS =\n      String.format(\"01%02X\", REC1.length() / 2)\n          + REC1\n          + String.format(\"02%02X\", REC2.length() / 2)\n          + REC2\n          + SW1SW2_OK", "var_name": "APDU_TWO_RECORDS"}, {"original_string": "private static final int SFI1 = 1;", "modifier": "private static final", "type": "int", "declarator": "SFI1 = 1", "var_name": "SFI1"}, {"original_string": "private static final int FIRST_REC1 = 1;", "modifier": "private static final", "type": "int", "declarator": "FIRST_REC1 = 1", "var_name": "FIRST_REC1"}, {"original_string": "private static final int EXPECTED_LENGTH1 = REC1.length();", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_LENGTH1 = REC1.length()", "var_name": "EXPECTED_LENGTH1"}, {"original_string": "private static final int EXPECTED_LENGTH2 = (REC1.length() + REC2.length()) / 2;", "modifier": "private static final", "type": "int", "declarator": "EXPECTED_LENGTH2 = (REC1.length() + REC2.length()) / 2", "var_name": "EXPECTED_LENGTH2"}], "file": "java/component/keyple-calypso/src/test/java/org/eclipse/keyple/calypso/command/po/parser/ReadRecordsRespParsTest.java"}, "test_case": {"identifier": "readRecordRespPars_getRecords_singleRecord", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void readRecordRespPars_getRecords_singleRecord() {\n    ReadRecordsCmdBuild readRecordsCmdBuild =\n        new ReadRecordsCmdBuild(\n            PoClass.ISO, SFI1, FIRST_REC1, ReadMode.ONE_RECORD, EXPECTED_LENGTH1);\n    ReadRecordsRespPars readRecordRespPars =\n        readRecordsCmdBuild.createResponseParser(\n            new ApduResponse(ByteArrayUtil.fromHex(APDU_ONE_RECORD), null));\n    readRecordRespPars.checkStatus();\n    SortedMap<Integer, byte[]> records = readRecordRespPars.getRecords();\n    assertThat(records.size()).isEqualTo(1);\n    assertThat(records.get(FIRST_REC1)).isEqualTo(ByteArrayUtil.fromHex(REC1));\n  }", "signature": "void readRecordRespPars_getRecords_singleRecord()", "full_signature": "@Test public void readRecordRespPars_getRecords_singleRecord()", "class_method_signature": "ReadRecordsRespParsTest.readRecordRespPars_getRecords_singleRecord()", "testcase": true, "constructor": false, "invocations": ["createResponseParser", "fromHex", "checkStatus", "getRecords", "isEqualTo", "assertThat", "size", "isEqualTo", "assertThat", "get", "fromHex"]}, "focal_class": {"identifier": "ReadRecordsRespPars", "superclass": "extends AbstractPoResponseParser", "interfaces": "", "fields": [{"original_string": "private static final Map<Integer, StatusProperties> STATUS_TABLE;", "modifier": "private static final", "type": "Map<Integer, StatusProperties>", "declarator": "STATUS_TABLE", "var_name": "STATUS_TABLE"}], "methods": [{"identifier": "getStatusTable", "parameters": "()", "modifiers": "@Override protected", "return": "Map<Integer, StatusProperties>", "signature": "Map<Integer, StatusProperties> getStatusTable()", "full_signature": "@Override protected Map<Integer, StatusProperties> getStatusTable()", "class_method_signature": "ReadRecordsRespPars.getStatusTable()", "testcase": false, "constructor": false}, {"identifier": "ReadRecordsRespPars", "parameters": "(ApduResponse apduResponse, ReadRecordsCmdBuild builder)", "modifiers": "public", "return": "", "signature": " ReadRecordsRespPars(ApduResponse apduResponse, ReadRecordsCmdBuild builder)", "full_signature": "public  ReadRecordsRespPars(ApduResponse apduResponse, ReadRecordsCmdBuild builder)", "class_method_signature": "ReadRecordsRespPars.ReadRecordsRespPars(ApduResponse apduResponse, ReadRecordsCmdBuild builder)", "testcase": false, "constructor": true}, {"identifier": "getRecords", "parameters": "()", "modifiers": "public", "return": "SortedMap<Integer, byte[]>", "signature": "SortedMap<Integer, byte[]> getRecords()", "full_signature": "public SortedMap<Integer, byte[]> getRecords()", "class_method_signature": "ReadRecordsRespPars.getRecords()", "testcase": false, "constructor": false}], "file": "java/component/keyple-calypso/src/main/java/org/eclipse/keyple/calypso/command/po/parser/ReadRecordsRespPars.java"}, "focal_method": {"identifier": "getRecords", "parameters": "()", "modifiers": "public", "return": "SortedMap<Integer, byte[]>", "body": "public SortedMap<Integer, byte[]> getRecords() {\n    SortedMap<Integer, byte[]> records = new TreeMap<Integer, byte[]>();\n    if (((ReadRecordsCmdBuild) builder).getReadMode() == ReadRecordsCmdBuild.ReadMode.ONE_RECORD) {\n      records.put(((ReadRecordsCmdBuild) builder).getFirstRecordNumber(), response.getDataOut());\n    } else {\n      byte[] apdu = response.getDataOut();\n      int apduLen = apdu.length;\n      int index = 0;\n      while (apduLen > 0) {\n        byte recordNb = apdu[index++];\n        byte len = apdu[index++];\n        records.put((int) recordNb, Arrays.copyOfRange(apdu, index, index + len));\n        index = index + len;\n        apduLen = apduLen - 2 - len;\n      }\n    }\n    return records;\n  }", "signature": "SortedMap<Integer, byte[]> getRecords()", "full_signature": "public SortedMap<Integer, byte[]> getRecords()", "class_method_signature": "ReadRecordsRespPars.getRecords()", "testcase": false, "constructor": false, "invocations": ["getReadMode", "put", "getFirstRecordNumber", "getDataOut", "getDataOut", "put", "copyOfRange"]}, "repository": {"repo_id": 156416177, "url": "https://github.com/eclipse/keyple-java", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 10325, "license": "licensed"}}