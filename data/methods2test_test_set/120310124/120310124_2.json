{"test_class": {"identifier": "BarTest", "superclass": "", "interfaces": "", "fields": [], "file": "application_module_2/src/test/java/de/doubleslash/demo/coverage/module/two/BarTest.java"}, "test_case": {"identifier": "testConditionedBarMethod", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testConditionedBarMethod() {\n        Bar testee = new Bar();\n        assertThat(testee.conditionedBarMethod(true), is(\"6jacoco\"));\n    }", "signature": "void testConditionedBarMethod()", "full_signature": "@Test void testConditionedBarMethod()", "class_method_signature": "BarTest.testConditionedBarMethod()", "testcase": true, "constructor": false, "invocations": ["assertThat", "conditionedBarMethod", "is"]}, "focal_class": {"identifier": "Bar", "superclass": "", "interfaces": "", "fields": [{"original_string": "private int i = 5;", "modifier": "private", "type": "int", "declarator": "i = 5", "var_name": "i"}, {"original_string": "private String s = \"jacoco\";", "modifier": "private", "type": "String", "declarator": "s = \"jacoco\"", "var_name": "s"}], "methods": [{"identifier": "barMethod", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int barMethod()", "full_signature": "public int barMethod()", "class_method_signature": "Bar.barMethod()", "testcase": false, "constructor": false}, {"identifier": "anotherBarMethod", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String anotherBarMethod()", "full_signature": "public String anotherBarMethod()", "class_method_signature": "Bar.anotherBarMethod()", "testcase": false, "constructor": false}, {"identifier": "conditionedBarMethod", "parameters": "(boolean condition)", "modifiers": "public", "return": "String", "signature": "String conditionedBarMethod(boolean condition)", "full_signature": "public String conditionedBarMethod(boolean condition)", "class_method_signature": "Bar.conditionedBarMethod(boolean condition)", "testcase": false, "constructor": false}], "file": "application_module_2/src/main/java/de/doubleslash/demo/coverage/module/two/Bar.java"}, "focal_method": {"identifier": "conditionedBarMethod", "parameters": "(boolean condition)", "modifiers": "public", "return": "String", "body": "public String conditionedBarMethod(boolean condition) {\n        if (!condition) {\n            return s;\n        }\n        else {\n            int j = i + 1;\n            return String.valueOf(j) + s;\n        }\n    }", "signature": "String conditionedBarMethod(boolean condition)", "full_signature": "public String conditionedBarMethod(boolean condition)", "class_method_signature": "Bar.conditionedBarMethod(boolean condition)", "testcase": false, "constructor": false, "invocations": ["valueOf"]}, "repository": {"repo_id": 120310124, "url": "https://github.com/doubleSlashde/maven-multimodule-coverage", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 16, "license": "licensed"}}