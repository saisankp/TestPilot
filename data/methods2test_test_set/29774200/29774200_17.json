{"test_class": {"identifier": "SonarDetectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    SonarDetector sonarDetector;", "modifier": "@InjectMocks", "type": "SonarDetector", "declarator": "sonarDetector", "var_name": "sonarDetector"}, {"original_string": "@Mock\n    GenericSoftwareClient client;", "modifier": "@Mock", "type": "GenericSoftwareClient", "declarator": "client", "var_name": "client"}], "file": "component/core/src/test/java/fr/norad/visuwall/plugin/sonar/SonarDetectorTest.java"}, "test_case": {"identifier": "should_return_true_if_url_with_page_contains_Sonar", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_return_true_if_url_with_page_contains_Sonar() throws Exception {\n        URL url = new URL(\"http://localhost:9000\");\n\n        when(client.contains(any(URL.class), eq(\"Sonar\"))).thenReturn(true);\n\n        assertTrue(sonarDetector.isSonarWelcomePage(url));\n    }", "signature": "void should_return_true_if_url_with_page_contains_Sonar()", "full_signature": "@Test public void should_return_true_if_url_with_page_contains_Sonar()", "class_method_signature": "SonarDetectorTest.should_return_true_if_url_with_page_contains_Sonar()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "contains", "any", "eq", "assertTrue", "isSonarWelcomePage"]}, "focal_class": {"identifier": "SonarDetector", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GenericSoftwareClient client = new GenericSoftwareClient();", "modifier": "private", "type": "GenericSoftwareClient", "declarator": "client = new GenericSoftwareClient()", "var_name": "client"}], "methods": [{"identifier": "isSonarPropertiesPage", "parameters": "(URL url)", "modifiers": "public", "return": "boolean", "signature": "boolean isSonarPropertiesPage(URL url)", "full_signature": "public boolean isSonarPropertiesPage(URL url)", "class_method_signature": "SonarDetector.isSonarPropertiesPage(URL url)", "testcase": false, "constructor": false}, {"identifier": "isSonarWelcomePage", "parameters": "(URL url)", "modifiers": "public", "return": "boolean", "signature": "boolean isSonarWelcomePage(URL url)", "full_signature": "public boolean isSonarWelcomePage(URL url)", "class_method_signature": "SonarDetector.isSonarWelcomePage(URL url)", "testcase": false, "constructor": false}, {"identifier": "buildPropertiesUrl", "parameters": "(URL url)", "modifiers": "public", "return": "String", "signature": "String buildPropertiesUrl(URL url)", "full_signature": "public String buildPropertiesUrl(URL url)", "class_method_signature": "SonarDetector.buildPropertiesUrl(URL url)", "testcase": false, "constructor": false}], "file": "component/core/src/main/java/fr/norad/visuwall/plugin/sonar/SonarDetector.java"}, "focal_method": {"identifier": "isSonarWelcomePage", "parameters": "(URL url)", "modifiers": "public", "return": "boolean", "body": "public boolean isSonarWelcomePage(URL url) {\n        return client.contains(url, \"Sonar\");\n    }", "signature": "boolean isSonarWelcomePage(URL url)", "full_signature": "public boolean isSonarWelcomePage(URL url)", "class_method_signature": "SonarDetector.isSonarWelcomePage(URL url)", "testcase": false, "constructor": false, "invocations": ["contains"]}, "repository": {"repo_id": 29774200, "url": "https://github.com/n0rad/visuwall", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 19747, "license": "licensed"}}