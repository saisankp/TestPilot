{"test_class": {"identifier": "CIPToolTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [{"original_string": "static SmilesParser   smiles = new SmilesParser(SilentChemObjectBuilder.getInstance());", "modifier": "static", "type": "SmilesParser", "declarator": "smiles = new SmilesParser(SilentChemObjectBuilder.getInstance())", "var_name": "smiles"}, {"original_string": "static IAtomContainer molecule;", "modifier": "static", "type": "IAtomContainer", "declarator": "molecule", "var_name": "molecule"}, {"original_string": "static ILigand[]      ligands;", "modifier": "static", "type": "ILigand[]", "declarator": "ligands", "var_name": "ligands"}], "file": "descriptor/cip/src/test/java/org/openscience/cdk/geometry/cip/CIPToolTest.java"}, "test_case": {"identifier": "testSteroid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSteroid() {\n        IChemObjectBuilder builder = DefaultChemObjectBuilder.getInstance();\n        IAtomContainer mol = builder.newInstance(IAtomContainer.class);\n        IAtom a1 = builder.newInstance(IAtom.class, \"F\");\n        a1.setFormalCharge(0);\n        a1.setPoint3d(new Point3d(7.0124, 2.5853, -0.9016));\n        mol.addAtom(a1);\n        IAtom a2 = builder.newInstance(IAtom.class, \"O\");\n        a2.setFormalCharge(0);\n        a2.setPoint3d(new Point3d(-0.5682, -0.2861, 2.1733));\n        mol.addAtom(a2);\n        IAtom a3 = builder.newInstance(IAtom.class, \"O\");\n        a3.setFormalCharge(0);\n        a3.setPoint3d(new Point3d(2.2826, -2.9598, -0.5754));\n        mol.addAtom(a3);\n        IAtom a4 = builder.newInstance(IAtom.class, \"O\");\n        a4.setFormalCharge(0);\n        a4.setPoint3d(new Point3d(-6.6808, -1.9515, 0.4596));\n        mol.addAtom(a4);\n        IAtom a5 = builder.newInstance(IAtom.class, \"O\");\n        a5.setFormalCharge(0);\n        a5.setPoint3d(new Point3d(4.2201, -1.7701, -1.7827));\n        mol.addAtom(a5);\n        IAtom a6 = builder.newInstance(IAtom.class, \"O\");\n        a6.setFormalCharge(0);\n        a6.setPoint3d(new Point3d(-7.0886, 0.761, 0.0885));\n        mol.addAtom(a6);\n        IAtom a7 = builder.newInstance(IAtom.class, \"O\");\n        a7.setFormalCharge(0);\n        a7.setPoint3d(new Point3d(-3.3025, 3.5973, -0.657));\n        mol.addAtom(a7);\n        IAtom a8 = builder.newInstance(IAtom.class, \"C\");\n        a8.setFormalCharge(0);\n        a8.setPoint3d(new Point3d(0.4862, -0.9146, 0.0574));\n        mol.addAtom(a8);\n        IAtom a9 = builder.newInstance(IAtom.class, \"C\");\n        a9.setFormalCharge(0);\n        a9.setPoint3d(new Point3d(-0.1943, 0.2177, 0.8706));\n        mol.addAtom(a9);\n        IAtom a10 = builder.newInstance(IAtom.class, \"C\");\n        a10.setFormalCharge(0);\n        a10.setPoint3d(new Point3d(1.7596, -1.1559, 0.9089));\n        mol.addAtom(a10);\n        IAtom a11 = builder.newInstance(IAtom.class, \"C\");\n        a11.setFormalCharge(0);\n        a11.setPoint3d(new Point3d(-2.4826, -0.4593, -0.073));\n        mol.addAtom(a11);\n        IAtom a12 = builder.newInstance(IAtom.class, \"C\");\n        a12.setFormalCharge(0);\n        a12.setPoint3d(new Point3d(-3.7166, 0.0102, -0.941));\n        mol.addAtom(a12);\n        IAtom a13 = builder.newInstance(IAtom.class, \"C\");\n        a13.setFormalCharge(0);\n        a13.setPoint3d(new Point3d(-0.4659, -2.1213, 0.0044));\n        mol.addAtom(a13);\n        IAtom a14 = builder.newInstance(IAtom.class, \"C\");\n        a14.setFormalCharge(0);\n        a14.setPoint3d(new Point3d(-1.485, 0.6715, 0.2231));\n        mol.addAtom(a14);\n        IAtom a15 = builder.newInstance(IAtom.class, \"C\");\n        a15.setFormalCharge(0);\n        a15.setPoint3d(new Point3d(0.9729, 1.1842, 1.122));\n        mol.addAtom(a15);\n        IAtom a16 = builder.newInstance(IAtom.class, \"C\");\n        a16.setFormalCharge(0);\n        a16.setPoint3d(new Point3d(2.1976, 0.2666, 1.3272));\n        mol.addAtom(a16);\n        IAtom a17 = builder.newInstance(IAtom.class, \"C\");\n        a17.setFormalCharge(0);\n        a17.setPoint3d(new Point3d(-1.8034, -1.7401, -0.6501));\n        mol.addAtom(a17);\n        IAtom a18 = builder.newInstance(IAtom.class, \"C\");\n        a18.setFormalCharge(0);\n        a18.setPoint3d(new Point3d(-4.2265, 1.3894, -0.4395));\n        mol.addAtom(a18);\n        IAtom a19 = builder.newInstance(IAtom.class, \"C\");\n        a19.setFormalCharge(0);\n        a19.setPoint3d(new Point3d(2.8802, -1.9484, 0.2485));\n        mol.addAtom(a19);\n        IAtom a20 = builder.newInstance(IAtom.class, \"C\");\n        a20.setFormalCharge(0);\n        a20.setPoint3d(new Point3d(0.862, -0.4809, -1.3862));\n        mol.addAtom(a20);\n        IAtom a21 = builder.newInstance(IAtom.class, \"C\");\n        a21.setFormalCharge(0);\n        a21.setPoint3d(new Point3d(-4.8907, -1.0078, -0.8633));\n        mol.addAtom(a21);\n        IAtom a22 = builder.newInstance(IAtom.class, \"C\");\n        a22.setFormalCharge(0);\n        a22.setPoint3d(new Point3d(-1.7576, 1.9697, 0.0241));\n        mol.addAtom(a22);\n        IAtom a23 = builder.newInstance(IAtom.class, \"C\");\n        a23.setFormalCharge(0);\n        a23.setPoint3d(new Point3d(-4.9064, 1.3293, 0.9405));\n        mol.addAtom(a23);\n        IAtom a24 = builder.newInstance(IAtom.class, \"C\");\n        a24.setFormalCharge(0);\n        a24.setPoint3d(new Point3d(-3.339, 0.1527, -2.4408));\n        mol.addAtom(a24);\n        IAtom a25 = builder.newInstance(IAtom.class, \"C\");\n        a25.setFormalCharge(0);\n        a25.setPoint3d(new Point3d(-3.1038, 2.4096, -0.4054));\n        mol.addAtom(a25);\n        IAtom a26 = builder.newInstance(IAtom.class, \"C\");\n        a26.setFormalCharge(0);\n        a26.setPoint3d(new Point3d(-5.5668, -1.0627, 0.5104));\n        mol.addAtom(a26);\n        IAtom a27 = builder.newInstance(IAtom.class, \"C\");\n        a27.setFormalCharge(0);\n        a27.setPoint3d(new Point3d(3.7564, -1.0338, -0.652));\n        mol.addAtom(a27);\n        IAtom a28 = builder.newInstance(IAtom.class, \"C\");\n        a28.setFormalCharge(0);\n        a28.setPoint3d(new Point3d(-6.0498, 0.3154, 0.9627));\n        mol.addAtom(a28);\n        IAtom a29 = builder.newInstance(IAtom.class, \"C\");\n        a29.setFormalCharge(0);\n        a29.setPoint3d(new Point3d(3.6914, -2.6828, 1.3258));\n        mol.addAtom(a29);\n        IAtom a30 = builder.newInstance(IAtom.class, \"C\");\n        a30.setFormalCharge(0);\n        a30.setPoint3d(new Point3d(4.9535, -0.3812, 0.0661));\n        mol.addAtom(a30);\n        IAtom a31 = builder.newInstance(IAtom.class, \"C\");\n        a31.setFormalCharge(0);\n        a31.setPoint3d(new Point3d(5.4727, 0.8461, -0.696));\n        mol.addAtom(a31);\n        IAtom a32 = builder.newInstance(IAtom.class, \"C\");\n        a32.setFormalCharge(0);\n        a32.setPoint3d(new Point3d(6.7079, 1.5265, -0.0844));\n        mol.addAtom(a32);\n        IAtom a33 = builder.newInstance(IAtom.class, \"C\");\n        a33.setFormalCharge(0);\n        a33.setPoint3d(new Point3d(6.4387, 2.104, 1.3013));\n        mol.addAtom(a33);\n        IAtom a34 = builder.newInstance(IAtom.class, \"C\");\n        a34.setFormalCharge(0);\n        a34.setPoint3d(new Point3d(7.9342, 0.6197, -0.0661));\n        mol.addAtom(a34);\n        IAtom a35 = builder.newInstance(IAtom.class, \"H\");\n        a35.setFormalCharge(0);\n        a35.setPoint3d(new Point3d(1.4474, -1.6941, 1.8161));\n        mol.addAtom(a35);\n        IAtom a36 = builder.newInstance(IAtom.class, \"H\");\n        a36.setFormalCharge(0);\n        a36.setPoint3d(new Point3d(-2.8575, -0.7521, 0.9166));\n        mol.addAtom(a36);\n        IAtom a37 = builder.newInstance(IAtom.class, \"H\");\n        a37.setFormalCharge(0);\n        a37.setPoint3d(new Point3d(-0.0529, -2.952, -0.5733));\n        mol.addAtom(a37);\n        IAtom a38 = builder.newInstance(IAtom.class, \"H\");\n        a38.setFormalCharge(0);\n        a38.setPoint3d(new Point3d(-0.6583, -2.5149, 1.01));\n        mol.addAtom(a38);\n        IAtom a39 = builder.newInstance(IAtom.class, \"H\");\n        a39.setFormalCharge(0);\n        a39.setPoint3d(new Point3d(1.1462, 1.8516, 0.2703));\n        mol.addAtom(a39);\n        IAtom a40 = builder.newInstance(IAtom.class, \"H\");\n        a40.setFormalCharge(0);\n        a40.setPoint3d(new Point3d(0.8186, 1.8095, 2.0087));\n        mol.addAtom(a40);\n        IAtom a41 = builder.newInstance(IAtom.class, \"H\");\n        a41.setFormalCharge(0);\n        a41.setPoint3d(new Point3d(2.5044, 0.2648, 2.3797));\n        mol.addAtom(a41);\n        IAtom a42 = builder.newInstance(IAtom.class, \"H\");\n        a42.setFormalCharge(0);\n        a42.setPoint3d(new Point3d(2.9822, 0.7582, 0.7671));\n        mol.addAtom(a42);\n        IAtom a43 = builder.newInstance(IAtom.class, \"H\");\n        a43.setFormalCharge(0);\n        a43.setPoint3d(new Point3d(-2.4854, -2.5906, -0.5319));\n        mol.addAtom(a43);\n        IAtom a44 = builder.newInstance(IAtom.class, \"H\");\n        a44.setFormalCharge(0);\n        a44.setPoint3d(new Point3d(-1.6353, -1.6475, -1.7261));\n        mol.addAtom(a44);\n        IAtom a45 = builder.newInstance(IAtom.class, \"H\");\n        a45.setFormalCharge(0);\n        a45.setPoint3d(new Point3d(-4.9616, 1.7691, -1.1638));\n        mol.addAtom(a45);\n        IAtom a46 = builder.newInstance(IAtom.class, \"H\");\n        a46.setFormalCharge(0);\n        a46.setPoint3d(new Point3d(-0.0354, -0.2446, -1.9684));\n        mol.addAtom(a46);\n        IAtom a47 = builder.newInstance(IAtom.class, \"H\");\n        a47.setFormalCharge(0);\n        a47.setPoint3d(new Point3d(1.3691, -1.2574, -1.9625));\n        mol.addAtom(a47);\n        IAtom a48 = builder.newInstance(IAtom.class, \"H\");\n        a48.setFormalCharge(0);\n        a48.setPoint3d(new Point3d(1.4296, 0.4511, -1.4252));\n        mol.addAtom(a48);\n        IAtom a49 = builder.newInstance(IAtom.class, \"H\");\n        a49.setFormalCharge(0);\n        a49.setPoint3d(new Point3d(-4.5596, -2.0138, -1.147));\n        mol.addAtom(a49);\n        IAtom a50 = builder.newInstance(IAtom.class, \"H\");\n        a50.setFormalCharge(0);\n        a50.setPoint3d(new Point3d(-5.6512, -0.7511, -1.6149));\n        mol.addAtom(a50);\n        IAtom a51 = builder.newInstance(IAtom.class, \"H\");\n        a51.setFormalCharge(0);\n        a51.setPoint3d(new Point3d(-1.0464, 2.7559, 0.2488));\n        mol.addAtom(a51);\n        IAtom a52 = builder.newInstance(IAtom.class, \"H\");\n        a52.setFormalCharge(0);\n        a52.setPoint3d(new Point3d(-4.1786, 1.0807, 1.7222));\n        mol.addAtom(a52);\n        IAtom a53 = builder.newInstance(IAtom.class, \"H\");\n        a53.setFormalCharge(0);\n        a53.setPoint3d(new Point3d(-5.2947, 2.3265, 1.1848));\n        mol.addAtom(a53);\n        IAtom a54 = builder.newInstance(IAtom.class, \"H\");\n        a54.setFormalCharge(0);\n        a54.setPoint3d(new Point3d(-2.421, 0.7311, -2.5838));\n        mol.addAtom(a54);\n        IAtom a55 = builder.newInstance(IAtom.class, \"H\");\n        a55.setFormalCharge(0);\n        a55.setPoint3d(new Point3d(-3.2008, -0.8224, -2.9194));\n        mol.addAtom(a55);\n        IAtom a56 = builder.newInstance(IAtom.class, \"H\");\n        a56.setFormalCharge(0);\n        a56.setPoint3d(new Point3d(-4.1353, 0.658, -3.0004));\n        mol.addAtom(a56);\n        IAtom a57 = builder.newInstance(IAtom.class, \"H\");\n        a57.setFormalCharge(0);\n        a57.setPoint3d(new Point3d(-4.8758, -1.4669, 1.2574));\n        mol.addAtom(a57);\n        IAtom a58 = builder.newInstance(IAtom.class, \"H\");\n        a58.setFormalCharge(0);\n        a58.setPoint3d(new Point3d(-0.9312, 0.4562, 2.6867));\n        mol.addAtom(a58);\n        IAtom a59 = builder.newInstance(IAtom.class, \"H\");\n        a59.setFormalCharge(0);\n        a59.setPoint3d(new Point3d(3.1882, -0.2287, -1.0977));\n        mol.addAtom(a59);\n        IAtom a60 = builder.newInstance(IAtom.class, \"H\");\n        a60.setFormalCharge(0);\n        a60.setPoint3d(new Point3d(-6.4869, 0.2469, 1.965));\n        mol.addAtom(a60);\n        IAtom a61 = builder.newInstance(IAtom.class, \"H\");\n        a61.setFormalCharge(0);\n        a61.setPoint3d(new Point3d(4.102, -2.0082, 2.0826));\n        mol.addAtom(a61);\n        IAtom a62 = builder.newInstance(IAtom.class, \"H\");\n        a62.setFormalCharge(0);\n        a62.setPoint3d(new Point3d(4.5162, -3.2434, 0.8708));\n        mol.addAtom(a62);\n        IAtom a63 = builder.newInstance(IAtom.class, \"H\");\n        a63.setFormalCharge(0);\n        a63.setPoint3d(new Point3d(3.0747, -3.4251, 1.8469));\n        mol.addAtom(a63);\n        IAtom a64 = builder.newInstance(IAtom.class, \"H\");\n        a64.setFormalCharge(0);\n        a64.setPoint3d(new Point3d(1.8961, -3.6368, 0.0058));\n        mol.addAtom(a64);\n        IAtom a65 = builder.newInstance(IAtom.class, \"H\");\n        a65.setFormalCharge(0);\n        a65.setPoint3d(new Point3d(5.7631, -1.1204, 0.1084));\n        mol.addAtom(a65);\n        IAtom a66 = builder.newInstance(IAtom.class, \"H\");\n        a66.setFormalCharge(0);\n        a66.setPoint3d(new Point3d(4.743, -0.1036, 1.1001));\n        mol.addAtom(a66);\n        IAtom a67 = builder.newInstance(IAtom.class, \"H\");\n        a67.setFormalCharge(0);\n        a67.setPoint3d(new Point3d(-6.3482, -2.8223, 0.1828));\n        mol.addAtom(a67);\n        IAtom a68 = builder.newInstance(IAtom.class, \"H\");\n        a68.setFormalCharge(0);\n        a68.setPoint3d(new Point3d(4.6594, -1.153, -2.3908));\n        mol.addAtom(a68);\n        IAtom a69 = builder.newInstance(IAtom.class, \"H\");\n        a69.setFormalCharge(0);\n        a69.setPoint3d(new Point3d(-7.3836, 1.6319, 0.4047));\n        mol.addAtom(a69);\n        IAtom a70 = builder.newInstance(IAtom.class, \"H\");\n        a70.setFormalCharge(0);\n        a70.setPoint3d(new Point3d(5.716, 0.5715, -1.7297));\n        mol.addAtom(a70);\n        IAtom a71 = builder.newInstance(IAtom.class, \"H\");\n        a71.setFormalCharge(0);\n        a71.setPoint3d(new Point3d(4.6721, 1.5926, -0.7787));\n        mol.addAtom(a71);\n        IBond b1 = builder.newInstance(IBond.class, a1, a32, IBond.Order.SINGLE);\n        mol.addBond(b1);\n        IBond b2 = builder.newInstance(IBond.class, a2, a9, IBond.Order.SINGLE);\n        mol.addBond(b2);\n        IBond b3 = builder.newInstance(IBond.class, a2, a58, IBond.Order.SINGLE);\n        mol.addBond(b3);\n        IBond b4 = builder.newInstance(IBond.class, a3, a19, IBond.Order.SINGLE);\n        mol.addBond(b4);\n        IBond b5 = builder.newInstance(IBond.class, a3, a64, IBond.Order.SINGLE);\n        mol.addBond(b5);\n        IBond b6 = builder.newInstance(IBond.class, a4, a26, IBond.Order.SINGLE);\n        mol.addBond(b6);\n        IBond b7 = builder.newInstance(IBond.class, a4, a67, IBond.Order.SINGLE);\n        mol.addBond(b7);\n        IBond b8 = builder.newInstance(IBond.class, a5, a27, IBond.Order.SINGLE);\n        mol.addBond(b8);\n        IBond b9 = builder.newInstance(IBond.class, a5, a68, IBond.Order.SINGLE);\n        mol.addBond(b9);\n        IBond b10 = builder.newInstance(IBond.class, a6, a28, IBond.Order.SINGLE);\n        mol.addBond(b10);\n        IBond b11 = builder.newInstance(IBond.class, a6, a69, IBond.Order.SINGLE);\n        mol.addBond(b11);\n        IBond b12 = builder.newInstance(IBond.class, a7, a25, IBond.Order.DOUBLE);\n        mol.addBond(b12);\n        IBond b13 = builder.newInstance(IBond.class, a8, a9, IBond.Order.SINGLE);\n        mol.addBond(b13);\n        IBond b14 = builder.newInstance(IBond.class, a8, a10, IBond.Order.SINGLE);\n        mol.addBond(b14);\n        IBond b15 = builder.newInstance(IBond.class, a8, a13, IBond.Order.SINGLE);\n        mol.addBond(b15);\n        IBond b16 = builder.newInstance(IBond.class, a8, a20, IBond.Order.SINGLE);\n        mol.addBond(b16);\n        IBond b17 = builder.newInstance(IBond.class, a9, a14, IBond.Order.SINGLE);\n        mol.addBond(b17);\n        IBond b18 = builder.newInstance(IBond.class, a9, a15, IBond.Order.SINGLE);\n        mol.addBond(b18);\n        IBond b19 = builder.newInstance(IBond.class, a10, a16, IBond.Order.SINGLE);\n        mol.addBond(b19);\n        IBond b20 = builder.newInstance(IBond.class, a10, a19, IBond.Order.SINGLE);\n        mol.addBond(b20);\n        IBond b21 = builder.newInstance(IBond.class, a10, a35, IBond.Order.SINGLE);\n        mol.addBond(b21);\n        IBond b22 = builder.newInstance(IBond.class, a11, a12, IBond.Order.SINGLE);\n        mol.addBond(b22);\n        IBond b23 = builder.newInstance(IBond.class, a11, a14, IBond.Order.SINGLE);\n        mol.addBond(b23);\n        IBond b24 = builder.newInstance(IBond.class, a11, a17, IBond.Order.SINGLE);\n        mol.addBond(b24);\n        IBond b25 = builder.newInstance(IBond.class, a11, a36, IBond.Order.SINGLE);\n        mol.addBond(b25);\n        IBond b26 = builder.newInstance(IBond.class, a12, a18, IBond.Order.SINGLE);\n        mol.addBond(b26);\n        IBond b27 = builder.newInstance(IBond.class, a12, a21, IBond.Order.SINGLE);\n        mol.addBond(b27);\n        IBond b28 = builder.newInstance(IBond.class, a12, a24, IBond.Order.SINGLE);\n        mol.addBond(b28);\n        IBond b29 = builder.newInstance(IBond.class, a13, a17, IBond.Order.SINGLE);\n        mol.addBond(b29);\n        IBond b30 = builder.newInstance(IBond.class, a13, a37, IBond.Order.SINGLE);\n        mol.addBond(b30);\n        IBond b31 = builder.newInstance(IBond.class, a13, a38, IBond.Order.SINGLE);\n        mol.addBond(b31);\n        IBond b32 = builder.newInstance(IBond.class, a14, a22, IBond.Order.DOUBLE);\n        mol.addBond(b32);\n        IBond b33 = builder.newInstance(IBond.class, a15, a16, IBond.Order.SINGLE);\n        mol.addBond(b33);\n        IBond b34 = builder.newInstance(IBond.class, a15, a39, IBond.Order.SINGLE);\n        mol.addBond(b34);\n        IBond b35 = builder.newInstance(IBond.class, a15, a40, IBond.Order.SINGLE);\n        mol.addBond(b35);\n        IBond b36 = builder.newInstance(IBond.class, a16, a41, IBond.Order.SINGLE);\n        mol.addBond(b36);\n        IBond b37 = builder.newInstance(IBond.class, a16, a42, IBond.Order.SINGLE);\n        mol.addBond(b37);\n        IBond b38 = builder.newInstance(IBond.class, a17, a43, IBond.Order.SINGLE);\n        mol.addBond(b38);\n        IBond b39 = builder.newInstance(IBond.class, a17, a44, IBond.Order.SINGLE);\n        mol.addBond(b39);\n        IBond b40 = builder.newInstance(IBond.class, a18, a23, IBond.Order.SINGLE);\n        mol.addBond(b40);\n        IBond b41 = builder.newInstance(IBond.class, a18, a25, IBond.Order.SINGLE);\n        mol.addBond(b41);\n        IBond b42 = builder.newInstance(IBond.class, a18, a45, IBond.Order.SINGLE);\n        mol.addBond(b42);\n        IBond b43 = builder.newInstance(IBond.class, a19, a27, IBond.Order.SINGLE);\n        mol.addBond(b43);\n        IBond b44 = builder.newInstance(IBond.class, a19, a29, IBond.Order.SINGLE);\n        mol.addBond(b44);\n        IBond b45 = builder.newInstance(IBond.class, a20, a46, IBond.Order.SINGLE);\n        mol.addBond(b45);\n        IBond b46 = builder.newInstance(IBond.class, a20, a47, IBond.Order.SINGLE);\n        mol.addBond(b46);\n        IBond b47 = builder.newInstance(IBond.class, a20, a48, IBond.Order.SINGLE);\n        mol.addBond(b47);\n        IBond b48 = builder.newInstance(IBond.class, a21, a26, IBond.Order.SINGLE);\n        mol.addBond(b48);\n        IBond b49 = builder.newInstance(IBond.class, a21, a49, IBond.Order.SINGLE);\n        mol.addBond(b49);\n        IBond b50 = builder.newInstance(IBond.class, a21, a50, IBond.Order.SINGLE);\n        mol.addBond(b50);\n        IBond b51 = builder.newInstance(IBond.class, a22, a25, IBond.Order.SINGLE);\n        mol.addBond(b51);\n        IBond b52 = builder.newInstance(IBond.class, a22, a51, IBond.Order.SINGLE);\n        mol.addBond(b52);\n        IBond b53 = builder.newInstance(IBond.class, a23, a28, IBond.Order.SINGLE);\n        mol.addBond(b53);\n        IBond b54 = builder.newInstance(IBond.class, a23, a52, IBond.Order.SINGLE);\n        mol.addBond(b54);\n        IBond b55 = builder.newInstance(IBond.class, a23, a53, IBond.Order.SINGLE);\n        mol.addBond(b55);\n        IBond b56 = builder.newInstance(IBond.class, a24, a54, IBond.Order.SINGLE);\n        mol.addBond(b56);\n        IBond b57 = builder.newInstance(IBond.class, a24, a55, IBond.Order.SINGLE);\n        mol.addBond(b57);\n        IBond b58 = builder.newInstance(IBond.class, a24, a56, IBond.Order.SINGLE);\n        mol.addBond(b58);\n        IBond b59 = builder.newInstance(IBond.class, a26, a28, IBond.Order.SINGLE);\n        mol.addBond(b59);\n        IBond b60 = builder.newInstance(IBond.class, a26, a57, IBond.Order.SINGLE);\n        mol.addBond(b60);\n        IBond b61 = builder.newInstance(IBond.class, a27, a30, IBond.Order.SINGLE);\n        mol.addBond(b61);\n        IBond b62 = builder.newInstance(IBond.class, a27, a59, IBond.Order.SINGLE);\n        mol.addBond(b62);\n        IBond b63 = builder.newInstance(IBond.class, a28, a60, IBond.Order.SINGLE);\n        mol.addBond(b63);\n        IBond b64 = builder.newInstance(IBond.class, a29, a61, IBond.Order.SINGLE);\n        mol.addBond(b64);\n        IBond b65 = builder.newInstance(IBond.class, a29, a62, IBond.Order.SINGLE);\n        mol.addBond(b65);\n        IBond b66 = builder.newInstance(IBond.class, a29, a63, IBond.Order.SINGLE);\n        mol.addBond(b66);\n        IBond b67 = builder.newInstance(IBond.class, a30, a31, IBond.Order.SINGLE);\n        mol.addBond(b67);\n        IBond b68 = builder.newInstance(IBond.class, a30, a65, IBond.Order.SINGLE);\n        mol.addBond(b68);\n        IBond b69 = builder.newInstance(IBond.class, a30, a66, IBond.Order.SINGLE);\n        mol.addBond(b69);\n        IBond b70 = builder.newInstance(IBond.class, a31, a32, IBond.Order.SINGLE);\n        mol.addBond(b70);\n        IBond b71 = builder.newInstance(IBond.class, a31, a70, IBond.Order.SINGLE);\n        mol.addBond(b71);\n        IBond b72 = builder.newInstance(IBond.class, a31, a71, IBond.Order.SINGLE);\n        mol.addBond(b72);\n        IBond b73 = builder.newInstance(IBond.class, a32, a33, IBond.Order.SINGLE);\n        mol.addBond(b73);\n        IBond b74 = builder.newInstance(IBond.class, a32, a34, IBond.Order.SINGLE);\n        mol.addBond(b74);\n\n        IAtom[] ligandAtoms = new IAtom[4];\n        ligandAtoms[0] = a1; // F\n        ligandAtoms[1] = a33; // Me\n        ligandAtoms[2] = a34; // Me\n        ligandAtoms[3] = a31; // rest of molecule\n        Stereo stereo = StereoTool.getStereo(ligandAtoms[0], ligandAtoms[1], ligandAtoms[2], ligandAtoms[3]);\n        ITetrahedralChirality tetraStereo = new TetrahedralChirality(a32, ligandAtoms, stereo);\n\n        Assert.assertEquals(CIP_CHIRALITY.NONE, CIPTool.getCIPChirality(mol, tetraStereo));\n    }", "signature": "void testSteroid()", "full_signature": "@Test public void testSteroid()", "class_method_signature": "CIPToolTest.testSteroid()", "testcase": true, "constructor": false, "invocations": ["getInstance", "newInstance", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "setFormalCharge", "setPoint3d", "addAtom", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "newInstance", "addBond", "getStereo", "assertEquals", "getCIPChirality"]}, "focal_class": {"identifier": "CIPTool", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int      HYDROGEN = -1;", "modifier": "public static final", "type": "int", "declarator": "HYDROGEN = -1", "var_name": "HYDROGEN"}, {"original_string": "private static CIPLigandRule cipRule  = new CIPLigandRule();", "modifier": "private static", "type": "CIPLigandRule", "declarator": "cipRule  = new CIPLigandRule()", "var_name": "cipRule"}], "methods": [{"identifier": "getCIPChirality", "parameters": "(LigancyFourChirality stereoCenter)", "modifiers": "public static", "return": "CIP_CHIRALITY", "signature": "CIP_CHIRALITY getCIPChirality(LigancyFourChirality stereoCenter)", "full_signature": "public static CIP_CHIRALITY getCIPChirality(LigancyFourChirality stereoCenter)", "class_method_signature": "CIPTool.getCIPChirality(LigancyFourChirality stereoCenter)", "testcase": false, "constructor": false}, {"identifier": "label", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "void", "signature": "void label(IAtomContainer container)", "full_signature": "public static void label(IAtomContainer container)", "class_method_signature": "CIPTool.label(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "getCIPChirality", "parameters": "(IAtomContainer container, ITetrahedralChirality stereoCenter)", "modifiers": "public static", "return": "CIP_CHIRALITY", "signature": "CIP_CHIRALITY getCIPChirality(IAtomContainer container, ITetrahedralChirality stereoCenter)", "full_signature": "public static CIP_CHIRALITY getCIPChirality(IAtomContainer container, ITetrahedralChirality stereoCenter)", "class_method_signature": "CIPTool.getCIPChirality(IAtomContainer container, ITetrahedralChirality stereoCenter)", "testcase": false, "constructor": false}, {"identifier": "getCIPChirality", "parameters": "(IAtomContainer container, IDoubleBondStereochemistry stereoCenter)", "modifiers": "public static", "return": "CIP_CHIRALITY", "signature": "CIP_CHIRALITY getCIPChirality(IAtomContainer container, IDoubleBondStereochemistry stereoCenter)", "full_signature": "public static CIP_CHIRALITY getCIPChirality(IAtomContainer container, IDoubleBondStereochemistry stereoCenter)", "class_method_signature": "CIPTool.getCIPChirality(IAtomContainer container, IDoubleBondStereochemistry stereoCenter)", "testcase": false, "constructor": false}, {"identifier": "getLigands", "parameters": "(IAtom atom, IAtomContainer container, IAtom exclude)", "modifiers": "private static", "return": "ILigand[]", "signature": "ILigand[] getLigands(IAtom atom, IAtomContainer container, IAtom exclude)", "full_signature": "private static ILigand[] getLigands(IAtom atom, IAtomContainer container, IAtom exclude)", "class_method_signature": "CIPTool.getLigands(IAtom atom, IAtomContainer container, IAtom exclude)", "testcase": false, "constructor": false}, {"identifier": "checkIfAllLigandsAreDifferent", "parameters": "(ILigand[] ligands)", "modifiers": "public static", "return": "boolean", "signature": "boolean checkIfAllLigandsAreDifferent(ILigand[] ligands)", "full_signature": "public static boolean checkIfAllLigandsAreDifferent(ILigand[] ligands)", "class_method_signature": "CIPTool.checkIfAllLigandsAreDifferent(ILigand[] ligands)", "testcase": false, "constructor": false}, {"identifier": "order", "parameters": "(ILigand[] ligands)", "modifiers": "public static", "return": "ILigand[]", "signature": "ILigand[] order(ILigand[] ligands)", "full_signature": "public static ILigand[] order(ILigand[] ligands)", "class_method_signature": "CIPTool.order(ILigand[] ligands)", "testcase": false, "constructor": false}, {"identifier": "permParity", "parameters": "(final ILigand[] ligands)", "modifiers": "private static", "return": "int", "signature": "int permParity(final ILigand[] ligands)", "full_signature": "private static int permParity(final ILigand[] ligands)", "class_method_signature": "CIPTool.permParity(final ILigand[] ligands)", "testcase": false, "constructor": false}, {"identifier": "defineLigancyFourChirality", "parameters": "(IAtomContainer container, int chiralAtom,\n            int ligand1, int ligand2, int ligand3, int ligand4, Stereo stereo)", "modifiers": "public static", "return": "LigancyFourChirality", "signature": "LigancyFourChirality defineLigancyFourChirality(IAtomContainer container, int chiralAtom,\n            int ligand1, int ligand2, int ligand3, int ligand4, Stereo stereo)", "full_signature": "public static LigancyFourChirality defineLigancyFourChirality(IAtomContainer container, int chiralAtom,\n            int ligand1, int ligand2, int ligand3, int ligand4, Stereo stereo)", "class_method_signature": "CIPTool.defineLigancyFourChirality(IAtomContainer container, int chiralAtom,\n            int ligand1, int ligand2, int ligand3, int ligand4, Stereo stereo)", "testcase": false, "constructor": false}, {"identifier": "defineLigand", "parameters": "(IAtomContainer container, VisitedAtoms visitedAtoms, int chiralAtom,\n            int ligandAtom)", "modifiers": "public static", "return": "ILigand", "signature": "ILigand defineLigand(IAtomContainer container, VisitedAtoms visitedAtoms, int chiralAtom,\n            int ligandAtom)", "full_signature": "public static ILigand defineLigand(IAtomContainer container, VisitedAtoms visitedAtoms, int chiralAtom,\n            int ligandAtom)", "class_method_signature": "CIPTool.defineLigand(IAtomContainer container, VisitedAtoms visitedAtoms, int chiralAtom,\n            int ligandAtom)", "testcase": false, "constructor": false}, {"identifier": "getLigandLigands", "parameters": "(ILigand ligand)", "modifiers": "public static", "return": "ILigand[]", "signature": "ILigand[] getLigandLigands(ILigand ligand)", "full_signature": "public static ILigand[] getLigandLigands(ILigand ligand)", "class_method_signature": "CIPTool.getLigandLigands(ILigand ligand)", "testcase": false, "constructor": false}, {"identifier": "getDuplication", "parameters": "(Order order)", "modifiers": "private static", "return": "int", "signature": "int getDuplication(Order order)", "full_signature": "private static int getDuplication(Order order)", "class_method_signature": "CIPTool.getDuplication(Order order)", "testcase": false, "constructor": false}], "file": "descriptor/cip/src/main/java/org/openscience/cdk/geometry/cip/CIPTool.java"}, "focal_method": {"identifier": "getCIPChirality", "parameters": "(LigancyFourChirality stereoCenter)", "modifiers": "public static", "return": "CIP_CHIRALITY", "body": "public static CIP_CHIRALITY getCIPChirality(LigancyFourChirality stereoCenter) {\n        ILigand[] ligands = order(stereoCenter.getLigands());\n        LigancyFourChirality rsChirality = stereoCenter.project(ligands);\n\n        boolean allAreDifferent = checkIfAllLigandsAreDifferent(ligands);\n        if (!allAreDifferent) return CIP_CHIRALITY.NONE;\n\n        if (rsChirality.getStereo() == Stereo.CLOCKWISE) return CIP_CHIRALITY.R;\n\n        return CIP_CHIRALITY.S;\n    }", "signature": "CIP_CHIRALITY getCIPChirality(LigancyFourChirality stereoCenter)", "full_signature": "public static CIP_CHIRALITY getCIPChirality(LigancyFourChirality stereoCenter)", "class_method_signature": "CIPTool.getCIPChirality(LigancyFourChirality stereoCenter)", "testcase": false, "constructor": false, "invocations": ["order", "getLigands", "project", "checkIfAllLigandsAreDifferent", "getStereo"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}