{"test_class": {"identifier": "TestFoundationPile", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Card ACE_CLUBS = Card.get(Rank.ACE, Suit.CLUBS);", "modifier": "private static final", "type": "Card", "declarator": "ACE_CLUBS = Card.get(Rank.ACE, Suit.CLUBS)", "var_name": "ACE_CLUBS"}, {"original_string": "private static final Card TWO_CLUBS = Card.get(Rank.TWO, Suit.CLUBS);", "modifier": "private static final", "type": "Card", "declarator": "TWO_CLUBS = Card.get(Rank.TWO, Suit.CLUBS)", "var_name": "TWO_CLUBS"}, {"original_string": "private static final Card THREE_CLUBS = Card.get(Rank.THREE, Suit.CLUBS);", "modifier": "private static final", "type": "Card", "declarator": "THREE_CLUBS = Card.get(Rank.THREE, Suit.CLUBS)", "var_name": "THREE_CLUBS"}, {"original_string": "private FoundationPile aPile;", "modifier": "private", "type": "FoundationPile", "declarator": "aPile", "var_name": "aPile"}], "file": "chapter-code/chapter5/TestFoundationPile.java"}, "test_case": {"identifier": "testCanMoveTo_Empty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCanMoveTo_Empty()\n\t{\n\t\tassertTrue(aPile.canMoveTo(ACE_CLUBS));\n\t\tassertFalse(aPile.canMoveTo(THREE_CLUBS));\n\t}", "signature": "void testCanMoveTo_Empty()", "full_signature": "@Test public void testCanMoveTo_Empty()", "class_method_signature": "TestFoundationPile.testCanMoveTo_Empty()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "canMoveTo", "assertFalse", "canMoveTo"]}, "focal_class": {"identifier": "FoundationPile", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<Card> aPile = new ArrayList<>();", "modifier": "private", "type": "List<Card>", "declarator": "aPile = new ArrayList<>()", "var_name": "aPile"}], "methods": [{"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "FoundationPile.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "peek", "parameters": "()", "modifiers": "public", "return": "Card", "signature": "Card peek()", "full_signature": "public Card peek()", "class_method_signature": "FoundationPile.peek()", "testcase": false, "constructor": false}, {"identifier": "pop", "parameters": "()", "modifiers": "public", "return": "Card", "signature": "Card pop()", "full_signature": "public Card pop()", "class_method_signature": "FoundationPile.pop()", "testcase": false, "constructor": false}, {"identifier": "push", "parameters": "(Card pCard)", "modifiers": "public", "return": "void", "signature": "void push(Card pCard)", "full_signature": "public void push(Card pCard)", "class_method_signature": "FoundationPile.push(Card pCard)", "testcase": false, "constructor": false}, {"identifier": "canMoveTo", "parameters": "(Card pCard)", "modifiers": "public", "return": "boolean", "signature": "boolean canMoveTo(Card pCard)", "full_signature": "public boolean canMoveTo(Card pCard)", "class_method_signature": "FoundationPile.canMoveTo(Card pCard)", "testcase": false, "constructor": false}], "file": "chapter-code/chapter5/FoundationPile.java"}, "focal_method": {"identifier": "canMoveTo", "parameters": "(Card pCard)", "modifiers": "public", "return": "boolean", "body": "public boolean canMoveTo(Card pCard)\n\t{\n\t\tassert pCard != null;\n\t\tif( isEmpty() )\n\t\t{\n\t\t\treturn pCard.getRank() == Rank.ACE;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn pCard.getSuit() == peek().getSuit() &&\n\t\t\t\t\tpCard.getRank().ordinal() ==\n\t\t\t\t\tpeek().getRank().ordinal()+1;\n\t\t}\n\t}", "signature": "boolean canMoveTo(Card pCard)", "full_signature": "public boolean canMoveTo(Card pCard)", "class_method_signature": "FoundationPile.canMoveTo(Card pCard)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "getRank", "getSuit", "getSuit", "peek", "ordinal", "getRank", "ordinal", "getRank", "peek"]}, "repository": {"repo_id": 173782146, "url": "https://github.com/prmr/DesignBook", "language": "Java", "is_fork": false, "fork_count": 48, "stargazer_count": 45, "size": 634, "license": "licensed"}}