{"test_class": {"identifier": "RestUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "org.eclipse.winery.repository.rest/src/test/java/org/eclipse/winery/repository/rest/RestUtilsTest.java"}, "test_case": {"identifier": "testCreateID", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateID() {\n        assertEquals(\"Frank-s-test\", RestUtils.createXMLid(\"Frank's test\").getDecoded());\n        assertEquals(\"MyNodeType\", RestUtils.createXMLid(\"MyNodeType\").getDecoded());\n        assertEquals(\"A-Node-Type\", RestUtils.createXMLid(\"A Node Type\").getDecoded());\n    }", "signature": "void testCreateID()", "full_signature": "@Test public void testCreateID()", "class_method_signature": "RestUtilsTest.testCreateID()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getDecoded", "createXMLid", "assertEquals", "getDecoded", "createXMLid", "assertEquals", "getDecoded", "createXMLid"]}, "focal_class": {"identifier": "RestUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(RestUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(RestUtils.class)", "var_name": "LOGGER"}, {"original_string": "private static final String RANGE_NCNAMESTARTCHAR = \"A-Z_a-z\\\\u00C0\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02ff\\\\u0370-\\\\u037d\" + \"\\\\u037f-\\\\u1fff\\\\u200c\\\\u200d\\\\u2070-\\\\u218f\\\\u2c00-\\\\u2fef\\\\u3001-\\\\ud7ff\" + \"\\\\uf900-\\\\ufdcf\\\\ufdf0-\\\\ufffd\\\\x10000-\\\\xEFFFF\";", "modifier": "private static final", "type": "String", "declarator": "RANGE_NCNAMESTARTCHAR = \"A-Z_a-z\\\\u00C0\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02ff\\\\u0370-\\\\u037d\" + \"\\\\u037f-\\\\u1fff\\\\u200c\\\\u200d\\\\u2070-\\\\u218f\\\\u2c00-\\\\u2fef\\\\u3001-\\\\ud7ff\" + \"\\\\uf900-\\\\ufdcf\\\\ufdf0-\\\\ufffd\\\\x10000-\\\\xEFFFF\"", "var_name": "RANGE_NCNAMESTARTCHAR"}, {"original_string": "private static final String REGEX_NCNAMESTARTCHAR = \"[\" + RestUtils.RANGE_NCNAMESTARTCHAR + \"]\";", "modifier": "private static final", "type": "String", "declarator": "REGEX_NCNAMESTARTCHAR = \"[\" + RestUtils.RANGE_NCNAMESTARTCHAR + \"]\"", "var_name": "REGEX_NCNAMESTARTCHAR"}, {"original_string": "private static final String RANGE_NCNAMECHAR = RestUtils.RANGE_NCNAMESTARTCHAR + \"\\\\-\\\\.0-9\\\\u00b7\\\\u0300-\\\\u036f\\\\u203f-\\\\u2040\";", "modifier": "private static final", "type": "String", "declarator": "RANGE_NCNAMECHAR = RestUtils.RANGE_NCNAMESTARTCHAR + \"\\\\-\\\\.0-9\\\\u00b7\\\\u0300-\\\\u036f\\\\u203f-\\\\u2040\"", "var_name": "RANGE_NCNAMECHAR"}, {"original_string": "private static final String REGEX_INVALIDNCNAMESCHAR = \"[^\" + RestUtils.RANGE_NCNAMECHAR + \"]\";", "modifier": "private static final", "type": "String", "declarator": "REGEX_INVALIDNCNAMESCHAR = \"[^\" + RestUtils.RANGE_NCNAMECHAR + \"]\"", "var_name": "REGEX_INVALIDNCNAMESCHAR"}], "methods": [{"identifier": "createXMLid", "parameters": "(String name)", "modifiers": "public static", "return": "XmlId", "signature": "XmlId createXMLid(String name)", "full_signature": "public static XmlId createXMLid(String name)", "class_method_signature": "RestUtils.createXMLid(String name)", "testcase": false, "constructor": false}, {"identifier": "createXmlIdAsString", "parameters": "(String name)", "modifiers": "public static", "return": "String", "signature": "String createXmlIdAsString(String name)", "full_signature": "public static String createXmlIdAsString(String name)", "class_method_signature": "RestUtils.createXmlIdAsString(String name)", "testcase": false, "constructor": false}, {"identifier": "getDefinitionsOfSelectedResource", "parameters": "(final AbstractComponentInstanceResource resource, final URI uri)", "modifiers": "public static", "return": "Response", "signature": "Response getDefinitionsOfSelectedResource(final AbstractComponentInstanceResource resource, final URI uri)", "full_signature": "public static Response getDefinitionsOfSelectedResource(final AbstractComponentInstanceResource resource, final URI uri)", "class_method_signature": "RestUtils.getDefinitionsOfSelectedResource(final AbstractComponentInstanceResource resource, final URI uri)", "testcase": false, "constructor": false}, {"identifier": "getCsarOfSelectedResource", "parameters": "(final AbstractComponentInstanceResource resource, CsarExportOptions options)", "modifiers": "public static", "return": "Response", "signature": "Response getCsarOfSelectedResource(final AbstractComponentInstanceResource resource, CsarExportOptions options)", "full_signature": "public static Response getCsarOfSelectedResource(final AbstractComponentInstanceResource resource, CsarExportOptions options)", "class_method_signature": "RestUtils.getCsarOfSelectedResource(final AbstractComponentInstanceResource resource, CsarExportOptions options)", "testcase": false, "constructor": false}, {"identifier": "getYamlOfSelectedResource", "parameters": "(DefinitionsChildId id)", "modifiers": "public static", "return": "Response", "signature": "Response getYamlOfSelectedResource(DefinitionsChildId id)", "full_signature": "public static Response getYamlOfSelectedResource(DefinitionsChildId id)", "class_method_signature": "RestUtils.getYamlOfSelectedResource(DefinitionsChildId id)", "testcase": false, "constructor": false}, {"identifier": "getYamlCSARofSelectedResource", "parameters": "(final AbstractComponentInstanceResource resource)", "modifiers": "public static", "return": "Response", "signature": "Response getYamlCSARofSelectedResource(final AbstractComponentInstanceResource resource)", "full_signature": "public static Response getYamlCSARofSelectedResource(final AbstractComponentInstanceResource resource)", "class_method_signature": "RestUtils.getYamlCSARofSelectedResource(final AbstractComponentInstanceResource resource)", "testcase": false, "constructor": false}, {"identifier": "getEdmmModel", "parameters": "(TServiceTemplate element, boolean useAbsolutPaths)", "modifiers": "public static", "return": "Response", "signature": "Response getEdmmModel(TServiceTemplate element, boolean useAbsolutPaths)", "full_signature": "public static Response getEdmmModel(TServiceTemplate element, boolean useAbsolutPaths)", "class_method_signature": "RestUtils.getEdmmModel(TServiceTemplate element, boolean useAbsolutPaths)", "testcase": false, "constructor": false}, {"identifier": "getZippedContents", "parameters": "(final GenericId id)", "modifiers": "public static", "return": "Response", "signature": "Response getZippedContents(final GenericId id)", "full_signature": "public static Response getZippedContents(final GenericId id)", "class_method_signature": "RestUtils.getZippedContents(final GenericId id)", "testcase": false, "constructor": false}, {"identifier": "getZippedContents", "parameters": "(final GenericId id, String name)", "modifiers": "public static", "return": "Response", "signature": "Response getZippedContents(final GenericId id, String name)", "full_signature": "public static Response getZippedContents(final GenericId id, String name)", "class_method_signature": "RestUtils.getZippedContents(final GenericId id, String name)", "testcase": false, "constructor": false}, {"identifier": "getTypeForComponentContainer", "parameters": "(Class<? extends AbstractComponentsResource> containerClass)", "modifiers": "public static", "return": "String", "signature": "String getTypeForComponentContainer(Class<? extends AbstractComponentsResource> containerClass)", "full_signature": "public static String getTypeForComponentContainer(Class<? extends AbstractComponentsResource> containerClass)", "class_method_signature": "RestUtils.getTypeForComponentContainer(Class<? extends AbstractComponentsResource> containerClass)", "testcase": false, "constructor": false}, {"identifier": "getComponentIdClassForComponentContainer", "parameters": "(Class<? extends AbstractComponentsResource> containerClass)", "modifiers": "public static", "return": "Class<? extends DefinitionsChildId>", "signature": "Class<? extends DefinitionsChildId> getComponentIdClassForComponentContainer(Class<? extends AbstractComponentsResource> containerClass)", "full_signature": "public static Class<? extends DefinitionsChildId> getComponentIdClassForComponentContainer(Class<? extends AbstractComponentsResource> containerClass)", "class_method_signature": "RestUtils.getComponentIdClassForComponentContainer(Class<? extends AbstractComponentsResource> containerClass)", "testcase": false, "constructor": false}, {"identifier": "getAbsoluteURL", "parameters": "(GenericId id)", "modifiers": "public static", "return": "String", "signature": "String getAbsoluteURL(GenericId id)", "full_signature": "public static String getAbsoluteURL(GenericId id)", "class_method_signature": "RestUtils.getAbsoluteURL(GenericId id)", "testcase": false, "constructor": false}, {"identifier": "getAbsoluteURL", "parameters": "(RepositoryFileReference ref)", "modifiers": "public static", "return": "String", "signature": "String getAbsoluteURL(RepositoryFileReference ref)", "full_signature": "public static String getAbsoluteURL(RepositoryFileReference ref)", "class_method_signature": "RestUtils.getAbsoluteURL(RepositoryFileReference ref)", "testcase": false, "constructor": false}, {"identifier": "getAbsoluteURI", "parameters": "(GenericId id)", "modifiers": "public static", "return": "URI", "signature": "URI getAbsoluteURI(GenericId id)", "full_signature": "public static URI getAbsoluteURI(GenericId id)", "class_method_signature": "RestUtils.getAbsoluteURI(GenericId id)", "testcase": false, "constructor": false}, {"identifier": "getIntermediateLocationStringForType", "parameters": "(String type, String separator)", "modifiers": "public static", "return": "String", "signature": "String getIntermediateLocationStringForType(String type, String separator)", "full_signature": "public static String getIntermediateLocationStringForType(String type, String separator)", "class_method_signature": "RestUtils.getIntermediateLocationStringForType(String type, String separator)", "testcase": false, "constructor": false}, {"identifier": "getXML", "parameters": "(Class<T> clazz, T obj)", "modifiers": "public static", "return": "Response", "signature": "Response getXML(Class<T> clazz, T obj)", "full_signature": "public static Response getXML(Class<T> clazz, T obj)", "class_method_signature": "RestUtils.getXML(Class<T> clazz, T obj)", "testcase": false, "constructor": false}, {"identifier": "getResponseForException", "parameters": "(Exception e)", "modifiers": "public static", "return": "Response", "signature": "Response getResponseForException(Exception e)", "full_signature": "public static Response getResponseForException(Exception e)", "class_method_signature": "RestUtils.getResponseForException(Exception e)", "testcase": false, "constructor": false}, {"identifier": "isSuccessFulResponse", "parameters": "(Response res)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSuccessFulResponse(Response res)", "full_signature": "public static boolean isSuccessFulResponse(Response res)", "class_method_signature": "RestUtils.isSuccessFulResponse(Response res)", "testcase": false, "constructor": false}, {"identifier": "isResourceAvailable", "parameters": "(String path)", "modifiers": "public static", "return": "boolean", "signature": "boolean isResourceAvailable(String path)", "full_signature": "public static boolean isResourceAvailable(String path)", "class_method_signature": "RestUtils.isResourceAvailable(String path)", "testcase": false, "constructor": false}, {"identifier": "clean", "parameters": "(Set<String> set)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> clean(Set<String> set)", "full_signature": "public static Set<String> clean(Set<String> set)", "class_method_signature": "RestUtils.clean(Set<String> set)", "testcase": false, "constructor": false}, {"identifier": "cleanQNameSet", "parameters": "(Set<QName> set)", "modifiers": "public static", "return": "Set<QName>", "signature": "Set<QName> cleanQNameSet(Set<QName> set)", "full_signature": "public static Set<QName> cleanQNameSet(Set<QName> set)", "class_method_signature": "RestUtils.cleanQNameSet(Set<QName> set)", "testcase": false, "constructor": false}, {"identifier": "cloneServiceTemplate", "parameters": "(ServiceTemplateId serviceTemplate, String newName, String artifactName)", "modifiers": "public static", "return": "ServiceTemplateId", "signature": "ServiceTemplateId cloneServiceTemplate(ServiceTemplateId serviceTemplate, String newName, String artifactName)", "full_signature": "public static ServiceTemplateId cloneServiceTemplate(ServiceTemplateId serviceTemplate, String newName, String artifactName)", "class_method_signature": "RestUtils.cloneServiceTemplate(ServiceTemplateId serviceTemplate, String newName, String artifactName)", "testcase": false, "constructor": false}, {"identifier": "containsNodeType", "parameters": "(TServiceTemplate serviceTemplate, QName nodeType)", "modifiers": "public static", "return": "boolean", "signature": "boolean containsNodeType(TServiceTemplate serviceTemplate, QName nodeType)", "full_signature": "public static boolean containsNodeType(TServiceTemplate serviceTemplate, QName nodeType)", "class_method_signature": "RestUtils.containsNodeType(TServiceTemplate serviceTemplate, QName nodeType)", "testcase": false, "constructor": false}, {"identifier": "containsNodeTypes", "parameters": "(TServiceTemplate serviceTemplate, Collection<QName> nodeTypes)", "modifiers": "public static", "return": "boolean", "signature": "boolean containsNodeTypes(TServiceTemplate serviceTemplate, Collection<QName> nodeTypes)", "full_signature": "public static boolean containsNodeTypes(TServiceTemplate serviceTemplate, Collection<QName> nodeTypes)", "class_method_signature": "RestUtils.containsNodeTypes(TServiceTemplate serviceTemplate, Collection<QName> nodeTypes)", "testcase": false, "constructor": false}, {"identifier": "containsTag", "parameters": "(TServiceTemplate serviceTemplate, String tagKey)", "modifiers": "public static", "return": "boolean", "signature": "boolean containsTag(TServiceTemplate serviceTemplate, String tagKey)", "full_signature": "public static boolean containsTag(TServiceTemplate serviceTemplate, String tagKey)", "class_method_signature": "RestUtils.containsTag(TServiceTemplate serviceTemplate, String tagKey)", "testcase": false, "constructor": false}, {"identifier": "containsTag", "parameters": "(TServiceTemplate serviceTemplate, String tagKey, String tagValue)", "modifiers": "public static", "return": "boolean", "signature": "boolean containsTag(TServiceTemplate serviceTemplate, String tagKey, String tagValue)", "full_signature": "public static boolean containsTag(TServiceTemplate serviceTemplate, String tagKey, String tagValue)", "class_method_signature": "RestUtils.containsTag(TServiceTemplate serviceTemplate, String tagKey, String tagValue)", "testcase": false, "constructor": false}, {"identifier": "containsTags", "parameters": "(TServiceTemplate serviceTemplate, Collection<String> tags)", "modifiers": "public static", "return": "boolean", "signature": "boolean containsTags(TServiceTemplate serviceTemplate, Collection<String> tags)", "full_signature": "public static boolean containsTags(TServiceTemplate serviceTemplate, Collection<String> tags)", "class_method_signature": "RestUtils.containsTags(TServiceTemplate serviceTemplate, Collection<String> tags)", "testcase": false, "constructor": false}, {"identifier": "createArtifactTemplate", "parameters": "(InputStream uploadedInputStream, FormDataContentDisposition fileDetail, FormDataBodyPart body, QName artifactType, UriInfo uriInfo)", "modifiers": "public static", "return": "ArtifactTemplateId", "signature": "ArtifactTemplateId createArtifactTemplate(InputStream uploadedInputStream, FormDataContentDisposition fileDetail, FormDataBodyPart body, QName artifactType, UriInfo uriInfo)", "full_signature": "public static ArtifactTemplateId createArtifactTemplate(InputStream uploadedInputStream, FormDataContentDisposition fileDetail, FormDataBodyPart body, QName artifactType, UriInfo uriInfo)", "class_method_signature": "RestUtils.createArtifactTemplate(InputStream uploadedInputStream, FormDataContentDisposition fileDetail, FormDataBodyPart body, QName artifactType, UriInfo uriInfo)", "testcase": false, "constructor": false}, {"identifier": "getTagValue", "parameters": "(TServiceTemplate serviceTemplate, String tagKey)", "modifiers": "public static", "return": "String", "signature": "String getTagValue(TServiceTemplate serviceTemplate, String tagKey)", "full_signature": "public static String getTagValue(TServiceTemplate serviceTemplate, String tagKey)", "class_method_signature": "RestUtils.getTagValue(TServiceTemplate serviceTemplate, String tagKey)", "testcase": false, "constructor": false}, {"identifier": "hasDA", "parameters": "(ServiceTemplateId serviceTemplate, String nodeTemplateId, String deploymentArtifactId)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasDA(ServiceTemplateId serviceTemplate, String nodeTemplateId, String deploymentArtifactId)", "full_signature": "public static boolean hasDA(ServiceTemplateId serviceTemplate, String nodeTemplateId, String deploymentArtifactId)", "class_method_signature": "RestUtils.hasDA(ServiceTemplateId serviceTemplate, String nodeTemplateId, String deploymentArtifactId)", "testcase": false, "constructor": false}, {"identifier": "persist", "parameters": "(IPersistable res)", "modifiers": "public static", "return": "Response", "signature": "Response persist(IPersistable res)", "full_signature": "public static Response persist(IPersistable res)", "class_method_signature": "RestUtils.persist(IPersistable res)", "testcase": false, "constructor": false}, {"identifier": "persist", "parameters": "(Application application, RepositoryFileReference data_xml_ref, String mimeType)", "modifiers": "public static", "return": "Response", "signature": "Response persist(Application application, RepositoryFileReference data_xml_ref, String mimeType)", "full_signature": "public static Response persist(Application application, RepositoryFileReference data_xml_ref, String mimeType)", "class_method_signature": "RestUtils.persist(Application application, RepositoryFileReference data_xml_ref, String mimeType)", "testcase": false, "constructor": false}, {"identifier": "persistWithResponseBuilder", "parameters": "(IPersistable res)", "modifiers": "public static", "return": "Response.ResponseBuilder", "signature": "Response.ResponseBuilder persistWithResponseBuilder(IPersistable res)", "full_signature": "public static Response.ResponseBuilder persistWithResponseBuilder(IPersistable res)", "class_method_signature": "RestUtils.persistWithResponseBuilder(IPersistable res)", "testcase": false, "constructor": false}, {"identifier": "rename", "parameters": "(DefinitionsChildId oldId, DefinitionsChildId newId)", "modifiers": "public static", "return": "ResourceResult", "signature": "ResourceResult rename(DefinitionsChildId oldId, DefinitionsChildId newId)", "full_signature": "public static ResourceResult rename(DefinitionsChildId oldId, DefinitionsChildId newId)", "class_method_signature": "RestUtils.rename(DefinitionsChildId oldId, DefinitionsChildId newId)", "testcase": false, "constructor": false}, {"identifier": "renameAllVersionsOfOneDefinition", "parameters": "(DefinitionsChildId oldId, DefinitionsChildId newId)", "modifiers": "public static", "return": "Response", "signature": "Response renameAllVersionsOfOneDefinition(DefinitionsChildId oldId, DefinitionsChildId newId)", "full_signature": "public static Response renameAllVersionsOfOneDefinition(DefinitionsChildId oldId, DefinitionsChildId newId)", "class_method_signature": "RestUtils.renameAllVersionsOfOneDefinition(DefinitionsChildId oldId, DefinitionsChildId newId)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Class<? extends DefinitionsChildId> definitionsChildIdClazz, String namespaceStr)", "modifiers": "public static", "return": "Response", "signature": "Response delete(Class<? extends DefinitionsChildId> definitionsChildIdClazz, String namespaceStr)", "full_signature": "public static Response delete(Class<? extends DefinitionsChildId> definitionsChildIdClazz, String namespaceStr)", "class_method_signature": "RestUtils.delete(Class<? extends DefinitionsChildId> definitionsChildIdClazz, String namespaceStr)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(GenericId id)", "modifiers": "public static", "return": "Response", "signature": "Response delete(GenericId id)", "full_signature": "public static Response delete(GenericId id)", "class_method_signature": "RestUtils.delete(GenericId id)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(RepositoryFileReference ref)", "modifiers": "public static", "return": "Response", "signature": "Response delete(RepositoryFileReference ref)", "full_signature": "public static Response delete(RepositoryFileReference ref)", "class_method_signature": "RestUtils.delete(RepositoryFileReference ref)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(GenericId id, String name)", "modifiers": "public static", "return": "ResourceResult", "signature": "ResourceResult create(GenericId id, String name)", "full_signature": "public static ResourceResult create(GenericId id, String name)", "class_method_signature": "RestUtils.create(GenericId id, String name)", "testcase": false, "constructor": false}, {"identifier": "returnRepoPath", "parameters": "(RepositoryFileReference ref, String modified)", "modifiers": "public static", "return": "Response", "signature": "Response returnRepoPath(RepositoryFileReference ref, String modified)", "full_signature": "public static Response returnRepoPath(RepositoryFileReference ref, String modified)", "class_method_signature": "RestUtils.returnRepoPath(RepositoryFileReference ref, String modified)", "testcase": false, "constructor": false}, {"identifier": "returnRefAsResponseBuilder", "parameters": "(RepositoryFileReference ref, String modified)", "modifiers": "private static", "return": "Response.ResponseBuilder", "signature": "Response.ResponseBuilder returnRefAsResponseBuilder(RepositoryFileReference ref, String modified)", "full_signature": "private static Response.ResponseBuilder returnRefAsResponseBuilder(RepositoryFileReference ref, String modified)", "class_method_signature": "RestUtils.returnRefAsResponseBuilder(RepositoryFileReference ref, String modified)", "testcase": false, "constructor": false}, {"identifier": "putContentToFile", "parameters": "(RepositoryFileReference ref, String content, MediaType mediaType)", "modifiers": "public static", "return": "Response", "signature": "Response putContentToFile(RepositoryFileReference ref, String content, MediaType mediaType)", "full_signature": "public static Response putContentToFile(RepositoryFileReference ref, String content, MediaType mediaType)", "class_method_signature": "RestUtils.putContentToFile(RepositoryFileReference ref, String content, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "putContentToFile", "parameters": "(RepositoryFileReference ref, InputStream inputStream, org.apache.tika.mime.MediaType mediaType)", "modifiers": "public static", "return": "Response", "signature": "Response putContentToFile(RepositoryFileReference ref, InputStream inputStream, org.apache.tika.mime.MediaType mediaType)", "full_signature": "public static Response putContentToFile(RepositoryFileReference ref, InputStream inputStream, org.apache.tika.mime.MediaType mediaType)", "class_method_signature": "RestUtils.putContentToFile(RepositoryFileReference ref, InputStream inputStream, org.apache.tika.mime.MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "putContentToFile", "parameters": "(RepositoryFileReference ref, InputStream inputStream, MediaType mediaType)", "modifiers": "public static", "return": "Response", "signature": "Response putContentToFile(RepositoryFileReference ref, InputStream inputStream, MediaType mediaType)", "full_signature": "public static Response putContentToFile(RepositoryFileReference ref, InputStream inputStream, MediaType mediaType)", "class_method_signature": "RestUtils.putContentToFile(RepositoryFileReference ref, InputStream inputStream, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "getColor", "parameters": "(String name, QName qname, Map<QName, String> otherAttributes)", "modifiers": "public static", "return": "String", "signature": "String getColor(String name, QName qname, Map<QName, String> otherAttributes)", "full_signature": "public static String getColor(String name, QName qname, Map<QName, String> otherAttributes)", "class_method_signature": "RestUtils.getColor(String name, QName qname, Map<QName, String> otherAttributes)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "(IPersistable res)", "modifiers": "public static", "return": "QName", "signature": "QName getType(IPersistable res)", "full_signature": "public static QName getType(IPersistable res)", "class_method_signature": "RestUtils.getType(IPersistable res)", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(List<NamespaceAndDefinedLocalNames> list)", "modifiers": "public static", "return": "List<NamespaceAndDefinedLocalNamesForAngular>", "signature": "List<NamespaceAndDefinedLocalNamesForAngular> convert(List<NamespaceAndDefinedLocalNames> list)", "full_signature": "public static List<NamespaceAndDefinedLocalNamesForAngular> convert(List<NamespaceAndDefinedLocalNames> list)", "class_method_signature": "RestUtils.convert(List<NamespaceAndDefinedLocalNames> list)", "testcase": false, "constructor": false}, {"identifier": "duplicate", "parameters": "(DefinitionsChildId oldComponent, DefinitionsChildId newComponent)", "modifiers": "public static", "return": "ResourceResult", "signature": "ResourceResult duplicate(DefinitionsChildId oldComponent, DefinitionsChildId newComponent)", "full_signature": "public static ResourceResult duplicate(DefinitionsChildId oldComponent, DefinitionsChildId newComponent)", "class_method_signature": "RestUtils.duplicate(DefinitionsChildId oldComponent, DefinitionsChildId newComponent)", "testcase": false, "constructor": false}, {"identifier": "addNewVersion", "parameters": "(DefinitionsChildId oldId, DefinitionsChildId newComponent, List<QNameWithTypeApiData> componentsToUpdate)", "modifiers": "public static", "return": "Response", "signature": "Response addNewVersion(DefinitionsChildId oldId, DefinitionsChildId newComponent, List<QNameWithTypeApiData> componentsToUpdate)", "full_signature": "public static Response addNewVersion(DefinitionsChildId oldId, DefinitionsChildId newComponent, List<QNameWithTypeApiData> componentsToUpdate)", "class_method_signature": "RestUtils.addNewVersion(DefinitionsChildId oldId, DefinitionsChildId newComponent, List<QNameWithTypeApiData> componentsToUpdate)", "testcase": false, "constructor": false}, {"identifier": "releaseVersion", "parameters": "(DefinitionsChildId releasableComponent)", "modifiers": "public static", "return": "Response", "signature": "Response releaseVersion(DefinitionsChildId releasableComponent)", "full_signature": "public static Response releaseVersion(DefinitionsChildId releasableComponent)", "class_method_signature": "RestUtils.releaseVersion(DefinitionsChildId releasableComponent)", "testcase": false, "constructor": false}, {"identifier": "freezeVersion", "parameters": "(DefinitionsChildId componentToCommit)", "modifiers": "public static", "return": "ResourceResult", "signature": "ResourceResult freezeVersion(DefinitionsChildId componentToCommit)", "full_signature": "public static ResourceResult freezeVersion(DefinitionsChildId componentToCommit)", "class_method_signature": "RestUtils.freezeVersion(DefinitionsChildId componentToCommit)", "testcase": false, "constructor": false}, {"identifier": "getAllElementsReferencingGivenType", "parameters": "(Class<X> clazz, QName qNameOfTheType)", "modifiers": "public static", "return": "List<QNameApiData>", "signature": "List<QNameApiData> getAllElementsReferencingGivenType(Class<X> clazz, QName qNameOfTheType)", "full_signature": "public static List<QNameApiData> getAllElementsReferencingGivenType(Class<X> clazz, QName qNameOfTheType)", "class_method_signature": "RestUtils.getAllElementsReferencingGivenType(Class<X> clazz, QName qNameOfTheType)", "testcase": false, "constructor": false}, {"identifier": "getListOfIds", "parameters": "(Set<? extends DefinitionsChildId> allDefinitionsChildIds,\n                                                 boolean includeFullDefinitions, boolean includeVersions)", "modifiers": "public static", "return": "List<ComponentId>", "signature": "List<ComponentId> getListOfIds(Set<? extends DefinitionsChildId> allDefinitionsChildIds,\n                                                 boolean includeFullDefinitions, boolean includeVersions)", "full_signature": "public static List<ComponentId> getListOfIds(Set<? extends DefinitionsChildId> allDefinitionsChildIds,\n                                                 boolean includeFullDefinitions, boolean includeVersions)", "class_method_signature": "RestUtils.getListOfIds(Set<? extends DefinitionsChildId> allDefinitionsChildIds,\n                                                 boolean includeFullDefinitions, boolean includeVersions)", "testcase": false, "constructor": false}, {"identifier": "getFullComponentData", "parameters": "(DefinitionsChildId id)", "modifiers": "public static", "return": "Definitions", "signature": "Definitions getFullComponentData(DefinitionsChildId id)", "full_signature": "public static Definitions getFullComponentData(DefinitionsChildId id)", "class_method_signature": "RestUtils.getFullComponentData(DefinitionsChildId id)", "testcase": false, "constructor": false}], "file": "org.eclipse.winery.repository.rest/src/main/java/org/eclipse/winery/repository/rest/RestUtils.java"}, "focal_method": {"identifier": "createXMLid", "parameters": "(String name)", "modifiers": "public static", "return": "XmlId", "body": "public static XmlId createXMLid(String name) {\n        return new XmlId(RestUtils.createXmlIdAsString(name), false);\n    }", "signature": "XmlId createXMLid(String name)", "full_signature": "public static XmlId createXMLid(String name)", "class_method_signature": "RestUtils.createXMLid(String name)", "testcase": false, "constructor": false, "invocations": ["createXmlIdAsString"]}, "repository": {"repo_id": 42622157, "url": "https://github.com/eclipse/winery", "stars": 34, "created": "9/17/2015 12:31:44 AM +00:00", "updates": "2020-01-22T09:32:00+00:00", "fork": "False", "license": "licensed"}}