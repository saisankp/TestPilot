{"test_class": {"identifier": "ExecutionTest", "superclass": "", "interfaces": "", "fields": [], "file": "link-move/src/test/java/com/nhl/link/move/ExecutionTest.java"}, "test_case": {"identifier": "testCreateReport", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCreateReport() {\n\n\t\tExecution execution = new Execution(\"xsync\", Collections.singletonMap(\"a\", 5));\n\n\t\tMap<String, Object> r1 = execution.createReport();\n\t\tassertEquals(\"xsync\", r1.get(\"Task\"));\n\t\tassertEquals(5, r1.get(\"Parameter[a]\"));\n\t\tassertEquals(8, r1.size(), r1.toString());\n\t\tassertEquals(\"in progress\", r1.get(\"Status\"));\n\n\t\texecution.getStats().incrementCreated(5);\n\t\texecution.getStats().incrementDeleted(4);\n\t\texecution.getStats().incrementExtracted(55);\n\t\texecution.getStats().incrementUpdated(3);\n\n\t\texecution.close();\n\n\t\tMap<String, Object> r2 = execution.createReport();\n\t\tassertEquals(8, r2.size(), r2.toString());\n\t\tassertEquals(\"finished\", r2.get(\"Status\"));\n\t\tassertEquals(55L, r2.get(\"Extracted\"));\n\t\tassertEquals(5L, r2.get(\"Created\"));\n\t\tassertEquals(4L, r2.get(\"Deleted\"));\n\t\tassertEquals(3L, r2.get(\"Updated\"));\n\t}", "signature": "void testCreateReport()", "full_signature": "@Test public void testCreateReport()", "class_method_signature": "ExecutionTest.testCreateReport()", "testcase": true, "constructor": false, "invocations": ["singletonMap", "createReport", "assertEquals", "get", "assertEquals", "get", "assertEquals", "size", "toString", "assertEquals", "get", "incrementCreated", "getStats", "incrementDeleted", "getStats", "incrementExtracted", "getStats", "incrementUpdated", "getStats", "close", "createReport", "assertEquals", "size", "toString", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "Execution", "superclass": "", "interfaces": "implements AutoCloseable", "fields": [{"original_string": "protected String name;", "modifier": "protected", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "protected Map<String, ?> parameters;", "modifier": "protected", "type": "Map<String, ?>", "declarator": "parameters", "var_name": "parameters"}, {"original_string": "protected Map<String, Object> attributes;", "modifier": "protected", "type": "Map<String, Object>", "declarator": "attributes", "var_name": "attributes"}, {"original_string": "protected ExecutionStats stats;", "modifier": "protected", "type": "ExecutionStats", "declarator": "stats", "var_name": "stats"}], "methods": [{"identifier": "Execution", "parameters": "(String name, Map<String, ?> params)", "modifiers": "public", "return": "", "signature": " Execution(String name, Map<String, ?> params)", "full_signature": "public  Execution(String name, Map<String, ?> params)", "class_method_signature": "Execution.Execution(String name, Map<String, ?> params)", "testcase": false, "constructor": true}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "Execution.close()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Execution.toString()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Execution.getName()", "testcase": false, "constructor": false}, {"identifier": "createReport", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> createReport()", "full_signature": "public Map<String, Object> createReport()", "class_method_signature": "Execution.createReport()", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String key)", "modifiers": "public", "return": "Object", "signature": "Object getAttribute(String key)", "full_signature": "public Object getAttribute(String key)", "class_method_signature": "Execution.getAttribute(String key)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String key, Object value)", "modifiers": "public", "return": "void", "signature": "void setAttribute(String key, Object value)", "full_signature": "public void setAttribute(String key, Object value)", "class_method_signature": "Execution.setAttribute(String key, Object value)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "public", "return": "Map<String, ?>", "signature": "Map<String, ?> getParameters()", "full_signature": "public Map<String, ?> getParameters()", "class_method_signature": "Execution.getParameters()", "testcase": false, "constructor": false}, {"identifier": "getStats", "parameters": "()", "modifiers": "public", "return": "ExecutionStats", "signature": "ExecutionStats getStats()", "full_signature": "public ExecutionStats getStats()", "class_method_signature": "Execution.getStats()", "testcase": false, "constructor": false}], "file": "link-move/src/main/java/com/nhl/link/move/Execution.java"}, "focal_method": {"identifier": "createReport", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "body": "public Map<String, Object> createReport() {\n\n        // let's keep order of insertion consistent so that the report is easily\n        // printable\n        Map<String, Object> report = new LinkedHashMap<>();\n\n        if (name != null) {\n            report.put(\"Task\", name);\n        }\n\n        for (Entry<String, ?> p : parameters.entrySet()) {\n            report.put(\"Parameter[\" + p.getKey() + \"]\", p.getValue());\n        }\n\n        DateFormat format = new SimpleDateFormat(\"YYYY-MM-dd HH:mm:ss\");\n\n        if (stats.isStopped()) {\n            report.put(\"Status\", \"finished\");\n            report.put(\"Duration\", stats.getDuration());\n        } else {\n            report.put(\"Status\", \"in progress\");\n            report.put(\"Started on \", format.format(new Date(stats.getStarted())));\n        }\n\n        report.put(\"Extracted\", stats.getExtracted());\n        report.put(\"Created\", stats.getCreated());\n        report.put(\"Updated\", stats.getUpdated());\n        report.put(\"Deleted\", stats.getDeleted());\n\n        return report;\n    }", "signature": "Map<String, Object> createReport()", "full_signature": "public Map<String, Object> createReport()", "class_method_signature": "Execution.createReport()", "testcase": false, "constructor": false, "invocations": ["put", "entrySet", "put", "getKey", "getValue", "isStopped", "put", "put", "getDuration", "put", "put", "format", "getStarted", "put", "getExtracted", "put", "getCreated", "put", "getUpdated", "put", "getDeleted"]}, "repository": {"repo_id": 22876447, "url": "https://github.com/nhl/link-move", "stars": 25, "created": "8/12/2014 12:27:10 PM +00:00", "updates": "2019-12-01T17:30:35+00:00", "fork": "False", "license": "licensed"}}