{"test_class": {"identifier": "DefaultUserAuthServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String USER_ID = \"user\";", "modifier": "private final", "type": "String", "declarator": "USER_ID = \"user\"", "var_name": "USER_ID"}, {"original_string": "@Mock\n    private UserService userServiceMock;", "modifier": "@Mock\n    private", "type": "UserService", "declarator": "userServiceMock", "var_name": "userServiceMock"}, {"original_string": "@Mock\n    private AuthenticationInfoRetriever retrieverMock;", "modifier": "@Mock\n    private", "type": "AuthenticationInfoRetriever", "declarator": "retrieverMock", "var_name": "retrieverMock"}, {"original_string": "@Mock\n    private User userMock;", "modifier": "@Mock\n    private", "type": "User", "declarator": "userMock", "var_name": "userMock"}, {"original_string": "@Mock\n    private User otherUserMock;", "modifier": "@Mock\n    private", "type": "User", "declarator": "otherUserMock", "var_name": "otherUserMock"}, {"original_string": "private DefaultUserAuthService userAuthService;", "modifier": "private", "type": "DefaultUserAuthService", "declarator": "userAuthService", "var_name": "userAuthService"}], "file": "backend/project-board/src/test/java/de/adesso/projectboard/base/user/service/DefaultUserAuthServiceTest.java"}, "test_case": {"identifier": "getAuthenticatedUserIdReturnsIdOfAuthenticatedUser", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getAuthenticatedUserIdReturnsIdOfAuthenticatedUser() {\n        // given\n        given(retrieverMock.getUserId()).willReturn(USER_ID);\n\n        // when\n        var actualId = userAuthService.getAuthenticatedUserId();\n\n        // then\n        assertThat(actualId).isEqualTo(USER_ID);\n    }", "signature": "void getAuthenticatedUserIdReturnsIdOfAuthenticatedUser()", "full_signature": "@Test public void getAuthenticatedUserIdReturnsIdOfAuthenticatedUser()", "class_method_signature": "DefaultUserAuthServiceTest.getAuthenticatedUserIdReturnsIdOfAuthenticatedUser()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getUserId", "getAuthenticatedUserId", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "DefaultUserAuthService", "superclass": "", "interfaces": "implements UserAuthService", "fields": [{"original_string": "private final UserService userService;", "modifier": "private final", "type": "UserService", "declarator": "userService", "var_name": "userService"}, {"original_string": "private final AuthenticationInfoRetriever retriever;", "modifier": "private final", "type": "AuthenticationInfoRetriever", "declarator": "retriever", "var_name": "retriever"}], "methods": [{"identifier": "DefaultUserAuthService", "parameters": "(UserService userService, AuthenticationInfoRetriever retriever)", "modifiers": "public", "return": "", "signature": " DefaultUserAuthService(UserService userService, AuthenticationInfoRetriever retriever)", "full_signature": "public  DefaultUserAuthService(UserService userService, AuthenticationInfoRetriever retriever)", "class_method_signature": "DefaultUserAuthService.DefaultUserAuthService(UserService userService, AuthenticationInfoRetriever retriever)", "testcase": false, "constructor": true}, {"identifier": "getAuthenticatedUser", "parameters": "()", "modifiers": "@Override public", "return": "User", "signature": "User getAuthenticatedUser()", "full_signature": "@Override public User getAuthenticatedUser()", "class_method_signature": "DefaultUserAuthService.getAuthenticatedUser()", "testcase": false, "constructor": false}, {"identifier": "getAuthenticatedUserId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAuthenticatedUserId()", "full_signature": "@Override public String getAuthenticatedUserId()", "class_method_signature": "DefaultUserAuthService.getAuthenticatedUserId()", "testcase": false, "constructor": false}, {"identifier": "authenticatedUserIsAdmin", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean authenticatedUserIsAdmin()", "full_signature": "@Override public boolean authenticatedUserIsAdmin()", "class_method_signature": "DefaultUserAuthService.authenticatedUserIsAdmin()", "testcase": false, "constructor": false}, {"identifier": "userIsEffectivelyAManager", "parameters": "(User user)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean userIsEffectivelyAManager(User user)", "full_signature": "@Override public boolean userIsEffectivelyAManager(User user)", "class_method_signature": "DefaultUserAuthService.userIsEffectivelyAManager(User user)", "testcase": false, "constructor": false}], "file": "backend/project-board/src/main/java/de/adesso/projectboard/base/user/service/DefaultUserAuthService.java"}, "focal_method": {"identifier": "getAuthenticatedUserId", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getAuthenticatedUserId() {\n        return retriever.getUserId();\n    }", "signature": "String getAuthenticatedUserId()", "full_signature": "@Override public String getAuthenticatedUserId()", "class_method_signature": "DefaultUserAuthService.getAuthenticatedUserId()", "testcase": false, "constructor": false, "invocations": ["getUserId"]}, "repository": {"repo_id": 144251992, "url": "https://github.com/adessoAG/project-board", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 2608, "license": "licensed"}}