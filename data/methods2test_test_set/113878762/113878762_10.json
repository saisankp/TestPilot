{"test_class": {"identifier": "VolumeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final int beyondInc = (int) (1e7);", "modifier": "final", "type": "int", "declarator": "beyondInc = (int) (1e7)", "var_name": "beyondInc"}, {"original_string": "Volume b = getVolume();", "modifier": "", "type": "Volume", "declarator": "b = getVolume()", "var_name": "b"}], "file": "migration/third-party/org.mapdb/src/test/java/org/mapdb/VolumeTest.java"}, "test_case": {"identifier": "testPutUnsignedByte", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPutUnsignedByte() throws Exception {\n        b.putUnsignedByte(1000, (byte) 11);\n        assertEquals(11, b.getUnsignedByte(1000));\n        b.putUnsignedByte(1000, (byte) 126);\n        assertEquals(126, b.getUnsignedByte(1000));\n        b.putUnsignedByte(1000, (byte) 130);\n        assertEquals(130, b.getUnsignedByte(1000));\n        b.putUnsignedByte(1000, (byte) 255);\n        assertEquals(255, b.getUnsignedByte(1000));\n        b.putUnsignedByte(1000, (byte) 0);\n        assertEquals(0, b.getUnsignedByte(1000));\n    }", "signature": "void testPutUnsignedByte()", "full_signature": "@Test public void testPutUnsignedByte()", "class_method_signature": "VolumeTest.testPutUnsignedByte()", "testcase": true, "constructor": false, "invocations": ["putUnsignedByte", "assertEquals", "getUnsignedByte", "putUnsignedByte", "assertEquals", "getUnsignedByte", "putUnsignedByte", "assertEquals", "getUnsignedByte", "putUnsignedByte", "assertEquals", "getUnsignedByte", "putUnsignedByte", "assertEquals", "getUnsignedByte"]}, "focal_class": {"identifier": "Volume", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int BUF_SIZE = 1<<30;", "modifier": "public static final", "type": "int", "declarator": "BUF_SIZE = 1<<30", "var_name": "BUF_SIZE"}, {"original_string": "public static final int INITIAL_SIZE = 1024*32;", "modifier": "public static final", "type": "int", "declarator": "INITIAL_SIZE = 1024*32", "var_name": "INITIAL_SIZE"}], "methods": [{"identifier": "ensureAvailable", "parameters": "(final long offset)", "modifiers": "abstract public", "return": "void", "signature": "void ensureAvailable(final long offset)", "full_signature": "abstract public void ensureAvailable(final long offset)", "class_method_signature": "Volume.ensureAvailable(final long offset)", "testcase": false, "constructor": false}, {"identifier": "putLong", "parameters": "(final long offset, final long value)", "modifiers": "abstract public", "return": "void", "signature": "void putLong(final long offset, final long value)", "full_signature": "abstract public void putLong(final long offset, final long value)", "class_method_signature": "Volume.putLong(final long offset, final long value)", "testcase": false, "constructor": false}, {"identifier": "putInt", "parameters": "(long offset, int value)", "modifiers": "abstract public", "return": "void", "signature": "void putInt(long offset, int value)", "full_signature": "abstract public void putInt(long offset, int value)", "class_method_signature": "Volume.putInt(long offset, int value)", "testcase": false, "constructor": false}, {"identifier": "putByte", "parameters": "(final long offset, final byte value)", "modifiers": "abstract public", "return": "void", "signature": "void putByte(final long offset, final byte value)", "full_signature": "abstract public void putByte(final long offset, final byte value)", "class_method_signature": "Volume.putByte(final long offset, final byte value)", "testcase": false, "constructor": false}, {"identifier": "putData", "parameters": "(final long offset, final byte[] value, int size)", "modifiers": "abstract public", "return": "void", "signature": "void putData(final long offset, final byte[] value, int size)", "full_signature": "abstract public void putData(final long offset, final byte[] value, int size)", "class_method_signature": "Volume.putData(final long offset, final byte[] value, int size)", "testcase": false, "constructor": false}, {"identifier": "putData", "parameters": "(final long offset, final ByteBuffer buf)", "modifiers": "abstract public", "return": "void", "signature": "void putData(final long offset, final ByteBuffer buf)", "full_signature": "abstract public void putData(final long offset, final ByteBuffer buf)", "class_method_signature": "Volume.putData(final long offset, final ByteBuffer buf)", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(final long offset)", "modifiers": "abstract public", "return": "long", "signature": "long getLong(final long offset)", "full_signature": "abstract public long getLong(final long offset)", "class_method_signature": "Volume.getLong(final long offset)", "testcase": false, "constructor": false}, {"identifier": "getInt", "parameters": "(long offset)", "modifiers": "abstract public", "return": "int", "signature": "int getInt(long offset)", "full_signature": "abstract public int getInt(long offset)", "class_method_signature": "Volume.getInt(long offset)", "testcase": false, "constructor": false}, {"identifier": "getByte", "parameters": "(final long offset)", "modifiers": "abstract public", "return": "byte", "signature": "byte getByte(final long offset)", "full_signature": "abstract public byte getByte(final long offset)", "class_method_signature": "Volume.getByte(final long offset)", "testcase": false, "constructor": false}, {"identifier": "getDataInput", "parameters": "(final long offset, final int size)", "modifiers": "abstract public", "return": "DataInput2", "signature": "DataInput2 getDataInput(final long offset, final int size)", "full_signature": "abstract public DataInput2 getDataInput(final long offset, final int size)", "class_method_signature": "Volume.getDataInput(final long offset, final int size)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "abstract public", "return": "void", "signature": "void close()", "full_signature": "abstract public void close()", "class_method_signature": "Volume.close()", "testcase": false, "constructor": false}, {"identifier": "sync", "parameters": "()", "modifiers": "abstract public", "return": "void", "signature": "void sync()", "full_signature": "abstract public void sync()", "class_method_signature": "Volume.sync()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public abstract", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public abstract boolean isEmpty()", "class_method_signature": "Volume.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "deleteFile", "parameters": "()", "modifiers": "public abstract", "return": "void", "signature": "void deleteFile()", "full_signature": "public abstract void deleteFile()", "class_method_signature": "Volume.deleteFile()", "testcase": false, "constructor": false}, {"identifier": "isSliced", "parameters": "()", "modifiers": "public abstract", "return": "boolean", "signature": "boolean isSliced()", "full_signature": "public abstract boolean isSliced()", "class_method_signature": "Volume.isSliced()", "testcase": false, "constructor": false}, {"identifier": "putUnsignedShort", "parameters": "(final long offset, final int value)", "modifiers": "public final", "return": "void", "signature": "void putUnsignedShort(final long offset, final int value)", "full_signature": "public final void putUnsignedShort(final long offset, final int value)", "class_method_signature": "Volume.putUnsignedShort(final long offset, final int value)", "testcase": false, "constructor": false}, {"identifier": "getUnsignedShort", "parameters": "(long offset)", "modifiers": "public final", "return": "int", "signature": "int getUnsignedShort(long offset)", "full_signature": "public final int getUnsignedShort(long offset)", "class_method_signature": "Volume.getUnsignedShort(long offset)", "testcase": false, "constructor": false}, {"identifier": "getUnsignedByte", "parameters": "(long offset)", "modifiers": "public", "return": "int", "signature": "int getUnsignedByte(long offset)", "full_signature": "public int getUnsignedByte(long offset)", "class_method_signature": "Volume.getUnsignedByte(long offset)", "testcase": false, "constructor": false}, {"identifier": "putUnsignedByte", "parameters": "(long offset, int b)", "modifiers": "public", "return": "void", "signature": "void putUnsignedByte(long offset, int b)", "full_signature": "public void putUnsignedByte(long offset, int b)", "class_method_signature": "Volume.putUnsignedByte(long offset, int b)", "testcase": false, "constructor": false}, {"identifier": "getFile", "parameters": "()", "modifiers": "abstract public", "return": "File", "signature": "File getFile()", "full_signature": "abstract public File getFile()", "class_method_signature": "Volume.getFile()", "testcase": false, "constructor": false}, {"identifier": "volumeForFile", "parameters": "(File f, boolean useRandomAccessFile, boolean readOnly)", "modifiers": "public static", "return": "Volume", "signature": "Volume volumeForFile(File f, boolean useRandomAccessFile, boolean readOnly)", "full_signature": "public static Volume volumeForFile(File f, boolean useRandomAccessFile, boolean readOnly)", "class_method_signature": "Volume.volumeForFile(File f, boolean useRandomAccessFile, boolean readOnly)", "testcase": false, "constructor": false}, {"identifier": "fileFactory", "parameters": "(final boolean readOnly, final boolean RAF, final File indexFile)", "modifiers": "public static", "return": "Factory", "signature": "Factory fileFactory(final boolean readOnly, final boolean RAF, final File indexFile)", "full_signature": "public static Factory fileFactory(final boolean readOnly, final boolean RAF, final File indexFile)", "class_method_signature": "Volume.fileFactory(final boolean readOnly, final boolean RAF, final File indexFile)", "testcase": false, "constructor": false}, {"identifier": "fileFactory", "parameters": "(final boolean readOnly,\n                                      final boolean RAF,\n                                      final File indexFile,\n                                      final File physFile,\n                                      final File transLogFile)", "modifiers": "public static", "return": "Factory", "signature": "Factory fileFactory(final boolean readOnly,\n                                      final boolean RAF,\n                                      final File indexFile,\n                                      final File physFile,\n                                      final File transLogFile)", "full_signature": "public static Factory fileFactory(final boolean readOnly,\n                                      final boolean RAF,\n                                      final File indexFile,\n                                      final File physFile,\n                                      final File transLogFile)", "class_method_signature": "Volume.fileFactory(final boolean readOnly,\n                                      final boolean RAF,\n                                      final File indexFile,\n                                      final File physFile,\n                                      final File transLogFile)", "testcase": false, "constructor": false}, {"identifier": "memoryFactory", "parameters": "(final boolean useDirectBuffer)", "modifiers": "public static", "return": "Factory", "signature": "Factory memoryFactory(final boolean useDirectBuffer)", "full_signature": "public static Factory memoryFactory(final boolean useDirectBuffer)", "class_method_signature": "Volume.memoryFactory(final boolean useDirectBuffer)", "testcase": false, "constructor": false}], "file": "migration/third-party/org.mapdb/src/main/java/org/mapdb/Volume.java"}, "focal_method": {"identifier": "putUnsignedByte", "parameters": "(long offset, int b)", "modifiers": "public", "return": "void", "body": "public void putUnsignedByte(long offset, int b) {\n        putByte(offset, (byte)(b & 0xff));\n    }", "signature": "void putUnsignedByte(long offset, int b)", "full_signature": "public void putUnsignedByte(long offset, int b)", "class_method_signature": "Volume.putUnsignedByte(long offset, int b)", "testcase": false, "constructor": false, "invocations": ["putByte"]}, "repository": {"repo_id": 113878762, "url": "https://github.com/crossminer/scava", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 16, "size": 1903904, "license": "licensed"}}