{"test_class": {"identifier": "OpenTipBotUserServiceTest", "superclass": "extends AbstractTransactionalJUnit4SpringContextTests", "interfaces": "", "fields": [{"original_string": "@Autowired\n    protected OpenTipBotUserService opentipbotUserService;", "modifier": "@Autowired\n    protected", "type": "OpenTipBotUserService", "declarator": "opentipbotUserService", "var_name": "opentipbotUserService"}], "file": "opentipbot-service/src/test/java/opentipbot/service/OpenTipBotUserServiceTest.java"}, "test_case": {"identifier": "createNewOpenTipBotUser", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createNewOpenTipBotUser()\n    {\n        OpenTipBotUser opentipbotUser = new OpenTipBotUser();\n        opentipbotUser.setDisplayName(\"Gilles Cadignan\");\n        opentipbotUser.setTwitterIdentifier(\"1092039809834\");\n        opentipbotUser.setUserName(\"gillesCadignan\");\n        opentipbotUser.setProfileImageUrl(\"http://slkjslk.com/oiuoi.png\");\n        opentipbotUser.setProfileUrl(\"http://slkjslk.com/oiuoi.png\");\n        try {\n            opentipbotUserService.createNewOpenTipBotUser(opentipbotUser);\n        } catch (OpenTipBotServiceException e) {\n            logger.error(\"Error while create new OpenTipBotUser\");\n        }\n    }", "signature": "void createNewOpenTipBotUser()", "full_signature": "@Test public void createNewOpenTipBotUser()", "class_method_signature": "OpenTipBotUserServiceTest.createNewOpenTipBotUser()", "testcase": true, "constructor": false, "invocations": ["setDisplayName", "setTwitterIdentifier", "setUserName", "setProfileImageUrl", "setProfileUrl", "createNewOpenTipBotUser", "error"]}, "focal_class": {"identifier": "OpenTipBotUserService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private OpenTipBotUserRepository opentipbotUserRepository;", "modifier": "@Autowired\n    private", "type": "OpenTipBotUserRepository", "declarator": "opentipbotUserRepository", "var_name": "opentipbotUserRepository"}, {"original_string": "@Autowired\n    private OpenTipBotCommandRepository opentipbotCommandRepository;", "modifier": "@Autowired\n    private", "type": "OpenTipBotCommandRepository", "declarator": "opentipbotCommandRepository", "var_name": "opentipbotCommandRepository"}, {"original_string": "@Autowired\n    private BitcoinService bitcoinService;", "modifier": "@Autowired\n    private", "type": "BitcoinService", "declarator": "bitcoinService", "var_name": "bitcoinService"}, {"original_string": "@Autowired\n    Environment env;", "modifier": "@Autowired", "type": "Environment", "declarator": "env", "var_name": "env"}, {"original_string": "@Autowired\n    TwitterTemplate twitterTemplate;", "modifier": "@Autowired", "type": "TwitterTemplate", "declarator": "twitterTemplate", "var_name": "twitterTemplate"}], "methods": [{"identifier": "findByTwitterIdentifier", "parameters": "(String twitterIndentifier)", "modifiers": "public", "return": "OpenTipBotUser", "signature": "OpenTipBotUser findByTwitterIdentifier(String twitterIndentifier)", "full_signature": "public OpenTipBotUser findByTwitterIdentifier(String twitterIndentifier)", "class_method_signature": "OpenTipBotUserService.findByTwitterIdentifier(String twitterIndentifier)", "testcase": false, "constructor": false}, {"identifier": "findByUserName", "parameters": "(String userName)", "modifiers": "public", "return": "OpenTipBotUser", "signature": "OpenTipBotUser findByUserName(String userName)", "full_signature": "public OpenTipBotUser findByUserName(String userName)", "class_method_signature": "OpenTipBotUserService.findByUserName(String userName)", "testcase": false, "constructor": false}, {"identifier": "createNewOpenTipBotUser", "parameters": "(OpenTipBotUser opentipbotUser)", "modifiers": "public", "return": "void", "signature": "void createNewOpenTipBotUser(OpenTipBotUser opentipbotUser)", "full_signature": "public void createNewOpenTipBotUser(OpenTipBotUser opentipbotUser)", "class_method_signature": "OpenTipBotUserService.createNewOpenTipBotUser(OpenTipBotUser opentipbotUser)", "testcase": false, "constructor": false}, {"identifier": "updateOpenTipBotUser", "parameters": "(OpenTipBotUser opentipbotUser)", "modifiers": "public", "return": "void", "signature": "void updateOpenTipBotUser(OpenTipBotUser opentipbotUser)", "full_signature": "public void updateOpenTipBotUser(OpenTipBotUser opentipbotUser)", "class_method_signature": "OpenTipBotUserService.updateOpenTipBotUser(OpenTipBotUser opentipbotUser)", "testcase": false, "constructor": false}, {"identifier": "getTipsSent", "parameters": "(String userName)", "modifiers": "public", "return": "List<OpenTipBotCommand>", "signature": "List<OpenTipBotCommand> getTipsSent(String userName)", "full_signature": "public List<OpenTipBotCommand> getTipsSent(String userName)", "class_method_signature": "OpenTipBotUserService.getTipsSent(String userName)", "testcase": false, "constructor": false}, {"identifier": "getTipsReceived", "parameters": "(String userName)", "modifiers": "public", "return": "List<OpenTipBotCommand>", "signature": "List<OpenTipBotCommand> getTipsReceived(String userName)", "full_signature": "public List<OpenTipBotCommand> getTipsReceived(String userName)", "class_method_signature": "OpenTipBotUserService.getTipsReceived(String userName)", "testcase": false, "constructor": false}, {"identifier": "getWithdrawals", "parameters": "(String userName)", "modifiers": "public", "return": "List<OpenTipBotCommand>", "signature": "List<OpenTipBotCommand> getWithdrawals(String userName)", "full_signature": "public List<OpenTipBotCommand> getWithdrawals(String userName)", "class_method_signature": "OpenTipBotUserService.getWithdrawals(String userName)", "testcase": false, "constructor": false}], "file": "opentipbot-service/src/main/java/opentipbot/service/OpenTipBotUserService.java"}, "focal_method": {"identifier": "createNewOpenTipBotUser", "parameters": "(OpenTipBotUser opentipbotUser)", "modifiers": "public", "return": "void", "body": "public void createNewOpenTipBotUser(OpenTipBotUser opentipbotUser) throws OpenTipBotServiceException {\n\n        //generate new coin address and corresponding QR code pic\n        opentipbotUser.setCoinAddress(bitcoinService.getNewAdress(opentipbotUser.getUserName()));\n        opentipbotUser.setCoinAddressQRCode(bitcoinService.generateAdressQRCodeImage(opentipbotUser.getCoinAddress()));\n\n        //check if user already has pending tips\n        double pendingTips = bitcoinService.getPendingBalance(opentipbotUser.getUserName());\n        if (pendingTips > 0){\n            bitcoinService.sendTip(opentipbotUser.getUserName() + env.getProperty(\"opentipbot.bitcoin.pendingAccountSuffix\"),\n                    opentipbotUser.getUserName(), pendingTips);\n        }\n        //follow new user\n        twitterTemplate.friendOperations().follow(opentipbotUser.getUserName());\n\n\n        opentipbotUserRepository.save(opentipbotUser);\n    }", "signature": "void createNewOpenTipBotUser(OpenTipBotUser opentipbotUser)", "full_signature": "public void createNewOpenTipBotUser(OpenTipBotUser opentipbotUser)", "class_method_signature": "OpenTipBotUserService.createNewOpenTipBotUser(OpenTipBotUser opentipbotUser)", "testcase": false, "constructor": false, "invocations": ["setCoinAddress", "getNewAdress", "getUserName", "setCoinAddressQRCode", "generateAdressQRCodeImage", "getCoinAddress", "getPendingBalance", "getUserName", "sendTip", "getUserName", "getProperty", "getUserName", "follow", "friendOperations", "getUserName", "save"]}, "repository": {"repo_id": 32139352, "url": "https://github.com/gill3s/opentipbot", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 1013, "license": "licensed"}}