{"test_class": {"identifier": "CommunityHistogramTest", "superclass": "", "interfaces": "", "fields": [], "file": "algo/src/test/java/org/neo4j/graphalgo/results/CommunityHistogramTest.java"}, "test_case": {"identifier": "multipleCommunities", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void multipleCommunities() {\n        final LongLongMap communitySizeMap = new LongLongScatterMap();\n        communitySizeMap.addTo(1, 4);\n        communitySizeMap.addTo(2, 10);\n        communitySizeMap.addTo(3, 9);\n        communitySizeMap.addTo(4, 8);\n        communitySizeMap.addTo(5, 7);\n\n        Histogram histogram = CommunityHistogram.buildFrom(communitySizeMap);\n\n        assertEquals(10.0, histogram.getValueAtPercentile(100D), 0.01);\n        assertEquals(8.0, histogram.getValueAtPercentile(50D), 0.01);\n    }", "signature": "void multipleCommunities()", "full_signature": "@Test public void multipleCommunities()", "class_method_signature": "CommunityHistogramTest.multipleCommunities()", "testcase": true, "constructor": false, "invocations": ["addTo", "addTo", "addTo", "addTo", "addTo", "buildFrom", "assertEquals", "getValueAtPercentile", "assertEquals", "getValueAtPercentile"]}, "focal_class": {"identifier": "CommunityHistogram", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "buildFrom", "parameters": "(LongLongMap communitySizeMap)", "modifiers": "public static", "return": "Histogram", "signature": "Histogram buildFrom(LongLongMap communitySizeMap)", "full_signature": "public static Histogram buildFrom(LongLongMap communitySizeMap)", "class_method_signature": "CommunityHistogram.buildFrom(LongLongMap communitySizeMap)", "testcase": false, "constructor": false}], "file": "algo/src/main/java/org/neo4j/graphalgo/results/CommunityHistogram.java"}, "focal_method": {"identifier": "buildFrom", "parameters": "(LongLongMap communitySizeMap)", "modifiers": "public static", "return": "Histogram", "body": "public static Histogram buildFrom(LongLongMap communitySizeMap) {\n        final Histogram histogram = new Histogram(2);\n\n        for (LongLongCursor cursor : communitySizeMap) {\n            histogram.recordValue(cursor.value);\n        }\n\n        return histogram;\n    }", "signature": "Histogram buildFrom(LongLongMap communitySizeMap)", "full_signature": "public static Histogram buildFrom(LongLongMap communitySizeMap)", "class_method_signature": "CommunityHistogram.buildFrom(LongLongMap communitySizeMap)", "testcase": false, "constructor": false, "invocations": ["recordValue"]}, "repository": {"repo_id": 82291828, "url": "https://github.com/neo4j-contrib/neo4j-graph-algorithms", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 689, "size": 43359, "license": "licensed"}}