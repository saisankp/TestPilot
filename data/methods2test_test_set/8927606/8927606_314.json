{"test_class": {"identifier": "CredentialCheckingPipeTest", "superclass": "extends PipeTestBase<CredentialCheckingPipe>", "interfaces": "", "fields": [{"original_string": "private IPipeLineSession session = new PipeLineSessionBase();", "modifier": "private", "type": "IPipeLineSession", "declarator": "session = new PipeLineSessionBase()", "var_name": "session"}], "file": "core/src/test/java/nl/nn/adapterframework/pipes/CredentialCheckingPipeTest.java"}, "test_case": {"identifier": "testNonExisitingTarget", "parameters": "()", "modifiers": "@Test(expected = ConfigurationException.class) public", "return": "void", "body": "@Test(expected = ConfigurationException.class)\n    public void testNonExisitingTarget() throws ConfigurationException {\n        pipe.configure();\n    }", "signature": "void testNonExisitingTarget()", "full_signature": "@Test(expected = ConfigurationException.class) public void testNonExisitingTarget()", "class_method_signature": "CredentialCheckingPipeTest.testNonExisitingTarget()", "testcase": true, "constructor": false, "invocations": ["configure"]}, "focal_class": {"identifier": "CredentialCheckingPipe", "superclass": "extends FixedForwardPipe", "interfaces": "", "fields": [{"original_string": "private String targetUserid;", "modifier": "private", "type": "String", "declarator": "targetUserid", "var_name": "targetUserid"}, {"original_string": "private String targetPassword;", "modifier": "private", "type": "String", "declarator": "targetPassword", "var_name": "targetPassword"}, {"original_string": "private String defaultUserid;", "modifier": "private", "type": "String", "declarator": "defaultUserid", "var_name": "defaultUserid"}, {"original_string": "private String defaultPassword;", "modifier": "private", "type": "String", "declarator": "defaultPassword", "var_name": "defaultPassword"}, {"original_string": "private String authAlias;", "modifier": "private", "type": "String", "declarator": "authAlias", "var_name": "authAlias"}], "methods": [{"identifier": "configure", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void configure()", "full_signature": "@Override public void configure()", "class_method_signature": "CredentialCheckingPipe.configure()", "testcase": false, "constructor": false}, {"identifier": "doPipe", "parameters": "(Message message, IPipeLineSession session)", "modifiers": "@Override public", "return": "PipeRunResult", "signature": "PipeRunResult doPipe(Message message, IPipeLineSession session)", "full_signature": "@Override public PipeRunResult doPipe(Message message, IPipeLineSession session)", "class_method_signature": "CredentialCheckingPipe.doPipe(Message message, IPipeLineSession session)", "testcase": false, "constructor": false}, {"identifier": "setAuthAlias", "parameters": "(String string)", "modifiers": "public", "return": "void", "signature": "void setAuthAlias(String string)", "full_signature": "public void setAuthAlias(String string)", "class_method_signature": "CredentialCheckingPipe.setAuthAlias(String string)", "testcase": false, "constructor": false}, {"identifier": "getAuthAlias", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAuthAlias()", "full_signature": "public String getAuthAlias()", "class_method_signature": "CredentialCheckingPipe.getAuthAlias()", "testcase": false, "constructor": false}, {"identifier": "setTargetPassword", "parameters": "(String string)", "modifiers": "public", "return": "void", "signature": "void setTargetPassword(String string)", "full_signature": "public void setTargetPassword(String string)", "class_method_signature": "CredentialCheckingPipe.setTargetPassword(String string)", "testcase": false, "constructor": false}, {"identifier": "getTargetPassword", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTargetPassword()", "full_signature": "public String getTargetPassword()", "class_method_signature": "CredentialCheckingPipe.getTargetPassword()", "testcase": false, "constructor": false}, {"identifier": "setTargetUserid", "parameters": "(String string)", "modifiers": "public", "return": "void", "signature": "void setTargetUserid(String string)", "full_signature": "public void setTargetUserid(String string)", "class_method_signature": "CredentialCheckingPipe.setTargetUserid(String string)", "testcase": false, "constructor": false}, {"identifier": "getTargetUserid", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTargetUserid()", "full_signature": "public String getTargetUserid()", "class_method_signature": "CredentialCheckingPipe.getTargetUserid()", "testcase": false, "constructor": false}, {"identifier": "setDefaultPassword", "parameters": "(String string)", "modifiers": "public", "return": "void", "signature": "void setDefaultPassword(String string)", "full_signature": "public void setDefaultPassword(String string)", "class_method_signature": "CredentialCheckingPipe.setDefaultPassword(String string)", "testcase": false, "constructor": false}, {"identifier": "getDefaultPassword", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDefaultPassword()", "full_signature": "public String getDefaultPassword()", "class_method_signature": "CredentialCheckingPipe.getDefaultPassword()", "testcase": false, "constructor": false}, {"identifier": "setDefaultUserid", "parameters": "(String string)", "modifiers": "public", "return": "void", "signature": "void setDefaultUserid(String string)", "full_signature": "public void setDefaultUserid(String string)", "class_method_signature": "CredentialCheckingPipe.setDefaultUserid(String string)", "testcase": false, "constructor": false}, {"identifier": "getDefaultUserid", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDefaultUserid()", "full_signature": "public String getDefaultUserid()", "class_method_signature": "CredentialCheckingPipe.getDefaultUserid()", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/pipes/CredentialCheckingPipe.java"}, "focal_method": {"identifier": "configure", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void configure() throws ConfigurationException {\n\t\tsuper.configure();\n\t\tif (getTargetUserid()==null) {\n\t\t\tthrow new ConfigurationException(\"targetUserid must be specified\");\n\t\t} \n\t\tif (getTargetPassword()==null) {\n\t\t\tthrow new ConfigurationException(\"targetPassword must be specified\");\n\t\t} \n\t}", "signature": "void configure()", "full_signature": "@Override public void configure()", "class_method_signature": "CredentialCheckingPipe.configure()", "testcase": false, "constructor": false, "invocations": ["configure", "getTargetUserid", "getTargetPassword"]}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}