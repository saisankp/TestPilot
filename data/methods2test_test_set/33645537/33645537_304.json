{"test_class": {"identifier": "ReplaceSpacesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ReplaceSpaces replaceSpaces;", "modifier": "private", "type": "ReplaceSpaces", "declarator": "replaceSpaces", "var_name": "replaceSpaces"}], "file": "algs/src/test/java/com/github/pedrovgs/problem52/ReplaceSpacesTest.java"}, "test_case": {"identifier": "shouldReplaceAllTheContentIfTheArrayIsFullOfSpaces2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void shouldReplaceAllTheContentIfTheArrayIsFullOfSpaces2() {\n    char[] input = new char[6];\n    input[0] = ' ';\n    input[1] = ' ';\n\n    replaceSpaces.replace2(input);\n\n    assertArrayEquals(new char[] { '%', '2', '0', '%', '2', '0' }, input);\n  }", "signature": "void shouldReplaceAllTheContentIfTheArrayIsFullOfSpaces2()", "full_signature": "@Test public void shouldReplaceAllTheContentIfTheArrayIsFullOfSpaces2()", "class_method_signature": "ReplaceSpacesTest.shouldReplaceAllTheContentIfTheArrayIsFullOfSpaces2()", "testcase": true, "constructor": false, "invocations": ["replace2", "assertArrayEquals"]}, "focal_class": {"identifier": "ReplaceSpaces", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "replace", "parameters": "(char[] input)", "modifiers": "public", "return": "void", "signature": "void replace(char[] input)", "full_signature": "public void replace(char[] input)", "class_method_signature": "ReplaceSpaces.replace(char[] input)", "testcase": false, "constructor": false}, {"identifier": "copyArray", "parameters": "(char[] src, char[] destiny)", "modifiers": "private", "return": "void", "signature": "void copyArray(char[] src, char[] destiny)", "full_signature": "private void copyArray(char[] src, char[] destiny)", "class_method_signature": "ReplaceSpaces.copyArray(char[] src, char[] destiny)", "testcase": false, "constructor": false}, {"identifier": "replace2", "parameters": "(char[] input)", "modifiers": "public", "return": "void", "signature": "void replace2(char[] input)", "full_signature": "public void replace2(char[] input)", "class_method_signature": "ReplaceSpaces.replace2(char[] input)", "testcase": false, "constructor": false}, {"identifier": "getLastCharPosition", "parameters": "(char[] input)", "modifiers": "private", "return": "int", "signature": "int getLastCharPosition(char[] input)", "full_signature": "private int getLastCharPosition(char[] input)", "class_method_signature": "ReplaceSpaces.getLastCharPosition(char[] input)", "testcase": false, "constructor": false}, {"identifier": "validateInput", "parameters": "(char[] input)", "modifiers": "private", "return": "void", "signature": "void validateInput(char[] input)", "full_signature": "private void validateInput(char[] input)", "class_method_signature": "ReplaceSpaces.validateInput(char[] input)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem52/ReplaceSpaces.java"}, "focal_method": {"identifier": "replace2", "parameters": "(char[] input)", "modifiers": "public", "return": "void", "body": "public void replace2(char[] input) {\n    validateInput(input);\n\n    int i = getLastCharPosition(input);\n    for (int j = input.length - 1; i >= 0 && j >= 0; i--, j--) {\n      if (input[i] == ' ') {\n        input[j--] = '0';\n        input[j--] = '2';\n        input[j] = '%';\n      } else {\n        input[j] = input[i];\n      }\n    }\n  }", "signature": "void replace2(char[] input)", "full_signature": "public void replace2(char[] input)", "class_method_signature": "ReplaceSpaces.replace2(char[] input)", "testcase": false, "constructor": false, "invocations": ["validateInput", "getLastCharPosition"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}