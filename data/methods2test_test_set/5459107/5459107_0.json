{"test_class": {"identifier": "TestPump", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String INPUT2_PATH = \"/tmp/TestPump/input2\";", "modifier": "private static final", "type": "String", "declarator": "INPUT2_PATH = \"/tmp/TestPump/input2\"", "var_name": "INPUT2_PATH"}, {"original_string": "private static final String NULL_INPUT_PATH = \"/tmp/TestPump/nulls\";", "modifier": "private static final", "type": "String", "declarator": "NULL_INPUT_PATH = \"/tmp/TestPump/nulls\"", "var_name": "NULL_INPUT_PATH"}, {"original_string": "private static final String OUTPUT_PATH2 = \"/tmp/TestPump/output2\";", "modifier": "private static final", "type": "String", "declarator": "OUTPUT_PATH2 = \"/tmp/TestPump/output2\"", "var_name": "OUTPUT_PATH2"}, {"original_string": "private static final List<Tuple> INPUT2_TUPLES = new ArrayList<Tuple>(){{\n    add(new Tuple(\"1970-01-01\\tfirst\"));\n    add(new Tuple(\"1970-01-02\\tsecond\"));\n    add(new Tuple(\"1970-01-03\\tfiltered\"));\n  }};", "modifier": "private static final", "type": "List<Tuple>", "declarator": "INPUT2_TUPLES = new ArrayList<Tuple>(){{\n    add(new Tuple(\"1970-01-01\\tfirst\"));\n    add(new Tuple(\"1970-01-02\\tsecond\"));\n    add(new Tuple(\"1970-01-03\\tfiltered\"));\n  }}", "var_name": "INPUT2_TUPLES"}, {"original_string": "private static final List<Tuple> NULL_TUPLES = new ArrayList<Tuple>(){{\n    add(new Tuple(\"1970-01-01\\tfirst\"));\n    add(new Tuple(null));\n    add(new Tuple(\"1970-01-03\\tfiltered\"));\n  }};", "modifier": "private static final", "type": "List<Tuple>", "declarator": "NULL_TUPLES = new ArrayList<Tuple>(){{\n    add(new Tuple(\"1970-01-01\\tfirst\"));\n    add(new Tuple(null));\n    add(new Tuple(\"1970-01-03\\tfiltered\"));\n  }}", "var_name": "NULL_TUPLES"}], "file": "cascading-helpers/src/test/java/com/squareup/cascading_helpers/pump/TestPump.java"}, "test_case": {"identifier": "testRetain", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRetain() throws IOException {\n    Pipe p = Pump.prime()\n        .retain(\"line\")\n        .toPipe();\n\n    CascadingHelper.get().getFlowConnector().connect(Tests.getInTap(), Tests.getOutTap(), p).complete();\n\n    assertEquals(Arrays.asList(\"115200000\", \"0\", \"115200000\", \"asdf\"), getOutputStrings());\n  }", "signature": "void testRetain()", "full_signature": "@Test public void testRetain()", "class_method_signature": "TestPump.testRetain()", "testcase": true, "constructor": false, "invocations": ["toPipe", "retain", "prime", "complete", "connect", "getFlowConnector", "get", "getInTap", "getOutTap", "assertEquals", "asList", "getOutputStrings"]}, "focal_class": {"identifier": "Pump", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Pipe memoizedPipe;", "modifier": "private", "type": "Pipe", "declarator": "memoizedPipe", "var_name": "memoizedPipe"}], "methods": [{"identifier": "getPrev", "parameters": "()", "modifiers": "abstract", "return": "Pump", "signature": "Pump getPrev()", "full_signature": "abstract Pump getPrev()", "class_method_signature": "Pump.getPrev()", "testcase": false, "constructor": false}, {"identifier": "getPipeInternal", "parameters": "()", "modifiers": "abstract", "return": "Pipe", "signature": "Pipe getPipeInternal()", "full_signature": "abstract Pipe getPipeInternal()", "class_method_signature": "Pump.getPipeInternal()", "testcase": false, "constructor": false}, {"identifier": "getEmittedClasses", "parameters": "()", "modifiers": "public", "return": "Set<Class>", "signature": "Set<Class> getEmittedClasses()", "full_signature": "public Set<Class> getEmittedClasses()", "class_method_signature": "Pump.getEmittedClasses()", "testcase": false, "constructor": false}, {"identifier": "toPipe", "parameters": "()", "modifiers": "public final", "return": "Pipe", "signature": "Pipe toPipe()", "full_signature": "public final Pipe toPipe()", "class_method_signature": "Pump.toPipe()", "testcase": false, "constructor": false}, {"identifier": "prime", "parameters": "()", "modifiers": "public static", "return": "Pump", "signature": "Pump prime()", "full_signature": "public static Pump prime()", "class_method_signature": "Pump.prime()", "testcase": false, "constructor": false}, {"identifier": "prime", "parameters": "(String pipeName)", "modifiers": "public static", "return": "Pump", "signature": "Pump prime(String pipeName)", "full_signature": "public static Pump prime(String pipeName)", "class_method_signature": "Pump.prime(String pipeName)", "testcase": false, "constructor": false}, {"identifier": "prime", "parameters": "(Pipe pipe)", "modifiers": "public static", "return": "Pump", "signature": "Pump prime(Pipe pipe)", "full_signature": "public static Pump prime(Pipe pipe)", "class_method_signature": "Pump.prime(Pipe pipe)", "testcase": false, "constructor": false}, {"identifier": "cogroup", "parameters": "(Pump other, String... cogroupFields)", "modifiers": "public", "return": "CoGroupPump", "signature": "CoGroupPump cogroup(Pump other, String... cogroupFields)", "full_signature": "public CoGroupPump cogroup(Pump other, String... cogroupFields)", "class_method_signature": "Pump.cogroup(Pump other, String... cogroupFields)", "testcase": false, "constructor": false}, {"identifier": "cogroup", "parameters": "(Pump other, Joiner joiner, String... cogroupFields)", "modifiers": "public", "return": "CoGroupPump", "signature": "CoGroupPump cogroup(Pump other, Joiner joiner, String... cogroupFields)", "full_signature": "public CoGroupPump cogroup(Pump other, Joiner joiner, String... cogroupFields)", "class_method_signature": "Pump.cogroup(Pump other, Joiner joiner, String... cogroupFields)", "testcase": false, "constructor": false}, {"identifier": "cogroup", "parameters": "(Pump left, Pump right, String... cogroupFields)", "modifiers": "public static", "return": "CoGroupPump", "signature": "CoGroupPump cogroup(Pump left, Pump right, String... cogroupFields)", "full_signature": "public static CoGroupPump cogroup(Pump left, Pump right, String... cogroupFields)", "class_method_signature": "Pump.cogroup(Pump left, Pump right, String... cogroupFields)", "testcase": false, "constructor": false}, {"identifier": "cogroup", "parameters": "(Pump left, Pump right, Joiner joiner, String... cogroupFields)", "modifiers": "public static", "return": "CoGroupPump", "signature": "CoGroupPump cogroup(Pump left, Pump right, Joiner joiner, String... cogroupFields)", "full_signature": "public static CoGroupPump cogroup(Pump left, Pump right, Joiner joiner, String... cogroupFields)", "class_method_signature": "Pump.cogroup(Pump left, Pump right, Joiner joiner, String... cogroupFields)", "testcase": false, "constructor": false}, {"identifier": "getArgSelector", "parameters": "(String... args)", "modifiers": "static", "return": "Fields", "signature": "Fields getArgSelector(String... args)", "full_signature": "static Fields getArgSelector(String... args)", "class_method_signature": "Pump.getArgSelector(String... args)", "testcase": false, "constructor": false}, {"identifier": "getArgSelector", "parameters": "(Fields defaultFields, String... args)", "modifiers": "static", "return": "Fields", "signature": "Fields getArgSelector(Fields defaultFields, String... args)", "full_signature": "static Fields getArgSelector(Fields defaultFields, String... args)", "class_method_signature": "Pump.getArgSelector(Fields defaultFields, String... args)", "testcase": false, "constructor": false}, {"identifier": "each", "parameters": "(Function function, String... args)", "modifiers": "public", "return": "Pump", "signature": "Pump each(Function function, String... args)", "full_signature": "public Pump each(Function function, String... args)", "class_method_signature": "Pump.each(Function function, String... args)", "testcase": false, "constructor": false}, {"identifier": "each", "parameters": "(Filter filter, String... args)", "modifiers": "public", "return": "Pump", "signature": "Pump each(Filter filter, String... args)", "full_signature": "public Pump each(Filter filter, String... args)", "class_method_signature": "Pump.each(Filter filter, String... args)", "testcase": false, "constructor": false}, {"identifier": "failOnNull", "parameters": "(String errorText, String... args)", "modifiers": "public", "return": "Pump", "signature": "Pump failOnNull(String errorText, String... args)", "full_signature": "public Pump failOnNull(String errorText, String... args)", "class_method_signature": "Pump.failOnNull(String errorText, String... args)", "testcase": false, "constructor": false}, {"identifier": "unique", "parameters": "(String... uniqueFields)", "modifiers": "public", "return": "Pump", "signature": "Pump unique(String... uniqueFields)", "full_signature": "public Pump unique(String... uniqueFields)", "class_method_signature": "Pump.unique(String... uniqueFields)", "testcase": false, "constructor": false}, {"identifier": "groupby", "parameters": "(String... fields)", "modifiers": "public", "return": "GroupByPump", "signature": "GroupByPump groupby(String... fields)", "full_signature": "public GroupByPump groupby(String... fields)", "class_method_signature": "Pump.groupby(String... fields)", "testcase": false, "constructor": false}, {"identifier": "aggregateby", "parameters": "(AggregateBy.Functor functor, Aggregator aggregator, String... args)", "modifiers": "public", "return": "Pump", "signature": "Pump aggregateby(AggregateBy.Functor functor, Aggregator aggregator, String... args)", "full_signature": "public Pump aggregateby(AggregateBy.Functor functor, Aggregator aggregator, String... args)", "class_method_signature": "Pump.aggregateby(AggregateBy.Functor functor, Aggregator aggregator, String... args)", "testcase": false, "constructor": false}, {"identifier": "average", "parameters": "(String valueField, String averageField)", "modifiers": "public", "return": "Pump", "signature": "Pump average(String valueField, String averageField)", "full_signature": "public Pump average(String valueField, String averageField)", "class_method_signature": "Pump.average(String valueField, String averageField)", "testcase": false, "constructor": false}, {"identifier": "count", "parameters": "(String countField)", "modifiers": "public", "return": "Pump", "signature": "Pump count(String countField)", "full_signature": "public Pump count(String countField)", "class_method_signature": "Pump.count(String countField)", "testcase": false, "constructor": false}, {"identifier": "first", "parameters": "(String... firstFields)", "modifiers": "public", "return": "Pump", "signature": "Pump first(String... firstFields)", "full_signature": "public Pump first(String... firstFields)", "class_method_signature": "Pump.first(String... firstFields)", "testcase": false, "constructor": false}, {"identifier": "sum", "parameters": "(String valueField, String sumField)", "modifiers": "public", "return": "Pump", "signature": "Pump sum(String valueField, String sumField)", "full_signature": "public Pump sum(String valueField, String sumField)", "class_method_signature": "Pump.sum(String valueField, String sumField)", "testcase": false, "constructor": false}, {"identifier": "every", "parameters": "(Aggregator agg, String... args)", "modifiers": "public", "return": "AggregatorPump", "signature": "AggregatorPump every(Aggregator agg, String... args)", "full_signature": "public AggregatorPump every(Aggregator agg, String... args)", "class_method_signature": "Pump.every(Aggregator agg, String... args)", "testcase": false, "constructor": false}, {"identifier": "every", "parameters": "(Buffer buffer, String... args)", "modifiers": "public", "return": "Pump", "signature": "Pump every(Buffer buffer, String... args)", "full_signature": "public Pump every(Buffer buffer, String... args)", "class_method_signature": "Pump.every(Buffer buffer, String... args)", "testcase": false, "constructor": false}, {"identifier": "retain", "parameters": "(String ... fieldsToKeep)", "modifiers": "public", "return": "Pump", "signature": "Pump retain(String ... fieldsToKeep)", "full_signature": "public Pump retain(String ... fieldsToKeep)", "class_method_signature": "Pump.retain(String ... fieldsToKeep)", "testcase": false, "constructor": false}, {"identifier": "discard", "parameters": "(String ... fieldsToDiscard)", "modifiers": "public", "return": "Pump", "signature": "Pump discard(String ... fieldsToDiscard)", "full_signature": "public Pump discard(String ... fieldsToDiscard)", "class_method_signature": "Pump.discard(String ... fieldsToDiscard)", "testcase": false, "constructor": false}, {"identifier": "coerce", "parameters": "(String field, Class toClass)", "modifiers": "public", "return": "Pump", "signature": "Pump coerce(String field, Class toClass)", "full_signature": "public Pump coerce(String field, Class toClass)", "class_method_signature": "Pump.coerce(String field, Class toClass)", "testcase": false, "constructor": false}, {"identifier": "coerce", "parameters": "(Class toClass, String... fieldsToCoerce)", "modifiers": "public", "return": "Pump", "signature": "Pump coerce(Class toClass, String... fieldsToCoerce)", "full_signature": "public Pump coerce(Class toClass, String... fieldsToCoerce)", "class_method_signature": "Pump.coerce(Class toClass, String... fieldsToCoerce)", "testcase": false, "constructor": false}, {"identifier": "coerce", "parameters": "(String[] fields, Class<?>[] classes)", "modifiers": "public", "return": "Pump", "signature": "Pump coerce(String[] fields, Class<?>[] classes)", "full_signature": "public Pump coerce(String[] fields, Class<?>[] classes)", "class_method_signature": "Pump.coerce(String[] fields, Class<?>[] classes)", "testcase": false, "constructor": false}, {"identifier": "rename", "parameters": "(String field, String toName)", "modifiers": "public", "return": "Pump", "signature": "Pump rename(String field, String toName)", "full_signature": "public Pump rename(String field, String toName)", "class_method_signature": "Pump.rename(String field, String toName)", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "(String field, String toName)", "modifiers": "public", "return": "Pump", "signature": "Pump replace(String field, String toName)", "full_signature": "public Pump replace(String field, String toName)", "class_method_signature": "Pump.replace(String field, String toName)", "testcase": false, "constructor": false}, {"identifier": "getOrElse", "parameters": "(String fromField, String toField, Tuple value)", "modifiers": "public", "return": "Pump", "signature": "Pump getOrElse(String fromField, String toField, Tuple value)", "full_signature": "public Pump getOrElse(String fromField, String toField, Tuple value)", "class_method_signature": "Pump.getOrElse(String fromField, String toField, Tuple value)", "testcase": false, "constructor": false}, {"identifier": "branch", "parameters": "()", "modifiers": "public", "return": "Pump", "signature": "Pump branch()", "full_signature": "public Pump branch()", "class_method_signature": "Pump.branch()", "testcase": false, "constructor": false}, {"identifier": "branch", "parameters": "(String branchName)", "modifiers": "private", "return": "Pump", "signature": "Pump branch(String branchName)", "full_signature": "private Pump branch(String branchName)", "class_method_signature": "Pump.branch(String branchName)", "testcase": false, "constructor": false}], "file": "cascading-helpers/src/main/java/com/squareup/cascading_helpers/pump/Pump.java"}, "focal_method": {"identifier": "retain", "parameters": "(String ... fieldsToKeep)", "modifiers": "public", "return": "Pump", "body": "public Pump retain(String ... fieldsToKeep) {\n    return new PipeAdapterPump(this, new Retain(toPipe(), getArgSelector(fieldsToKeep)));\n  }", "signature": "Pump retain(String ... fieldsToKeep)", "full_signature": "public Pump retain(String ... fieldsToKeep)", "class_method_signature": "Pump.retain(String ... fieldsToKeep)", "testcase": false, "constructor": false, "invocations": ["toPipe", "getArgSelector"]}, "repository": {"repo_id": 5459107, "url": "https://github.com/square/cascading-helpers", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 54, "size": 1004, "license": "licensed"}}