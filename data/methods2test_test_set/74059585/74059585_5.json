{"test_class": {"identifier": "TraceResponseInterceptorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BasicHttpResponse response;", "modifier": "private", "type": "BasicHttpResponse", "declarator": "response", "var_name": "response"}, {"original_string": "private TraceResponseInterceptor responseInterceptor;", "modifier": "private", "type": "TraceResponseInterceptor", "declarator": "responseInterceptor", "var_name": "responseInterceptor"}, {"original_string": "private TraceHttpResponseInterceptor mockDelegate;", "modifier": "private", "type": "TraceHttpResponseInterceptor", "declarator": "mockDelegate", "var_name": "mockDelegate"}, {"original_string": "private TraceContext testContext = new TraceContext(\n      new TestSpanContextHandle(new SpanContext(new TraceId(\n          BigInteger.TEN), new SpanId(22), TraceOptions.forTraceEnabled())));", "modifier": "private", "type": "TraceContext", "declarator": "testContext = new TraceContext(\n      new TestSpanContextHandle(new SpanContext(new TraceId(\n          BigInteger.TEN), new SpanId(22), TraceOptions.forTraceEnabled())))", "var_name": "testContext"}], "file": "apache-http/src/test/java/com/google/cloud/trace/apachehttp/TraceResponseInterceptorTest.java"}, "test_case": {"identifier": "testProcess_WithoutContext", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testProcess_WithoutContext() throws IOException, HttpException {\n    HttpContext httpContext = new BasicHttpContext();\n    responseInterceptor.process(response, httpContext);\n    verify(mockDelegate).process(any(HttpResponse.class), (TraceContext) isNull());\n  }", "signature": "void testProcess_WithoutContext()", "full_signature": "@Test public void testProcess_WithoutContext()", "class_method_signature": "TraceResponseInterceptorTest.testProcess_WithoutContext()", "testcase": true, "constructor": false, "invocations": ["process", "process", "verify", "any", "isNull"]}, "focal_class": {"identifier": "TraceResponseInterceptor", "superclass": "", "interfaces": "implements HttpResponseInterceptor", "fields": [{"original_string": "private final TraceHttpResponseInterceptor interceptor;", "modifier": "private final", "type": "TraceHttpResponseInterceptor", "declarator": "interceptor", "var_name": "interceptor"}], "methods": [{"identifier": "TraceResponseInterceptor", "parameters": "()", "modifiers": "public", "return": "", "signature": " TraceResponseInterceptor()", "full_signature": "public  TraceResponseInterceptor()", "class_method_signature": "TraceResponseInterceptor.TraceResponseInterceptor()", "testcase": false, "constructor": true}, {"identifier": "TraceResponseInterceptor", "parameters": "(TraceHttpResponseInterceptor interceptor)", "modifiers": "public", "return": "", "signature": " TraceResponseInterceptor(TraceHttpResponseInterceptor interceptor)", "full_signature": "public  TraceResponseInterceptor(TraceHttpResponseInterceptor interceptor)", "class_method_signature": "TraceResponseInterceptor.TraceResponseInterceptor(TraceHttpResponseInterceptor interceptor)", "testcase": false, "constructor": true}, {"identifier": "process", "parameters": "(org.apache.http.HttpResponse response, HttpContext context)", "modifiers": "public", "return": "void", "signature": "void process(org.apache.http.HttpResponse response, HttpContext context)", "full_signature": "public void process(org.apache.http.HttpResponse response, HttpContext context)", "class_method_signature": "TraceResponseInterceptor.process(org.apache.http.HttpResponse response, HttpContext context)", "testcase": false, "constructor": false}], "file": "apache-http/src/main/java/com/google/cloud/trace/apachehttp/TraceResponseInterceptor.java"}, "focal_method": {"identifier": "process", "parameters": "(org.apache.http.HttpResponse response, HttpContext context)", "modifiers": "public", "return": "void", "body": "public void process(org.apache.http.HttpResponse response, HttpContext context)\n      throws HttpException, IOException {\n    TraceContext traceContext = (TraceContext) context\n        .getAttribute(TraceInterceptorUtil.TRACE_CONTEXT_KEY);\n    interceptor.process(new ResponseAdapter(response), traceContext);\n  }", "signature": "void process(org.apache.http.HttpResponse response, HttpContext context)", "full_signature": "public void process(org.apache.http.HttpResponse response, HttpContext context)", "class_method_signature": "TraceResponseInterceptor.process(org.apache.http.HttpResponse response, HttpContext context)", "testcase": false, "constructor": false, "invocations": ["getAttribute", "process"]}, "repository": {"repo_id": 74059585, "url": "https://github.com/GoogleCloudPlatform/cloud-trace-java-instrumentation", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 10, "size": 141, "license": "licensed"}}