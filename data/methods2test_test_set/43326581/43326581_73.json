{"test_class": {"identifier": "FossologyHostKeyRepositoryTest", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "private static final String GOOD_KEY = \"\\u0000\\u0000\\u0000\\u0007ssh-rsa\\u0000\\u0000\\u0000\\u0003\\u0001\\u0000\\u0001\\u0000\\u0000\\u0001\\u0001\\u0000\\u05FEZ/\ufffd\u34af\ufffd>\ufffd\\u0014>\ufffdS\ufffd\\u001C5\ufffd\\u0003%\ufffd~\ufffd\\bD\ufffdN\\u0007\ufffd\ufffd\\u0005s\\u0012\ufffd\\u0001\ufffd\ufffd\ufffd\\u0007\u0398;\ufffd\ufffdy\ufffd\ufffdw\ufffdv\\u001C\ufffd\\b\\u0006H \\f\u2703\ufffd\\\"\\u0001E\ufffd0\ufffdV)\ufffd\ufffd\ufffd\ufffdQIR\ufffd\ufffd*\ufffdgW\\u000F\ufffd:\ufffd\\\"p\ufffdY X6\ufffd\ufffd\u06c7-z?\\u007F\ufffd\ufffd\\b\ufffd\\u0019\ufffdk\ufffd\ufffd\\u0016R\ufffd1\ufffdgF}I>\ufffd\ufffdg\ufffd\ufffd,\u0452Z0\\u0001=\\u001DX\ufffd/\ufffd;.\ufffd\ufffdg0\\u0014\ufffd}\ufffd\ufffdb~tN\ufffd!I\ufffd\\u0017\ufffd@\ufffd[y\ufffd\ufffdi\ufffd@S\ufffdQ\ufffdX\ufffd\ufffdZxg%\ufffd\ufffd[\\u001C\ufffd'z8\ufffd\ufffd\u057b\ufffdh\u0181\\u0018|\\\\\u06f5\\u007F!\\u0017\\u0012i\ufffd\ufffd\u00b9\ufffdM\\t\ufffd<\ufffdI\ufffdS\ufffds\ufffd\u3b27\ufffdp\ufffd\ufffd\u0553\ufffdf~I\ufffd\\u000E\ufffd+\ufffd\ufffd\\u0016\\n\" +\n            \"pw\ufffd\\u001F}#\ufffd\\u007F\";", "modifier": "private static final", "type": "String", "declarator": "GOOD_KEY = \"\\u0000\\u0000\\u0000\\u0007ssh-rsa\\u0000\\u0000\\u0000\\u0003\\u0001\\u0000\\u0001\\u0000\\u0000\\u0001\\u0001\\u0000\\u05FEZ/\ufffd\u34af\ufffd>\ufffd\\u0014>\ufffdS\ufffd\\u001C5\ufffd\\u0003%\ufffd~\ufffd\\bD\ufffdN\\u0007\ufffd\ufffd\\u0005s\\u0012\ufffd\\u0001\ufffd\ufffd\ufffd\\u0007\u0398;\ufffd\ufffdy\ufffd\ufffdw\ufffdv\\u001C\ufffd\\b\\u0006H \\f\u2703\ufffd\\\"\\u0001E\ufffd0\ufffdV)\ufffd\ufffd\ufffd\ufffdQIR\ufffd\ufffd*\ufffdgW\\u000F\ufffd:\ufffd\\\"p\ufffdY X6\ufffd\ufffd\u06c7-z?\\u007F\ufffd\ufffd\\b\ufffd\\u0019\ufffdk\ufffd\ufffd\\u0016R\ufffd1\ufffdgF}I>\ufffd\ufffdg\ufffd\ufffd,\u0452Z0\\u0001=\\u001DX\ufffd/\ufffd;.\ufffd\ufffdg0\\u0014\ufffd}\ufffd\ufffdb~tN\ufffd!I\ufffd\\u0017\ufffd@\ufffd[y\ufffd\ufffdi\ufffd@S\ufffdQ\ufffdX\ufffd\ufffdZxg%\ufffd\ufffd[\\u001C\ufffd'z8\ufffd\ufffd\u057b\ufffdh\u0181\\u0018|\\\\\u06f5\\u007F!\\u0017\\u0012i\ufffd\ufffd\u00b9\ufffdM\\t\ufffd<\ufffdI\ufffdS\ufffds\ufffd\u3b27\ufffdp\ufffd\ufffd\u0553\ufffdf~I\ufffd\\u000E\ufffd+\ufffd\ufffd\\u0016\\n\" +\n            \"pw\ufffd\\u001F}#\ufffd\\u007F\";", "var_name": "GOOD_KEY"}, {"original_string": "@Rule\n    public ExpectedException exception = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "exception = ExpectedException.none()", "var_name": "exception"}, {"original_string": "@Mock\n    FossologyFingerPrintRepository connector;", "modifier": "@Mock", "type": "FossologyFingerPrintRepository", "declarator": "connector", "var_name": "connector"}, {"original_string": "@Mock\n    JSch jSch;", "modifier": "@Mock", "type": "JSch", "declarator": "jSch", "var_name": "jSch"}, {"original_string": "FossologyHostKeyRepository repo;", "modifier": "", "type": "FossologyHostKeyRepository", "declarator": "repo", "var_name": "repo"}], "file": "backend/src/src-fossology/src/test/java/org/eclipse/sw360/fossology/ssh/keyrepo/FossologyHostKeyRepositoryTest.java"}, "test_case": {"identifier": "testGetHostKey2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetHostKey2() {\n        assertThat(repo.getHostKey(\"\", \"\"), notNullValue());\n    }", "signature": "void testGetHostKey2()", "full_signature": "@Test public void testGetHostKey2()", "class_method_signature": "FossologyHostKeyRepositoryTest.testGetHostKey2()", "testcase": true, "constructor": false, "invocations": ["assertThat", "getHostKey", "notNullValue"]}, "focal_class": {"identifier": "FossologyHostKeyRepository", "superclass": "", "interfaces": "implements HostKeyRepository", "fields": [{"original_string": "private static final Logger log = getLogger(FossologyHostKeyRepository.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = getLogger(FossologyHostKeyRepository.class)", "var_name": "log"}, {"original_string": "private static final JSch J_SHC = new JSch();", "modifier": "private static final", "type": "JSch", "declarator": "J_SHC = new JSch()", "var_name": "J_SHC"}, {"original_string": "private final FossologyFingerPrintRepository hostKeyDb;", "modifier": "private final", "type": "FossologyFingerPrintRepository", "declarator": "hostKeyDb", "var_name": "hostKeyDb"}], "methods": [{"identifier": "FossologyHostKeyRepository", "parameters": "(FossologyFingerPrintRepository fossologyFingerPrintRepository)", "modifiers": "@Autowired public", "return": "", "signature": " FossologyHostKeyRepository(FossologyFingerPrintRepository fossologyFingerPrintRepository)", "full_signature": "@Autowired public  FossologyHostKeyRepository(FossologyFingerPrintRepository fossologyFingerPrintRepository)", "class_method_signature": "FossologyHostKeyRepository.FossologyHostKeyRepository(FossologyFingerPrintRepository fossologyFingerPrintRepository)", "testcase": false, "constructor": true}, {"identifier": "throwUnsupportedOperationException", "parameters": "()", "modifiers": "private", "return": "UnsupportedOperationException", "signature": "UnsupportedOperationException throwUnsupportedOperationException()", "full_signature": "private UnsupportedOperationException throwUnsupportedOperationException()", "class_method_signature": "FossologyHostKeyRepository.throwUnsupportedOperationException()", "testcase": false, "constructor": false}, {"identifier": "check", "parameters": "(String host, byte[] key)", "modifiers": "@Override public", "return": "int", "signature": "int check(String host, byte[] key)", "full_signature": "@Override public int check(String host, byte[] key)", "class_method_signature": "FossologyHostKeyRepository.check(String host, byte[] key)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(HostKey hostkey, UserInfo ui)", "modifiers": "@Override public", "return": "void", "signature": "void add(HostKey hostkey, UserInfo ui)", "full_signature": "@Override public void add(HostKey hostkey, UserInfo ui)", "class_method_signature": "FossologyHostKeyRepository.add(HostKey hostkey, UserInfo ui)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String host, String type)", "modifiers": "@Override public", "return": "void", "signature": "void remove(String host, String type)", "full_signature": "@Override public void remove(String host, String type)", "class_method_signature": "FossologyHostKeyRepository.remove(String host, String type)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String host, String type, byte[] key)", "modifiers": "@Override public", "return": "void", "signature": "void remove(String host, String type, byte[] key)", "full_signature": "@Override public void remove(String host, String type, byte[] key)", "class_method_signature": "FossologyHostKeyRepository.remove(String host, String type, byte[] key)", "testcase": false, "constructor": false}, {"identifier": "getKnownHostsRepositoryID", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getKnownHostsRepositoryID()", "full_signature": "@Override public String getKnownHostsRepositoryID()", "class_method_signature": "FossologyHostKeyRepository.getKnownHostsRepositoryID()", "testcase": false, "constructor": false}, {"identifier": "getHostKey", "parameters": "()", "modifiers": "@Override public", "return": "HostKey[]", "signature": "HostKey[] getHostKey()", "full_signature": "@Override public HostKey[] getHostKey()", "class_method_signature": "FossologyHostKeyRepository.getHostKey()", "testcase": false, "constructor": false}, {"identifier": "getHostKey", "parameters": "(String host, String type)", "modifiers": "@Override public", "return": "HostKey[]", "signature": "HostKey[] getHostKey(String host, String type)", "full_signature": "@Override public HostKey[] getHostKey(String host, String type)", "class_method_signature": "FossologyHostKeyRepository.getHostKey(String host, String type)", "testcase": false, "constructor": false}], "file": "backend/src/src-fossology/src/main/java/org/eclipse/sw360/fossology/ssh/keyrepo/FossologyHostKeyRepository.java"}, "focal_method": {"identifier": "getHostKey", "parameters": "()", "modifiers": "@Override public", "return": "HostKey[]", "body": "@Override\n    public HostKey[] getHostKey() {\n        return new HostKey[0];\n    }", "signature": "HostKey[] getHostKey()", "full_signature": "@Override public HostKey[] getHostKey()", "class_method_signature": "FossologyHostKeyRepository.getHostKey()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 43326581, "url": "https://github.com/sw360/sw360portal", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 31, "size": 8770, "license": "licensed"}}