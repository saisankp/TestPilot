{"test_class": {"identifier": "SchemaLoaderUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "spring-xml/src/test/java/org/springframework/xml/validation/SchemaLoaderUtilsTest.java"}, "test_case": {"identifier": "testLoadMultipleSchemas", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testLoadMultipleSchemas() throws Exception {\n\t\tResource envelope = new ClassPathResource(\"envelope.xsd\", getClass());\n\t\tResource encoding = new ClassPathResource(\"encoding.xsd\", getClass());\n\t\tSchema schema = SchemaLoaderUtils.loadSchema(new Resource[] { envelope, encoding },\n\t\t\t\tXMLConstants.W3C_XML_SCHEMA_NS_URI);\n\t\tAssert.assertNotNull(\"No schema returned\", schema);\n\t\tAssert.assertFalse(\"Resource not closed\", envelope.isOpen());\n\t\tAssert.assertFalse(\"Resource not closed\", encoding.isOpen());\n\t}", "signature": "void testLoadMultipleSchemas()", "full_signature": "@Test public void testLoadMultipleSchemas()", "class_method_signature": "SchemaLoaderUtilsTest.testLoadMultipleSchemas()", "testcase": true, "constructor": false, "invocations": ["getClass", "getClass", "loadSchema", "assertNotNull", "assertFalse", "isOpen", "assertFalse", "isOpen"]}, "focal_class": {"identifier": "SchemaLoaderUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "loadSchema", "parameters": "(Resource resource, String schemaLanguage)", "modifiers": "public static", "return": "Schema", "signature": "Schema loadSchema(Resource resource, String schemaLanguage)", "full_signature": "public static Schema loadSchema(Resource resource, String schemaLanguage)", "class_method_signature": "SchemaLoaderUtils.loadSchema(Resource resource, String schemaLanguage)", "testcase": false, "constructor": false}, {"identifier": "loadSchema", "parameters": "(Resource[] resources, String schemaLanguage)", "modifiers": "public static", "return": "Schema", "signature": "Schema loadSchema(Resource[] resources, String schemaLanguage)", "full_signature": "public static Schema loadSchema(Resource[] resources, String schemaLanguage)", "class_method_signature": "SchemaLoaderUtils.loadSchema(Resource[] resources, String schemaLanguage)", "testcase": false, "constructor": false}, {"identifier": "getSystemId", "parameters": "(Resource resource)", "modifiers": "public static", "return": "String", "signature": "String getSystemId(Resource resource)", "full_signature": "public static String getSystemId(Resource resource)", "class_method_signature": "SchemaLoaderUtils.getSystemId(Resource resource)", "testcase": false, "constructor": false}], "file": "spring-xml/src/main/java/org/springframework/xml/validation/SchemaLoaderUtils.java"}, "focal_method": {"identifier": "loadSchema", "parameters": "(Resource resource, String schemaLanguage)", "modifiers": "public static", "return": "Schema", "body": "public static Schema loadSchema(Resource resource, String schemaLanguage) throws IOException, SAXException {\n\t\treturn loadSchema(new Resource[] { resource }, schemaLanguage);\n\t}", "signature": "Schema loadSchema(Resource resource, String schemaLanguage)", "full_signature": "public static Schema loadSchema(Resource resource, String schemaLanguage)", "class_method_signature": "SchemaLoaderUtils.loadSchema(Resource resource, String schemaLanguage)", "testcase": false, "constructor": false, "invocations": ["loadSchema"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}