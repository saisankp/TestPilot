{"test_class": {"identifier": "SimplePropertyResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final SimplePropertyResolver resolver = new SimplePropertyResolver();", "modifier": "private final", "type": "SimplePropertyResolver", "declarator": "resolver = new SimplePropertyResolver()", "var_name": "resolver"}, {"original_string": "private final String propertyName = \"propertyName\";", "modifier": "private final", "type": "String", "declarator": "propertyName = \"propertyName\"", "var_name": "propertyName"}], "file": "seeking-core/src/test/java/com/eharmony/matching/seeking/translator/SimplePropertyResolverTest.java"}, "test_case": {"identifier": "resolve", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void resolve() {\n        assertEquals(propertyName, resolver.resolve(propertyName, Object.class));\n    }", "signature": "void resolve()", "full_signature": "@Test public void resolve()", "class_method_signature": "SimplePropertyResolverTest.resolve()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "resolve"]}, "focal_class": {"identifier": "SimplePropertyResolver", "superclass": "", "interfaces": "implements PropertyResolver", "fields": [], "methods": [{"identifier": "resolve", "parameters": "(String fieldName, Class<?> entityClass)", "modifiers": "@Override public", "return": "String", "signature": "String resolve(String fieldName, Class<?> entityClass)", "full_signature": "@Override public String resolve(String fieldName, Class<?> entityClass)", "class_method_signature": "SimplePropertyResolver.resolve(String fieldName, Class<?> entityClass)", "testcase": false, "constructor": false}], "file": "seeking-core/src/main/java/com/eharmony/matching/seeking/translator/SimplePropertyResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(String fieldName, Class<?> entityClass)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String resolve(String fieldName, Class<?> entityClass) {\n        return fieldName;\n    }", "signature": "String resolve(String fieldName, Class<?> entityClass)", "full_signature": "@Override public String resolve(String fieldName, Class<?> entityClass)", "class_method_signature": "SimplePropertyResolver.resolve(String fieldName, Class<?> entityClass)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9248683, "url": "https://github.com/eHarmony/seeking", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 7, "size": 194, "license": "licensed"}}