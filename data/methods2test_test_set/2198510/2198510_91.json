{"test_class": {"identifier": "TestBlobDeserializer", "superclass": "extends Assert", "interfaces": "", "fields": [{"original_string": "private String mini;", "modifier": "private", "type": "String", "declarator": "mini", "var_name": "mini"}], "file": "flume-ng-sinks/flume-ng-morphline-solr-sink/src/test/java/org/apache/flume/sink/solr/morphline/TestBlobDeserializer.java"}, "test_case": {"identifier": "testMaxLineLength", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testMaxLineLength() throws IOException {\n    String longLine = \"abcdefghijklmnopqrstuvwxyz\\n\";\n    Context ctx = new Context();\n    ctx.put(BlobDeserializer.MAX_BLOB_LENGTH_KEY, \"10\");\n\n    ResettableInputStream in = new ResettableTestStringInputStream(longLine);\n    EventDeserializer des = new BlobDeserializer(ctx, in);\n\n    assertEventBodyEquals(\"abcdefghij\", des.readEvent());\n    assertEventBodyEquals(\"klmnopqrst\", des.readEvent());\n    assertEventBodyEquals(\"uvwxyz\\n\", des.readEvent());\n    assertNull(des.readEvent());\n  }", "signature": "void testMaxLineLength()", "full_signature": "@Test public void testMaxLineLength()", "class_method_signature": "TestBlobDeserializer.testMaxLineLength()", "testcase": true, "constructor": false, "invocations": ["put", "assertEventBodyEquals", "readEvent", "assertEventBodyEquals", "readEvent", "assertEventBodyEquals", "readEvent", "assertNull", "readEvent"]}, "focal_class": {"identifier": "BlobDeserializer", "superclass": "", "interfaces": "implements EventDeserializer", "fields": [{"original_string": "private ResettableInputStream in;", "modifier": "private", "type": "ResettableInputStream", "declarator": "in", "var_name": "in"}, {"original_string": "private final int maxBlobLength;", "modifier": "private final", "type": "int", "declarator": "maxBlobLength", "var_name": "maxBlobLength"}, {"original_string": "private volatile boolean isOpen;", "modifier": "private volatile", "type": "boolean", "declarator": "isOpen", "var_name": "isOpen"}, {"original_string": "public static final String MAX_BLOB_LENGTH_KEY = \"maxBlobLength\";", "modifier": "public static final", "type": "String", "declarator": "MAX_BLOB_LENGTH_KEY = \"maxBlobLength\"", "var_name": "MAX_BLOB_LENGTH_KEY"}, {"original_string": "public static final int MAX_BLOB_LENGTH_DEFAULT = 100 * 1000 * 1000;", "modifier": "public static final", "type": "int", "declarator": "MAX_BLOB_LENGTH_DEFAULT = 100 * 1000 * 1000", "var_name": "MAX_BLOB_LENGTH_DEFAULT"}, {"original_string": "private static final int DEFAULT_BUFFER_SIZE = 1024 * 8;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_BUFFER_SIZE = 1024 * 8", "var_name": "DEFAULT_BUFFER_SIZE"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(BlobDeserializer.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(BlobDeserializer.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "BlobDeserializer", "parameters": "(Context context, ResettableInputStream in)", "modifiers": "protected", "return": "", "signature": " BlobDeserializer(Context context, ResettableInputStream in)", "full_signature": "protected  BlobDeserializer(Context context, ResettableInputStream in)", "class_method_signature": "BlobDeserializer.BlobDeserializer(Context context, ResettableInputStream in)", "testcase": false, "constructor": true}, {"identifier": "readEvent", "parameters": "()", "modifiers": "@SuppressWarnings(\"resource\") @Override public", "return": "Event", "signature": "Event readEvent()", "full_signature": "@SuppressWarnings(\"resource\") @Override public Event readEvent()", "class_method_signature": "BlobDeserializer.readEvent()", "testcase": false, "constructor": false}, {"identifier": "readEvents", "parameters": "(int numEvents)", "modifiers": "@Override public", "return": "List<Event>", "signature": "List<Event> readEvents(int numEvents)", "full_signature": "@Override public List<Event> readEvents(int numEvents)", "class_method_signature": "BlobDeserializer.readEvents(int numEvents)", "testcase": false, "constructor": false}, {"identifier": "mark", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void mark()", "full_signature": "@Override public void mark()", "class_method_signature": "BlobDeserializer.mark()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "BlobDeserializer.reset()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "BlobDeserializer.close()", "testcase": false, "constructor": false}, {"identifier": "ensureOpen", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void ensureOpen()", "full_signature": "private void ensureOpen()", "class_method_signature": "BlobDeserializer.ensureOpen()", "testcase": false, "constructor": false}], "file": "flume-ng-sinks/flume-ng-morphline-solr-sink/src/main/java/org/apache/flume/sink/solr/morphline/BlobDeserializer.java"}, "focal_method": {"identifier": "readEvent", "parameters": "()", "modifiers": "@SuppressWarnings(\"resource\") @Override public", "return": "Event", "body": "@SuppressWarnings(\"resource\")\n  @Override\n  public Event readEvent() throws IOException {\n    ensureOpen();\n    ByteArrayOutputStream blob = null;\n    byte[] buf = new byte[Math.min(maxBlobLength, DEFAULT_BUFFER_SIZE)];\n    int blobLength = 0;\n    int n = 0;\n    while ((n = in.read(buf, 0, Math.min(buf.length, maxBlobLength - blobLength))) != -1) {\n      if (blob == null) {\n        blob = new ByteArrayOutputStream(n);\n      }\n      blob.write(buf, 0, n);\n      blobLength += n;\n      if (blobLength >= maxBlobLength) {\n        LOGGER.warn(\"File length exceeds maxBlobLength ({}), truncating BLOB event!\",\n                    maxBlobLength);\n        break;\n      }\n    }\n    \n    if (blob == null) {\n      return null;\n    } else {\n      return EventBuilder.withBody(blob.toByteArray());\n    }\n  }", "signature": "Event readEvent()", "full_signature": "@SuppressWarnings(\"resource\") @Override public Event readEvent()", "class_method_signature": "BlobDeserializer.readEvent()", "testcase": false, "constructor": false, "invocations": ["ensureOpen", "min", "read", "min", "write", "warn", "withBody", "toByteArray"]}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}