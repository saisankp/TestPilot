{"test_class": {"identifier": "TraceableHttpClientRequestTest", "superclass": "extends Assert", "interfaces": "", "fields": [{"original_string": "private Request request;", "modifier": "private", "type": "Request", "declarator": "request", "var_name": "request"}, {"original_string": "private HttpClientRequest httpRequest;", "modifier": "private", "type": "HttpClientRequest", "declarator": "httpRequest", "var_name": "httpRequest"}], "file": "analytics/zipkin-tracing/src/test/java/org/wso2/msf4j/analytics/zipkintracing/TraceableHttpClientRequestTest.java"}, "test_case": {"identifier": "testAddHeader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddHeader() {\n        httpRequest.addHeader(\"testK\", \"testV\");\n        assertTrue(request.headers().get(\"testK\").contains(\"testV\"));\n    }", "signature": "void testAddHeader()", "full_signature": "@Test public void testAddHeader()", "class_method_signature": "TraceableHttpClientRequestTest.testAddHeader()", "testcase": true, "constructor": false, "invocations": ["addHeader", "assertTrue", "contains", "get", "headers"]}, "focal_class": {"identifier": "TraceableHttpClientRequest", "superclass": "", "interfaces": "implements HttpClientRequest", "fields": [{"original_string": "private final Request request;", "modifier": "private final", "type": "Request", "declarator": "request", "var_name": "request"}], "methods": [{"identifier": "TraceableHttpClientRequest", "parameters": "(Request request)", "modifiers": "public", "return": "", "signature": " TraceableHttpClientRequest(Request request)", "full_signature": "public  TraceableHttpClientRequest(Request request)", "class_method_signature": "TraceableHttpClientRequest.TraceableHttpClientRequest(Request request)", "testcase": false, "constructor": true}, {"identifier": "addHeader", "parameters": "(String header, String value)", "modifiers": "@Override public", "return": "void", "signature": "void addHeader(String header, String value)", "full_signature": "@Override public void addHeader(String header, String value)", "class_method_signature": "TraceableHttpClientRequest.addHeader(String header, String value)", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "()", "modifiers": "@Override public", "return": "URI", "signature": "URI getUri()", "full_signature": "@Override public URI getUri()", "class_method_signature": "TraceableHttpClientRequest.getUri()", "testcase": false, "constructor": false}, {"identifier": "getHttpMethod", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getHttpMethod()", "full_signature": "@Override public String getHttpMethod()", "class_method_signature": "TraceableHttpClientRequest.getHttpMethod()", "testcase": false, "constructor": false}], "file": "analytics/zipkin-tracing/src/main/java/org/wso2/msf4j/analytics/zipkintracing/TraceableHttpClientRequest.java"}, "focal_method": {"identifier": "addHeader", "parameters": "(String header, String value)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void addHeader(String header, String value) {\n        Collection<String> existingValues = request.headers().get(header);\n        if (existingValues == null) {\n            existingValues = new ArrayList<>();\n        }\n        existingValues.add(value);\n        request.headers().put(header, existingValues);\n    }", "signature": "void addHeader(String header, String value)", "full_signature": "@Override public void addHeader(String header, String value)", "class_method_signature": "TraceableHttpClientRequest.addHeader(String header, String value)", "testcase": false, "constructor": false, "invocations": ["get", "headers", "add", "put", "headers"]}, "repository": {"repo_id": 42847560, "url": "https://github.com/wso2/msf4j", "language": "Java", "is_fork": false, "fork_count": 337, "stargazer_count": 345, "size": 33285, "license": "licensed"}}