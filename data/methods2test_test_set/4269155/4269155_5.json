{"test_class": {"identifier": "EnvironmentScopeExtractorTest", "superclass": "", "interfaces": "", "fields": [], "file": "tiles-request-freemarker/src/test/java/org/apache/tiles/request/freemarker/extractor/EnvironmentScopeExtractorTest.java"}, "test_case": {"identifier": "testGetValueException", "parameters": "()", "modifiers": "@Test(expected = FreemarkerRequestException.class) public", "return": "void", "body": "@Test(expected = FreemarkerRequestException.class)\n    public void testGetValueException() throws TemplateModelException {\n        Template template = createMock(Template.class);\n        TemplateHashModel model = createMock(TemplateHashModel.class);\n        TemplateScalarModel valueModel = createMock(TemplateScalarModel.class);\n        Configuration configuration = createMock(Configuration.class);\n        ObjectWrapper objectWrapper = createMock(ObjectWrapper.class);\n        Writer writer = new StringWriter();\n\n        expect(template.getMacros()).andReturn(new HashMap<Object, Object>());\n        expect(model.get(\"key\")).andThrow(new TemplateModelException());\n\n        replay(template, model, valueModel, configuration, objectWrapper);\n        try {\n            Environment env = new Environment(template, model, writer);\n            EnvironmentScopeExtractor extractor = new EnvironmentScopeExtractor(env);\n            extractor.getValue(\"key\");\n        } finally {\n            verify(template, model, valueModel, configuration, objectWrapper);\n        }\n    }", "signature": "void testGetValueException()", "full_signature": "@Test(expected = FreemarkerRequestException.class) public void testGetValueException()", "class_method_signature": "EnvironmentScopeExtractorTest.testGetValueException()", "testcase": true, "constructor": false, "invocations": ["createMock", "createMock", "createMock", "createMock", "createMock", "andReturn", "expect", "getMacros", "andThrow", "expect", "get", "replay", "getValue", "verify"]}, "focal_class": {"identifier": "EnvironmentScopeExtractor", "superclass": "", "interfaces": "implements AttributeExtractor", "fields": [{"original_string": "private Environment request;", "modifier": "private", "type": "Environment", "declarator": "request", "var_name": "request"}], "methods": [{"identifier": "EnvironmentScopeExtractor", "parameters": "(Environment request)", "modifiers": "public", "return": "", "signature": " EnvironmentScopeExtractor(Environment request)", "full_signature": "public  EnvironmentScopeExtractor(Environment request)", "class_method_signature": "EnvironmentScopeExtractor.EnvironmentScopeExtractor(Environment request)", "testcase": false, "constructor": true}, {"identifier": "removeValue", "parameters": "(String name)", "modifiers": "@Override public", "return": "void", "signature": "void removeValue(String name)", "full_signature": "@Override public void removeValue(String name)", "class_method_signature": "EnvironmentScopeExtractor.removeValue(String name)", "testcase": false, "constructor": false}, {"identifier": "getKeys", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "Enumeration<String>", "signature": "Enumeration<String> getKeys()", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public Enumeration<String> getKeys()", "class_method_signature": "EnvironmentScopeExtractor.getKeys()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(String key)", "modifiers": "@Override public", "return": "Object", "signature": "Object getValue(String key)", "full_signature": "@Override public Object getValue(String key)", "class_method_signature": "EnvironmentScopeExtractor.getValue(String key)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(String key, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(String key, Object value)", "full_signature": "@Override public void setValue(String key, Object value)", "class_method_signature": "EnvironmentScopeExtractor.setValue(String key, Object value)", "testcase": false, "constructor": false}], "file": "tiles-request-freemarker/src/main/java/org/apache/tiles/request/freemarker/extractor/EnvironmentScopeExtractor.java"}, "focal_method": {"identifier": "getValue", "parameters": "(String key)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object getValue(String key) {\n        try {\n            TemplateModel variable = request.getVariable(key);\n            if (variable != null) {\n                return DeepUnwrap.unwrap(variable);\n            }\n            return null;\n        } catch (TemplateModelException e) {\n            throw new FreemarkerRequestException(\"Cannot get attribute with name '\" + key + \"'\", e);\n        }\n    }", "signature": "Object getValue(String key)", "full_signature": "@Override public Object getValue(String key)", "class_method_signature": "EnvironmentScopeExtractor.getValue(String key)", "testcase": false, "constructor": false, "invocations": ["getVariable", "unwrap"]}, "repository": {"repo_id": 4269155, "url": "https://github.com/apache/tiles-request", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 865, "license": "licensed"}}