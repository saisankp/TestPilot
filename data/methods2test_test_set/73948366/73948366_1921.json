{"test_class": {"identifier": "SSHCertificateTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/zts/src/test/java/com/yahoo/athenz/zts/SSHCertificateTest.java"}, "test_case": {"identifier": "testSSHCertRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSSHCertRequest() {\n\n        SSHCertRequest req1 = new SSHCertRequest();\n        SSHCertRequest req2 = new SSHCertRequest();\n\n        assertEquals(req1, req2);\n        assertEquals(req1, req1);\n\n        SSHCertRequestMeta meta1 = new SSHCertRequestMeta();\n        SSHCertRequestMeta meta2 = new SSHCertRequestMeta();\n\n        meta1.setRequestor(\"req1\");\n        meta2.setRequestor(\"req2\");\n\n        SSHCertRequestData data1 = new SSHCertRequestData();\n        SSHCertRequestData data2 = new SSHCertRequestData();\n\n        data1.setPublicKey(\"publickey1\");\n        data2.setPublicKey(\"publickey2\");\n\n        req1.setCsr(\"csr1\");\n        assertEquals(\"csr1\", req1.getCsr());\n\n        req1.setCertRequestData(data1);\n        assertEquals(data1, req1.getCertRequestData());\n\n        req1.setCertRequestMeta(meta1);\n        assertEquals(meta1, req1.getCertRequestMeta());\n\n        req2.setCertRequestData(data2);\n        req2.setCertRequestMeta(meta2);\n\n        assertNotEquals(req1, req2);\n\n        data2.setPublicKey(\"publickey1\");\n        assertNotEquals(req1, req2);\n\n        meta2.setRequestor(\"req1\");\n        assertNotEquals(req1, req2);\n\n        req2.setCsr(\"csr2\");\n        assertNotEquals(req1, req2);\n\n        req2.setCsr(\"csr1\");\n        assertEquals(req1, req2);\n\n        assertNotEquals(null, req1);\n        assertNotEquals(\"data\", req1);\n    }", "signature": "void testSSHCertRequest()", "full_signature": "@Test public void testSSHCertRequest()", "class_method_signature": "SSHCertificateTest.testSSHCertRequest()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "assertEquals", "setRequestor", "setRequestor", "setPublicKey", "setPublicKey", "setCsr", "assertEquals", "getCsr", "setCertRequestData", "assertEquals", "getCertRequestData", "setCertRequestMeta", "assertEquals", "getCertRequestMeta", "setCertRequestData", "setCertRequestMeta", "assertNotEquals", "setPublicKey", "assertNotEquals", "setRequestor", "assertNotEquals", "setCsr", "assertNotEquals", "setCsr", "assertEquals", "assertNotEquals", "assertNotEquals"]}, "focal_class": {"identifier": "SSHCertificate", "superclass": "", "interfaces": "", "fields": [{"original_string": "public String certificate;", "modifier": "public", "type": "String", "declarator": "certificate", "var_name": "certificate"}, {"original_string": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public String publicKey;", "modifier": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public", "type": "String", "declarator": "publicKey", "var_name": "publicKey"}, {"original_string": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public String privateKey;", "modifier": "@RdlOptional\n    @JsonInclude(JsonInclude.Include.NON_EMPTY)\n    public", "type": "String", "declarator": "privateKey", "var_name": "privateKey"}], "methods": [{"identifier": "setCertificate", "parameters": "(String certificate)", "modifiers": "public", "return": "SSHCertificate", "signature": "SSHCertificate setCertificate(String certificate)", "full_signature": "public SSHCertificate setCertificate(String certificate)", "class_method_signature": "SSHCertificate.setCertificate(String certificate)", "testcase": false, "constructor": false}, {"identifier": "getCertificate", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCertificate()", "full_signature": "public String getCertificate()", "class_method_signature": "SSHCertificate.getCertificate()", "testcase": false, "constructor": false}, {"identifier": "setPublicKey", "parameters": "(String publicKey)", "modifiers": "public", "return": "SSHCertificate", "signature": "SSHCertificate setPublicKey(String publicKey)", "full_signature": "public SSHCertificate setPublicKey(String publicKey)", "class_method_signature": "SSHCertificate.setPublicKey(String publicKey)", "testcase": false, "constructor": false}, {"identifier": "getPublicKey", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPublicKey()", "full_signature": "public String getPublicKey()", "class_method_signature": "SSHCertificate.getPublicKey()", "testcase": false, "constructor": false}, {"identifier": "setPrivateKey", "parameters": "(String privateKey)", "modifiers": "public", "return": "SSHCertificate", "signature": "SSHCertificate setPrivateKey(String privateKey)", "full_signature": "public SSHCertificate setPrivateKey(String privateKey)", "class_method_signature": "SSHCertificate.setPrivateKey(String privateKey)", "testcase": false, "constructor": false}, {"identifier": "getPrivateKey", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPrivateKey()", "full_signature": "public String getPrivateKey()", "class_method_signature": "SSHCertificate.getPrivateKey()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object another)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object another)", "full_signature": "@Override public boolean equals(Object another)", "class_method_signature": "SSHCertificate.equals(Object another)", "testcase": false, "constructor": false}], "file": "core/zts/src/main/java/com/yahoo/athenz/zts/SSHCertificate.java"}, "focal_method": {"identifier": "setPublicKey", "parameters": "(String publicKey)", "modifiers": "public", "return": "SSHCertificate", "body": "public SSHCertificate setPublicKey(String publicKey) {\n        this.publicKey = publicKey;\n        return this;\n    }", "signature": "SSHCertificate setPublicKey(String publicKey)", "full_signature": "public SSHCertificate setPublicKey(String publicKey)", "class_method_signature": "SSHCertificate.setPublicKey(String publicKey)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}