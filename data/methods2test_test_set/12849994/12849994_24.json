{"test_class": {"identifier": "ImcacheCacheManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  BaseCacheBuilder builder;", "modifier": "@Mock", "type": "BaseCacheBuilder", "declarator": "builder", "var_name": "builder"}, {"original_string": "@Mock\n  SearchableCache<Object, Object> cache;", "modifier": "@Mock", "type": "SearchableCache<Object, Object>", "declarator": "cache", "var_name": "cache"}, {"original_string": "ImcacheCacheManager cacheManager;", "modifier": "", "type": "ImcacheCacheManager", "declarator": "cacheManager", "var_name": "cacheManager"}, {"original_string": "String cacheName = \"cache\";", "modifier": "", "type": "String", "declarator": "cacheName = \"cache\"", "var_name": "cacheName"}], "file": "imcache-spring/src/test/java/com/cetsoft/imcache/spring/ImcacheCacheManagerTest.java"}, "test_case": {"identifier": "getCache", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getCache() {\n    assertEquals(cache, cacheManager.getCache(cacheName).getNativeCache());\n  }", "signature": "void getCache()", "full_signature": "@Test public void getCache()", "class_method_signature": "ImcacheCacheManagerTest.getCache()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getNativeCache", "getCache"]}, "focal_class": {"identifier": "ImcacheCacheManager", "superclass": "", "interfaces": "implements CacheManager, InitializingBean", "fields": [{"original_string": "private final ConcurrentMap<String, Cache> caches = new ConcurrentHashMap<String, Cache>();", "modifier": "private final", "type": "ConcurrentMap<String, Cache>", "declarator": "caches = new ConcurrentHashMap<String, Cache>()", "var_name": "caches"}, {"original_string": "private BaseCacheBuilder cacheBuilder;", "modifier": "private", "type": "BaseCacheBuilder", "declarator": "cacheBuilder", "var_name": "cacheBuilder"}], "methods": [{"identifier": "ImcacheCacheManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " ImcacheCacheManager()", "full_signature": "public  ImcacheCacheManager()", "class_method_signature": "ImcacheCacheManager.ImcacheCacheManager()", "testcase": false, "constructor": true}, {"identifier": "ImcacheCacheManager", "parameters": "(BaseCacheBuilder cacheBuilder)", "modifiers": "public", "return": "", "signature": " ImcacheCacheManager(BaseCacheBuilder cacheBuilder)", "full_signature": "public  ImcacheCacheManager(BaseCacheBuilder cacheBuilder)", "class_method_signature": "ImcacheCacheManager.ImcacheCacheManager(BaseCacheBuilder cacheBuilder)", "testcase": false, "constructor": true}, {"identifier": "getCache", "parameters": "(final String name)", "modifiers": "public", "return": "Cache", "signature": "Cache getCache(final String name)", "full_signature": "public Cache getCache(final String name)", "class_method_signature": "ImcacheCacheManager.getCache(final String name)", "testcase": false, "constructor": false}, {"identifier": "getCacheNames", "parameters": "()", "modifiers": "public", "return": "Collection<String>", "signature": "Collection<String> getCacheNames()", "full_signature": "public Collection<String> getCacheNames()", "class_method_signature": "ImcacheCacheManager.getCacheNames()", "testcase": false, "constructor": false}, {"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void afterPropertiesSet()", "full_signature": "public void afterPropertiesSet()", "class_method_signature": "ImcacheCacheManager.afterPropertiesSet()", "testcase": false, "constructor": false}, {"identifier": "getCacheBuilder", "parameters": "()", "modifiers": "public", "return": "BaseCacheBuilder", "signature": "BaseCacheBuilder getCacheBuilder()", "full_signature": "public BaseCacheBuilder getCacheBuilder()", "class_method_signature": "ImcacheCacheManager.getCacheBuilder()", "testcase": false, "constructor": false}, {"identifier": "setCacheBuilder", "parameters": "(BaseCacheBuilder cacheBuilder)", "modifiers": "public", "return": "void", "signature": "void setCacheBuilder(BaseCacheBuilder cacheBuilder)", "full_signature": "public void setCacheBuilder(BaseCacheBuilder cacheBuilder)", "class_method_signature": "ImcacheCacheManager.setCacheBuilder(BaseCacheBuilder cacheBuilder)", "testcase": false, "constructor": false}], "file": "imcache-spring/src/main/java/com/cetsoft/imcache/spring/ImcacheCacheManager.java"}, "focal_method": {"identifier": "getCache", "parameters": "(final String name)", "modifiers": "public", "return": "Cache", "body": "public Cache getCache(final String name) {\n    return caches\n        .computeIfAbsent(name, (cacheName) -> new ImcacheCache(cacheBuilder.build(cacheName)));\n  }", "signature": "Cache getCache(final String name)", "full_signature": "public Cache getCache(final String name)", "class_method_signature": "ImcacheCacheManager.getCache(final String name)", "testcase": false, "constructor": false, "invocations": ["computeIfAbsent", "build"]}, "repository": {"repo_id": 12849994, "url": "https://github.com/Cetsoft/imcache", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 121, "size": 1599, "license": "licensed"}}