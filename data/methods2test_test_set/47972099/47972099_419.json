{"test_class": {"identifier": "NFATest", "superclass": "extends TestLogger", "interfaces": "", "fields": [], "file": "flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFATest.java"}, "test_case": {"identifier": "testStateNameGeneration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testStateNameGeneration() {\n\t\tString expectedName1 = \"a[2]\";\n\t\tString expectedName2 = \"a_3\";\n\t\tString expectedName3 = \"a[][42]\";\n\n\t\tString generatedName1 = NFA.generateStateName(\"a[]\", 2);\n\t\tString generatedName2 = NFA.generateStateName(\"a\", 3);\n\t\tString generatedName3 = NFA.generateStateName(\"a[][]\", 42);\n\n\n\t\tassertEquals(expectedName1, generatedName1);\n\t\tassertEquals(expectedName2, generatedName2);\n\t\tassertEquals(expectedName3, generatedName3);\n\t}", "signature": "void testStateNameGeneration()", "full_signature": "@Test public void testStateNameGeneration()", "class_method_signature": "NFATest.testStateNameGeneration()", "testcase": true, "constructor": false, "invocations": ["generateStateName", "generateStateName", "generateStateName", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "NFA", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final Pattern namePattern = Pattern.compile(\"^(.*\\\\[)(\\\\])$\");", "modifier": "private static final", "type": "Pattern", "declarator": "namePattern = Pattern.compile(\"^(.*\\\\[)(\\\\])$\")", "var_name": "namePattern"}, {"original_string": "private static final long serialVersionUID = 2957674889294717265L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 2957674889294717265L", "var_name": "serialVersionUID"}, {"original_string": "private final NonDuplicatingTypeSerializer<T> nonDuplicatingTypeSerializer;", "modifier": "private final", "type": "NonDuplicatingTypeSerializer<T>", "declarator": "nonDuplicatingTypeSerializer", "var_name": "nonDuplicatingTypeSerializer"}, {"original_string": "private final SharedBuffer<State<T>, T> sharedBuffer;", "modifier": "private final", "type": "SharedBuffer<State<T>, T>", "declarator": "sharedBuffer", "var_name": "sharedBuffer"}, {"original_string": "private final Set<State<T>> states;", "modifier": "private final", "type": "Set<State<T>>", "declarator": "states", "var_name": "states"}, {"original_string": "private final long windowTime;", "modifier": "private final", "type": "long", "declarator": "windowTime", "var_name": "windowTime"}, {"original_string": "private int startEventCounter;", "modifier": "private", "type": "int", "declarator": "startEventCounter", "var_name": "startEventCounter"}, {"original_string": "private transient Queue<ComputationState<T>> computationStates;", "modifier": "private transient", "type": "Queue<ComputationState<T>>", "declarator": "computationStates", "var_name": "computationStates"}], "methods": [{"identifier": "NFA", "parameters": "(final TypeSerializer<T> eventSerializer, final long windowTime)", "modifiers": "public", "return": "", "signature": " NFA(final TypeSerializer<T> eventSerializer, final long windowTime)", "full_signature": "public  NFA(final TypeSerializer<T> eventSerializer, final long windowTime)", "class_method_signature": "NFA.NFA(final TypeSerializer<T> eventSerializer, final long windowTime)", "testcase": false, "constructor": true}, {"identifier": "getStates", "parameters": "()", "modifiers": "public", "return": "Set<State<T>>", "signature": "Set<State<T>> getStates()", "full_signature": "public Set<State<T>> getStates()", "class_method_signature": "NFA.getStates()", "testcase": false, "constructor": false}, {"identifier": "addStates", "parameters": "(final Collection<State<T>> newStates)", "modifiers": "public", "return": "void", "signature": "void addStates(final Collection<State<T>> newStates)", "full_signature": "public void addStates(final Collection<State<T>> newStates)", "class_method_signature": "NFA.addStates(final Collection<State<T>> newStates)", "testcase": false, "constructor": false}, {"identifier": "addState", "parameters": "(final State<T> state)", "modifiers": "public", "return": "void", "signature": "void addState(final State<T> state)", "full_signature": "public void addState(final State<T> state)", "class_method_signature": "NFA.addState(final State<T> state)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(final T event, final long timestamp)", "modifiers": "public", "return": "Collection<Map<String, T>>", "signature": "Collection<Map<String, T>> process(final T event, final long timestamp)", "full_signature": "public Collection<Map<String, T>> process(final T event, final long timestamp)", "class_method_signature": "NFA.process(final T event, final long timestamp)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "NFA.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "NFA.hashCode()", "testcase": false, "constructor": false}, {"identifier": "computeNextStates", "parameters": "(\n\t\t\tfinal ComputationState<T> computationState,\n\t\t\tfinal T event,\n\t\t\tfinal long timestamp)", "modifiers": "private", "return": "Collection<ComputationState<T>>", "signature": "Collection<ComputationState<T>> computeNextStates(\n\t\t\tfinal ComputationState<T> computationState,\n\t\t\tfinal T event,\n\t\t\tfinal long timestamp)", "full_signature": "private Collection<ComputationState<T>> computeNextStates(\n\t\t\tfinal ComputationState<T> computationState,\n\t\t\tfinal T event,\n\t\t\tfinal long timestamp)", "class_method_signature": "NFA.computeNextStates(\n\t\t\tfinal ComputationState<T> computationState,\n\t\t\tfinal T event,\n\t\t\tfinal long timestamp)", "testcase": false, "constructor": false}, {"identifier": "extractPatternMatches", "parameters": "(final ComputationState<T> computationState)", "modifiers": "private", "return": "Collection<Map<String, T>>", "signature": "Collection<Map<String, T>> extractPatternMatches(final ComputationState<T> computationState)", "full_signature": "private Collection<Map<String, T>> extractPatternMatches(final ComputationState<T> computationState)", "class_method_signature": "NFA.extractPatternMatches(final ComputationState<T> computationState)", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream oos)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream oos)", "full_signature": "private void writeObject(ObjectOutputStream oos)", "class_method_signature": "NFA.writeObject(ObjectOutputStream oos)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream ois)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream ois)", "full_signature": "private void readObject(ObjectInputStream ois)", "class_method_signature": "NFA.readObject(ObjectInputStream ois)", "testcase": false, "constructor": false}, {"identifier": "writeComputationState", "parameters": "(final ComputationState<T> computationState, final ObjectOutputStream oos)", "modifiers": "private", "return": "void", "signature": "void writeComputationState(final ComputationState<T> computationState, final ObjectOutputStream oos)", "full_signature": "private void writeComputationState(final ComputationState<T> computationState, final ObjectOutputStream oos)", "class_method_signature": "NFA.writeComputationState(final ComputationState<T> computationState, final ObjectOutputStream oos)", "testcase": false, "constructor": false}, {"identifier": "readComputationState", "parameters": "(ObjectInputStream ois)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "ComputationState<T>", "signature": "ComputationState<T> readComputationState(ObjectInputStream ois)", "full_signature": "@SuppressWarnings(\"unchecked\") private ComputationState<T> readComputationState(ObjectInputStream ois)", "class_method_signature": "NFA.readComputationState(ObjectInputStream ois)", "testcase": false, "constructor": false}, {"identifier": "generateStateName", "parameters": "(final String name, final int index)", "modifiers": "static", "return": "String", "signature": "String generateStateName(final String name, final int index)", "full_signature": "static String generateStateName(final String name, final int index)", "class_method_signature": "NFA.generateStateName(final String name, final int index)", "testcase": false, "constructor": false}], "file": "flink-libraries/flink-cep/src/main/java/org/apache/flink/cep/nfa/NFA.java"}, "focal_method": {"identifier": "generateStateName", "parameters": "(final String name, final int index)", "modifiers": "static", "return": "String", "body": "static String generateStateName(final String name, final int index) {\n\t\tMatcher matcher = namePattern.matcher(name);\n\n\t\tif (matcher.matches()) {\n\t\t\treturn matcher.group(1) + index + matcher.group(2);\n\t\t} else {\n\t\t\treturn name + \"_\" + index;\n\t\t}\n\t}", "signature": "String generateStateName(final String name, final int index)", "full_signature": "static String generateStateName(final String name, final int index)", "class_method_signature": "NFA.generateStateName(final String name, final int index)", "testcase": false, "constructor": false, "invocations": ["matcher", "matches", "group", "group"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}