{"test_class": {"identifier": "ServerClientTest", "superclass": "extends AbstractServersSdkTest", "interfaces": "", "fields": [{"original_string": "@Inject\n    private ServerService serverService;", "modifier": "@Inject\n    private", "type": "ServerService", "declarator": "serverService", "var_name": "serverService"}, {"original_string": "@Inject\n    private ServerClient serverClient;", "modifier": "@Inject\n    private", "type": "ServerClient", "declarator": "serverClient", "var_name": "serverClient"}], "file": "sdk/src/test/java/com/centurylink/cloud/sdk/server/services/client/ServerClientTest.java"}, "test_case": {"identifier": "getServerCredentialsTest", "parameters": "()", "modifiers": "@Test(groups = {INTEGRATION, LONG_RUNNING}) public", "return": "void", "body": "@Test(groups = {INTEGRATION, LONG_RUNNING})\n    public void getServerCredentialsTest() {\n        ServerMetadata server = serverService.findByRef(SingleServerFixture.server());\n\n        ServerCredentials credentials = serverClient.getServerCredentials(server.getName());\n\n        assertNotNull(credentials);\n        assertNotNull(credentials.getPassword());\n        assertNotNull(credentials.getUserName());\n        assertFalse(credentials.getPassword().isEmpty());\n        assertFalse(credentials.getUserName().isEmpty());\n    }", "signature": "void getServerCredentialsTest()", "full_signature": "@Test(groups = {INTEGRATION, LONG_RUNNING}) public void getServerCredentialsTest()", "class_method_signature": "ServerClientTest.getServerCredentialsTest()", "testcase": true, "constructor": false, "invocations": ["findByRef", "server", "getServerCredentials", "getName", "assertNotNull", "assertNotNull", "getPassword", "assertNotNull", "getUserName", "assertFalse", "isEmpty", "getPassword", "assertFalse", "isEmpty", "getUserName"]}, "focal_class": {"identifier": "ServerClient", "superclass": "extends AuthenticatedSdkHttpClient", "interfaces": "", "fields": [{"original_string": "private static final String SERVER_ID = \"serverId\";", "modifier": "private static final", "type": "String", "declarator": "SERVER_ID = \"serverId\"", "var_name": "SERVER_ID"}, {"original_string": "private static final String GROUP_ID = \"groupId\";", "modifier": "private static final", "type": "String", "declarator": "GROUP_ID = \"groupId\"", "var_name": "GROUP_ID"}, {"original_string": "private static final String PUBLIC_IP = \"publicIp\";", "modifier": "private static final", "type": "String", "declarator": "PUBLIC_IP = \"publicIp\"", "var_name": "PUBLIC_IP"}, {"original_string": "private static final String SERVER_URL = \"/servers/{accountAlias}\";", "modifier": "private static final", "type": "String", "declarator": "SERVER_URL = \"/servers/{accountAlias}\"", "var_name": "SERVER_URL"}, {"original_string": "private static final String SERVER_URL_WITH_ID = SERVER_URL + \"/{serverId}\";", "modifier": "private static final", "type": "String", "declarator": "SERVER_URL_WITH_ID = SERVER_URL + \"/{serverId}\"", "var_name": "SERVER_URL_WITH_ID"}, {"original_string": "private static final String WITH_PUBLIC_IP = \"/publicIPAddresses/{publicIp}\";", "modifier": "private static final", "type": "String", "declarator": "WITH_PUBLIC_IP = \"/publicIPAddresses/{publicIp}\"", "var_name": "WITH_PUBLIC_IP"}], "methods": [{"identifier": "ServerClient", "parameters": "(BearerAuthentication authFilter, SdkConfiguration config)", "modifiers": "public", "return": "", "signature": " ServerClient(BearerAuthentication authFilter, SdkConfiguration config)", "full_signature": "public  ServerClient(BearerAuthentication authFilter, SdkConfiguration config)", "class_method_signature": "ServerClient.ServerClient(BearerAuthentication authFilter, SdkConfiguration config)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(CreateServerRequest request)", "modifiers": "public", "return": "BaseServerResponse", "signature": "BaseServerResponse create(CreateServerRequest request)", "full_signature": "public BaseServerResponse create(CreateServerRequest request)", "class_method_signature": "ServerClient.create(CreateServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "(CloneServerRequest request)", "modifiers": "public", "return": "BaseServerResponse", "signature": "BaseServerResponse clone(CloneServerRequest request)", "full_signature": "public BaseServerResponse clone(CloneServerRequest request)", "class_method_signature": "ServerClient.clone(CloneServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "importServer", "parameters": "(ImportServerRequest request)", "modifiers": "public", "return": "BaseServerResponse", "signature": "BaseServerResponse importServer(ImportServerRequest request)", "full_signature": "public BaseServerResponse importServer(ImportServerRequest request)", "class_method_signature": "ServerClient.importServer(ImportServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(String serverId)", "modifiers": "public", "return": "BaseServerResponse", "signature": "BaseServerResponse delete(String serverId)", "full_signature": "public BaseServerResponse delete(String serverId)", "class_method_signature": "ServerClient.delete(String serverId)", "testcase": false, "constructor": false}, {"identifier": "findServerByUuid", "parameters": "(String uuid)", "modifiers": "public", "return": "ServerMetadata", "signature": "ServerMetadata findServerByUuid(String uuid)", "full_signature": "public ServerMetadata findServerByUuid(String uuid)", "class_method_signature": "ServerClient.findServerByUuid(String uuid)", "testcase": false, "constructor": false}, {"identifier": "findServerById", "parameters": "(String id)", "modifiers": "public", "return": "ServerMetadata", "signature": "ServerMetadata findServerById(String id)", "full_signature": "public ServerMetadata findServerById(String id)", "class_method_signature": "ServerClient.findServerById(String id)", "testcase": false, "constructor": false}, {"identifier": "modify", "parameters": "(String serverId, List<ModifyServerRequest> request)", "modifiers": "public", "return": "Link", "signature": "Link modify(String serverId, List<ModifyServerRequest> request)", "full_signature": "public Link modify(String serverId, List<ModifyServerRequest> request)", "class_method_signature": "ServerClient.modify(String serverId, List<ModifyServerRequest> request)", "testcase": false, "constructor": false}, {"identifier": "getGroup", "parameters": "(String rootGroupId, boolean includeServerDetails)", "modifiers": "public", "return": "GroupMetadata", "signature": "GroupMetadata getGroup(String rootGroupId, boolean includeServerDetails)", "full_signature": "public GroupMetadata getGroup(String rootGroupId, boolean includeServerDetails)", "class_method_signature": "ServerClient.getGroup(String rootGroupId, boolean includeServerDetails)", "testcase": false, "constructor": false}, {"identifier": "createGroup", "parameters": "(CreateGroupRequest createGroupRequest)", "modifiers": "public", "return": "GroupMetadata", "signature": "GroupMetadata createGroup(CreateGroupRequest createGroupRequest)", "full_signature": "public GroupMetadata createGroup(CreateGroupRequest createGroupRequest)", "class_method_signature": "ServerClient.createGroup(CreateGroupRequest createGroupRequest)", "testcase": false, "constructor": false}, {"identifier": "updateGroup", "parameters": "(String groupId, UpdateGroupRequest updateGroupRequest)", "modifiers": "public", "return": "boolean", "signature": "boolean updateGroup(String groupId, UpdateGroupRequest updateGroupRequest)", "full_signature": "public boolean updateGroup(String groupId, UpdateGroupRequest updateGroupRequest)", "class_method_signature": "ServerClient.updateGroup(String groupId, UpdateGroupRequest updateGroupRequest)", "testcase": false, "constructor": false}, {"identifier": "deleteGroup", "parameters": "(String groupId)", "modifiers": "public", "return": "Link", "signature": "Link deleteGroup(String groupId)", "full_signature": "public Link deleteGroup(String groupId)", "class_method_signature": "ServerClient.deleteGroup(String groupId)", "testcase": false, "constructor": false}, {"identifier": "powerOn", "parameters": "(List<String> serverIdList)", "modifiers": "public", "return": "BaseServerListResponse", "signature": "BaseServerListResponse powerOn(List<String> serverIdList)", "full_signature": "public BaseServerListResponse powerOn(List<String> serverIdList)", "class_method_signature": "ServerClient.powerOn(List<String> serverIdList)", "testcase": false, "constructor": false}, {"identifier": "powerOff", "parameters": "(List<String> serverIdList)", "modifiers": "public", "return": "BaseServerListResponse", "signature": "BaseServerListResponse powerOff(List<String> serverIdList)", "full_signature": "public BaseServerListResponse powerOff(List<String> serverIdList)", "class_method_signature": "ServerClient.powerOff(List<String> serverIdList)", "testcase": false, "constructor": false}, {"identifier": "startMaintenance", "parameters": "(List<String> serverIdList)", "modifiers": "public", "return": "BaseServerListResponse", "signature": "BaseServerListResponse startMaintenance(List<String> serverIdList)", "full_signature": "public BaseServerListResponse startMaintenance(List<String> serverIdList)", "class_method_signature": "ServerClient.startMaintenance(List<String> serverIdList)", "testcase": false, "constructor": false}, {"identifier": "stopMaintenance", "parameters": "(List<String> serverIdList)", "modifiers": "public", "return": "BaseServerListResponse", "signature": "BaseServerListResponse stopMaintenance(List<String> serverIdList)", "full_signature": "public BaseServerListResponse stopMaintenance(List<String> serverIdList)", "class_method_signature": "ServerClient.stopMaintenance(List<String> serverIdList)", "testcase": false, "constructor": false}, {"identifier": "pause", "parameters": "(List<String> serverIdList)", "modifiers": "public", "return": "BaseServerListResponse", "signature": "BaseServerListResponse pause(List<String> serverIdList)", "full_signature": "public BaseServerListResponse pause(List<String> serverIdList)", "class_method_signature": "ServerClient.pause(List<String> serverIdList)", "testcase": false, "constructor": false}, {"identifier": "reboot", "parameters": "(List<String> serverIdList)", "modifiers": "public", "return": "BaseServerListResponse", "signature": "BaseServerListResponse reboot(List<String> serverIdList)", "full_signature": "public BaseServerListResponse reboot(List<String> serverIdList)", "class_method_signature": "ServerClient.reboot(List<String> serverIdList)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "(List<String> serverIdList)", "modifiers": "public", "return": "BaseServerListResponse", "signature": "BaseServerListResponse reset(List<String> serverIdList)", "full_signature": "public BaseServerListResponse reset(List<String> serverIdList)", "class_method_signature": "ServerClient.reset(List<String> serverIdList)", "testcase": false, "constructor": false}, {"identifier": "shutDown", "parameters": "(List<String> serverIdList)", "modifiers": "public", "return": "BaseServerListResponse", "signature": "BaseServerListResponse shutDown(List<String> serverIdList)", "full_signature": "public BaseServerListResponse shutDown(List<String> serverIdList)", "class_method_signature": "ServerClient.shutDown(List<String> serverIdList)", "testcase": false, "constructor": false}, {"identifier": "archive", "parameters": "(List<String> serverIdList)", "modifiers": "public", "return": "BaseServerListResponse", "signature": "BaseServerListResponse archive(List<String> serverIdList)", "full_signature": "public BaseServerListResponse archive(List<String> serverIdList)", "class_method_signature": "ServerClient.archive(List<String> serverIdList)", "testcase": false, "constructor": false}, {"identifier": "createSnapshot", "parameters": "(CreateSnapshotRequest request)", "modifiers": "public", "return": "BaseServerListResponse", "signature": "BaseServerListResponse createSnapshot(CreateSnapshotRequest request)", "full_signature": "public BaseServerListResponse createSnapshot(CreateSnapshotRequest request)", "class_method_signature": "ServerClient.createSnapshot(CreateSnapshotRequest request)", "testcase": false, "constructor": false}, {"identifier": "deleteSnapshot", "parameters": "(String serverId, String snapshotId)", "modifiers": "public", "return": "Link", "signature": "Link deleteSnapshot(String serverId, String snapshotId)", "full_signature": "public Link deleteSnapshot(String serverId, String snapshotId)", "class_method_signature": "ServerClient.deleteSnapshot(String serverId, String snapshotId)", "testcase": false, "constructor": false}, {"identifier": "revertToSnapshot", "parameters": "(String serverId, String snapshotId)", "modifiers": "public", "return": "Link", "signature": "Link revertToSnapshot(String serverId, String snapshotId)", "full_signature": "public Link revertToSnapshot(String serverId, String snapshotId)", "class_method_signature": "ServerClient.revertToSnapshot(String serverId, String snapshotId)", "testcase": false, "constructor": false}, {"identifier": "restore", "parameters": "(String serverId, RestoreServerRequest request)", "modifiers": "public", "return": "Link", "signature": "Link restore(String serverId, RestoreServerRequest request)", "full_signature": "public Link restore(String serverId, RestoreServerRequest request)", "class_method_signature": "ServerClient.restore(String serverId, RestoreServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "getGroupBillingStats", "parameters": "(String groupId)", "modifiers": "public", "return": "ClientBillingStats", "signature": "ClientBillingStats getGroupBillingStats(String groupId)", "full_signature": "public ClientBillingStats getGroupBillingStats(String groupId)", "class_method_signature": "ServerClient.getGroupBillingStats(String groupId)", "testcase": false, "constructor": false}, {"identifier": "getMonitoringStatistics", "parameters": "(String groupId, MonitoringStatisticRequest request)", "modifiers": "public", "return": "List<ServerMonitoringStatistics>", "signature": "List<ServerMonitoringStatistics> getMonitoringStatistics(String groupId, MonitoringStatisticRequest request)", "full_signature": "public List<ServerMonitoringStatistics> getMonitoringStatistics(String groupId, MonitoringStatisticRequest request)", "class_method_signature": "ServerClient.getMonitoringStatistics(String groupId, MonitoringStatisticRequest request)", "testcase": false, "constructor": false}, {"identifier": "sendPowerOperationRequest", "parameters": "(String operationName, List<String> serverIdList)", "modifiers": "private", "return": "BaseServerListResponse", "signature": "BaseServerListResponse sendPowerOperationRequest(String operationName, List<String> serverIdList)", "full_signature": "private BaseServerListResponse sendPowerOperationRequest(String operationName, List<String> serverIdList)", "class_method_signature": "ServerClient.sendPowerOperationRequest(String operationName, List<String> serverIdList)", "testcase": false, "constructor": false}, {"identifier": "addPublicIp", "parameters": "(String serverId, PublicIpRequest publicIpRequest)", "modifiers": "public", "return": "Link", "signature": "Link addPublicIp(String serverId, PublicIpRequest publicIpRequest)", "full_signature": "public Link addPublicIp(String serverId, PublicIpRequest publicIpRequest)", "class_method_signature": "ServerClient.addPublicIp(String serverId, PublicIpRequest publicIpRequest)", "testcase": false, "constructor": false}, {"identifier": "getPublicIp", "parameters": "(String serverId, String publicIp)", "modifiers": "public", "return": "PublicIpMetadata", "signature": "PublicIpMetadata getPublicIp(String serverId, String publicIp)", "full_signature": "public PublicIpMetadata getPublicIp(String serverId, String publicIp)", "class_method_signature": "ServerClient.getPublicIp(String serverId, String publicIp)", "testcase": false, "constructor": false}, {"identifier": "modifyPublicIp", "parameters": "(String serverId, String publicIp, PublicIpRequest publicIpRequest)", "modifiers": "public", "return": "Link", "signature": "Link modifyPublicIp(String serverId, String publicIp, PublicIpRequest publicIpRequest)", "full_signature": "public Link modifyPublicIp(String serverId, String publicIp, PublicIpRequest publicIpRequest)", "class_method_signature": "ServerClient.modifyPublicIp(String serverId, String publicIp, PublicIpRequest publicIpRequest)", "testcase": false, "constructor": false}, {"identifier": "removePublicIp", "parameters": "(String serverId, String publicIp)", "modifiers": "public", "return": "Link", "signature": "Link removePublicIp(String serverId, String publicIp)", "full_signature": "public Link removePublicIp(String serverId, String publicIp)", "class_method_signature": "ServerClient.removePublicIp(String serverId, String publicIp)", "testcase": false, "constructor": false}, {"identifier": "getServerCredentials", "parameters": "(String serverId)", "modifiers": "public", "return": "ServerCredentials", "signature": "ServerCredentials getServerCredentials(String serverId)", "full_signature": "public ServerCredentials getServerCredentials(String serverId)", "class_method_signature": "ServerClient.getServerCredentials(String serverId)", "testcase": false, "constructor": false}, {"identifier": "getCustomFields", "parameters": "()", "modifiers": "public", "return": "List<CustomFieldMetadata>", "signature": "List<CustomFieldMetadata> getCustomFields()", "full_signature": "public List<CustomFieldMetadata> getCustomFields()", "class_method_signature": "ServerClient.getCustomFields()", "testcase": false, "constructor": false}, {"identifier": "getInvoice", "parameters": "(int year, int month, String pricingAccountAlias)", "modifiers": "public", "return": "InvoiceData", "signature": "InvoiceData getInvoice(int year, int month, String pricingAccountAlias)", "full_signature": "public InvoiceData getInvoice(int year, int month, String pricingAccountAlias)", "class_method_signature": "ServerClient.getInvoice(int year, int month, String pricingAccountAlias)", "testcase": false, "constructor": false}, {"identifier": "getNetworks", "parameters": "(String dataCenter)", "modifiers": "public", "return": "List<NetworkMetadata>", "signature": "List<NetworkMetadata> getNetworks(String dataCenter)", "full_signature": "public List<NetworkMetadata> getNetworks(String dataCenter)", "class_method_signature": "ServerClient.getNetworks(String dataCenter)", "testcase": false, "constructor": false}, {"identifier": "getNetwork", "parameters": "(String networkId, String dataCenterId, String ipAddressesDetails)", "modifiers": "public", "return": "NetworkMetadata", "signature": "NetworkMetadata getNetwork(String networkId, String dataCenterId, String ipAddressesDetails)", "full_signature": "public NetworkMetadata getNetwork(String networkId, String dataCenterId, String ipAddressesDetails)", "class_method_signature": "ServerClient.getNetwork(String networkId, String dataCenterId, String ipAddressesDetails)", "testcase": false, "constructor": false}, {"identifier": "addSecondaryNetwork", "parameters": "(String serverId, AddNetworkRequest networkRequest)", "modifiers": "public", "return": "NetworkLink", "signature": "NetworkLink addSecondaryNetwork(String serverId, AddNetworkRequest networkRequest)", "full_signature": "public NetworkLink addSecondaryNetwork(String serverId, AddNetworkRequest networkRequest)", "class_method_signature": "ServerClient.addSecondaryNetwork(String serverId, AddNetworkRequest networkRequest)", "testcase": false, "constructor": false}, {"identifier": "removeSecondaryNetwork", "parameters": "(String serverId, String networkId)", "modifiers": "public", "return": "NetworkLink", "signature": "NetworkLink removeSecondaryNetwork(String serverId, String networkId)", "full_signature": "public NetworkLink removeSecondaryNetwork(String serverId, String networkId)", "class_method_signature": "ServerClient.removeSecondaryNetwork(String serverId, String networkId)", "testcase": false, "constructor": false}], "file": "sdk/src/main/java/com/centurylink/cloud/sdk/server/services/client/ServerClient.java"}, "focal_method": {"identifier": "getServerCredentials", "parameters": "(String serverId)", "modifiers": "public", "return": "ServerCredentials", "body": "public ServerCredentials getServerCredentials(String serverId) {\n        return\n            client(SERVER_URL_WITH_ID + \"/credentials\")\n                .resolveTemplate(SERVER_ID, serverId)\n                .request()\n                .get(ServerCredentials.class);\n    }", "signature": "ServerCredentials getServerCredentials(String serverId)", "full_signature": "public ServerCredentials getServerCredentials(String serverId)", "class_method_signature": "ServerClient.getServerCredentials(String serverId)", "testcase": false, "constructor": false, "invocations": ["get", "request", "resolveTemplate", "client"]}, "repository": {"repo_id": 31234709, "url": "https://github.com/CenturyLinkCloud/clc-java-sdk", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 5036, "license": "licensed"}}