{"test_class": {"identifier": "FixtureMapTest", "superclass": "", "interfaces": "", "fields": [], "file": "beanmother-core/src/test/java/io/beanmother/core/common/FixtureMapTest.java"}, "test_case": {"identifier": "testReproduce", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReproduce() {\n        FixtureMap origin = new FixtureMap();\n        FixtureMap subMap = new FixtureMap();\n        FixtureList list = new FixtureList();\n        FixtureMap mapInList = new FixtureMap();\n\n        FixtureValue integer = new FixtureValue(1);\n        FixtureValue date = new FixtureValue(new Date());\n        list.add(mapInList);\n        origin.put(\"subMap\", subMap);\n        origin.put(\"list\", list);\n        origin.put(\"integer\", integer);\n        origin.put(\"date\", date);\n\n        origin.setFixtureName(\"origin-fixture-name\");\n        origin.setRoot(true);\n\n        FixtureMap dup = origin.reproduce();\n\n        assertEquals(origin, dup);\n        assertEquals(origin.get(\"subMap\"), dup.get(\"subMap\"));\n        assertEquals(origin.get(\"list\"), dup.get(\"list\"));\n        assertEquals(dup.get(\"integer\"), integer);\n        assertEquals(origin.get(\"date\"), dup.get(\"date\"));\n\n        assertFalse(dup == origin);\n        assertFalse(dup.get(\"subMap\") == subMap);\n        assertFalse(dup.get(\"list\") == list);\n        assertFalse(((FixtureList)dup.get(\"list\")).get(0) == mapInList);\n        assertFalse(dup.get(\"integer\") == integer);\n        assertFalse(dup.get(\"date\") == date);\n    }", "signature": "void testReproduce()", "full_signature": "@Test public void testReproduce()", "class_method_signature": "FixtureMapTest.testReproduce()", "testcase": true, "constructor": false, "invocations": ["add", "put", "put", "put", "put", "setFixtureName", "setRoot", "reproduce", "assertEquals", "assertEquals", "get", "get", "assertEquals", "get", "get", "assertEquals", "get", "assertEquals", "get", "get", "assertFalse", "assertFalse", "get", "assertFalse", "get", "assertFalse", "get", "get", "assertFalse", "get", "assertFalse", "get"]}, "focal_class": {"identifier": "FixtureMap", "superclass": "extends LinkedHashMap<String, FixtureTemplate>", "interfaces": "implements FixtureTemplate", "fields": [{"original_string": "private FixtureMetadata metadata;", "modifier": "private", "type": "FixtureMetadata", "declarator": "metadata", "var_name": "metadata"}], "methods": [{"identifier": "FixtureMap", "parameters": "()", "modifiers": "public", "return": "", "signature": " FixtureMap()", "full_signature": "public  FixtureMap()", "class_method_signature": "FixtureMap.FixtureMap()", "testcase": false, "constructor": true}, {"identifier": "reproduce", "parameters": "()", "modifiers": "public", "return": "FixtureMap", "signature": "FixtureMap reproduce()", "full_signature": "public FixtureMap reproduce()", "class_method_signature": "FixtureMap.reproduce()", "testcase": false, "constructor": false}, {"identifier": "getMetadata", "parameters": "()", "modifiers": "public", "return": "FixtureMetadata", "signature": "FixtureMetadata getMetadata()", "full_signature": "public FixtureMetadata getMetadata()", "class_method_signature": "FixtureMap.getMetadata()", "testcase": false, "constructor": false}, {"identifier": "isRoot", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRoot()", "full_signature": "@Override public boolean isRoot()", "class_method_signature": "FixtureMap.isRoot()", "testcase": false, "constructor": false}, {"identifier": "setRoot", "parameters": "(boolean root)", "modifiers": "@Override public", "return": "void", "signature": "void setRoot(boolean root)", "full_signature": "@Override public void setRoot(boolean root)", "class_method_signature": "FixtureMap.setRoot(boolean root)", "testcase": false, "constructor": false}, {"identifier": "getFixtureName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getFixtureName()", "full_signature": "@Override public String getFixtureName()", "class_method_signature": "FixtureMap.getFixtureName()", "testcase": false, "constructor": false}, {"identifier": "setFixtureName", "parameters": "(String fixtureName)", "modifiers": "@Override public", "return": "void", "signature": "void setFixtureName(String fixtureName)", "full_signature": "@Override public void setFixtureName(String fixtureName)", "class_method_signature": "FixtureMap.setFixtureName(String fixtureName)", "testcase": false, "constructor": false}, {"identifier": "getParent", "parameters": "()", "modifiers": "@Override public", "return": "FixtureTemplate", "signature": "FixtureTemplate getParent()", "full_signature": "@Override public FixtureTemplate getParent()", "class_method_signature": "FixtureMap.getParent()", "testcase": false, "constructor": false}, {"identifier": "setParent", "parameters": "(FixtureTemplate parent)", "modifiers": "@Override public", "return": "void", "signature": "void setParent(FixtureTemplate parent)", "full_signature": "@Override public void setParent(FixtureTemplate parent)", "class_method_signature": "FixtureMap.setParent(FixtureTemplate parent)", "testcase": false, "constructor": false}, {"identifier": "hasParent", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasParent()", "full_signature": "@Override public boolean hasParent()", "class_method_signature": "FixtureMap.hasParent()", "testcase": false, "constructor": false}], "file": "beanmother-core/src/main/java/io/beanmother/core/common/FixtureMap.java"}, "focal_method": {"identifier": "reproduce", "parameters": "()", "modifiers": "public", "return": "FixtureMap", "body": "public FixtureMap reproduce() {\n        try {\n            ByteArrayOutputStream bos = new ByteArrayOutputStream(1024 * 2);\n            ObjectOutputStream oos = new ObjectOutputStream(bos);\n            oos.writeObject(this);\n            oos.flush();\n            oos.close();\n\n            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));\n            Object obj = ois.readObject();\n            FixtureMap dup = (FixtureMap) obj;\n\n            dup.setParent(getParent());\n            dup.setRoot(isRoot());\n            dup.setFixtureName(getFixtureName());\n\n            return dup;\n        } catch (Exception e) {\n            throw new FixtureFormatException(getFixtureName(), e);\n        }\n    }", "signature": "FixtureMap reproduce()", "full_signature": "public FixtureMap reproduce()", "class_method_signature": "FixtureMap.reproduce()", "testcase": false, "constructor": false, "invocations": ["writeObject", "flush", "close", "toByteArray", "readObject", "setParent", "getParent", "setRoot", "isRoot", "setFixtureName", "getFixtureName", "getFixtureName"]}, "repository": {"repo_id": 100366560, "url": "https://github.com/keepcosmos/beanmother", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 95, "size": 688, "license": "licensed"}}