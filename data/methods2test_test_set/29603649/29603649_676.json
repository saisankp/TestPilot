{"test_class": {"identifier": "StubConfigurationSaverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_PATH = \"test/path\";", "modifier": "private static final", "type": "String", "declarator": "TEST_PATH = \"test/path\"", "var_name": "TEST_PATH"}, {"original_string": "private static final String TEST_KEY = \"TestKey\";", "modifier": "private static final", "type": "String", "declarator": "TEST_KEY = \"TestKey\"", "var_name": "TEST_KEY"}, {"original_string": "private static final String STUB_CONFIG_JSON_POSTFIX = \"_stubConfig.json\";", "modifier": "private static final", "type": "String", "declarator": "STUB_CONFIG_JSON_POSTFIX = \"_stubConfig.json\"", "var_name": "STUB_CONFIG_JSON_POSTFIX"}, {"original_string": "@Mock\n    private StubResourceHolder stubResourceHolder;", "modifier": "@Mock\n    private", "type": "StubResourceHolder", "declarator": "stubResourceHolder", "var_name": "stubResourceHolder"}, {"original_string": "@Mock\n    private StubConfigurationAccess configurationAccess;", "modifier": "@Mock\n    private", "type": "StubConfigurationAccess", "declarator": "configurationAccess", "var_name": "configurationAccess"}, {"original_string": "@Mock\n    private StubResourcePathProvider stubResourcePathProvider;", "modifier": "@Mock\n    private", "type": "StubResourcePathProvider", "declarator": "stubResourcePathProvider", "var_name": "stubResourcePathProvider"}, {"original_string": "@Mock\n    private StubDescriptor descriptor;", "modifier": "@Mock\n    private", "type": "StubDescriptor", "declarator": "descriptor", "var_name": "descriptor"}, {"original_string": "@Mock\n    private StubDescriptorAttributes attributes;", "modifier": "@Mock\n    private", "type": "StubDescriptorAttributes", "declarator": "attributes", "var_name": "attributes"}, {"original_string": "@Mock\n    private JSONObject jsonObject;", "modifier": "@Mock\n    private", "type": "JSONObject", "declarator": "jsonObject", "var_name": "jsonObject"}, {"original_string": "@Mock\n    private JsonBasedObjectTransformer documentTransformer;", "modifier": "@Mock\n    private", "type": "JsonBasedObjectTransformer", "declarator": "documentTransformer", "var_name": "documentTransformer"}, {"original_string": "@Mock\n    private Logger logger;", "modifier": "@Mock\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "private Map<String, StubDescriptor> descriptors = new HashMap<>();", "modifier": "private", "type": "Map<String, StubDescriptor>", "declarator": "descriptors = new HashMap<>()", "var_name": "descriptors"}, {"original_string": "@InjectMocks\n    private StubConfigurationSaver underTest;", "modifier": "@InjectMocks\n    private", "type": "StubConfigurationSaver", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/test/java/com/epam/wilma/stubconfig/cache/saver/StubConfigurationSaverTest.java"}, "test_case": {"identifier": "testSaveAllStubConfigurationsWhenOccurAnDocumentTransformationException", "parameters": "()", "modifiers": "@Test(expectedExceptions = JsonTransformationException.class) public", "return": "void", "body": "@Test(expectedExceptions = JsonTransformationException.class)\n    public void testSaveAllStubConfigurationsWhenOccurAnDocumentTransformationException() throws JsonTransformationException,\n            TransformerException {\n        //GIVEN\n        doThrow(new TransformerException(\"Test\")).when(documentTransformer).transformToFile(jsonObject, TEST_PATH + \"/\" + 1 + STUB_CONFIG_JSON_POSTFIX, true);\n        given(stubResourceHolder.getActualStubConfigJsonObject(TEST_KEY)).willReturn(jsonObject);\n        //WHEN\n        underTest.saveAllStubConfigurations(descriptors);\n        //THEN\n        verify(stubResourceHolder).getActualStubConfigJsonObject(TEST_KEY);\n    }", "signature": "void testSaveAllStubConfigurationsWhenOccurAnDocumentTransformationException()", "full_signature": "@Test(expectedExceptions = JsonTransformationException.class) public void testSaveAllStubConfigurationsWhenOccurAnDocumentTransformationException()", "class_method_signature": "StubConfigurationSaverTest.testSaveAllStubConfigurationsWhenOccurAnDocumentTransformationException()", "testcase": true, "constructor": false, "invocations": ["transformToFile", "when", "doThrow", "willReturn", "given", "getActualStubConfigJsonObject", "saveAllStubConfigurations", "getActualStubConfigJsonObject", "verify"]}, "focal_class": {"identifier": "StubConfigurationSaver", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String STUB_CONFIG_JSON_POSTFIX = \"_stubConfig.json\";", "modifier": "private static final", "type": "String", "declarator": "STUB_CONFIG_JSON_POSTFIX = \"_stubConfig.json\"", "var_name": "STUB_CONFIG_JSON_POSTFIX"}, {"original_string": "@Autowired\n    private StubResourceHolder stubResourceHolder;", "modifier": "@Autowired\n    private", "type": "StubResourceHolder", "declarator": "stubResourceHolder", "var_name": "stubResourceHolder"}, {"original_string": "@Autowired\n    private StubConfigurationAccess configurationAccess;", "modifier": "@Autowired\n    private", "type": "StubConfigurationAccess", "declarator": "configurationAccess", "var_name": "configurationAccess"}, {"original_string": "@Autowired\n    private StubResourcePathProvider stubResourcePathProvider;", "modifier": "@Autowired\n    private", "type": "StubResourcePathProvider", "declarator": "stubResourcePathProvider", "var_name": "stubResourcePathProvider"}, {"original_string": "@Autowired\n    private JsonBasedObjectTransformer jsonBasedObjectTransformer;", "modifier": "@Autowired\n    private", "type": "JsonBasedObjectTransformer", "declarator": "jsonBasedObjectTransformer", "var_name": "jsonBasedObjectTransformer"}, {"original_string": "private String cacheFolderPath;", "modifier": "private", "type": "String", "declarator": "cacheFolderPath", "var_name": "cacheFolderPath"}], "methods": [{"identifier": "saveAllStubConfigurations", "parameters": "(final Map<String, StubDescriptor> descriptors)", "modifiers": "public", "return": "void", "signature": "void saveAllStubConfigurations(final Map<String, StubDescriptor> descriptors)", "full_signature": "public void saveAllStubConfigurations(final Map<String, StubDescriptor> descriptors)", "class_method_signature": "StubConfigurationSaver.saveAllStubConfigurations(final Map<String, StubDescriptor> descriptors)", "testcase": false, "constructor": false}, {"identifier": "tryToSaveActualStubConfig", "parameters": "(final StubDescriptor descriptor, final int index, final String groupname)", "modifiers": "private", "return": "void", "signature": "void tryToSaveActualStubConfig(final StubDescriptor descriptor, final int index, final String groupname)", "full_signature": "private void tryToSaveActualStubConfig(final StubDescriptor descriptor, final int index, final String groupname)", "class_method_signature": "StubConfigurationSaver.tryToSaveActualStubConfig(final StubDescriptor descriptor, final int index, final String groupname)", "testcase": false, "constructor": false}, {"identifier": "getCacheFolderPath", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void getCacheFolderPath()", "full_signature": "private void getCacheFolderPath()", "class_method_signature": "StubConfigurationSaver.getCacheFolderPath()", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/main/java/com/epam/wilma/stubconfig/cache/saver/StubConfigurationSaver.java"}, "focal_method": {"identifier": "saveAllStubConfigurations", "parameters": "(final Map<String, StubDescriptor> descriptors)", "modifiers": "public", "return": "void", "body": "public void saveAllStubConfigurations(final Map<String, StubDescriptor> descriptors) throws JsonTransformationException {\n        getCacheFolderPath();\n        int index = 1;\n        for (String groupname : descriptors.keySet()) {\n            StubDescriptor actualDescriptor = descriptors.get(groupname);\n            tryToSaveActualStubConfig(actualDescriptor, index, groupname);\n            index++;\n        }\n    }", "signature": "void saveAllStubConfigurations(final Map<String, StubDescriptor> descriptors)", "full_signature": "public void saveAllStubConfigurations(final Map<String, StubDescriptor> descriptors)", "class_method_signature": "StubConfigurationSaver.saveAllStubConfigurations(final Map<String, StubDescriptor> descriptors)", "testcase": false, "constructor": false, "invocations": ["getCacheFolderPath", "keySet", "get", "tryToSaveActualStubConfig"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}