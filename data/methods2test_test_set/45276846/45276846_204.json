{"test_class": {"identifier": "TestQueryTaskClientHelper", "superclass": "extends BasicReusableHostTestCase", "interfaces": "", "fields": [{"original_string": "private QueryTaskClientHelper<MinimalTestServiceState> queryHelper;", "modifier": "private", "type": "QueryTaskClientHelper<MinimalTestServiceState>", "declarator": "queryHelper", "var_name": "queryHelper"}, {"original_string": "private List<MinimalTestServiceState> minimalTestStates;", "modifier": "private", "type": "List<MinimalTestServiceState>", "declarator": "minimalTestStates", "var_name": "minimalTestStates"}, {"original_string": "private String idValue1;", "modifier": "private", "type": "String", "declarator": "idValue1", "var_name": "idValue1"}, {"original_string": "private String idValue2;", "modifier": "private", "type": "String", "declarator": "idValue2", "var_name": "idValue2"}, {"original_string": "private List<Service> services;", "modifier": "private", "type": "List<Service>", "declarator": "services", "var_name": "services"}], "file": "xenon-common/src/test/java/com/vmware/xenon/common/TestQueryTaskClientHelper.java"}, "test_case": {"identifier": "testCountQuery", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCountQuery() throws Throwable {\n        int numberOfServices = 20;\n        this.services = this.host.doThroughputServiceStart(numberOfServices,\n                MinimalTestService.class,\n                this.host.buildMinimalTestState(), EnumSet.of(ServiceOption.PERSISTENCE), null);\n\n        Query query = Builder.create().addKindFieldClause(MinimalTestServiceState.class).build();\n        QueryTask q = QueryTask.Builder.createDirectTask()\n                .addOption(QueryOption.COUNT)\n                .setQuery(query).build();\n\n        List<Long> results = new ArrayList<>();\n        query(q, (r, e) -> {\n            if (e != null) {\n                this.host.failIteration(e);\n            } else if (!r.hasResult()) {\n                this.host.completeIteration();\n            } else {\n                results.add(r.getCount());\n            }\n        });\n\n        assertEquals(1, results.size());\n        assertEquals(20, results.get(0).intValue());\n    }", "signature": "void testCountQuery()", "full_signature": "@Test public void testCountQuery()", "class_method_signature": "TestQueryTaskClientHelper.testCountQuery()", "testcase": true, "constructor": false, "invocations": ["doThroughputServiceStart", "buildMinimalTestState", "of", "build", "addKindFieldClause", "create", "build", "setQuery", "addOption", "createDirectTask", "query", "failIteration", "hasResult", "completeIteration", "add", "getCount", "assertEquals", "size", "assertEquals", "intValue", "get"]}, "focal_class": {"identifier": "QueryTaskClientHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final long QUERY_RETRIEVAL_RETRY_INTERVAL_MICROS = XenonConfiguration.duration(\n            QueryTaskClientHelper.class,\n            \"retryInterval\",\n            TimeUnit.MILLISECONDS,\n            Long.getLong(\"xenon.querytaskclienthelper.query.retry.interval.millis\", 300)\n    );", "modifier": "public static final", "type": "long", "declarator": "QUERY_RETRIEVAL_RETRY_INTERVAL_MICROS = XenonConfiguration.duration(\n            QueryTaskClientHelper.class,\n            \"retryInterval\",\n            TimeUnit.MILLISECONDS,\n            Long.getLong(\"xenon.querytaskclienthelper.query.retry.interval.millis\", 300)\n    )", "var_name": "QUERY_RETRIEVAL_RETRY_INTERVAL_MICROS"}, {"original_string": "public static final long DEFAULT_EXPIRATION_TIME_IN_MICROS = XenonConfiguration.duration(\n            QueryTaskClientHelper.class,\n            \"taskExpiration\",\n            TimeUnit.MICROSECONDS,\n            // the property names below says millis but value is interpreted as micros, so to retain FULL\n            // backward compatibility the bug is still preserved, assuming users have always passed micros anyway\n            Long.getLong(\"xenon.querytaskclienthelper.query.documents.default.expiration.millis\",\n                    TimeUnit.SECONDS.toMicros(120))\n    );", "modifier": "public static final", "type": "long", "declarator": "DEFAULT_EXPIRATION_TIME_IN_MICROS = XenonConfiguration.duration(\n            QueryTaskClientHelper.class,\n            \"taskExpiration\",\n            TimeUnit.MICROSECONDS,\n            // the property names below says millis but value is interpreted as micros, so to retain FULL\n            // backward compatibility the bug is still preserved, assuming users have always passed micros anyway\n            Long.getLong(\"xenon.querytaskclienthelper.query.documents.default.expiration.millis\",\n                    TimeUnit.SECONDS.toMicros(120))\n    )", "var_name": "DEFAULT_EXPIRATION_TIME_IN_MICROS"}, {"original_string": "public static final Integer DEFAULT_QUERY_RESULT_LIMIT = XenonConfiguration.integer(\n            QueryTaskClientHelper.class,\n            \"resultLimit\",\n            Integer.getInteger(\"xenon.querytaskclienthelper.query.documents.default.resultLimit\", 50)\n    );", "modifier": "public static final", "type": "Integer", "declarator": "DEFAULT_QUERY_RESULT_LIMIT = XenonConfiguration.integer(\n            QueryTaskClientHelper.class,\n            \"resultLimit\",\n            Integer.getInteger(\"xenon.querytaskclienthelper.query.documents.default.resultLimit\", 50)\n    )", "var_name": "DEFAULT_QUERY_RESULT_LIMIT"}, {"original_string": "private final Class<T> type;", "modifier": "private final", "type": "Class<T>", "declarator": "type", "var_name": "type"}, {"original_string": "private ServiceHost host;", "modifier": "private", "type": "ServiceHost", "declarator": "host", "var_name": "host"}, {"original_string": "private ServiceRequestSender serviceRequestSender;", "modifier": "private", "type": "ServiceRequestSender", "declarator": "serviceRequestSender", "var_name": "serviceRequestSender"}, {"original_string": "private QueryTask queryTask;", "modifier": "private", "type": "QueryTask", "declarator": "queryTask", "var_name": "queryTask"}, {"original_string": "private ResultHandler<T> resultHandler;", "modifier": "private", "type": "ResultHandler<T>", "declarator": "resultHandler", "var_name": "resultHandler"}, {"original_string": "private URI baseUri;", "modifier": "private", "type": "URI", "declarator": "baseUri", "var_name": "baseUri"}, {"original_string": "private String factoryPath;", "modifier": "private", "type": "String", "declarator": "factoryPath", "var_name": "factoryPath"}], "methods": [{"identifier": "QueryTaskClientHelper", "parameters": "(Class<T> type)", "modifiers": "private", "return": "", "signature": " QueryTaskClientHelper(Class<T> type)", "full_signature": "private  QueryTaskClientHelper(Class<T> type)", "class_method_signature": "QueryTaskClientHelper.QueryTaskClientHelper(Class<T> type)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(Class<T> type)", "modifiers": "public static", "return": "QueryTaskClientHelper<T>", "signature": "QueryTaskClientHelper<T> create(Class<T> type)", "full_signature": "public static QueryTaskClientHelper<T> create(Class<T> type)", "class_method_signature": "QueryTaskClientHelper.create(Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "setDocumentLink", "parameters": "(String documentSelfLink)", "modifiers": "public", "return": "QueryTaskClientHelper<T>", "signature": "QueryTaskClientHelper<T> setDocumentLink(String documentSelfLink)", "full_signature": "public QueryTaskClientHelper<T> setDocumentLink(String documentSelfLink)", "class_method_signature": "QueryTaskClientHelper.setDocumentLink(String documentSelfLink)", "testcase": false, "constructor": false}, {"identifier": "setUpdatedDocumentSince", "parameters": "(long documentSinceUpdateTimeMicros,\n            String documentSelfLink)", "modifiers": "public", "return": "QueryTaskClientHelper<T>", "signature": "QueryTaskClientHelper<T> setUpdatedDocumentSince(long documentSinceUpdateTimeMicros,\n            String documentSelfLink)", "full_signature": "public QueryTaskClientHelper<T> setUpdatedDocumentSince(long documentSinceUpdateTimeMicros,\n            String documentSelfLink)", "class_method_signature": "QueryTaskClientHelper.setUpdatedDocumentSince(long documentSinceUpdateTimeMicros,\n            String documentSelfLink)", "testcase": false, "constructor": false}, {"identifier": "setUpdatedSince", "parameters": "(long documentSinceUpdateTimeMicros)", "modifiers": "public", "return": "QueryTaskClientHelper<T>", "signature": "QueryTaskClientHelper<T> setUpdatedSince(long documentSinceUpdateTimeMicros)", "full_signature": "public QueryTaskClientHelper<T> setUpdatedSince(long documentSinceUpdateTimeMicros)", "class_method_signature": "QueryTaskClientHelper.setUpdatedSince(long documentSinceUpdateTimeMicros)", "testcase": false, "constructor": false}, {"identifier": "sendWith", "parameters": "(ServiceHost serviceHost)", "modifiers": "public", "return": "QueryTaskClientHelper<T>", "signature": "QueryTaskClientHelper<T> sendWith(ServiceHost serviceHost)", "full_signature": "public QueryTaskClientHelper<T> sendWith(ServiceHost serviceHost)", "class_method_signature": "QueryTaskClientHelper.sendWith(ServiceHost serviceHost)", "testcase": false, "constructor": false}, {"identifier": "sendWith", "parameters": "(Service service)", "modifiers": "public", "return": "QueryTaskClientHelper<T>", "signature": "QueryTaskClientHelper<T> sendWith(Service service)", "full_signature": "public QueryTaskClientHelper<T> sendWith(Service service)", "class_method_signature": "QueryTaskClientHelper.sendWith(Service service)", "testcase": false, "constructor": false}, {"identifier": "setQueryTask", "parameters": "(QueryTask queryTask)", "modifiers": "public", "return": "QueryTaskClientHelper<T>", "signature": "QueryTaskClientHelper<T> setQueryTask(QueryTask queryTask)", "full_signature": "public QueryTaskClientHelper<T> setQueryTask(QueryTask queryTask)", "class_method_signature": "QueryTaskClientHelper.setQueryTask(QueryTask queryTask)", "testcase": false, "constructor": false}, {"identifier": "setBaseUri", "parameters": "(URI baseUri)", "modifiers": "public", "return": "QueryTaskClientHelper<T>", "signature": "QueryTaskClientHelper<T> setBaseUri(URI baseUri)", "full_signature": "public QueryTaskClientHelper<T> setBaseUri(URI baseUri)", "class_method_signature": "QueryTaskClientHelper.setBaseUri(URI baseUri)", "testcase": false, "constructor": false}, {"identifier": "setFactoryPath", "parameters": "(String factoryPath)", "modifiers": "public", "return": "QueryTaskClientHelper<T>", "signature": "QueryTaskClientHelper<T> setFactoryPath(String factoryPath)", "full_signature": "public QueryTaskClientHelper<T> setFactoryPath(String factoryPath)", "class_method_signature": "QueryTaskClientHelper.setFactoryPath(String factoryPath)", "testcase": false, "constructor": false}, {"identifier": "setResultHandler", "parameters": "(ResultHandler<T> resultHandler)", "modifiers": "public", "return": "QueryTaskClientHelper<T>", "signature": "QueryTaskClientHelper<T> setResultHandler(ResultHandler<T> resultHandler)", "full_signature": "public QueryTaskClientHelper<T> setResultHandler(ResultHandler<T> resultHandler)", "class_method_signature": "QueryTaskClientHelper.setResultHandler(ResultHandler<T> resultHandler)", "testcase": false, "constructor": false}, {"identifier": "getDefaultQueryExpiration", "parameters": "()", "modifiers": "public static", "return": "long", "signature": "long getDefaultQueryExpiration()", "full_signature": "public static long getDefaultQueryExpiration()", "class_method_signature": "QueryTaskClientHelper.getDefaultQueryExpiration()", "testcase": false, "constructor": false}, {"identifier": "sendQueryRequest", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void sendQueryRequest()", "full_signature": "private void sendQueryRequest()", "class_method_signature": "QueryTaskClientHelper.sendQueryRequest()", "testcase": false, "constructor": false}, {"identifier": "processQuery", "parameters": "(QueryTask q, ResultHandler<T> handler)", "modifiers": "private", "return": "void", "signature": "void processQuery(QueryTask q, ResultHandler<T> handler)", "full_signature": "private void processQuery(QueryTask q, ResultHandler<T> handler)", "class_method_signature": "QueryTaskClientHelper.processQuery(QueryTask q, ResultHandler<T> handler)", "testcase": false, "constructor": false}, {"identifier": "processQueryResult", "parameters": "(QueryTask rsp, ResultHandler<T> handler)", "modifiers": "private", "return": "void", "signature": "void processQueryResult(QueryTask rsp, ResultHandler<T> handler)", "full_signature": "private void processQueryResult(QueryTask rsp, ResultHandler<T> handler)", "class_method_signature": "QueryTaskClientHelper.processQueryResult(QueryTask rsp, ResultHandler<T> handler)", "testcase": false, "constructor": false}, {"identifier": "processResults", "parameters": "(QueryTask rsp, ResultHandler<T> handler)", "modifiers": "private", "return": "void", "signature": "void processResults(QueryTask rsp, ResultHandler<T> handler)", "full_signature": "private void processResults(QueryTask rsp, ResultHandler<T> handler)", "class_method_signature": "QueryTaskClientHelper.processResults(QueryTask rsp, ResultHandler<T> handler)", "testcase": false, "constructor": false}, {"identifier": "getNextPageLinks", "parameters": "(String nextPageLink, int resultLimit, ResultHandler<T> handler)", "modifiers": "private", "return": "void", "signature": "void getNextPageLinks(String nextPageLink, int resultLimit, ResultHandler<T> handler)", "full_signature": "private void getNextPageLinks(String nextPageLink, int resultLimit, ResultHandler<T> handler)", "class_method_signature": "QueryTaskClientHelper.getNextPageLinks(String nextPageLink, int resultLimit, ResultHandler<T> handler)", "testcase": false, "constructor": false}, {"identifier": "isExpandQuery", "parameters": "(QueryTask q)", "modifiers": "private", "return": "boolean", "signature": "boolean isExpandQuery(QueryTask q)", "full_signature": "private boolean isExpandQuery(QueryTask q)", "class_method_signature": "QueryTaskClientHelper.isExpandQuery(QueryTask q)", "testcase": false, "constructor": false}, {"identifier": "isCountQuery", "parameters": "(QueryTask q)", "modifiers": "private", "return": "boolean", "signature": "boolean isCountQuery(QueryTask q)", "full_signature": "private boolean isCountQuery(QueryTask q)", "class_method_signature": "QueryTaskClientHelper.isCountQuery(QueryTask q)", "testcase": false, "constructor": false}, {"identifier": "createUpdatedSinceTimeRange", "parameters": "(long timeInMicros)", "modifiers": "private", "return": "Query", "signature": "Query createUpdatedSinceTimeRange(long timeInMicros)", "full_signature": "private Query createUpdatedSinceTimeRange(long timeInMicros)", "class_method_signature": "QueryTaskClientHelper.createUpdatedSinceTimeRange(long timeInMicros)", "testcase": false, "constructor": false}, {"identifier": "assertNotNull", "parameters": "(Object value, String propertyName)", "modifiers": "private static", "return": "void", "signature": "void assertNotNull(Object value, String propertyName)", "full_signature": "private static void assertNotNull(Object value, String propertyName)", "class_method_signature": "QueryTaskClientHelper.assertNotNull(Object value, String propertyName)", "testcase": false, "constructor": false}, {"identifier": "result", "parameters": "(Object json, long count)", "modifiers": "public", "return": "QueryElementResult<T>", "signature": "QueryElementResult<T> result(Object json, long count)", "full_signature": "public QueryElementResult<T> result(Object json, long count)", "class_method_signature": "QueryTaskClientHelper.result(Object json, long count)", "testcase": false, "constructor": false}, {"identifier": "resultLink", "parameters": "(\n            String selfLink, long count)", "modifiers": "public static", "return": "QueryElementResult<S>", "signature": "QueryElementResult<S> resultLink(\n            String selfLink, long count)", "full_signature": "public static QueryElementResult<S> resultLink(\n            String selfLink, long count)", "class_method_signature": "QueryTaskClientHelper.resultLink(\n            String selfLink, long count)", "testcase": false, "constructor": false}, {"identifier": "countResult", "parameters": "(\n            long count)", "modifiers": "public static", "return": "QueryElementResult<S>", "signature": "QueryElementResult<S> countResult(\n            long count)", "full_signature": "public static QueryElementResult<S> countResult(\n            long count)", "class_method_signature": "QueryTaskClientHelper.countResult(\n            long count)", "testcase": false, "constructor": false}, {"identifier": "noResult", "parameters": "()", "modifiers": "public static", "return": "QueryElementResult<S>", "signature": "QueryElementResult<S> noResult()", "full_signature": "public static QueryElementResult<S> noResult()", "class_method_signature": "QueryTaskClientHelper.noResult()", "testcase": false, "constructor": false}], "file": "xenon-common/src/main/java/com/vmware/xenon/common/QueryTaskClientHelper.java"}, "focal_method": {"identifier": "create", "parameters": "(Class<T> type)", "modifiers": "public static", "return": "QueryTaskClientHelper<T>", "body": "public static <T extends ServiceDocument> QueryTaskClientHelper<T> create(Class<T> type) {\n        return new QueryTaskClientHelper<T>(type);\n    }", "signature": "QueryTaskClientHelper<T> create(Class<T> type)", "full_signature": "public static QueryTaskClientHelper<T> create(Class<T> type)", "class_method_signature": "QueryTaskClientHelper.create(Class<T> type)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 45276846, "url": "https://github.com/vmware-archive/xenon", "language": "Java", "is_fork": false, "fork_count": 97, "stargazer_count": 226, "size": 52010, "license": "licensed"}}