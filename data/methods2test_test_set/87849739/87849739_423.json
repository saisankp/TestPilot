{"test_class": {"identifier": "DefaultMessageMapperRegistryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DefaultMessageMapperRegistry underTest;", "modifier": "private", "type": "DefaultMessageMapperRegistry", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "private MessageMapper defaultMapper;", "modifier": "private", "type": "MessageMapper", "declarator": "defaultMapper", "var_name": "defaultMapper"}, {"original_string": "private MessageMapper mockMapper1;", "modifier": "private", "type": "MessageMapper", "declarator": "mockMapper1", "var_name": "mockMapper1"}, {"original_string": "private MessageMapper mockMapper2;", "modifier": "private", "type": "MessageMapper", "declarator": "mockMapper2", "var_name": "mockMapper2"}, {"original_string": "private MessageMapper fallbackMapper;", "modifier": "private", "type": "MessageMapper", "declarator": "fallbackMapper", "var_name": "fallbackMapper"}], "file": "services/connectivity/mapping/src/test/java/org/eclipse/ditto/services/connectivity/mapping/DefaultMessageMapperRegistryTest.java"}, "test_case": {"identifier": "testNonExistentMapperResolvesToDefaultMapper", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNonExistentMapperResolvesToDefaultMapper() {\n        assertThat(underTest.getMappers(newPayloadMapping(\"eclipse\"))).containsExactly(defaultMapper);\n    }", "signature": "void testNonExistentMapperResolvesToDefaultMapper()", "full_signature": "@Test public void testNonExistentMapperResolvesToDefaultMapper()", "class_method_signature": "DefaultMessageMapperRegistryTest.testNonExistentMapperResolvesToDefaultMapper()", "testcase": true, "constructor": false, "invocations": ["containsExactly", "assertThat", "getMappers", "newPayloadMapping"]}, "focal_class": {"identifier": "DefaultMessageMapperRegistry", "superclass": "", "interfaces": "implements MessageMapperRegistry", "fields": [{"original_string": "private final MessageMapper defaultMapper;", "modifier": "private final", "type": "MessageMapper", "declarator": "defaultMapper", "var_name": "defaultMapper"}, {"original_string": "private final Map<String, MessageMapper> customMappers;", "modifier": "private final", "type": "Map<String, MessageMapper>", "declarator": "customMappers", "var_name": "customMappers"}, {"original_string": "private final Map<String, MessageMapper> fallbackMappers;", "modifier": "private final", "type": "Map<String, MessageMapper>", "declarator": "fallbackMappers", "var_name": "fallbackMappers"}], "methods": [{"identifier": "DefaultMessageMapperRegistry", "parameters": "(final MessageMapper defaultMapper,\n            final Map<String, MessageMapper> customMappers,\n            final Map<String, MessageMapper> fallbackMappers)", "modifiers": "private", "return": "", "signature": " DefaultMessageMapperRegistry(final MessageMapper defaultMapper,\n            final Map<String, MessageMapper> customMappers,\n            final Map<String, MessageMapper> fallbackMappers)", "full_signature": "private  DefaultMessageMapperRegistry(final MessageMapper defaultMapper,\n            final Map<String, MessageMapper> customMappers,\n            final Map<String, MessageMapper> fallbackMappers)", "class_method_signature": "DefaultMessageMapperRegistry.DefaultMessageMapperRegistry(final MessageMapper defaultMapper,\n            final Map<String, MessageMapper> customMappers,\n            final Map<String, MessageMapper> fallbackMappers)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final MessageMapper defaultMapper,\n            final Map<String, MessageMapper> customMappers,\n            final Map<String, MessageMapper> fallbackMappers)", "modifiers": "public static", "return": "DefaultMessageMapperRegistry", "signature": "DefaultMessageMapperRegistry of(final MessageMapper defaultMapper,\n            final Map<String, MessageMapper> customMappers,\n            final Map<String, MessageMapper> fallbackMappers)", "full_signature": "public static DefaultMessageMapperRegistry of(final MessageMapper defaultMapper,\n            final Map<String, MessageMapper> customMappers,\n            final Map<String, MessageMapper> fallbackMappers)", "class_method_signature": "DefaultMessageMapperRegistry.of(final MessageMapper defaultMapper,\n            final Map<String, MessageMapper> customMappers,\n            final Map<String, MessageMapper> fallbackMappers)", "testcase": false, "constructor": false}, {"identifier": "getDefaultMapper", "parameters": "()", "modifiers": "@Override public", "return": "MessageMapper", "signature": "MessageMapper getDefaultMapper()", "full_signature": "@Override public MessageMapper getDefaultMapper()", "class_method_signature": "DefaultMessageMapperRegistry.getDefaultMapper()", "testcase": false, "constructor": false}, {"identifier": "getMappers", "parameters": "(final PayloadMapping payloadMapping)", "modifiers": "@Override public", "return": "List<MessageMapper>", "signature": "List<MessageMapper> getMappers(final PayloadMapping payloadMapping)", "full_signature": "@Override public List<MessageMapper> getMappers(final PayloadMapping payloadMapping)", "class_method_signature": "DefaultMessageMapperRegistry.getMappers(final PayloadMapping payloadMapping)", "testcase": false, "constructor": false}, {"identifier": "resolveMessageMapper", "parameters": "(final String mapper)", "modifiers": "@Nullable private", "return": "MessageMapper", "signature": "MessageMapper resolveMessageMapper(final String mapper)", "full_signature": "@Nullable private MessageMapper resolveMessageMapper(final String mapper)", "class_method_signature": "DefaultMessageMapperRegistry.resolveMessageMapper(final String mapper)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "DefaultMessageMapperRegistry.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "validatePayloadMapping", "parameters": "(final PayloadMapping payloadMapping)", "modifiers": "@Override public", "return": "void", "signature": "void validatePayloadMapping(final PayloadMapping payloadMapping)", "full_signature": "@Override public void validatePayloadMapping(final PayloadMapping payloadMapping)", "class_method_signature": "DefaultMessageMapperRegistry.validatePayloadMapping(final PayloadMapping payloadMapping)", "testcase": false, "constructor": false}, {"identifier": "validateMessageMapper", "parameters": "(final String mapper)", "modifiers": "private", "return": "void", "signature": "void validateMessageMapper(final String mapper)", "full_signature": "private void validateMessageMapper(final String mapper)", "class_method_signature": "DefaultMessageMapperRegistry.validateMessageMapper(final String mapper)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DefaultMessageMapperRegistry.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DefaultMessageMapperRegistry.toString()", "testcase": false, "constructor": false}], "file": "services/connectivity/mapping/src/main/java/org/eclipse/ditto/services/connectivity/mapping/DefaultMessageMapperRegistry.java"}, "focal_method": {"identifier": "getMappers", "parameters": "(final PayloadMapping payloadMapping)", "modifiers": "@Override public", "return": "List<MessageMapper>", "body": "@Override\n    public List<MessageMapper> getMappers(final PayloadMapping payloadMapping) {\n        return payloadMapping.getMappings().stream()\n                .map(this::resolveMessageMapper)\n                .map(resolvedMapper -> null == resolvedMapper ? defaultMapper : resolvedMapper)\n                .collect(Collectors.toList());\n    }", "signature": "List<MessageMapper> getMappers(final PayloadMapping payloadMapping)", "full_signature": "@Override public List<MessageMapper> getMappers(final PayloadMapping payloadMapping)", "class_method_signature": "DefaultMessageMapperRegistry.getMappers(final PayloadMapping payloadMapping)", "testcase": false, "constructor": false, "invocations": ["collect", "map", "map", "stream", "getMappings", "toList"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}