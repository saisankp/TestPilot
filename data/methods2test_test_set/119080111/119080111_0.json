{"test_class": {"identifier": "EpsilonAdaptationDeltaTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected double eps_start = 0.0;", "modifier": "protected", "type": "double", "declarator": "eps_start = 0.0", "var_name": "eps_start"}, {"original_string": "protected double eps_delta_start = 0.5;", "modifier": "protected", "type": "double", "declarator": "eps_delta_start = 0.5", "var_name": "eps_delta_start"}, {"original_string": "protected double eps_delta_max = 1.5;", "modifier": "protected", "type": "double", "declarator": "eps_delta_max = 1.5", "var_name": "eps_delta_max"}, {"original_string": "protected double eps_delta_min = 0.4;", "modifier": "protected", "type": "double", "declarator": "eps_delta_min = 0.4", "var_name": "eps_delta_min"}], "file": "opt4j-optimizers/src/test/java/org/opt4j/optimizers/ea/aeseh/EpsilonAdaptationDeltaTest.java"}, "test_case": {"identifier": "testEpsilonSample", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testEpsilonSample() {\n\t\tEpsilonAdaptationDelta adaptation = new EpsilonAdaptationDelta();\n\t\tAdaptiveEpsilon adaptiveEpsilon = new AdaptiveEpsilon(eps_start, eps_delta_start, eps_delta_max, eps_delta_min);\n\t\tadaptation.adaptEpsilon(adaptiveEpsilon, false);\n\t\tassertEquals(0.5, adaptiveEpsilon.getEpsilon(), 0.0);\n\t\tassertEquals(1.0, adaptiveEpsilon.getEpsilonDelta(), 0.0);\n\t\tadaptation.adaptEpsilon(adaptiveEpsilon, false);\n\t\tassertEquals(1.5, adaptiveEpsilon.getEpsilonDelta(), 0.0);\n\t\tassertEquals(1.5, adaptiveEpsilon.getEpsilon(), 0.0);\n\t\tadaptation.adaptEpsilon(adaptiveEpsilon, true);\n\t\tassertEquals(0.0, adaptiveEpsilon.getEpsilon(), 0.0);\n\t\tassertEquals(0.75, adaptiveEpsilon.epsilonDelta, 0.0);\n\t\tadaptation.adaptEpsilon(adaptiveEpsilon, true);\n\t\tassertEquals(-.75, adaptiveEpsilon.getEpsilon(), 0.0);\n\t\tassertEquals(0.4, adaptiveEpsilon.epsilonDelta, 0.0);\n\t}", "signature": "void testEpsilonSample()", "full_signature": "@Test public void testEpsilonSample()", "class_method_signature": "EpsilonAdaptationDeltaTest.testEpsilonSample()", "testcase": true, "constructor": false, "invocations": ["adaptEpsilon", "assertEquals", "getEpsilon", "assertEquals", "getEpsilonDelta", "adaptEpsilon", "assertEquals", "getEpsilonDelta", "assertEquals", "getEpsilon", "adaptEpsilon", "assertEquals", "getEpsilon", "assertEquals", "adaptEpsilon", "assertEquals", "getEpsilon", "assertEquals"]}, "focal_class": {"identifier": "EpsilonAdaptationDelta", "superclass": "", "interfaces": "implements EpsilonAdaptation", "fields": [], "methods": [{"identifier": "adaptEpsilon", "parameters": "(AdaptiveEpsilon adaptiveEpsilon, boolean epsilonTooBig)", "modifiers": "@Override public", "return": "void", "signature": "void adaptEpsilon(AdaptiveEpsilon adaptiveEpsilon, boolean epsilonTooBig)", "full_signature": "@Override public void adaptEpsilon(AdaptiveEpsilon adaptiveEpsilon, boolean epsilonTooBig)", "class_method_signature": "EpsilonAdaptationDelta.adaptEpsilon(AdaptiveEpsilon adaptiveEpsilon, boolean epsilonTooBig)", "testcase": false, "constructor": false}], "file": "opt4j-optimizers/src/main/java/org/opt4j/optimizers/ea/aeseh/EpsilonAdaptationDelta.java"}, "focal_method": {"identifier": "adaptEpsilon", "parameters": "(AdaptiveEpsilon adaptiveEpsilon, boolean epsilonTooBig)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void adaptEpsilon(AdaptiveEpsilon adaptiveEpsilon, boolean epsilonTooBig) {\n\t\tif (epsilonTooBig) {\n\t\t\tadaptiveEpsilon.setEpsilon(adaptiveEpsilon.getEpsilon() - adaptiveEpsilon.getEpsilonDelta());\n\t\t\tadaptiveEpsilon.setEpsilonDelta(adaptiveEpsilon.getEpsilonDelta() / 2);\n\t\t} else {\n\t\t\tadaptiveEpsilon.setEpsilon(adaptiveEpsilon.getEpsilon() + adaptiveEpsilon.getEpsilonDelta());\n\t\t\tadaptiveEpsilon.setEpsilonDelta(adaptiveEpsilon.getEpsilonDelta() * 2);\n\t\t}\n\t}", "signature": "void adaptEpsilon(AdaptiveEpsilon adaptiveEpsilon, boolean epsilonTooBig)", "full_signature": "@Override public void adaptEpsilon(AdaptiveEpsilon adaptiveEpsilon, boolean epsilonTooBig)", "class_method_signature": "EpsilonAdaptationDelta.adaptEpsilon(AdaptiveEpsilon adaptiveEpsilon, boolean epsilonTooBig)", "testcase": false, "constructor": false, "invocations": ["setEpsilon", "getEpsilon", "getEpsilonDelta", "setEpsilonDelta", "getEpsilonDelta", "setEpsilon", "getEpsilon", "getEpsilonDelta", "setEpsilonDelta", "getEpsilonDelta"]}, "repository": {"repo_id": 119080111, "url": "https://github.com/felixreimann/opt4j", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 11, "size": 8771, "license": "licensed"}}