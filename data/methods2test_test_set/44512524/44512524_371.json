{"test_class": {"identifier": "InstanceCreatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "storm/trident-ml/src/test/java/com/github/pmerienne/trident/ml/preprocessing/InstanceCreatorTest.java"}, "test_case": {"identifier": "testCreateInstanceWithoutLabel", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCreateInstanceWithoutLabel() {\n\t\t// Given\n\t\tInstanceCreator<Boolean> instanceCreator = new InstanceCreator<Boolean>(false);\n\n\t\tTridentTuple tuple = mock(TridentTuple.class);\n\t\tdouble f1 = 0.53;\n\t\tdouble f2 = 0.65;\n\t\twhen(tuple.size()).thenReturn(2);\n\t\twhen(tuple.getDouble(0)).thenReturn(f1);\n\t\twhen(tuple.getDouble(1)).thenReturn(f2);\n\n\t\t// When\n\t\tInstance<Boolean> actualInstance = instanceCreator.createInstance(tuple);\n\n\t\t// Then\n\t\tInstance<Boolean> expectedInstance = new Instance<Boolean>(new double[] { f1, f2 });\n\t\tassertEquals(expectedInstance, actualInstance);\n\t}", "signature": "void testCreateInstanceWithoutLabel()", "full_signature": "@Test public void testCreateInstanceWithoutLabel()", "class_method_signature": "InstanceCreatorTest.testCreateInstanceWithoutLabel()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "size", "thenReturn", "when", "getDouble", "thenReturn", "when", "getDouble", "createInstance", "assertEquals"]}, "focal_class": {"identifier": "InstanceCreator", "superclass": "extends BaseFunction", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 3312351524410720639L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 3312351524410720639L", "var_name": "serialVersionUID"}, {"original_string": "private boolean withLabel = true;", "modifier": "private", "type": "boolean", "declarator": "withLabel = true", "var_name": "withLabel"}], "methods": [{"identifier": "InstanceCreator", "parameters": "()", "modifiers": "public", "return": "", "signature": " InstanceCreator()", "full_signature": "public  InstanceCreator()", "class_method_signature": "InstanceCreator.InstanceCreator()", "testcase": false, "constructor": true}, {"identifier": "InstanceCreator", "parameters": "(boolean withLabel)", "modifiers": "public", "return": "", "signature": " InstanceCreator(boolean withLabel)", "full_signature": "public  InstanceCreator(boolean withLabel)", "class_method_signature": "InstanceCreator.InstanceCreator(boolean withLabel)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "(TridentTuple tuple, TridentCollector collector)", "modifiers": "@Override public", "return": "void", "signature": "void execute(TridentTuple tuple, TridentCollector collector)", "full_signature": "@Override public void execute(TridentTuple tuple, TridentCollector collector)", "class_method_signature": "InstanceCreator.execute(TridentTuple tuple, TridentCollector collector)", "testcase": false, "constructor": false}, {"identifier": "createInstance", "parameters": "(TridentTuple tuple)", "modifiers": "@SuppressWarnings(\"unchecked\") protected", "return": "Instance<L>", "signature": "Instance<L> createInstance(TridentTuple tuple)", "full_signature": "@SuppressWarnings(\"unchecked\") protected Instance<L> createInstance(TridentTuple tuple)", "class_method_signature": "InstanceCreator.createInstance(TridentTuple tuple)", "testcase": false, "constructor": false}], "file": "storm/trident-ml/src/main/java/com/github/pmerienne/trident/ml/preprocessing/InstanceCreator.java"}, "focal_method": {"identifier": "createInstance", "parameters": "(TridentTuple tuple)", "modifiers": "@SuppressWarnings(\"unchecked\") protected", "return": "Instance<L>", "body": "@SuppressWarnings(\"unchecked\")\n\tprotected Instance<L> createInstance(TridentTuple tuple) {\n\t\tInstance<L> instance = null;\n\n\t\tif (this.withLabel) {\n\t\t\tL label = (L) tuple.get(0);\n\t\t\tdouble[] features = new double[tuple.size() - 1];\n\t\t\tfor (int i = 1; i < tuple.size(); i++) {\n\t\t\t\tfeatures[i - 1] = tuple.getDouble(i);\n\t\t\t}\n\n\t\t\tinstance = new Instance<L>(label, features);\n\t\t} else {\n\t\t\tdouble[] features = new double[tuple.size()];\n\t\t\tfor (int i = 0; i < tuple.size(); i++) {\n\t\t\t\tfeatures[i] = tuple.getDouble(i);\n\t\t\t}\n\n\t\t\tinstance = new Instance<L>(features);\n\t\t}\n\n\t\treturn instance;\n\t}", "signature": "Instance<L> createInstance(TridentTuple tuple)", "full_signature": "@SuppressWarnings(\"unchecked\") protected Instance<L> createInstance(TridentTuple tuple)", "class_method_signature": "InstanceCreator.createInstance(TridentTuple tuple)", "testcase": false, "constructor": false, "invocations": ["get", "size", "size", "getDouble", "size", "size", "getDouble"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}