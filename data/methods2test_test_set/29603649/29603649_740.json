{"test_class": {"identifier": "MessageFileCounterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private PropertyHolder propertyHolder;", "modifier": "@Mock\n    private", "type": "PropertyHolder", "declarator": "propertyHolder", "var_name": "propertyHolder"}, {"original_string": "@InjectMocks\n    private MessageFileCounter underTest;", "modifier": "@InjectMocks\n    private", "type": "MessageFileCounter", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-message-maintainer/src/test/java/com/epam/wilma/maintainer/task/helper/MessageFileCounterTest.java"}, "test_case": {"identifier": "testGetCountOfMessagesShouldReturnWithZeroWhenTheMessageFolderDoesNotExists", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetCountOfMessagesShouldReturnWithZeroWhenTheMessageFolderDoesNotExists() {\n        //GIVEN\n        given(propertyHolder.get(\"log.folder\")).willReturn(\"src/test/resources/something\");\n        //WHEN\n        int result = underTest.getCountOfMessages();\n        //THEN\n        Assert.assertEquals(result, 0);\n    }", "signature": "void testGetCountOfMessagesShouldReturnWithZeroWhenTheMessageFolderDoesNotExists()", "full_signature": "@Test public void testGetCountOfMessagesShouldReturnWithZeroWhenTheMessageFolderDoesNotExists()", "class_method_signature": "MessageFileCounterTest.testGetCountOfMessagesShouldReturnWithZeroWhenTheMessageFolderDoesNotExists()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "get", "getCountOfMessages", "assertEquals"]}, "focal_class": {"identifier": "MessageFileCounter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String FOLDER_ERROR_MESSAGE = \"Folder does not exist.\";", "modifier": "private static final", "type": "String", "declarator": "FOLDER_ERROR_MESSAGE = \"Folder does not exist.\"", "var_name": "FOLDER_ERROR_MESSAGE"}, {"original_string": "private final Logger logger = LoggerFactory.getLogger(MessageFileCounter.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(MessageFileCounter.class)", "var_name": "logger"}, {"original_string": "private String messagesFolderPath;", "modifier": "private", "type": "String", "declarator": "messagesFolderPath", "var_name": "messagesFolderPath"}, {"original_string": "@Autowired\n    private PropertyHolder propertyHolder;", "modifier": "@Autowired\n    private", "type": "PropertyHolder", "declarator": "propertyHolder", "var_name": "propertyHolder"}], "methods": [{"identifier": "getCountOfMessages", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCountOfMessages()", "full_signature": "public int getCountOfMessages()", "class_method_signature": "MessageFileCounter.getCountOfMessages()", "testcase": false, "constructor": false}, {"identifier": "getMessagesFolderPath", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void getMessagesFolderPath()", "full_signature": "private void getMessagesFolderPath()", "class_method_signature": "MessageFileCounter.getMessagesFolderPath()", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-message-maintainer/src/main/java/com/epam/wilma/maintainer/task/helper/MessageFileCounter.java"}, "focal_method": {"identifier": "getCountOfMessages", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int getCountOfMessages() {\n        int result;\n        getMessagesFolderPath();\n        try {\n            File folder = new File(messagesFolderPath);\n            folder = folder.getAbsoluteFile();\n            result = folder.listFiles().length;\n        } catch (NullPointerException e) {\n            logger.debug(FOLDER_ERROR_MESSAGE, e);\n            //this may happen only at the start of a brand new Wilma instance, and this solution is still better than executing the if statement forever and ever\n            result = 0;\n        }\n        return result;\n    }", "signature": "int getCountOfMessages()", "full_signature": "public int getCountOfMessages()", "class_method_signature": "MessageFileCounter.getCountOfMessages()", "testcase": false, "constructor": false, "invocations": ["getMessagesFolderPath", "getAbsoluteFile", "listFiles", "debug"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}