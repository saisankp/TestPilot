{"test_class": {"identifier": "RetrievePolicyIdTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JsonSchemaVersion KNOWN_SCHEMA_VERSION = JsonSchemaVersion.V_2;", "modifier": "private static final", "type": "JsonSchemaVersion", "declarator": "KNOWN_SCHEMA_VERSION = JsonSchemaVersion.V_2", "var_name": "KNOWN_SCHEMA_VERSION"}, {"original_string": "private static final JsonObject KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(ThingCommand.JsonFields.TYPE, RetrievePolicyId.TYPE)\n            .set(ThingCommand.JsonFields.JSON_THING_ID, TestConstants.Thing.THING_ID.toString())\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(ThingCommand.JsonFields.TYPE, RetrievePolicyId.TYPE)\n            .set(ThingCommand.JsonFields.JSON_THING_ID, TestConstants.Thing.THING_ID.toString())\n            .build()", "var_name": "KNOWN_JSON"}], "file": "signals/commands/things/src/test/java/org/eclipse/ditto/signals/commands/things/query/RetrievePolicyIdTest.java"}, "test_case": {"identifier": "toJsonReturnsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toJsonReturnsExpected() {\n        final RetrievePolicyId underTest =\n                RetrievePolicyId.of(TestConstants.Thing.THING_ID, TestConstants.EMPTY_DITTO_HEADERS);\n        final JsonObject actualJson = underTest.toJson(KNOWN_SCHEMA_VERSION, FieldType.regularOrSpecial());\n\n        assertThat(actualJson).isEqualTo(KNOWN_JSON);\n    }", "signature": "void toJsonReturnsExpected()", "full_signature": "@Test public void toJsonReturnsExpected()", "class_method_signature": "RetrievePolicyIdTest.toJsonReturnsExpected()", "testcase": true, "constructor": false, "invocations": ["of", "toJson", "regularOrSpecial", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "RetrievePolicyId", "superclass": "extends AbstractCommand<RetrievePolicyId>", "interfaces": "implements ThingQueryCommand<RetrievePolicyId>", "fields": [{"original_string": "public static final String NAME = \"retrievePolicyId\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"retrievePolicyId\"", "var_name": "NAME"}, {"original_string": "public static final String TYPE = TYPE_PREFIX + NAME;", "modifier": "public static final", "type": "String", "declarator": "TYPE = TYPE_PREFIX + NAME", "var_name": "TYPE"}, {"original_string": "private final ThingId thingId;", "modifier": "private final", "type": "ThingId", "declarator": "thingId", "var_name": "thingId"}], "methods": [{"identifier": "RetrievePolicyId", "parameters": "(final ThingId thingId, final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "", "signature": " RetrievePolicyId(final ThingId thingId, final DittoHeaders dittoHeaders)", "full_signature": "private  RetrievePolicyId(final ThingId thingId, final DittoHeaders dittoHeaders)", "class_method_signature": "RetrievePolicyId.RetrievePolicyId(final ThingId thingId, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final String thingId, final DittoHeaders dittoHeaders)", "modifiers": "@Deprecated public static", "return": "RetrievePolicyId", "signature": "RetrievePolicyId of(final String thingId, final DittoHeaders dittoHeaders)", "full_signature": "@Deprecated public static RetrievePolicyId of(final String thingId, final DittoHeaders dittoHeaders)", "class_method_signature": "RetrievePolicyId.of(final String thingId, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final ThingId thingId, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "RetrievePolicyId", "signature": "RetrievePolicyId of(final ThingId thingId, final DittoHeaders dittoHeaders)", "full_signature": "public static RetrievePolicyId of(final ThingId thingId, final DittoHeaders dittoHeaders)", "class_method_signature": "RetrievePolicyId.of(final ThingId thingId, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final String jsonString, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "RetrievePolicyId", "signature": "RetrievePolicyId fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "full_signature": "public static RetrievePolicyId fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "class_method_signature": "RetrievePolicyId.fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "RetrievePolicyId", "signature": "RetrievePolicyId fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "full_signature": "public static RetrievePolicyId fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "class_method_signature": "RetrievePolicyId.fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getSupportedSchemaVersions", "parameters": "()", "modifiers": "@Override public", "return": "JsonSchemaVersion[]", "signature": "JsonSchemaVersion[] getSupportedSchemaVersions()", "full_signature": "@Override public JsonSchemaVersion[] getSupportedSchemaVersions()", "class_method_signature": "RetrievePolicyId.getSupportedSchemaVersions()", "testcase": false, "constructor": false}, {"identifier": "getThingEntityId", "parameters": "()", "modifiers": "@Override public", "return": "ThingId", "signature": "ThingId getThingEntityId()", "full_signature": "@Override public ThingId getThingEntityId()", "class_method_signature": "RetrievePolicyId.getThingEntityId()", "testcase": false, "constructor": false}, {"identifier": "getResourcePath", "parameters": "()", "modifiers": "@Override public", "return": "JsonPointer", "signature": "JsonPointer getResourcePath()", "full_signature": "@Override public JsonPointer getResourcePath()", "class_method_signature": "RetrievePolicyId.getResourcePath()", "testcase": false, "constructor": false}, {"identifier": "appendPayload", "parameters": "(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "modifiers": "@Override protected", "return": "void", "signature": "void appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "full_signature": "@Override protected void appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "class_method_signature": "RetrievePolicyId.appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "setDittoHeaders", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "@Override public", "return": "RetrievePolicyId", "signature": "RetrievePolicyId setDittoHeaders(final DittoHeaders dittoHeaders)", "full_signature": "@Override public RetrievePolicyId setDittoHeaders(final DittoHeaders dittoHeaders)", "class_method_signature": "RetrievePolicyId.setDittoHeaders(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "RetrievePolicyId.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object obj)", "modifiers": "@SuppressWarnings(\"squid:MethodCyclomaticComplexity\") @Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object obj)", "full_signature": "@SuppressWarnings(\"squid:MethodCyclomaticComplexity\") @Override public boolean equals(@Nullable final Object obj)", "class_method_signature": "RetrievePolicyId.equals(@Nullable final Object obj)", "testcase": false, "constructor": false}, {"identifier": "canEqual", "parameters": "(final Object other)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean canEqual(final Object other)", "full_signature": "@Override protected boolean canEqual(final Object other)", "class_method_signature": "RetrievePolicyId.canEqual(final Object other)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "RetrievePolicyId.toString()", "testcase": false, "constructor": false}], "file": "signals/commands/things/src/main/java/org/eclipse/ditto/signals/commands/things/query/RetrievePolicyId.java"}, "focal_method": {"identifier": "of", "parameters": "(final String thingId, final DittoHeaders dittoHeaders)", "modifiers": "@Deprecated public static", "return": "RetrievePolicyId", "body": "@Deprecated\n    public static RetrievePolicyId of(final String thingId, final DittoHeaders dittoHeaders) {\n        return of(ThingId.of(thingId), dittoHeaders);\n    }", "signature": "RetrievePolicyId of(final String thingId, final DittoHeaders dittoHeaders)", "full_signature": "@Deprecated public static RetrievePolicyId of(final String thingId, final DittoHeaders dittoHeaders)", "class_method_signature": "RetrievePolicyId.of(final String thingId, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false, "invocations": ["of", "of"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}