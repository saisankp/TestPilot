{"test_class": {"identifier": "DynamicCompositeByteBufInputStreamTest", "superclass": "", "interfaces": "", "fields": [], "file": "brpc-java-communication/src/test/java/com/baidu/brpc/buffer/DynamicCompositeByteBufInputStreamTest.java"}, "test_case": {"identifier": "testRead", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRead() throws IOException {\n        ByteBuf buf = Unpooled.buffer(12);\n        buf.writeByte(1);\n        buf.writeByte(2);\n        DynamicCompositeByteBuf compositeByteBuf = new DynamicCompositeByteBuf(buf);\n        DynamicCompositeByteBufInputStream inputStream = new DynamicCompositeByteBufInputStream(compositeByteBuf);\n        Assert.assertTrue(inputStream != null);\n        int b = inputStream.read();\n        Assert.assertTrue(b == 1);\n\n        Assert.assertTrue(buf.refCnt() == 1);\n        inputStream.close();\n        Assert.assertTrue(buf.refCnt() == 1);\n        compositeByteBuf.release();\n        Assert.assertTrue(buf.refCnt() == 0);\n        inputStream.close();\n    }", "signature": "void testRead()", "full_signature": "@Test public void testRead()", "class_method_signature": "DynamicCompositeByteBufInputStreamTest.testRead()", "testcase": true, "constructor": false, "invocations": ["buffer", "writeByte", "writeByte", "assertTrue", "read", "assertTrue", "assertTrue", "refCnt", "close", "assertTrue", "refCnt", "release", "assertTrue", "refCnt", "close"]}, "focal_class": {"identifier": "DynamicCompositeByteBufInputStream", "superclass": "extends InputStream", "interfaces": "implements DataInput", "fields": [{"original_string": "private DynamicCompositeByteBuf buffer;", "modifier": "private", "type": "DynamicCompositeByteBuf", "declarator": "buffer", "var_name": "buffer"}, {"original_string": "private boolean closed;", "modifier": "private", "type": "boolean", "declarator": "closed", "var_name": "closed"}, {"original_string": "private boolean releaseOnClose;", "modifier": "private", "type": "boolean", "declarator": "releaseOnClose", "var_name": "releaseOnClose"}, {"original_string": "private final StringBuilder lineBuf = new StringBuilder();", "modifier": "private final", "type": "StringBuilder", "declarator": "lineBuf = new StringBuilder()", "var_name": "lineBuf"}], "methods": [{"identifier": "DynamicCompositeByteBufInputStream", "parameters": "(DynamicCompositeByteBuf compositeByteBuf)", "modifiers": "public", "return": "", "signature": " DynamicCompositeByteBufInputStream(DynamicCompositeByteBuf compositeByteBuf)", "full_signature": "public  DynamicCompositeByteBufInputStream(DynamicCompositeByteBuf compositeByteBuf)", "class_method_signature": "DynamicCompositeByteBufInputStream.DynamicCompositeByteBufInputStream(DynamicCompositeByteBuf compositeByteBuf)", "testcase": false, "constructor": true}, {"identifier": "DynamicCompositeByteBufInputStream", "parameters": "(DynamicCompositeByteBuf buffer, boolean releaseOnClose)", "modifiers": "public", "return": "", "signature": " DynamicCompositeByteBufInputStream(DynamicCompositeByteBuf buffer, boolean releaseOnClose)", "full_signature": "public  DynamicCompositeByteBufInputStream(DynamicCompositeByteBuf buffer, boolean releaseOnClose)", "class_method_signature": "DynamicCompositeByteBufInputStream.DynamicCompositeByteBufInputStream(DynamicCompositeByteBuf buffer, boolean releaseOnClose)", "testcase": false, "constructor": true}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "DynamicCompositeByteBufInputStream.close()", "testcase": false, "constructor": false}, {"identifier": "available", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int available()", "full_signature": "@Override public int available()", "class_method_signature": "DynamicCompositeByteBufInputStream.available()", "testcase": false, "constructor": false}, {"identifier": "markSupported", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean markSupported()", "full_signature": "@Override public boolean markSupported()", "class_method_signature": "DynamicCompositeByteBufInputStream.markSupported()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int read()", "full_signature": "@Override public int read()", "class_method_signature": "DynamicCompositeByteBufInputStream.read()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(byte[] b, int off, int len)", "modifiers": "@Override public", "return": "int", "signature": "int read(byte[] b, int off, int len)", "full_signature": "@Override public int read(byte[] b, int off, int len)", "class_method_signature": "DynamicCompositeByteBufInputStream.read(byte[] b, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "skip", "parameters": "(long n)", "modifiers": "@Override public", "return": "long", "signature": "long skip(long n)", "full_signature": "@Override public long skip(long n)", "class_method_signature": "DynamicCompositeByteBufInputStream.skip(long n)", "testcase": false, "constructor": false}, {"identifier": "skipBytes", "parameters": "(int n)", "modifiers": "public", "return": "int", "signature": "int skipBytes(int n)", "full_signature": "public int skipBytes(int n)", "class_method_signature": "DynamicCompositeByteBufInputStream.skipBytes(int n)", "testcase": false, "constructor": false}, {"identifier": "readBoolean", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean readBoolean()", "full_signature": "@Override public boolean readBoolean()", "class_method_signature": "DynamicCompositeByteBufInputStream.readBoolean()", "testcase": false, "constructor": false}, {"identifier": "readByte", "parameters": "()", "modifiers": "@Override public", "return": "byte", "signature": "byte readByte()", "full_signature": "@Override public byte readByte()", "class_method_signature": "DynamicCompositeByteBufInputStream.readByte()", "testcase": false, "constructor": false}, {"identifier": "readChar", "parameters": "()", "modifiers": "@Override public", "return": "char", "signature": "char readChar()", "full_signature": "@Override public char readChar()", "class_method_signature": "DynamicCompositeByteBufInputStream.readChar()", "testcase": false, "constructor": false}, {"identifier": "readDouble", "parameters": "()", "modifiers": "@Override public", "return": "double", "signature": "double readDouble()", "full_signature": "@Override public double readDouble()", "class_method_signature": "DynamicCompositeByteBufInputStream.readDouble()", "testcase": false, "constructor": false}, {"identifier": "readFloat", "parameters": "()", "modifiers": "@Override public", "return": "float", "signature": "float readFloat()", "full_signature": "@Override public float readFloat()", "class_method_signature": "DynamicCompositeByteBufInputStream.readFloat()", "testcase": false, "constructor": false}, {"identifier": "readFully", "parameters": "(byte[] b)", "modifiers": "@Override public", "return": "void", "signature": "void readFully(byte[] b)", "full_signature": "@Override public void readFully(byte[] b)", "class_method_signature": "DynamicCompositeByteBufInputStream.readFully(byte[] b)", "testcase": false, "constructor": false}, {"identifier": "readFully", "parameters": "(byte[] b, int off, int len)", "modifiers": "@Override public", "return": "void", "signature": "void readFully(byte[] b, int off, int len)", "full_signature": "@Override public void readFully(byte[] b, int off, int len)", "class_method_signature": "DynamicCompositeByteBufInputStream.readFully(byte[] b, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "readInt", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int readInt()", "full_signature": "@Override public int readInt()", "class_method_signature": "DynamicCompositeByteBufInputStream.readInt()", "testcase": false, "constructor": false}, {"identifier": "readLine", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String readLine()", "full_signature": "@Override public String readLine()", "class_method_signature": "DynamicCompositeByteBufInputStream.readLine()", "testcase": false, "constructor": false}, {"identifier": "readLong", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long readLong()", "full_signature": "@Override public long readLong()", "class_method_signature": "DynamicCompositeByteBufInputStream.readLong()", "testcase": false, "constructor": false}, {"identifier": "readShort", "parameters": "()", "modifiers": "@Override public", "return": "short", "signature": "short readShort()", "full_signature": "@Override public short readShort()", "class_method_signature": "DynamicCompositeByteBufInputStream.readShort()", "testcase": false, "constructor": false}, {"identifier": "readUTF", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String readUTF()", "full_signature": "@Override public String readUTF()", "class_method_signature": "DynamicCompositeByteBufInputStream.readUTF()", "testcase": false, "constructor": false}, {"identifier": "readUnsignedByte", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int readUnsignedByte()", "full_signature": "@Override public int readUnsignedByte()", "class_method_signature": "DynamicCompositeByteBufInputStream.readUnsignedByte()", "testcase": false, "constructor": false}, {"identifier": "readUnsignedShort", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int readUnsignedShort()", "full_signature": "@Override public int readUnsignedShort()", "class_method_signature": "DynamicCompositeByteBufInputStream.readUnsignedShort()", "testcase": false, "constructor": false}, {"identifier": "checkAvailable", "parameters": "(int fieldSize)", "modifiers": "private", "return": "void", "signature": "void checkAvailable(int fieldSize)", "full_signature": "private void checkAvailable(int fieldSize)", "class_method_signature": "DynamicCompositeByteBufInputStream.checkAvailable(int fieldSize)", "testcase": false, "constructor": false}], "file": "brpc-java-communication/src/main/java/com/baidu/brpc/buffer/DynamicCompositeByteBufInputStream.java"}, "focal_method": {"identifier": "read", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int read() throws IOException {\n        if (!buffer.isReadable()) {\n            return -1;\n        }\n        return buffer.readByte() & 0xff;\n    }", "signature": "int read()", "full_signature": "@Override public int read()", "class_method_signature": "DynamicCompositeByteBufInputStream.read()", "testcase": false, "constructor": false, "invocations": ["isReadable", "readByte"]}, "repository": {"repo_id": 162548942, "url": "https://github.com/baidu/brpc-java", "language": "Java", "is_fork": false, "fork_count": 175, "stargazer_count": 551, "size": 3271, "license": "licensed"}}