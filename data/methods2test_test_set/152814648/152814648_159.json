{"test_class": {"identifier": "SeverityTrendChartTest", "superclass": "", "interfaces": "", "fields": [], "file": "plugin/src/test/java/io/jenkins/plugins/analysis/core/charts/SeverityTrendChartTest.java"}, "test_case": {"identifier": "shouldCreatePriorityChartWithZeroWarningsAndErrors", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldCreatePriorityChartWithZeroWarningsAndErrors() {\n        SeverityTrendChart chart = new SeverityTrendChart();\n\n        List<BuildResult<AnalysisBuildResult>> results = new ArrayList<>();\n        results.add(createResult(4, 0, 0, 0, 0));\n        results.add(createResult(3, 0, 0, 0, 0));\n        results.add(createResult(2, 2, 2, 4, 6));\n        results.add(createResult(1, 3, 1, 2, 3));\n\n        LinesChartModel model = chart.create(results, new ChartModelConfiguration());\n\n        verifySeries(model.getSeries().get(0), Severity.WARNING_LOW, 3, 6, 0, 0);\n        verifySeries(model.getSeries().get(1), Severity.WARNING_NORMAL, 2, 4, 0, 0);\n        verifySeries(model.getSeries().get(2), Severity.WARNING_HIGH, 1, 2, 0, 0);\n        verifySeries(model.getSeries().get(3), Severity.ERROR, 3, 2, 0, 0);\n\n        assertThatJson(model).node(\"domainAxisLabels\")\n                .isArray().hasSize(4).containsExactly(\"#1\", \"#2\", \"#3\", \"#4\");\n        assertThatJson(model).node(\"buildNumbers\")\n                .isArray().hasSize(4).containsExactly(1, 2, 3, 4);\n        assertThatJson(model).node(\"series\")\n                .isArray().hasSize(4);\n    }", "signature": "void shouldCreatePriorityChartWithZeroWarningsAndErrors()", "full_signature": "@Test void shouldCreatePriorityChartWithZeroWarningsAndErrors()", "class_method_signature": "SeverityTrendChartTest.shouldCreatePriorityChartWithZeroWarningsAndErrors()", "testcase": true, "constructor": false, "invocations": ["add", "createResult", "add", "createResult", "add", "createResult", "add", "createResult", "create", "verifySeries", "get", "getSeries", "verifySeries", "get", "getSeries", "verifySeries", "get", "getSeries", "verifySeries", "get", "getSeries", "containsExactly", "hasSize", "isArray", "node", "assertThatJson", "containsExactly", "hasSize", "isArray", "node", "assertThatJson", "hasSize", "isArray", "node", "assertThatJson"]}, "focal_class": {"identifier": "SeverityTrendChart", "superclass": "", "interfaces": "implements TrendChart", "fields": [], "methods": [{"identifier": "create", "parameters": "(final Iterable<? extends BuildResult<AnalysisBuildResult>> results,\n            final ChartModelConfiguration configuration)", "modifiers": "@Override public", "return": "LinesChartModel", "signature": "LinesChartModel create(final Iterable<? extends BuildResult<AnalysisBuildResult>> results,\n            final ChartModelConfiguration configuration)", "full_signature": "@Override public LinesChartModel create(final Iterable<? extends BuildResult<AnalysisBuildResult>> results,\n            final ChartModelConfiguration configuration)", "class_method_signature": "SeverityTrendChart.create(final Iterable<? extends BuildResult<AnalysisBuildResult>> results,\n            final ChartModelConfiguration configuration)", "testcase": false, "constructor": false}, {"identifier": "aggregate", "parameters": "(final List<Iterable<? extends BuildResult<AnalysisBuildResult>>> results,\n            final ChartModelConfiguration configuration)", "modifiers": "public", "return": "LinesChartModel", "signature": "LinesChartModel aggregate(final List<Iterable<? extends BuildResult<AnalysisBuildResult>>> results,\n            final ChartModelConfiguration configuration)", "full_signature": "public LinesChartModel aggregate(final List<Iterable<? extends BuildResult<AnalysisBuildResult>>> results,\n            final ChartModelConfiguration configuration)", "class_method_signature": "SeverityTrendChart.aggregate(final List<Iterable<? extends BuildResult<AnalysisBuildResult>>> results,\n            final ChartModelConfiguration configuration)", "testcase": false, "constructor": false}, {"identifier": "createChartFromDataSet", "parameters": "(final LinesDataSet dataSet)", "modifiers": "private", "return": "LinesChartModel", "signature": "LinesChartModel createChartFromDataSet(final LinesDataSet dataSet)", "full_signature": "private LinesChartModel createChartFromDataSet(final LinesDataSet dataSet)", "class_method_signature": "SeverityTrendChart.createChartFromDataSet(final LinesDataSet dataSet)", "testcase": false, "constructor": false}, {"identifier": "createSeries", "parameters": "(final Severity severity)", "modifiers": "private", "return": "LineSeries", "signature": "LineSeries createSeries(final Severity severity)", "full_signature": "private LineSeries createSeries(final Severity severity)", "class_method_signature": "SeverityTrendChart.createSeries(final Severity severity)", "testcase": false, "constructor": false}], "file": "plugin/src/main/java/io/jenkins/plugins/analysis/core/charts/SeverityTrendChart.java"}, "focal_method": {"identifier": "create", "parameters": "(final Iterable<? extends BuildResult<AnalysisBuildResult>> results,\n            final ChartModelConfiguration configuration)", "modifiers": "@Override public", "return": "LinesChartModel", "body": "@Override\n    public LinesChartModel create(final Iterable<? extends BuildResult<AnalysisBuildResult>> results,\n            final ChartModelConfiguration configuration) {\n        SeveritySeriesBuilder builder = new SeveritySeriesBuilder();\n        LinesDataSet dataSet = builder.createDataSet(configuration, results);\n\n        return createChartFromDataSet(dataSet);\n    }", "signature": "LinesChartModel create(final Iterable<? extends BuildResult<AnalysisBuildResult>> results,\n            final ChartModelConfiguration configuration)", "full_signature": "@Override public LinesChartModel create(final Iterable<? extends BuildResult<AnalysisBuildResult>> results,\n            final ChartModelConfiguration configuration)", "class_method_signature": "SeverityTrendChart.create(final Iterable<? extends BuildResult<AnalysisBuildResult>> results,\n            final ChartModelConfiguration configuration)", "testcase": false, "constructor": false, "invocations": ["createDataSet", "createChartFromDataSet"]}, "repository": {"repo_id": 152814648, "url": "https://github.com/jenkinsci/warnings-ng-plugin", "stars": 158, "created": "10/12/2018 10:41:36 PM +00:00", "updates": "2020-01-27T14:00:03+00:00", "fork": "False", "license": "licensed"}}