{"test_class": {"identifier": "TableMetadataResourceTest", "superclass": "extends ResourceTest", "interfaces": "", "fields": [{"original_string": "private TableMetadataManager tableMetadataManager;", "modifier": "private", "type": "TableMetadataManager", "declarator": "tableMetadataManager", "var_name": "tableMetadataManager"}, {"original_string": "private MockElasticsearchServer elasticsearchServer;", "modifier": "private", "type": "MockElasticsearchServer", "declarator": "elasticsearchServer", "var_name": "elasticsearchServer"}, {"original_string": "private HazelcastInstance hazelcastInstance;", "modifier": "private", "type": "HazelcastInstance", "declarator": "hazelcastInstance", "var_name": "hazelcastInstance"}], "file": "real-time/foxtrot/foxtrot-server/src/test/java/com/flipkart/foxtrot/server/resources/TableMetadataResourceTest.java"}, "test_case": {"identifier": "testSaveBackendError", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSaveBackendError() throws Exception {\n        Table table = new Table(UUID.randomUUID().toString(), 30);\n        doThrow(new Exception()).when(tableMetadataManager).save(Matchers.<Table>any());\n        try {\n            client().resource(\"/v1/tables\").type(MediaType.APPLICATION_JSON_TYPE).post(table);\n        } catch (UniformInterfaceException ex) {\n            assertEquals(Response.Status.INTERNAL_SERVER_ERROR.getStatusCode(), ex.getResponse().getStatus());\n        }\n    }", "signature": "void testSaveBackendError()", "full_signature": "@Test public void testSaveBackendError()", "class_method_signature": "TableMetadataResourceTest.testSaveBackendError()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "save", "when", "doThrow", "any", "post", "type", "resource", "client", "assertEquals", "getStatusCode", "getStatus", "getResponse"]}, "focal_class": {"identifier": "TableMetadataResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(TableMetadataResource.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(TableMetadataResource.class)", "var_name": "logger"}, {"original_string": "private final TableMetadataManager tableMetadataManager;", "modifier": "private final", "type": "TableMetadataManager", "declarator": "tableMetadataManager", "var_name": "tableMetadataManager"}], "methods": [{"identifier": "TableMetadataResource", "parameters": "(TableMetadataManager tableMetadataManager)", "modifiers": "public", "return": "", "signature": " TableMetadataResource(TableMetadataManager tableMetadataManager)", "full_signature": "public  TableMetadataResource(TableMetadataManager tableMetadataManager)", "class_method_signature": "TableMetadataResource.TableMetadataResource(TableMetadataManager tableMetadataManager)", "testcase": false, "constructor": true}, {"identifier": "save", "parameters": "(@Valid final Table table)", "modifiers": "@POST public", "return": "Table", "signature": "Table save(@Valid final Table table)", "full_signature": "@POST public Table save(@Valid final Table table)", "class_method_signature": "TableMetadataResource.save(@Valid final Table table)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(@PathParam(\"name\") final String name)", "modifiers": "@GET @Path(\"/{name}\") public", "return": "Table", "signature": "Table get(@PathParam(\"name\") final String name)", "full_signature": "@GET @Path(\"/{name}\") public Table get(@PathParam(\"name\") final String name)", "class_method_signature": "TableMetadataResource.get(@PathParam(\"name\") final String name)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@PathParam(\"name\") final String name)", "modifiers": "@DELETE @Path(\"/{name}/delete\") public", "return": "void", "signature": "void delete(@PathParam(\"name\") final String name)", "full_signature": "@DELETE @Path(\"/{name}/delete\") public void delete(@PathParam(\"name\") final String name)", "class_method_signature": "TableMetadataResource.delete(@PathParam(\"name\") final String name)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "@GET public", "return": "List<Table>", "signature": "List<Table> get()", "full_signature": "@GET public List<Table> get()", "class_method_signature": "TableMetadataResource.get()", "testcase": false, "constructor": false}], "file": "real-time/foxtrot/foxtrot-server/src/main/java/com/flipkart/foxtrot/server/resources/TableMetadataResource.java"}, "focal_method": {"identifier": "save", "parameters": "(@Valid final Table table)", "modifiers": "@POST public", "return": "Table", "body": "@POST\n    public Table save(@Valid final Table table) {\n        try {\n            tableMetadataManager.save(table);\n        } catch (Exception e) {\n            logger.error(String.format(\"Unable to save table %s\", table), e);\n            throw new WebApplicationException(Response.serverError().entity(Collections.singletonMap(\"error\", e.getMessage())).build());\n        }\n        return table;\n    }", "signature": "Table save(@Valid final Table table)", "full_signature": "@POST public Table save(@Valid final Table table)", "class_method_signature": "TableMetadataResource.save(@Valid final Table table)", "testcase": false, "constructor": false, "invocations": ["save", "error", "format", "build", "entity", "serverError", "singletonMap", "getMessage"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}