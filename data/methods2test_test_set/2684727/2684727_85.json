{"test_class": {"identifier": "OcrResponseParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/co/smartreceipts/android/ocr/util/OcrResponseParserTest.java"}, "test_case": {"identifier": "getTotalAmount", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getTotalAmount() {\n        assertNull(new OcrResponseParser(null).getTotalAmount());\n        assertNull(new OcrResponseParser(new OcrResponse(null, null, null, null, null, null, null, null)).getTotalAmount());\n        assertNull(new OcrResponseParser(new OcrResponse(new OcrResponseField<>(null, null), null, null, null, null, null, null, null)).getTotalAmount());\n        assertEquals(\"23.30\", new OcrResponseParser(new OcrResponse(new OcrResponseField<>(23.3, null), null, null, null, null, null, null, null)).getTotalAmount());\n    }", "signature": "void getTotalAmount()", "full_signature": "@Test public void getTotalAmount()", "class_method_signature": "OcrResponseParserTest.getTotalAmount()", "testcase": true, "constructor": false, "invocations": ["assertNull", "getTotalAmount", "assertNull", "getTotalAmount", "assertNull", "getTotalAmount", "assertEquals", "getTotalAmount"]}, "focal_class": {"identifier": "OcrResponseParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final double MINIMUM_DATE_CONFIDENCE = 0.4;", "modifier": "private static final", "type": "double", "declarator": "MINIMUM_DATE_CONFIDENCE = 0.4", "var_name": "MINIMUM_DATE_CONFIDENCE"}, {"original_string": "private final OcrResponse ocrResponse;", "modifier": "private final", "type": "OcrResponse", "declarator": "ocrResponse", "var_name": "ocrResponse"}], "methods": [{"identifier": "OcrResponseParser", "parameters": "(@Nullable OcrResponse ocrResponse)", "modifiers": "public", "return": "", "signature": " OcrResponseParser(@Nullable OcrResponse ocrResponse)", "full_signature": "public  OcrResponseParser(@Nullable OcrResponse ocrResponse)", "class_method_signature": "OcrResponseParser.OcrResponseParser(@Nullable OcrResponse ocrResponse)", "testcase": false, "constructor": true}, {"identifier": "getMerchant", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String getMerchant()", "full_signature": "@Nullable public String getMerchant()", "class_method_signature": "OcrResponseParser.getMerchant()", "testcase": false, "constructor": false}, {"identifier": "getTotalAmount", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String getTotalAmount()", "full_signature": "@Nullable public String getTotalAmount()", "class_method_signature": "OcrResponseParser.getTotalAmount()", "testcase": false, "constructor": false}, {"identifier": "getTaxAmount", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String getTaxAmount()", "full_signature": "@Nullable public String getTaxAmount()", "class_method_signature": "OcrResponseParser.getTaxAmount()", "testcase": false, "constructor": false}, {"identifier": "getDate", "parameters": "()", "modifiers": "@Nullable public", "return": "Date", "signature": "Date getDate()", "full_signature": "@Nullable public Date getDate()", "class_method_signature": "OcrResponseParser.getDate()", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/ocr/util/OcrResponseParser.java"}, "focal_method": {"identifier": "getTotalAmount", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "body": "@Nullable\n    public String getTotalAmount() {\n        if (ocrResponse != null && ocrResponse.getTotalAmount() != null && ocrResponse.getTotalAmount().getData() != null) {\n            return ModelUtils.getDecimalFormattedValue(BigDecimal.valueOf(ocrResponse.getTotalAmount().getData()));\n        } else {\n            return null;\n        }\n    }", "signature": "String getTotalAmount()", "full_signature": "@Nullable public String getTotalAmount()", "class_method_signature": "OcrResponseParser.getTotalAmount()", "testcase": false, "constructor": false, "invocations": ["getTotalAmount", "getData", "getTotalAmount", "getDecimalFormattedValue", "valueOf", "getData", "getTotalAmount"]}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}