{"test_class": {"identifier": "IeeeCdfImporterTest", "superclass": "extends AbstractConverterTest", "interfaces": "", "fields": [], "file": "ieee-cdf/ieee-cdf-converter/src/test/java/com/powsybl/ieeecdf/converter/IeeeCdfImporterTest.java"}, "test_case": {"identifier": "existsTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void existsTest() {\n        assertTrue(new IeeeCdfImporter().exists(new ResourceDataSource(\"ieee14cdf\", new ResourceSet(\"/\", \"ieee14cdf.txt\"))));\n    }", "signature": "void existsTest()", "full_signature": "@Test public void existsTest()", "class_method_signature": "IeeeCdfImporterTest.existsTest()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "exists"]}, "focal_class": {"identifier": "IeeeCdfImporter", "superclass": "", "interfaces": "implements Importer", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(IeeeCdfImporter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(IeeeCdfImporter.class)", "var_name": "LOGGER"}, {"original_string": "private static final String FORMAT = \"IEEE-CDF\";", "modifier": "private static final", "type": "String", "declarator": "FORMAT = \"IEEE-CDF\"", "var_name": "FORMAT"}, {"original_string": "private static final String EXT = \"txt\";", "modifier": "private static final", "type": "String", "declarator": "EXT = \"txt\"", "var_name": "EXT"}, {"original_string": "private static final Parameter IGNORE_BASE_VOLTAGE_PARAMETER = new Parameter(\"ignore-base-voltage\",\n                                                                                 ParameterType.BOOLEAN,\n                                                                                 \"Ignore base voltage specified in the file\",\n                                                                                 Boolean.TRUE);", "modifier": "private static final", "type": "Parameter", "declarator": "IGNORE_BASE_VOLTAGE_PARAMETER = new Parameter(\"ignore-base-voltage\",\n                                                                                 ParameterType.BOOLEAN,\n                                                                                 \"Ignore base voltage specified in the file\",\n                                                                                 Boolean.TRUE)", "var_name": "IGNORE_BASE_VOLTAGE_PARAMETER"}, {"original_string": "private static final double DEFAULT_ACTIVE_POWER_LIMIT = 9999d;", "modifier": "private static final", "type": "double", "declarator": "DEFAULT_ACTIVE_POWER_LIMIT = 9999d", "var_name": "DEFAULT_ACTIVE_POWER_LIMIT"}], "methods": [{"identifier": "getFormat", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getFormat()", "full_signature": "@Override public String getFormat()", "class_method_signature": "IeeeCdfImporter.getFormat()", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "@Override public", "return": "List<Parameter>", "signature": "List<Parameter> getParameters()", "full_signature": "@Override public List<Parameter> getParameters()", "class_method_signature": "IeeeCdfImporter.getParameters()", "testcase": false, "constructor": false}, {"identifier": "getComment", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getComment()", "full_signature": "@Override public String getComment()", "class_method_signature": "IeeeCdfImporter.getComment()", "testcase": false, "constructor": false}, {"identifier": "exists", "parameters": "(ReadOnlyDataSource dataSource)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean exists(ReadOnlyDataSource dataSource)", "full_signature": "@Override public boolean exists(ReadOnlyDataSource dataSource)", "class_method_signature": "IeeeCdfImporter.exists(ReadOnlyDataSource dataSource)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(ReadOnlyDataSource fromDataSource, DataSource toDataSource)", "modifiers": "@Override public", "return": "void", "signature": "void copy(ReadOnlyDataSource fromDataSource, DataSource toDataSource)", "full_signature": "@Override public void copy(ReadOnlyDataSource fromDataSource, DataSource toDataSource)", "class_method_signature": "IeeeCdfImporter.copy(ReadOnlyDataSource fromDataSource, DataSource toDataSource)", "testcase": false, "constructor": false}, {"identifier": "isTransformer", "parameters": "(IeeeCdfBranch ieeeCdfBranch)", "modifiers": "private static", "return": "boolean", "signature": "boolean isTransformer(IeeeCdfBranch ieeeCdfBranch)", "full_signature": "private static boolean isTransformer(IeeeCdfBranch ieeeCdfBranch)", "class_method_signature": "IeeeCdfImporter.isTransformer(IeeeCdfBranch ieeeCdfBranch)", "testcase": false, "constructor": false}, {"identifier": "getBusId", "parameters": "(int busNum)", "modifiers": "private static", "return": "String", "signature": "String getBusId(int busNum)", "full_signature": "private static String getBusId(int busNum)", "class_method_signature": "IeeeCdfImporter.getBusId(int busNum)", "testcase": false, "constructor": false}, {"identifier": "createBuses", "parameters": "(IeeeCdfModel ieeeCdfModel, ContainersMapping containerMapping, PerUnitContext perUnitContext,\n                                    Network network)", "modifiers": "private static", "return": "void", "signature": "void createBuses(IeeeCdfModel ieeeCdfModel, ContainersMapping containerMapping, PerUnitContext perUnitContext,\n                                    Network network)", "full_signature": "private static void createBuses(IeeeCdfModel ieeeCdfModel, ContainersMapping containerMapping, PerUnitContext perUnitContext,\n                                    Network network)", "class_method_signature": "IeeeCdfImporter.createBuses(IeeeCdfModel ieeeCdfModel, ContainersMapping containerMapping, PerUnitContext perUnitContext,\n                                    Network network)", "testcase": false, "constructor": false}, {"identifier": "createBus", "parameters": "(IeeeCdfBus ieeeCdfBus, VoltageLevel voltageLevel)", "modifiers": "private static", "return": "Bus", "signature": "Bus createBus(IeeeCdfBus ieeeCdfBus, VoltageLevel voltageLevel)", "full_signature": "private static Bus createBus(IeeeCdfBus ieeeCdfBus, VoltageLevel voltageLevel)", "class_method_signature": "IeeeCdfImporter.createBus(IeeeCdfBus ieeeCdfBus, VoltageLevel voltageLevel)", "testcase": false, "constructor": false}, {"identifier": "createSubstation", "parameters": "(Network network, String substationId)", "modifiers": "private static", "return": "Substation", "signature": "Substation createSubstation(Network network, String substationId)", "full_signature": "private static Substation createSubstation(Network network, String substationId)", "class_method_signature": "IeeeCdfImporter.createSubstation(Network network, String substationId)", "testcase": false, "constructor": false}, {"identifier": "createVoltageLevel", "parameters": "(IeeeCdfBus ieeeCdfBus, PerUnitContext perUnitContext,\n                                                   String voltageLevelId, Substation substation, Network network)", "modifiers": "private static", "return": "VoltageLevel", "signature": "VoltageLevel createVoltageLevel(IeeeCdfBus ieeeCdfBus, PerUnitContext perUnitContext,\n                                                   String voltageLevelId, Substation substation, Network network)", "full_signature": "private static VoltageLevel createVoltageLevel(IeeeCdfBus ieeeCdfBus, PerUnitContext perUnitContext,\n                                                   String voltageLevelId, Substation substation, Network network)", "class_method_signature": "IeeeCdfImporter.createVoltageLevel(IeeeCdfBus ieeeCdfBus, PerUnitContext perUnitContext,\n                                                   String voltageLevelId, Substation substation, Network network)", "testcase": false, "constructor": false}, {"identifier": "createLoad", "parameters": "(IeeeCdfBus ieeeCdfBus, VoltageLevel voltageLevel)", "modifiers": "private static", "return": "void", "signature": "void createLoad(IeeeCdfBus ieeeCdfBus, VoltageLevel voltageLevel)", "full_signature": "private static void createLoad(IeeeCdfBus ieeeCdfBus, VoltageLevel voltageLevel)", "class_method_signature": "IeeeCdfImporter.createLoad(IeeeCdfBus ieeeCdfBus, VoltageLevel voltageLevel)", "testcase": false, "constructor": false}, {"identifier": "newGeneratorAdder", "parameters": "(IeeeCdfBus ieeeCdfBus, VoltageLevel voltageLevel)", "modifiers": "private static", "return": "GeneratorAdder", "signature": "GeneratorAdder newGeneratorAdder(IeeeCdfBus ieeeCdfBus, VoltageLevel voltageLevel)", "full_signature": "private static GeneratorAdder newGeneratorAdder(IeeeCdfBus ieeeCdfBus, VoltageLevel voltageLevel)", "class_method_signature": "IeeeCdfImporter.newGeneratorAdder(IeeeCdfBus ieeeCdfBus, VoltageLevel voltageLevel)", "testcase": false, "constructor": false}, {"identifier": "createShuntCompensator", "parameters": "(IeeeCdfBus ieeeCdfBus, PerUnitContext perUnitContext, VoltageLevel voltageLevel)", "modifiers": "private static", "return": "void", "signature": "void createShuntCompensator(IeeeCdfBus ieeeCdfBus, PerUnitContext perUnitContext, VoltageLevel voltageLevel)", "full_signature": "private static void createShuntCompensator(IeeeCdfBus ieeeCdfBus, PerUnitContext perUnitContext, VoltageLevel voltageLevel)", "class_method_signature": "IeeeCdfImporter.createShuntCompensator(IeeeCdfBus ieeeCdfBus, PerUnitContext perUnitContext, VoltageLevel voltageLevel)", "testcase": false, "constructor": false}, {"identifier": "getBranchId", "parameters": "(char type, int tapBusNumber, int zBusNumber, int circuit, Network network)", "modifiers": "private static", "return": "String", "signature": "String getBranchId(char type, int tapBusNumber, int zBusNumber, int circuit, Network network)", "full_signature": "private static String getBranchId(char type, int tapBusNumber, int zBusNumber, int circuit, Network network)", "class_method_signature": "IeeeCdfImporter.getBranchId(char type, int tapBusNumber, int zBusNumber, int circuit, Network network)", "testcase": false, "constructor": false}, {"identifier": "createLine", "parameters": "(IeeeCdfBranch ieeeCdfBranch, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "modifiers": "private static", "return": "void", "signature": "void createLine(IeeeCdfBranch ieeeCdfBranch, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "full_signature": "private static void createLine(IeeeCdfBranch ieeeCdfBranch, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "class_method_signature": "IeeeCdfImporter.createLine(IeeeCdfBranch ieeeCdfBranch, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "testcase": false, "constructor": false}, {"identifier": "createTransformer", "parameters": "(IeeeCdfBranch ieeeCdfBranch, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "modifiers": "private static", "return": "TwoWindingsTransformer", "signature": "TwoWindingsTransformer createTransformer(IeeeCdfBranch ieeeCdfBranch, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "full_signature": "private static TwoWindingsTransformer createTransformer(IeeeCdfBranch ieeeCdfBranch, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "class_method_signature": "IeeeCdfImporter.createTransformer(IeeeCdfBranch ieeeCdfBranch, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "testcase": false, "constructor": false}, {"identifier": "getRegulatingTerminal", "parameters": "(IeeeCdfBranch ieeeCdfBranch, TwoWindingsTransformer transformer)", "modifiers": "private static", "return": "Terminal", "signature": "Terminal getRegulatingTerminal(IeeeCdfBranch ieeeCdfBranch, TwoWindingsTransformer transformer)", "full_signature": "private static Terminal getRegulatingTerminal(IeeeCdfBranch ieeeCdfBranch, TwoWindingsTransformer transformer)", "class_method_signature": "IeeeCdfImporter.getRegulatingTerminal(IeeeCdfBranch ieeeCdfBranch, TwoWindingsTransformer transformer)", "testcase": false, "constructor": false}, {"identifier": "createTransformerWithVoltageControl", "parameters": "(IeeeCdfBranch ieeeCdfBranch, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "modifiers": "private static", "return": "void", "signature": "void createTransformerWithVoltageControl(IeeeCdfBranch ieeeCdfBranch, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "full_signature": "private static void createTransformerWithVoltageControl(IeeeCdfBranch ieeeCdfBranch, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "class_method_signature": "IeeeCdfImporter.createTransformerWithVoltageControl(IeeeCdfBranch ieeeCdfBranch, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "testcase": false, "constructor": false}, {"identifier": "createTransformerWithActivePowerControl", "parameters": "(IeeeCdfBranch ieeeCdfBranch, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "modifiers": "private static", "return": "void", "signature": "void createTransformerWithActivePowerControl(IeeeCdfBranch ieeeCdfBranch, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "full_signature": "private static void createTransformerWithActivePowerControl(IeeeCdfBranch ieeeCdfBranch, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "class_method_signature": "IeeeCdfImporter.createTransformerWithActivePowerControl(IeeeCdfBranch ieeeCdfBranch, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "testcase": false, "constructor": false}, {"identifier": "createBranches", "parameters": "(IeeeCdfModel ieeeCdfModel, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "modifiers": "private static", "return": "void", "signature": "void createBranches(IeeeCdfModel ieeeCdfModel, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "full_signature": "private static void createBranches(IeeeCdfModel ieeeCdfModel, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "class_method_signature": "IeeeCdfImporter.createBranches(IeeeCdfModel ieeeCdfModel, ContainersMapping containerMapping, PerUnitContext perUnitContext, Network network)", "testcase": false, "constructor": false}, {"identifier": "importData", "parameters": "(ReadOnlyDataSource dataSource, NetworkFactory networkFactory, Properties parameters)", "modifiers": "@Override public", "return": "Network", "signature": "Network importData(ReadOnlyDataSource dataSource, NetworkFactory networkFactory, Properties parameters)", "full_signature": "@Override public Network importData(ReadOnlyDataSource dataSource, NetworkFactory networkFactory, Properties parameters)", "class_method_signature": "IeeeCdfImporter.importData(ReadOnlyDataSource dataSource, NetworkFactory networkFactory, Properties parameters)", "testcase": false, "constructor": false}], "file": "ieee-cdf/ieee-cdf-converter/src/main/java/com/powsybl/ieeecdf/converter/IeeeCdfImporter.java"}, "focal_method": {"identifier": "exists", "parameters": "(ReadOnlyDataSource dataSource)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean exists(ReadOnlyDataSource dataSource) {\n        try {\n            if (dataSource.exists(null, EXT)) {\n                try (BufferedReader reader = new BufferedReader(new InputStreamReader(dataSource.newInputStream(null, EXT)))) {\n                    String titleLine = reader.readLine();\n                    if (titleLine != null) {\n                        return titleLine.length() >= 44\n                                && titleLine.charAt(3) == '/'\n                                && titleLine.charAt(6) == '/'\n                                && (titleLine.charAt(43) == 'S' || titleLine.charAt(43) == 'W');\n                    }\n                }\n            }\n        } catch (IOException e) {\n            throw new UncheckedIOException(e);\n        }\n        return false;\n    }", "signature": "boolean exists(ReadOnlyDataSource dataSource)", "full_signature": "@Override public boolean exists(ReadOnlyDataSource dataSource)", "class_method_signature": "IeeeCdfImporter.exists(ReadOnlyDataSource dataSource)", "testcase": false, "constructor": false, "invocations": ["exists", "newInputStream", "readLine", "length", "charAt", "charAt", "charAt", "charAt"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}