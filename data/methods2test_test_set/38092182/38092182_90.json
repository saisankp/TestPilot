{"test_class": {"identifier": "HtmlInterstitialTest", "superclass": "extends ResponseBodyInterstitialTest", "interfaces": "", "fields": [{"original_string": "private CustomEventInterstitialListener customEventInterstitialListener;", "modifier": "private", "type": "CustomEventInterstitialListener", "declarator": "customEventInterstitialListener", "var_name": "customEventInterstitialListener"}, {"original_string": "private Activity context;", "modifier": "private", "type": "Activity", "declarator": "context", "var_name": "context"}, {"original_string": "private Map<String,Object> localExtras;", "modifier": "private", "type": "Map<String,Object>", "declarator": "localExtras", "var_name": "localExtras"}, {"original_string": "private Map<String,String> serverExtras;", "modifier": "private", "type": "Map<String,String>", "declarator": "serverExtras", "var_name": "serverExtras"}, {"original_string": "private HtmlInterstitialWebView htmlInterstitialWebView;", "modifier": "private", "type": "HtmlInterstitialWebView", "declarator": "htmlInterstitialWebView", "var_name": "htmlInterstitialWebView"}, {"original_string": "private String expectedResponse;", "modifier": "private", "type": "String", "declarator": "expectedResponse", "var_name": "expectedResponse"}, {"original_string": "private long broadcastIdentifier;", "modifier": "private", "type": "long", "declarator": "broadcastIdentifier", "var_name": "broadcastIdentifier"}], "file": "MoPubAd/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialTest.java"}, "test_case": {"identifier": "showInterstitial_withMinimumExtras_shouldStartMoPubActivityWithDefaults", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void showInterstitial_withMinimumExtras_shouldStartMoPubActivityWithDefaults() throws Exception {\n        subject.loadInterstitial(context, customEventInterstitialListener, localExtras, serverExtras);\n        subject.showInterstitial();\n\n        Intent nextStartedActivity = Robolectric.getShadowApplication().getNextStartedActivity();\n        assertThat(nextStartedActivity.getStringExtra(HTML_RESPONSE_BODY_KEY)).isEqualTo(expectedResponse);\n        assertThat(nextStartedActivity.getBooleanExtra(SCROLLABLE_KEY, false)).isFalse();\n        assertThat(nextStartedActivity.getStringExtra(REDIRECT_URL_KEY)).isNull();\n        assertThat(nextStartedActivity.getStringExtra(CLICKTHROUGH_URL_KEY)).isNull();\n        assertThat(nextStartedActivity.getFlags() & Intent.FLAG_ACTIVITY_NEW_TASK).isNotEqualTo(0);\n        assertThat(nextStartedActivity.getComponent().getClassName()).isEqualTo(\"com.mopub.mobileads.MoPubActivity\");\n    }", "signature": "void showInterstitial_withMinimumExtras_shouldStartMoPubActivityWithDefaults()", "full_signature": "@Test public void showInterstitial_withMinimumExtras_shouldStartMoPubActivityWithDefaults()", "class_method_signature": "HtmlInterstitialTest.showInterstitial_withMinimumExtras_shouldStartMoPubActivityWithDefaults()", "testcase": true, "constructor": false, "invocations": ["loadInterstitial", "showInterstitial", "getNextStartedActivity", "getShadowApplication", "isEqualTo", "assertThat", "getStringExtra", "isFalse", "assertThat", "getBooleanExtra", "isNull", "assertThat", "getStringExtra", "isNull", "assertThat", "getStringExtra", "isNotEqualTo", "assertThat", "getFlags", "isEqualTo", "assertThat", "getClassName", "getComponent"]}, "focal_class": {"identifier": "HtmlInterstitial", "superclass": "extends ResponseBodyInterstitial", "interfaces": "", "fields": [{"original_string": "private String mHtmlData;", "modifier": "private", "type": "String", "declarator": "mHtmlData", "var_name": "mHtmlData"}, {"original_string": "private boolean mIsScrollable;", "modifier": "private", "type": "boolean", "declarator": "mIsScrollable", "var_name": "mIsScrollable"}, {"original_string": "private String mRedirectUrl;", "modifier": "private", "type": "String", "declarator": "mRedirectUrl", "var_name": "mRedirectUrl"}, {"original_string": "private String mClickthroughUrl;", "modifier": "private", "type": "String", "declarator": "mClickthroughUrl", "var_name": "mClickthroughUrl"}], "methods": [{"identifier": "extractExtras", "parameters": "(Map<String, String> serverExtras)", "modifiers": "@Override protected", "return": "void", "signature": "void extractExtras(Map<String, String> serverExtras)", "full_signature": "@Override protected void extractExtras(Map<String, String> serverExtras)", "class_method_signature": "HtmlInterstitial.extractExtras(Map<String, String> serverExtras)", "testcase": false, "constructor": false}, {"identifier": "preRenderHtml", "parameters": "(CustomEventInterstitialListener customEventInterstitialListener)", "modifiers": "@Override protected", "return": "void", "signature": "void preRenderHtml(CustomEventInterstitialListener customEventInterstitialListener)", "full_signature": "@Override protected void preRenderHtml(CustomEventInterstitialListener customEventInterstitialListener)", "class_method_signature": "HtmlInterstitial.preRenderHtml(CustomEventInterstitialListener customEventInterstitialListener)", "testcase": false, "constructor": false}, {"identifier": "showInterstitial", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void showInterstitial()", "full_signature": "@Override public void showInterstitial()", "class_method_signature": "HtmlInterstitial.showInterstitial()", "testcase": false, "constructor": false}], "file": "MoPubAd/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlInterstitial.java"}, "focal_method": {"identifier": "showInterstitial", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void showInterstitial() {\n        MoPubActivity.start(mContext, mHtmlData, mIsScrollable, mRedirectUrl, mClickthroughUrl, mAdConfiguration);\n    }", "signature": "void showInterstitial()", "full_signature": "@Override public void showInterstitial()", "class_method_signature": "HtmlInterstitial.showInterstitial()", "testcase": false, "constructor": false, "invocations": ["start"]}, "repository": {"repo_id": 38092182, "url": "https://github.com/harshalbenake/hbworkspace2-100", "language": "Java", "is_fork": false, "fork_count": 160, "stargazer_count": 191, "size": 307516, "license": "licensed"}}