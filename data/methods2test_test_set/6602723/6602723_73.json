{"test_class": {"identifier": "TestFailureExposingHttpClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FailureExposingHttpClient impl;", "modifier": "private", "type": "FailureExposingHttpClient", "declarator": "impl", "var_name": "impl"}, {"original_string": "private StubHttpClient backend;", "modifier": "private", "type": "StubHttpClient", "declarator": "backend", "var_name": "backend"}, {"original_string": "private HttpResponse resp;", "modifier": "private", "type": "HttpResponse", "declarator": "resp", "var_name": "resp"}, {"original_string": "private HttpHost host;", "modifier": "private", "type": "HttpHost", "declarator": "host", "var_name": "host"}, {"original_string": "private HttpRequest req;", "modifier": "private", "type": "HttpRequest", "declarator": "req", "var_name": "req"}, {"original_string": "private HttpContext ctx;", "modifier": "private", "type": "HttpContext", "declarator": "ctx", "var_name": "ctx"}], "file": "jrugged-httpclient/src/test/java/org/fishwife/jrugged/httpclient/TestFailureExposingHttpClient.java"}, "test_case": {"identifier": "generatesFailureOn4XXResponse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void generatesFailureOn4XXResponse() throws Exception {\n        for(int i = 400; i <= 499; i++) {\n            resp = new BasicHttpResponse(HttpVersion.HTTP_1_1, i, \"Client Error\");\n            backend.setResponse(resp);\n            try {\n                impl.execute(host, req, ctx);\n                fail(\"should have thrown exception\");\n            } catch (UnsuccessfulResponseException expected) {\n            }\n        }\n    }", "signature": "void generatesFailureOn4XXResponse()", "full_signature": "@Test public void generatesFailureOn4XXResponse()", "class_method_signature": "TestFailureExposingHttpClient.generatesFailureOn4XXResponse()", "testcase": true, "constructor": false, "invocations": ["setResponse", "execute", "fail"]}, "focal_class": {"identifier": "FailureExposingHttpClient", "superclass": "extends AbstractHttpClientDecorator", "interfaces": "", "fields": [{"original_string": "private ResponseFailureAssessor assessor;", "modifier": "private", "type": "ResponseFailureAssessor", "declarator": "assessor", "var_name": "assessor"}], "methods": [{"identifier": "FailureExposingHttpClient", "parameters": "(HttpClient backend)", "modifiers": "public", "return": "", "signature": " FailureExposingHttpClient(HttpClient backend)", "full_signature": "public  FailureExposingHttpClient(HttpClient backend)", "class_method_signature": "FailureExposingHttpClient.FailureExposingHttpClient(HttpClient backend)", "testcase": false, "constructor": true}, {"identifier": "FailureExposingHttpClient", "parameters": "(HttpClient backend, ResponseFailureAssessor assessor)", "modifiers": "public", "return": "", "signature": " FailureExposingHttpClient(HttpClient backend, ResponseFailureAssessor assessor)", "full_signature": "public  FailureExposingHttpClient(HttpClient backend, ResponseFailureAssessor assessor)", "class_method_signature": "FailureExposingHttpClient.FailureExposingHttpClient(HttpClient backend, ResponseFailureAssessor assessor)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "(HttpHost host, HttpRequest req, HttpContext ctx)", "modifiers": "public", "return": "HttpResponse", "signature": "HttpResponse execute(HttpHost host, HttpRequest req, HttpContext ctx)", "full_signature": "public HttpResponse execute(HttpHost host, HttpRequest req, HttpContext ctx)", "class_method_signature": "FailureExposingHttpClient.execute(HttpHost host, HttpRequest req, HttpContext ctx)", "testcase": false, "constructor": false}], "file": "jrugged-httpclient/src/main/java/org/fishwife/jrugged/httpclient/FailureExposingHttpClient.java"}, "focal_method": {"identifier": "execute", "parameters": "(HttpHost host, HttpRequest req, HttpContext ctx)", "modifiers": "public", "return": "HttpResponse", "body": "public HttpResponse execute(HttpHost host, HttpRequest req, HttpContext ctx)\n            throws IOException, ClientProtocolException {\n        HttpResponse resp = backend.execute(host, req, ctx);\n        if (assessor.isFailure(resp)) {\n            throw new UnsuccessfulResponseException(resp);\n        }\n        return resp;\n    }", "signature": "HttpResponse execute(HttpHost host, HttpRequest req, HttpContext ctx)", "full_signature": "public HttpResponse execute(HttpHost host, HttpRequest req, HttpContext ctx)", "class_method_signature": "FailureExposingHttpClient.execute(HttpHost host, HttpRequest req, HttpContext ctx)", "testcase": false, "constructor": false, "invocations": ["execute", "isFailure"]}, "repository": {"repo_id": 6602723, "url": "https://github.com/Comcast/jrugged", "language": "Java", "is_fork": false, "fork_count": 90, "stargazer_count": 236, "size": 1302, "license": "licensed"}}