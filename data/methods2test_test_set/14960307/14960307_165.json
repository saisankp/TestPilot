{"test_class": {"identifier": "CountryUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(CountryUtilTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(CountryUtilTest.class)", "var_name": "logger"}], "file": "ch-commons-locale/src/test/java/com/cloudhopper/commons/locale/CountryUtilTest.java"}, "test_case": {"identifier": "countryByName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void countryByName() throws Exception {\n        List<Country> countries = CountryUtil.getCountriesByName();\n        // first couple element check, name isn't in Country's comparison\n        /**\n         * AF AFG 004 Afghanistan\nAL ALB 008 Albania, People's Socialist Republic of\nDZ DZA 012 Algeria, People's Democratic Republic of\nAS ASM 016 American Samoa\nAD AND 020 Andorra, Principality of\n         */\n        Assert.assertEquals(countries.get(0), new Country(\"AF\", \"\", \"\"));\n        Assert.assertEquals(countries.get(1), new Country(\"AL\", \"\", \"\"));\n        Assert.assertEquals(countries.get(2), new Country(\"DZ\", \"\", \"\"));\n        Assert.assertEquals(countries.get(3), new Country(\"AS\", \"\", \"\"));\n        Assert.assertEquals(countries.get(4), new Country(\"AD\", \"\", \"\"));\n\n        Country c0 = countries.get(4);\n        Assert.assertEquals(\"Andorra\", c0.getName());\n        Assert.assertEquals(\"Andorra, Principality of\", c0.getLongName());\n    }", "signature": "void countryByName()", "full_signature": "@Test public void countryByName()", "class_method_signature": "CountryUtilTest.countryByName()", "testcase": true, "constructor": false, "invocations": ["getCountriesByName", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "get", "assertEquals", "getName", "assertEquals", "getLongName"]}, "focal_class": {"identifier": "CountryUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(CountryUtil.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(CountryUtil.class)", "var_name": "logger"}, {"original_string": "private static HashMap<String,Country> byIso2;", "modifier": "private static", "type": "HashMap<String,Country>", "declarator": "byIso2", "var_name": "byIso2"}, {"original_string": "private static ArrayList<Country> byName;", "modifier": "private static", "type": "ArrayList<Country>", "declarator": "byName", "var_name": "byName"}], "methods": [{"identifier": "CountryUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " CountryUtil()", "full_signature": "private  CountryUtil()", "class_method_signature": "CountryUtil.CountryUtil()", "testcase": false, "constructor": true}, {"identifier": "lookupByIso2", "parameters": "(String iso2)", "modifiers": "public static", "return": "Country", "signature": "Country lookupByIso2(String iso2)", "full_signature": "public static Country lookupByIso2(String iso2)", "class_method_signature": "CountryUtil.lookupByIso2(String iso2)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(InputStream is)", "modifiers": "public static", "return": "ArrayList<Country>", "signature": "ArrayList<Country> parse(InputStream is)", "full_signature": "public static ArrayList<Country> parse(InputStream is)", "class_method_signature": "CountryUtil.parse(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "getCountriesByName", "parameters": "()", "modifiers": "public static", "return": "List<Country>", "signature": "List<Country> getCountriesByName()", "full_signature": "public static List<Country> getCountriesByName()", "class_method_signature": "CountryUtil.getCountriesByName()", "testcase": false, "constructor": false}], "file": "ch-commons-locale/src/main/java/com/cloudhopper/commons/locale/CountryUtil.java"}, "focal_method": {"identifier": "getCountriesByName", "parameters": "()", "modifiers": "public static", "return": "List<Country>", "body": "public static List<Country> getCountriesByName() {\n        return byName;\n    }", "signature": "List<Country> getCountriesByName()", "full_signature": "public static List<Country> getCountriesByName()", "class_method_signature": "CountryUtil.getCountriesByName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 14960307, "url": "https://github.com/twitter/cloudhopper-commons", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 36, "size": 6452, "license": "licensed"}}