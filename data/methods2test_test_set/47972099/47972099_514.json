{"test_class": {"identifier": "WrapperSetupHelperTest", "superclass": "extends AbstractTest", "interfaces": "", "fields": [], "file": "flink-contrib/flink-storm/src/test/java/org/apache/flink/storm/wrappers/WrapperSetupHelperTest.java"}, "test_case": {"identifier": "testEmptyDeclarerBolt", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testEmptyDeclarerBolt() {\n\t\tIComponent boltOrSpout;\n\n\t\tif (this.r.nextBoolean()) {\n\t\t\tboltOrSpout = mock(IRichSpout.class);\n\t\t} else {\n\t\t\tboltOrSpout = mock(IRichBolt.class);\n\t\t}\n\n\t\tAssert.assertEquals(new HashMap<String, Integer>(),\n\t\t\t\tWrapperSetupHelper.getNumberOfAttributes(boltOrSpout, null));\n\t}", "signature": "void testEmptyDeclarerBolt()", "full_signature": "@Test public void testEmptyDeclarerBolt()", "class_method_signature": "WrapperSetupHelperTest.testEmptyDeclarerBolt()", "testcase": true, "constructor": false, "invocations": ["nextBoolean", "mock", "mock", "assertEquals", "getNumberOfAttributes"]}, "focal_class": {"identifier": "WrapperSetupHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "final static String TOPOLOGY_NAME = \"storm.topology.name\";", "modifier": "final static", "type": "String", "declarator": "TOPOLOGY_NAME = \"storm.topology.name\"", "var_name": "TOPOLOGY_NAME"}, {"original_string": "private static int tid;", "modifier": "private static", "type": "int", "declarator": "tid", "var_name": "tid"}], "methods": [{"identifier": "getNumberOfAttributes", "parameters": "(final IComponent spoutOrBolt,\n\t\t\tfinal Collection<String> rawOutputs)", "modifiers": "static", "return": "HashMap<String, Integer>", "signature": "HashMap<String, Integer> getNumberOfAttributes(final IComponent spoutOrBolt,\n\t\t\tfinal Collection<String> rawOutputs)", "full_signature": "static HashMap<String, Integer> getNumberOfAttributes(final IComponent spoutOrBolt,\n\t\t\tfinal Collection<String> rawOutputs)", "class_method_signature": "WrapperSetupHelper.getNumberOfAttributes(final IComponent spoutOrBolt,\n\t\t\tfinal Collection<String> rawOutputs)", "testcase": false, "constructor": false}, {"identifier": "createTopologyContext", "parameters": "(\n\t\t\tfinal StreamingRuntimeContext context, final IComponent spoutOrBolt,\n\t\t\tfinal String operatorName, StormTopology stormTopology, final Map stormConfig)", "modifiers": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) static synchronized", "return": "TopologyContext", "signature": "TopologyContext createTopologyContext(\n\t\t\tfinal StreamingRuntimeContext context, final IComponent spoutOrBolt,\n\t\t\tfinal String operatorName, StormTopology stormTopology, final Map stormConfig)", "full_signature": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) static synchronized TopologyContext createTopologyContext(\n\t\t\tfinal StreamingRuntimeContext context, final IComponent spoutOrBolt,\n\t\t\tfinal String operatorName, StormTopology stormTopology, final Map stormConfig)", "class_method_signature": "WrapperSetupHelper.createTopologyContext(\n\t\t\tfinal StreamingRuntimeContext context, final IComponent spoutOrBolt,\n\t\t\tfinal String operatorName, StormTopology stormTopology, final Map stormConfig)", "testcase": false, "constructor": false}, {"identifier": "processSingleOperator", "parameters": "(final String componentId,\n\t\t\tfinal ComponentCommon common, final String operatorName, final int index,\n\t\t\tfinal int dop, final Map<Integer, String> taskToComponents,\n\t\t\tfinal Map<String, List<Integer>> componentToSortedTasks,\n\t\t\tfinal Map<String, Map<String, Fields>> componentToStreamToFields)", "modifiers": "private static", "return": "Integer", "signature": "Integer processSingleOperator(final String componentId,\n\t\t\tfinal ComponentCommon common, final String operatorName, final int index,\n\t\t\tfinal int dop, final Map<Integer, String> taskToComponents,\n\t\t\tfinal Map<String, List<Integer>> componentToSortedTasks,\n\t\t\tfinal Map<String, Map<String, Fields>> componentToStreamToFields)", "full_signature": "private static Integer processSingleOperator(final String componentId,\n\t\t\tfinal ComponentCommon common, final String operatorName, final int index,\n\t\t\tfinal int dop, final Map<Integer, String> taskToComponents,\n\t\t\tfinal Map<String, List<Integer>> componentToSortedTasks,\n\t\t\tfinal Map<String, Map<String, Fields>> componentToStreamToFields)", "class_method_signature": "WrapperSetupHelper.processSingleOperator(final String componentId,\n\t\t\tfinal ComponentCommon common, final String operatorName, final int index,\n\t\t\tfinal int dop, final Map<Integer, String> taskToComponents,\n\t\t\tfinal Map<String, List<Integer>> componentToSortedTasks,\n\t\t\tfinal Map<String, Map<String, Fields>> componentToStreamToFields)", "testcase": false, "constructor": false}], "file": "flink-contrib/flink-storm/src/main/java/org/apache/flink/storm/wrappers/WrapperSetupHelper.java"}, "focal_method": {"identifier": "getNumberOfAttributes", "parameters": "(final IComponent spoutOrBolt,\n\t\t\tfinal Collection<String> rawOutputs)", "modifiers": "static", "return": "HashMap<String, Integer>", "body": "static HashMap<String, Integer> getNumberOfAttributes(final IComponent spoutOrBolt,\n\t\t\tfinal Collection<String> rawOutputs)\n\t\t\t\t\tthrows IllegalArgumentException {\n\t\tfinal SetupOutputFieldsDeclarer declarer = new SetupOutputFieldsDeclarer();\n\t\tspoutOrBolt.declareOutputFields(declarer);\n\n\t\tfor (Entry<String, Integer> schema : declarer.outputSchemas.entrySet()) {\n\t\t\tint declaredNumberOfAttributes = schema.getValue();\n\t\t\tif ((declaredNumberOfAttributes < 0) || (declaredNumberOfAttributes > 25)) {\n\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\"Provided bolt declares non supported number of output attributes. Must be in range [0;25] but \"\n\t\t\t\t\t\t\t\t+ \"was \" + declaredNumberOfAttributes);\n\t\t\t}\n\n\t\t\tif (rawOutputs != null && rawOutputs.contains(schema.getKey())) {\n\t\t\t\tif (declaredNumberOfAttributes != 1) {\n\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\"Ouput type is requested to be raw type, but provided bolt declares more then one output \"\n\t\t\t\t\t\t\t\t\t+ \"attribute.\");\n\t\t\t\t}\n\t\t\t\tschema.setValue(-1);\n\t\t\t}\n\t\t}\n\n\t\treturn declarer.outputSchemas;\n\t}", "signature": "HashMap<String, Integer> getNumberOfAttributes(final IComponent spoutOrBolt,\n\t\t\tfinal Collection<String> rawOutputs)", "full_signature": "static HashMap<String, Integer> getNumberOfAttributes(final IComponent spoutOrBolt,\n\t\t\tfinal Collection<String> rawOutputs)", "class_method_signature": "WrapperSetupHelper.getNumberOfAttributes(final IComponent spoutOrBolt,\n\t\t\tfinal Collection<String> rawOutputs)", "testcase": false, "constructor": false, "invocations": ["declareOutputFields", "entrySet", "getValue", "contains", "getKey", "setValue"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}