{"test_class": {"identifier": "SecurityFunctionServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SECURITY_FUNCTION_NAME_WITH_EXTRA_SPACES = SECURITY_FUNCTION + \"    \";", "modifier": "private static final", "type": "String", "declarator": "SECURITY_FUNCTION_NAME_WITH_EXTRA_SPACES = SECURITY_FUNCTION + \"    \"", "var_name": "SECURITY_FUNCTION_NAME_WITH_EXTRA_SPACES"}, {"original_string": "private static final SecurityFunctionCreateRequest SECURITY_FUNCTION_CREATE_REQUEST = new SecurityFunctionCreateRequest()\n    {{\n        setSecurityFunctionName(SECURITY_FUNCTION);\n    }};", "modifier": "private static final", "type": "SecurityFunctionCreateRequest", "declarator": "SECURITY_FUNCTION_CREATE_REQUEST = new SecurityFunctionCreateRequest()\n    {{\n        setSecurityFunctionName(SECURITY_FUNCTION);\n    }}", "var_name": "SECURITY_FUNCTION_CREATE_REQUEST"}, {"original_string": "private static final SecurityFunctionCreateRequest SECURITY_FUNCTION_CREATE_REQUEST_WITH_EXTRA_SPACES_IN_NAME = new SecurityFunctionCreateRequest()\n    {{\n        setSecurityFunctionName(SECURITY_FUNCTION_NAME_WITH_EXTRA_SPACES);\n    }};", "modifier": "private static final", "type": "SecurityFunctionCreateRequest", "declarator": "SECURITY_FUNCTION_CREATE_REQUEST_WITH_EXTRA_SPACES_IN_NAME = new SecurityFunctionCreateRequest()\n    {{\n        setSecurityFunctionName(SECURITY_FUNCTION_NAME_WITH_EXTRA_SPACES);\n    }}", "var_name": "SECURITY_FUNCTION_CREATE_REQUEST_WITH_EXTRA_SPACES_IN_NAME"}, {"original_string": "private static final SecurityFunctionKey SECURITY_FUNCTION_KEY = new SecurityFunctionKey()\n    {{\n        setSecurityFunctionName(SECURITY_FUNCTION);\n    }};", "modifier": "private static final", "type": "SecurityFunctionKey", "declarator": "SECURITY_FUNCTION_KEY = new SecurityFunctionKey()\n    {{\n        setSecurityFunctionName(SECURITY_FUNCTION);\n    }}", "var_name": "SECURITY_FUNCTION_KEY"}, {"original_string": "private static final SecurityFunctionKey SECURITY_FUNCTION_KEY_WITH_EXTRA_SPACES_IN_NAME = new SecurityFunctionKey()\n    {{\n        setSecurityFunctionName(SECURITY_FUNCTION_NAME_WITH_EXTRA_SPACES);\n    }};", "modifier": "private static final", "type": "SecurityFunctionKey", "declarator": "SECURITY_FUNCTION_KEY_WITH_EXTRA_SPACES_IN_NAME = new SecurityFunctionKey()\n    {{\n        setSecurityFunctionName(SECURITY_FUNCTION_NAME_WITH_EXTRA_SPACES);\n    }}", "var_name": "SECURITY_FUNCTION_KEY_WITH_EXTRA_SPACES_IN_NAME"}, {"original_string": "private static final SecurityFunctionEntity SECURITY_FUNCTION_ENTITY = new SecurityFunctionEntity()\n    {{\n        setCode(SECURITY_FUNCTION);\n        setCreatedBy(CREATED_BY);\n        setUpdatedBy(CREATED_BY);\n        setCreatedOn(new Timestamp(CREATED_ON.getMillisecond()));\n    }};", "modifier": "private static final", "type": "SecurityFunctionEntity", "declarator": "SECURITY_FUNCTION_ENTITY = new SecurityFunctionEntity()\n    {{\n        setCode(SECURITY_FUNCTION);\n        setCreatedBy(CREATED_BY);\n        setUpdatedBy(CREATED_BY);\n        setCreatedOn(new Timestamp(CREATED_ON.getMillisecond()));\n    }}", "var_name": "SECURITY_FUNCTION_ENTITY"}, {"original_string": "private static final List<String> ALL_SECURITY_FUNCTION_NAMES = Arrays.asList(SECURITY_FUNCTION, SECURITY_FUNCTION_2, SECURITY_FUNCTION_3);", "modifier": "private static final", "type": "List<String>", "declarator": "ALL_SECURITY_FUNCTION_NAMES = Arrays.asList(SECURITY_FUNCTION, SECURITY_FUNCTION_2, SECURITY_FUNCTION_3)", "var_name": "ALL_SECURITY_FUNCTION_NAMES"}, {"original_string": "@InjectMocks\n    private SecurityFunctionServiceImpl securityFunctionService;", "modifier": "@InjectMocks\n    private", "type": "SecurityFunctionServiceImpl", "declarator": "securityFunctionService", "var_name": "securityFunctionService"}, {"original_string": "@Mock\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Mock\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@Mock\n    private SecurityFunctionDao securityFunctionDao;", "modifier": "@Mock\n    private", "type": "SecurityFunctionDao", "declarator": "securityFunctionDao", "var_name": "securityFunctionDao"}, {"original_string": "@Mock\n    private SecurityFunctionDaoHelper securityFunctionDaoHelper;", "modifier": "@Mock\n    private", "type": "SecurityFunctionDaoHelper", "declarator": "securityFunctionDaoHelper", "var_name": "securityFunctionDaoHelper"}, {"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/impl/SecurityFunctionServiceImplTest.java"}, "test_case": {"identifier": "testValidateAndTrimSecurityFunctionKeyExtraSpaces", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateAndTrimSecurityFunctionKeyExtraSpaces()\n    {\n        when(alternateKeyHelper.validateStringParameter(anyString(), anyString())).thenReturn(SECURITY_FUNCTION);\n\n        assertEquals(SECURITY_FUNCTION_NAME_WITH_EXTRA_SPACES, SECURITY_FUNCTION_KEY_WITH_EXTRA_SPACES_IN_NAME.getSecurityFunctionName());\n        securityFunctionService.validateAndTrimSecurityFunctionKey(SECURITY_FUNCTION_KEY_WITH_EXTRA_SPACES_IN_NAME);\n        // White space should be trimmed now\n        assertEquals(SECURITY_FUNCTION, SECURITY_FUNCTION_KEY_WITH_EXTRA_SPACES_IN_NAME.getSecurityFunctionName());\n    }", "signature": "void testValidateAndTrimSecurityFunctionKeyExtraSpaces()", "full_signature": "@Test public void testValidateAndTrimSecurityFunctionKeyExtraSpaces()", "class_method_signature": "SecurityFunctionServiceImplTest.testValidateAndTrimSecurityFunctionKeyExtraSpaces()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "validateStringParameter", "anyString", "anyString", "assertEquals", "getSecurityFunctionName", "validateAndTrimSecurityFunctionKey", "assertEquals", "getSecurityFunctionName"]}, "focal_class": {"identifier": "SecurityFunctionServiceImpl", "superclass": "", "interfaces": "implements SecurityFunctionService", "fields": [{"original_string": "@Autowired\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Autowired\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@Autowired\n    private SecurityFunctionDao securityFunctionDao;", "modifier": "@Autowired\n    private", "type": "SecurityFunctionDao", "declarator": "securityFunctionDao", "var_name": "securityFunctionDao"}, {"original_string": "@Autowired\n    private SecurityFunctionDaoHelper securityFunctionDaoHelper;", "modifier": "@Autowired\n    private", "type": "SecurityFunctionDaoHelper", "declarator": "securityFunctionDaoHelper", "var_name": "securityFunctionDaoHelper"}], "methods": [{"identifier": "createSecurityFunction", "parameters": "(SecurityFunctionCreateRequest request)", "modifiers": "@Override public", "return": "SecurityFunction", "signature": "SecurityFunction createSecurityFunction(SecurityFunctionCreateRequest request)", "full_signature": "@Override public SecurityFunction createSecurityFunction(SecurityFunctionCreateRequest request)", "class_method_signature": "SecurityFunctionServiceImpl.createSecurityFunction(SecurityFunctionCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "getSecurityFunction", "parameters": "(SecurityFunctionKey securityFunctionKey)", "modifiers": "@Override public", "return": "SecurityFunction", "signature": "SecurityFunction getSecurityFunction(SecurityFunctionKey securityFunctionKey)", "full_signature": "@Override public SecurityFunction getSecurityFunction(SecurityFunctionKey securityFunctionKey)", "class_method_signature": "SecurityFunctionServiceImpl.getSecurityFunction(SecurityFunctionKey securityFunctionKey)", "testcase": false, "constructor": false}, {"identifier": "deleteSecurityFunction", "parameters": "(SecurityFunctionKey securityFunctionKey)", "modifiers": "@Override public", "return": "SecurityFunction", "signature": "SecurityFunction deleteSecurityFunction(SecurityFunctionKey securityFunctionKey)", "full_signature": "@Override public SecurityFunction deleteSecurityFunction(SecurityFunctionKey securityFunctionKey)", "class_method_signature": "SecurityFunctionServiceImpl.deleteSecurityFunction(SecurityFunctionKey securityFunctionKey)", "testcase": false, "constructor": false}, {"identifier": "getSecurityFunctions", "parameters": "()", "modifiers": "@Override public", "return": "SecurityFunctionKeys", "signature": "SecurityFunctionKeys getSecurityFunctions()", "full_signature": "@Override public SecurityFunctionKeys getSecurityFunctions()", "class_method_signature": "SecurityFunctionServiceImpl.getSecurityFunctions()", "testcase": false, "constructor": false}, {"identifier": "validateSecurityFunctionCreateRequest", "parameters": "(SecurityFunctionCreateRequest request)", "modifiers": "", "return": "void", "signature": "void validateSecurityFunctionCreateRequest(SecurityFunctionCreateRequest request)", "full_signature": " void validateSecurityFunctionCreateRequest(SecurityFunctionCreateRequest request)", "class_method_signature": "SecurityFunctionServiceImpl.validateSecurityFunctionCreateRequest(SecurityFunctionCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "validateAndTrimSecurityFunctionKey", "parameters": "(SecurityFunctionKey securityFunctionKey)", "modifiers": "", "return": "void", "signature": "void validateAndTrimSecurityFunctionKey(SecurityFunctionKey securityFunctionKey)", "full_signature": " void validateAndTrimSecurityFunctionKey(SecurityFunctionKey securityFunctionKey)", "class_method_signature": "SecurityFunctionServiceImpl.validateAndTrimSecurityFunctionKey(SecurityFunctionKey securityFunctionKey)", "testcase": false, "constructor": false}, {"identifier": "createSecurityFunctionEntity", "parameters": "(SecurityFunctionCreateRequest request)", "modifiers": "private", "return": "SecurityFunctionEntity", "signature": "SecurityFunctionEntity createSecurityFunctionEntity(SecurityFunctionCreateRequest request)", "full_signature": "private SecurityFunctionEntity createSecurityFunctionEntity(SecurityFunctionCreateRequest request)", "class_method_signature": "SecurityFunctionServiceImpl.createSecurityFunctionEntity(SecurityFunctionCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "createSecurityFunctionFromEntity", "parameters": "(SecurityFunctionEntity securityFunctionEntity)", "modifiers": "private", "return": "SecurityFunction", "signature": "SecurityFunction createSecurityFunctionFromEntity(SecurityFunctionEntity securityFunctionEntity)", "full_signature": "private SecurityFunction createSecurityFunctionFromEntity(SecurityFunctionEntity securityFunctionEntity)", "class_method_signature": "SecurityFunctionServiceImpl.createSecurityFunctionFromEntity(SecurityFunctionEntity securityFunctionEntity)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/impl/SecurityFunctionServiceImpl.java"}, "focal_method": {"identifier": "validateAndTrimSecurityFunctionKey", "parameters": "(SecurityFunctionKey securityFunctionKey)", "modifiers": "", "return": "void", "body": "void validateAndTrimSecurityFunctionKey(SecurityFunctionKey securityFunctionKey) throws IllegalArgumentException\n    {\n        Assert.notNull(securityFunctionKey, \"A security function key must be specified.\");\n        securityFunctionKey\n            .setSecurityFunctionName(alternateKeyHelper.validateStringParameter(\"security function name\", securityFunctionKey.getSecurityFunctionName()));\n    }", "signature": "void validateAndTrimSecurityFunctionKey(SecurityFunctionKey securityFunctionKey)", "full_signature": " void validateAndTrimSecurityFunctionKey(SecurityFunctionKey securityFunctionKey)", "class_method_signature": "SecurityFunctionServiceImpl.validateAndTrimSecurityFunctionKey(SecurityFunctionKey securityFunctionKey)", "testcase": false, "constructor": false, "invocations": ["notNull", "setSecurityFunctionName", "validateStringParameter", "getSecurityFunctionName"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}