{"test_class": {"identifier": "NumberRollingColumnTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/tech/tablesaw/columns/numbers/NumberRollingColumnTest.java"}, "test_case": {"identifier": "testRollingMean", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRollingMean() {\n    double[] data = new double[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n    double missing = DoubleColumnType.missingValueIndicator();\n    double[] sma5 = new double[] {missing, missing, missing, missing, 3, 4, 5, 6, 7, 8};\n    DoubleColumn result = DoubleColumn.create(\"data\", data).rolling(5).mean();\n    assertArrayEquals(sma5, result.asDoubleArray(), 0.000001);\n    assertEquals(\"data 5-period Mean\", result.name());\n  }", "signature": "void testRollingMean()", "full_signature": "@Test public void testRollingMean()", "class_method_signature": "NumberRollingColumnTest.testRollingMean()", "testcase": true, "constructor": false, "invocations": ["missingValueIndicator", "mean", "rolling", "create", "assertArrayEquals", "asDoubleArray", "assertEquals", "name"]}, "focal_class": {"identifier": "NumberRollingColumn", "superclass": "extends RollingColumn", "interfaces": "", "fields": [], "methods": [{"identifier": "NumberRollingColumn", "parameters": "(NumericColumn<?> column, int window)", "modifiers": "public", "return": "", "signature": " NumberRollingColumn(NumericColumn<?> column, int window)", "full_signature": "public  NumberRollingColumn(NumericColumn<?> column, int window)", "class_method_signature": "NumberRollingColumn.NumberRollingColumn(NumericColumn<?> column, int window)", "testcase": false, "constructor": true}, {"identifier": "mean", "parameters": "()", "modifiers": "public", "return": "DoubleColumn", "signature": "DoubleColumn mean()", "full_signature": "public DoubleColumn mean()", "class_method_signature": "NumberRollingColumn.mean()", "testcase": false, "constructor": false}, {"identifier": "median", "parameters": "()", "modifiers": "public", "return": "DoubleColumn", "signature": "DoubleColumn median()", "full_signature": "public DoubleColumn median()", "class_method_signature": "NumberRollingColumn.median()", "testcase": false, "constructor": false}, {"identifier": "geometricMean", "parameters": "()", "modifiers": "public", "return": "DoubleColumn", "signature": "DoubleColumn geometricMean()", "full_signature": "public DoubleColumn geometricMean()", "class_method_signature": "NumberRollingColumn.geometricMean()", "testcase": false, "constructor": false}, {"identifier": "sum", "parameters": "()", "modifiers": "public", "return": "DoubleColumn", "signature": "DoubleColumn sum()", "full_signature": "public DoubleColumn sum()", "class_method_signature": "NumberRollingColumn.sum()", "testcase": false, "constructor": false}, {"identifier": "min", "parameters": "()", "modifiers": "public", "return": "DoubleColumn", "signature": "DoubleColumn min()", "full_signature": "public DoubleColumn min()", "class_method_signature": "NumberRollingColumn.min()", "testcase": false, "constructor": false}, {"identifier": "max", "parameters": "()", "modifiers": "public", "return": "DoubleColumn", "signature": "DoubleColumn max()", "full_signature": "public DoubleColumn max()", "class_method_signature": "NumberRollingColumn.max()", "testcase": false, "constructor": false}, {"identifier": "countMissing", "parameters": "()", "modifiers": "public", "return": "DoubleColumn", "signature": "DoubleColumn countMissing()", "full_signature": "public DoubleColumn countMissing()", "class_method_signature": "NumberRollingColumn.countMissing()", "testcase": false, "constructor": false}, {"identifier": "countNonMissing", "parameters": "()", "modifiers": "public", "return": "DoubleColumn", "signature": "DoubleColumn countNonMissing()", "full_signature": "public DoubleColumn countNonMissing()", "class_method_signature": "NumberRollingColumn.countNonMissing()", "testcase": false, "constructor": false}, {"identifier": "stdDev", "parameters": "()", "modifiers": "public", "return": "DoubleColumn", "signature": "DoubleColumn stdDev()", "full_signature": "public DoubleColumn stdDev()", "class_method_signature": "NumberRollingColumn.stdDev()", "testcase": false, "constructor": false}, {"identifier": "variance", "parameters": "()", "modifiers": "public", "return": "DoubleColumn", "signature": "DoubleColumn variance()", "full_signature": "public DoubleColumn variance()", "class_method_signature": "NumberRollingColumn.variance()", "testcase": false, "constructor": false}, {"identifier": "skewness", "parameters": "()", "modifiers": "public", "return": "DoubleColumn", "signature": "DoubleColumn skewness()", "full_signature": "public DoubleColumn skewness()", "class_method_signature": "NumberRollingColumn.skewness()", "testcase": false, "constructor": false}, {"identifier": "kurtosis", "parameters": "()", "modifiers": "public", "return": "DoubleColumn", "signature": "DoubleColumn kurtosis()", "full_signature": "public DoubleColumn kurtosis()", "class_method_signature": "NumberRollingColumn.kurtosis()", "testcase": false, "constructor": false}], "file": "core/src/main/java/tech/tablesaw/columns/numbers/NumberRollingColumn.java"}, "focal_method": {"identifier": "mean", "parameters": "()", "modifiers": "public", "return": "DoubleColumn", "body": "public DoubleColumn mean() {\n    return (DoubleColumn) calc(AggregateFunctions.mean);\n  }", "signature": "DoubleColumn mean()", "full_signature": "public DoubleColumn mean()", "class_method_signature": "NumberRollingColumn.mean()", "testcase": false, "constructor": false, "invocations": ["calc"]}, "repository": {"repo_id": 48880766, "url": "https://github.com/jtablesaw/tablesaw", "stars": 2021, "created": "1/1/2016 2:58:28 PM +00:00", "updates": "2020-01-24T23:26:07+00:00", "fork": "False", "license": "licensed"}}