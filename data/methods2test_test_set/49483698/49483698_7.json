{"test_class": {"identifier": "KeyValueReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "jhelper/src/test/java/com/hwangjr/jhelper/KeyValueReaderTest.java"}, "test_case": {"identifier": "testReader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReader() throws IOException {\n        Map<String, String> map = new KeyValueReader(\":\")\n                .loadFromFile(new File(\"test/key-value-colon-separator.txt\"));\n        Assert.assertEquals(map.size(), 4);\n        Assert.assertTrue(TestUtil.containsAllKeys(map, \"1\", \"2\", \"3\", \"4\"));\n        Assert.assertTrue(TestUtil.containsAllValues(map, \"bir\", \"iki\", \"uc\", \"dort\"));\n    }", "signature": "void testReader()", "full_signature": "@Test public void testReader()", "class_method_signature": "KeyValueReaderTest.testReader()", "testcase": true, "constructor": false, "invocations": ["loadFromFile", "assertEquals", "size", "assertTrue", "containsAllKeys", "assertTrue", "containsAllValues"]}, "focal_class": {"identifier": "KeyValueReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String separator;", "modifier": "private final", "type": "String", "declarator": "separator", "var_name": "separator"}, {"original_string": "private final String ignorePrefix;", "modifier": "private final", "type": "String", "declarator": "ignorePrefix", "var_name": "ignorePrefix"}], "methods": [{"identifier": "KeyValueReader", "parameters": "(String seperator)", "modifiers": "public", "return": "", "signature": " KeyValueReader(String seperator)", "full_signature": "public  KeyValueReader(String seperator)", "class_method_signature": "KeyValueReader.KeyValueReader(String seperator)", "testcase": false, "constructor": true}, {"identifier": "KeyValueReader", "parameters": "(String seperator, String ignorePrefix)", "modifiers": "public", "return": "", "signature": " KeyValueReader(String seperator, String ignorePrefix)", "full_signature": "public  KeyValueReader(String seperator, String ignorePrefix)", "class_method_signature": "KeyValueReader.KeyValueReader(String seperator, String ignorePrefix)", "testcase": false, "constructor": true}, {"identifier": "loadFromFile", "parameters": "(File file)", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> loadFromFile(File file)", "full_signature": "public Map<String, String> loadFromFile(File file)", "class_method_signature": "KeyValueReader.loadFromFile(File file)", "testcase": false, "constructor": false}, {"identifier": "loadFromFile", "parameters": "(File file, String encoding)", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> loadFromFile(File file, String encoding)", "full_signature": "public Map<String, String> loadFromFile(File file, String encoding)", "class_method_signature": "KeyValueReader.loadFromFile(File file, String encoding)", "testcase": false, "constructor": false}, {"identifier": "loadFromStream", "parameters": "(InputStream is)", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> loadFromStream(InputStream is)", "full_signature": "public Map<String, String> loadFromStream(InputStream is)", "class_method_signature": "KeyValueReader.loadFromStream(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "loadFromStream", "parameters": "(InputStream is, String encoding)", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> loadFromStream(InputStream is, String encoding)", "full_signature": "public Map<String, String> loadFromStream(InputStream is, String encoding)", "class_method_signature": "KeyValueReader.loadFromStream(InputStream is, String encoding)", "testcase": false, "constructor": false}, {"identifier": "loadFromFile", "parameters": "(SimpleTextReader sfr)", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> loadFromFile(SimpleTextReader sfr)", "full_signature": "public Map<String, String> loadFromFile(SimpleTextReader sfr)", "class_method_signature": "KeyValueReader.loadFromFile(SimpleTextReader sfr)", "testcase": false, "constructor": false}], "file": "jhelper/src/main/java/com/hwangjr/jhelper/KeyValueReader.java"}, "focal_method": {"identifier": "loadFromFile", "parameters": "(File file)", "modifiers": "public", "return": "Map<String, String>", "body": "public Map<String, String> loadFromFile(File file) throws IOException {\n        return loadFromFile(new SimpleTextReader.\n                Builder(file)\n                .trim()\n                .ignoreIfStartsWith(ignorePrefix)\n                .ignoreWhiteSpaceLines()\n                .build());\n    }", "signature": "Map<String, String> loadFromFile(File file)", "full_signature": "public Map<String, String> loadFromFile(File file)", "class_method_signature": "KeyValueReader.loadFromFile(File file)", "testcase": false, "constructor": false, "invocations": ["loadFromFile", "build", "ignoreWhiteSpaceLines", "ignoreIfStartsWith", "trim"]}, "repository": {"repo_id": 49483698, "url": "https://github.com/AndroidKnife/RecordHelper", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 10, "size": 185, "license": "licensed"}}