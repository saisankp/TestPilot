{"test_class": {"identifier": "TPCLogTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/main/java/edu/berkeley/cs162/TPCLogTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test() throws Exception {\n\t\tKVServer s = new KVServer(100, 100);\n\t\tTPCLog log = new TPCLog(\"test\", s);\n\t\tKVMessage x = new KVMessage(\"putreq\");\n\t\tx.setKey(\"hello\");\n\t\tx.setValue(\"bye bye\");\n\t\tlog.appendAndFlush(x);\n\t\ts.put(\"hello\", \"bye bye\");\n\t\tObjectInputStream f = new ObjectInputStream(new FileInputStream(\"test\"));\n\t\tArrayList<KVMessage> garbage = (ArrayList<KVMessage>) f.readObject();\n\t\tKVMessage mess = garbage.get(0);\n\t\tassertEquals(mess.getKey(), \"hello\");\n\t\tassertEquals(mess.getValue(), \"bye bye\");\n\n\t}", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "TPCLogTest.test()", "testcase": true, "constructor": false, "invocations": ["setKey", "setValue", "appendAndFlush", "put", "readObject", "get", "assertEquals", "getKey", "assertEquals", "getValue"]}, "focal_class": {"identifier": "TPCLog", "superclass": "", "interfaces": "", "fields": [{"original_string": "public String logPath = null;", "modifier": "public", "type": "String", "declarator": "logPath = null", "var_name": "logPath"}, {"original_string": "public KVServer kvServer = null;", "modifier": "public", "type": "KVServer", "declarator": "kvServer = null", "var_name": "kvServer"}, {"original_string": "int numSets;", "modifier": "", "type": "int", "declarator": "numSets", "var_name": "numSets"}, {"original_string": "int maxElemsPerSet;", "modifier": "", "type": "int", "declarator": "maxElemsPerSet", "var_name": "maxElemsPerSet"}, {"original_string": "public ArrayList<KVMessage> entries = null;", "modifier": "public", "type": "ArrayList<KVMessage>", "declarator": "entries = null", "var_name": "entries"}, {"original_string": "public KVMessage interruptedTpcOperation = null;", "modifier": "public", "type": "KVMessage", "declarator": "interruptedTpcOperation = null", "var_name": "interruptedTpcOperation"}], "methods": [{"identifier": "TPCLog", "parameters": "(String logPath, KVServer kvServer)", "modifiers": "public", "return": "", "signature": " TPCLog(String logPath, KVServer kvServer)", "full_signature": "public  TPCLog(String logPath, KVServer kvServer)", "class_method_signature": "TPCLog.TPCLog(String logPath, KVServer kvServer)", "testcase": false, "constructor": true}, {"identifier": "getEntries", "parameters": "()", "modifiers": "public", "return": "ArrayList<KVMessage>", "signature": "ArrayList<KVMessage> getEntries()", "full_signature": "public ArrayList<KVMessage> getEntries()", "class_method_signature": "TPCLog.getEntries()", "testcase": false, "constructor": false}, {"identifier": "empty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean empty()", "full_signature": "public boolean empty()", "class_method_signature": "TPCLog.empty()", "testcase": false, "constructor": false}, {"identifier": "appendAndFlush", "parameters": "(KVMessage entry)", "modifiers": "public", "return": "void", "signature": "void appendAndFlush(KVMessage entry)", "full_signature": "public void appendAndFlush(KVMessage entry)", "class_method_signature": "TPCLog.appendAndFlush(KVMessage entry)", "testcase": false, "constructor": false}, {"identifier": "loadFromDisk", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "void", "signature": "void loadFromDisk()", "full_signature": "@SuppressWarnings(\"unchecked\") public void loadFromDisk()", "class_method_signature": "TPCLog.loadFromDisk()", "testcase": false, "constructor": false}, {"identifier": "flushToDisk", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void flushToDisk()", "full_signature": "public void flushToDisk()", "class_method_signature": "TPCLog.flushToDisk()", "testcase": false, "constructor": false}, {"identifier": "getKvServer", "parameters": "()", "modifiers": "public", "return": "KVServer", "signature": "KVServer getKvServer()", "full_signature": "public KVServer getKvServer()", "class_method_signature": "TPCLog.getKvServer()", "testcase": false, "constructor": false}, {"identifier": "setKvServer", "parameters": "(KVServer kvServer)", "modifiers": "public", "return": "void", "signature": "void setKvServer(KVServer kvServer)", "full_signature": "public void setKvServer(KVServer kvServer)", "class_method_signature": "TPCLog.setKvServer(KVServer kvServer)", "testcase": false, "constructor": false}, {"identifier": "rebuildKeyServer", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void rebuildKeyServer()", "full_signature": "public void rebuildKeyServer()", "class_method_signature": "TPCLog.rebuildKeyServer()", "testcase": false, "constructor": false}, {"identifier": "getInterruptedTpcOperation", "parameters": "()", "modifiers": "public", "return": "KVMessage", "signature": "KVMessage getInterruptedTpcOperation()", "full_signature": "public KVMessage getInterruptedTpcOperation()", "class_method_signature": "TPCLog.getInterruptedTpcOperation()", "testcase": false, "constructor": false}, {"identifier": "hasInterruptedTpcOperation", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasInterruptedTpcOperation()", "full_signature": "public boolean hasInterruptedTpcOperation()", "class_method_signature": "TPCLog.hasInterruptedTpcOperation()", "testcase": false, "constructor": false}], "file": "src/main/java/edu/berkeley/cs162/TPCLog.java"}, "focal_method": {"identifier": "appendAndFlush", "parameters": "(KVMessage entry)", "modifiers": "public", "return": "void", "body": "public void appendAndFlush(KVMessage entry) {\n        entries.add(entry);\n        flushToDisk();\n    }", "signature": "void appendAndFlush(KVMessage entry)", "full_signature": "public void appendAndFlush(KVMessage entry)", "class_method_signature": "TPCLog.appendAndFlush(KVMessage entry)", "testcase": false, "constructor": false, "invocations": ["add", "flushToDisk"]}, "repository": {"repo_id": 31758882, "url": "https://github.com/zqhxuyuan/zava", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 10325, "license": "licensed"}}