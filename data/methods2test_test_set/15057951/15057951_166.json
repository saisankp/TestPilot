{"test_class": {"identifier": "DefaultMultiValueTest", "superclass": "", "interfaces": "", "fields": [], "file": "smartparam-engine/src/test/java/org/smartparam/engine/core/output/DefaultMultiValueTest.java"}, "test_case": {"identifier": "testAsStrings", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAsStrings() {\n\n        // zaleznosci\n        ValueHolder h1 = new IntegerHolder(100L);\n        ValueHolder h2 = new IntegerHolder(200L);\n\n        // testowany obiekt - value(1) to tablica\n        MultiValue mv = new DefaultMultiValue(new Object[]{h1, h2});\n\n        // oczekiwany wynik\n        String[] expectedResult = {\"100\", \"200\"};\n\n        // weryfikacja\n        assertArrayEquals(expectedResult, mv.asStrings());\n    }", "signature": "void testAsStrings()", "full_signature": "@Test public void testAsStrings()", "class_method_signature": "DefaultMultiValueTest.testAsStrings()", "testcase": true, "constructor": false, "invocations": ["assertArrayEquals", "asStrings"]}, "focal_class": {"identifier": "DefaultMultiValue", "superclass": "", "interfaces": "implements MultiValue", "fields": [{"original_string": "private static final int INLINE_TO_STRING_LENGTH = 100;", "modifier": "private static final", "type": "int", "declarator": "INLINE_TO_STRING_LENGTH = 100", "var_name": "INLINE_TO_STRING_LENGTH"}, {"original_string": "private final Object[] values;", "modifier": "private final", "type": "Object[]", "declarator": "values", "var_name": "values"}, {"original_string": "private Map<String, Integer> indexMap;", "modifier": "private", "type": "Map<String, Integer>", "declarator": "indexMap", "var_name": "indexMap"}, {"original_string": "private ParameterEntryKey key;", "modifier": "private", "type": "ParameterEntryKey", "declarator": "key", "var_name": "key"}, {"original_string": "private int last = 0;", "modifier": "private", "type": "int", "declarator": "last = 0", "var_name": "last"}], "methods": [{"identifier": "DefaultMultiValue", "parameters": "(Object[] values)", "modifiers": "public", "return": "", "signature": " DefaultMultiValue(Object[] values)", "full_signature": "public  DefaultMultiValue(Object[] values)", "class_method_signature": "DefaultMultiValue.DefaultMultiValue(Object[] values)", "testcase": false, "constructor": true}, {"identifier": "DefaultMultiValue", "parameters": "(Object[] values, Map<String, Integer> indexMap)", "modifiers": "public", "return": "", "signature": " DefaultMultiValue(Object[] values, Map<String, Integer> indexMap)", "full_signature": "public  DefaultMultiValue(Object[] values, Map<String, Integer> indexMap)", "class_method_signature": "DefaultMultiValue.DefaultMultiValue(Object[] values, Map<String, Integer> indexMap)", "testcase": false, "constructor": true}, {"identifier": "DefaultMultiValue", "parameters": "(ParameterEntryKey key, Object[] values, Map<String, Integer> indexMap)", "modifiers": "public", "return": "", "signature": " DefaultMultiValue(ParameterEntryKey key, Object[] values, Map<String, Integer> indexMap)", "full_signature": "public  DefaultMultiValue(ParameterEntryKey key, Object[] values, Map<String, Integer> indexMap)", "class_method_signature": "DefaultMultiValue.DefaultMultiValue(ParameterEntryKey key, Object[] values, Map<String, Integer> indexMap)", "testcase": false, "constructor": true}, {"identifier": "getKey", "parameters": "()", "modifiers": "@Override public", "return": "ParameterEntryKey", "signature": "ParameterEntryKey getKey()", "full_signature": "@Override public ParameterEntryKey getKey()", "class_method_signature": "DefaultMultiValue.getKey()", "testcase": false, "constructor": false}, {"identifier": "getHolder", "parameters": "(int position)", "modifiers": "@Override public", "return": "ValueHolder", "signature": "ValueHolder getHolder(int position)", "full_signature": "@Override public ValueHolder getHolder(int position)", "class_method_signature": "DefaultMultiValue.getHolder(int position)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int position)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "T", "signature": "T get(int position)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public T get(int position)", "class_method_signature": "DefaultMultiValue.get(int position)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int position, Class<T> clazz)", "modifiers": "@Override public", "return": "T", "signature": "T get(int position, Class<T> clazz)", "full_signature": "@Override public T get(int position, Class<T> clazz)", "class_method_signature": "DefaultMultiValue.get(int position, Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(int position)", "modifiers": "@Override public", "return": "String", "signature": "String getString(int position)", "full_signature": "@Override public String getString(int position)", "class_method_signature": "DefaultMultiValue.getString(int position)", "testcase": false, "constructor": false}, {"identifier": "getBigDecimal", "parameters": "(int position)", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal getBigDecimal(int position)", "full_signature": "@Override public BigDecimal getBigDecimal(int position)", "class_method_signature": "DefaultMultiValue.getBigDecimal(int position)", "testcase": false, "constructor": false}, {"identifier": "getDate", "parameters": "(int position)", "modifiers": "@Override public", "return": "Date", "signature": "Date getDate(int position)", "full_signature": "@Override public Date getDate(int position)", "class_method_signature": "DefaultMultiValue.getDate(int position)", "testcase": false, "constructor": false}, {"identifier": "getInteger", "parameters": "(int position)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getInteger(int position)", "full_signature": "@Override public Integer getInteger(int position)", "class_method_signature": "DefaultMultiValue.getInteger(int position)", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(int position)", "modifiers": "@Override public", "return": "Long", "signature": "Long getLong(int position)", "full_signature": "@Override public Long getLong(int position)", "class_method_signature": "DefaultMultiValue.getLong(int position)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(int position)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean getBoolean(int position)", "full_signature": "@Override public Boolean getBoolean(int position)", "class_method_signature": "DefaultMultiValue.getBoolean(int position)", "testcase": false, "constructor": false}, {"identifier": "getHolder", "parameters": "(String name)", "modifiers": "@Override public", "return": "ValueHolder", "signature": "ValueHolder getHolder(String name)", "full_signature": "@Override public ValueHolder getHolder(String name)", "class_method_signature": "DefaultMultiValue.getHolder(String name)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String name)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "T", "signature": "T get(String name)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public T get(String name)", "class_method_signature": "DefaultMultiValue.get(String name)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String name, Class<T> clazz)", "modifiers": "@Override public", "return": "T", "signature": "T get(String name, Class<T> clazz)", "full_signature": "@Override public T get(String name, Class<T> clazz)", "class_method_signature": "DefaultMultiValue.get(String name, Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(String name)", "modifiers": "@Override public", "return": "String", "signature": "String getString(String name)", "full_signature": "@Override public String getString(String name)", "class_method_signature": "DefaultMultiValue.getString(String name)", "testcase": false, "constructor": false}, {"identifier": "getBigDecimal", "parameters": "(String name)", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal getBigDecimal(String name)", "full_signature": "@Override public BigDecimal getBigDecimal(String name)", "class_method_signature": "DefaultMultiValue.getBigDecimal(String name)", "testcase": false, "constructor": false}, {"identifier": "getDate", "parameters": "(String name)", "modifiers": "@Override public", "return": "Date", "signature": "Date getDate(String name)", "full_signature": "@Override public Date getDate(String name)", "class_method_signature": "DefaultMultiValue.getDate(String name)", "testcase": false, "constructor": false}, {"identifier": "getInteger", "parameters": "(String name)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getInteger(String name)", "full_signature": "@Override public Integer getInteger(String name)", "class_method_signature": "DefaultMultiValue.getInteger(String name)", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(String name)", "modifiers": "@Override public", "return": "Long", "signature": "Long getLong(String name)", "full_signature": "@Override public Long getLong(String name)", "class_method_signature": "DefaultMultiValue.getLong(String name)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(String name)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean getBoolean(String name)", "full_signature": "@Override public Boolean getBoolean(String name)", "class_method_signature": "DefaultMultiValue.getBoolean(String name)", "testcase": false, "constructor": false}, {"identifier": "index", "parameters": "(String name)", "modifiers": "private", "return": "int", "signature": "int index(String name)", "full_signature": "private int index(String name)", "class_method_signature": "DefaultMultiValue.index(String name)", "testcase": false, "constructor": false}, {"identifier": "getEnum", "parameters": "(int position, Class<T> enumClass)", "modifiers": "@Override public", "return": "T", "signature": "T getEnum(int position, Class<T> enumClass)", "full_signature": "@Override public T getEnum(int position, Class<T> enumClass)", "class_method_signature": "DefaultMultiValue.getEnum(int position, Class<T> enumClass)", "testcase": false, "constructor": false}, {"identifier": "getEnum", "parameters": "(String name, Class<T> enumClass)", "modifiers": "@Override public", "return": "T", "signature": "T getEnum(String name, Class<T> enumClass)", "full_signature": "@Override public T getEnum(String name, Class<T> enumClass)", "class_method_signature": "DefaultMultiValue.getEnum(String name, Class<T> enumClass)", "testcase": false, "constructor": false}, {"identifier": "codeToEnum", "parameters": "(String code, Class<T> enumClass)", "modifiers": "private", "return": "T", "signature": "T codeToEnum(String code, Class<T> enumClass)", "full_signature": "private T codeToEnum(String code, Class<T> enumClass)", "class_method_signature": "DefaultMultiValue.codeToEnum(String code, Class<T> enumClass)", "testcase": false, "constructor": false}, {"identifier": "getArray", "parameters": "(int position)", "modifiers": "@Override public", "return": "ValueHolder[]", "signature": "ValueHolder[] getArray(int position)", "full_signature": "@Override public ValueHolder[] getArray(int position)", "class_method_signature": "DefaultMultiValue.getArray(int position)", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "()", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] unwrap()", "full_signature": "@Override public Object[] unwrap()", "class_method_signature": "DefaultMultiValue.unwrap()", "testcase": false, "constructor": false}, {"identifier": "getStringArray", "parameters": "(int position)", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getStringArray(int position)", "full_signature": "@Override public String[] getStringArray(int position)", "class_method_signature": "DefaultMultiValue.getStringArray(int position)", "testcase": false, "constructor": false}, {"identifier": "getDateArray", "parameters": "(int position)", "modifiers": "@Override public", "return": "Date[]", "signature": "Date[] getDateArray(int position)", "full_signature": "@Override public Date[] getDateArray(int position)", "class_method_signature": "DefaultMultiValue.getDateArray(int position)", "testcase": false, "constructor": false}, {"identifier": "getIntegerArray", "parameters": "(int position)", "modifiers": "@Override public", "return": "Integer[]", "signature": "Integer[] getIntegerArray(int position)", "full_signature": "@Override public Integer[] getIntegerArray(int position)", "class_method_signature": "DefaultMultiValue.getIntegerArray(int position)", "testcase": false, "constructor": false}, {"identifier": "getLongArray", "parameters": "(int position)", "modifiers": "@Override public", "return": "Long[]", "signature": "Long[] getLongArray(int position)", "full_signature": "@Override public Long[] getLongArray(int position)", "class_method_signature": "DefaultMultiValue.getLongArray(int position)", "testcase": false, "constructor": false}, {"identifier": "getBooleanArray", "parameters": "(int position)", "modifiers": "@Override public", "return": "Boolean[]", "signature": "Boolean[] getBooleanArray(int position)", "full_signature": "@Override public Boolean[] getBooleanArray(int position)", "class_method_signature": "DefaultMultiValue.getBooleanArray(int position)", "testcase": false, "constructor": false}, {"identifier": "getBigDecimalArray", "parameters": "(int position)", "modifiers": "@Override public", "return": "BigDecimal[]", "signature": "BigDecimal[] getBigDecimalArray(int position)", "full_signature": "@Override public BigDecimal[] getBigDecimalArray(int position)", "class_method_signature": "DefaultMultiValue.getBigDecimalArray(int position)", "testcase": false, "constructor": false}, {"identifier": "getArray", "parameters": "(String name)", "modifiers": "@Override public", "return": "ValueHolder[]", "signature": "ValueHolder[] getArray(String name)", "full_signature": "@Override public ValueHolder[] getArray(String name)", "class_method_signature": "DefaultMultiValue.getArray(String name)", "testcase": false, "constructor": false}, {"identifier": "getStringArray", "parameters": "(String name)", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getStringArray(String name)", "full_signature": "@Override public String[] getStringArray(String name)", "class_method_signature": "DefaultMultiValue.getStringArray(String name)", "testcase": false, "constructor": false}, {"identifier": "getBigDecimalArray", "parameters": "(String name)", "modifiers": "@Override public", "return": "BigDecimal[]", "signature": "BigDecimal[] getBigDecimalArray(String name)", "full_signature": "@Override public BigDecimal[] getBigDecimalArray(String name)", "class_method_signature": "DefaultMultiValue.getBigDecimalArray(String name)", "testcase": false, "constructor": false}, {"identifier": "getDateArray", "parameters": "(String name)", "modifiers": "@Override public", "return": "Date[]", "signature": "Date[] getDateArray(String name)", "full_signature": "@Override public Date[] getDateArray(String name)", "class_method_signature": "DefaultMultiValue.getDateArray(String name)", "testcase": false, "constructor": false}, {"identifier": "getIntegerArray", "parameters": "(String name)", "modifiers": "@Override public", "return": "Integer[]", "signature": "Integer[] getIntegerArray(String name)", "full_signature": "@Override public Integer[] getIntegerArray(String name)", "class_method_signature": "DefaultMultiValue.getIntegerArray(String name)", "testcase": false, "constructor": false}, {"identifier": "getLongArray", "parameters": "(String name)", "modifiers": "@Override public", "return": "Long[]", "signature": "Long[] getLongArray(String name)", "full_signature": "@Override public Long[] getLongArray(String name)", "class_method_signature": "DefaultMultiValue.getLongArray(String name)", "testcase": false, "constructor": false}, {"identifier": "getBooleanArray", "parameters": "(String name)", "modifiers": "@Override public", "return": "Boolean[]", "signature": "Boolean[] getBooleanArray(String name)", "full_signature": "@Override public Boolean[] getBooleanArray(String name)", "class_method_signature": "DefaultMultiValue.getBooleanArray(String name)", "testcase": false, "constructor": false}, {"identifier": "getAbstractHolder", "parameters": "(int position)", "modifiers": "private", "return": "Object", "signature": "Object getAbstractHolder(int position)", "full_signature": "private Object getAbstractHolder(int position)", "class_method_signature": "DefaultMultiValue.getAbstractHolder(int position)", "testcase": false, "constructor": false}, {"identifier": "asStrings", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] asStrings()", "full_signature": "@Override public String[] asStrings()", "class_method_signature": "DefaultMultiValue.asStrings()", "testcase": false, "constructor": false}, {"identifier": "asBigDecimals", "parameters": "()", "modifiers": "@Override public", "return": "BigDecimal[]", "signature": "BigDecimal[] asBigDecimals()", "full_signature": "@Override public BigDecimal[] asBigDecimals()", "class_method_signature": "DefaultMultiValue.asBigDecimals()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DefaultMultiValue.toString()", "testcase": false, "constructor": false}, {"identifier": "toStringInline", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toStringInline()", "full_signature": "@Override public String toStringInline()", "class_method_signature": "DefaultMultiValue.toStringInline()", "testcase": false, "constructor": false}, {"identifier": "nextPosition", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int nextPosition()", "full_signature": "private int nextPosition()", "class_method_signature": "DefaultMultiValue.nextPosition()", "testcase": false, "constructor": false}, {"identifier": "nextHolder", "parameters": "()", "modifiers": "@Override public", "return": "ValueHolder", "signature": "ValueHolder nextHolder()", "full_signature": "@Override public ValueHolder nextHolder()", "class_method_signature": "DefaultMultiValue.nextHolder()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "T", "signature": "T next()", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public T next()", "class_method_signature": "DefaultMultiValue.next()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "(Class<T> clazz)", "modifiers": "@Override public", "return": "T", "signature": "T next(Class<T> clazz)", "full_signature": "@Override public T next(Class<T> clazz)", "class_method_signature": "DefaultMultiValue.next(Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "nextString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String nextString()", "full_signature": "@Override public String nextString()", "class_method_signature": "DefaultMultiValue.nextString()", "testcase": false, "constructor": false}, {"identifier": "nextBigDecimal", "parameters": "()", "modifiers": "@Override public", "return": "BigDecimal", "signature": "BigDecimal nextBigDecimal()", "full_signature": "@Override public BigDecimal nextBigDecimal()", "class_method_signature": "DefaultMultiValue.nextBigDecimal()", "testcase": false, "constructor": false}, {"identifier": "nextDate", "parameters": "()", "modifiers": "@Override public", "return": "Date", "signature": "Date nextDate()", "full_signature": "@Override public Date nextDate()", "class_method_signature": "DefaultMultiValue.nextDate()", "testcase": false, "constructor": false}, {"identifier": "nextInteger", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer nextInteger()", "full_signature": "@Override public Integer nextInteger()", "class_method_signature": "DefaultMultiValue.nextInteger()", "testcase": false, "constructor": false}, {"identifier": "nextLong", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long nextLong()", "full_signature": "@Override public Long nextLong()", "class_method_signature": "DefaultMultiValue.nextLong()", "testcase": false, "constructor": false}, {"identifier": "nextEnum", "parameters": "(Class<T> enumClass)", "modifiers": "@Override public", "return": "T", "signature": "T nextEnum(Class<T> enumClass)", "full_signature": "@Override public T nextEnum(Class<T> enumClass)", "class_method_signature": "DefaultMultiValue.nextEnum(Class<T> enumClass)", "testcase": false, "constructor": false}, {"identifier": "nextArray", "parameters": "()", "modifiers": "@Override public", "return": "ValueHolder[]", "signature": "ValueHolder[] nextArray()", "full_signature": "@Override public ValueHolder[] nextArray()", "class_method_signature": "DefaultMultiValue.nextArray()", "testcase": false, "constructor": false}, {"identifier": "nextStringArray", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] nextStringArray()", "full_signature": "@Override public String[] nextStringArray()", "class_method_signature": "DefaultMultiValue.nextStringArray()", "testcase": false, "constructor": false}, {"identifier": "nextBigDecimalArray", "parameters": "()", "modifiers": "@Override public", "return": "BigDecimal[]", "signature": "BigDecimal[] nextBigDecimalArray()", "full_signature": "@Override public BigDecimal[] nextBigDecimalArray()", "class_method_signature": "DefaultMultiValue.nextBigDecimalArray()", "testcase": false, "constructor": false}, {"identifier": "nextDateArray", "parameters": "()", "modifiers": "@Override public", "return": "Date[]", "signature": "Date[] nextDateArray()", "full_signature": "@Override public Date[] nextDateArray()", "class_method_signature": "DefaultMultiValue.nextDateArray()", "testcase": false, "constructor": false}, {"identifier": "nextIntegerArray", "parameters": "()", "modifiers": "@Override public", "return": "Integer[]", "signature": "Integer[] nextIntegerArray()", "full_signature": "@Override public Integer[] nextIntegerArray()", "class_method_signature": "DefaultMultiValue.nextIntegerArray()", "testcase": false, "constructor": false}, {"identifier": "nextLongArray", "parameters": "()", "modifiers": "@Override public", "return": "Long[]", "signature": "Long[] nextLongArray()", "full_signature": "@Override public Long[] nextLongArray()", "class_method_signature": "DefaultMultiValue.nextLongArray()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "DefaultMultiValue.size()", "testcase": false, "constructor": false}], "file": "smartparam-engine/src/main/java/org/smartparam/engine/core/output/DefaultMultiValue.java"}, "focal_method": {"identifier": "asStrings", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "body": "@Override\n    public String[] asStrings() {\n        String[] array = new String[values.length];\n        for (int i = 0; i < array.length; i++) {\n            array[i] = getString(i);\n        }\n        return array;\n    }", "signature": "String[] asStrings()", "full_signature": "@Override public String[] asStrings()", "class_method_signature": "DefaultMultiValue.asStrings()", "testcase": false, "constructor": false, "invocations": ["getString"]}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}