{"test_class": {"identifier": "JcrAccessControlListTest", "superclass": "extends MultiUseAbstractTest", "interfaces": "", "fields": [{"original_string": "private JcrAccessControlList acl = new JcrAccessControlList(\"root\");", "modifier": "private", "type": "JcrAccessControlList", "declarator": "acl = new JcrAccessControlList(\"root\")", "var_name": "acl"}, {"original_string": "private Privilege[] rw;", "modifier": "private", "type": "Privilege[]", "declarator": "rw", "var_name": "rw"}, {"original_string": "private Privileges privileges;", "modifier": "private", "type": "Privileges", "declarator": "privileges", "var_name": "privileges"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/security/acl/JcrAccessControlListTest.java"}, "test_case": {"identifier": "testAccessControlEntries", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAccessControlEntries() throws Exception {\n        AccessControlEntry[] entries = acl.getAccessControlEntries();\n        assertEquals(1, entries.length);\n        assertEquals(\"kulikov\", entries[0].getPrincipal().getName());\n    }", "signature": "void testAccessControlEntries()", "full_signature": "@Test public void testAccessControlEntries()", "class_method_signature": "JcrAccessControlListTest.testAccessControlEntries()", "testcase": true, "constructor": false, "invocations": ["getAccessControlEntries", "assertEquals", "assertEquals", "getName", "getPrincipal"]}, "focal_class": {"identifier": "JcrAccessControlList", "superclass": "", "interfaces": "implements AccessControlList", "fields": [{"original_string": "private HashMap<Principal, AccessControlEntryImpl> principals = new HashMap<Principal, AccessControlEntryImpl>();", "modifier": "private", "type": "HashMap<Principal, AccessControlEntryImpl>", "declarator": "principals = new HashMap<Principal, AccessControlEntryImpl>()", "var_name": "principals"}, {"original_string": "private final String path;", "modifier": "private final", "type": "String", "declarator": "path", "var_name": "path"}], "methods": [{"identifier": "defaultAcl", "parameters": "( AccessControlManagerImpl acm )", "modifiers": "public static", "return": "JcrAccessControlList", "signature": "JcrAccessControlList defaultAcl( AccessControlManagerImpl acm )", "full_signature": "public static JcrAccessControlList defaultAcl( AccessControlManagerImpl acm )", "class_method_signature": "JcrAccessControlList.defaultAcl( AccessControlManagerImpl acm )", "testcase": false, "constructor": false}, {"identifier": "JcrAccessControlList", "parameters": "( String path )", "modifiers": "public", "return": "", "signature": " JcrAccessControlList( String path )", "full_signature": "public  JcrAccessControlList( String path )", "class_method_signature": "JcrAccessControlList.JcrAccessControlList( String path )", "testcase": false, "constructor": true}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "JcrAccessControlList.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "getAccessControlEntries", "parameters": "()", "modifiers": "@Override public", "return": "AccessControlEntry[]", "signature": "AccessControlEntry[] getAccessControlEntries()", "full_signature": "@Override public AccessControlEntry[] getAccessControlEntries()", "class_method_signature": "JcrAccessControlList.getAccessControlEntries()", "testcase": false, "constructor": false}, {"identifier": "addAccessControlEntry", "parameters": "( Principal principal,\n                                          Privilege[] privileges )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addAccessControlEntry( Principal principal,\n                                          Privilege[] privileges )", "full_signature": "@Override public boolean addAccessControlEntry( Principal principal,\n                                          Privilege[] privileges )", "class_method_signature": "JcrAccessControlList.addAccessControlEntry( Principal principal,\n                                          Privilege[] privileges )", "testcase": false, "constructor": false}, {"identifier": "removeAccessControlEntry", "parameters": "( AccessControlEntry accessControlEntry )", "modifiers": "@Override public", "return": "void", "signature": "void removeAccessControlEntry( AccessControlEntry accessControlEntry )", "full_signature": "@Override public void removeAccessControlEntry( AccessControlEntry accessControlEntry )", "class_method_signature": "JcrAccessControlList.removeAccessControlEntry( AccessControlEntry accessControlEntry )", "testcase": false, "constructor": false}, {"identifier": "hasPrivileges", "parameters": "( SecurityContext sc,\n                                  Privilege[] privileges )", "modifiers": "public", "return": "boolean", "signature": "boolean hasPrivileges( SecurityContext sc,\n                                  Privilege[] privileges )", "full_signature": "public boolean hasPrivileges( SecurityContext sc,\n                                  Privilege[] privileges )", "class_method_signature": "JcrAccessControlList.hasPrivileges( SecurityContext sc,\n                                  Privilege[] privileges )", "testcase": false, "constructor": false}, {"identifier": "getPrivileges", "parameters": "( SecurityContext context )", "modifiers": "public", "return": "Privilege[]", "signature": "Privilege[] getPrivileges( SecurityContext context )", "full_signature": "public Privilege[] getPrivileges( SecurityContext context )", "class_method_signature": "JcrAccessControlList.getPrivileges( SecurityContext context )", "testcase": false, "constructor": false}, {"identifier": "hasEntry", "parameters": "( String name )", "modifiers": "public", "return": "boolean", "signature": "boolean hasEntry( String name )", "full_signature": "public boolean hasEntry( String name )", "class_method_signature": "JcrAccessControlList.hasEntry( String name )", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "( Object other )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals( Object other )", "full_signature": "@Override public boolean equals( Object other )", "class_method_signature": "JcrAccessControlList.equals( Object other )", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "JcrAccessControlList.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "JcrAccessControlList.toString()", "testcase": false, "constructor": false}, {"identifier": "username", "parameters": "( String username )", "modifiers": "private", "return": "String", "signature": "String username( String username )", "full_signature": "private String username( String username )", "class_method_signature": "JcrAccessControlList.username( String username )", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/security/acl/JcrAccessControlList.java"}, "focal_method": {"identifier": "getAccessControlEntries", "parameters": "()", "modifiers": "@Override public", "return": "AccessControlEntry[]", "body": "@Override\n    public AccessControlEntry[] getAccessControlEntries() {\n        AccessControlEntry[] list = new AccessControlEntry[principals.values().size()];\n        principals.values().toArray(list);\n        return list;\n    }", "signature": "AccessControlEntry[] getAccessControlEntries()", "full_signature": "@Override public AccessControlEntry[] getAccessControlEntries()", "class_method_signature": "JcrAccessControlList.getAccessControlEntries()", "testcase": false, "constructor": false, "invocations": ["size", "values", "toArray", "values"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}