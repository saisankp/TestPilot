{"test_class": {"identifier": "ConfigurationContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private GazePlay mockGazePlay;", "modifier": "@Mock\n    private", "type": "GazePlay", "declarator": "mockGazePlay", "var_name": "mockGazePlay"}, {"original_string": "@Mock\n    private Translator mockTranslator;", "modifier": "@Mock\n    private", "type": "Translator", "declarator": "mockTranslator", "var_name": "mockTranslator"}, {"original_string": "@Mock\n    private Configuration mockConfig;", "modifier": "@Mock\n    private", "type": "Configuration", "declarator": "mockConfig", "var_name": "mockConfig"}, {"original_string": "@Mock\n    private ConfigurationContext mockContext;", "modifier": "@Mock\n    private", "type": "ConfigurationContext", "declarator": "mockContext", "var_name": "mockContext"}], "file": "gazeplay-core/src/test/java/net/gazeplay/ui/scenes/configuration/ConfigurationContextTest.java"}, "test_case": {"identifier": "shouldBuildCheckBox", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldBuildCheckBox() throws InterruptedException {\n        BooleanProperty testProperty = new SimpleBooleanProperty(true);\n\n        CheckBox result = ConfigurationContext.buildCheckBox(testProperty);\n        assertTrue(result.isSelected());\n\n        Platform.runLater(result::fire);\n        TestingUtils.waitForRunLater();\n\n        assertFalse(testProperty.getValue());\n    }", "signature": "void shouldBuildCheckBox()", "full_signature": "@Test void shouldBuildCheckBox()", "class_method_signature": "ConfigurationContextTest.shouldBuildCheckBox()", "testcase": true, "constructor": false, "invocations": ["buildCheckBox", "assertTrue", "isSelected", "runLater", "waitForRunLater", "assertFalse", "getValue"]}, "focal_class": {"identifier": "ConfigurationContext", "superclass": "extends GraphicalContext<BorderPane>", "interfaces": "", "fields": [{"original_string": "private static final String COLON = \"Colon\";", "modifier": "private static final", "type": "String", "declarator": "COLON = \"Colon\"", "var_name": "COLON"}, {"original_string": "private static final double PREF_WIDTH = 200;", "modifier": "private static final", "type": "double", "declarator": "PREF_WIDTH = 200", "var_name": "PREF_WIDTH"}, {"original_string": "private static final double PREF_HEIGHT = 25;", "modifier": "private static final", "type": "double", "declarator": "PREF_HEIGHT = 25", "var_name": "PREF_HEIGHT"}, {"original_string": "private final boolean currentLanguageAlignmentIsLeftAligned;", "modifier": "private final", "type": "boolean", "declarator": "currentLanguageAlignmentIsLeftAligned", "var_name": "currentLanguageAlignmentIsLeftAligned"}], "methods": [{"identifier": "ConfigurationContext", "parameters": "(GazePlay gazePlay)", "modifiers": "", "return": "", "signature": " ConfigurationContext(GazePlay gazePlay)", "full_signature": "  ConfigurationContext(GazePlay gazePlay)", "class_method_signature": "ConfigurationContext.ConfigurationContext(GazePlay gazePlay)", "testcase": false, "constructor": true}, {"identifier": "createHomeButtonInConfigurationManagementScreen", "parameters": "(@NonNull GazePlay gazePlay)", "modifiers": "", "return": "HomeButton", "signature": "HomeButton createHomeButtonInConfigurationManagementScreen(@NonNull GazePlay gazePlay)", "full_signature": " HomeButton createHomeButtonInConfigurationManagementScreen(@NonNull GazePlay gazePlay)", "class_method_signature": "ConfigurationContext.createHomeButtonInConfigurationManagementScreen(@NonNull GazePlay gazePlay)", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "ObservableList<Node>", "signature": "ObservableList<Node> getChildren()", "full_signature": "@Override public ObservableList<Node> getChildren()", "class_method_signature": "ConfigurationContext.getChildren()", "testcase": false, "constructor": false}, {"identifier": "buildConfigGridPane", "parameters": "(ConfigurationContext configurationContext, Translator translator)", "modifiers": "", "return": "GridPane", "signature": "GridPane buildConfigGridPane(ConfigurationContext configurationContext, Translator translator)", "full_signature": " GridPane buildConfigGridPane(ConfigurationContext configurationContext, Translator translator)", "class_method_signature": "ConfigurationContext.buildConfigGridPane(ConfigurationContext configurationContext, Translator translator)", "testcase": false, "constructor": false}, {"identifier": "addCategoryTitle", "parameters": "(GridPane grid, AtomicInteger currentFormRow, I18NText label)", "modifiers": "", "return": "void", "signature": "void addCategoryTitle(GridPane grid, AtomicInteger currentFormRow, I18NText label)", "full_signature": " void addCategoryTitle(GridPane grid, AtomicInteger currentFormRow, I18NText label)", "class_method_signature": "ConfigurationContext.addCategoryTitle(GridPane grid, AtomicInteger currentFormRow, I18NText label)", "testcase": false, "constructor": false}, {"identifier": "addSubCategoryTitle", "parameters": "(GridPane grid, AtomicInteger currentFormRow, I18NText label)", "modifiers": "", "return": "void", "signature": "void addSubCategoryTitle(GridPane grid, AtomicInteger currentFormRow, I18NText label)", "full_signature": " void addSubCategoryTitle(GridPane grid, AtomicInteger currentFormRow, I18NText label)", "class_method_signature": "ConfigurationContext.addSubCategoryTitle(GridPane grid, AtomicInteger currentFormRow, I18NText label)", "testcase": false, "constructor": false}, {"identifier": "addToGrid", "parameters": "(GridPane grid, AtomicInteger currentFormRow, I18NText label, final Node input)", "modifiers": "", "return": "void", "signature": "void addToGrid(GridPane grid, AtomicInteger currentFormRow, I18NText label, final Node input)", "full_signature": " void addToGrid(GridPane grid, AtomicInteger currentFormRow, I18NText label, final Node input)", "class_method_signature": "ConfigurationContext.addToGrid(GridPane grid, AtomicInteger currentFormRow, I18NText label, final Node input)", "testcase": false, "constructor": false}, {"identifier": "buildSpinner", "parameters": "(\n        double min,\n        double max,\n        double initialValue,\n        double step,\n        Property<Number> configProperty\n    )", "modifiers": "static", "return": "Spinner<Double>", "signature": "Spinner<Double> buildSpinner(\n        double min,\n        double max,\n        double initialValue,\n        double step,\n        Property<Number> configProperty\n    )", "full_signature": "static Spinner<Double> buildSpinner(\n        double min,\n        double max,\n        double initialValue,\n        double step,\n        Property<Number> configProperty\n    )", "class_method_signature": "ConfigurationContext.buildSpinner(\n        double min,\n        double max,\n        double initialValue,\n        double step,\n        Property<Number> configProperty\n    )", "testcase": false, "constructor": false}, {"identifier": "buildStyleThemeChooser", "parameters": "(Configuration configuration, ConfigurationContext configurationContext)", "modifiers": "static", "return": "ChoiceBox<BuiltInUiTheme>", "signature": "ChoiceBox<BuiltInUiTheme> buildStyleThemeChooser(Configuration configuration, ConfigurationContext configurationContext)", "full_signature": "static ChoiceBox<BuiltInUiTheme> buildStyleThemeChooser(Configuration configuration, ConfigurationContext configurationContext)", "class_method_signature": "ConfigurationContext.buildStyleThemeChooser(Configuration configuration, ConfigurationContext configurationContext)", "testcase": false, "constructor": false}, {"identifier": "buildStyleFileChooser", "parameters": "(Configuration configuration,\n                                                ConfigurationContext configurationContext)", "modifiers": "private static", "return": "Button", "signature": "Button buildStyleFileChooser(Configuration configuration,\n                                                ConfigurationContext configurationContext)", "full_signature": "private static Button buildStyleFileChooser(Configuration configuration,\n                                                ConfigurationContext configurationContext)", "class_method_signature": "ConfigurationContext.buildStyleFileChooser(Configuration configuration,\n                                                ConfigurationContext configurationContext)", "testcase": false, "constructor": false}, {"identifier": "buildImageChooser", "parameters": "(Configuration configuration,\n                                   ConfigurationContext configurationContext,\n                                   Translator translator)", "modifiers": "private", "return": "Node", "signature": "Node buildImageChooser(Configuration configuration,\n                                   ConfigurationContext configurationContext,\n                                   Translator translator)", "full_signature": "private Node buildImageChooser(Configuration configuration,\n                                   ConfigurationContext configurationContext,\n                                   Translator translator)", "class_method_signature": "ConfigurationContext.buildImageChooser(Configuration configuration,\n                                   ConfigurationContext configurationContext,\n                                   Translator translator)", "testcase": false, "constructor": false}, {"identifier": "buildDirectoryChooser", "parameters": "(\n        Configuration configuration,\n        ConfigurationContext configurationContext,\n        Translator translator,\n        DirectoryType type\n    )", "modifiers": "", "return": "Node", "signature": "Node buildDirectoryChooser(\n        Configuration configuration,\n        ConfigurationContext configurationContext,\n        Translator translator,\n        DirectoryType type\n    )", "full_signature": " Node buildDirectoryChooser(\n        Configuration configuration,\n        ConfigurationContext configurationContext,\n        Translator translator,\n        DirectoryType type\n    )", "class_method_signature": "ConfigurationContext.buildDirectoryChooser(\n        Configuration configuration,\n        ConfigurationContext configurationContext,\n        Translator translator,\n        DirectoryType type\n    )", "testcase": false, "constructor": false}, {"identifier": "buildLanguageChooser", "parameters": "(\n        Configuration configuration,\n        ConfigurationContext configurationContext\n    )", "modifiers": "", "return": "MenuButton", "signature": "MenuButton buildLanguageChooser(\n        Configuration configuration,\n        ConfigurationContext configurationContext\n    )", "full_signature": " MenuButton buildLanguageChooser(\n        Configuration configuration,\n        ConfigurationContext configurationContext\n    )", "class_method_signature": "ConfigurationContext.buildLanguageChooser(\n        Configuration configuration,\n        ConfigurationContext configurationContext\n    )", "testcase": false, "constructor": false}, {"identifier": "buildEyeTrackerConfigChooser", "parameters": "(Configuration configuration)", "modifiers": "static", "return": "ChoiceBox<EyeTracker>", "signature": "ChoiceBox<EyeTracker> buildEyeTrackerConfigChooser(Configuration configuration)", "full_signature": "static ChoiceBox<EyeTracker> buildEyeTrackerConfigChooser(Configuration configuration)", "class_method_signature": "ConfigurationContext.buildEyeTrackerConfigChooser(Configuration configuration)", "testcase": false, "constructor": false}, {"identifier": "findSelectedEyeTracker", "parameters": "(Configuration configuration)", "modifiers": "private static", "return": "EyeTracker", "signature": "EyeTracker findSelectedEyeTracker(Configuration configuration)", "full_signature": "private static EyeTracker findSelectedEyeTracker(Configuration configuration)", "class_method_signature": "ConfigurationContext.findSelectedEyeTracker(Configuration configuration)", "testcase": false, "constructor": false}, {"identifier": "buildCheckBox", "parameters": "(BooleanProperty selectionProperty)", "modifiers": "static", "return": "CheckBox", "signature": "CheckBox buildCheckBox(BooleanProperty selectionProperty)", "full_signature": "static CheckBox buildCheckBox(BooleanProperty selectionProperty)", "class_method_signature": "ConfigurationContext.buildCheckBox(BooleanProperty selectionProperty)", "testcase": false, "constructor": false}, {"identifier": "buildBackgroundStyleToggleGroup", "parameters": "(\n        Configuration configuration,\n        Translator translator\n    )", "modifiers": "private", "return": "HBox", "signature": "HBox buildBackgroundStyleToggleGroup(\n        Configuration configuration,\n        Translator translator\n    )", "full_signature": "private HBox buildBackgroundStyleToggleGroup(\n        Configuration configuration,\n        Translator translator\n    )", "class_method_signature": "ConfigurationContext.buildBackgroundStyleToggleGroup(\n        Configuration configuration,\n        Translator translator\n    )", "testcase": false, "constructor": false}, {"identifier": "buildGazeMenu", "parameters": "(Configuration configuration)", "modifiers": "private static", "return": "CheckBox", "signature": "CheckBox buildGazeMenu(Configuration configuration)", "full_signature": "private static CheckBox buildGazeMenu(Configuration configuration)", "class_method_signature": "ConfigurationContext.buildGazeMenu(Configuration configuration)", "testcase": false, "constructor": false}, {"identifier": "buildGameButtonOrientationChooser", "parameters": "(\n        Configuration configuration\n    )", "modifiers": "static", "return": "ChoiceBox<GameButtonOrientation>", "signature": "ChoiceBox<GameButtonOrientation> buildGameButtonOrientationChooser(\n        Configuration configuration\n    )", "full_signature": "static ChoiceBox<GameButtonOrientation> buildGameButtonOrientationChooser(\n        Configuration configuration\n    )", "class_method_signature": "ConfigurationContext.buildGameButtonOrientationChooser(\n        Configuration configuration\n    )", "testcase": false, "constructor": false}, {"identifier": "changeMusicFolder", "parameters": "(final String newMusicFolder, Configuration config)", "modifiers": "static", "return": "void", "signature": "void changeMusicFolder(final String newMusicFolder, Configuration config)", "full_signature": "static void changeMusicFolder(final String newMusicFolder, Configuration config)", "class_method_signature": "ConfigurationContext.changeMusicFolder(final String newMusicFolder, Configuration config)", "testcase": false, "constructor": false}, {"identifier": "setupNewMusicFolder", "parameters": "(File gazePlayMusicFolder, String defaultSong)", "modifiers": "static", "return": "void", "signature": "void setupNewMusicFolder(File gazePlayMusicFolder, String defaultSong)", "full_signature": "static void setupNewMusicFolder(File gazePlayMusicFolder, String defaultSong)", "class_method_signature": "ConfigurationContext.setupNewMusicFolder(File gazePlayMusicFolder, String defaultSong)", "testcase": false, "constructor": false}, {"identifier": "findSelectedGameButtonOrientation", "parameters": "(Configuration configuration)", "modifiers": "private static", "return": "GameButtonOrientation", "signature": "GameButtonOrientation findSelectedGameButtonOrientation(Configuration configuration)", "full_signature": "private static GameButtonOrientation findSelectedGameButtonOrientation(Configuration configuration)", "class_method_signature": "ConfigurationContext.findSelectedGameButtonOrientation(Configuration configuration)", "testcase": false, "constructor": false}, {"identifier": "buildQuitKeyChooser", "parameters": "(\n        Configuration configuration\n    )", "modifiers": "", "return": "ChoiceBox<String>", "signature": "ChoiceBox<String> buildQuitKeyChooser(\n        Configuration configuration\n    )", "full_signature": " ChoiceBox<String> buildQuitKeyChooser(\n        Configuration configuration\n    )", "class_method_signature": "ConfigurationContext.buildQuitKeyChooser(\n        Configuration configuration\n    )", "testcase": false, "constructor": false}, {"identifier": "buildHeatMapOpacityChoiceBox", "parameters": "(Configuration config)", "modifiers": "", "return": "ChoiceBox<Double>", "signature": "ChoiceBox<Double> buildHeatMapOpacityChoiceBox(Configuration config)", "full_signature": " ChoiceBox<Double> buildHeatMapOpacityChoiceBox(Configuration config)", "class_method_signature": "ConfigurationContext.buildHeatMapOpacityChoiceBox(Configuration config)", "testcase": false, "constructor": false}, {"identifier": "fillHBoxWithColorPickers", "parameters": "(HBox hbox, Configuration config)", "modifiers": "private", "return": "void", "signature": "void fillHBoxWithColorPickers(HBox hbox, Configuration config)", "full_signature": "private void fillHBoxWithColorPickers(HBox hbox, Configuration config)", "class_method_signature": "ConfigurationContext.fillHBoxWithColorPickers(HBox hbox, Configuration config)", "testcase": false, "constructor": false}, {"identifier": "buildHeatMapColorHBox", "parameters": "(Configuration config, Translator translator)", "modifiers": "", "return": "HBox", "signature": "HBox buildHeatMapColorHBox(Configuration config, Translator translator)", "full_signature": " HBox buildHeatMapColorHBox(Configuration config, Translator translator)", "class_method_signature": "ConfigurationContext.buildHeatMapColorHBox(Configuration config, Translator translator)", "testcase": false, "constructor": false}, {"identifier": "buildLimiterTime", "parameters": "(Configuration config, Translator translator)", "modifiers": "private", "return": "HBox", "signature": "HBox buildLimiterTime(Configuration config, Translator translator)", "full_signature": "private HBox buildLimiterTime(Configuration config, Translator translator)", "class_method_signature": "ConfigurationContext.buildLimiterTime(Configuration config, Translator translator)", "testcase": false, "constructor": false}, {"identifier": "buildLimiterScore", "parameters": "(Configuration config, Translator translator)", "modifiers": "private", "return": "HBox", "signature": "HBox buildLimiterScore(Configuration config, Translator translator)", "full_signature": "private HBox buildLimiterScore(Configuration config, Translator translator)", "class_method_signature": "ConfigurationContext.buildLimiterScore(Configuration config, Translator translator)", "testcase": false, "constructor": false}, {"identifier": "updateHeatMapColorProperty", "parameters": "(HBox hbox, Configuration config)", "modifiers": "private", "return": "void", "signature": "void updateHeatMapColorProperty(HBox hbox, Configuration config)", "full_signature": "private void updateHeatMapColorProperty(HBox hbox, Configuration config)", "class_method_signature": "ConfigurationContext.updateHeatMapColorProperty(HBox hbox, Configuration config)", "testcase": false, "constructor": false}], "file": "gazeplay-core/src/main/java/net/gazeplay/ui/scenes/configuration/ConfigurationContext.java"}, "focal_method": {"identifier": "buildCheckBox", "parameters": "(BooleanProperty selectionProperty)", "modifiers": "static", "return": "CheckBox", "body": "static CheckBox buildCheckBox(BooleanProperty selectionProperty) {\n        CheckBox checkBox = new CheckBox();\n        checkBox.setSelected(selectionProperty.getValue());\n        checkBox.selectedProperty().bindBidirectional(selectionProperty);\n        return checkBox;\n    }", "signature": "CheckBox buildCheckBox(BooleanProperty selectionProperty)", "full_signature": "static CheckBox buildCheckBox(BooleanProperty selectionProperty)", "class_method_signature": "ConfigurationContext.buildCheckBox(BooleanProperty selectionProperty)", "testcase": false, "constructor": false, "invocations": ["setSelected", "getValue", "bindBidirectional", "selectedProperty"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}