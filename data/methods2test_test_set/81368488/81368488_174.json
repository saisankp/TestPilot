{"test_class": {"identifier": "EnumGameVariantTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private Translator translator;", "modifier": "@Mock\n    private", "type": "Translator", "declarator": "translator", "var_name": "translator"}], "file": "gazeplay-games-commons/src/test/java/net/gazeplay/commons/gamevariants/EnumGameVariantTest.java"}, "test_case": {"identifier": "givenTranslator_shouldTranslateLabel", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void givenTranslator_shouldTranslateLabel() {\n        EnumGameVariant<TestEnum> gameVariant = new EnumGameVariant<>(TestEnum.TEST1, Object::toString);\n        assertEquals(\"translation\", gameVariant.getLabel(translator));\n        verify(translator, times(1)).translate(\"TEST1\");\n    }", "signature": "void givenTranslator_shouldTranslateLabel()", "full_signature": "@Test void givenTranslator_shouldTranslateLabel()", "class_method_signature": "EnumGameVariantTest.givenTranslator_shouldTranslateLabel()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getLabel", "translate", "verify", "times"]}, "focal_class": {"identifier": "EnumGameVariant", "superclass": "", "interfaces": "implements IGameVariant", "fields": [{"original_string": "private final K enumValue;", "modifier": "private final", "type": "K", "declarator": "enumValue", "var_name": "enumValue"}, {"original_string": "private final Function<K, String> extractLabelCodeFunction;", "modifier": "private final", "type": "Function<K, String>", "declarator": "extractLabelCodeFunction", "var_name": "extractLabelCodeFunction"}], "methods": [{"identifier": "getLabel", "parameters": "(final Translator translator)", "modifiers": "@Override public", "return": "String", "signature": "String getLabel(final Translator translator)", "full_signature": "@Override public String getLabel(final Translator translator)", "class_method_signature": "EnumGameVariant.getLabel(final Translator translator)", "testcase": false, "constructor": false}], "file": "gazeplay-games-commons/src/main/java/net/gazeplay/commons/gamevariants/EnumGameVariant.java"}, "focal_method": {"identifier": "getLabel", "parameters": "(final Translator translator)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getLabel(final Translator translator) {\n        return translator.translate(extractLabelCodeFunction.apply(enumValue));\n    }", "signature": "String getLabel(final Translator translator)", "full_signature": "@Override public String getLabel(final Translator translator)", "class_method_signature": "EnumGameVariant.getLabel(final Translator translator)", "testcase": false, "constructor": false, "invocations": ["translate", "apply"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}