{"test_class": {"identifier": "BgpSecFilterServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private BgpSecFilterService bgpSecFilterService;", "modifier": "@Autowired\n    private", "type": "BgpSecFilterService", "declarator": "bgpSecFilterService", "var_name": "bgpSecFilterService"}, {"original_string": "private static Long ASN_1 = 123L;", "modifier": "private static", "type": "Long", "declarator": "ASN_1 = 123L", "var_name": "ASN_1"}, {"original_string": "private static Long ASN_2 = 456L;", "modifier": "private static", "type": "Long", "declarator": "ASN_2 = 456L", "var_name": "ASN_2"}, {"original_string": "private static final String SKI_1 = \"nvln23d\";", "modifier": "private static final", "type": "String", "declarator": "SKI_1 = \"nvln23d\"", "var_name": "SKI_1"}, {"original_string": "private static final String SKI_2 = \"plspdpc\";", "modifier": "private static final", "type": "String", "declarator": "SKI_2 = \"plspdpc\"", "var_name": "SKI_2"}, {"original_string": "private static final String SKI_3 = \"09309j3\";", "modifier": "private static final", "type": "String", "declarator": "SKI_3 = \"09309j3\"", "var_name": "SKI_3"}, {"original_string": "private static final String PK_1 = \"xxxxxxx\";", "modifier": "private static final", "type": "String", "declarator": "PK_1 = \"xxxxxxx\"", "var_name": "PK_1"}, {"original_string": "private static final String PK_2 = \"yyyyyyy\";", "modifier": "private static final", "type": "String", "declarator": "PK_2 = \"yyyyyyy\"", "var_name": "PK_2"}, {"original_string": "private static final String PK_3 = \"zzzzzzz\";", "modifier": "private static final", "type": "String", "declarator": "PK_3 = \"zzzzzzz\"", "var_name": "PK_3"}, {"original_string": "private static final ValidatedRpkiObjects.RouterCertificate CERTIFICATE_1 = ValidatedRpkiObjects.RouterCertificate.of(\n            ValidatedRpkiObjects.TrustAnchorData.of(Key.of(1L), \"Test TA 1\"),\n            ImmutableList.of(ASN_1.toString()), SKI_1, PK_1);", "modifier": "private static final", "type": "ValidatedRpkiObjects.RouterCertificate", "declarator": "CERTIFICATE_1 = ValidatedRpkiObjects.RouterCertificate.of(\n            ValidatedRpkiObjects.TrustAnchorData.of(Key.of(1L), \"Test TA 1\"),\n            ImmutableList.of(ASN_1.toString()), SKI_1, PK_1)", "var_name": "CERTIFICATE_1"}, {"original_string": "private static final ValidatedRpkiObjects.RouterCertificate CERTIFICATE_2 = ValidatedRpkiObjects.RouterCertificate.of(\n            ValidatedRpkiObjects.TrustAnchorData.of(Key.of(2L), \"Test TA 2\"),\n            ImmutableList.of(ASN_1.toString(), ASN_2.toString()), SKI_2, PK_2);", "modifier": "private static final", "type": "ValidatedRpkiObjects.RouterCertificate", "declarator": "CERTIFICATE_2 = ValidatedRpkiObjects.RouterCertificate.of(\n            ValidatedRpkiObjects.TrustAnchorData.of(Key.of(2L), \"Test TA 2\"),\n            ImmutableList.of(ASN_1.toString(), ASN_2.toString()), SKI_2, PK_2)", "var_name": "CERTIFICATE_2"}, {"original_string": "private static final ValidatedRpkiObjects.RouterCertificate CERTIFICATE_3 = ValidatedRpkiObjects.RouterCertificate.of(\n            ValidatedRpkiObjects.TrustAnchorData.of(Key.of(3L), \"Test TA 3\"),\n            ImmutableList.of(ASN_1.toString()), SKI_3, PK_3);", "modifier": "private static final", "type": "ValidatedRpkiObjects.RouterCertificate", "declarator": "CERTIFICATE_3 = ValidatedRpkiObjects.RouterCertificate.of(\n            ValidatedRpkiObjects.TrustAnchorData.of(Key.of(3L), \"Test TA 3\"),\n            ImmutableList.of(ASN_1.toString()), SKI_3, PK_3)", "var_name": "CERTIFICATE_3"}], "file": "rpki-validator/src/test/java/net/ripe/rpki/validator3/api/bgpsec/BgpSecFilterServiceTest.java"}, "test_case": {"identifier": "should_not_filter_out_unrelated_certificate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_not_filter_out_unrelated_certificate() {\n        final List<ValidatedRpkiObjects.RouterCertificate> certificates = Collections.singletonList(CERTIFICATE_1);\n        final List<BgpSecFilter> filters = Collections.singletonList(new BgpSecFilter(1L, 12L, null, null));\n        final Stream<ValidatedRpkiObjects.RouterCertificate> s = bgpSecFilterService.filterCertificates(certificates.stream(), filters);\n        assertEquals(certificates, s.collect(Collectors.toList()));\n    }", "signature": "void should_not_filter_out_unrelated_certificate()", "full_signature": "@Test public void should_not_filter_out_unrelated_certificate()", "class_method_signature": "BgpSecFilterServiceTest.should_not_filter_out_unrelated_certificate()", "testcase": true, "constructor": false, "invocations": ["singletonList", "singletonList", "filterCertificates", "stream", "assertEquals", "collect", "toList"]}, "focal_class": {"identifier": "BgpSecFilterService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final SlurmStore slurmStore;", "modifier": "private final", "type": "SlurmStore", "declarator": "slurmStore", "var_name": "slurmStore"}], "methods": [{"identifier": "BgpSecFilterService", "parameters": "(SlurmStore slurmStore)", "modifiers": "@Autowired public", "return": "", "signature": " BgpSecFilterService(SlurmStore slurmStore)", "full_signature": "@Autowired public  BgpSecFilterService(SlurmStore slurmStore)", "class_method_signature": "BgpSecFilterService.BgpSecFilterService(SlurmStore slurmStore)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "(@Valid AddBgpSecFilter command)", "modifiers": "public", "return": "long", "signature": "long execute(@Valid AddBgpSecFilter command)", "full_signature": "public long execute(@Valid AddBgpSecFilter command)", "class_method_signature": "BgpSecFilterService.execute(@Valid AddBgpSecFilter command)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(long id)", "modifiers": "public", "return": "void", "signature": "void remove(long id)", "full_signature": "public void remove(long id)", "class_method_signature": "BgpSecFilterService.remove(long id)", "testcase": false, "constructor": false}, {"identifier": "all", "parameters": "()", "modifiers": "public", "return": "Stream<BgpSecFilter>", "signature": "Stream<BgpSecFilter> all()", "full_signature": "public Stream<BgpSecFilter> all()", "class_method_signature": "BgpSecFilterService.all()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "BgpSecFilterService.clear()", "testcase": false, "constructor": false}, {"identifier": "filterCertificates", "parameters": "(final Stream<ValidatedRpkiObjects.RouterCertificate> routerCertificates)", "modifiers": "public", "return": "Stream<ValidatedRpkiObjects.RouterCertificate>", "signature": "Stream<ValidatedRpkiObjects.RouterCertificate> filterCertificates(final Stream<ValidatedRpkiObjects.RouterCertificate> routerCertificates)", "full_signature": "public Stream<ValidatedRpkiObjects.RouterCertificate> filterCertificates(final Stream<ValidatedRpkiObjects.RouterCertificate> routerCertificates)", "class_method_signature": "BgpSecFilterService.filterCertificates(final Stream<ValidatedRpkiObjects.RouterCertificate> routerCertificates)", "testcase": false, "constructor": false}, {"identifier": "filterCertificates", "parameters": "(\n            final Stream<ValidatedRpkiObjects.RouterCertificate> routerCertificates,\n            final List<BgpSecFilter> filters)", "modifiers": "", "return": "Stream<ValidatedRpkiObjects.RouterCertificate>", "signature": "Stream<ValidatedRpkiObjects.RouterCertificate> filterCertificates(\n            final Stream<ValidatedRpkiObjects.RouterCertificate> routerCertificates,\n            final List<BgpSecFilter> filters)", "full_signature": " Stream<ValidatedRpkiObjects.RouterCertificate> filterCertificates(\n            final Stream<ValidatedRpkiObjects.RouterCertificate> routerCertificates,\n            final List<BgpSecFilter> filters)", "class_method_signature": "BgpSecFilterService.filterCertificates(\n            final Stream<ValidatedRpkiObjects.RouterCertificate> routerCertificates,\n            final List<BgpSecFilter> filters)", "testcase": false, "constructor": false}], "file": "rpki-validator/src/main/java/net/ripe/rpki/validator3/api/bgpsec/BgpSecFilterService.java"}, "focal_method": {"identifier": "filterCertificates", "parameters": "(final Stream<ValidatedRpkiObjects.RouterCertificate> routerCertificates)", "modifiers": "public", "return": "Stream<ValidatedRpkiObjects.RouterCertificate>", "body": "public Stream<ValidatedRpkiObjects.RouterCertificate> filterCertificates(final Stream<ValidatedRpkiObjects.RouterCertificate> routerCertificates) {\n        return filterCertificates(routerCertificates, all().collect(Collectors.toList()));\n    }", "signature": "Stream<ValidatedRpkiObjects.RouterCertificate> filterCertificates(final Stream<ValidatedRpkiObjects.RouterCertificate> routerCertificates)", "full_signature": "public Stream<ValidatedRpkiObjects.RouterCertificate> filterCertificates(final Stream<ValidatedRpkiObjects.RouterCertificate> routerCertificates)", "class_method_signature": "BgpSecFilterService.filterCertificates(final Stream<ValidatedRpkiObjects.RouterCertificate> routerCertificates)", "testcase": false, "constructor": false, "invocations": ["filterCertificates", "collect", "all", "toList"]}, "repository": {"repo_id": 104217624, "url": "https://github.com/RIPE-NCC/rpki-validator-3", "stars": 32, "created": "9/20/2017 1:15:05 PM +00:00", "updates": "2020-01-27T10:48:38+00:00", "fork": "False", "license": "licensed"}}