{"test_class": {"identifier": "TDRCollectorInstanceWatcherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final byte[] PRIVATE_KEY = {45, 45, 45, 45, 45, 66, 69, 71, 73, 78, 32, 68, 83, 65, 32, 80, 82, 73, 86, 65, 84, 69, 32, 75, 69, 89, 45, 45, 45, 45, 45, 10, 77, 73, 73, 66, 118, 65, 73, 66, 65, 65, 75, 66, 103, 81, 67, 49, 122, 115, 54, 107, 50, 120, 66, 68, 104, 117, 57, 78, 76, 53, 104, 86, 84, 68, 118, 76, 80, 50, 108, 51, 112, 107, 105, 87, 109, 115, 113, 110, 67, 69, 69, 84, 89, 80, 43, 87, 119, 116, 70, 74, 67, 79, 97, 52, 10, 107, 113, 50, 87, 70, 120, 75, 75, 106, 98, 108, 87, 81, 107, 118, 77, 97, 109, 69, 97, 119, 72, 107, 103, 105, 55, 66, 87, 86, 105, 120, 119, 82, 113, 105, 70, 67, 102, 86, 56, 109, 54, 99, 117, 80, 51, 99, 108, 114, 89, 47, 117, 87, 81, 48, 66, 100, 113, 47, 70, 52, 82, 83, 80, 10, 83, 98, 116, 112, 76, 69, 79, 77, 86, 51, 74, 90, 119, 52, 116, 68, 122, 109, 108, 119, 120, 78, 78, 66, 118, 67, 55, 87, 101, 52, 104, 105, 48, 48, 83, 108, 70, 56, 90, 53, 110, 99, 43, 85, 70, 57, 53, 103, 117, 49, 77, 110, 65, 70, 71, 76, 103, 81, 73, 86, 65, 78, 54, 70, 10, 119, 48, 82, 82, 51, 112, 49, 66, 104, 113, 113, 83, 118, 48, 75, 98, 82, 75, 78, 102, 70, 57, 65, 76, 65, 111, 71, 65, 65, 106, 55, 112, 55, 83, 78, 122, 70, 110, 97, 117, 108, 80, 55, 103, 111, 100, 73, 55, 47, 54, 73, 120, 111, 56, 101, 73, 81, 71, 66, 74, 104, 47, 79, 85, 10, 85, 54, 107, 80, 99, 51, 104, 114, 47, 122, 82, 70, 100, 120, 52, 110, 100, 118, 120, 110, 75, 79, 84, 86, 104, 101, 113, 99, 74, 54, 84, 113, 111, 43, 57, 89, 77, 51, 104, 49, 105, 111, 90, 105, 100, 90, 121, 49, 98, 118, 71, 75, 107, 122, 81, 106, 118, 118, 119, 111, 117, 89, 76, 83, 10, 116, 55, 74, 76, 114, 75, 70, 69, 52, 111, 76, 90, 85, 115, 106, 78, 107, 98, 112, 114, 76, 77, 119, 53, 98, 111, 78, 109, 51, 51, 76, 90, 103, 90, 84, 102, 80, 118, 121, 113, 84, 112, 52, 101, 75, 51, 65, 97, 49, 98, 90, 50, 111, 99, 114, 50, 84, 103, 112, 98, 78, 110, 71, 112, 10, 122, 106, 89, 57, 87, 88, 115, 67, 103, 89, 69, 65, 106, 57, 73, 119, 74, 73, 90, 113, 56, 106, 103, 112, 102, 103, 52, 99, 81, 71, 82, 67, 111, 88, 103, 115, 111, 107, 85, 53, 116, 107, 80, 77, 51, 66, 73, 53, 105, 56, 80, 121, 118, 101, 114, 118, 70, 55, 80, 75, 105, 85, 108, 90, 10, 52, 80, 111, 103, 105, 55, 73, 102, 100, 111, 88, 97, 118, 73, 52, 67, 81, 78, 103, 99, 43, 72, 116, 54, 48, 50, 97, 110, 82, 57, 79, 117, 102, 81, 112, 66, 110, 51, 106, 98, 69, 120, 101, 86, 52, 78, 103, 111, 84, 117, 88, 119, 78, 101, 80, 68, 52, 77, 118, 111, 112, 108, 80, 111, 10, 78, 89, 82, 114, 82, 75, 56, 121, 67, 106, 88, 116, 79, 88, 83, 101, 87, 67, 52, 108, 74, 103, 67, 108, 74, 109, 55, 83, 72, 82, 111, 73, 51, 76, 111, 49, 47, 112, 109, 77, 88, 51, 120, 75, 119, 83, 71, 115, 111, 119, 99, 76, 71, 112, 107, 67, 70, 81, 67, 49, 121, 73, 116, 102, 10, 113, 84, 82, 84, 56, 104, 48, 51, 89, 105, 78, 74, 79, 109, 121, 51, 122, 73, 105, 105, 88, 119, 61, 61, 10, 45, 45, 45, 45, 45, 69, 78, 68, 32, 68, 83, 65, 32, 80, 82, 73, 86, 65, 84, 69, 32, 75, 69, 89, 45, 45, 45, 45, 45, 10, 9, 9};", "modifier": "private static final", "type": "byte[]", "declarator": "PRIVATE_KEY = {45, 45, 45, 45, 45, 66, 69, 71, 73, 78, 32, 68, 83, 65, 32, 80, 82, 73, 86, 65, 84, 69, 32, 75, 69, 89, 45, 45, 45, 45, 45, 10, 77, 73, 73, 66, 118, 65, 73, 66, 65, 65, 75, 66, 103, 81, 67, 49, 122, 115, 54, 107, 50, 120, 66, 68, 104, 117, 57, 78, 76, 53, 104, 86, 84, 68, 118, 76, 80, 50, 108, 51, 112, 107, 105, 87, 109, 115, 113, 110, 67, 69, 69, 84, 89, 80, 43, 87, 119, 116, 70, 74, 67, 79, 97, 52, 10, 107, 113, 50, 87, 70, 120, 75, 75, 106, 98, 108, 87, 81, 107, 118, 77, 97, 109, 69, 97, 119, 72, 107, 103, 105, 55, 66, 87, 86, 105, 120, 119, 82, 113, 105, 70, 67, 102, 86, 56, 109, 54, 99, 117, 80, 51, 99, 108, 114, 89, 47, 117, 87, 81, 48, 66, 100, 113, 47, 70, 52, 82, 83, 80, 10, 83, 98, 116, 112, 76, 69, 79, 77, 86, 51, 74, 90, 119, 52, 116, 68, 122, 109, 108, 119, 120, 78, 78, 66, 118, 67, 55, 87, 101, 52, 104, 105, 48, 48, 83, 108, 70, 56, 90, 53, 110, 99, 43, 85, 70, 57, 53, 103, 117, 49, 77, 110, 65, 70, 71, 76, 103, 81, 73, 86, 65, 78, 54, 70, 10, 119, 48, 82, 82, 51, 112, 49, 66, 104, 113, 113, 83, 118, 48, 75, 98, 82, 75, 78, 102, 70, 57, 65, 76, 65, 111, 71, 65, 65, 106, 55, 112, 55, 83, 78, 122, 70, 110, 97, 117, 108, 80, 55, 103, 111, 100, 73, 55, 47, 54, 73, 120, 111, 56, 101, 73, 81, 71, 66, 74, 104, 47, 79, 85, 10, 85, 54, 107, 80, 99, 51, 104, 114, 47, 122, 82, 70, 100, 120, 52, 110, 100, 118, 120, 110, 75, 79, 84, 86, 104, 101, 113, 99, 74, 54, 84, 113, 111, 43, 57, 89, 77, 51, 104, 49, 105, 111, 90, 105, 100, 90, 121, 49, 98, 118, 71, 75, 107, 122, 81, 106, 118, 118, 119, 111, 117, 89, 76, 83, 10, 116, 55, 74, 76, 114, 75, 70, 69, 52, 111, 76, 90, 85, 115, 106, 78, 107, 98, 112, 114, 76, 77, 119, 53, 98, 111, 78, 109, 51, 51, 76, 90, 103, 90, 84, 102, 80, 118, 121, 113, 84, 112, 52, 101, 75, 51, 65, 97, 49, 98, 90, 50, 111, 99, 114, 50, 84, 103, 112, 98, 78, 110, 71, 112, 10, 122, 106, 89, 57, 87, 88, 115, 67, 103, 89, 69, 65, 106, 57, 73, 119, 74, 73, 90, 113, 56, 106, 103, 112, 102, 103, 52, 99, 81, 71, 82, 67, 111, 88, 103, 115, 111, 107, 85, 53, 116, 107, 80, 77, 51, 66, 73, 53, 105, 56, 80, 121, 118, 101, 114, 118, 70, 55, 80, 75, 105, 85, 108, 90, 10, 52, 80, 111, 103, 105, 55, 73, 102, 100, 111, 88, 97, 118, 73, 52, 67, 81, 78, 103, 99, 43, 72, 116, 54, 48, 50, 97, 110, 82, 57, 79, 117, 102, 81, 112, 66, 110, 51, 106, 98, 69, 120, 101, 86, 52, 78, 103, 111, 84, 117, 88, 119, 78, 101, 80, 68, 52, 77, 118, 111, 112, 108, 80, 111, 10, 78, 89, 82, 114, 82, 75, 56, 121, 67, 106, 88, 116, 79, 88, 83, 101, 87, 67, 52, 108, 74, 103, 67, 108, 74, 109, 55, 83, 72, 82, 111, 73, 51, 76, 111, 49, 47, 112, 109, 77, 88, 51, 120, 75, 119, 83, 71, 115, 111, 119, 99, 76, 71, 112, 107, 67, 70, 81, 67, 49, 121, 73, 116, 102, 10, 113, 84, 82, 84, 56, 104, 48, 51, 89, 105, 78, 74, 79, 109, 121, 51, 122, 73, 105, 105, 88, 119, 61, 61, 10, 45, 45, 45, 45, 45, 69, 78, 68, 32, 68, 83, 65, 32, 80, 82, 73, 86, 65, 84, 69, 32, 75, 69, 89, 45, 45, 45, 45, 45, 10, 9, 9}", "var_name": "PRIVATE_KEY"}, {"original_string": "private static final byte[] PUBLIC_KEY = {115, 115, 104, 45, 100, 115, 115, 32, 65, 65, 65, 65, 66, 51, 78, 122, 97, 67, 49, 107, 99, 51, 77, 65, 65, 65, 67, 66, 65, 76, 88, 79, 122, 113, 84, 98, 69, 69, 79, 71, 55, 48, 48, 118, 109, 70, 86, 77, 79, 56, 115, 47, 97, 88, 101, 109, 83, 74, 97, 97, 121, 113, 99, 73, 81, 82, 78, 103, 47, 53, 98, 67, 48, 85, 107, 73, 53, 114, 105, 83, 114, 90, 89, 88, 69, 111, 113, 78, 117, 86, 90, 67, 83, 56, 120, 113, 89, 82, 114, 65, 101, 83, 67, 76, 115, 70, 90, 87, 76, 72, 66, 71, 113, 73, 85, 74, 57, 88, 121, 98, 112, 121, 52, 47, 100, 121, 87, 116, 106, 43, 53, 90, 68, 81, 70, 50, 114, 56, 88, 104, 70, 73, 57, 74, 117, 50, 107, 115, 81, 52, 120, 88, 99, 108, 110, 68, 105, 48, 80, 79, 97, 88, 68, 69, 48, 48, 71, 56, 76, 116, 90, 55, 105, 71, 76, 84, 82, 75, 85, 88, 120, 110, 109, 100, 122, 53, 81, 88, 51, 109, 67, 55, 85, 121, 99, 65, 85, 89, 117, 66, 65, 65, 65, 65, 70, 81, 68, 101, 104, 99, 78, 69, 85, 100, 54, 100, 81, 89, 97, 113, 107, 114, 57, 67, 109, 48, 83, 106, 88, 120, 102, 81, 67, 119, 65, 65, 65, 73, 65, 67, 80, 117, 110, 116, 73, 51, 77, 87, 100, 113, 54, 85, 47, 117, 67, 104, 48, 106, 118, 47, 111, 106, 71, 106, 120, 52, 104, 65, 89, 69, 109, 72, 56, 53, 82, 84, 113, 81, 57, 122, 101, 71, 118, 47, 78, 69, 86, 51, 72, 105, 100, 50, 47, 71, 99, 111, 53, 78, 87, 70, 54, 112, 119, 110, 112, 79, 113, 106, 55, 49, 103, 122, 101, 72, 87, 75, 104, 109, 74, 49, 110, 76, 86, 117, 56, 89, 113, 84, 78, 67, 79, 43, 47, 67, 105, 53, 103, 116, 75, 51, 115, 107, 117, 115, 111, 85, 84, 105, 103, 116, 108, 83, 121, 77, 50, 82, 117, 109, 115, 115, 122, 68, 108, 117, 103, 50, 98, 102, 99, 116, 109, 66, 108, 78, 56, 43, 47, 75, 112, 79, 110, 104, 52, 114, 99, 66, 114, 86, 116, 110, 97, 104, 121, 118, 90, 79, 67, 108, 115, 50, 99, 97, 110, 79, 78, 106, 49, 90, 101, 119, 65, 65, 65, 73, 69, 65, 106, 57, 73, 119, 74, 73, 90, 113, 56, 106, 103, 112, 102, 103, 52, 99, 81, 71, 82, 67, 111, 88, 103, 115, 111, 107, 85, 53, 116, 107, 80, 77, 51, 66, 73, 53, 105, 56, 80, 121, 118, 101, 114, 118, 70, 55, 80, 75, 105, 85, 108, 90, 52, 80, 111, 103, 105, 55, 73, 102, 100, 111, 88, 97, 118, 73, 52, 67, 81, 78, 103, 99, 43, 72, 116, 54, 48, 50, 97, 110, 82, 57, 79, 117, 102, 81, 112, 66, 110, 51, 106, 98, 69, 120, 101, 86, 52, 78, 103, 111, 84, 117, 88, 119, 78, 101, 80, 68, 52, 77, 118, 111, 112, 108, 80, 111, 78, 89, 82, 114, 82, 75, 56, 121, 67, 106, 88, 116, 79, 88, 83, 101, 87, 67, 52, 108, 74, 103, 67, 108, 74, 109, 55, 83, 72, 82, 111, 73, 51, 76, 111, 49, 47, 112, 109, 77, 88, 51, 120, 75, 119, 83, 71, 115, 111, 119, 99, 76, 71, 112, 107, 61, 32, 114, 111, 111, 116, 64, 118, 109, 45, 111, 97, 112, 45, 48};", "modifier": "private static final", "type": "byte[]", "declarator": "PUBLIC_KEY = {115, 115, 104, 45, 100, 115, 115, 32, 65, 65, 65, 65, 66, 51, 78, 122, 97, 67, 49, 107, 99, 51, 77, 65, 65, 65, 67, 66, 65, 76, 88, 79, 122, 113, 84, 98, 69, 69, 79, 71, 55, 48, 48, 118, 109, 70, 86, 77, 79, 56, 115, 47, 97, 88, 101, 109, 83, 74, 97, 97, 121, 113, 99, 73, 81, 82, 78, 103, 47, 53, 98, 67, 48, 85, 107, 73, 53, 114, 105, 83, 114, 90, 89, 88, 69, 111, 113, 78, 117, 86, 90, 67, 83, 56, 120, 113, 89, 82, 114, 65, 101, 83, 67, 76, 115, 70, 90, 87, 76, 72, 66, 71, 113, 73, 85, 74, 57, 88, 121, 98, 112, 121, 52, 47, 100, 121, 87, 116, 106, 43, 53, 90, 68, 81, 70, 50, 114, 56, 88, 104, 70, 73, 57, 74, 117, 50, 107, 115, 81, 52, 120, 88, 99, 108, 110, 68, 105, 48, 80, 79, 97, 88, 68, 69, 48, 48, 71, 56, 76, 116, 90, 55, 105, 71, 76, 84, 82, 75, 85, 88, 120, 110, 109, 100, 122, 53, 81, 88, 51, 109, 67, 55, 85, 121, 99, 65, 85, 89, 117, 66, 65, 65, 65, 65, 70, 81, 68, 101, 104, 99, 78, 69, 85, 100, 54, 100, 81, 89, 97, 113, 107, 114, 57, 67, 109, 48, 83, 106, 88, 120, 102, 81, 67, 119, 65, 65, 65, 73, 65, 67, 80, 117, 110, 116, 73, 51, 77, 87, 100, 113, 54, 85, 47, 117, 67, 104, 48, 106, 118, 47, 111, 106, 71, 106, 120, 52, 104, 65, 89, 69, 109, 72, 56, 53, 82, 84, 113, 81, 57, 122, 101, 71, 118, 47, 78, 69, 86, 51, 72, 105, 100, 50, 47, 71, 99, 111, 53, 78, 87, 70, 54, 112, 119, 110, 112, 79, 113, 106, 55, 49, 103, 122, 101, 72, 87, 75, 104, 109, 74, 49, 110, 76, 86, 117, 56, 89, 113, 84, 78, 67, 79, 43, 47, 67, 105, 53, 103, 116, 75, 51, 115, 107, 117, 115, 111, 85, 84, 105, 103, 116, 108, 83, 121, 77, 50, 82, 117, 109, 115, 115, 122, 68, 108, 117, 103, 50, 98, 102, 99, 116, 109, 66, 108, 78, 56, 43, 47, 75, 112, 79, 110, 104, 52, 114, 99, 66, 114, 86, 116, 110, 97, 104, 121, 118, 90, 79, 67, 108, 115, 50, 99, 97, 110, 79, 78, 106, 49, 90, 101, 119, 65, 65, 65, 73, 69, 65, 106, 57, 73, 119, 74, 73, 90, 113, 56, 106, 103, 112, 102, 103, 52, 99, 81, 71, 82, 67, 111, 88, 103, 115, 111, 107, 85, 53, 116, 107, 80, 77, 51, 66, 73, 53, 105, 56, 80, 121, 118, 101, 114, 118, 70, 55, 80, 75, 105, 85, 108, 90, 52, 80, 111, 103, 105, 55, 73, 102, 100, 111, 88, 97, 118, 73, 52, 67, 81, 78, 103, 99, 43, 72, 116, 54, 48, 50, 97, 110, 82, 57, 79, 117, 102, 81, 112, 66, 110, 51, 106, 98, 69, 120, 101, 86, 52, 78, 103, 111, 84, 117, 88, 119, 78, 101, 80, 68, 52, 77, 118, 111, 112, 108, 80, 111, 78, 89, 82, 114, 82, 75, 56, 121, 67, 106, 88, 116, 79, 88, 83, 101, 87, 67, 52, 108, 74, 103, 67, 108, 74, 109, 55, 83, 72, 82, 111, 73, 51, 76, 111, 49, 47, 112, 109, 77, 88, 51, 120, 75, 119, 83, 71, 115, 111, 119, 99, 76, 71, 112, 107, 61, 32, 114, 111, 111, 116, 64, 118, 109, 45, 111, 97, 112, 45, 48}", "var_name": "PUBLIC_KEY"}, {"original_string": "private static final String USER_NAME = \"root\";", "modifier": "private static final", "type": "String", "declarator": "USER_NAME = \"root\"", "var_name": "USER_NAME"}, {"original_string": "private static final String KEY_NAME = \"test_key_name\";", "modifier": "private static final", "type": "String", "declarator": "KEY_NAME = \"test_key_name\"", "var_name": "KEY_NAME"}, {"original_string": "private static final String CONFIG_NAME = \"test_tdr_config\";", "modifier": "private static final", "type": "String", "declarator": "CONFIG_NAME = \"test_tdr_config\"", "var_name": "CONFIG_NAME"}, {"original_string": "private static final String WRITE_LOCATION = \".\";", "modifier": "private static final", "type": "String", "declarator": "WRITE_LOCATION = \".\"", "var_name": "WRITE_LOCATION"}, {"original_string": "private TDRCollectorInstanceWatcher tdrCollectorInstanceWatcher;", "modifier": "private", "type": "TDRCollectorInstanceWatcher", "declarator": "tdrCollectorInstanceWatcher", "var_name": "tdrCollectorInstanceWatcher"}, {"original_string": "private ITopologyClient topologyClient;", "modifier": "private", "type": "ITopologyClient", "declarator": "topologyClient", "var_name": "topologyClient"}], "file": "exposure-engine/gateway-common/src/test/java/com/alu/e3/data/topology/TDRCollectorInstanceWatcherTest.java"}, "test_case": {"identifier": "testTdrCollectorInstances", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testTdrCollectorInstances() {\n\t\tinitializeTestSetup(1, 1, 2, true);\n\t\ttdrCollectorInstanceWatcher.init();\n\n\t\tassertTrue(\"Key file was not created.\", verifyKeyExists());\n\t\tassertTrue(\"Config file was not created.\", verifyConfigExists());\n\t\tassertTrue(\"Config file was not correctly built.\", verifyValidConfig(2));\n\t\tInstance inst1 = createInstance(E3Constant.TDR_COLLECTOR, \"1.1.3.2\", \"2.1.3.2\", null);\n\t\tInstance inst2 = createInstance(E3Constant.TDR_COLLECTOR, \"1.1.3.3\", \"2.1.3.3\", null);\n\t\taddInstance(inst1);\n\t\taddInstance(inst2);\n\t\tassertTrue(\"Key file did not remain after adding collection instances.\", verifyKeyExists());\n\t\tassertTrue(\"Config file did not remain after adding collection instances.\", verifyConfigExists());\n\t\tassertTrue(\"Config file did not remain correctly built after adding collection instances.\", verifyValidConfig(4));\n\t\tdeleteInstance(inst2);\n\t\tassertTrue(\"Key file did not remain after removing collection instance.\", verifyKeyExists());\n\t\tassertTrue(\"Config file did not remain after removing collection instance.\", verifyConfigExists());\n\t\tassertTrue(\"Config file did not remain correctly built after removing collection instance.\", verifyValidConfig(3));\n\t}", "signature": "void testTdrCollectorInstances()", "full_signature": "@Test public void testTdrCollectorInstances()", "class_method_signature": "TDRCollectorInstanceWatcherTest.testTdrCollectorInstances()", "testcase": true, "constructor": false, "invocations": ["initializeTestSetup", "init", "assertTrue", "verifyKeyExists", "assertTrue", "verifyConfigExists", "assertTrue", "verifyValidConfig", "createInstance", "createInstance", "addInstance", "addInstance", "assertTrue", "verifyKeyExists", "assertTrue", "verifyConfigExists", "assertTrue", "verifyValidConfig", "deleteInstance", "assertTrue", "verifyKeyExists", "assertTrue", "verifyConfigExists", "assertTrue", "verifyValidConfig"]}, "focal_class": {"identifier": "TDRCollectorInstanceWatcher", "superclass": "", "interfaces": "implements IEntryListener<String, ArrayList<Instance>>", "fields": [{"original_string": "public static final String HOST_CFG = \"ra_server\";", "modifier": "public static final", "type": "String", "declarator": "HOST_CFG = \"ra_server\"", "var_name": "HOST_CFG"}, {"original_string": "public static final String KEY_CFG = \"ssh_key\";", "modifier": "public static final", "type": "String", "declarator": "KEY_CFG = \"ssh_key\"", "var_name": "KEY_CFG"}, {"original_string": "public static final String USER_CFG = \"ssh_key_user\";", "modifier": "public static final", "type": "String", "declarator": "USER_CFG = \"ssh_key_user\"", "var_name": "USER_CFG"}, {"original_string": "public static final String ID_CFG = \"e3_id\";", "modifier": "public static final", "type": "String", "declarator": "ID_CFG = \"e3_id\"", "var_name": "ID_CFG"}, {"original_string": "public static final String CONFIG_KEYVAL_CHAR = \":\";", "modifier": "public static final", "type": "String", "declarator": "CONFIG_KEYVAL_CHAR = \":\"", "var_name": "CONFIG_KEYVAL_CHAR"}, {"original_string": "private static final Logger logger = \n\t\tLoggerFactory.getLogger(TDRCollectorInstanceWatcher.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = \n\t\tLoggerFactory.getLogger(TDRCollectorInstanceWatcher.class)", "var_name": "logger"}, {"original_string": "private ITopologyClient topologyClient;", "modifier": "private", "type": "ITopologyClient", "declarator": "topologyClient", "var_name": "topologyClient"}, {"original_string": "private List<Instance> TDRCollectors = new LinkedList<Instance>();", "modifier": "private", "type": "List<Instance>", "declarator": "TDRCollectors = new LinkedList<Instance>()", "var_name": "TDRCollectors"}, {"original_string": "private SSHKey key;", "modifier": "private", "type": "SSHKey", "declarator": "key", "var_name": "key"}, {"original_string": "private String user;", "modifier": "private", "type": "String", "declarator": "user", "var_name": "user"}, {"original_string": "private String myName = null;", "modifier": "private", "type": "String", "declarator": "myName = null", "var_name": "myName"}, {"original_string": "protected String writeLocation = E3Constant.TDR_TRANSFER_CONFIG_PATH;", "modifier": "protected", "type": "String", "declarator": "writeLocation = E3Constant.TDR_TRANSFER_CONFIG_PATH", "var_name": "writeLocation"}, {"original_string": "protected String configName = E3Constant.TDR_TRANSFER_CONFIG_FILE;", "modifier": "protected", "type": "String", "declarator": "configName = E3Constant.TDR_TRANSFER_CONFIG_FILE", "var_name": "configName"}, {"original_string": "protected String keyName = E3Constant.TDR_TRANSFER_CONFIG_KEY;", "modifier": "protected", "type": "String", "declarator": "keyName = E3Constant.TDR_TRANSFER_CONFIG_KEY", "var_name": "keyName"}], "methods": [{"identifier": "onInstanceAdded", "parameters": "(Instance instance)", "modifiers": "private", "return": "void", "signature": "void onInstanceAdded(Instance instance)", "full_signature": "private void onInstanceAdded(Instance instance)", "class_method_signature": "TDRCollectorInstanceWatcher.onInstanceAdded(Instance instance)", "testcase": false, "constructor": false}, {"identifier": "onInstanceRemoved", "parameters": "(Instance removedInstance)", "modifiers": "private", "return": "void", "signature": "void onInstanceRemoved(Instance removedInstance)", "full_signature": "private void onInstanceRemoved(Instance removedInstance)", "class_method_signature": "TDRCollectorInstanceWatcher.onInstanceRemoved(Instance removedInstance)", "testcase": false, "constructor": false}, {"identifier": "getMyName", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void getMyName()", "full_signature": "protected void getMyName()", "class_method_signature": "TDRCollectorInstanceWatcher.getMyName()", "testcase": false, "constructor": false}, {"identifier": "writeConfigFile", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void writeConfigFile()", "full_signature": "protected void writeConfigFile()", "class_method_signature": "TDRCollectorInstanceWatcher.writeConfigFile()", "testcase": false, "constructor": false}, {"identifier": "writeKeyFile", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean writeKeyFile()", "full_signature": "protected boolean writeKeyFile()", "class_method_signature": "TDRCollectorInstanceWatcher.writeKeyFile()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void init()", "full_signature": "public void init()", "class_method_signature": "TDRCollectorInstanceWatcher.init()", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void destroy()", "full_signature": "public void destroy()", "class_method_signature": "TDRCollectorInstanceWatcher.destroy()", "testcase": false, "constructor": false}, {"identifier": "verifyCredentials", "parameters": "(Instance instance)", "modifiers": "protected", "return": "boolean", "signature": "boolean verifyCredentials(Instance instance)", "full_signature": "protected boolean verifyCredentials(Instance instance)", "class_method_signature": "TDRCollectorInstanceWatcher.verifyCredentials(Instance instance)", "testcase": false, "constructor": false}, {"identifier": "verifyCredentialsUser", "parameters": "(Instance instance)", "modifiers": "protected", "return": "boolean", "signature": "boolean verifyCredentialsUser(Instance instance)", "full_signature": "protected boolean verifyCredentialsUser(Instance instance)", "class_method_signature": "TDRCollectorInstanceWatcher.verifyCredentialsUser(Instance instance)", "testcase": false, "constructor": false}, {"identifier": "setWriteLocation", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setWriteLocation(String value)", "full_signature": "public void setWriteLocation(String value)", "class_method_signature": "TDRCollectorInstanceWatcher.setWriteLocation(String value)", "testcase": false, "constructor": false}, {"identifier": "getWriteLocation", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getWriteLocation()", "full_signature": "public String getWriteLocation()", "class_method_signature": "TDRCollectorInstanceWatcher.getWriteLocation()", "testcase": false, "constructor": false}, {"identifier": "setConfigName", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setConfigName(String value)", "full_signature": "public void setConfigName(String value)", "class_method_signature": "TDRCollectorInstanceWatcher.setConfigName(String value)", "testcase": false, "constructor": false}, {"identifier": "getConfigName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getConfigName()", "full_signature": "public String getConfigName()", "class_method_signature": "TDRCollectorInstanceWatcher.getConfigName()", "testcase": false, "constructor": false}, {"identifier": "setKeyName", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setKeyName(String value)", "full_signature": "public void setKeyName(String value)", "class_method_signature": "TDRCollectorInstanceWatcher.setKeyName(String value)", "testcase": false, "constructor": false}, {"identifier": "getKeyName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getKeyName()", "full_signature": "public String getKeyName()", "class_method_signature": "TDRCollectorInstanceWatcher.getKeyName()", "testcase": false, "constructor": false}, {"identifier": "setTopologyClient", "parameters": "(ITopologyClient topologyClient)", "modifiers": "public", "return": "void", "signature": "void setTopologyClient(ITopologyClient topologyClient)", "full_signature": "public void setTopologyClient(ITopologyClient topologyClient)", "class_method_signature": "TDRCollectorInstanceWatcher.setTopologyClient(ITopologyClient topologyClient)", "testcase": false, "constructor": false}, {"identifier": "listenInstanceTypeListener", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void listenInstanceTypeListener()", "full_signature": "public void listenInstanceTypeListener()", "class_method_signature": "TDRCollectorInstanceWatcher.listenInstanceTypeListener()", "testcase": false, "constructor": false}, {"identifier": "getTopologyClient", "parameters": "()", "modifiers": "public", "return": "ITopologyClient", "signature": "ITopologyClient getTopologyClient()", "full_signature": "public ITopologyClient getTopologyClient()", "class_method_signature": "TDRCollectorInstanceWatcher.getTopologyClient()", "testcase": false, "constructor": false}, {"identifier": "entryAdded", "parameters": "(DataEntryEvent<String, ArrayList<Instance>> event)", "modifiers": "@Override public", "return": "void", "signature": "void entryAdded(DataEntryEvent<String, ArrayList<Instance>> event)", "full_signature": "@Override public void entryAdded(DataEntryEvent<String, ArrayList<Instance>> event)", "class_method_signature": "TDRCollectorInstanceWatcher.entryAdded(DataEntryEvent<String, ArrayList<Instance>> event)", "testcase": false, "constructor": false}, {"identifier": "entryUpdated", "parameters": "(DataEntryEvent<String, ArrayList<Instance>> event)", "modifiers": "@Override public", "return": "void", "signature": "void entryUpdated(DataEntryEvent<String, ArrayList<Instance>> event)", "full_signature": "@Override public void entryUpdated(DataEntryEvent<String, ArrayList<Instance>> event)", "class_method_signature": "TDRCollectorInstanceWatcher.entryUpdated(DataEntryEvent<String, ArrayList<Instance>> event)", "testcase": false, "constructor": false}, {"identifier": "entryRemoved", "parameters": "(DataEntryEvent<String, ArrayList<Instance>> event)", "modifiers": "@Override public", "return": "void", "signature": "void entryRemoved(DataEntryEvent<String, ArrayList<Instance>> event)", "full_signature": "@Override public void entryRemoved(DataEntryEvent<String, ArrayList<Instance>> event)", "class_method_signature": "TDRCollectorInstanceWatcher.entryRemoved(DataEntryEvent<String, ArrayList<Instance>> event)", "testcase": false, "constructor": false}], "file": "exposure-engine/gateway-common/src/main/java/com/alu/e3/data/topology/TDRCollectorInstanceWatcher.java"}, "focal_method": {"identifier": "init", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void init() {\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(\"Starting TDRCollectorInstanceWatcher ...\");\n\t\t\tlogger.debug(\"Getting TDRCollectorInstance list ...\");\n\t\t}\n\t\tList<Instance> nodeList;\n\t\t\n\t\tnodeList = topologyClient.getAllInstancesOfType(E3Constant.E3MANAGER);\n\t\tif (nodeList != null && nodeList.size() != 0) {\n\t\t\tfor (Instance instance : nodeList) {\n\t\t\t\tverifyCredentials(instance);\n\t\t\t}\n\t\t\tif (this.key == null || this.user == null) {\n\t\t\t\tlogger.warn(\"No credentials were set for instances of type \" + E3Constant.TDR_COLLECTOR + \n\t\t\t\t\".  There will likely be problems with downstream TDR collection.  \");\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tnodeList = topologyClient.getAllInstancesOfType(E3Constant.TDR_COLLECTOR);\n\t\tif (nodeList != null && nodeList.size() != 0) {\n\t\t\tTDRCollectors.addAll(nodeList);\n\t\t\tfor (Instance instance : nodeList) {\n\t\t\t\tverifyCredentialsUser(instance);\n\t\t\t}\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.debug(\"Writing TDR Transfer Script configuration file.\");\n\t\t\t}\n\t\t\twriteConfigFile();\n\t\t} else {\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.debug(\"No instances of type \" + E3Constant.TDR_COLLECTOR + \" were found.\");\n\t\t\t}\n\t\t}\n\t\tlistenInstanceTypeListener();\n\t\tgetMyName();\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(\"TDRCollectorInstanceWatcher init'd.\");\n\t\t}\n\t}", "signature": "void init()", "full_signature": "public void init()", "class_method_signature": "TDRCollectorInstanceWatcher.init()", "testcase": false, "constructor": false, "invocations": ["isDebugEnabled", "debug", "debug", "getAllInstancesOfType", "size", "verifyCredentials", "warn", "getAllInstancesOfType", "size", "addAll", "verifyCredentialsUser", "isDebugEnabled", "debug", "writeConfigFile", "isDebugEnabled", "debug", "listenInstanceTypeListener", "getMyName", "isDebugEnabled", "debug"]}, "repository": {"repo_id": 5239065, "url": "https://github.com/apigrove/apigrove", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 118, "size": 215144, "license": "licensed"}}