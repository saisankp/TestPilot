{"test_class": {"identifier": "CompositePackageDescrTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NAMESPACE = \"namespace\";", "modifier": "private static final", "type": "String", "declarator": "NAMESPACE = \"namespace\"", "var_name": "NAMESPACE"}, {"original_string": "private  CompositePackageDescr compositePackageDescr;", "modifier": "private", "type": "CompositePackageDescr", "declarator": "compositePackageDescr", "var_name": "compositePackageDescr"}], "file": "drools-compiler/src/test/java/org/drools/compiler/lang/descr/CompositePackageDescrTest.java"}, "test_case": {"identifier": "addPackageDescrDifferentPkgUUID", "parameters": "()", "modifiers": "@Test(expected = RuntimeException.class) public", "return": "void", "body": "@Test(expected = RuntimeException.class)\n    public void addPackageDescrDifferentPkgUUID() {\n        String pkgUUID = generateUUID();\n        PackageDescr first = new PackageDescr(NAMESPACE);\n        first.setPreferredPkgUUID(pkgUUID);\n        assertTrue(first.getPreferredPkgUUID().isPresent());\n        compositePackageDescr.addPackageDescr(new ByteArrayResource(), first);\n        assertTrue(compositePackageDescr.getPreferredPkgUUID().isPresent());\n        assertEquals(pkgUUID, compositePackageDescr.getPreferredPkgUUID().get());\n        pkgUUID = generateUUID();\n        PackageDescr second = new PackageDescr(NAMESPACE);\n        second.setPreferredPkgUUID(pkgUUID);\n        assertTrue(second.getPreferredPkgUUID().isPresent());\n        assertNotEquals(first.getPreferredPkgUUID().get(), second.getPreferredPkgUUID().get());\n        compositePackageDescr.addPackageDescr(new ByteArrayResource(), second);\n    }", "signature": "void addPackageDescrDifferentPkgUUID()", "full_signature": "@Test(expected = RuntimeException.class) public void addPackageDescrDifferentPkgUUID()", "class_method_signature": "CompositePackageDescrTest.addPackageDescrDifferentPkgUUID()", "testcase": true, "constructor": false, "invocations": ["generateUUID", "setPreferredPkgUUID", "assertTrue", "isPresent", "getPreferredPkgUUID", "addPackageDescr", "assertTrue", "isPresent", "getPreferredPkgUUID", "assertEquals", "get", "getPreferredPkgUUID", "generateUUID", "setPreferredPkgUUID", "assertTrue", "isPresent", "getPreferredPkgUUID", "assertNotEquals", "get", "getPreferredPkgUUID", "get", "getPreferredPkgUUID", "addPackageDescr"]}, "focal_class": {"identifier": "CompositePackageDescr", "superclass": "extends PackageDescr", "interfaces": "", "fields": [{"original_string": "private CompositeAssetFilter filter;", "modifier": "private", "type": "CompositeAssetFilter", "declarator": "filter", "var_name": "filter"}], "methods": [{"identifier": "CompositePackageDescr", "parameters": "()", "modifiers": "public", "return": "", "signature": " CompositePackageDescr()", "full_signature": "public  CompositePackageDescr()", "class_method_signature": "CompositePackageDescr.CompositePackageDescr()", "testcase": false, "constructor": true}, {"identifier": "CompositePackageDescr", "parameters": "(Resource resource, PackageDescr packageDescr)", "modifiers": "public", "return": "", "signature": " CompositePackageDescr(Resource resource, PackageDescr packageDescr)", "full_signature": "public  CompositePackageDescr(Resource resource, PackageDescr packageDescr)", "class_method_signature": "CompositePackageDescr.CompositePackageDescr(Resource resource, PackageDescr packageDescr)", "testcase": false, "constructor": true}, {"identifier": "addPackageDescr", "parameters": "(Resource resource, PackageDescr packageDescr)", "modifiers": "public", "return": "void", "signature": "void addPackageDescr(Resource resource, PackageDescr packageDescr)", "full_signature": "public void addPackageDescr(Resource resource, PackageDescr packageDescr)", "class_method_signature": "CompositePackageDescr.addPackageDescr(Resource resource, PackageDescr packageDescr)", "testcase": false, "constructor": false}, {"identifier": "internalAdd", "parameters": "(Resource resource, PackageDescr packageDescr)", "modifiers": "private", "return": "void", "signature": "void internalAdd(Resource resource, PackageDescr packageDescr)", "full_signature": "private void internalAdd(Resource resource, PackageDescr packageDescr)", "class_method_signature": "CompositePackageDescr.internalAdd(Resource resource, PackageDescr packageDescr)", "testcase": false, "constructor": false}, {"identifier": "getFilter", "parameters": "()", "modifiers": "public", "return": "CompositeAssetFilter", "signature": "CompositeAssetFilter getFilter()", "full_signature": "public CompositeAssetFilter getFilter()", "class_method_signature": "CompositePackageDescr.getFilter()", "testcase": false, "constructor": false}, {"identifier": "addFilter", "parameters": "( KnowledgeBuilderImpl.AssetFilter f )", "modifiers": "public", "return": "void", "signature": "void addFilter( KnowledgeBuilderImpl.AssetFilter f )", "full_signature": "public void addFilter( KnowledgeBuilderImpl.AssetFilter f )", "class_method_signature": "CompositePackageDescr.addFilter( KnowledgeBuilderImpl.AssetFilter f )", "testcase": false, "constructor": false}], "file": "drools-compiler/src/main/java/org/drools/compiler/lang/descr/CompositePackageDescr.java"}, "focal_method": {"identifier": "addPackageDescr", "parameters": "(Resource resource, PackageDescr packageDescr)", "modifiers": "public", "return": "void", "body": "public void addPackageDescr(Resource resource, PackageDescr packageDescr) {\n        if (!getNamespace().equals(packageDescr.getNamespace())) {\n            throw new RuntimeException(\"Composing PackageDescr (\" + packageDescr.getName()\n                + \") in different namespaces (namespace=\" + getNamespace()\n                + \" packageDescr=\" + packageDescr.getNamespace() + \")\" );\n        }\n        internalAdd(resource, packageDescr);\n    }", "signature": "void addPackageDescr(Resource resource, PackageDescr packageDescr)", "full_signature": "public void addPackageDescr(Resource resource, PackageDescr packageDescr)", "class_method_signature": "CompositePackageDescr.addPackageDescr(Resource resource, PackageDescr packageDescr)", "testcase": false, "constructor": false, "invocations": ["equals", "getNamespace", "getNamespace", "getName", "getNamespace", "getNamespace", "internalAdd"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}