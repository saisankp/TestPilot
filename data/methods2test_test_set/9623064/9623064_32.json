{"test_class": {"identifier": "RedisSchedulerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RedisScheduler redisScheduler;", "modifier": "private", "type": "RedisScheduler", "declarator": "redisScheduler", "var_name": "redisScheduler"}], "file": "webmagic-extension/src/test/java/us/codecraft/webmagic/scheduler/RedisSchedulerTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Ignore(\"environment depended\") @Test public", "return": "void", "body": "@Ignore(\"environment depended\")\n    @Test\n    public void test() {\n        Task task = new Task() {\n            @Override\n            public String getUUID() {\n                return \"1\";\n            }\n\n            @Override\n            public Site getSite() {\n                return null;\n            }\n        };\n        Request request = new Request(\"http://www.ibm.com/developerworks/cn/java/j-javadev2-22/\");\n        request.putExtra(\"1\",\"2\");\n        redisScheduler.push(request, task);\n        Request poll = redisScheduler.poll(task);\n        assertThat(poll).isEqualTo(request);\n\n    }", "signature": "void test()", "full_signature": "@Ignore(\"environment depended\") @Test public void test()", "class_method_signature": "RedisSchedulerTest.test()", "testcase": true, "constructor": false, "invocations": ["putExtra", "push", "poll", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "RedisScheduler", "superclass": "extends DuplicateRemovedScheduler", "interfaces": "implements MonitorableScheduler, DuplicateRemover", "fields": [{"original_string": "protected JedisPool pool;", "modifier": "protected", "type": "JedisPool", "declarator": "pool", "var_name": "pool"}, {"original_string": "private static final String QUEUE_PREFIX = \"queue_\";", "modifier": "private static final", "type": "String", "declarator": "QUEUE_PREFIX = \"queue_\"", "var_name": "QUEUE_PREFIX"}, {"original_string": "private static final String SET_PREFIX = \"set_\";", "modifier": "private static final", "type": "String", "declarator": "SET_PREFIX = \"set_\"", "var_name": "SET_PREFIX"}, {"original_string": "private static final String ITEM_PREFIX = \"item_\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_PREFIX = \"item_\"", "var_name": "ITEM_PREFIX"}], "methods": [{"identifier": "RedisScheduler", "parameters": "(String host)", "modifiers": "public", "return": "", "signature": " RedisScheduler(String host)", "full_signature": "public  RedisScheduler(String host)", "class_method_signature": "RedisScheduler.RedisScheduler(String host)", "testcase": false, "constructor": true}, {"identifier": "RedisScheduler", "parameters": "(JedisPool pool)", "modifiers": "public", "return": "", "signature": " RedisScheduler(JedisPool pool)", "full_signature": "public  RedisScheduler(JedisPool pool)", "class_method_signature": "RedisScheduler.RedisScheduler(JedisPool pool)", "testcase": false, "constructor": true}, {"identifier": "resetDuplicateCheck", "parameters": "(Task task)", "modifiers": "@Override public", "return": "void", "signature": "void resetDuplicateCheck(Task task)", "full_signature": "@Override public void resetDuplicateCheck(Task task)", "class_method_signature": "RedisScheduler.resetDuplicateCheck(Task task)", "testcase": false, "constructor": false}, {"identifier": "isDuplicate", "parameters": "(Request request, Task task)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDuplicate(Request request, Task task)", "full_signature": "@Override public boolean isDuplicate(Request request, Task task)", "class_method_signature": "RedisScheduler.isDuplicate(Request request, Task task)", "testcase": false, "constructor": false}, {"identifier": "pushWhenNoDuplicate", "parameters": "(Request request, Task task)", "modifiers": "@Override protected", "return": "void", "signature": "void pushWhenNoDuplicate(Request request, Task task)", "full_signature": "@Override protected void pushWhenNoDuplicate(Request request, Task task)", "class_method_signature": "RedisScheduler.pushWhenNoDuplicate(Request request, Task task)", "testcase": false, "constructor": false}, {"identifier": "checkForAdditionalInfo", "parameters": "(Request request)", "modifiers": "private", "return": "boolean", "signature": "boolean checkForAdditionalInfo(Request request)", "full_signature": "private boolean checkForAdditionalInfo(Request request)", "class_method_signature": "RedisScheduler.checkForAdditionalInfo(Request request)", "testcase": false, "constructor": false}, {"identifier": "poll", "parameters": "(Task task)", "modifiers": "@Override public synchronized", "return": "Request", "signature": "Request poll(Task task)", "full_signature": "@Override public synchronized Request poll(Task task)", "class_method_signature": "RedisScheduler.poll(Task task)", "testcase": false, "constructor": false}, {"identifier": "getSetKey", "parameters": "(Task task)", "modifiers": "protected", "return": "String", "signature": "String getSetKey(Task task)", "full_signature": "protected String getSetKey(Task task)", "class_method_signature": "RedisScheduler.getSetKey(Task task)", "testcase": false, "constructor": false}, {"identifier": "getQueueKey", "parameters": "(Task task)", "modifiers": "protected", "return": "String", "signature": "String getQueueKey(Task task)", "full_signature": "protected String getQueueKey(Task task)", "class_method_signature": "RedisScheduler.getQueueKey(Task task)", "testcase": false, "constructor": false}, {"identifier": "getItemKey", "parameters": "(Task task)", "modifiers": "protected", "return": "String", "signature": "String getItemKey(Task task)", "full_signature": "protected String getItemKey(Task task)", "class_method_signature": "RedisScheduler.getItemKey(Task task)", "testcase": false, "constructor": false}, {"identifier": "getLeftRequestsCount", "parameters": "(Task task)", "modifiers": "@Override public", "return": "int", "signature": "int getLeftRequestsCount(Task task)", "full_signature": "@Override public int getLeftRequestsCount(Task task)", "class_method_signature": "RedisScheduler.getLeftRequestsCount(Task task)", "testcase": false, "constructor": false}, {"identifier": "getTotalRequestsCount", "parameters": "(Task task)", "modifiers": "@Override public", "return": "int", "signature": "int getTotalRequestsCount(Task task)", "full_signature": "@Override public int getTotalRequestsCount(Task task)", "class_method_signature": "RedisScheduler.getTotalRequestsCount(Task task)", "testcase": false, "constructor": false}], "file": "webmagic-extension/src/main/java/us/codecraft/webmagic/scheduler/RedisScheduler.java"}, "focal_method": {"identifier": "poll", "parameters": "(Task task)", "modifiers": "@Override public synchronized", "return": "Request", "body": "@Override\n    public synchronized Request poll(Task task) {\n        Jedis jedis = pool.getResource();\n        try {\n            String url = jedis.lpop(getQueueKey(task));\n            if (url == null) {\n                return null;\n            }\n            String key = ITEM_PREFIX + task.getUUID();\n            String field = DigestUtils.shaHex(url);\n            byte[] bytes = jedis.hget(key.getBytes(), field.getBytes());\n            if (bytes != null) {\n                Request o = JSON.parseObject(new String(bytes), Request.class);\n                return o;\n            }\n            Request request = new Request(url);\n            return request;\n        } finally {\n            pool.returnResource(jedis);\n        }\n    }", "signature": "Request poll(Task task)", "full_signature": "@Override public synchronized Request poll(Task task)", "class_method_signature": "RedisScheduler.poll(Task task)", "testcase": false, "constructor": false, "invocations": ["getResource", "lpop", "getQueueKey", "getUUID", "shaHex", "hget", "getBytes", "getBytes", "parseObject", "returnResource"]}, "repository": {"repo_id": 9623064, "url": "https://github.com/code4craft/webmagic", "language": "Java", "is_fork": false, "fork_count": 3804, "stargazer_count": 9136, "size": 17041, "license": "licensed"}}