{"test_class": {"identifier": "ServerGroupDaoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    ServerGroupDao serverGroupDao;", "modifier": "@Autowired", "type": "ServerGroupDao", "declarator": "serverGroupDao", "var_name": "serverGroupDao"}, {"original_string": "ServerGroup serverGroup;", "modifier": "", "type": "ServerGroup", "declarator": "serverGroup", "var_name": "serverGroup"}, {"original_string": "Paging<ServerGroup> paging;", "modifier": "", "type": "Paging<ServerGroup>", "declarator": "paging", "var_name": "paging"}, {"original_string": "private String serverGroupName = \"server_group_name_test\";", "modifier": "private", "type": "String", "declarator": "serverGroupName = \"server_group_name_test\"", "var_name": "serverGroupName"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/dao/ServerGroupDaoTest.java"}, "test_case": {"identifier": "serversNoGroup", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void serversNoGroup() throws Exception {\n        List<Server> list = serverGroupDao.serversNoGroup(3);\n        System.out.println(\"serversNoGroup :-------> \" + list);\n        Assert.assertTrue(list.size() > 0);\n    }", "signature": "void serversNoGroup()", "full_signature": "@Test public void serversNoGroup()", "class_method_signature": "ServerGroupDaoTest.serversNoGroup()", "testcase": true, "constructor": false, "invocations": ["serversNoGroup", "println", "assertTrue", "size"]}, "focal_class": {"identifier": "ServerGroupDao", "superclass": "extends BaseDao", "interfaces": "", "fields": [], "methods": [{"identifier": "insertServerGroup", "parameters": "(ServerGroup serverGroup)", "modifiers": "public", "return": "Long", "signature": "Long insertServerGroup(ServerGroup serverGroup)", "full_signature": "public Long insertServerGroup(ServerGroup serverGroup)", "class_method_signature": "ServerGroupDao.insertServerGroup(ServerGroup serverGroup)", "testcase": false, "constructor": false}, {"identifier": "getServerGroupById", "parameters": "(Long id)", "modifiers": "public", "return": "ServerGroup", "signature": "ServerGroup getServerGroupById(Long id)", "full_signature": "public ServerGroup getServerGroupById(Long id)", "class_method_signature": "ServerGroupDao.getServerGroupById(Long id)", "testcase": false, "constructor": false}, {"identifier": "getAllServerGroups", "parameters": "()", "modifiers": "public", "return": "List<ServerGroup>", "signature": "List<ServerGroup> getAllServerGroups()", "full_signature": "public List<ServerGroup> getAllServerGroups()", "class_method_signature": "ServerGroupDao.getAllServerGroups()", "testcase": false, "constructor": false}, {"identifier": "getCountByName", "parameters": "(String name)", "modifiers": "public", "return": "Long", "signature": "Long getCountByName(String name)", "full_signature": "public Long getCountByName(String name)", "class_method_signature": "ServerGroupDao.getCountByName(String name)", "testcase": false, "constructor": false}, {"identifier": "getCountByIdAndName", "parameters": "(Long id, String name)", "modifiers": "public", "return": "Long", "signature": "Long getCountByIdAndName(Long id, String name)", "full_signature": "public Long getCountByIdAndName(Long id, String name)", "class_method_signature": "ServerGroupDao.getCountByIdAndName(Long id, String name)", "testcase": false, "constructor": false}, {"identifier": "updateServerGroup", "parameters": "(ServerGroup serverGroup)", "modifiers": "public", "return": "int", "signature": "int updateServerGroup(ServerGroup serverGroup)", "full_signature": "public int updateServerGroup(ServerGroup serverGroup)", "class_method_signature": "ServerGroupDao.updateServerGroup(ServerGroup serverGroup)", "testcase": false, "constructor": false}, {"identifier": "deleteServerGroup", "parameters": "(ServerGroup serverGroup)", "modifiers": "public", "return": "int", "signature": "int deleteServerGroup(ServerGroup serverGroup)", "full_signature": "public int deleteServerGroup(ServerGroup serverGroup)", "class_method_signature": "ServerGroupDao.deleteServerGroup(ServerGroup serverGroup)", "testcase": false, "constructor": false}, {"identifier": "deleteServerGroupAndServerAndServerConfigByServerGroupId", "parameters": "(Long serverGroupId)", "modifiers": "public", "return": "int", "signature": "int deleteServerGroupAndServerAndServerConfigByServerGroupId(Long serverGroupId)", "full_signature": "public int deleteServerGroupAndServerAndServerConfigByServerGroupId(Long serverGroupId)", "class_method_signature": "ServerGroupDao.deleteServerGroupAndServerAndServerConfigByServerGroupId(Long serverGroupId)", "testcase": false, "constructor": false}, {"identifier": "serversNoGroup", "parameters": "(Integer appGroupId)", "modifiers": "public", "return": "List<Server>", "signature": "List<Server> serversNoGroup(Integer appGroupId)", "full_signature": "public List<Server> serversNoGroup(Integer appGroupId)", "class_method_signature": "ServerGroupDao.serversNoGroup(Integer appGroupId)", "testcase": false, "constructor": false}, {"identifier": "getServerGroupTotalCount", "parameters": "(Paging<ServerGroup> paging)", "modifiers": "public", "return": "Long", "signature": "Long getServerGroupTotalCount(Paging<ServerGroup> paging)", "full_signature": "public Long getServerGroupTotalCount(Paging<ServerGroup> paging)", "class_method_signature": "ServerGroupDao.getServerGroupTotalCount(Paging<ServerGroup> paging)", "testcase": false, "constructor": false}, {"identifier": "findServerGroupPageList", "parameters": "(Paging<ServerGroup> paging)", "modifiers": "public", "return": "List<ServerGroupView>", "signature": "List<ServerGroupView> findServerGroupPageList(Paging<ServerGroup> paging)", "full_signature": "public List<ServerGroupView> findServerGroupPageList(Paging<ServerGroup> paging)", "class_method_signature": "ServerGroupDao.findServerGroupPageList(Paging<ServerGroup> paging)", "testcase": false, "constructor": false}, {"identifier": "appenWhere", "parameters": "(Paging<ServerGroup> paging)", "modifiers": "private", "return": "String", "signature": "String appenWhere(Paging<ServerGroup> paging)", "full_signature": "private String appenWhere(Paging<ServerGroup> paging)", "class_method_signature": "ServerGroupDao.appenWhere(Paging<ServerGroup> paging)", "testcase": false, "constructor": false}, {"identifier": "appenCondition", "parameters": "(Paging<ServerGroup> paging)", "modifiers": "private", "return": "String", "signature": "String appenCondition(Paging<ServerGroup> paging)", "full_signature": "private String appenCondition(Paging<ServerGroup> paging)", "class_method_signature": "ServerGroupDao.appenCondition(Paging<ServerGroup> paging)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/dao/ServerGroupDao.java"}, "focal_method": {"identifier": "serversNoGroup", "parameters": "(Integer appGroupId)", "modifiers": "public", "return": "List<Server>", "body": "public List<Server> serversNoGroup(Integer appGroupId) throws SQLException {\n        String cond = StringUtils.EMPTY;\n        if (null != appGroupId && appGroupId > 0) {\n            cond = \" and id != \" + appGroupId;\n        }\n        String sql = \"select id, name, comment, insert_time, update_time from server_group where id not in (select server_group_id from app_group where server_group_id != 0 \" + cond + \")\";\n        return this.queryBySql(sql, Server.class);\n    }", "signature": "List<Server> serversNoGroup(Integer appGroupId)", "full_signature": "public List<Server> serversNoGroup(Integer appGroupId)", "class_method_signature": "ServerGroupDao.serversNoGroup(Integer appGroupId)", "testcase": false, "constructor": false, "invocations": ["queryBySql"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}