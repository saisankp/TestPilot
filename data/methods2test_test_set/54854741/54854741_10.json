{"test_class": {"identifier": "ConstantsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Parameters parameters = mock(Parameters.class);", "modifier": "private final", "type": "Parameters", "declarator": "parameters = mock(Parameters.class)", "var_name": "parameters"}, {"original_string": "private List<String> unnamed;", "modifier": "private", "type": "List<String>", "declarator": "unnamed", "var_name": "unnamed"}], "file": "services/src/test/java/com/greensopinion/finance/services/application/ConstantsTest.java"}, "test_case": {"identifier": "webViewLocationWithParameter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void webViewLocationWithParameter() {\n\t\tunnamed.add(\"-XexternalUI\");\n\t\tassertEquals(\"http://localhost:9000\", Constants.webViewLocation(parameters));\n\t}", "signature": "void webViewLocationWithParameter()", "full_signature": "@Test public void webViewLocationWithParameter()", "class_method_signature": "ConstantsTest.webViewLocationWithParameter()", "testcase": true, "constructor": false, "invocations": ["add", "assertEquals", "webViewLocation"]}, "focal_class": {"identifier": "Constants", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int DEFAULT_HEIGHT = 1024;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_HEIGHT = 1024", "var_name": "DEFAULT_HEIGHT"}, {"original_string": "public static final int DEFAULT_WIDTH = 1024;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_WIDTH = 1024", "var_name": "DEFAULT_WIDTH"}, {"original_string": "public static final Color DEFAULT_FILL_COLOUR = Color.web(\"#666970\");", "modifier": "public static final", "type": "Color", "declarator": "DEFAULT_FILL_COLOUR = Color.web(\"#666970\")", "var_name": "DEFAULT_FILL_COLOUR"}, {"original_string": "public static final Object PARAM_EXTERNAL_UI = \"-XexternalUI\";", "modifier": "public static final", "type": "Object", "declarator": "PARAM_EXTERNAL_UI = \"-XexternalUI\"", "var_name": "PARAM_EXTERNAL_UI"}], "methods": [{"identifier": "isExternalUi", "parameters": "(Parameters parameters)", "modifiers": "public static", "return": "boolean", "signature": "boolean isExternalUi(Parameters parameters)", "full_signature": "public static boolean isExternalUi(Parameters parameters)", "class_method_signature": "Constants.isExternalUi(Parameters parameters)", "testcase": false, "constructor": false}, {"identifier": "webViewLocation", "parameters": "(Parameters parameters)", "modifiers": "public static", "return": "String", "signature": "String webViewLocation(Parameters parameters)", "full_signature": "public static String webViewLocation(Parameters parameters)", "class_method_signature": "Constants.webViewLocation(Parameters parameters)", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/greensopinion/finance/services/application/Constants.java"}, "focal_method": {"identifier": "webViewLocation", "parameters": "(Parameters parameters)", "modifiers": "public static", "return": "String", "body": "public static String webViewLocation(Parameters parameters) {\n\t\tif (isExternalUi(parameters)) {\n\t\t\treturn \"http://localhost:9000\";\n\t\t}\n\t\tURL selfUri = checkNotNull(Constants.class.getResource(Constants.class.getSimpleName() + \".class\"));\n\t\tString protocol = selfUri.getProtocol();\n\t\tif (\"file\".equals(protocol)) {\n\t\t\tString path = selfUri.getPath();\n\t\t\tcheckState(path.contains(\"target/classes\"));\n\t\t\tString rootPath = path.substring(0, path.indexOf(\"target/classes\"));\n\n\t\t\tFile file = new File(rootPath);\n\n\t\t\tString localPath = file.getParentFile().getPath() + \"/ui/dist/index.html\";\n\t\t\treturn \"file://\" + localPath;\n\t\t} else if (\"jar\".equals(protocol)) {\n\t\t\tString path = selfUri.getPath();\n\t\t\tMatcher matcher = Pattern.compile(\"(.*?/)([^/]+\\\\.jar!).*\").matcher(path);\n\t\t\tcheckState(matcher.matches(), \"%s\", path);\n\n\t\t\tString prefix = matcher.group(1);\n\t\t\treturn prefix + \"web-assets/index.html\";\n\t\t} else {\n\t\t\tthrow new IllegalStateException(selfUri.toString());\n\t\t}\n\t}", "signature": "String webViewLocation(Parameters parameters)", "full_signature": "public static String webViewLocation(Parameters parameters)", "class_method_signature": "Constants.webViewLocation(Parameters parameters)", "testcase": false, "constructor": false, "invocations": ["isExternalUi", "checkNotNull", "getResource", "getSimpleName", "getProtocol", "equals", "getPath", "checkState", "contains", "substring", "indexOf", "getPath", "getParentFile", "equals", "getPath", "matcher", "compile", "checkState", "matches", "group", "toString"]}, "repository": {"repo_id": 54854741, "url": "https://github.com/greensopinion/greenbeans", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 30, "size": 1684, "license": "licensed"}}