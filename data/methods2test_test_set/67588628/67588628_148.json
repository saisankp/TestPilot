{"test_class": {"identifier": "DefaultGraphTemplateProducerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Inject\n    private GraphTemplateProducer producer;", "modifier": "@Inject\n    private", "type": "GraphTemplateProducer", "declarator": "producer", "var_name": "producer"}], "file": "artemis-graph/src/test/java/org/jnosql/artemis/graph/DefaultGraphTemplateProducerTest.java"}, "test_case": {"identifier": "shouldReturnGraphTemplateWhenGetGraph", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnGraphTemplateWhenGetGraph() {\n        Graph graph = Mockito.mock(Graph.class);\n        GraphTemplate template = producer.get(graph);\n        assertNotNull(template);\n    }", "signature": "void shouldReturnGraphTemplateWhenGetGraph()", "full_signature": "@Test public void shouldReturnGraphTemplateWhenGetGraph()", "class_method_signature": "DefaultGraphTemplateProducerTest.shouldReturnGraphTemplateWhenGetGraph()", "testcase": true, "constructor": false, "invocations": ["mock", "get", "assertNotNull"]}, "focal_class": {"identifier": "DefaultGraphTemplateProducer", "superclass": "", "interfaces": "implements GraphTemplateProducer", "fields": [{"original_string": "@Inject\n    private ClassMappings classMappings;", "modifier": "@Inject\n    private", "type": "ClassMappings", "declarator": "classMappings", "var_name": "classMappings"}, {"original_string": "@Inject\n    private Converters converters;", "modifier": "@Inject\n    private", "type": "Converters", "declarator": "converters", "var_name": "converters"}, {"original_string": "@Inject\n    private GraphEventPersistManager persistManager;", "modifier": "@Inject\n    private", "type": "GraphEventPersistManager", "declarator": "persistManager", "var_name": "persistManager"}], "methods": [{"identifier": "get", "parameters": "(Graph graph)", "modifiers": "@Override public", "return": "GraphTemplate", "signature": "GraphTemplate get(Graph graph)", "full_signature": "@Override public GraphTemplate get(Graph graph)", "class_method_signature": "DefaultGraphTemplateProducer.get(Graph graph)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(GraphTraversalSourceSupplier supplier)", "modifiers": "@Override public", "return": "GraphTemplate", "signature": "GraphTemplate get(GraphTraversalSourceSupplier supplier)", "full_signature": "@Override public GraphTemplate get(GraphTraversalSourceSupplier supplier)", "class_method_signature": "DefaultGraphTemplateProducer.get(GraphTraversalSourceSupplier supplier)", "testcase": false, "constructor": false}], "file": "artemis-graph/src/main/java/org/jnosql/artemis/graph/DefaultGraphTemplateProducer.java"}, "focal_method": {"identifier": "get", "parameters": "(Graph graph)", "modifiers": "@Override public", "return": "GraphTemplate", "body": "@Override\n    public GraphTemplate get(Graph graph) {\n        requireNonNull(graph, \"graph is required\");\n\n        SingleInstance<Graph> instance = new SingleInstance<>(graph);\n\n        GraphConverter converter = new DefaultGraphConverter(classMappings,\n                converters,\n                instance);\n        GraphWorkflow workflow = new DefaultGraphWorkflow(persistManager, converter);\n        return new DefaultGraphTemplate(instance, classMappings, converter, workflow);\n    }", "signature": "GraphTemplate get(Graph graph)", "full_signature": "@Override public GraphTemplate get(Graph graph)", "class_method_signature": "DefaultGraphTemplateProducer.get(Graph graph)", "testcase": false, "constructor": false, "invocations": ["requireNonNull"]}, "repository": {"repo_id": 67588628, "url": "https://github.com/eclipse/jnosql-artemis", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 43, "size": 2612, "license": "licensed"}}