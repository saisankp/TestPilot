{"test_class": {"identifier": "OadrHttpClient20bTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String CERT_FOLDER_PATH = \"src/test/resources/cert/\";", "modifier": "public static final", "type": "String", "declarator": "CERT_FOLDER_PATH = \"src/test/resources/cert/\"", "var_name": "CERT_FOLDER_PATH"}, {"original_string": "public static final String XSD_OADR20B_SCHEMA = \"src/test/resources/oadr20b_schema\";", "modifier": "public static final", "type": "String", "declarator": "XSD_OADR20B_SCHEMA = \"src/test/resources/oadr20b_schema\"", "var_name": "XSD_OADR20B_SCHEMA"}, {"original_string": "private Oadr20bJAXBContext jaxbContext;", "modifier": "private", "type": "Oadr20bJAXBContext", "declarator": "jaxbContext", "var_name": "jaxbContext"}], "file": "OpenADRHTTPClient20b/src/test/java/com/avob/openadr/client/http/oadr20b/OadrHttpClient20bTest.java"}, "test_case": {"identifier": "givenHttpError_RaiseException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void givenHttpError_RaiseException() throws ClientProtocolException, IOException, JAXBException,\n\t\t\tOadr20bException, Oadr20bMarshalException, URISyntaxException, Oadr20bHttpLayerException,\n\t\t\tOadr20bXMLSignatureException, Oadr20bXMLSignatureValidationException, OadrSecurityException {\n\n\t\t// HTTP layer error\n\t\tOadrHttpClient oadrHttpClient = Mockito.mock(OadrHttpClient.class);\n\n\t\tHttpResponse response = this.createHttpResponse(HttpStatus.SC_FORBIDDEN, \"\");\n\t\twhen(oadrHttpClient.execute(Matchers.<HttpPost>anyObject(), any(), any(), any())).thenReturn(response);\n\n\t\tOadrHttpClient20b client = new OadrHttpClient20b(oadrHttpClient);\n\n\t\tOadrDistributeEventType mockDistributeEvent = this.createOadrDistributeEvent();\n\n\t\tboolean exception = false;\n\t\ttry {\n\t\t\tclient.post(Oadr20bFactory.createOadrDistributeEvent(mockDistributeEvent),\n\t\t\t\t\tOadr20bUrlPath.OADR_BASE_PATH + Oadr20bUrlPath.EI_EVENT_SERVICE, OadrResponseType.class);\n\t\t} catch (Oadr20bHttpLayerException e) {\n\t\t\texception = true;\n\t\t}\n\t\tassertTrue(exception);\n\n\t}", "signature": "void givenHttpError_RaiseException()", "full_signature": "@Test public void givenHttpError_RaiseException()", "class_method_signature": "OadrHttpClient20bTest.givenHttpError_RaiseException()", "testcase": true, "constructor": false, "invocations": ["mock", "createHttpResponse", "thenReturn", "when", "execute", "anyObject", "any", "any", "any", "createOadrDistributeEvent", "post", "createOadrDistributeEvent", "assertTrue"]}, "focal_class": {"identifier": "OadrHttpClient20b", "superclass": "", "interfaces": "", "fields": [{"original_string": "private OadrHttpClient client;", "modifier": "private", "type": "OadrHttpClient", "declarator": "client", "var_name": "client"}, {"original_string": "private Long replayProtectAcceptedDelaySecond;", "modifier": "private", "type": "Long", "declarator": "replayProtectAcceptedDelaySecond", "var_name": "replayProtectAcceptedDelaySecond"}, {"original_string": "private PrivateKey privateKey;", "modifier": "private", "type": "PrivateKey", "declarator": "privateKey", "var_name": "privateKey"}, {"original_string": "private X509Certificate clientCertificate;", "modifier": "private", "type": "X509Certificate", "declarator": "clientCertificate", "var_name": "clientCertificate"}, {"original_string": "private Oadr20bJAXBContext jaxbContext;", "modifier": "private", "type": "Oadr20bJAXBContext", "declarator": "jaxbContext", "var_name": "jaxbContext"}, {"original_string": "private boolean validateXmlPayload = false;", "modifier": "private", "type": "boolean", "declarator": "validateXmlPayload = false", "var_name": "validateXmlPayload"}], "methods": [{"identifier": "OadrHttpClient20b", "parameters": "(OadrHttpClient client)", "modifiers": "public", "return": "", "signature": " OadrHttpClient20b(OadrHttpClient client)", "full_signature": "public  OadrHttpClient20b(OadrHttpClient client)", "class_method_signature": "OadrHttpClient20b.OadrHttpClient20b(OadrHttpClient client)", "testcase": false, "constructor": true}, {"identifier": "OadrHttpClient20b", "parameters": "(OadrHttpClient client, String privateKeyPath, String clientCertificatePath,\n\t\t\tLong replayProtectAcceptedDelaySecond)", "modifiers": "public", "return": "", "signature": " OadrHttpClient20b(OadrHttpClient client, String privateKeyPath, String clientCertificatePath,\n\t\t\tLong replayProtectAcceptedDelaySecond)", "full_signature": "public  OadrHttpClient20b(OadrHttpClient client, String privateKeyPath, String clientCertificatePath,\n\t\t\tLong replayProtectAcceptedDelaySecond)", "class_method_signature": "OadrHttpClient20b.OadrHttpClient20b(OadrHttpClient client, String privateKeyPath, String clientCertificatePath,\n\t\t\tLong replayProtectAcceptedDelaySecond)", "testcase": false, "constructor": true}, {"identifier": "OadrHttpClient20b", "parameters": "(OadrHttpClient client, String privateKeyPath, String clientCertificatePath,\n\t\t\tLong replayProtectAcceptedDelaySecond, Boolean validateXmlPayload)", "modifiers": "public", "return": "", "signature": " OadrHttpClient20b(OadrHttpClient client, String privateKeyPath, String clientCertificatePath,\n\t\t\tLong replayProtectAcceptedDelaySecond, Boolean validateXmlPayload)", "full_signature": "public  OadrHttpClient20b(OadrHttpClient client, String privateKeyPath, String clientCertificatePath,\n\t\t\tLong replayProtectAcceptedDelaySecond, Boolean validateXmlPayload)", "class_method_signature": "OadrHttpClient20b.OadrHttpClient20b(OadrHttpClient client, String privateKeyPath, String clientCertificatePath,\n\t\t\tLong replayProtectAcceptedDelaySecond, Boolean validateXmlPayload)", "testcase": false, "constructor": true}, {"identifier": "isXmlSignatureEnabled", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isXmlSignatureEnabled()", "full_signature": "private boolean isXmlSignatureEnabled()", "class_method_signature": "OadrHttpClient20b.isXmlSignatureEnabled()", "testcase": false, "constructor": false}, {"identifier": "post", "parameters": "(I payload, String path, Class<T> responseKlass)", "modifiers": "public", "return": "T", "signature": "T post(I payload, String path, Class<T> responseKlass)", "full_signature": "public T post(I payload, String path, Class<T> responseKlass)", "class_method_signature": "OadrHttpClient20b.post(I payload, String path, Class<T> responseKlass)", "testcase": false, "constructor": false}, {"identifier": "post", "parameters": "(String host, String path, HttpClientContext context, I payload,\n\t\t\tClass<O> responseKlass)", "modifiers": "public", "return": "O", "signature": "O post(String host, String path, HttpClientContext context, I payload,\n\t\t\tClass<O> responseKlass)", "full_signature": "public O post(String host, String path, HttpClientContext context, I payload,\n\t\t\tClass<O> responseKlass)", "class_method_signature": "OadrHttpClient20b.post(String host, String path, HttpClientContext context, I payload,\n\t\t\tClass<O> responseKlass)", "testcase": false, "constructor": false}, {"identifier": "sign", "parameters": "(Object object)", "modifiers": "private", "return": "String", "signature": "String sign(Object object)", "full_signature": "private String sign(Object object)", "class_method_signature": "OadrHttpClient20b.sign(Object object)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(String raw, OadrPayload payload)", "modifiers": "private", "return": "void", "signature": "void validate(String raw, OadrPayload payload)", "full_signature": "private void validate(String raw, OadrPayload payload)", "class_method_signature": "OadrHttpClient20b.validate(String raw, OadrPayload payload)", "testcase": false, "constructor": false}], "file": "OpenADRHTTPClient20b/src/main/java/com/avob/openadr/client/http/oadr20b/OadrHttpClient20b.java"}, "focal_method": {"identifier": "post", "parameters": "(I payload, String path, Class<T> responseKlass)", "modifiers": "public", "return": "T", "body": "public <T, I extends JAXBElement<?>> T post(I payload, String path, Class<T> responseKlass) throws Oadr20bException,\n\t\t\tOadr20bHttpLayerException, Oadr20bXMLSignatureException, Oadr20bXMLSignatureValidationException {\n\t\treturn this.post(null, path, null, payload, responseKlass);\n\t}", "signature": "T post(I payload, String path, Class<T> responseKlass)", "full_signature": "public T post(I payload, String path, Class<T> responseKlass)", "class_method_signature": "OadrHttpClient20b.post(I payload, String path, Class<T> responseKlass)", "testcase": false, "constructor": false, "invocations": ["post"]}, "repository": {"repo_id": 169761438, "url": "https://github.com/avob/OpenADR", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 55915, "license": "licensed"}}