{"test_class": {"identifier": "EmailerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Emailer systemEmailer;", "modifier": "private", "type": "Emailer", "declarator": "systemEmailer", "var_name": "systemEmailer"}, {"original_string": "private ContactList recipients;", "modifier": "private", "type": "ContactList", "declarator": "recipients", "var_name": "recipients"}, {"original_string": "private ArrayList<ContactList> recipientsContactLists;", "modifier": "private", "type": "ArrayList<ContactList>", "declarator": "recipientsContactLists", "var_name": "recipientsContactLists"}, {"original_string": "private List<File> emptyAttachmentsMocked;", "modifier": "private", "type": "List<File>", "declarator": "emptyAttachmentsMocked", "var_name": "emptyAttachmentsMocked"}, {"original_string": "private List<File> fourAttachmentsMocked;", "modifier": "private", "type": "List<File>", "declarator": "fourAttachmentsMocked", "var_name": "fourAttachmentsMocked"}, {"original_string": "private MailTemplate mailTemplateMockForSystemMailer;", "modifier": "private", "type": "MailTemplate", "declarator": "mailTemplateMockForSystemMailer", "var_name": "mailTemplateMockForSystemMailer"}, {"original_string": "private MailPackageStaticDependenciesWrapper webappAndMailhelperMockSystemMailer;", "modifier": "private", "type": "MailPackageStaticDependenciesWrapper", "declarator": "webappAndMailhelperMockSystemMailer", "var_name": "webappAndMailhelperMockSystemMailer"}, {"original_string": "private ArgumentCaptor<InternetAddress> fromCaptor;", "modifier": "private", "type": "ArgumentCaptor<InternetAddress>", "declarator": "fromCaptor", "var_name": "fromCaptor"}, {"original_string": "private ArgumentCaptor<String> bodyCaptor;", "modifier": "private", "type": "ArgumentCaptor<String>", "declarator": "bodyCaptor", "var_name": "bodyCaptor"}, {"original_string": "private ArgumentCaptor<String> subjectCaptor;", "modifier": "private", "type": "ArgumentCaptor<String>", "declarator": "subjectCaptor", "var_name": "subjectCaptor"}, {"original_string": "private ArgumentCaptor<MailerResult> resultCaptor;", "modifier": "private", "type": "ArgumentCaptor<MailerResult>", "declarator": "resultCaptor", "var_name": "resultCaptor"}, {"original_string": "private ArgumentCaptor<File[]> attachmentsCaptor;", "modifier": "private", "type": "ArgumentCaptor<File[]>", "declarator": "attachmentsCaptor", "var_name": "attachmentsCaptor"}, {"original_string": "private ArgumentCaptor<List<ContactList>> contactListCaptor;", "modifier": "private", "type": "ArgumentCaptor<List<ContactList>>", "declarator": "contactListCaptor", "var_name": "contactListCaptor"}, {"original_string": "private final int SIZE = 4;", "modifier": "private final", "type": "int", "declarator": "SIZE = 4", "var_name": "SIZE"}, {"original_string": "private Emailer peterBichselEmailer;", "modifier": "private", "type": "Emailer", "declarator": "peterBichselEmailer", "var_name": "peterBichselEmailer"}, {"original_string": "private MailTemplate mailTemplateMockForPrincipalMailer;", "modifier": "private", "type": "MailTemplate", "declarator": "mailTemplateMockForPrincipalMailer", "var_name": "mailTemplateMockForPrincipalMailer"}, {"original_string": "private MailPackageStaticDependenciesWrapper webappAndMailhelperMockPrincipalMailer;", "modifier": "private", "type": "MailPackageStaticDependenciesWrapper", "declarator": "webappAndMailhelperMockPrincipalMailer", "var_name": "webappAndMailhelperMockPrincipalMailer"}], "file": "OLAT-LMS/src/test/java/org/olat/system/mail/EmailerTest.java"}, "test_case": {"identifier": "testShouldNotFailWithEmptyContactList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testShouldNotFailWithEmptyContactList() throws AddressException, MessagingException{\n\t\t//Setup\n\t\t//Exercise\n\t\tsystemEmailer.sendEmail(new ArrayList<ContactList>(), ObjectMother.AN_EXAMPLE_SUBJECT, ObjectMother.HELLOY_KITTY_THIS_IS_AN_EXAMPLE_BODY);\n\t\t//Verify\n\t\tverify(webappAndMailhelperMockSystemMailer, times(1)).send(any(MimeMessage.class), any(MailerResult.class));\n\t}", "signature": "void testShouldNotFailWithEmptyContactList()", "full_signature": "@Test public void testShouldNotFailWithEmptyContactList()", "class_method_signature": "EmailerTest.testShouldNotFailWithEmptyContactList()", "testcase": true, "constructor": false, "invocations": ["sendEmail", "send", "verify", "times", "any", "any"]}, "focal_class": {"identifier": "Emailer", "superclass": "", "interfaces": "", "fields": [{"original_string": "String mailfrom;", "modifier": "", "type": "String", "declarator": "mailfrom", "var_name": "mailfrom"}, {"original_string": "String footer;", "modifier": "", "type": "String", "declarator": "footer", "var_name": "footer"}, {"original_string": "private MailPackageStaticDependenciesWrapper webappAndMailHelper = null;", "modifier": "private", "type": "MailPackageStaticDependenciesWrapper", "declarator": "webappAndMailHelper = null", "var_name": "webappAndMailHelper"}], "methods": [{"identifier": "Emailer", "parameters": "(MailTemplate mailTemplate)", "modifiers": "public", "return": "", "signature": " Emailer(MailTemplate mailTemplate)", "full_signature": "public  Emailer(MailTemplate mailTemplate)", "class_method_signature": "Emailer.Emailer(MailTemplate mailTemplate)", "testcase": false, "constructor": true}, {"identifier": "Emailer", "parameters": "(MailTemplate mailTemplate, MailPackageStaticDependenciesWrapper facadeToWebappAndMailhelper)", "modifiers": "", "return": "", "signature": " Emailer(MailTemplate mailTemplate, MailPackageStaticDependenciesWrapper facadeToWebappAndMailhelper)", "full_signature": "  Emailer(MailTemplate mailTemplate, MailPackageStaticDependenciesWrapper facadeToWebappAndMailhelper)", "class_method_signature": "Emailer.Emailer(MailTemplate mailTemplate, MailPackageStaticDependenciesWrapper facadeToWebappAndMailhelper)", "testcase": false, "constructor": true}, {"identifier": "Emailer", "parameters": "(OLATPrincipal senderPrincipal, boolean tryInstitutionalEmail, MailTemplate mailTemplate)", "modifiers": "public", "return": "", "signature": " Emailer(OLATPrincipal senderPrincipal, boolean tryInstitutionalEmail, MailTemplate mailTemplate)", "full_signature": "public  Emailer(OLATPrincipal senderPrincipal, boolean tryInstitutionalEmail, MailTemplate mailTemplate)", "class_method_signature": "Emailer.Emailer(OLATPrincipal senderPrincipal, boolean tryInstitutionalEmail, MailTemplate mailTemplate)", "testcase": false, "constructor": true}, {"identifier": "Emailer", "parameters": "(OLATPrincipal senderPrincipal, boolean tryInstitutionalEmail, MailTemplate mailTemplate, MailPackageStaticDependenciesWrapper facadeToWebappAndMailhelper)", "modifiers": "", "return": "", "signature": " Emailer(OLATPrincipal senderPrincipal, boolean tryInstitutionalEmail, MailTemplate mailTemplate, MailPackageStaticDependenciesWrapper facadeToWebappAndMailhelper)", "full_signature": "  Emailer(OLATPrincipal senderPrincipal, boolean tryInstitutionalEmail, MailTemplate mailTemplate, MailPackageStaticDependenciesWrapper facadeToWebappAndMailhelper)", "class_method_signature": "Emailer.Emailer(OLATPrincipal senderPrincipal, boolean tryInstitutionalEmail, MailTemplate mailTemplate, MailPackageStaticDependenciesWrapper facadeToWebappAndMailhelper)", "testcase": false, "constructor": true}, {"identifier": "sendEmail", "parameters": "(List<ContactList> listOfContactLists, String subject, String body)", "modifiers": "public", "return": "boolean", "signature": "boolean sendEmail(List<ContactList> listOfContactLists, String subject, String body)", "full_signature": "public boolean sendEmail(List<ContactList> listOfContactLists, String subject, String body)", "class_method_signature": "Emailer.sendEmail(List<ContactList> listOfContactLists, String subject, String body)", "testcase": false, "constructor": false}, {"identifier": "sendEmail", "parameters": "(List<ContactList> listOfContactLists, String subject, String body, List<File> attachments)", "modifiers": "public", "return": "boolean", "signature": "boolean sendEmail(List<ContactList> listOfContactLists, String subject, String body, List<File> attachments)", "full_signature": "public boolean sendEmail(List<ContactList> listOfContactLists, String subject, String body, List<File> attachments)", "class_method_signature": "Emailer.sendEmail(List<ContactList> listOfContactLists, String subject, String body, List<File> attachments)", "testcase": false, "constructor": false}, {"identifier": "attachmentListToArry", "parameters": "(List<File> attachments)", "modifiers": "private", "return": "File[]", "signature": "File[] attachmentListToArry(List<File> attachments)", "full_signature": "private File[] attachmentListToArry(List<File> attachments)", "class_method_signature": "Emailer.attachmentListToArry(List<File> attachments)", "testcase": false, "constructor": false}, {"identifier": "sendEmailCC", "parameters": "(String cc, String subject, String body, List<File> attachments)", "modifiers": "public", "return": "boolean", "signature": "boolean sendEmailCC(String cc, String subject, String body, List<File> attachments)", "full_signature": "public boolean sendEmailCC(String cc, String subject, String body, List<File> attachments)", "class_method_signature": "Emailer.sendEmailCC(String cc, String subject, String body, List<File> attachments)", "testcase": false, "constructor": false}, {"identifier": "sendEmail", "parameters": "(String mailto, String subject, String body)", "modifiers": "public", "return": "boolean", "signature": "boolean sendEmail(String mailto, String subject, String body)", "full_signature": "public boolean sendEmail(String mailto, String subject, String body)", "class_method_signature": "Emailer.sendEmail(String mailto, String subject, String body)", "testcase": false, "constructor": false}, {"identifier": "sendEmail", "parameters": "(String from, String mailto, String subject, String body)", "modifiers": "private", "return": "boolean", "signature": "boolean sendEmail(String from, String mailto, String subject, String body)", "full_signature": "private boolean sendEmail(String from, String mailto, String subject, String body)", "class_method_signature": "Emailer.sendEmail(String from, String mailto, String subject, String body)", "testcase": false, "constructor": false}], "file": "OLAT-LMS/src/main/java/org/olat/system/mail/Emailer.java"}, "focal_method": {"identifier": "sendEmail", "parameters": "(List<ContactList> listOfContactLists, String subject, String body)", "modifiers": "public", "return": "boolean", "body": "public boolean sendEmail(List<ContactList> listOfContactLists, String subject, String body) throws AddressException, MessagingException {\n        return sendEmail(listOfContactLists, subject, body, null);\n    }", "signature": "boolean sendEmail(List<ContactList> listOfContactLists, String subject, String body)", "full_signature": "public boolean sendEmail(List<ContactList> listOfContactLists, String subject, String body)", "class_method_signature": "Emailer.sendEmail(List<ContactList> listOfContactLists, String subject, String body)", "testcase": false, "constructor": false, "invocations": ["sendEmail"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}