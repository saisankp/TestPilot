{"test_class": {"identifier": "ChrTest", "superclass": "", "interfaces": "", "fields": [], "file": "reflekt/src/test/java/io/advantageous/boon/primitive/ChrTest.java"}, "test_case": {"identifier": "testByteCopyIntoCharArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testByteCopyIntoCharArray() {\n\n        char[] charArray = new char[ 1000 ];\n        byte[] bytes = Byt.bytes(\"0123456789000\");\n\n        Chr._idx(charArray, 0, bytes);\n\n        boolean ok = true;\n\n        char ch = charArray[ 0 ];\n        ok |= ch == '0' || die( \" not '0'\" );\n\n        ch = charArray[ 9 ];\n        ok |= ch == '9' || die( \" not '9'\" + ch );\n\n\n        Chr._idx( charArray, 100, bytes, 0, 3 );\n\n        ch = charArray[ 100 ];\n        ok |= ch == '0' || die( \" not '0' \" + ch );\n\n\n        ch = charArray[ 101 ];\n        ok |= ch == '1' || die( \" not '1' \" + ch );\n\n\n        ch = charArray[ 102 ];\n        ok |= ch == '2' || die( \" not '2' \" + ch );\n\n\n        Chr._idx( charArray, 200, bytes, 3, 6 );\n\n        ch = charArray[ 200 ];\n        ok |= ch == '3' || die( \" not '3' \" + ch );\n\n\n        ch = charArray[ 201 ];\n        ok |= ch == '4' || die( \" not '4' \" + ch );\n\n\n        ch = charArray[ 202 ];\n        ok |= ch == '5' || die( \" not '5' \" + ch );\n\n\n    }", "signature": "void testByteCopyIntoCharArray()", "full_signature": "@Test public void testByteCopyIntoCharArray()", "class_method_signature": "ChrTest.testByteCopyIntoCharArray()", "testcase": true, "constructor": false, "invocations": ["bytes", "_idx", "die", "die", "_idx", "die", "die", "die", "_idx", "die", "die", "die"]}, "focal_class": {"identifier": "Chr", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final char[] DEFAULT_SPLIT = { ' ', '\\t', ',', ':', ';' };", "modifier": "public static final", "type": "char[]", "declarator": "DEFAULT_SPLIT = { ' ', '\\t', ',', ':', ';' }", "var_name": "DEFAULT_SPLIT"}, {"original_string": "public static final char[] NEWLINE_CHARS = { '\\n', '\\r' };", "modifier": "public static final", "type": "char[]", "declarator": "NEWLINE_CHARS = { '\\n', '\\r' }", "var_name": "NEWLINE_CHARS"}, {"original_string": "private static final char[] EMPTY_CHARS = new char[0];", "modifier": "private static final", "type": "char[]", "declarator": "EMPTY_CHARS = new char[0]", "var_name": "EMPTY_CHARS"}], "methods": [{"identifier": "arrayOfChar", "parameters": "( final int size )", "modifiers": "public static", "return": "char[]", "signature": "char[] arrayOfChar( final int size )", "full_signature": "public static char[] arrayOfChar( final int size )", "class_method_signature": "Chr.arrayOfChar( final int size )", "testcase": false, "constructor": false}, {"identifier": "array", "parameters": "( final char... array )", "modifiers": "public static", "return": "char[]", "signature": "char[] array( final char... array )", "full_signature": "public static char[] array( final char... array )", "class_method_signature": "Chr.array( final char... array )", "testcase": false, "constructor": false}, {"identifier": "chars", "parameters": "( final String array )", "modifiers": "public static", "return": "char[]", "signature": "char[] chars( final String array )", "full_signature": "public static char[] chars( final String array )", "class_method_signature": "Chr.chars( final String array )", "testcase": false, "constructor": false}, {"identifier": "lengthOf", "parameters": "( char[] array )", "modifiers": "public static", "return": "int", "signature": "int lengthOf( char[] array )", "full_signature": "public static int lengthOf( char[] array )", "class_method_signature": "Chr.lengthOf( char[] array )", "testcase": false, "constructor": false}, {"identifier": "len", "parameters": "( char[] array )", "modifiers": "public static", "return": "int", "signature": "int len( char[] array )", "full_signature": "public static int len( char[] array )", "class_method_signature": "Chr.len( char[] array )", "testcase": false, "constructor": false}, {"identifier": "atIndex", "parameters": "( final char[] array, final int index )", "modifiers": "public static", "return": "char", "signature": "char atIndex( final char[] array, final int index )", "full_signature": "public static char atIndex( final char[] array, final int index )", "class_method_signature": "Chr.atIndex( final char[] array, final int index )", "testcase": false, "constructor": false}, {"identifier": "idx", "parameters": "( final char[] array, final int index )", "modifiers": "public static", "return": "char", "signature": "char idx( final char[] array, final int index )", "full_signature": "public static char idx( final char[] array, final int index )", "class_method_signature": "Chr.idx( final char[] array, final int index )", "testcase": false, "constructor": false}, {"identifier": "atIndex", "parameters": "( final char[] array, int index, char value )", "modifiers": "public static", "return": "void", "signature": "void atIndex( final char[] array, int index, char value )", "full_signature": "public static void atIndex( final char[] array, int index, char value )", "class_method_signature": "Chr.atIndex( final char[] array, int index, char value )", "testcase": false, "constructor": false}, {"identifier": "idx", "parameters": "( final char[] array, int index, char value )", "modifiers": "public static", "return": "void", "signature": "void idx( final char[] array, int index, char value )", "full_signature": "public static void idx( final char[] array, int index, char value )", "class_method_signature": "Chr.idx( final char[] array, int index, char value )", "testcase": false, "constructor": false}, {"identifier": "atIndex", "parameters": "( final char[] array, int index, char[] input )", "modifiers": "public static", "return": "void", "signature": "void atIndex( final char[] array, int index, char[] input )", "full_signature": "public static void atIndex( final char[] array, int index, char[] input )", "class_method_signature": "Chr.atIndex( final char[] array, int index, char[] input )", "testcase": false, "constructor": false}, {"identifier": "idx", "parameters": "( final char[] array, int index, char[] input )", "modifiers": "public static", "return": "void", "signature": "void idx( final char[] array, int index, char[] input )", "full_signature": "public static void idx( final char[] array, int index, char[] input )", "class_method_signature": "Chr.idx( final char[] array, int index, char[] input )", "testcase": false, "constructor": false}, {"identifier": "sliceOf", "parameters": "( char[] array, int startIndex, int endIndex )", "modifiers": "public static", "return": "char[]", "signature": "char[] sliceOf( char[] array, int startIndex, int endIndex )", "full_signature": "public static char[] sliceOf( char[] array, int startIndex, int endIndex )", "class_method_signature": "Chr.sliceOf( char[] array, int startIndex, int endIndex )", "testcase": false, "constructor": false}, {"identifier": "slc", "parameters": "( char[] array, int startIndex, int endIndex )", "modifiers": "public static", "return": "char[]", "signature": "char[] slc( char[] array, int startIndex, int endIndex )", "full_signature": "public static char[] slc( char[] array, int startIndex, int endIndex )", "class_method_signature": "Chr.slc( char[] array, int startIndex, int endIndex )", "testcase": false, "constructor": false}, {"identifier": "sliceOf", "parameters": "( char[] array, int startIndex )", "modifiers": "public static", "return": "char[]", "signature": "char[] sliceOf( char[] array, int startIndex )", "full_signature": "public static char[] sliceOf( char[] array, int startIndex )", "class_method_signature": "Chr.sliceOf( char[] array, int startIndex )", "testcase": false, "constructor": false}, {"identifier": "slc", "parameters": "( char[] array, int startIndex )", "modifiers": "public static", "return": "char[]", "signature": "char[] slc( char[] array, int startIndex )", "full_signature": "public static char[] slc( char[] array, int startIndex )", "class_method_signature": "Chr.slc( char[] array, int startIndex )", "testcase": false, "constructor": false}, {"identifier": "endSliceOf", "parameters": "( char[] array, int endIndex )", "modifiers": "public static", "return": "char[]", "signature": "char[] endSliceOf( char[] array, int endIndex )", "full_signature": "public static char[] endSliceOf( char[] array, int endIndex )", "class_method_signature": "Chr.endSliceOf( char[] array, int endIndex )", "testcase": false, "constructor": false}, {"identifier": "slcEnd", "parameters": "( char[] array, int endIndex )", "modifiers": "public static", "return": "char[]", "signature": "char[] slcEnd( char[] array, int endIndex )", "full_signature": "public static char[] slcEnd( char[] array, int endIndex )", "class_method_signature": "Chr.slcEnd( char[] array, int endIndex )", "testcase": false, "constructor": false}, {"identifier": "in", "parameters": "( char value, char[] array )", "modifiers": "public static", "return": "boolean", "signature": "boolean in( char value, char[] array )", "full_signature": "public static boolean in( char value, char[] array )", "class_method_signature": "Chr.in( char value, char[] array )", "testcase": false, "constructor": false}, {"identifier": "in", "parameters": "( char[] values, char[] array )", "modifiers": "public static", "return": "boolean", "signature": "boolean in( char[] values, char[] array )", "full_signature": "public static boolean in( char[] values, char[] array )", "class_method_signature": "Chr.in( char[] values, char[] array )", "testcase": false, "constructor": false}, {"identifier": "in", "parameters": "( int value, char[] array )", "modifiers": "public static", "return": "boolean", "signature": "boolean in( int value, char[] array )", "full_signature": "public static boolean in( int value, char[] array )", "class_method_signature": "Chr.in( int value, char[] array )", "testcase": false, "constructor": false}, {"identifier": "in", "parameters": "( char value, int offset, char[] array )", "modifiers": "public static", "return": "boolean", "signature": "boolean in( char value, int offset, char[] array )", "full_signature": "public static boolean in( char value, int offset, char[] array )", "class_method_signature": "Chr.in( char value, int offset, char[] array )", "testcase": false, "constructor": false}, {"identifier": "in", "parameters": "( char value, int offset, int end, char[] array )", "modifiers": "public static", "return": "boolean", "signature": "boolean in( char value, int offset, int end, char[] array )", "full_signature": "public static boolean in( char value, int offset, int end, char[] array )", "class_method_signature": "Chr.in( char value, int offset, int end, char[] array )", "testcase": false, "constructor": false}, {"identifier": "grow", "parameters": "( char[] array, final int size )", "modifiers": "public static", "return": "char[]", "signature": "char[] grow( char[] array, final int size )", "full_signature": "public static char[] grow( char[] array, final int size )", "class_method_signature": "Chr.grow( char[] array, final int size )", "testcase": false, "constructor": false}, {"identifier": "grow", "parameters": "( char[] array )", "modifiers": "public static", "return": "char[]", "signature": "char[] grow( char[] array )", "full_signature": "public static char[] grow( char[] array )", "class_method_signature": "Chr.grow( char[] array )", "testcase": false, "constructor": false}, {"identifier": "shrink", "parameters": "( char[] array, int size )", "modifiers": "public static", "return": "char[]", "signature": "char[] shrink( char[] array, int size )", "full_signature": "public static char[] shrink( char[] array, int size )", "class_method_signature": "Chr.shrink( char[] array, int size )", "testcase": false, "constructor": false}, {"identifier": "compact", "parameters": "( char[] array )", "modifiers": "public static", "return": "char[]", "signature": "char[] compact( char[] array )", "full_signature": "public static char[] compact( char[] array )", "class_method_signature": "Chr.compact( char[] array )", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "( char c, char[] array )", "modifiers": "public static", "return": "char[]", "signature": "char[] remove( char c, char[] array )", "full_signature": "public static char[] remove( char c, char[] array )", "class_method_signature": "Chr.remove( char c, char[] array )", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "( char c, char[] array, int start, int to )", "modifiers": "public static", "return": "char[]", "signature": "char[] remove( char c, char[] array, int start, int to )", "full_signature": "public static char[] remove( char c, char[] array, int start, int to )", "class_method_signature": "Chr.remove( char c, char[] array, int start, int to )", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "( char[] chars )", "modifiers": "public static", "return": "char[][]", "signature": "char[][] split( char[] chars )", "full_signature": "public static char[][] split( char[] chars )", "class_method_signature": "Chr.split( char[] chars )", "testcase": false, "constructor": false}, {"identifier": "splitLine", "parameters": "( char[] chars )", "modifiers": "public static", "return": "char[][]", "signature": "char[][] splitLine( char[] chars )", "full_signature": "public static char[][] splitLine( char[] chars )", "class_method_signature": "Chr.splitLine( char[] chars )", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "( char[] array )", "modifiers": "public static", "return": "char[]", "signature": "char[] copy( char[] array )", "full_signature": "public static char[] copy( char[] array )", "class_method_signature": "Chr.copy( char[] array )", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "( char[] array, int offset, int length )", "modifiers": "public static", "return": "char[]", "signature": "char[] copy( char[] array, int offset, int length )", "full_signature": "public static char[] copy( char[] array, int offset, int length )", "class_method_signature": "Chr.copy( char[] array, int offset, int length )", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "( char[] array, char v )", "modifiers": "public static", "return": "char[]", "signature": "char[] add( char[] array, char v )", "full_signature": "public static char[] add( char[] array, char v )", "class_method_signature": "Chr.add( char[] array, char v )", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "( char[] array, String str )", "modifiers": "public static", "return": "char[]", "signature": "char[] add( char[] array, String str )", "full_signature": "public static char[] add( char[] array, String str )", "class_method_signature": "Chr.add( char[] array, String str )", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "( char[] array, StringBuilder stringBuilder )", "modifiers": "public static", "return": "char[]", "signature": "char[] add( char[] array, StringBuilder stringBuilder )", "full_signature": "public static char[] add( char[] array, StringBuilder stringBuilder )", "class_method_signature": "Chr.add( char[] array, StringBuilder stringBuilder )", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "( char[] array, char[] array2 )", "modifiers": "public static", "return": "char[]", "signature": "char[] add( char[] array, char[] array2 )", "full_signature": "public static char[] add( char[] array, char[] array2 )", "class_method_signature": "Chr.add( char[] array, char[] array2 )", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "( final char[] array, final int idx, final char v )", "modifiers": "public static", "return": "char[]", "signature": "char[] insert( final char[] array, final int idx, final char v )", "full_signature": "public static char[] insert( final char[] array, final int idx, final char v )", "class_method_signature": "Chr.insert( final char[] array, final int idx, final char v )", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "( final char[] array, final int fromIndex, String values )", "modifiers": "public static", "return": "char[]", "signature": "char[] insert( final char[] array, final int fromIndex, String values )", "full_signature": "public static char[] insert( final char[] array, final int fromIndex, String values )", "class_method_signature": "Chr.insert( final char[] array, final int fromIndex, String values )", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "( final char[] array, final int fromIndex, StringBuilder values )", "modifiers": "public static", "return": "char[]", "signature": "char[] insert( final char[] array, final int fromIndex, StringBuilder values )", "full_signature": "public static char[] insert( final char[] array, final int fromIndex, StringBuilder values )", "class_method_signature": "Chr.insert( final char[] array, final int fromIndex, StringBuilder values )", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "( final char[] array, final int fromIndex, final char[] values )", "modifiers": "public static", "return": "char[]", "signature": "char[] insert( final char[] array, final int fromIndex, final char[] values )", "full_signature": "public static char[] insert( final char[] array, final int fromIndex, final char[] values )", "class_method_signature": "Chr.insert( final char[] array, final int fromIndex, final char[] values )", "testcase": false, "constructor": false}, {"identifier": "getCharsFromStringBuilder", "parameters": "( StringBuilder sbuf )", "modifiers": "private static", "return": "char[]", "signature": "char[] getCharsFromStringBuilder( StringBuilder sbuf )", "full_signature": "private static char[] getCharsFromStringBuilder( StringBuilder sbuf )", "class_method_signature": "Chr.getCharsFromStringBuilder( StringBuilder sbuf )", "testcase": false, "constructor": false}, {"identifier": "calculateIndex", "parameters": "( char[] array, int originalIndex )", "modifiers": "private static", "return": "int", "signature": "int calculateIndex( char[] array, int originalIndex )", "full_signature": "private static int calculateIndex( char[] array, int originalIndex )", "class_method_signature": "Chr.calculateIndex( char[] array, int originalIndex )", "testcase": false, "constructor": false}, {"identifier": "calculateEndIndex", "parameters": "( char[] array, int originalIndex )", "modifiers": "private static", "return": "int", "signature": "int calculateEndIndex( char[] array, int originalIndex )", "full_signature": "private static int calculateEndIndex( char[] array, int originalIndex )", "class_method_signature": "Chr.calculateEndIndex( char[] array, int originalIndex )", "testcase": false, "constructor": false}, {"identifier": "rpad", "parameters": "( final char[] in, final int size, char pad )", "modifiers": "public static", "return": "char[]", "signature": "char[] rpad( final char[] in, final int size, char pad )", "full_signature": "public static char[] rpad( final char[] in, final int size, char pad )", "class_method_signature": "Chr.rpad( final char[] in, final int size, char pad )", "testcase": false, "constructor": false}, {"identifier": "lpad", "parameters": "( final char[] in, final int size, char pad )", "modifiers": "public static", "return": "char[]", "signature": "char[] lpad( final char[] in, final int size, char pad )", "full_signature": "public static char[] lpad( final char[] in, final int size, char pad )", "class_method_signature": "Chr.lpad( final char[] in, final int size, char pad )", "testcase": false, "constructor": false}, {"identifier": "underBarCase", "parameters": "( char[] in )", "modifiers": "public static", "return": "char[]", "signature": "char[] underBarCase( char[] in )", "full_signature": "public static char[] underBarCase( char[] in )", "class_method_signature": "Chr.underBarCase( char[] in )", "testcase": false, "constructor": false}, {"identifier": "camelCase", "parameters": "( char[] in, boolean upper )", "modifiers": "public static", "return": "char[]", "signature": "char[] camelCase( char[] in, boolean upper )", "full_signature": "public static char[] camelCase( char[] in, boolean upper )", "class_method_signature": "Chr.camelCase( char[] in, boolean upper )", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "( final char[] inputArray,\n                                  final char split )", "modifiers": "public static", "return": "char[][]", "signature": "char[][] split( final char[] inputArray,\n                                  final char split )", "full_signature": "public static char[][] split( final char[] inputArray,\n                                  final char split )", "class_method_signature": "Chr.split( final char[] inputArray,\n                                  final char split )", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "( char[] chars, char c )", "modifiers": "public static", "return": "boolean", "signature": "boolean contains( char[] chars, char c )", "full_signature": "public static boolean contains( char[] chars, char c )", "class_method_signature": "Chr.contains( char[] chars, char c )", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "( char[] chars, char c, int start, final int length )", "modifiers": "public static", "return": "boolean", "signature": "boolean contains( char[] chars, char c, int start, final int length )", "full_signature": "public static boolean contains( char[] chars, char c, int start, final int length )", "class_method_signature": "Chr.contains( char[] chars, char c, int start, final int length )", "testcase": false, "constructor": false}, {"identifier": "_idx", "parameters": "( char[] buffer, int location, byte[] chars )", "modifiers": "public static", "return": "void", "signature": "void _idx( char[] buffer, int location, byte[] chars )", "full_signature": "public static void _idx( char[] buffer, int location, byte[] chars )", "class_method_signature": "Chr._idx( char[] buffer, int location, byte[] chars )", "testcase": false, "constructor": false}, {"identifier": "_idx", "parameters": "( final char[] array, int startIndex, char[] input )", "modifiers": "public static", "return": "void", "signature": "void _idx( final char[] array, int startIndex, char[] input )", "full_signature": "public static void _idx( final char[] array, int startIndex, char[] input )", "class_method_signature": "Chr._idx( final char[] array, int startIndex, char[] input )", "testcase": false, "constructor": false}, {"identifier": "_idx", "parameters": "( final char[] array, int startIndex, char[] input, final int inputLength )", "modifiers": "public static", "return": "void", "signature": "void _idx( final char[] array, int startIndex, char[] input, final int inputLength )", "full_signature": "public static void _idx( final char[] array, int startIndex, char[] input, final int inputLength )", "class_method_signature": "Chr._idx( final char[] array, int startIndex, char[] input, final int inputLength )", "testcase": false, "constructor": false}, {"identifier": "_idx", "parameters": "( char[] buffer, int location, byte[] chars, int start, int end )", "modifiers": "public static", "return": "void", "signature": "void _idx( char[] buffer, int location, byte[] chars, int start, int end )", "full_signature": "public static void _idx( char[] buffer, int location, byte[] chars, int start, int end )", "class_method_signature": "Chr._idx( char[] buffer, int location, byte[] chars, int start, int end )", "testcase": false, "constructor": false}, {"identifier": "trim", "parameters": "( char[] buffer, int start, int to )", "modifiers": "public static", "return": "char[]", "signature": "char[] trim( char[] buffer, int start, int to )", "full_signature": "public static char[] trim( char[] buffer, int start, int to )", "class_method_signature": "Chr.trim( char[] buffer, int start, int to )", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "( char[] chars1, char[] chars2 )", "modifiers": "public static", "return": "boolean", "signature": "boolean equals( char[] chars1, char[] chars2 )", "full_signature": "public static boolean equals( char[] chars1, char[] chars2 )", "class_method_signature": "Chr.equals( char[] chars1, char[] chars2 )", "testcase": false, "constructor": false}, {"identifier": "equalsNoNullCheck", "parameters": "( char[] chars1, char[] chars2 )", "modifiers": "public static", "return": "boolean", "signature": "boolean equalsNoNullCheck( char[] chars1, char[] chars2 )", "full_signature": "public static boolean equalsNoNullCheck( char[] chars1, char[] chars2 )", "class_method_signature": "Chr.equalsNoNullCheck( char[] chars1, char[] chars2 )", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "( char[]... strings )", "modifiers": "public static", "return": "char[]", "signature": "char[] add( char[]... strings )", "full_signature": "public static char[] add( char[]... strings )", "class_method_signature": "Chr.add( char[]... strings )", "testcase": false, "constructor": false}, {"identifier": "splitLines", "parameters": "(char[] chars)", "modifiers": "public static", "return": "char[][]", "signature": "char[][] splitLines(char[] chars)", "full_signature": "public static char[][] splitLines(char[] chars)", "class_method_signature": "Chr.splitLines(char[] chars)", "testcase": false, "constructor": false}, {"identifier": "splitComma", "parameters": "(char[] chars)", "modifiers": "public static", "return": "char[][]", "signature": "char[][] splitComma(char[] chars)", "full_signature": "public static char[][] splitComma(char[] chars)", "class_method_signature": "Chr.splitComma(char[] chars)", "testcase": false, "constructor": false}, {"identifier": "equalsOrDie", "parameters": "(char[] ac, char[] bc)", "modifiers": "public static", "return": "void", "signature": "void equalsOrDie(char[] ac, char[] bc)", "full_signature": "public static void equalsOrDie(char[] ac, char[] bc)", "class_method_signature": "Chr.equalsOrDie(char[] ac, char[] bc)", "testcase": false, "constructor": false}, {"identifier": "charDescription", "parameters": "(char a, CharBuf charBufA)", "modifiers": "private static", "return": "void", "signature": "void charDescription(char a, CharBuf charBufA)", "full_signature": "private static void charDescription(char a, CharBuf charBufA)", "class_method_signature": "Chr.charDescription(char a, CharBuf charBufA)", "testcase": false, "constructor": false}, {"identifier": "multiply", "parameters": "(char c, int len)", "modifiers": "public static", "return": "char []", "signature": "char [] multiply(char c, int len)", "full_signature": "public static char [] multiply(char c, int len)", "class_method_signature": "Chr.multiply(char c, int len)", "testcase": false, "constructor": false}, {"identifier": "insideOf", "parameters": "(char[] startsWith, char[] chars, char[] endsWith)", "modifiers": "public static", "return": "boolean", "signature": "boolean insideOf(char[] startsWith, char[] chars, char[] endsWith)", "full_signature": "public static boolean insideOf(char[] startsWith, char[] chars, char[] endsWith)", "class_method_signature": "Chr.insideOf(char[] startsWith, char[] chars, char[] endsWith)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(char[] messageBodyChars)", "modifiers": "public static", "return": "boolean", "signature": "boolean isEmpty(char[] messageBodyChars)", "full_signature": "public static boolean isEmpty(char[] messageBodyChars)", "class_method_signature": "Chr.isEmpty(char[] messageBodyChars)", "testcase": false, "constructor": false}], "file": "reflekt/src/main/java/io/advantageous/boon/primitive/Chr.java"}, "focal_method": {"identifier": "_idx", "parameters": "( char[] buffer, int location, byte[] chars )", "modifiers": "public static", "return": "void", "body": "public static void _idx( char[] buffer, int location, byte[] chars ) {\n        int index2 = 0;\n        int endLocation = ( location + chars.length );\n        for ( int index = location; index < endLocation; index++, index2++ ) {\n            buffer[ index ] = ( char ) chars[ index2 ];\n        }\n    }", "signature": "void _idx( char[] buffer, int location, byte[] chars )", "full_signature": "public static void _idx( char[] buffer, int location, byte[] chars )", "class_method_signature": "Chr._idx( char[] buffer, int location, byte[] chars )", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 33015857, "url": "https://github.com/advantageous/boon", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 18, "size": 6174, "license": "licensed"}}