{"test_class": {"identifier": "SATCreatorDecoderTest", "superclass": "", "interfaces": "", "fields": [], "file": "opendse-optimization/src/test/java/net/sf/opendse/optimization/SATCreatorDecoderTest.java"}, "test_case": {"identifier": "testIgnoredVariable1", "parameters": "()", "modifiers": "@Test(expected=IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected=IllegalArgumentException.class)\n\tpublic void testIgnoredVariable1() {\n\t\t// five entries, but variable ignored\n\t\tint orderSize = 5;\n\t\tint orderIndex = -1;\n\t\tSATCreatorDecoder testObject = getObject();\n\t\ttestObject.getLowerOrderBound(orderSize, orderIndex);\n\t}", "signature": "void testIgnoredVariable1()", "full_signature": "@Test(expected=IllegalArgumentException.class) public void testIgnoredVariable1()", "class_method_signature": "SATCreatorDecoderTest.testIgnoredVariable1()", "testcase": true, "constructor": false, "invocations": ["getObject", "getLowerOrderBound"]}, "focal_class": {"identifier": "SATCreatorDecoder", "superclass": "extends AbstractSATDecoder<Genotype, ImplementationWrapper>", "interfaces": "", "fields": [{"original_string": "final VariableClassOrder order;", "modifier": "final", "type": "VariableClassOrder", "declarator": "order", "var_name": "order"}, {"original_string": "Map<Class<?>, Double> lb = new HashMap<Class<?>, Double>();", "modifier": "", "type": "Map<Class<?>, Double>", "declarator": "lb = new HashMap<Class<?>, Double>()", "var_name": "lb"}, {"original_string": "Map<Class<?>, Double> ub = new HashMap<Class<?>, Double>();", "modifier": "", "type": "Map<Class<?>, Double>", "declarator": "ub = new HashMap<Class<?>, Double>()", "var_name": "ub"}, {"original_string": "protected final SATConstraints constraints;", "modifier": "protected final", "type": "SATConstraints", "declarator": "constraints", "var_name": "constraints"}, {"original_string": "protected final SpecificationWrapper specificationWrapper;", "modifier": "protected final", "type": "SpecificationWrapper", "declarator": "specificationWrapper", "var_name": "specificationWrapper"}, {"original_string": "protected final Interpreter interpreter;", "modifier": "protected final", "type": "Interpreter", "declarator": "interpreter", "var_name": "interpreter"}, {"original_string": "protected final Control control;", "modifier": "protected final", "type": "Control", "declarator": "control", "var_name": "control"}], "methods": [{"identifier": "SATCreatorDecoder", "parameters": "(VariableClassOrder order, SATManager manager, Rand random, SATConstraints constraints,\n\t\t\tSpecificationWrapper specificationWrapper, Interpreter interpreter, Control control,\n\t\t\t@Constant(value = \"variableorder\", namespace = SATCreatorDecoder.class) boolean useVariableOrder)", "modifiers": "@Inject public", "return": "", "signature": " SATCreatorDecoder(VariableClassOrder order, SATManager manager, Rand random, SATConstraints constraints,\n\t\t\tSpecificationWrapper specificationWrapper, Interpreter interpreter, Control control,\n\t\t\t@Constant(value = \"variableorder\", namespace = SATCreatorDecoder.class) boolean useVariableOrder)", "full_signature": "@Inject public  SATCreatorDecoder(VariableClassOrder order, SATManager manager, Rand random, SATConstraints constraints,\n\t\t\tSpecificationWrapper specificationWrapper, Interpreter interpreter, Control control,\n\t\t\t@Constant(value = \"variableorder\", namespace = SATCreatorDecoder.class) boolean useVariableOrder)", "class_method_signature": "SATCreatorDecoder.SATCreatorDecoder(VariableClassOrder order, SATManager manager, Rand random, SATConstraints constraints,\n\t\t\tSpecificationWrapper specificationWrapper, Interpreter interpreter, Control control,\n\t\t\t@Constant(value = \"variableorder\", namespace = SATCreatorDecoder.class) boolean useVariableOrder)", "testcase": false, "constructor": true}, {"identifier": "convertModel", "parameters": "(Model model)", "modifiers": "@Override public", "return": "ImplementationWrapper", "signature": "ImplementationWrapper convertModel(Model model)", "full_signature": "@Override public ImplementationWrapper convertModel(Model model)", "class_method_signature": "SATCreatorDecoder.convertModel(Model model)", "testcase": false, "constructor": false}, {"identifier": "createConstraints", "parameters": "()", "modifiers": "@Override public", "return": "Set<Constraint>", "signature": "Set<Constraint> createConstraints()", "full_signature": "@Override public Set<Constraint> createConstraints()", "class_method_signature": "SATCreatorDecoder.createConstraints()", "testcase": false, "constructor": false}, {"identifier": "randomize", "parameters": "(Collection<Object> variables, Map<Object, Double> lowerBounds,\n\t\t\tMap<Object, Double> upperBounds, Map<Object, Double> priorities, Map<Object, Boolean> phases)", "modifiers": "@Override public", "return": "void", "signature": "void randomize(Collection<Object> variables, Map<Object, Double> lowerBounds,\n\t\t\tMap<Object, Double> upperBounds, Map<Object, Double> priorities, Map<Object, Boolean> phases)", "full_signature": "@Override public void randomize(Collection<Object> variables, Map<Object, Double> lowerBounds,\n\t\t\tMap<Object, Double> upperBounds, Map<Object, Double> priorities, Map<Object, Boolean> phases)", "class_method_signature": "SATCreatorDecoder.randomize(Collection<Object> variables, Map<Object, Double> lowerBounds,\n\t\t\tMap<Object, Double> upperBounds, Map<Object, Double> priorities, Map<Object, Boolean> phases)", "testcase": false, "constructor": false}, {"identifier": "getUpperOrderBound", "parameters": "(int orderSize, int orderIndex)", "modifiers": "protected", "return": "double", "signature": "double getUpperOrderBound(int orderSize, int orderIndex)", "full_signature": "protected double getUpperOrderBound(int orderSize, int orderIndex)", "class_method_signature": "SATCreatorDecoder.getUpperOrderBound(int orderSize, int orderIndex)", "testcase": false, "constructor": false}, {"identifier": "getLowerOrderBound", "parameters": "(int orderSize, int orderIndex)", "modifiers": "protected", "return": "double", "signature": "double getLowerOrderBound(int orderSize, int orderIndex)", "full_signature": "protected double getLowerOrderBound(int orderSize, int orderIndex)", "class_method_signature": "SATCreatorDecoder.getLowerOrderBound(int orderSize, int orderIndex)", "testcase": false, "constructor": false}, {"identifier": "ignoreVariables", "parameters": "(Set<Object> variables)", "modifiers": "@Override public", "return": "Set<Object>", "signature": "Set<Object> ignoreVariables(Set<Object> variables)", "full_signature": "@Override public Set<Object> ignoreVariables(Set<Object> variables)", "class_method_signature": "SATCreatorDecoder.ignoreVariables(Set<Object> variables)", "testcase": false, "constructor": false}, {"identifier": "getLowerBounds", "parameters": "(Set<Object> variables)", "modifiers": "@Override public", "return": "Map<Object, Double>", "signature": "Map<Object, Double> getLowerBounds(Set<Object> variables)", "full_signature": "@Override public Map<Object, Double> getLowerBounds(Set<Object> variables)", "class_method_signature": "SATCreatorDecoder.getLowerBounds(Set<Object> variables)", "testcase": false, "constructor": false}, {"identifier": "getUpperBounds", "parameters": "(Set<Object> variables)", "modifiers": "@Override public", "return": "Map<Object, Double>", "signature": "Map<Object, Double> getUpperBounds(Set<Object> variables)", "full_signature": "@Override public Map<Object, Double> getUpperBounds(Set<Object> variables)", "class_method_signature": "SATCreatorDecoder.getUpperBounds(Set<Object> variables)", "testcase": false, "constructor": false}], "file": "opendse-optimization/src/main/java/net/sf/opendse/optimization/SATCreatorDecoder.java"}, "focal_method": {"identifier": "getLowerOrderBound", "parameters": "(int orderSize, int orderIndex)", "modifiers": "protected", "return": "double", "body": "protected double getLowerOrderBound(int orderSize, int orderIndex) {\n\t\tif (orderIndex == -1) {\n\t\t\tthrow new IllegalArgumentException(\"Illegal order index provided.\");\n\t\t}\n\t\treturn (orderSize - orderIndex - 1) * 1.0 / orderSize;\n\t}", "signature": "double getLowerOrderBound(int orderSize, int orderIndex)", "full_signature": "protected double getLowerOrderBound(int orderSize, int orderIndex)", "class_method_signature": "SATCreatorDecoder.getLowerOrderBound(int orderSize, int orderIndex)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 121694310, "url": "https://github.com/felixreimann/opendse", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 7, "size": 2024, "license": "licensed"}}