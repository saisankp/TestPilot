{"test_class": {"identifier": "PetitjeanShapeIndexDescriptorTest", "superclass": "extends MolecularDescriptorTest", "interfaces": "", "fields": [], "file": "descriptor/qsarmolecular/src/test/java/org/openscience/cdk/qsar/descriptors/molecular/PetitjeanShapeIndexDescriptorTest.java"}, "test_case": {"identifier": "testPetitjeanShapeIndexDescriptor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPetitjeanShapeIndexDescriptor() throws ClassNotFoundException, CDKException, Exception {\n        // first molecule is nbutane, second is naphthalene\n        String filename = \"data/mdl/petitejean.sdf\";\n        InputStream ins = this.getClass().getClassLoader().getResourceAsStream(filename);\n        ISimpleChemObjectReader reader = new MDLV2000Reader(ins);\n        ChemFile content = (ChemFile) reader.read((ChemObject) new ChemFile());\n        List cList = ChemFileManipulator.getAllAtomContainers(content);\n        IAtomContainer ac = (IAtomContainer) cList.get(0);\n\n        DescriptorValue result = descriptor.calculate(ac);\n        DoubleArrayResult dar = (DoubleArrayResult) result.getValue();\n        Assert.assertEquals(0.5, dar.get(0), 0.00001);\n        Assert.assertEquals(0.606477, dar.get(1), 0.000001);\n\n        ac = (IAtomContainer) cList.get(1);\n        result = descriptor.calculate(ac);\n        dar = (DoubleArrayResult) result.getValue();\n        Assert.assertEquals(0.666666, dar.get(0), 0.000001);\n        Assert.assertEquals(0.845452, dar.get(1), 0.000001);\n\n    }", "signature": "void testPetitjeanShapeIndexDescriptor()", "full_signature": "@Test public void testPetitjeanShapeIndexDescriptor()", "class_method_signature": "PetitjeanShapeIndexDescriptorTest.testPetitjeanShapeIndexDescriptor()", "testcase": true, "constructor": false, "invocations": ["getResourceAsStream", "getClassLoader", "getClass", "read", "getAllAtomContainers", "get", "calculate", "getValue", "assertEquals", "get", "assertEquals", "get", "get", "calculate", "getValue", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "PetitjeanShapeIndexDescriptor", "superclass": "extends AbstractMolecularDescriptor", "interfaces": "implements IMolecularDescriptor", "fields": [{"original_string": "private static final String[] NAMES = {\"topoShape\", \"geomShape\"};", "modifier": "private static final", "type": "String[]", "declarator": "NAMES = {\"topoShape\", \"geomShape\"}", "var_name": "NAMES"}], "methods": [{"identifier": "PetitjeanShapeIndexDescriptor", "parameters": "()", "modifiers": "public", "return": "", "signature": " PetitjeanShapeIndexDescriptor()", "full_signature": "public  PetitjeanShapeIndexDescriptor()", "class_method_signature": "PetitjeanShapeIndexDescriptor.PetitjeanShapeIndexDescriptor()", "testcase": false, "constructor": true}, {"identifier": "getSpecification", "parameters": "()", "modifiers": "@Override public", "return": "DescriptorSpecification", "signature": "DescriptorSpecification getSpecification()", "full_signature": "@Override public DescriptorSpecification getSpecification()", "class_method_signature": "PetitjeanShapeIndexDescriptor.getSpecification()", "testcase": false, "constructor": false}, {"identifier": "setParameters", "parameters": "(Object[] params)", "modifiers": "@Override public", "return": "void", "signature": "void setParameters(Object[] params)", "full_signature": "@Override public void setParameters(Object[] params)", "class_method_signature": "PetitjeanShapeIndexDescriptor.setParameters(Object[] params)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] getParameters()", "full_signature": "@Override public Object[] getParameters()", "class_method_signature": "PetitjeanShapeIndexDescriptor.getParameters()", "testcase": false, "constructor": false}, {"identifier": "getDescriptorNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getDescriptorNames()", "full_signature": "@Override public String[] getDescriptorNames()", "class_method_signature": "PetitjeanShapeIndexDescriptor.getDescriptorNames()", "testcase": false, "constructor": false}, {"identifier": "getParameterNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getParameterNames()", "full_signature": "@Override public String[] getParameterNames()", "class_method_signature": "PetitjeanShapeIndexDescriptor.getParameterNames()", "testcase": false, "constructor": false}, {"identifier": "getParameterType", "parameters": "(String name)", "modifiers": "@Override public", "return": "Object", "signature": "Object getParameterType(String name)", "full_signature": "@Override public Object getParameterType(String name)", "class_method_signature": "PetitjeanShapeIndexDescriptor.getParameterType(String name)", "testcase": false, "constructor": false}, {"identifier": "calculate", "parameters": "(IAtomContainer container)", "modifiers": "@Override public", "return": "DescriptorValue", "signature": "DescriptorValue calculate(IAtomContainer container)", "full_signature": "@Override public DescriptorValue calculate(IAtomContainer container)", "class_method_signature": "PetitjeanShapeIndexDescriptor.calculate(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "getDescriptorResultType", "parameters": "()", "modifiers": "@Override public", "return": "IDescriptorResult", "signature": "IDescriptorResult getDescriptorResultType()", "full_signature": "@Override public IDescriptorResult getDescriptorResultType()", "class_method_signature": "PetitjeanShapeIndexDescriptor.getDescriptorResultType()", "testcase": false, "constructor": false}], "file": "descriptor/qsarmolecular/src/main/java/org/openscience/cdk/qsar/descriptors/molecular/PetitjeanShapeIndexDescriptor.java"}, "focal_method": {"identifier": "PetitjeanShapeIndexDescriptor", "parameters": "()", "modifiers": "public", "return": "", "body": "public PetitjeanShapeIndexDescriptor() {}", "signature": " PetitjeanShapeIndexDescriptor()", "full_signature": "public  PetitjeanShapeIndexDescriptor()", "class_method_signature": "PetitjeanShapeIndexDescriptor.PetitjeanShapeIndexDescriptor()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}