{"test_class": {"identifier": "DodecahedronTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Dodecahedron d = new Dodecahedron(\"test\", \"cyan\", 2.5);", "modifier": "private", "type": "Dodecahedron", "declarator": "d = new Dodecahedron(\"test\", \"cyan\", 2.5)", "var_name": "d"}, {"original_string": "private Dodecahedron dTrue = new Dodecahedron(\"test\", \"cyan\", 2.5);", "modifier": "private", "type": "Dodecahedron", "declarator": "dTrue = new Dodecahedron(\"test\", \"cyan\", 2.5)", "var_name": "dTrue"}, {"original_string": "private Dodecahedron dFalse = new Dodecahedron(\"false\", \"fasle\", .25);", "modifier": "private", "type": "Dodecahedron", "declarator": "dFalse = new Dodecahedron(\"false\", \"fasle\", .25)", "var_name": "dFalse"}, {"original_string": "private double edge = d.getEdge();", "modifier": "private", "type": "double", "declarator": "edge = d.getEdge()", "var_name": "edge"}], "file": "Projects/Project_07/DodecahedronTest.java"}, "test_case": {"identifier": "hashCodeTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void hashCodeTest() {\n      Assert.assertTrue(0 == d.hashCode());\n   }", "signature": "void hashCodeTest()", "full_signature": "@Test public void hashCodeTest()", "class_method_signature": "DodecahedronTest.hashCodeTest()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "hashCode"]}, "focal_class": {"identifier": "Dodecahedron", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String label = \"\";", "modifier": "private", "type": "String", "declarator": "label = \"\"", "var_name": "label"}, {"original_string": "private String color = \"\";", "modifier": "private", "type": "String", "declarator": "color = \"\"", "var_name": "color"}, {"original_string": "private double edge = 0;", "modifier": "private", "type": "double", "declarator": "edge = 0", "var_name": "edge"}, {"original_string": "private static int count = 0;", "modifier": "private static", "type": "int", "declarator": "count = 0", "var_name": "count"}], "methods": [{"identifier": "Dodecahedron", "parameters": "(String labelIn, String colorIn, double edgeIn)", "modifiers": "public", "return": "", "signature": " Dodecahedron(String labelIn, String colorIn, double edgeIn)", "full_signature": "public  Dodecahedron(String labelIn, String colorIn, double edgeIn)", "class_method_signature": "Dodecahedron.Dodecahedron(String labelIn, String colorIn, double edgeIn)", "testcase": false, "constructor": true}, {"identifier": "getLabel", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLabel()", "full_signature": "public String getLabel()", "class_method_signature": "Dodecahedron.getLabel()", "testcase": false, "constructor": false}, {"identifier": "setLabel", "parameters": "(String labelIn)", "modifiers": "public", "return": "boolean", "signature": "boolean setLabel(String labelIn)", "full_signature": "public boolean setLabel(String labelIn)", "class_method_signature": "Dodecahedron.setLabel(String labelIn)", "testcase": false, "constructor": false}, {"identifier": "getColor", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getColor()", "full_signature": "public String getColor()", "class_method_signature": "Dodecahedron.getColor()", "testcase": false, "constructor": false}, {"identifier": "setColor", "parameters": "(String colorIn)", "modifiers": "public", "return": "boolean", "signature": "boolean setColor(String colorIn)", "full_signature": "public boolean setColor(String colorIn)", "class_method_signature": "Dodecahedron.setColor(String colorIn)", "testcase": false, "constructor": false}, {"identifier": "getEdge", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getEdge()", "full_signature": "public double getEdge()", "class_method_signature": "Dodecahedron.getEdge()", "testcase": false, "constructor": false}, {"identifier": "setEdge", "parameters": "(double edgeIn)", "modifiers": "public", "return": "boolean", "signature": "boolean setEdge(double edgeIn)", "full_signature": "public boolean setEdge(double edgeIn)", "class_method_signature": "Dodecahedron.setEdge(double edgeIn)", "testcase": false, "constructor": false}, {"identifier": "surfaceArea", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double surfaceArea()", "full_signature": "public double surfaceArea()", "class_method_signature": "Dodecahedron.surfaceArea()", "testcase": false, "constructor": false}, {"identifier": "volume", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double volume()", "full_signature": "public double volume()", "class_method_signature": "Dodecahedron.volume()", "testcase": false, "constructor": false}, {"identifier": "surfaceToVolumeRatio", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double surfaceToVolumeRatio()", "full_signature": "public double surfaceToVolumeRatio()", "class_method_signature": "Dodecahedron.surfaceToVolumeRatio()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "Dodecahedron.toString()", "testcase": false, "constructor": false}, {"identifier": "resetCount", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void resetCount()", "full_signature": "public static void resetCount()", "class_method_signature": "Dodecahedron.resetCount()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "Dodecahedron.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "Dodecahedron.hashCode()", "testcase": false, "constructor": false}], "file": "Projects/Project_07/Dodecahedron.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int hashCode() {\n      return 0;\n   }", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "Dodecahedron.hashCode()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 79497496, "url": "https://github.com/perryBunn/COMP1210", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 15825, "license": "MIT License"}}