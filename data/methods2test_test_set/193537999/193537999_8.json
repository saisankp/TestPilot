{"test_class": {"identifier": "TiffDataWriterTest", "superclass": "", "interfaces": "", "fields": [], "file": "vortex-api/src/test/java/mil/army/usace/hec/vortex/io/TiffDataWriterTest.java"}, "test_case": {"identifier": "TiffDataWriterWritesGribFile", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void TiffDataWriterWritesGribFile(){\n        String inFile = new File(getClass().getResource(\n                \"/MRMS_GaugeCorr_QPE_01H_00.00_20170102-120000.grib2\").getFile()).toString();\n        String variableName = \"GaugeCorrQPE01H_altitude_above_msl\";\n\n        DataReader reader = DataReader.builder()\n                .path(inFile)\n                .variable(variableName)\n                .build();\n\n        List<VortexData> dtos = new ArrayList<>(reader.getDtos());\n\n        Path destination = Paths.get(\"C:/Temp/.tiff\");\n\n        DataWriter writer = DataWriter.builder()\n                .destination(destination)\n                .data(dtos)\n                .build();\n\n        writer.write();\n    }", "signature": "void TiffDataWriterWritesGribFile()", "full_signature": "@Test void TiffDataWriterWritesGribFile()", "class_method_signature": "TiffDataWriterTest.TiffDataWriterWritesGribFile()", "testcase": true, "constructor": false, "invocations": ["toString", "getFile", "getResource", "getClass", "build", "variable", "path", "builder", "getDtos", "get", "build", "data", "destination", "builder", "write"]}, "focal_class": {"identifier": "TiffDataWriter", "superclass": "extends DataWriter", "interfaces": "", "fields": [], "methods": [{"identifier": "TiffDataWriter", "parameters": "(DataWriterBuilder builder)", "modifiers": "", "return": "", "signature": " TiffDataWriter(DataWriterBuilder builder)", "full_signature": "  TiffDataWriter(DataWriterBuilder builder)", "class_method_signature": "TiffDataWriter.TiffDataWriter(DataWriterBuilder builder)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void write()", "full_signature": "@Override public void write()", "class_method_signature": "TiffDataWriter.write()", "testcase": false, "constructor": false}], "file": "vortex-api/src/main/java/mil/army/usace/hec/vortex/io/TiffDataWriter.java"}, "focal_method": {"identifier": "write", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void write() {\n        List<VortexGrid> grids = data.stream()\n                .filter(vortexData -> vortexData instanceof VortexGrid)\n                .map(vortexData -> (VortexGrid) vortexData)\n                .collect(Collectors.toList());\n\n        grids.forEach(grid -> {\n            Dataset dataset = RasterUtils.getDatasetFromVortexGrid(grid);\n            ArrayList<String> gdalOptions = new ArrayList<>();\n            gdalOptions.add(\"-of\");\n            gdalOptions.add(\"Gtiff\");\n            gdalOptions.add(\"-ot\");\n            gdalOptions.add(\"Float32\");\n            gdalOptions.add(\"-co\");\n            gdalOptions.add(\"TILED=YES\");\n            gdalOptions.add(\"-co\");\n            gdalOptions.add(\"COMPRESS=DEFLATE\");\n            gdalOptions.add(\"-co\");\n            gdalOptions.add(\"ZLEVEL=1\");\n            gdalOptions.add(\"-co\");\n            gdalOptions.add(\"BIGTIFF=YES\");\n            TranslateOptions translateOptions = new TranslateOptions(new Vector<>(gdalOptions));\n            Dataset out = gdal.Translate(destination.toString(), dataset, translateOptions);\n            out.FlushCache();\n            out.delete();\n        });\n    }", "signature": "void write()", "full_signature": "@Override public void write()", "class_method_signature": "TiffDataWriter.write()", "testcase": false, "constructor": false, "invocations": ["collect", "map", "filter", "stream", "toList", "forEach", "getDatasetFromVortexGrid", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "Translate", "toString", "FlushCache", "delete"]}, "repository": {"repo_id": 193537999, "url": "https://github.com/HydrologicEngineeringCenter/Vortex", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 448543, "license": "licensed"}}