{"test_class": {"identifier": "CausedFocusEventWrapperTest", "superclass": "", "interfaces": "", "fields": [], "file": "adt-ui/src/test/java/com/android/tools/adtui/util/CausedFocusEventWrapperTest.java"}, "test_case": {"identifier": "testIsFocusEventWithCause", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testIsFocusEventWithCause() {\n    if (SystemInfoRt.IS_AT_LEAST_JAVA9) {\n      Assert.assertTrue(CausedFocusEventWrapper.isFocusEventWithCause(new FocusEvent(Mockito.mock(Component.class), 0)));\n    }\n  }", "signature": "void testIsFocusEventWithCause()", "full_signature": "@Test public void testIsFocusEventWithCause()", "class_method_signature": "CausedFocusEventWrapperTest.testIsFocusEventWithCause()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isFocusEventWithCause", "mock"]}, "focal_class": {"identifier": "CausedFocusEventWrapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Enum<?> cause;", "modifier": "private final", "type": "Enum<?>", "declarator": "cause", "var_name": "cause"}], "methods": [{"identifier": "CausedFocusEventWrapper", "parameters": "(FocusEvent e)", "modifiers": "public", "return": "", "signature": " CausedFocusEventWrapper(FocusEvent e)", "full_signature": "public  CausedFocusEventWrapper(FocusEvent e)", "class_method_signature": "CausedFocusEventWrapper.CausedFocusEventWrapper(FocusEvent e)", "testcase": false, "constructor": true}, {"identifier": "CausedFocusEventWrapper", "parameters": "(Enum<?> cause)", "modifiers": "@VisibleForTesting", "return": "", "signature": " CausedFocusEventWrapper(Enum<?> cause)", "full_signature": "@VisibleForTesting  CausedFocusEventWrapper(Enum<?> cause)", "class_method_signature": "CausedFocusEventWrapper.CausedFocusEventWrapper(Enum<?> cause)", "testcase": false, "constructor": true}, {"identifier": "getCause", "parameters": "(FocusEvent e)", "modifiers": "@Nullable private", "return": "Enum<?>", "signature": "Enum<?> getCause(FocusEvent e)", "full_signature": "@Nullable private Enum<?> getCause(FocusEvent e)", "class_method_signature": "CausedFocusEventWrapper.getCause(FocusEvent e)", "testcase": false, "constructor": false}, {"identifier": "isTraversal", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTraversal()", "full_signature": "public boolean isTraversal()", "class_method_signature": "CausedFocusEventWrapper.isTraversal()", "testcase": false, "constructor": false}, {"identifier": "isTraversalForward", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTraversalForward()", "full_signature": "public boolean isTraversalForward()", "class_method_signature": "CausedFocusEventWrapper.isTraversalForward()", "testcase": false, "constructor": false}, {"identifier": "isTraversalBackward", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTraversalBackward()", "full_signature": "public boolean isTraversalBackward()", "class_method_signature": "CausedFocusEventWrapper.isTraversalBackward()", "testcase": false, "constructor": false}, {"identifier": "isTraversalUp", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTraversalUp()", "full_signature": "public boolean isTraversalUp()", "class_method_signature": "CausedFocusEventWrapper.isTraversalUp()", "testcase": false, "constructor": false}, {"identifier": "isTraversalDown", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTraversalDown()", "full_signature": "public boolean isTraversalDown()", "class_method_signature": "CausedFocusEventWrapper.isTraversalDown()", "testcase": false, "constructor": false}, {"identifier": "isFocusEventWithCause", "parameters": "(AWTEvent e)", "modifiers": "public static", "return": "boolean", "signature": "boolean isFocusEventWithCause(AWTEvent e)", "full_signature": "public static boolean isFocusEventWithCause(AWTEvent e)", "class_method_signature": "CausedFocusEventWrapper.isFocusEventWithCause(AWTEvent e)", "testcase": false, "constructor": false}, {"identifier": "newInstanceOrNull", "parameters": "(AWTEvent e)", "modifiers": "@Nullable public static", "return": "CausedFocusEventWrapper", "signature": "CausedFocusEventWrapper newInstanceOrNull(AWTEvent e)", "full_signature": "@Nullable public static CausedFocusEventWrapper newInstanceOrNull(AWTEvent e)", "class_method_signature": "CausedFocusEventWrapper.newInstanceOrNull(AWTEvent e)", "testcase": false, "constructor": false}], "file": "adt-ui/src/main/java/com/android/tools/adtui/util/CausedFocusEventWrapper.java"}, "focal_method": {"identifier": "isFocusEventWithCause", "parameters": "(AWTEvent e)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isFocusEventWithCause(AWTEvent e) {\n    if (SystemInfoRt.IS_AT_LEAST_JAVA9) {\n      // On Java9+ all the FocusEvents have cause.\n      return e instanceof FocusEvent;\n    }\n    else {\n      return e instanceof FocusEvent;\n    }\n  }", "signature": "boolean isFocusEventWithCause(AWTEvent e)", "full_signature": "public static boolean isFocusEventWithCause(AWTEvent e)", "class_method_signature": "CausedFocusEventWrapper.isFocusEventWithCause(AWTEvent e)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}