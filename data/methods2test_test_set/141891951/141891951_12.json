{"test_class": {"identifier": "DefaultMessageStoreTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String StoreMessage = \"Once, there was a chance for me!\";", "modifier": "private final", "type": "String", "declarator": "StoreMessage = \"Once, there was a chance for me!\"", "var_name": "StoreMessage"}, {"original_string": "private int QUEUE_TOTAL = 100;", "modifier": "private", "type": "int", "declarator": "QUEUE_TOTAL = 100", "var_name": "QUEUE_TOTAL"}, {"original_string": "private AtomicInteger QueueId = new AtomicInteger(0);", "modifier": "private", "type": "AtomicInteger", "declarator": "QueueId = new AtomicInteger(0)", "var_name": "QueueId"}, {"original_string": "private SocketAddress BornHost;", "modifier": "private", "type": "SocketAddress", "declarator": "BornHost", "var_name": "BornHost"}, {"original_string": "private SocketAddress StoreHost;", "modifier": "private", "type": "SocketAddress", "declarator": "StoreHost", "var_name": "StoreHost"}, {"original_string": "private byte[] MessageBody;", "modifier": "private", "type": "byte[]", "declarator": "MessageBody", "var_name": "MessageBody"}, {"original_string": "private MessageStore messageStore;", "modifier": "private", "type": "MessageStore", "declarator": "messageStore", "var_name": "messageStore"}], "file": "store/src/test/java/org/apache/rocketmq/store/DefaultMessageStoreTest.java"}, "test_case": {"identifier": "testReadOneScheduleMsg", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReadOneScheduleMsg() throws Exception {\n        long totalMsgs = 60000;\n        QUEUE_TOTAL = 10;\n        MessageExt msgExt =\n                messageStore.lookMessageByOffset(\n                \t\t9677008);\n        System.err.println(msgExt);\n        System.err.println(System.currentTimeMillis());\n        \n    }", "signature": "void testReadOneScheduleMsg()", "full_signature": "@Test public void testReadOneScheduleMsg()", "class_method_signature": "DefaultMessageStoreTest.testReadOneScheduleMsg()", "testcase": true, "constructor": false, "invocations": ["lookMessageByOffset", "println", "println", "currentTimeMillis"]}, "focal_class": {"identifier": "DefaultMessageStore", "superclass": "", "interfaces": "implements MessageStore", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(LoggerName.STORE_LOGGER_NAME);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(LoggerName.STORE_LOGGER_NAME)", "var_name": "log"}, {"original_string": "private final MessageStoreConfig messageStoreConfig;", "modifier": "private final", "type": "MessageStoreConfig", "declarator": "messageStoreConfig", "var_name": "messageStoreConfig"}, {"original_string": "private final CommitLog commitLog;", "modifier": "private final", "type": "CommitLog", "declarator": "commitLog", "var_name": "commitLog"}, {"original_string": "private final ConcurrentMap<String/* topic */, ConcurrentMap<Integer/* queueId */, ConsumeQueue>> consumeQueueTable;", "modifier": "private final", "type": "ConcurrentMap<String/* topic */, ConcurrentMap<Integer/* queueId */, ConsumeQueue>>", "declarator": "consumeQueueTable", "var_name": "consumeQueueTable"}, {"original_string": "private final FlushConsumeQueueService flushConsumeQueueService;", "modifier": "private final", "type": "FlushConsumeQueueService", "declarator": "flushConsumeQueueService", "var_name": "flushConsumeQueueService"}, {"original_string": "private final CleanCommitLogService cleanCommitLogService;", "modifier": "private final", "type": "CleanCommitLogService", "declarator": "cleanCommitLogService", "var_name": "cleanCommitLogService"}, {"original_string": "private final CleanConsumeQueueService cleanConsumeQueueService;", "modifier": "private final", "type": "CleanConsumeQueueService", "declarator": "cleanConsumeQueueService", "var_name": "cleanConsumeQueueService"}, {"original_string": "private final IndexService indexService;", "modifier": "private final", "type": "IndexService", "declarator": "indexService", "var_name": "indexService"}, {"original_string": "private final AllocateMappedFileService allocateMappedFileService;", "modifier": "private final", "type": "AllocateMappedFileService", "declarator": "allocateMappedFileService", "var_name": "allocateMappedFileService"}, {"original_string": "private final ReputMessageService reputMessageService;", "modifier": "private final", "type": "ReputMessageService", "declarator": "reputMessageService", "var_name": "reputMessageService"}, {"original_string": "private final HAService haService;", "modifier": "private final", "type": "HAService", "declarator": "haService", "var_name": "haService"}, {"original_string": "private final ScheduleMessageService scheduleMessageService;", "modifier": "private final", "type": "ScheduleMessageService", "declarator": "scheduleMessageService", "var_name": "scheduleMessageService"}, {"original_string": "private final StoreStatsService storeStatsService;", "modifier": "private final", "type": "StoreStatsService", "declarator": "storeStatsService", "var_name": "storeStatsService"}, {"original_string": "private final TransientStorePool transientStorePool;", "modifier": "private final", "type": "TransientStorePool", "declarator": "transientStorePool", "var_name": "transientStorePool"}, {"original_string": "private final RunningFlags runningFlags = new RunningFlags();", "modifier": "private final", "type": "RunningFlags", "declarator": "runningFlags = new RunningFlags()", "var_name": "runningFlags"}, {"original_string": "private final SystemClock systemClock = new SystemClock();", "modifier": "private final", "type": "SystemClock", "declarator": "systemClock = new SystemClock()", "var_name": "systemClock"}, {"original_string": "private final ScheduledExecutorService scheduledExecutorService =\n        Executors.newSingleThreadScheduledExecutor(new ThreadFactoryImpl(\"StoreScheduledThread\"));", "modifier": "private final", "type": "ScheduledExecutorService", "declarator": "scheduledExecutorService =\n        Executors.newSingleThreadScheduledExecutor(new ThreadFactoryImpl(\"StoreScheduledThread\"))", "var_name": "scheduledExecutorService"}, {"original_string": "private final BrokerStatsManager brokerStatsManager;", "modifier": "private final", "type": "BrokerStatsManager", "declarator": "brokerStatsManager", "var_name": "brokerStatsManager"}, {"original_string": "private final MessageArrivingListener messageArrivingListener;", "modifier": "private final", "type": "MessageArrivingListener", "declarator": "messageArrivingListener", "var_name": "messageArrivingListener"}, {"original_string": "private final BrokerConfig brokerConfig;", "modifier": "private final", "type": "BrokerConfig", "declarator": "brokerConfig", "var_name": "brokerConfig"}, {"original_string": "private volatile boolean shutdown = true;", "modifier": "private volatile", "type": "boolean", "declarator": "shutdown = true", "var_name": "shutdown"}, {"original_string": "private StoreCheckpoint storeCheckpoint;", "modifier": "private", "type": "StoreCheckpoint", "declarator": "storeCheckpoint", "var_name": "storeCheckpoint"}, {"original_string": "private AtomicLong printTimes = new AtomicLong(0);", "modifier": "private", "type": "AtomicLong", "declarator": "printTimes = new AtomicLong(0)", "var_name": "printTimes"}, {"original_string": "private final LinkedList<CommitLogDispatcher> dispatcherList;", "modifier": "private final", "type": "LinkedList<CommitLogDispatcher>", "declarator": "dispatcherList", "var_name": "dispatcherList"}, {"original_string": "private RandomAccessFile lockFile;", "modifier": "private", "type": "RandomAccessFile", "declarator": "lockFile", "var_name": "lockFile"}, {"original_string": "private FileLock lock;", "modifier": "private", "type": "FileLock", "declarator": "lock", "var_name": "lock"}, {"original_string": "boolean shutDownNormal = false;", "modifier": "", "type": "boolean", "declarator": "shutDownNormal = false", "var_name": "shutDownNormal"}], "methods": [{"identifier": "DefaultMessageStore", "parameters": "(final MessageStoreConfig messageStoreConfig, final BrokerStatsManager brokerStatsManager,\n        final MessageArrivingListener messageArrivingListener, final BrokerConfig brokerConfig)", "modifiers": "public", "return": "", "signature": " DefaultMessageStore(final MessageStoreConfig messageStoreConfig, final BrokerStatsManager brokerStatsManager,\n        final MessageArrivingListener messageArrivingListener, final BrokerConfig brokerConfig)", "full_signature": "public  DefaultMessageStore(final MessageStoreConfig messageStoreConfig, final BrokerStatsManager brokerStatsManager,\n        final MessageArrivingListener messageArrivingListener, final BrokerConfig brokerConfig)", "class_method_signature": "DefaultMessageStore.DefaultMessageStore(final MessageStoreConfig messageStoreConfig, final BrokerStatsManager brokerStatsManager,\n        final MessageArrivingListener messageArrivingListener, final BrokerConfig brokerConfig)", "testcase": false, "constructor": true}, {"identifier": "truncateDirtyLogicFiles", "parameters": "(long phyOffset)", "modifiers": "public", "return": "void", "signature": "void truncateDirtyLogicFiles(long phyOffset)", "full_signature": "public void truncateDirtyLogicFiles(long phyOffset)", "class_method_signature": "DefaultMessageStore.truncateDirtyLogicFiles(long phyOffset)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean load()", "full_signature": "public boolean load()", "class_method_signature": "DefaultMessageStore.load()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "DefaultMessageStore.start()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void shutdown()", "full_signature": "public void shutdown()", "class_method_signature": "DefaultMessageStore.shutdown()", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void destroy()", "full_signature": "public void destroy()", "class_method_signature": "DefaultMessageStore.destroy()", "testcase": false, "constructor": false}, {"identifier": "destroyLogics", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void destroyLogics()", "full_signature": "public void destroyLogics()", "class_method_signature": "DefaultMessageStore.destroyLogics()", "testcase": false, "constructor": false}, {"identifier": "putMessage", "parameters": "(MessageExtBrokerInner msg)", "modifiers": "public", "return": "PutMessageResult", "signature": "PutMessageResult putMessage(MessageExtBrokerInner msg)", "full_signature": "public PutMessageResult putMessage(MessageExtBrokerInner msg)", "class_method_signature": "DefaultMessageStore.putMessage(MessageExtBrokerInner msg)", "testcase": false, "constructor": false}, {"identifier": "putMessages", "parameters": "(MessageExtBatch messageExtBatch)", "modifiers": "public", "return": "PutMessageResult", "signature": "PutMessageResult putMessages(MessageExtBatch messageExtBatch)", "full_signature": "public PutMessageResult putMessages(MessageExtBatch messageExtBatch)", "class_method_signature": "DefaultMessageStore.putMessages(MessageExtBatch messageExtBatch)", "testcase": false, "constructor": false}, {"identifier": "isOSPageCacheBusy", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isOSPageCacheBusy()", "full_signature": "@Override public boolean isOSPageCacheBusy()", "class_method_signature": "DefaultMessageStore.isOSPageCacheBusy()", "testcase": false, "constructor": false}, {"identifier": "lockTimeMills", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long lockTimeMills()", "full_signature": "@Override public long lockTimeMills()", "class_method_signature": "DefaultMessageStore.lockTimeMills()", "testcase": false, "constructor": false}, {"identifier": "getSystemClock", "parameters": "()", "modifiers": "public", "return": "SystemClock", "signature": "SystemClock getSystemClock()", "full_signature": "public SystemClock getSystemClock()", "class_method_signature": "DefaultMessageStore.getSystemClock()", "testcase": false, "constructor": false}, {"identifier": "getCommitLog", "parameters": "()", "modifiers": "public", "return": "CommitLog", "signature": "CommitLog getCommitLog()", "full_signature": "public CommitLog getCommitLog()", "class_method_signature": "DefaultMessageStore.getCommitLog()", "testcase": false, "constructor": false}, {"identifier": "getMessage", "parameters": "(final String group, final String topic, final int queueId, final long offset,\n        final int maxMsgNums,\n        final MessageFilter messageFilter)", "modifiers": "public", "return": "GetMessageResult", "signature": "GetMessageResult getMessage(final String group, final String topic, final int queueId, final long offset,\n        final int maxMsgNums,\n        final MessageFilter messageFilter)", "full_signature": "public GetMessageResult getMessage(final String group, final String topic, final int queueId, final long offset,\n        final int maxMsgNums,\n        final MessageFilter messageFilter)", "class_method_signature": "DefaultMessageStore.getMessage(final String group, final String topic, final int queueId, final long offset,\n        final int maxMsgNums,\n        final MessageFilter messageFilter)", "testcase": false, "constructor": false}, {"identifier": "getMaxOffsetInQueue", "parameters": "(String topic, int queueId)", "modifiers": "public", "return": "long", "signature": "long getMaxOffsetInQueue(String topic, int queueId)", "full_signature": "public long getMaxOffsetInQueue(String topic, int queueId)", "class_method_signature": "DefaultMessageStore.getMaxOffsetInQueue(String topic, int queueId)", "testcase": false, "constructor": false}, {"identifier": "getMinOffsetInQueue", "parameters": "(String topic, int queueId)", "modifiers": "public", "return": "long", "signature": "long getMinOffsetInQueue(String topic, int queueId)", "full_signature": "public long getMinOffsetInQueue(String topic, int queueId)", "class_method_signature": "DefaultMessageStore.getMinOffsetInQueue(String topic, int queueId)", "testcase": false, "constructor": false}, {"identifier": "getCommitLogOffsetInQueue", "parameters": "(String topic, int queueId, long consumeQueueOffset)", "modifiers": "@Override public", "return": "long", "signature": "long getCommitLogOffsetInQueue(String topic, int queueId, long consumeQueueOffset)", "full_signature": "@Override public long getCommitLogOffsetInQueue(String topic, int queueId, long consumeQueueOffset)", "class_method_signature": "DefaultMessageStore.getCommitLogOffsetInQueue(String topic, int queueId, long consumeQueueOffset)", "testcase": false, "constructor": false}, {"identifier": "getOffsetInQueueByTime", "parameters": "(String topic, int queueId, long timestamp)", "modifiers": "public", "return": "long", "signature": "long getOffsetInQueueByTime(String topic, int queueId, long timestamp)", "full_signature": "public long getOffsetInQueueByTime(String topic, int queueId, long timestamp)", "class_method_signature": "DefaultMessageStore.getOffsetInQueueByTime(String topic, int queueId, long timestamp)", "testcase": false, "constructor": false}, {"identifier": "lookMessageByOffset", "parameters": "(long commitLogOffset)", "modifiers": "public", "return": "MessageExt", "signature": "MessageExt lookMessageByOffset(long commitLogOffset)", "full_signature": "public MessageExt lookMessageByOffset(long commitLogOffset)", "class_method_signature": "DefaultMessageStore.lookMessageByOffset(long commitLogOffset)", "testcase": false, "constructor": false}, {"identifier": "selectOneMessageByOffset", "parameters": "(long commitLogOffset)", "modifiers": "@Override public", "return": "SelectMappedBufferResult", "signature": "SelectMappedBufferResult selectOneMessageByOffset(long commitLogOffset)", "full_signature": "@Override public SelectMappedBufferResult selectOneMessageByOffset(long commitLogOffset)", "class_method_signature": "DefaultMessageStore.selectOneMessageByOffset(long commitLogOffset)", "testcase": false, "constructor": false}, {"identifier": "selectOneMessageByOffset", "parameters": "(long commitLogOffset, int msgSize)", "modifiers": "@Override public", "return": "SelectMappedBufferResult", "signature": "SelectMappedBufferResult selectOneMessageByOffset(long commitLogOffset, int msgSize)", "full_signature": "@Override public SelectMappedBufferResult selectOneMessageByOffset(long commitLogOffset, int msgSize)", "class_method_signature": "DefaultMessageStore.selectOneMessageByOffset(long commitLogOffset, int msgSize)", "testcase": false, "constructor": false}, {"identifier": "getRunningDataInfo", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRunningDataInfo()", "full_signature": "public String getRunningDataInfo()", "class_method_signature": "DefaultMessageStore.getRunningDataInfo()", "testcase": false, "constructor": false}, {"identifier": "getRuntimeInfo", "parameters": "()", "modifiers": "@Override public", "return": "HashMap<String, String>", "signature": "HashMap<String, String> getRuntimeInfo()", "full_signature": "@Override public HashMap<String, String> getRuntimeInfo()", "class_method_signature": "DefaultMessageStore.getRuntimeInfo()", "testcase": false, "constructor": false}, {"identifier": "getMaxPhyOffset", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getMaxPhyOffset()", "full_signature": "@Override public long getMaxPhyOffset()", "class_method_signature": "DefaultMessageStore.getMaxPhyOffset()", "testcase": false, "constructor": false}, {"identifier": "getMinPhyOffset", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getMinPhyOffset()", "full_signature": "@Override public long getMinPhyOffset()", "class_method_signature": "DefaultMessageStore.getMinPhyOffset()", "testcase": false, "constructor": false}, {"identifier": "getEarliestMessageTime", "parameters": "(String topic, int queueId)", "modifiers": "@Override public", "return": "long", "signature": "long getEarliestMessageTime(String topic, int queueId)", "full_signature": "@Override public long getEarliestMessageTime(String topic, int queueId)", "class_method_signature": "DefaultMessageStore.getEarliestMessageTime(String topic, int queueId)", "testcase": false, "constructor": false}, {"identifier": "getStoreTime", "parameters": "(SelectMappedBufferResult result)", "modifiers": "private", "return": "long", "signature": "long getStoreTime(SelectMappedBufferResult result)", "full_signature": "private long getStoreTime(SelectMappedBufferResult result)", "class_method_signature": "DefaultMessageStore.getStoreTime(SelectMappedBufferResult result)", "testcase": false, "constructor": false}, {"identifier": "getEarliestMessageTime", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getEarliestMessageTime()", "full_signature": "@Override public long getEarliestMessageTime()", "class_method_signature": "DefaultMessageStore.getEarliestMessageTime()", "testcase": false, "constructor": false}, {"identifier": "getMessageStoreTimeStamp", "parameters": "(String topic, int queueId, long consumeQueueOffset)", "modifiers": "@Override public", "return": "long", "signature": "long getMessageStoreTimeStamp(String topic, int queueId, long consumeQueueOffset)", "full_signature": "@Override public long getMessageStoreTimeStamp(String topic, int queueId, long consumeQueueOffset)", "class_method_signature": "DefaultMessageStore.getMessageStoreTimeStamp(String topic, int queueId, long consumeQueueOffset)", "testcase": false, "constructor": false}, {"identifier": "getMessageTotalInQueue", "parameters": "(String topic, int queueId)", "modifiers": "@Override public", "return": "long", "signature": "long getMessageTotalInQueue(String topic, int queueId)", "full_signature": "@Override public long getMessageTotalInQueue(String topic, int queueId)", "class_method_signature": "DefaultMessageStore.getMessageTotalInQueue(String topic, int queueId)", "testcase": false, "constructor": false}, {"identifier": "getCommitLogData", "parameters": "(final long offset)", "modifiers": "@Override public", "return": "SelectMappedBufferResult", "signature": "SelectMappedBufferResult getCommitLogData(final long offset)", "full_signature": "@Override public SelectMappedBufferResult getCommitLogData(final long offset)", "class_method_signature": "DefaultMessageStore.getCommitLogData(final long offset)", "testcase": false, "constructor": false}, {"identifier": "appendToCommitLog", "parameters": "(long startOffset, byte[] data)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean appendToCommitLog(long startOffset, byte[] data)", "full_signature": "@Override public boolean appendToCommitLog(long startOffset, byte[] data)", "class_method_signature": "DefaultMessageStore.appendToCommitLog(long startOffset, byte[] data)", "testcase": false, "constructor": false}, {"identifier": "executeDeleteFilesManually", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void executeDeleteFilesManually()", "full_signature": "@Override public void executeDeleteFilesManually()", "class_method_signature": "DefaultMessageStore.executeDeleteFilesManually()", "testcase": false, "constructor": false}, {"identifier": "queryMessage", "parameters": "(String topic, String key, int maxNum, long begin, long end)", "modifiers": "@Override public", "return": "QueryMessageResult", "signature": "QueryMessageResult queryMessage(String topic, String key, int maxNum, long begin, long end)", "full_signature": "@Override public QueryMessageResult queryMessage(String topic, String key, int maxNum, long begin, long end)", "class_method_signature": "DefaultMessageStore.queryMessage(String topic, String key, int maxNum, long begin, long end)", "testcase": false, "constructor": false}, {"identifier": "updateHaMasterAddress", "parameters": "(String newAddr)", "modifiers": "@Override public", "return": "void", "signature": "void updateHaMasterAddress(String newAddr)", "full_signature": "@Override public void updateHaMasterAddress(String newAddr)", "class_method_signature": "DefaultMessageStore.updateHaMasterAddress(String newAddr)", "testcase": false, "constructor": false}, {"identifier": "slaveFallBehindMuch", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long slaveFallBehindMuch()", "full_signature": "@Override public long slaveFallBehindMuch()", "class_method_signature": "DefaultMessageStore.slaveFallBehindMuch()", "testcase": false, "constructor": false}, {"identifier": "now", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long now()", "full_signature": "@Override public long now()", "class_method_signature": "DefaultMessageStore.now()", "testcase": false, "constructor": false}, {"identifier": "cleanUnusedTopic", "parameters": "(Set<String> topics)", "modifiers": "@Override public", "return": "int", "signature": "int cleanUnusedTopic(Set<String> topics)", "full_signature": "@Override public int cleanUnusedTopic(Set<String> topics)", "class_method_signature": "DefaultMessageStore.cleanUnusedTopic(Set<String> topics)", "testcase": false, "constructor": false}, {"identifier": "cleanExpiredConsumerQueue", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void cleanExpiredConsumerQueue()", "full_signature": "public void cleanExpiredConsumerQueue()", "class_method_signature": "DefaultMessageStore.cleanExpiredConsumerQueue()", "testcase": false, "constructor": false}, {"identifier": "getMessageIds", "parameters": "(final String topic, final int queueId, long minOffset, long maxOffset,\n        SocketAddress storeHost)", "modifiers": "public", "return": "Map<String, Long>", "signature": "Map<String, Long> getMessageIds(final String topic, final int queueId, long minOffset, long maxOffset,\n        SocketAddress storeHost)", "full_signature": "public Map<String, Long> getMessageIds(final String topic, final int queueId, long minOffset, long maxOffset,\n        SocketAddress storeHost)", "class_method_signature": "DefaultMessageStore.getMessageIds(final String topic, final int queueId, long minOffset, long maxOffset,\n        SocketAddress storeHost)", "testcase": false, "constructor": false}, {"identifier": "checkInDiskByConsumeOffset", "parameters": "(final String topic, final int queueId, long consumeOffset)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean checkInDiskByConsumeOffset(final String topic, final int queueId, long consumeOffset)", "full_signature": "@Override public boolean checkInDiskByConsumeOffset(final String topic, final int queueId, long consumeOffset)", "class_method_signature": "DefaultMessageStore.checkInDiskByConsumeOffset(final String topic, final int queueId, long consumeOffset)", "testcase": false, "constructor": false}, {"identifier": "dispatchBehindBytes", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long dispatchBehindBytes()", "full_signature": "public long dispatchBehindBytes()", "class_method_signature": "DefaultMessageStore.dispatchBehindBytes()", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long flush()", "full_signature": "@Override public long flush()", "class_method_signature": "DefaultMessageStore.flush()", "testcase": false, "constructor": false}, {"identifier": "resetWriteOffset", "parameters": "(long phyOffset)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean resetWriteOffset(long phyOffset)", "full_signature": "@Override public boolean resetWriteOffset(long phyOffset)", "class_method_signature": "DefaultMessageStore.resetWriteOffset(long phyOffset)", "testcase": false, "constructor": false}, {"identifier": "getConfirmOffset", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getConfirmOffset()", "full_signature": "@Override public long getConfirmOffset()", "class_method_signature": "DefaultMessageStore.getConfirmOffset()", "testcase": false, "constructor": false}, {"identifier": "setConfirmOffset", "parameters": "(long phyOffset)", "modifiers": "@Override public", "return": "void", "signature": "void setConfirmOffset(long phyOffset)", "full_signature": "@Override public void setConfirmOffset(long phyOffset)", "class_method_signature": "DefaultMessageStore.setConfirmOffset(long phyOffset)", "testcase": false, "constructor": false}, {"identifier": "lookMessageByOffset", "parameters": "(long commitLogOffset, int size)", "modifiers": "public", "return": "MessageExt", "signature": "MessageExt lookMessageByOffset(long commitLogOffset, int size)", "full_signature": "public MessageExt lookMessageByOffset(long commitLogOffset, int size)", "class_method_signature": "DefaultMessageStore.lookMessageByOffset(long commitLogOffset, int size)", "testcase": false, "constructor": false}, {"identifier": "findConsumeQueue", "parameters": "(String topic, int queueId)", "modifiers": "public", "return": "ConsumeQueue", "signature": "ConsumeQueue findConsumeQueue(String topic, int queueId)", "full_signature": "public ConsumeQueue findConsumeQueue(String topic, int queueId)", "class_method_signature": "DefaultMessageStore.findConsumeQueue(String topic, int queueId)", "testcase": false, "constructor": false}, {"identifier": "nextOffsetCorrection", "parameters": "(long oldOffset, long newOffset)", "modifiers": "private", "return": "long", "signature": "long nextOffsetCorrection(long oldOffset, long newOffset)", "full_signature": "private long nextOffsetCorrection(long oldOffset, long newOffset)", "class_method_signature": "DefaultMessageStore.nextOffsetCorrection(long oldOffset, long newOffset)", "testcase": false, "constructor": false}, {"identifier": "checkInDiskByCommitOffset", "parameters": "(long offsetPy, long maxOffsetPy)", "modifiers": "private", "return": "boolean", "signature": "boolean checkInDiskByCommitOffset(long offsetPy, long maxOffsetPy)", "full_signature": "private boolean checkInDiskByCommitOffset(long offsetPy, long maxOffsetPy)", "class_method_signature": "DefaultMessageStore.checkInDiskByCommitOffset(long offsetPy, long maxOffsetPy)", "testcase": false, "constructor": false}, {"identifier": "isTheBatchFull", "parameters": "(int sizePy, int maxMsgNums, int bufferTotal, int messageTotal, boolean isInDisk)", "modifiers": "private", "return": "boolean", "signature": "boolean isTheBatchFull(int sizePy, int maxMsgNums, int bufferTotal, int messageTotal, boolean isInDisk)", "full_signature": "private boolean isTheBatchFull(int sizePy, int maxMsgNums, int bufferTotal, int messageTotal, boolean isInDisk)", "class_method_signature": "DefaultMessageStore.isTheBatchFull(int sizePy, int maxMsgNums, int bufferTotal, int messageTotal, boolean isInDisk)", "testcase": false, "constructor": false}, {"identifier": "deleteFile", "parameters": "(final String fileName)", "modifiers": "private", "return": "void", "signature": "void deleteFile(final String fileName)", "full_signature": "private void deleteFile(final String fileName)", "class_method_signature": "DefaultMessageStore.deleteFile(final String fileName)", "testcase": false, "constructor": false}, {"identifier": "createTempFile", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createTempFile()", "full_signature": "private void createTempFile()", "class_method_signature": "DefaultMessageStore.createTempFile()", "testcase": false, "constructor": false}, {"identifier": "addScheduleTask", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void addScheduleTask()", "full_signature": "private void addScheduleTask()", "class_method_signature": "DefaultMessageStore.addScheduleTask()", "testcase": false, "constructor": false}, {"identifier": "cleanFilesPeriodically", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void cleanFilesPeriodically()", "full_signature": "private void cleanFilesPeriodically()", "class_method_signature": "DefaultMessageStore.cleanFilesPeriodically()", "testcase": false, "constructor": false}, {"identifier": "checkSelf", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkSelf()", "full_signature": "private void checkSelf()", "class_method_signature": "DefaultMessageStore.checkSelf()", "testcase": false, "constructor": false}, {"identifier": "isTempFileExist", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isTempFileExist()", "full_signature": "private boolean isTempFileExist()", "class_method_signature": "DefaultMessageStore.isTempFileExist()", "testcase": false, "constructor": false}, {"identifier": "loadConsumeQueue", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean loadConsumeQueue()", "full_signature": "private boolean loadConsumeQueue()", "class_method_signature": "DefaultMessageStore.loadConsumeQueue()", "testcase": false, "constructor": false}, {"identifier": "recover", "parameters": "(final boolean lastExitOK)", "modifiers": "private", "return": "void", "signature": "void recover(final boolean lastExitOK)", "full_signature": "private void recover(final boolean lastExitOK)", "class_method_signature": "DefaultMessageStore.recover(final boolean lastExitOK)", "testcase": false, "constructor": false}, {"identifier": "getMessageStoreConfig", "parameters": "()", "modifiers": "public", "return": "MessageStoreConfig", "signature": "MessageStoreConfig getMessageStoreConfig()", "full_signature": "public MessageStoreConfig getMessageStoreConfig()", "class_method_signature": "DefaultMessageStore.getMessageStoreConfig()", "testcase": false, "constructor": false}, {"identifier": "getTransientStorePool", "parameters": "()", "modifiers": "public", "return": "TransientStorePool", "signature": "TransientStorePool getTransientStorePool()", "full_signature": "public TransientStorePool getTransientStorePool()", "class_method_signature": "DefaultMessageStore.getTransientStorePool()", "testcase": false, "constructor": false}, {"identifier": "putConsumeQueue", "parameters": "(final String topic, final int queueId, final ConsumeQueue consumeQueue)", "modifiers": "private", "return": "void", "signature": "void putConsumeQueue(final String topic, final int queueId, final ConsumeQueue consumeQueue)", "full_signature": "private void putConsumeQueue(final String topic, final int queueId, final ConsumeQueue consumeQueue)", "class_method_signature": "DefaultMessageStore.putConsumeQueue(final String topic, final int queueId, final ConsumeQueue consumeQueue)", "testcase": false, "constructor": false}, {"identifier": "recoverConsumeQueue", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void recoverConsumeQueue()", "full_signature": "private void recoverConsumeQueue()", "class_method_signature": "DefaultMessageStore.recoverConsumeQueue()", "testcase": false, "constructor": false}, {"identifier": "recoverTopicQueueTable", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void recoverTopicQueueTable()", "full_signature": "private void recoverTopicQueueTable()", "class_method_signature": "DefaultMessageStore.recoverTopicQueueTable()", "testcase": false, "constructor": false}, {"identifier": "getAllocateMappedFileService", "parameters": "()", "modifiers": "public", "return": "AllocateMappedFileService", "signature": "AllocateMappedFileService getAllocateMappedFileService()", "full_signature": "public AllocateMappedFileService getAllocateMappedFileService()", "class_method_signature": "DefaultMessageStore.getAllocateMappedFileService()", "testcase": false, "constructor": false}, {"identifier": "getStoreStatsService", "parameters": "()", "modifiers": "public", "return": "StoreStatsService", "signature": "StoreStatsService getStoreStatsService()", "full_signature": "public StoreStatsService getStoreStatsService()", "class_method_signature": "DefaultMessageStore.getStoreStatsService()", "testcase": false, "constructor": false}, {"identifier": "getAccessRights", "parameters": "()", "modifiers": "public", "return": "RunningFlags", "signature": "RunningFlags getAccessRights()", "full_signature": "public RunningFlags getAccessRights()", "class_method_signature": "DefaultMessageStore.getAccessRights()", "testcase": false, "constructor": false}, {"identifier": "getConsumeQueueTable", "parameters": "()", "modifiers": "public", "return": "ConcurrentMap<String, ConcurrentMap<Integer, ConsumeQueue>>", "signature": "ConcurrentMap<String, ConcurrentMap<Integer, ConsumeQueue>> getConsumeQueueTable()", "full_signature": "public ConcurrentMap<String, ConcurrentMap<Integer, ConsumeQueue>> getConsumeQueueTable()", "class_method_signature": "DefaultMessageStore.getConsumeQueueTable()", "testcase": false, "constructor": false}, {"identifier": "getStoreCheckpoint", "parameters": "()", "modifiers": "public", "return": "StoreCheckpoint", "signature": "StoreCheckpoint getStoreCheckpoint()", "full_signature": "public StoreCheckpoint getStoreCheckpoint()", "class_method_signature": "DefaultMessageStore.getStoreCheckpoint()", "testcase": false, "constructor": false}, {"identifier": "getHaService", "parameters": "()", "modifiers": "public", "return": "HAService", "signature": "HAService getHaService()", "full_signature": "public HAService getHaService()", "class_method_signature": "DefaultMessageStore.getHaService()", "testcase": false, "constructor": false}, {"identifier": "getScheduleMessageService", "parameters": "()", "modifiers": "public", "return": "ScheduleMessageService", "signature": "ScheduleMessageService getScheduleMessageService()", "full_signature": "public ScheduleMessageService getScheduleMessageService()", "class_method_signature": "DefaultMessageStore.getScheduleMessageService()", "testcase": false, "constructor": false}, {"identifier": "getRunningFlags", "parameters": "()", "modifiers": "public", "return": "RunningFlags", "signature": "RunningFlags getRunningFlags()", "full_signature": "public RunningFlags getRunningFlags()", "class_method_signature": "DefaultMessageStore.getRunningFlags()", "testcase": false, "constructor": false}, {"identifier": "doDispatch", "parameters": "(DispatchRequest req)", "modifiers": "public", "return": "void", "signature": "void doDispatch(DispatchRequest req)", "full_signature": "public void doDispatch(DispatchRequest req)", "class_method_signature": "DefaultMessageStore.doDispatch(DispatchRequest req)", "testcase": false, "constructor": false}, {"identifier": "putMessagePositionInfo", "parameters": "(DispatchRequest dispatchRequest)", "modifiers": "public", "return": "void", "signature": "void putMessagePositionInfo(DispatchRequest dispatchRequest)", "full_signature": "public void putMessagePositionInfo(DispatchRequest dispatchRequest)", "class_method_signature": "DefaultMessageStore.putMessagePositionInfo(DispatchRequest dispatchRequest)", "testcase": false, "constructor": false}, {"identifier": "getBrokerStatsManager", "parameters": "()", "modifiers": "public", "return": "BrokerStatsManager", "signature": "BrokerStatsManager getBrokerStatsManager()", "full_signature": "public BrokerStatsManager getBrokerStatsManager()", "class_method_signature": "DefaultMessageStore.getBrokerStatsManager()", "testcase": false, "constructor": false}, {"identifier": "remainTransientStoreBufferNumbs", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int remainTransientStoreBufferNumbs()", "full_signature": "public int remainTransientStoreBufferNumbs()", "class_method_signature": "DefaultMessageStore.remainTransientStoreBufferNumbs()", "testcase": false, "constructor": false}, {"identifier": "isTransientStorePoolDeficient", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isTransientStorePoolDeficient()", "full_signature": "@Override public boolean isTransientStorePoolDeficient()", "class_method_signature": "DefaultMessageStore.isTransientStorePoolDeficient()", "testcase": false, "constructor": false}, {"identifier": "getDispatcherList", "parameters": "()", "modifiers": "@Override public", "return": "LinkedList<CommitLogDispatcher>", "signature": "LinkedList<CommitLogDispatcher> getDispatcherList()", "full_signature": "@Override public LinkedList<CommitLogDispatcher> getDispatcherList()", "class_method_signature": "DefaultMessageStore.getDispatcherList()", "testcase": false, "constructor": false}, {"identifier": "getConsumeQueue", "parameters": "(String topic, int queueId)", "modifiers": "@Override public", "return": "ConsumeQueue", "signature": "ConsumeQueue getConsumeQueue(String topic, int queueId)", "full_signature": "@Override public ConsumeQueue getConsumeQueue(String topic, int queueId)", "class_method_signature": "DefaultMessageStore.getConsumeQueue(String topic, int queueId)", "testcase": false, "constructor": false}, {"identifier": "unlockMappedFile", "parameters": "(final MappedFile mappedFile)", "modifiers": "public", "return": "void", "signature": "void unlockMappedFile(final MappedFile mappedFile)", "full_signature": "public void unlockMappedFile(final MappedFile mappedFile)", "class_method_signature": "DefaultMessageStore.unlockMappedFile(final MappedFile mappedFile)", "testcase": false, "constructor": false}], "file": "store/src/main/java/org/apache/rocketmq/store/DefaultMessageStore.java"}, "focal_method": {"identifier": "lookMessageByOffset", "parameters": "(long commitLogOffset)", "modifiers": "public", "return": "MessageExt", "body": "public MessageExt lookMessageByOffset(long commitLogOffset) {\n        SelectMappedBufferResult sbr = this.commitLog.getMessage(commitLogOffset, 4);\n        if (null != sbr) {\n            try {\n                // 1 TOTALSIZE\n                int size = sbr.getByteBuffer().getInt();\n                return lookMessageByOffset(commitLogOffset, size);\n            } finally {\n                sbr.release();\n            }\n        }\n\n        return null;\n    }", "signature": "MessageExt lookMessageByOffset(long commitLogOffset)", "full_signature": "public MessageExt lookMessageByOffset(long commitLogOffset)", "class_method_signature": "DefaultMessageStore.lookMessageByOffset(long commitLogOffset)", "testcase": false, "constructor": false, "invocations": ["getMessage", "getInt", "getByteBuffer", "lookMessageByOffset", "release"]}, "repository": {"repo_id": 141891951, "url": "https://github.com/longlong524/store", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 9, "size": 122, "license": "licensed"}}