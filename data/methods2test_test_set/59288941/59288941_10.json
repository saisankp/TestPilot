{"test_class": {"identifier": "MySqlInsertParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RouteService routeService = new RouteService();", "modifier": "private", "type": "RouteService", "declarator": "routeService = new RouteService()", "var_name": "routeService"}, {"original_string": "SqlParser parser = SqlParserFactory.getParser(SqlType.INSERT);", "modifier": "", "type": "SqlParser", "declarator": "parser = SqlParserFactory.getParser(SqlType.INSERT)", "var_name": "parser"}], "file": "baymax-core/src/test/java/com/tongbanjie/baymax/parser/mysql/MySqlInsertParserTest.java"}, "test_case": {"identifier": "testParse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParse() throws Exception {\n        test(InsertTestSql.i1);\n\n    }", "signature": "void testParse()", "full_signature": "@Test public void testParse()", "class_method_signature": "MySqlInsertParserTest.testParse()", "testcase": true, "constructor": false, "invocations": ["test"]}, "focal_class": {"identifier": "MySqlInsertParser", "superclass": "extends MySqlSqlParser", "interfaces": "", "fields": [], "methods": [{"identifier": "parse", "parameters": "(ParseResult result)", "modifiers": "@Override public", "return": "void", "signature": "void parse(ParseResult result)", "full_signature": "@Override public void parse(ParseResult result)", "class_method_signature": "MySqlInsertParser.parse(ParseResult result)", "testcase": false, "constructor": false}, {"identifier": "isMultiInsert", "parameters": "(MySqlInsertStatement insertStmt)", "modifiers": "private", "return": "boolean", "signature": "boolean isMultiInsert(MySqlInsertStatement insertStmt)", "full_signature": "private boolean isMultiInsert(MySqlInsertStatement insertStmt)", "class_method_signature": "MySqlInsertParser.isMultiInsert(MySqlInsertStatement insertStmt)", "testcase": false, "constructor": false}, {"identifier": "parserSingleInsert", "parameters": "(String tableName, MySqlInsertStatement insertStmt)", "modifiers": "private", "return": "List<CalculateUnit>", "signature": "List<CalculateUnit> parserSingleInsert(String tableName, MySqlInsertStatement insertStmt)", "full_signature": "private List<CalculateUnit> parserSingleInsert(String tableName, MySqlInsertStatement insertStmt)", "class_method_signature": "MySqlInsertParser.parserSingleInsert(String tableName, MySqlInsertStatement insertStmt)", "testcase": false, "constructor": false}, {"identifier": "changeSql", "parameters": "(ParseResult result, ExecutePlan plan)", "modifiers": "@Override public", "return": "void", "signature": "void changeSql(ParseResult result, ExecutePlan plan)", "full_signature": "@Override public void changeSql(ParseResult result, ExecutePlan plan)", "class_method_signature": "MySqlInsertParser.changeSql(ParseResult result, ExecutePlan plan)", "testcase": false, "constructor": false}], "file": "baymax-core/src/main/java/com/tongbanjie/baymax/parser/mysql/MySqlInsertParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(ParseResult result)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void parse(ParseResult result) {\n\n        // \u89e3\u6790sql\n        statement = parser.parseStatement();\n\n        MySqlInsertStatement insert = (MySqlInsertStatement)statement;\n\n        String tableName = StringUtil.removeBackquote(insert.getTableName().getSimpleName());\n\n        result.addTable(tableName);\n\n        // \u4e0d\u662f\u5206\u533a\u8868\n        if (!BaymaxContext.isPartitionTable(tableName)){\n            return;\n        }\n\n        if (isMultiInsert(insert)){\n            // \u6279\u91cf\u63d2\u5165\n            throw new UnsupportedOperationException(\"\u5206\u533a\u8868\u4e0d\u652f\u6301insert into ...values (),()...\u6216 insert into ...select.....\u5f62\u5f0f\u7684\u6279\u91cf\u63d2\u5165\");\n        }else {\n            // \u5355\u6761\u63d2\u5165\n            result.setCalculateUnits(parserSingleInsert(tableName, insert));\n        }\n    }", "signature": "void parse(ParseResult result)", "full_signature": "@Override public void parse(ParseResult result)", "class_method_signature": "MySqlInsertParser.parse(ParseResult result)", "testcase": false, "constructor": false, "invocations": ["parseStatement", "removeBackquote", "getSimpleName", "getTableName", "addTable", "isPartitionTable", "isMultiInsert", "setCalculateUnits", "parserSingleInsert"]}, "repository": {"repo_id": 59288941, "url": "https://github.com/tongbanjie/baymax", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 45, "size": 1578, "license": "licensed"}}