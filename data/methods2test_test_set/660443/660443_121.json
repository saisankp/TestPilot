{"test_class": {"identifier": "TextOutlineTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Font font = new Font(\"Verdana\", Font.PLAIN, 12);", "modifier": "private final", "type": "Font", "declarator": "font = new Font(\"Verdana\", Font.PLAIN, 12)", "var_name": "font"}], "file": "display/renderbasic/src/test/java/org/openscience/cdk/renderer/generators/standard/TextOutlineTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToString() throws Exception {\n        TextOutline outline = new TextOutline(\"Cl\", font);\n        Rectangle2D bounds = outline.getBounds();\n        assertThat(outline.toString(), is(\"Cl [x=\" + toString(bounds.getX()) + \", y=\" + toString(bounds.getY())\n                + \", w=\" + toString(bounds.getWidth()) + \", h=\" + toString(bounds.getHeight()) + \"]\"));\n    }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "TextOutlineTest.testToString()", "testcase": true, "constructor": false, "invocations": ["getBounds", "assertThat", "toString", "is", "toString", "getX", "toString", "getY", "toString", "getWidth", "toString", "getHeight"]}, "focal_class": {"identifier": "TextOutline", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final FontRenderContext FONT_RENDER_CONTEXT = new FontRenderContext(new AffineTransform(), true, true);", "modifier": "public static final", "type": "FontRenderContext", "declarator": "FONT_RENDER_CONTEXT = new FontRenderContext(new AffineTransform(), true, true)", "var_name": "FONT_RENDER_CONTEXT"}, {"original_string": "private final String          text;", "modifier": "private final", "type": "String", "declarator": "text", "var_name": "text"}, {"original_string": "private final GlyphVector     glyphs;", "modifier": "private final", "type": "GlyphVector", "declarator": "glyphs", "var_name": "glyphs"}, {"original_string": "private final Shape           outline;", "modifier": "private final", "type": "Shape", "declarator": "outline", "var_name": "outline"}, {"original_string": "private final AffineTransform transform;", "modifier": "private final", "type": "AffineTransform", "declarator": "transform", "var_name": "transform"}], "methods": [{"identifier": "TextOutline", "parameters": "(final String text, final Font font)", "modifiers": "", "return": "", "signature": " TextOutline(final String text, final Font font)", "full_signature": "  TextOutline(final String text, final Font font)", "class_method_signature": "TextOutline.TextOutline(final String text, final Font font)", "testcase": false, "constructor": true}, {"identifier": "TextOutline", "parameters": "(String text, GlyphVector glyphs)", "modifiers": "", "return": "", "signature": " TextOutline(String text, GlyphVector glyphs)", "full_signature": "  TextOutline(String text, GlyphVector glyphs)", "class_method_signature": "TextOutline.TextOutline(String text, GlyphVector glyphs)", "testcase": false, "constructor": true}, {"identifier": "TextOutline", "parameters": "(String text, GlyphVector glyphs, Shape outline, AffineTransform transform)", "modifiers": "private", "return": "", "signature": " TextOutline(String text, GlyphVector glyphs, Shape outline, AffineTransform transform)", "full_signature": "private  TextOutline(String text, GlyphVector glyphs, Shape outline, AffineTransform transform)", "class_method_signature": "TextOutline.TextOutline(String text, GlyphVector glyphs, Shape outline, AffineTransform transform)", "testcase": false, "constructor": true}, {"identifier": "text", "parameters": "()", "modifiers": "", "return": "String", "signature": "String text()", "full_signature": " String text()", "class_method_signature": "TextOutline.text()", "testcase": false, "constructor": false}, {"identifier": "getOutline", "parameters": "()", "modifiers": "", "return": "Shape", "signature": "Shape getOutline()", "full_signature": " Shape getOutline()", "class_method_signature": "TextOutline.getOutline()", "testcase": false, "constructor": false}, {"identifier": "getBounds", "parameters": "()", "modifiers": "", "return": "Rectangle2D", "signature": "Rectangle2D getBounds()", "full_signature": " Rectangle2D getBounds()", "class_method_signature": "TextOutline.getBounds()", "testcase": false, "constructor": false}, {"identifier": "getLogicalBounds", "parameters": "()", "modifiers": "", "return": "Rectangle2D", "signature": "Rectangle2D getLogicalBounds()", "full_signature": " Rectangle2D getLogicalBounds()", "class_method_signature": "TextOutline.getLogicalBounds()", "testcase": false, "constructor": false}, {"identifier": "transformedBounds", "parameters": "(Shape shape)", "modifiers": "private", "return": "Rectangle2D", "signature": "Rectangle2D transformedBounds(Shape shape)", "full_signature": "private Rectangle2D transformedBounds(Shape shape)", "class_method_signature": "TextOutline.transformedBounds(Shape shape)", "testcase": false, "constructor": false}, {"identifier": "getCenter", "parameters": "()", "modifiers": "", "return": "Point2D", "signature": "Point2D getCenter()", "full_signature": " Point2D getCenter()", "class_method_signature": "TextOutline.getCenter()", "testcase": false, "constructor": false}, {"identifier": "getFirstGlyphCenter", "parameters": "()", "modifiers": "", "return": "Point2D", "signature": "Point2D getFirstGlyphCenter()", "full_signature": " Point2D getFirstGlyphCenter()", "class_method_signature": "TextOutline.getFirstGlyphCenter()", "testcase": false, "constructor": false}, {"identifier": "getLastGlyphCenter", "parameters": "()", "modifiers": "", "return": "Point2D", "signature": "Point2D getLastGlyphCenter()", "full_signature": " Point2D getLastGlyphCenter()", "class_method_signature": "TextOutline.getLastGlyphCenter()", "testcase": false, "constructor": false}, {"identifier": "getGlyphCenter", "parameters": "(final int index)", "modifiers": "private", "return": "Point2D", "signature": "Point2D getGlyphCenter(final int index)", "full_signature": "private Point2D getGlyphCenter(final int index)", "class_method_signature": "TextOutline.getGlyphCenter(final int index)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(AffineTransform nextTransform)", "modifiers": "", "return": "TextOutline", "signature": "TextOutline transform(AffineTransform nextTransform)", "full_signature": " TextOutline transform(AffineTransform nextTransform)", "class_method_signature": "TextOutline.transform(AffineTransform nextTransform)", "testcase": false, "constructor": false}, {"identifier": "resize", "parameters": "(final double scaleX, final double scaleY)", "modifiers": "", "return": "TextOutline", "signature": "TextOutline resize(final double scaleX, final double scaleY)", "full_signature": " TextOutline resize(final double scaleX, final double scaleY)", "class_method_signature": "TextOutline.resize(final double scaleX, final double scaleY)", "testcase": false, "constructor": false}, {"identifier": "translate", "parameters": "(final double translateX, final double translateY)", "modifiers": "", "return": "TextOutline", "signature": "TextOutline translate(final double translateX, final double translateY)", "full_signature": " TextOutline translate(final double translateX, final double translateY)", "class_method_signature": "TextOutline.translate(final double translateX, final double translateY)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TextOutline.toString()", "testcase": false, "constructor": false}, {"identifier": "formatDouble", "parameters": "(double value)", "modifiers": "static", "return": "String", "signature": "String formatDouble(double value)", "full_signature": "static String formatDouble(double value)", "class_method_signature": "TextOutline.formatDouble(double value)", "testcase": false, "constructor": false}], "file": "display/renderbasic/src/main/java/org/openscience/cdk/renderer/generators/standard/TextOutline.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        final Rectangle2D bounds = getBounds();\n        final StringBuilder sb = new StringBuilder(25);\n        sb.append(text);\n        sb.append(\" [x=\").append(formatDouble(bounds.getX()));\n        sb.append(\", y=\").append(formatDouble(bounds.getY()));\n        sb.append(\", w=\").append(formatDouble(bounds.getWidth()));\n        sb.append(\", h=\").append(formatDouble(bounds.getHeight()));\n        sb.append(']');\n        return sb.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TextOutline.toString()", "testcase": false, "constructor": false, "invocations": ["getBounds", "append", "append", "append", "formatDouble", "getX", "append", "append", "formatDouble", "getY", "append", "append", "formatDouble", "getWidth", "append", "append", "formatDouble", "getHeight", "append", "toString"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}