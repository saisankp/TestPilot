{"test_class": {"identifier": "RpcRequestMatchersTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock RpcRequest request;", "modifier": "@Mock", "type": "RpcRequest", "declarator": "request", "var_name": "request"}], "file": "instrumentation/rpc/src/test/java/brave/rpc/RpcRequestMatchersTest.java"}, "test_case": {"identifier": "methodEquals_matched", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void methodEquals_matched() {\n    when(request.method()).thenReturn(\"Check\");\n\n    assertThat(methodEquals(\"Check\").matches(request)).isTrue();\n  }", "signature": "void methodEquals_matched()", "full_signature": "@Test public void methodEquals_matched()", "class_method_signature": "RpcRequestMatchersTest.methodEquals_matched()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "method", "isTrue", "assertThat", "matches", "methodEquals"]}, "focal_class": {"identifier": "RpcRequestMatchers", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "methodEquals", "parameters": "(String method)", "modifiers": "public static", "return": "Matcher<Req>", "signature": "Matcher<Req> methodEquals(String method)", "full_signature": "public static Matcher<Req> methodEquals(String method)", "class_method_signature": "RpcRequestMatchers.methodEquals(String method)", "testcase": false, "constructor": false}, {"identifier": "serviceEquals", "parameters": "(String service)", "modifiers": "public static", "return": "Matcher<Req>", "signature": "Matcher<Req> serviceEquals(String service)", "full_signature": "public static Matcher<Req> serviceEquals(String service)", "class_method_signature": "RpcRequestMatchers.serviceEquals(String service)", "testcase": false, "constructor": false}], "file": "instrumentation/rpc/src/main/java/brave/rpc/RpcRequestMatchers.java"}, "focal_method": {"identifier": "methodEquals", "parameters": "(String method)", "modifiers": "public static", "return": "Matcher<Req>", "body": "public static <Req extends RpcRequest> Matcher<Req> methodEquals(String method) {\n    if (method == null) throw new NullPointerException(\"method == null\");\n    if (method.isEmpty()) throw new NullPointerException(\"method is empty\");\n    return new RpcMethodEquals<>(method);\n  }", "signature": "Matcher<Req> methodEquals(String method)", "full_signature": "public static Matcher<Req> methodEquals(String method)", "class_method_signature": "RpcRequestMatchers.methodEquals(String method)", "testcase": false, "constructor": false, "invocations": ["isEmpty"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}