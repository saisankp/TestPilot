{"test_class": {"identifier": "ErrorInterceptorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String URL = \"https://api.tapglue.com\";", "modifier": "private static final", "type": "String", "declarator": "URL = \"https://api.tapglue.com\"", "var_name": "URL"}, {"original_string": "@Mock\n    Interceptor.Chain chain;", "modifier": "@Mock", "type": "Interceptor.Chain", "declarator": "chain", "var_name": "chain"}, {"original_string": "ErrorInterceptor interceptor = new ErrorInterceptor();", "modifier": "", "type": "ErrorInterceptor", "declarator": "interceptor = new ErrorInterceptor()", "var_name": "interceptor"}], "file": "tapglue-android-sdk/src/test/java/com/tapglue/android/http/ErrorInterceptorTest.java"}, "test_case": {"identifier": "throwsExceptionWhenError", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void throwsExceptionWhenError() throws Exception {\n        Request request = new Request.Builder()\n                .url(URL).build();\n        MediaType appJson = MediaType.parse(\"application/json\");\n        Response response = new Response.Builder()\n                .code(401)\n                .protocol(Protocol.HTTP_1_1)\n                .request(request)\n                .body(ResponseBody.create(appJson, getSampleBodyStringForErrorCode(1000)))\n                .build();\n\n        when(chain.proceed(any(Request.class))).thenReturn(response);\n        try {\n            interceptor.intercept(chain);\n            fail(\"did not throw exception\");\n        } catch(TapglueError e) {\n            assertThat(e.getCode(), equalTo(1000));\n        }\n    }", "signature": "void throwsExceptionWhenError()", "full_signature": "@Test public void throwsExceptionWhenError()", "class_method_signature": "ErrorInterceptorTest.throwsExceptionWhenError()", "testcase": true, "constructor": false, "invocations": ["build", "url", "parse", "build", "body", "request", "protocol", "code", "create", "getSampleBodyStringForErrorCode", "thenReturn", "when", "proceed", "any", "intercept", "fail", "assertThat", "getCode", "equalTo"]}, "focal_class": {"identifier": "ErrorInterceptor", "superclass": "", "interfaces": "implements Interceptor", "fields": [], "methods": [{"identifier": "intercept", "parameters": "(Chain chain)", "modifiers": "@Override public", "return": "Response", "signature": "Response intercept(Chain chain)", "full_signature": "@Override public Response intercept(Chain chain)", "class_method_signature": "ErrorInterceptor.intercept(Chain chain)", "testcase": false, "constructor": false}], "file": "tapglue-android-sdk/src/main/java/com/tapglue/android/http/ErrorInterceptor.java"}, "focal_method": {"identifier": "intercept", "parameters": "(Chain chain)", "modifiers": "@Override public", "return": "Response", "body": "@Override\n    public Response intercept(Chain chain) throws IOException {\n        Request request = chain.request();\n        Response response = chain.proceed(request);\n\n        if (response.code() >= 200 && response.code() <= 299) {\n            return response;\n        }\n        ErrorFeed errorFeed = new Gson().fromJson(response.body().charStream(), ErrorFeed.class);\n\n        if (errorFeed != null && errorFeed.errors != null && !errorFeed.errors.isEmpty()) {\n            response.body().close();\n            throw errorFeed.errors.get(0);\n        }\n\n        return response;\n    }", "signature": "Response intercept(Chain chain)", "full_signature": "@Override public Response intercept(Chain chain)", "class_method_signature": "ErrorInterceptor.intercept(Chain chain)", "testcase": false, "constructor": false, "invocations": ["request", "proceed", "code", "code", "fromJson", "charStream", "body", "isEmpty", "close", "body", "get"]}, "repository": {"repo_id": 48053234, "url": "https://github.com/tapglue/android_sdk", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 10, "size": 931, "license": "licensed"}}