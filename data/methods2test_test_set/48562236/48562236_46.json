{"test_class": {"identifier": "ElementsTest", "superclass": "", "interfaces": "", "fields": [], "file": "base/lang/src/test/java/leap/lang/jsoup/select/ElementsTest.java"}, "test_case": {"identifier": "before", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void before() {\n        Document doc = Jsoup.parse(\"<p>This <a>is</a> <a>jsoup</a>.</p>\");\n        doc.select(\"a\").before(\"<span>foo</span>\");\n        assertEquals(\"<p>This <span>foo</span><a>is</a> <span>foo</span><a>jsoup</a>.</p>\", TextUtil.stripNewlines(doc.body().html()));\n    }", "signature": "void before()", "full_signature": "@Test public void before()", "class_method_signature": "ElementsTest.before()", "testcase": true, "constructor": false, "invocations": ["parse", "before", "select", "assertEquals", "stripNewlines", "html", "body"]}, "focal_class": {"identifier": "Elements", "superclass": "", "interfaces": "implements List<Element>, Cloneable", "fields": [{"original_string": "private List<Element> contents;", "modifier": "private", "type": "List<Element>", "declarator": "contents", "var_name": "contents"}], "methods": [{"identifier": "Elements", "parameters": "()", "modifiers": "public", "return": "", "signature": " Elements()", "full_signature": "public  Elements()", "class_method_signature": "Elements.Elements()", "testcase": false, "constructor": true}, {"identifier": "Elements", "parameters": "(int initialCapacity)", "modifiers": "public", "return": "", "signature": " Elements(int initialCapacity)", "full_signature": "public  Elements(int initialCapacity)", "class_method_signature": "Elements.Elements(int initialCapacity)", "testcase": false, "constructor": true}, {"identifier": "Elements", "parameters": "(Collection<Element> elements)", "modifiers": "public", "return": "", "signature": " Elements(Collection<Element> elements)", "full_signature": "public  Elements(Collection<Element> elements)", "class_method_signature": "Elements.Elements(Collection<Element> elements)", "testcase": false, "constructor": true}, {"identifier": "Elements", "parameters": "(List<Element> elements)", "modifiers": "public", "return": "", "signature": " Elements(List<Element> elements)", "full_signature": "public  Elements(List<Element> elements)", "class_method_signature": "Elements.Elements(List<Element> elements)", "testcase": false, "constructor": true}, {"identifier": "Elements", "parameters": "(Element... elements)", "modifiers": "public", "return": "", "signature": " Elements(Element... elements)", "full_signature": "public  Elements(Element... elements)", "class_method_signature": "Elements.Elements(Element... elements)", "testcase": false, "constructor": true}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Elements", "signature": "Elements clone()", "full_signature": "@Override public Elements clone()", "class_method_signature": "Elements.clone()", "testcase": false, "constructor": false}, {"identifier": "attr", "parameters": "(String attributeKey)", "modifiers": "public", "return": "String", "signature": "String attr(String attributeKey)", "full_signature": "public String attr(String attributeKey)", "class_method_signature": "Elements.attr(String attributeKey)", "testcase": false, "constructor": false}, {"identifier": "hasAttr", "parameters": "(String attributeKey)", "modifiers": "public", "return": "boolean", "signature": "boolean hasAttr(String attributeKey)", "full_signature": "public boolean hasAttr(String attributeKey)", "class_method_signature": "Elements.hasAttr(String attributeKey)", "testcase": false, "constructor": false}, {"identifier": "attr", "parameters": "(String attributeKey, String attributeValue)", "modifiers": "public", "return": "Elements", "signature": "Elements attr(String attributeKey, String attributeValue)", "full_signature": "public Elements attr(String attributeKey, String attributeValue)", "class_method_signature": "Elements.attr(String attributeKey, String attributeValue)", "testcase": false, "constructor": false}, {"identifier": "removeAttr", "parameters": "(String attributeKey)", "modifiers": "public", "return": "Elements", "signature": "Elements removeAttr(String attributeKey)", "full_signature": "public Elements removeAttr(String attributeKey)", "class_method_signature": "Elements.removeAttr(String attributeKey)", "testcase": false, "constructor": false}, {"identifier": "addClass", "parameters": "(String className)", "modifiers": "public", "return": "Elements", "signature": "Elements addClass(String className)", "full_signature": "public Elements addClass(String className)", "class_method_signature": "Elements.addClass(String className)", "testcase": false, "constructor": false}, {"identifier": "removeClass", "parameters": "(String className)", "modifiers": "public", "return": "Elements", "signature": "Elements removeClass(String className)", "full_signature": "public Elements removeClass(String className)", "class_method_signature": "Elements.removeClass(String className)", "testcase": false, "constructor": false}, {"identifier": "toggleClass", "parameters": "(String className)", "modifiers": "public", "return": "Elements", "signature": "Elements toggleClass(String className)", "full_signature": "public Elements toggleClass(String className)", "class_method_signature": "Elements.toggleClass(String className)", "testcase": false, "constructor": false}, {"identifier": "hasClass", "parameters": "(String className)", "modifiers": "public", "return": "boolean", "signature": "boolean hasClass(String className)", "full_signature": "public boolean hasClass(String className)", "class_method_signature": "Elements.hasClass(String className)", "testcase": false, "constructor": false}, {"identifier": "val", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String val()", "full_signature": "public String val()", "class_method_signature": "Elements.val()", "testcase": false, "constructor": false}, {"identifier": "val", "parameters": "(String value)", "modifiers": "public", "return": "Elements", "signature": "Elements val(String value)", "full_signature": "public Elements val(String value)", "class_method_signature": "Elements.val(String value)", "testcase": false, "constructor": false}, {"identifier": "text", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String text()", "full_signature": "public String text()", "class_method_signature": "Elements.text()", "testcase": false, "constructor": false}, {"identifier": "hasText", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasText()", "full_signature": "public boolean hasText()", "class_method_signature": "Elements.hasText()", "testcase": false, "constructor": false}, {"identifier": "html", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String html()", "full_signature": "public String html()", "class_method_signature": "Elements.html()", "testcase": false, "constructor": false}, {"identifier": "outerHtml", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String outerHtml()", "full_signature": "public String outerHtml()", "class_method_signature": "Elements.outerHtml()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "Elements.toString()", "testcase": false, "constructor": false}, {"identifier": "tagName", "parameters": "(String tagName)", "modifiers": "public", "return": "Elements", "signature": "Elements tagName(String tagName)", "full_signature": "public Elements tagName(String tagName)", "class_method_signature": "Elements.tagName(String tagName)", "testcase": false, "constructor": false}, {"identifier": "html", "parameters": "(String html)", "modifiers": "public", "return": "Elements", "signature": "Elements html(String html)", "full_signature": "public Elements html(String html)", "class_method_signature": "Elements.html(String html)", "testcase": false, "constructor": false}, {"identifier": "prepend", "parameters": "(String html)", "modifiers": "public", "return": "Elements", "signature": "Elements prepend(String html)", "full_signature": "public Elements prepend(String html)", "class_method_signature": "Elements.prepend(String html)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(String html)", "modifiers": "public", "return": "Elements", "signature": "Elements append(String html)", "full_signature": "public Elements append(String html)", "class_method_signature": "Elements.append(String html)", "testcase": false, "constructor": false}, {"identifier": "before", "parameters": "(String html)", "modifiers": "public", "return": "Elements", "signature": "Elements before(String html)", "full_signature": "public Elements before(String html)", "class_method_signature": "Elements.before(String html)", "testcase": false, "constructor": false}, {"identifier": "after", "parameters": "(String html)", "modifiers": "public", "return": "Elements", "signature": "Elements after(String html)", "full_signature": "public Elements after(String html)", "class_method_signature": "Elements.after(String html)", "testcase": false, "constructor": false}, {"identifier": "wrap", "parameters": "(String html)", "modifiers": "public", "return": "Elements", "signature": "Elements wrap(String html)", "full_signature": "public Elements wrap(String html)", "class_method_signature": "Elements.wrap(String html)", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "()", "modifiers": "public", "return": "Elements", "signature": "Elements unwrap()", "full_signature": "public Elements unwrap()", "class_method_signature": "Elements.unwrap()", "testcase": false, "constructor": false}, {"identifier": "empty", "parameters": "()", "modifiers": "public", "return": "Elements", "signature": "Elements empty()", "full_signature": "public Elements empty()", "class_method_signature": "Elements.empty()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "()", "modifiers": "public", "return": "Elements", "signature": "Elements remove()", "full_signature": "public Elements remove()", "class_method_signature": "Elements.remove()", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(String query)", "modifiers": "public", "return": "Elements", "signature": "Elements select(String query)", "full_signature": "public Elements select(String query)", "class_method_signature": "Elements.select(String query)", "testcase": false, "constructor": false}, {"identifier": "not", "parameters": "(String query)", "modifiers": "public", "return": "Elements", "signature": "Elements not(String query)", "full_signature": "public Elements not(String query)", "class_method_signature": "Elements.not(String query)", "testcase": false, "constructor": false}, {"identifier": "eq", "parameters": "(int index)", "modifiers": "public", "return": "Elements", "signature": "Elements eq(int index)", "full_signature": "public Elements eq(int index)", "class_method_signature": "Elements.eq(int index)", "testcase": false, "constructor": false}, {"identifier": "is", "parameters": "(String query)", "modifiers": "public", "return": "boolean", "signature": "boolean is(String query)", "full_signature": "public boolean is(String query)", "class_method_signature": "Elements.is(String query)", "testcase": false, "constructor": false}, {"identifier": "parents", "parameters": "()", "modifiers": "public", "return": "Elements", "signature": "Elements parents()", "full_signature": "public Elements parents()", "class_method_signature": "Elements.parents()", "testcase": false, "constructor": false}, {"identifier": "first", "parameters": "()", "modifiers": "public", "return": "Element", "signature": "Element first()", "full_signature": "public Element first()", "class_method_signature": "Elements.first()", "testcase": false, "constructor": false}, {"identifier": "last", "parameters": "()", "modifiers": "public", "return": "Element", "signature": "Element last()", "full_signature": "public Element last()", "class_method_signature": "Elements.last()", "testcase": false, "constructor": false}, {"identifier": "traverse", "parameters": "(NodeVisitor nodeVisitor)", "modifiers": "public", "return": "Elements", "signature": "Elements traverse(NodeVisitor nodeVisitor)", "full_signature": "public Elements traverse(NodeVisitor nodeVisitor)", "class_method_signature": "Elements.traverse(NodeVisitor nodeVisitor)", "testcase": false, "constructor": false}, {"identifier": "forms", "parameters": "()", "modifiers": "public", "return": "List<FormElement>", "signature": "List<FormElement> forms()", "full_signature": "public List<FormElement> forms()", "class_method_signature": "Elements.forms()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "Elements.size()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "Elements.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(Object o)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(Object o)", "full_signature": "public boolean contains(Object o)", "class_method_signature": "Elements.contains(Object o)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "public", "return": "Iterator<Element>", "signature": "Iterator<Element> iterator()", "full_signature": "public Iterator<Element> iterator()", "class_method_signature": "Elements.iterator()", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "()", "modifiers": "public", "return": "Object[]", "signature": "Object[] toArray()", "full_signature": "public Object[] toArray()", "class_method_signature": "Elements.toArray()", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "(T[] a)", "modifiers": "public", "return": "T[]", "signature": "T[] toArray(T[] a)", "full_signature": "public T[] toArray(T[] a)", "class_method_signature": "Elements.toArray(T[] a)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Element element)", "modifiers": "public", "return": "boolean", "signature": "boolean add(Element element)", "full_signature": "public boolean add(Element element)", "class_method_signature": "Elements.add(Element element)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Object o)", "modifiers": "public", "return": "boolean", "signature": "boolean remove(Object o)", "full_signature": "public boolean remove(Object o)", "class_method_signature": "Elements.remove(Object o)", "testcase": false, "constructor": false}, {"identifier": "containsAll", "parameters": "(Collection<?> c)", "modifiers": "public", "return": "boolean", "signature": "boolean containsAll(Collection<?> c)", "full_signature": "public boolean containsAll(Collection<?> c)", "class_method_signature": "Elements.containsAll(Collection<?> c)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(Collection<? extends Element> c)", "modifiers": "public", "return": "boolean", "signature": "boolean addAll(Collection<? extends Element> c)", "full_signature": "public boolean addAll(Collection<? extends Element> c)", "class_method_signature": "Elements.addAll(Collection<? extends Element> c)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(int index, Collection<? extends Element> c)", "modifiers": "public", "return": "boolean", "signature": "boolean addAll(int index, Collection<? extends Element> c)", "full_signature": "public boolean addAll(int index, Collection<? extends Element> c)", "class_method_signature": "Elements.addAll(int index, Collection<? extends Element> c)", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "(Collection<?> c)", "modifiers": "public", "return": "boolean", "signature": "boolean removeAll(Collection<?> c)", "full_signature": "public boolean removeAll(Collection<?> c)", "class_method_signature": "Elements.removeAll(Collection<?> c)", "testcase": false, "constructor": false}, {"identifier": "retainAll", "parameters": "(Collection<?> c)", "modifiers": "public", "return": "boolean", "signature": "boolean retainAll(Collection<?> c)", "full_signature": "public boolean retainAll(Collection<?> c)", "class_method_signature": "Elements.retainAll(Collection<?> c)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "Elements.clear()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "public boolean equals(Object o)", "class_method_signature": "Elements.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "Elements.hashCode()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int index)", "modifiers": "public", "return": "Element", "signature": "Element get(int index)", "full_signature": "public Element get(int index)", "class_method_signature": "Elements.get(int index)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int index, Element element)", "modifiers": "public", "return": "Element", "signature": "Element set(int index, Element element)", "full_signature": "public Element set(int index, Element element)", "class_method_signature": "Elements.set(int index, Element element)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(int index, Element element)", "modifiers": "public", "return": "void", "signature": "void add(int index, Element element)", "full_signature": "public void add(int index, Element element)", "class_method_signature": "Elements.add(int index, Element element)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(int index)", "modifiers": "public", "return": "Element", "signature": "Element remove(int index)", "full_signature": "public Element remove(int index)", "class_method_signature": "Elements.remove(int index)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(Object o)", "modifiers": "public", "return": "int", "signature": "int indexOf(Object o)", "full_signature": "public int indexOf(Object o)", "class_method_signature": "Elements.indexOf(Object o)", "testcase": false, "constructor": false}, {"identifier": "lastIndexOf", "parameters": "(Object o)", "modifiers": "public", "return": "int", "signature": "int lastIndexOf(Object o)", "full_signature": "public int lastIndexOf(Object o)", "class_method_signature": "Elements.lastIndexOf(Object o)", "testcase": false, "constructor": false}, {"identifier": "listIterator", "parameters": "()", "modifiers": "public", "return": "ListIterator<Element>", "signature": "ListIterator<Element> listIterator()", "full_signature": "public ListIterator<Element> listIterator()", "class_method_signature": "Elements.listIterator()", "testcase": false, "constructor": false}, {"identifier": "listIterator", "parameters": "(int index)", "modifiers": "public", "return": "ListIterator<Element>", "signature": "ListIterator<Element> listIterator(int index)", "full_signature": "public ListIterator<Element> listIterator(int index)", "class_method_signature": "Elements.listIterator(int index)", "testcase": false, "constructor": false}, {"identifier": "subList", "parameters": "(int fromIndex, int toIndex)", "modifiers": "public", "return": "List<Element>", "signature": "List<Element> subList(int fromIndex, int toIndex)", "full_signature": "public List<Element> subList(int fromIndex, int toIndex)", "class_method_signature": "Elements.subList(int fromIndex, int toIndex)", "testcase": false, "constructor": false}], "file": "base/lang/src/main/java/leap/lang/jsoup/select/Elements.java"}, "focal_method": {"identifier": "before", "parameters": "(String html)", "modifiers": "public", "return": "Elements", "body": "public Elements before(String html) {\n        for (Element element : contents) {\n            element.before(html);\n        }\n        return this;\n    }", "signature": "Elements before(String html)", "full_signature": "public Elements before(String html)", "class_method_signature": "Elements.before(String html)", "testcase": false, "constructor": false, "invocations": ["before"]}, "repository": {"repo_id": 48562236, "url": "https://github.com/leapframework/framework", "stars": 42, "created": "12/25/2015 1:54:52 AM +00:00", "updates": "2020-01-20T03:04:15+00:00", "fork": "False", "license": "licensed"}}