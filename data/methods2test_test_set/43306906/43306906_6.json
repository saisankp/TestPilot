{"test_class": {"identifier": "SparseIntArrayBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "sparsebuilders/src/test/java/com/vanniktech/sparsebuilders/SparseIntArrayBuilderTest.java"}, "test_case": {"identifier": "constructorEmptyBuildShouldReturnEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void constructorEmptyBuildShouldReturnEmpty() {\n    final SparseIntArray actual = new SparseIntArrayBuilder().build();\n    final SparseIntArray expected = new SparseIntArray();\n\n    assertSparseIntArrayEquals(expected, actual);\n  }", "signature": "void constructorEmptyBuildShouldReturnEmpty()", "full_signature": "@Test public void constructorEmptyBuildShouldReturnEmpty()", "class_method_signature": "SparseIntArrayBuilderTest.constructorEmptyBuildShouldReturnEmpty()", "testcase": true, "constructor": false, "invocations": ["build", "assertSparseIntArrayEquals"]}, "focal_class": {"identifier": "SparseIntArrayBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "@NonNull private final SparseIntArray sparseIntArray;", "modifier": "@NonNull private final", "type": "SparseIntArray", "declarator": "sparseIntArray", "var_name": "sparseIntArray"}], "methods": [{"identifier": "SparseIntArrayBuilder", "parameters": "()", "modifiers": "public", "return": "", "signature": " SparseIntArrayBuilder()", "full_signature": "public  SparseIntArrayBuilder()", "class_method_signature": "SparseIntArrayBuilder.SparseIntArrayBuilder()", "testcase": false, "constructor": true}, {"identifier": "SparseIntArrayBuilder", "parameters": "(final int capacity)", "modifiers": "public", "return": "", "signature": " SparseIntArrayBuilder(final int capacity)", "full_signature": "public  SparseIntArrayBuilder(final int capacity)", "class_method_signature": "SparseIntArrayBuilder.SparseIntArrayBuilder(final int capacity)", "testcase": false, "constructor": true}, {"identifier": "SparseIntArrayBuilder", "parameters": "(@NonNull final SparseIntArray sparseIntArray)", "modifiers": "public", "return": "", "signature": " SparseIntArrayBuilder(@NonNull final SparseIntArray sparseIntArray)", "full_signature": "public  SparseIntArrayBuilder(@NonNull final SparseIntArray sparseIntArray)", "class_method_signature": "SparseIntArrayBuilder.SparseIntArrayBuilder(@NonNull final SparseIntArray sparseIntArray)", "testcase": false, "constructor": true}, {"identifier": "put", "parameters": "(final int key, final int value)", "modifiers": "@CheckResult public", "return": "SparseIntArrayBuilder", "signature": "SparseIntArrayBuilder put(final int key, final int value)", "full_signature": "@CheckResult public SparseIntArrayBuilder put(final int key, final int value)", "class_method_signature": "SparseIntArrayBuilder.put(final int key, final int value)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final int key, final int value)", "modifiers": "@CheckResult public", "return": "SparseIntArrayBuilder", "signature": "SparseIntArrayBuilder add(final int key, final int value)", "full_signature": "@CheckResult public SparseIntArrayBuilder add(final int key, final int value)", "class_method_signature": "SparseIntArrayBuilder.add(final int key, final int value)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(@Nullable final SparseIntArray array)", "modifiers": "@CheckResult public", "return": "SparseIntArrayBuilder", "signature": "SparseIntArrayBuilder add(@Nullable final SparseIntArray array)", "full_signature": "@CheckResult public SparseIntArrayBuilder add(@Nullable final SparseIntArray array)", "class_method_signature": "SparseIntArrayBuilder.add(@Nullable final SparseIntArray array)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@CheckResult public", "return": "SparseIntArrayBuilder", "signature": "SparseIntArrayBuilder clear()", "full_signature": "@CheckResult public SparseIntArrayBuilder clear()", "class_method_signature": "SparseIntArrayBuilder.clear()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "@NonNull @CheckResult public", "return": "SparseIntArray", "signature": "SparseIntArray build()", "full_signature": "@NonNull @CheckResult public SparseIntArray build()", "class_method_signature": "SparseIntArrayBuilder.build()", "testcase": false, "constructor": false}], "file": "sparsebuilders/src/main/java/com/vanniktech/sparsebuilders/SparseIntArrayBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "@NonNull @CheckResult public", "return": "SparseIntArray", "body": "@NonNull @CheckResult public SparseIntArray build() {\n    return sparseIntArray;\n  }", "signature": "SparseIntArray build()", "full_signature": "@NonNull @CheckResult public SparseIntArray build()", "class_method_signature": "SparseIntArrayBuilder.build()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 43306906, "url": "https://github.com/vanniktech/SparseBuilders", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 6, "size": 296, "license": "licensed"}}