{"test_class": {"identifier": "SeParameterFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundles/core-map/src/test/java/org/orbisgis/coremap/renderer/se/parameter/SeParameterFactoryTest.java"}, "test_case": {"identifier": "testNullInputString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNullInputString() throws Exception {\n        assertNull(SeParameterFactory.createStringParameter((ParameterValueType) null));\n        assertNull(SeParameterFactory.createStringParameter((JAXBElement<?>) null));\n    }", "signature": "void testNullInputString()", "full_signature": "@Test public void testNullInputString()", "class_method_signature": "SeParameterFactoryTest.testNullInputString()", "testcase": true, "constructor": false, "invocations": ["assertNull", "createStringParameter", "assertNull", "createStringParameter"]}, "focal_class": {"identifier": "SeParameterFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "SeParameterFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " SeParameterFactory()", "full_signature": "private  SeParameterFactory()", "class_method_signature": "SeParameterFactory.SeParameterFactory()", "testcase": false, "constructor": true}, {"identifier": "createRealParameter", "parameters": "(Object expr)", "modifiers": "public static", "return": "RealParameter", "signature": "RealParameter createRealParameter(Object expr)", "full_signature": "public static RealParameter createRealParameter(Object expr)", "class_method_signature": "SeParameterFactory.createRealParameter(Object expr)", "testcase": false, "constructor": false}, {"identifier": "createRealParameter", "parameters": "(JAXBElement expr)", "modifiers": "public static", "return": "RealParameter", "signature": "RealParameter createRealParameter(JAXBElement expr)", "full_signature": "public static RealParameter createRealParameter(JAXBElement expr)", "class_method_signature": "SeParameterFactory.createRealParameter(JAXBElement expr)", "testcase": false, "constructor": false}, {"identifier": "createRealParameter", "parameters": "(ParameterValueType p)", "modifiers": "public static", "return": "RealParameter", "signature": "RealParameter createRealParameter(ParameterValueType p)", "full_signature": "public static RealParameter createRealParameter(ParameterValueType p)", "class_method_signature": "SeParameterFactory.createRealParameter(ParameterValueType p)", "testcase": false, "constructor": false}, {"identifier": "createColorParameter", "parameters": "(JAXBElement<? > expr)", "modifiers": "public static", "return": "ColorParameter", "signature": "ColorParameter createColorParameter(JAXBElement<? > expr)", "full_signature": "public static ColorParameter createColorParameter(JAXBElement<? > expr)", "class_method_signature": "SeParameterFactory.createColorParameter(JAXBElement<? > expr)", "testcase": false, "constructor": false}, {"identifier": "createColorParameter", "parameters": "(ParameterValueType p)", "modifiers": "public static", "return": "ColorParameter", "signature": "ColorParameter createColorParameter(ParameterValueType p)", "full_signature": "public static ColorParameter createColorParameter(ParameterValueType p)", "class_method_signature": "SeParameterFactory.createColorParameter(ParameterValueType p)", "testcase": false, "constructor": false}, {"identifier": "createStringParameter", "parameters": "(JAXBElement<?> expr)", "modifiers": "public static", "return": "StringParameter", "signature": "StringParameter createStringParameter(JAXBElement<?> expr)", "full_signature": "public static StringParameter createStringParameter(JAXBElement<?> expr)", "class_method_signature": "SeParameterFactory.createStringParameter(JAXBElement<?> expr)", "testcase": false, "constructor": false}, {"identifier": "createStringParameter", "parameters": "(ParameterValueType p)", "modifiers": "public static", "return": "StringParameter", "signature": "StringParameter createStringParameter(ParameterValueType p)", "full_signature": "public static StringParameter createStringParameter(ParameterValueType p)", "class_method_signature": "SeParameterFactory.createStringParameter(ParameterValueType p)", "testcase": false, "constructor": false}, {"identifier": "createParameterValueType", "parameters": "(String token)", "modifiers": "public static", "return": "ParameterValueType", "signature": "ParameterValueType createParameterValueType(String token)", "full_signature": "public static ParameterValueType createParameterValueType(String token)", "class_method_signature": "SeParameterFactory.createParameterValueType(String token)", "testcase": false, "constructor": false}, {"identifier": "extractToken", "parameters": "(ParameterValueType p)", "modifiers": "public static", "return": "String", "signature": "String extractToken(ParameterValueType p)", "full_signature": "public static String extractToken(ParameterValueType p)", "class_method_signature": "SeParameterFactory.extractToken(ParameterValueType p)", "testcase": false, "constructor": false}], "file": "bundles/core-map/src/main/java/org/orbisgis/coremap/renderer/se/parameter/SeParameterFactory.java"}, "focal_method": {"identifier": "createStringParameter", "parameters": "(JAXBElement<?> expr)", "modifiers": "public static", "return": "StringParameter", "body": "public static StringParameter createStringParameter(JAXBElement<?> expr) throws InvalidStyle {\n        if (expr == null){\n            return null;\n        }\n\n        if (expr.getDeclaredType() == FormatNumberType.class) {\n            return new Number2String((JAXBElement<FormatNumberType>) expr);\n        } else if (expr.getDeclaredType() == String.class) {\n            return new StringAttribute((JAXBElement<String>) expr);\n\n        } else if (expr.getDeclaredType() == LiteralType.class) {\n            return new StringLiteral((JAXBElement<LiteralType>) expr);\n\n        } else if (expr.getDeclaredType() == net.opengis.se._2_0.core.CategorizeType.class) {\n            return new Categorize2String((JAXBElement<CategorizeType>) expr);\n\n        } else if (expr.getDeclaredType() == net.opengis.se._2_0.core.RecodeType.class) {\n            return new Recode2String((JAXBElement<RecodeType>) expr);\n        } else if (expr.getDeclaredType() == ConcatenateType.class){\n            return new StringConcatenate((JAXBElement<ConcatenateType>) expr);\n        }\n\n        return null;\n\n    }", "signature": "StringParameter createStringParameter(JAXBElement<?> expr)", "full_signature": "public static StringParameter createStringParameter(JAXBElement<?> expr)", "class_method_signature": "SeParameterFactory.createStringParameter(JAXBElement<?> expr)", "testcase": false, "constructor": false, "invocations": ["getDeclaredType", "getDeclaredType", "getDeclaredType", "getDeclaredType", "getDeclaredType", "getDeclaredType"]}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}