{"test_class": {"identifier": "CrossTabTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/tech/tablesaw/aggregate/CrossTabTest.java"}, "test_case": {"identifier": "testRowPercents", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRowPercents() throws Exception {\n    Table bush = Table.read().csv(\"../data/bush.csv\");\n    bush.addColumns(bush.dateColumn(\"date\").year());\n    Table xtab = CrossTab.rowPercents(bush, \"who\", \"date year\");\n    assertEquals(1.0, xtab.doubleColumn(xtab.columnCount() - 1).getDouble(0), 0.00001);\n  }", "signature": "void testRowPercents()", "full_signature": "@Test public void testRowPercents()", "class_method_signature": "CrossTabTest.testRowPercents()", "testcase": true, "constructor": false, "invocations": ["csv", "read", "addColumns", "year", "dateColumn", "rowPercents", "assertEquals", "getDouble", "doubleColumn", "columnCount"]}, "focal_class": {"identifier": "CrossTab", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String LABEL_COLUMN_NAME = \"[labels]\";", "modifier": "private static final", "type": "String", "declarator": "LABEL_COLUMN_NAME = \"[labels]\"", "var_name": "LABEL_COLUMN_NAME"}], "methods": [{"identifier": "CrossTab", "parameters": "()", "modifiers": "private", "return": "", "signature": " CrossTab()", "full_signature": "private  CrossTab()", "class_method_signature": "CrossTab.CrossTab()", "testcase": false, "constructor": true}, {"identifier": "counts", "parameters": "(\n      Table table, CategoricalColumn<?> column1, CategoricalColumn<?> column2)", "modifiers": "public static", "return": "Table", "signature": "Table counts(\n      Table table, CategoricalColumn<?> column1, CategoricalColumn<?> column2)", "full_signature": "public static Table counts(\n      Table table, CategoricalColumn<?> column1, CategoricalColumn<?> column2)", "class_method_signature": "CrossTab.counts(\n      Table table, CategoricalColumn<?> column1, CategoricalColumn<?> column2)", "testcase": false, "constructor": false}, {"identifier": "counts", "parameters": "(Table table, String columnName)", "modifiers": "public static", "return": "Table", "signature": "Table counts(Table table, String columnName)", "full_signature": "public static Table counts(Table table, String columnName)", "class_method_signature": "CrossTab.counts(Table table, String columnName)", "testcase": false, "constructor": false}, {"identifier": "percents", "parameters": "(Table table, String column1)", "modifiers": "public static", "return": "Table", "signature": "Table percents(Table table, String column1)", "full_signature": "public static Table percents(Table table, String column1)", "class_method_signature": "CrossTab.percents(Table table, String column1)", "testcase": false, "constructor": false}, {"identifier": "rowPercents", "parameters": "(Table xTabCounts)", "modifiers": "private static", "return": "Table", "signature": "Table rowPercents(Table xTabCounts)", "full_signature": "private static Table rowPercents(Table xTabCounts)", "class_method_signature": "CrossTab.rowPercents(Table xTabCounts)", "testcase": false, "constructor": false}, {"identifier": "tablePercents", "parameters": "(Table xTabCounts)", "modifiers": "private static", "return": "Table", "signature": "Table tablePercents(Table xTabCounts)", "full_signature": "private static Table tablePercents(Table xTabCounts)", "class_method_signature": "CrossTab.tablePercents(Table xTabCounts)", "testcase": false, "constructor": false}, {"identifier": "columnPercents", "parameters": "(Table xTabCounts)", "modifiers": "private static", "return": "Table", "signature": "Table columnPercents(Table xTabCounts)", "full_signature": "private static Table columnPercents(Table xTabCounts)", "class_method_signature": "CrossTab.columnPercents(Table xTabCounts)", "testcase": false, "constructor": false}, {"identifier": "columnPercents", "parameters": "(\n      Table table, CategoricalColumn<?> column1, CategoricalColumn<?> column2)", "modifiers": "public static", "return": "Table", "signature": "Table columnPercents(\n      Table table, CategoricalColumn<?> column1, CategoricalColumn<?> column2)", "full_signature": "public static Table columnPercents(\n      Table table, CategoricalColumn<?> column1, CategoricalColumn<?> column2)", "class_method_signature": "CrossTab.columnPercents(\n      Table table, CategoricalColumn<?> column1, CategoricalColumn<?> column2)", "testcase": false, "constructor": false}, {"identifier": "columnPercents", "parameters": "(Table table, String column1, String column2)", "modifiers": "public static", "return": "Table", "signature": "Table columnPercents(Table table, String column1, String column2)", "full_signature": "public static Table columnPercents(Table table, String column1, String column2)", "class_method_signature": "CrossTab.columnPercents(Table table, String column1, String column2)", "testcase": false, "constructor": false}, {"identifier": "rowPercents", "parameters": "(\n      Table table, CategoricalColumn<?> column1, CategoricalColumn<?> column2)", "modifiers": "public static", "return": "Table", "signature": "Table rowPercents(\n      Table table, CategoricalColumn<?> column1, CategoricalColumn<?> column2)", "full_signature": "public static Table rowPercents(\n      Table table, CategoricalColumn<?> column1, CategoricalColumn<?> column2)", "class_method_signature": "CrossTab.rowPercents(\n      Table table, CategoricalColumn<?> column1, CategoricalColumn<?> column2)", "testcase": false, "constructor": false}, {"identifier": "rowPercents", "parameters": "(Table table, String column1, String column2)", "modifiers": "public static", "return": "Table", "signature": "Table rowPercents(Table table, String column1, String column2)", "full_signature": "public static Table rowPercents(Table table, String column1, String column2)", "class_method_signature": "CrossTab.rowPercents(Table table, String column1, String column2)", "testcase": false, "constructor": false}, {"identifier": "tablePercents", "parameters": "(\n      Table table, CategoricalColumn<?> column1, CategoricalColumn<?> column2)", "modifiers": "public static", "return": "Table", "signature": "Table tablePercents(\n      Table table, CategoricalColumn<?> column1, CategoricalColumn<?> column2)", "full_signature": "public static Table tablePercents(\n      Table table, CategoricalColumn<?> column1, CategoricalColumn<?> column2)", "class_method_signature": "CrossTab.tablePercents(\n      Table table, CategoricalColumn<?> column1, CategoricalColumn<?> column2)", "testcase": false, "constructor": false}, {"identifier": "tablePercents", "parameters": "(Table table, String column1, String column2)", "modifiers": "public static", "return": "Table", "signature": "Table tablePercents(Table table, String column1, String column2)", "full_signature": "public static Table tablePercents(Table table, String column1, String column2)", "class_method_signature": "CrossTab.tablePercents(Table table, String column1, String column2)", "testcase": false, "constructor": false}], "file": "core/src/main/java/tech/tablesaw/aggregate/CrossTab.java"}, "focal_method": {"identifier": "rowPercents", "parameters": "(Table xTabCounts)", "modifiers": "private static", "return": "Table", "body": "private static Table rowPercents(Table xTabCounts) {\n\n    Table pctTable = Table.create(\"Crosstab Row Proportions: \");\n    StringColumn labels = StringColumn.create(LABEL_COLUMN_NAME);\n\n    pctTable.addColumns(labels);\n\n    for (int i = 0; i < xTabCounts.rowCount(); i++) {\n      labels.append(xTabCounts.column(0).getString(i));\n    }\n\n    // create the new cols\n    DoubleColumn[] newColumns = new DoubleColumn[xTabCounts.columnCount() - 1];\n\n    for (int i = 1; i < xTabCounts.columnCount(); i++) {\n      Column<?> column = xTabCounts.column(i);\n      newColumns[i - 1] = DoubleColumn.create(column.name());\n    }\n\n    for (int i = 0; i < xTabCounts.rowCount(); i++) {\n      double rowTotal = xTabCounts.numberColumn(xTabCounts.columnCount() - 1).getDouble(i);\n\n      for (int c = 0; c < newColumns.length; c++) {\n        if (rowTotal == 0) {\n          newColumns[c].append(Double.NaN);\n        } else {\n          newColumns[c].append(xTabCounts.numberColumn(c + 1).getDouble(i) / rowTotal);\n        }\n      }\n    }\n    pctTable.addColumns(newColumns);\n    return pctTable;\n  }", "signature": "Table rowPercents(Table xTabCounts)", "full_signature": "private static Table rowPercents(Table xTabCounts)", "class_method_signature": "CrossTab.rowPercents(Table xTabCounts)", "testcase": false, "constructor": false, "invocations": ["create", "create", "addColumns", "rowCount", "append", "getString", "column", "columnCount", "columnCount", "column", "create", "name", "rowCount", "getDouble", "numberColumn", "columnCount", "append", "append", "getDouble", "numberColumn", "addColumns"]}, "repository": {"repo_id": 48880766, "url": "https://github.com/jtablesaw/tablesaw", "stars": 2021, "created": "1/1/2016 2:58:28 PM +00:00", "updates": "2020-01-24T23:26:07+00:00", "fork": "False", "license": "licensed"}}