{"test_class": {"identifier": "RecordTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long SEED = 354144423270432543L;", "modifier": "private static final", "type": "long", "declarator": "SEED = 354144423270432543L", "var_name": "SEED"}, {"original_string": "private final Random rand = new Random(RecordTest.SEED);", "modifier": "private final", "type": "Random", "declarator": "rand = new Random(RecordTest.SEED)", "var_name": "rand"}, {"original_string": "private DataInputView in;", "modifier": "private", "type": "DataInputView", "declarator": "in", "var_name": "in"}, {"original_string": "private DataOutputView out;", "modifier": "private", "type": "DataOutputView", "declarator": "out", "var_name": "out"}, {"original_string": "private final StringValue origVal1 = new StringValue(\"Hello World!\");", "modifier": "private final", "type": "StringValue", "declarator": "origVal1 = new StringValue(\"Hello World!\")", "var_name": "origVal1"}, {"original_string": "private final DoubleValue origVal2 = new DoubleValue(Math.PI);", "modifier": "private final", "type": "DoubleValue", "declarator": "origVal2 = new DoubleValue(Math.PI)", "var_name": "origVal2"}, {"original_string": "private final IntValue origVal3 = new IntValue(1337);", "modifier": "private final", "type": "IntValue", "declarator": "origVal3 = new IntValue(1337)", "var_name": "origVal3"}], "file": "flink-core/src/test/java/org/apache/flink/types/RecordTest.java"}, "test_case": {"identifier": "testRemoveField", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testRemoveField() {\n\t\tRecord record = null;\n\t\tint oldLen = 0;\n\n\t\t// Create filled record and remove field from the middle\n\t\trecord = new Record(this.origVal1, this.origVal2);\n\t\trecord.addField(this.origVal3);\n\t\trecord.removeField(1);\n\n\t\tassertTrue(record.getNumFields() == 2);\n\n\t\tStringValue recVal1 = record.getField(0, StringValue.class);\n\t\tIntValue recVal2 = record.getField(1, IntValue.class);\n\n\t\tassertTrue(recVal1.getValue().equals(this.origVal1.getValue()));\n\t\tassertTrue(recVal2.getValue() == this.origVal3.getValue());\n\n\t\trecord = this.generateFilledDenseRecord(100);\n\n\t\t// Remove field from the first position of the record\n\t\toldLen = record.getNumFields();\n\t\trecord.removeField(0);\n\t\tassertTrue(record.getNumFields() == oldLen - 1);\n\n\t\t// Remove field from the end of the record\n\t\toldLen = record.getNumFields();\n\t\trecord.removeField(oldLen - 1);\n\t\tassertTrue(record.getNumFields() == oldLen - 1);\n\n\t\t// Insert several random fields into the record\n\t\trecord = this.generateFilledDenseRecord(100);\n\n\t\tfor (int i = 0; i < 100; i++) {\n\t\t\toldLen = record.getNumFields();\n\t\t\tint pos = this.rand.nextInt(record.getNumFields());\n\t\t\trecord.removeField(pos);\n\t\t\tassertTrue(record.getNumFields() == oldLen - 1);\n\t\t}\n\t}", "signature": "void testRemoveField()", "full_signature": "@Test public void testRemoveField()", "class_method_signature": "RecordTest.testRemoveField()", "testcase": true, "constructor": false, "invocations": ["addField", "removeField", "assertTrue", "getNumFields", "getField", "getField", "assertTrue", "equals", "getValue", "getValue", "assertTrue", "getValue", "getValue", "generateFilledDenseRecord", "getNumFields", "removeField", "assertTrue", "getNumFields", "getNumFields", "removeField", "assertTrue", "getNumFields", "generateFilledDenseRecord", "getNumFields", "nextInt", "getNumFields", "removeField", "assertTrue", "getNumFields"]}, "focal_class": {"identifier": "Record", "superclass": "", "interfaces": "implements Value, CopyableValue<Record>", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private static final int NULL_INDICATOR_OFFSET = Integer.MIN_VALUE;", "modifier": "private static final", "type": "int", "declarator": "NULL_INDICATOR_OFFSET = Integer.MIN_VALUE", "var_name": "NULL_INDICATOR_OFFSET"}, {"original_string": "private static final int MODIFIED_INDICATOR_OFFSET = Integer.MIN_VALUE + 1;", "modifier": "private static final", "type": "int", "declarator": "MODIFIED_INDICATOR_OFFSET = Integer.MIN_VALUE + 1", "var_name": "MODIFIED_INDICATOR_OFFSET"}, {"original_string": "private static final int DEFAULT_FIELD_LEN_ESTIMATE = 8;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_FIELD_LEN_ESTIMATE = 8", "var_name": "DEFAULT_FIELD_LEN_ESTIMATE"}, {"original_string": "private final InternalDeSerializer serializer = new InternalDeSerializer();", "modifier": "private final", "type": "InternalDeSerializer", "declarator": "serializer = new InternalDeSerializer()", "var_name": "serializer"}, {"original_string": "private byte[] binaryData;", "modifier": "private", "type": "byte[]", "declarator": "binaryData", "var_name": "binaryData"}, {"original_string": "private byte[] switchBuffer;", "modifier": "private", "type": "byte[]", "declarator": "switchBuffer", "var_name": "switchBuffer"}, {"original_string": "private int[] offsets;", "modifier": "private", "type": "int[]", "declarator": "offsets", "var_name": "offsets"}, {"original_string": "private int[] lengths;", "modifier": "private", "type": "int[]", "declarator": "lengths", "var_name": "lengths"}, {"original_string": "private Value[] readFields;", "modifier": "private", "type": "Value[]", "declarator": "readFields", "var_name": "readFields"}, {"original_string": "private Value[] writeFields;", "modifier": "private", "type": "Value[]", "declarator": "writeFields", "var_name": "writeFields"}, {"original_string": "private int binaryLen;", "modifier": "private", "type": "int", "declarator": "binaryLen", "var_name": "binaryLen"}, {"original_string": "private int numFields;", "modifier": "private", "type": "int", "declarator": "numFields", "var_name": "numFields"}, {"original_string": "private int firstModifiedPos;", "modifier": "private", "type": "int", "declarator": "firstModifiedPos", "var_name": "firstModifiedPos"}, {"original_string": "private static final int MAX_BIT = 0x1 << 7;", "modifier": "private static final", "type": "int", "declarator": "MAX_BIT = 0x1 << 7", "var_name": "MAX_BIT"}, {"original_string": "private static final Value RESERVE_SPACE = new Value() {\n\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t@Override\n\t\tpublic void write(DataOutputView out) throws IOException {\n\t\t\tthrow new UnsupportedOperationException();\n\t\t}\n\n\t\t@Override\n\t\tpublic void read(DataInputView in) throws IOException {\n\t\t\tthrow new UnsupportedOperationException();\n\t\t}\t\t\n\t};", "modifier": "private static final", "type": "Value", "declarator": "RESERVE_SPACE = new Value() {\n\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t@Override\n\t\tpublic void write(DataOutputView out) throws IOException {\n\t\t\tthrow new UnsupportedOperationException();\n\t\t}\n\n\t\t@Override\n\t\tpublic void read(DataInputView in) throws IOException {\n\t\t\tthrow new UnsupportedOperationException();\n\t\t}\t\t\n\t}", "var_name": "RESERVE_SPACE"}], "methods": [{"identifier": "Record", "parameters": "()", "modifiers": "public", "return": "", "signature": " Record()", "full_signature": "public  Record()", "class_method_signature": "Record.Record()", "testcase": false, "constructor": true}, {"identifier": "Record", "parameters": "(Value value)", "modifiers": "public", "return": "", "signature": " Record(Value value)", "full_signature": "public  Record(Value value)", "class_method_signature": "Record.Record(Value value)", "testcase": false, "constructor": true}, {"identifier": "Record", "parameters": "(Value val1, Value val2)", "modifiers": "public", "return": "", "signature": " Record(Value val1, Value val2)", "full_signature": "public  Record(Value val1, Value val2)", "class_method_signature": "Record.Record(Value val1, Value val2)", "testcase": false, "constructor": true}, {"identifier": "Record", "parameters": "(int numFields)", "modifiers": "public", "return": "", "signature": " Record(int numFields)", "full_signature": "public  Record(int numFields)", "class_method_signature": "Record.Record(int numFields)", "testcase": false, "constructor": true}, {"identifier": "getNumFields", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumFields()", "full_signature": "public int getNumFields()", "class_method_signature": "Record.getNumFields()", "testcase": false, "constructor": false}, {"identifier": "setNumFields", "parameters": "(final int numFields)", "modifiers": "public", "return": "void", "signature": "void setNumFields(final int numFields)", "full_signature": "public void setNumFields(final int numFields)", "class_method_signature": "Record.setNumFields(final int numFields)", "testcase": false, "constructor": false}, {"identifier": "makeSpace", "parameters": "(int numFields)", "modifiers": "public", "return": "void", "signature": "void makeSpace(int numFields)", "full_signature": "public void makeSpace(int numFields)", "class_method_signature": "Record.makeSpace(int numFields)", "testcase": false, "constructor": false}, {"identifier": "getField", "parameters": "(final int fieldNum, final Class<T> type)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "T", "signature": "T getField(final int fieldNum, final Class<T> type)", "full_signature": "@SuppressWarnings(\"unchecked\") public T getField(final int fieldNum, final Class<T> type)", "class_method_signature": "Record.getField(final int fieldNum, final Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "getField", "parameters": "(int fieldNum, T target)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "T", "signature": "T getField(int fieldNum, T target)", "full_signature": "@SuppressWarnings(\"unchecked\") public T getField(int fieldNum, T target)", "class_method_signature": "Record.getField(int fieldNum, T target)", "testcase": false, "constructor": false}, {"identifier": "getFieldInto", "parameters": "(int fieldNum, Value target)", "modifiers": "public", "return": "boolean", "signature": "boolean getFieldInto(int fieldNum, Value target)", "full_signature": "public boolean getFieldInto(int fieldNum, Value target)", "class_method_signature": "Record.getFieldInto(int fieldNum, Value target)", "testcase": false, "constructor": false}, {"identifier": "getFieldsInto", "parameters": "(int[] positions, Value[] targets)", "modifiers": "public", "return": "boolean", "signature": "boolean getFieldsInto(int[] positions, Value[] targets)", "full_signature": "public boolean getFieldsInto(int[] positions, Value[] targets)", "class_method_signature": "Record.getFieldsInto(int[] positions, Value[] targets)", "testcase": false, "constructor": false}, {"identifier": "getFieldsIntoCheckingNull", "parameters": "(int[] positions, Value[] targets)", "modifiers": "public", "return": "void", "signature": "void getFieldsIntoCheckingNull(int[] positions, Value[] targets)", "full_signature": "public void getFieldsIntoCheckingNull(int[] positions, Value[] targets)", "class_method_signature": "Record.getFieldsIntoCheckingNull(int[] positions, Value[] targets)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(T target, int offset, int limit, int fieldNumber)", "modifiers": "private", "return": "void", "signature": "void deserialize(T target, int offset, int limit, int fieldNumber)", "full_signature": "private void deserialize(T target, int offset, int limit, int fieldNumber)", "class_method_signature": "Record.deserialize(T target, int offset, int limit, int fieldNumber)", "testcase": false, "constructor": false}, {"identifier": "setField", "parameters": "(int fieldNum, Value value)", "modifiers": "public", "return": "void", "signature": "void setField(int fieldNum, Value value)", "full_signature": "public void setField(int fieldNum, Value value)", "class_method_signature": "Record.setField(int fieldNum, Value value)", "testcase": false, "constructor": false}, {"identifier": "addField", "parameters": "(Value value)", "modifiers": "public", "return": "void", "signature": "void addField(Value value)", "full_signature": "public void addField(Value value)", "class_method_signature": "Record.addField(Value value)", "testcase": false, "constructor": false}, {"identifier": "internallySetField", "parameters": "(int fieldNum, Value value)", "modifiers": "private", "return": "void", "signature": "void internallySetField(int fieldNum, Value value)", "full_signature": "private void internallySetField(int fieldNum, Value value)", "class_method_signature": "Record.internallySetField(int fieldNum, Value value)", "testcase": false, "constructor": false}, {"identifier": "markModified", "parameters": "(int field)", "modifiers": "private", "return": "void", "signature": "void markModified(int field)", "full_signature": "private void markModified(int field)", "class_method_signature": "Record.markModified(int field)", "testcase": false, "constructor": false}, {"identifier": "isModified", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isModified()", "full_signature": "private boolean isModified()", "class_method_signature": "Record.isModified()", "testcase": false, "constructor": false}, {"identifier": "removeField", "parameters": "(int fieldNum)", "modifiers": "public", "return": "void", "signature": "void removeField(int fieldNum)", "full_signature": "public void removeField(int fieldNum)", "class_method_signature": "Record.removeField(int fieldNum)", "testcase": false, "constructor": false}, {"identifier": "isNull", "parameters": "(int fieldNum)", "modifiers": "public final", "return": "boolean", "signature": "boolean isNull(int fieldNum)", "full_signature": "public final boolean isNull(int fieldNum)", "class_method_signature": "Record.isNull(int fieldNum)", "testcase": false, "constructor": false}, {"identifier": "setNull", "parameters": "(int field)", "modifiers": "public", "return": "void", "signature": "void setNull(int field)", "full_signature": "public void setNull(int field)", "class_method_signature": "Record.setNull(int field)", "testcase": false, "constructor": false}, {"identifier": "setNull", "parameters": "(long mask)", "modifiers": "public", "return": "void", "signature": "void setNull(long mask)", "full_signature": "public void setNull(long mask)", "class_method_signature": "Record.setNull(long mask)", "testcase": false, "constructor": false}, {"identifier": "setNull", "parameters": "(long[] mask)", "modifiers": "public", "return": "void", "signature": "void setNull(long[] mask)", "full_signature": "public void setNull(long[] mask)", "class_method_signature": "Record.setNull(long[] mask)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "Record.clear()", "testcase": false, "constructor": false}, {"identifier": "concatenate", "parameters": "(Record record)", "modifiers": "public", "return": "void", "signature": "void concatenate(Record record)", "full_signature": "public void concatenate(Record record)", "class_method_signature": "Record.concatenate(Record record)", "testcase": false, "constructor": false}, {"identifier": "unionFields", "parameters": "(Record other)", "modifiers": "public", "return": "void", "signature": "void unionFields(Record other)", "full_signature": "public void unionFields(Record other)", "class_method_signature": "Record.unionFields(Record other)", "testcase": false, "constructor": false}, {"identifier": "copyTo", "parameters": "(Record target)", "modifiers": "public", "return": "void", "signature": "void copyTo(Record target)", "full_signature": "public void copyTo(Record target)", "class_method_signature": "Record.copyTo(Record target)", "testcase": false, "constructor": false}, {"identifier": "getBinaryLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getBinaryLength()", "full_signature": "@Override public int getBinaryLength()", "class_method_signature": "Record.getBinaryLength()", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "@Override public", "return": "Record", "signature": "Record copy()", "full_signature": "@Override public Record copy()", "class_method_signature": "Record.copy()", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(DataInputView source, DataOutputView target)", "modifiers": "@Override public", "return": "void", "signature": "void copy(DataInputView source, DataOutputView target)", "full_signature": "@Override public void copy(DataInputView source, DataOutputView target)", "class_method_signature": "Record.copy(DataInputView source, DataOutputView target)", "testcase": false, "constructor": false}, {"identifier": "createCopy", "parameters": "()", "modifiers": "public", "return": "Record", "signature": "Record createCopy()", "full_signature": "public Record createCopy()", "class_method_signature": "Record.createCopy()", "testcase": false, "constructor": false}, {"identifier": "copyFrom", "parameters": "(final Record source, final int[] sourcePositions, final int[] targetPositions)", "modifiers": "public", "return": "void", "signature": "void copyFrom(final Record source, final int[] sourcePositions, final int[] targetPositions)", "full_signature": "public void copyFrom(final Record source, final int[] sourcePositions, final int[] targetPositions)", "class_method_signature": "Record.copyFrom(final Record source, final int[] sourcePositions, final int[] targetPositions)", "testcase": false, "constructor": false}, {"identifier": "equalsFields", "parameters": "(int[] positions, Value[] searchValues, Value[] deserializationHolders)", "modifiers": "public final", "return": "boolean", "signature": "boolean equalsFields(int[] positions, Value[] searchValues, Value[] deserializationHolders)", "full_signature": "public final boolean equalsFields(int[] positions, Value[] searchValues, Value[] deserializationHolders)", "class_method_signature": "Record.equalsFields(int[] positions, Value[] searchValues, Value[] deserializationHolders)", "testcase": false, "constructor": false}, {"identifier": "updateBinaryRepresenation", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void updateBinaryRepresenation()", "full_signature": "public void updateBinaryRepresenation()", "class_method_signature": "Record.updateBinaryRepresenation()", "testcase": false, "constructor": false}, {"identifier": "serializeHeader", "parameters": "(final InternalDeSerializer serializer, final int[] offsets, final int numFields)", "modifiers": "private", "return": "void", "signature": "void serializeHeader(final InternalDeSerializer serializer, final int[] offsets, final int numFields)", "full_signature": "private void serializeHeader(final InternalDeSerializer serializer, final int[] offsets, final int numFields)", "class_method_signature": "Record.serializeHeader(final InternalDeSerializer serializer, final int[] offsets, final int numFields)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(DataOutputView out)", "modifiers": "@Override public", "return": "void", "signature": "void write(DataOutputView out)", "full_signature": "@Override public void write(DataOutputView out)", "class_method_signature": "Record.write(DataOutputView out)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(DataInputView in)", "modifiers": "@Override public", "return": "void", "signature": "void read(DataInputView in)", "full_signature": "@Override public void read(DataInputView in)", "class_method_signature": "Record.read(DataInputView in)", "testcase": false, "constructor": false}, {"identifier": "initFields", "parameters": "(final byte[] data, final int begin, final int len)", "modifiers": "private", "return": "void", "signature": "void initFields(final byte[] data, final int begin, final int len)", "full_signature": "private void initFields(final byte[] data, final int begin, final int len)", "class_method_signature": "Record.initFields(final byte[] data, final int begin, final int len)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(DataOutputView target)", "modifiers": "public", "return": "long", "signature": "long serialize(DataOutputView target)", "full_signature": "public long serialize(DataOutputView target)", "class_method_signature": "Record.serialize(DataOutputView target)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(DataInputView source)", "modifiers": "public", "return": "void", "signature": "void deserialize(DataInputView source)", "full_signature": "public void deserialize(DataInputView source)", "class_method_signature": "Record.deserialize(DataInputView source)", "testcase": false, "constructor": false}, {"identifier": "writeVarLengthInt", "parameters": "(DataOutput out, int value)", "modifiers": "private static final", "return": "void", "signature": "void writeVarLengthInt(DataOutput out, int value)", "full_signature": "private static final void writeVarLengthInt(DataOutput out, int value)", "class_method_signature": "Record.writeVarLengthInt(DataOutput out, int value)", "testcase": false, "constructor": false}, {"identifier": "readVarLengthInt", "parameters": "(DataInput in)", "modifiers": "private static final", "return": "int", "signature": "int readVarLengthInt(DataInput in)", "full_signature": "private static final int readVarLengthInt(DataInput in)", "class_method_signature": "Record.readVarLengthInt(DataInput in)", "testcase": false, "constructor": false}], "file": "flink-core/src/main/java/org/apache/flink/types/Record.java"}, "focal_method": {"identifier": "removeField", "parameters": "(int fieldNum)", "modifiers": "public", "return": "void", "body": "public void removeField(int fieldNum)\n\t{\n\t\t// range check\n\t\tif (fieldNum < 0 || fieldNum >= this.numFields) {\n\t\t\tthrow new IndexOutOfBoundsException();\n\t\t}\n\t\tint lastIndex = this.numFields - 1;\t\t\n\n\t\tif (fieldNum < lastIndex) {\n\t\t\tint len = lastIndex - fieldNum;\n\t\t\tSystem.arraycopy(this.offsets, fieldNum + 1, this.offsets, fieldNum, len);\n\t\t\tSystem.arraycopy(this.lengths, fieldNum + 1, this.lengths, fieldNum, len);\n\t\t\tSystem.arraycopy(this.readFields, fieldNum + 1, this.readFields, fieldNum, len);\n\t\t\tSystem.arraycopy(this.writeFields, fieldNum + 1, this.writeFields, fieldNum, len);\n\t\t\tmarkModified(fieldNum);\n\t\t}\n\t\tthis.offsets[lastIndex] = NULL_INDICATOR_OFFSET;\n\t\tthis.lengths[lastIndex] = 0;\n\t\tthis.writeFields[lastIndex] = null;\n\n\t\tsetNumFields(lastIndex);\n\t}", "signature": "void removeField(int fieldNum)", "full_signature": "public void removeField(int fieldNum)", "class_method_signature": "Record.removeField(int fieldNum)", "testcase": false, "constructor": false, "invocations": ["arraycopy", "arraycopy", "arraycopy", "arraycopy", "markModified", "setNumFields"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}