{"test_class": {"identifier": "JSONParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String jsonText;", "modifier": "private", "type": "String", "declarator": "jsonText", "var_name": "jsonText"}, {"original_string": "private String searchedField;", "modifier": "private", "type": "String", "declarator": "searchedField", "var_name": "searchedField"}], "file": "flink-streaming-connectors/flink-connector-twitter/src/test/java/org/apache/flink/streaming/connectors/json/JSONParserTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test() {\n\t\ttry {\n\t\t\tJSONParser parser = new JSONParser(jsonText);\n\t\t\tJSONObject jo = parser.parse(searchedField);\n\t\t\tString expected = \"{\\\"retValue\\\":\\\"value\\\"}\";\n\n\t\t\tassertTrue(expected.equals(jo.toString()));\n\t\t} \n\t\tcatch (JSONException e) {\n\t\t\tfail();\n\t\t}\n\t}", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "JSONParserTest.test()", "testcase": true, "constructor": false, "invocations": ["parse", "assertTrue", "equals", "toString", "fail"]}, "focal_class": {"identifier": "JSONParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JSONObject originalJO;", "modifier": "private", "type": "JSONObject", "declarator": "originalJO", "var_name": "originalJO"}, {"original_string": "private String searchedfield;", "modifier": "private", "type": "String", "declarator": "searchedfield", "var_name": "searchedfield"}, {"original_string": "private Object temp;", "modifier": "private", "type": "Object", "declarator": "temp", "var_name": "temp"}], "methods": [{"identifier": "JSONParser", "parameters": "(String jsonText)", "modifiers": "public", "return": "", "signature": " JSONParser(String jsonText)", "full_signature": "public  JSONParser(String jsonText)", "class_method_signature": "JSONParser.JSONParser(String jsonText)", "testcase": false, "constructor": true}, {"identifier": "parse", "parameters": "(String key)", "modifiers": "public", "return": "JSONObject", "signature": "JSONObject parse(String key)", "full_signature": "public JSONObject parse(String key)", "class_method_signature": "JSONParser.parse(String key)", "testcase": false, "constructor": false}, {"identifier": "initializeParser", "parameters": "(String key)", "modifiers": "private", "return": "void", "signature": "void initializeParser(String key)", "full_signature": "private void initializeParser(String key)", "class_method_signature": "JSONParser.initializeParser(String key)", "testcase": false, "constructor": false}, {"identifier": "parsing", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void parsing()", "full_signature": "private void parsing()", "class_method_signature": "JSONParser.parsing()", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(String nextToken)", "modifiers": "private", "return": "void", "signature": "void find(String nextToken)", "full_signature": "private void find(String nextToken)", "class_method_signature": "JSONParser.find(String nextToken)", "testcase": false, "constructor": false}, {"identifier": "endsWithBracket", "parameters": "(String nextToken)", "modifiers": "private", "return": "boolean", "signature": "boolean endsWithBracket(String nextToken)", "full_signature": "private boolean endsWithBracket(String nextToken)", "class_method_signature": "JSONParser.endsWithBracket(String nextToken)", "testcase": false, "constructor": false}, {"identifier": "treatAllBracket", "parameters": "(String nextToken)", "modifiers": "private", "return": "void", "signature": "void treatAllBracket(String nextToken)", "full_signature": "private void treatAllBracket(String nextToken)", "class_method_signature": "JSONParser.treatAllBracket(String nextToken)", "testcase": false, "constructor": false}, {"identifier": "cutBracket", "parameters": "(String string)", "modifiers": "private", "return": "String", "signature": "String cutBracket(String string)", "full_signature": "private String cutBracket(String string)", "class_method_signature": "JSONParser.cutBracket(String string)", "testcase": false, "constructor": false}, {"identifier": "putResultInJSONObj", "parameters": "()", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject putResultInJSONObj()", "full_signature": "private JSONObject putResultInJSONObj()", "class_method_signature": "JSONParser.putResultInJSONObj()", "testcase": false, "constructor": false}], "file": "flink-streaming-connectors/flink-connector-twitter/src/main/java/org/apache/flink/streaming/connectors/json/JSONParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(String key)", "modifiers": "public", "return": "JSONObject", "body": "public JSONObject parse(String key) throws JSONException {\n\t\tinitializeParser(key);\n\t\tparsing();\n\t\treturn putResultInJSONObj();\n\t}", "signature": "JSONObject parse(String key)", "full_signature": "public JSONObject parse(String key)", "class_method_signature": "JSONParser.parse(String key)", "testcase": false, "constructor": false, "invocations": ["initializeParser", "parsing", "putResultInJSONObj"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}