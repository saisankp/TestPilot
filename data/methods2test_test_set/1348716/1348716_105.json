{"test_class": {"identifier": "LoanAccountActionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private QuestionnaireServiceFacade questionnaireServiceFacade;", "modifier": "@Mock\n    private", "type": "QuestionnaireServiceFacade", "declarator": "questionnaireServiceFacade", "var_name": "questionnaireServiceFacade"}, {"original_string": "@Mock\n    private HttpServletRequest request;", "modifier": "@Mock\n    private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private HttpServletResponse response;", "modifier": "@Mock\n    private", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "@Mock\n    private HttpSession session;", "modifier": "@Mock\n    private", "type": "HttpSession", "declarator": "session", "var_name": "session"}, {"original_string": "@Mock\n    private FlowManager flowManager;", "modifier": "@Mock\n    private", "type": "FlowManager", "declarator": "flowManager", "var_name": "flowManager"}, {"original_string": "@Mock\n    private ActionMapping mapping;", "modifier": "@Mock\n    private", "type": "ActionMapping", "declarator": "mapping", "var_name": "mapping"}, {"original_string": "private LoanAccountAction loanAccountAction;", "modifier": "private", "type": "LoanAccountAction", "declarator": "loanAccountAction", "var_name": "loanAccountAction"}, {"original_string": "public static final String FLOW_KEY = \"FlowKey\";", "modifier": "public static final", "type": "String", "declarator": "FLOW_KEY = \"FlowKey\"", "var_name": "FLOW_KEY"}, {"original_string": "@Mock\n    private LoanAccountActionForm form;", "modifier": "@Mock\n    private", "type": "LoanAccountActionForm", "declarator": "form", "var_name": "form"}, {"original_string": "private Flow flow;", "modifier": "private", "type": "Flow", "declarator": "flow", "var_name": "flow"}, {"original_string": "@Mock\n    private LoanPrdBusinessService loanPrdBusinessService;", "modifier": "@Mock\n    private", "type": "LoanPrdBusinessService", "declarator": "loanPrdBusinessService", "var_name": "loanPrdBusinessService"}, {"original_string": "@Mock\n    private LoanServiceFacade loanServiceFacade;", "modifier": "@Mock\n    private", "type": "LoanServiceFacade", "declarator": "loanServiceFacade", "var_name": "loanServiceFacade"}, {"original_string": "@Mock\n    private LoanAccountServiceFacade loanAccountServiceFacade;", "modifier": "@Mock\n    private", "type": "LoanAccountServiceFacade", "declarator": "loanAccountServiceFacade", "var_name": "loanAccountServiceFacade"}, {"original_string": "@Mock\n    private UserContext userContext;", "modifier": "@Mock\n    private", "type": "UserContext", "declarator": "userContext", "var_name": "userContext"}, {"original_string": "private Short localeId = new Short(\"1\");", "modifier": "private", "type": "Short", "declarator": "localeId = new Short(\"1\")", "var_name": "localeId"}, {"original_string": "@Mock\n    private LoanBusinessService loanBusinessService;", "modifier": "@Mock\n    private", "type": "LoanBusinessService", "declarator": "loanBusinessService", "var_name": "loanBusinessService"}, {"original_string": "@Mock\n    private CustomerDao customerDao;", "modifier": "@Mock\n    private", "type": "CustomerDao", "declarator": "customerDao", "var_name": "customerDao"}, {"original_string": "@Mock\n    private QuestionnaireFlowAdapter createLoanQuestionnaire;", "modifier": "@Mock\n    private", "type": "QuestionnaireFlowAdapter", "declarator": "createLoanQuestionnaire", "var_name": "createLoanQuestionnaire"}, {"original_string": "@Mock\n    private LoanBO loanBO;", "modifier": "@Mock\n    private", "type": "LoanBO", "declarator": "loanBO", "var_name": "loanBO"}], "file": "application/src/test/java/org/mifos/accounts/loan/struts/action/LoanAccountActionTest.java"}, "test_case": {"identifier": "getLoanRepaymentScheduleShouldValidateViewDate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getLoanRepaymentScheduleShouldValidateViewDate() throws Exception {\n        ActionForward getLoanScheduleFailure = new ActionForward(\"getLoanRepaymentScheduleFailure\");\n        java.sql.Date extraInterestDate = TestUtils.getSqlDate(10, 7, 2010);\n        Errors errors = new Errors();\n        errors.addError(LoanConstants.CANNOT_VIEW_REPAYMENT_SCHEDULE, new String[] {extraInterestDate.toString()});\n        when(loanBusinessService.computeExtraInterest(loanBO, extraInterestDate)).thenReturn(errors);\n        when(form.getScheduleViewDateValue(Locale.US)).thenReturn(extraInterestDate);\n        when(request.getParameter(\"accountId\")).thenReturn(\"1\");\n        when(mapping.findForward(\"getLoanRepaymentScheduleFailure\")).thenReturn(getLoanScheduleFailure);\n        when(loanServiceFacade.retrieveOriginalLoanSchedule(Matchers.<Integer>any())).\n                thenReturn(new OriginalScheduleInfoDto(\"100\", new Date(), Collections.<RepaymentScheduleInstallment>emptyList()));\n        ActionForward forward = loanAccountAction.getLoanRepaymentSchedule(mapping, form, request, response);\n        assertThat(forward, is(getLoanScheduleFailure));\n        verify(form).resetScheduleViewDate();\n    }", "signature": "void getLoanRepaymentScheduleShouldValidateViewDate()", "full_signature": "@Test public void getLoanRepaymentScheduleShouldValidateViewDate()", "class_method_signature": "LoanAccountActionTest.getLoanRepaymentScheduleShouldValidateViewDate()", "testcase": true, "constructor": false, "invocations": ["getSqlDate", "addError", "toString", "thenReturn", "when", "computeExtraInterest", "thenReturn", "when", "getScheduleViewDateValue", "thenReturn", "when", "getParameter", "thenReturn", "when", "findForward", "thenReturn", "when", "retrieveOriginalLoanSchedule", "any", "emptyList", "getLoanRepaymentSchedule", "assertThat", "is", "resetScheduleViewDate", "verify"]}, "focal_class": {"identifier": "LoanAccountAction", "superclass": "extends AccountAppAction", "interfaces": "implements QuestionnaireAction", "fields": [{"original_string": "private final LoanBusinessService loanBusinessService;", "modifier": "private final", "type": "LoanBusinessService", "declarator": "loanBusinessService", "var_name": "loanBusinessService"}, {"original_string": "private final LoanPrdBusinessService loanPrdBusinessService;", "modifier": "private final", "type": "LoanPrdBusinessService", "declarator": "loanPrdBusinessService", "var_name": "loanPrdBusinessService"}, {"original_string": "private final ConfigurationPersistence configurationPersistence;", "modifier": "private final", "type": "ConfigurationPersistence", "declarator": "configurationPersistence", "var_name": "configurationPersistence"}, {"original_string": "private final ConfigurationBusinessService configService;", "modifier": "private final", "type": "ConfigurationBusinessService", "declarator": "configService", "var_name": "configService"}, {"original_string": "private final GlimLoanUpdater glimLoanUpdater;", "modifier": "private final", "type": "GlimLoanUpdater", "declarator": "glimLoanUpdater", "var_name": "glimLoanUpdater"}, {"original_string": "public static final String CUSTOMER_ID = \"customerId\";", "modifier": "public static final", "type": "String", "declarator": "CUSTOMER_ID = \"customerId\"", "var_name": "CUSTOMER_ID"}, {"original_string": "public static final String ACCOUNT_ID = \"accountId\";", "modifier": "public static final", "type": "String", "declarator": "ACCOUNT_ID = \"accountId\"", "var_name": "ACCOUNT_ID"}, {"original_string": "public static final String GLOBAL_ACCOUNT_NUM = \"globalAccountNum\";", "modifier": "public static final", "type": "String", "declarator": "GLOBAL_ACCOUNT_NUM = \"globalAccountNum\"", "var_name": "GLOBAL_ACCOUNT_NUM"}, {"original_string": "private QuestionnaireServiceFacadeLocator questionnaireServiceFacadeLocator;", "modifier": "private", "type": "QuestionnaireServiceFacadeLocator", "declarator": "questionnaireServiceFacadeLocator", "var_name": "questionnaireServiceFacadeLocator"}, {"original_string": "private QuestionGroupFilterForLoan questionGroupFilter;", "modifier": "private", "type": "QuestionGroupFilterForLoan", "declarator": "questionGroupFilter", "var_name": "questionGroupFilter"}, {"original_string": "private QuestionnaireFlowAdapter createLoanQuestionnaire;", "modifier": "private", "type": "QuestionnaireFlowAdapter", "declarator": "createLoanQuestionnaire", "var_name": "createLoanQuestionnaire"}, {"original_string": "private GroupLoanAccountServiceFacade groupLoanAccountServiceFacade;", "modifier": "private", "type": "GroupLoanAccountServiceFacade", "declarator": "groupLoanAccountServiceFacade", "var_name": "groupLoanAccountServiceFacade"}, {"original_string": "private InformationOrderServiceFacade informationOrderServiceFacade;", "modifier": "private", "type": "InformationOrderServiceFacade", "declarator": "informationOrderServiceFacade", "var_name": "informationOrderServiceFacade"}], "methods": [{"identifier": "LoanAccountAction", "parameters": "()", "modifiers": "public", "return": "", "signature": " LoanAccountAction()", "full_signature": "public  LoanAccountAction()", "class_method_signature": "LoanAccountAction.LoanAccountAction()", "testcase": false, "constructor": true}, {"identifier": "LoanAccountAction", "parameters": "(final ConfigurationBusinessService configService,\n                             final LoanBusinessService loanBusinessService, final GlimLoanUpdater glimLoanUpdater,\n                             final LoanPrdBusinessService loanPrdBusinessService,\n                             final ConfigurationPersistence configurationPersistence,\n                             final AccountBusinessService accountBusinessService,\n                             final GroupLoanAccountServiceFacade groupLoanAccountServiceFacade,\n                             final InformationOrderServiceFacade informationOrderServiceFacade)", "modifiers": "public", "return": "", "signature": " LoanAccountAction(final ConfigurationBusinessService configService,\n                             final LoanBusinessService loanBusinessService, final GlimLoanUpdater glimLoanUpdater,\n                             final LoanPrdBusinessService loanPrdBusinessService,\n                             final ConfigurationPersistence configurationPersistence,\n                             final AccountBusinessService accountBusinessService,\n                             final GroupLoanAccountServiceFacade groupLoanAccountServiceFacade,\n                             final InformationOrderServiceFacade informationOrderServiceFacade)", "full_signature": "public  LoanAccountAction(final ConfigurationBusinessService configService,\n                             final LoanBusinessService loanBusinessService, final GlimLoanUpdater glimLoanUpdater,\n                             final LoanPrdBusinessService loanPrdBusinessService,\n                             final ConfigurationPersistence configurationPersistence,\n                             final AccountBusinessService accountBusinessService,\n                             final GroupLoanAccountServiceFacade groupLoanAccountServiceFacade,\n                             final InformationOrderServiceFacade informationOrderServiceFacade)", "class_method_signature": "LoanAccountAction.LoanAccountAction(final ConfigurationBusinessService configService,\n                             final LoanBusinessService loanBusinessService, final GlimLoanUpdater glimLoanUpdater,\n                             final LoanPrdBusinessService loanPrdBusinessService,\n                             final ConfigurationPersistence configurationPersistence,\n                             final AccountBusinessService accountBusinessService,\n                             final GroupLoanAccountServiceFacade groupLoanAccountServiceFacade,\n                             final InformationOrderServiceFacade informationOrderServiceFacade)", "testcase": false, "constructor": true}, {"identifier": "getCreateLoanQuestionnaire", "parameters": "()", "modifiers": "", "return": "QuestionnaireFlowAdapter", "signature": "QuestionnaireFlowAdapter getCreateLoanQuestionnaire()", "full_signature": " QuestionnaireFlowAdapter getCreateLoanQuestionnaire()", "class_method_signature": "LoanAccountAction.getCreateLoanQuestionnaire()", "testcase": false, "constructor": false}, {"identifier": "LoanAccountAction", "parameters": "(final LoanBusinessService loanBusinessService, final ConfigurationBusinessService configService,\n                      final GlimLoanUpdater glimLoanUpdater)", "modifiers": "@Deprecated", "return": "", "signature": " LoanAccountAction(final LoanBusinessService loanBusinessService, final ConfigurationBusinessService configService,\n                      final GlimLoanUpdater glimLoanUpdater)", "full_signature": "@Deprecated  LoanAccountAction(final LoanBusinessService loanBusinessService, final ConfigurationBusinessService configService,\n                      final GlimLoanUpdater glimLoanUpdater)", "class_method_signature": "LoanAccountAction.LoanAccountAction(final LoanBusinessService loanBusinessService, final ConfigurationBusinessService configService,\n                      final GlimLoanUpdater glimLoanUpdater)", "testcase": false, "constructor": true}, {"identifier": "LoanAccountAction", "parameters": "(final ConfigurationBusinessService configService,\n                              final LoanBusinessService loanBusinessService, final GlimLoanUpdater glimLoanUpdater)", "modifiers": "@Deprecated private", "return": "", "signature": " LoanAccountAction(final ConfigurationBusinessService configService,\n                              final LoanBusinessService loanBusinessService, final GlimLoanUpdater glimLoanUpdater)", "full_signature": "@Deprecated private  LoanAccountAction(final ConfigurationBusinessService configService,\n                              final LoanBusinessService loanBusinessService, final GlimLoanUpdater glimLoanUpdater)", "class_method_signature": "LoanAccountAction.LoanAccountAction(final ConfigurationBusinessService configService,\n                              final LoanBusinessService loanBusinessService, final GlimLoanUpdater glimLoanUpdater)", "testcase": false, "constructor": true}, {"identifier": "getFunds", "parameters": "(final LoanOfferingBO loanOffering)", "modifiers": "private", "return": "List<FundBO>", "signature": "List<FundBO> getFunds(final LoanOfferingBO loanOffering)", "full_signature": "private List<FundBO> getFunds(final LoanOfferingBO loanOffering)", "class_method_signature": "LoanAccountAction.getFunds(final LoanOfferingBO loanOffering)", "testcase": false, "constructor": false}, {"identifier": "viewAndEditAdditionalInformation", "parameters": "(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "public", "return": "ActionForward", "signature": "ActionForward viewAndEditAdditionalInformation(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "public ActionForward viewAndEditAdditionalInformation(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.viewAndEditAdditionalInformation(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "setPerspective", "parameters": "(HttpServletRequest request, String perspective)", "modifiers": "private", "return": "void", "signature": "void setPerspective(HttpServletRequest request, String perspective)", "full_signature": "private void setPerspective(HttpServletRequest request, String perspective)", "class_method_signature": "LoanAccountAction.setPerspective(HttpServletRequest request, String perspective)", "testcase": false, "constructor": false}, {"identifier": "getInstallmentDetails", "parameters": "(final ActionMapping mapping,\n                                               @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request,\n                                               @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) public", "return": "ActionForward", "signature": "ActionForward getInstallmentDetails(final ActionMapping mapping,\n                                               @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request,\n                                               @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) public ActionForward getInstallmentDetails(final ActionMapping mapping,\n                                               @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request,\n                                               @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.getInstallmentDetails(final ActionMapping mapping,\n                                               @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request,\n                                               @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getAllActivity", "parameters": "(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form,\n                                        final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) public", "return": "ActionForward", "signature": "ActionForward getAllActivity(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form,\n                                        final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) public ActionForward getAllActivity(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form,\n                                        final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.getAllActivity(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form,\n                                        final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "forwardWaiveCharge", "parameters": "(final ActionMapping mapping,\n                                            @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request,\n                                            @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) public", "return": "ActionForward", "signature": "ActionForward forwardWaiveCharge(final ActionMapping mapping,\n                                            @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request,\n                                            @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) public ActionForward forwardWaiveCharge(final ActionMapping mapping,\n                                            @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request,\n                                            @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.forwardWaiveCharge(final ActionMapping mapping,\n                                            @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request,\n                                            @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                             @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(saveToken = true) public", "return": "ActionForward", "signature": "ActionForward get(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                             @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(saveToken = true) public ActionForward get(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                             @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.get(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                             @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "setOverpayments", "parameters": "(HttpServletRequest request, LoanBO loan)", "modifiers": "private", "return": "void", "signature": "void setOverpayments(HttpServletRequest request, LoanBO loan)", "full_signature": "private void setOverpayments(HttpServletRequest request, LoanBO loan)", "class_method_signature": "LoanAccountAction.setOverpayments(HttpServletRequest request, LoanBO loan)", "testcase": false, "constructor": false}, {"identifier": "addEmptyBuisnessActivities", "parameters": "(List<LoanAccountDetailsDto> loanAccountDetails)", "modifiers": "private", "return": "void", "signature": "void addEmptyBuisnessActivities(List<LoanAccountDetailsDto> loanAccountDetails)", "full_signature": "private void addEmptyBuisnessActivities(List<LoanAccountDetailsDto> loanAccountDetails)", "class_method_signature": "LoanAccountAction.addEmptyBuisnessActivities(List<LoanAccountDetailsDto> loanAccountDetails)", "testcase": false, "constructor": false}, {"identifier": "setQuestionGroupInstances", "parameters": "(HttpServletRequest request, LoanBO loanBO)", "modifiers": "private", "return": "void", "signature": "void setQuestionGroupInstances(HttpServletRequest request, LoanBO loanBO)", "full_signature": "private void setQuestionGroupInstances(HttpServletRequest request, LoanBO loanBO)", "class_method_signature": "LoanAccountAction.setQuestionGroupInstances(HttpServletRequest request, LoanBO loanBO)", "testcase": false, "constructor": false}, {"identifier": "setQuestionGroupInstances", "parameters": "(QuestionnaireServiceFacade questionnaireServiceFacade, HttpServletRequest request, Integer loanAccountId)", "modifiers": "public", "return": "void", "signature": "void setQuestionGroupInstances(QuestionnaireServiceFacade questionnaireServiceFacade, HttpServletRequest request, Integer loanAccountId)", "full_signature": "public void setQuestionGroupInstances(QuestionnaireServiceFacade questionnaireServiceFacade, HttpServletRequest request, Integer loanAccountId)", "class_method_signature": "LoanAccountAction.setQuestionGroupInstances(QuestionnaireServiceFacade questionnaireServiceFacade, HttpServletRequest request, Integer loanAccountId)", "testcase": false, "constructor": false}, {"identifier": "setCurrentPageUrl", "parameters": "(HttpServletRequest request, LoanBO loanBO)", "modifiers": "private", "return": "void", "signature": "void setCurrentPageUrl(HttpServletRequest request, LoanBO loanBO)", "full_signature": "private void setCurrentPageUrl(HttpServletRequest request, LoanBO loanBO)", "class_method_signature": "LoanAccountAction.setCurrentPageUrl(HttpServletRequest request, LoanBO loanBO)", "testcase": false, "constructor": false}, {"identifier": "constructCurrentPageUrl", "parameters": "(HttpServletRequest request, LoanBO loanBO)", "modifiers": "private", "return": "String", "signature": "String constructCurrentPageUrl(HttpServletRequest request, LoanBO loanBO)", "full_signature": "private String constructCurrentPageUrl(HttpServletRequest request, LoanBO loanBO)", "class_method_signature": "LoanAccountAction.constructCurrentPageUrl(HttpServletRequest request, LoanBO loanBO)", "testcase": false, "constructor": false}, {"identifier": "getLoanRepaymentSchedule", "parameters": "(final ActionMapping mapping,\n                                                  final ActionForm form, final HttpServletRequest request,\n                                                  @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(saveToken = true) public", "return": "ActionForward", "signature": "ActionForward getLoanRepaymentSchedule(final ActionMapping mapping,\n                                                  final ActionForm form, final HttpServletRequest request,\n                                                  @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(saveToken = true) public ActionForward getLoanRepaymentSchedule(final ActionMapping mapping,\n                                                  final ActionForm form, final HttpServletRequest request,\n                                                  @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.getLoanRepaymentSchedule(final ActionMapping mapping,\n                                                  final ActionForm form, final HttpServletRequest request,\n                                                  @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getLoan", "parameters": "(Integer loanId)", "modifiers": "", "return": "LoanBO", "signature": "LoanBO getLoan(Integer loanId)", "full_signature": " LoanBO getLoan(Integer loanId)", "class_method_signature": "LoanAccountAction.getLoan(Integer loanId)", "testcase": false, "constructor": false}, {"identifier": "viewOriginalSchedule", "parameters": "(final ActionMapping mapping,\n                                              @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request,\n                                              @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) public", "return": "ActionForward", "signature": "ActionForward viewOriginalSchedule(final ActionMapping mapping,\n                                              @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request,\n                                              @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) public ActionForward viewOriginalSchedule(final ActionMapping mapping,\n                                              @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request,\n                                              @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.viewOriginalSchedule(final ActionMapping mapping,\n                                              @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request,\n                                              @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "viewStatusHistory", "parameters": "(final ActionMapping mapping,\n                                           @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request,\n                                           @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) public", "return": "ActionForward", "signature": "ActionForward viewStatusHistory(final ActionMapping mapping,\n                                           @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request,\n                                           @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) public ActionForward viewStatusHistory(final ActionMapping mapping,\n                                           @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request,\n                                           @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.viewStatusHistory(final ActionMapping mapping,\n                                           @SuppressWarnings(\"unused\") final ActionForm form, final HttpServletRequest request,\n                                           @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                                  @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) public", "return": "ActionForward", "signature": "ActionForward validate(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                                  @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) public ActionForward validate(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                                  @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.validate(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                                  @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "setMonthlySchedule", "parameters": "(final LoanAccountActionForm loanActionForm,\n                                    final MeetingDetailsEntity meetingDetails)", "modifiers": "private", "return": "void", "signature": "void setMonthlySchedule(final LoanAccountActionForm loanActionForm,\n                                    final MeetingDetailsEntity meetingDetails)", "full_signature": "private void setMonthlySchedule(final LoanAccountActionForm loanActionForm,\n                                    final MeetingDetailsEntity meetingDetails)", "class_method_signature": "LoanAccountAction.setMonthlySchedule(final LoanAccountActionForm loanActionForm,\n                                    final MeetingDetailsEntity meetingDetails)", "testcase": false, "constructor": false}, {"identifier": "setWeeklySchedule", "parameters": "(final LoanAccountActionForm loanActionForm, final MeetingDetailsEntity meetingDetail)", "modifiers": "private", "return": "void", "signature": "void setWeeklySchedule(final LoanAccountActionForm loanActionForm, final MeetingDetailsEntity meetingDetail)", "full_signature": "private void setWeeklySchedule(final LoanAccountActionForm loanActionForm, final MeetingDetailsEntity meetingDetail)", "class_method_signature": "LoanAccountAction.setWeeklySchedule(final LoanAccountActionForm loanActionForm, final MeetingDetailsEntity meetingDetail)", "testcase": false, "constructor": false}, {"identifier": "redoLoanBegin", "parameters": "(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form,\n                                       @SuppressWarnings(\"unused\") final HttpServletRequest request,\n                                       @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "public", "return": "ActionForward", "signature": "ActionForward redoLoanBegin(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form,\n                                       @SuppressWarnings(\"unused\") final HttpServletRequest request,\n                                       @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "public ActionForward redoLoanBegin(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form,\n                                       @SuppressWarnings(\"unused\") final HttpServletRequest request,\n                                       @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.redoLoanBegin(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form,\n                                       @SuppressWarnings(\"unused\") final HttpServletRequest request,\n                                       @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "resolveRepaymentStartDate", "parameters": "(final Date disbursementDate)", "modifiers": "private", "return": "Date", "signature": "Date resolveRepaymentStartDate(final Date disbursementDate)", "full_signature": "private Date resolveRepaymentStartDate(final Date disbursementDate)", "class_method_signature": "LoanAccountAction.resolveRepaymentStartDate(final Date disbursementDate)", "testcase": false, "constructor": false}, {"identifier": "getLoanAccountDetailsFromSession", "parameters": "(final HttpServletRequest request)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "List<LoanAccountDetailsDto>", "signature": "List<LoanAccountDetailsDto> getLoanAccountDetailsFromSession(final HttpServletRequest request)", "full_signature": "@SuppressWarnings(\"unchecked\") private List<LoanAccountDetailsDto> getLoanAccountDetailsFromSession(final HttpServletRequest request)", "class_method_signature": "LoanAccountAction.getLoanAccountDetailsFromSession(final HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "manage", "parameters": "(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                                @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) public", "return": "ActionForward", "signature": "ActionForward manage(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                                @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) public ActionForward manage(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                                @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.manage(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                                @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "setSessionAtributeForGLIM", "parameters": "(final HttpServletRequest request, LoanBO loanBO)", "modifiers": "public static", "return": "void", "signature": "void setSessionAtributeForGLIM(final HttpServletRequest request, LoanBO loanBO)", "full_signature": "public static void setSessionAtributeForGLIM(final HttpServletRequest request, LoanBO loanBO)", "class_method_signature": "LoanAccountAction.setSessionAtributeForGLIM(final HttpServletRequest request, LoanBO loanBO)", "testcase": false, "constructor": false}, {"identifier": "getLoanBO", "parameters": "(final HttpServletRequest request)", "modifiers": "private", "return": "LoanBO", "signature": "LoanBO getLoanBO(final HttpServletRequest request)", "full_signature": "private LoanBO getLoanBO(final HttpServletRequest request)", "class_method_signature": "LoanAccountAction.getLoanBO(final HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "setRequestAttributesForEditPage", "parameters": "(final HttpServletRequest request, final LoanBO loanBO)", "modifiers": "private", "return": "void", "signature": "void setRequestAttributesForEditPage(final HttpServletRequest request, final LoanBO loanBO)", "full_signature": "private void setRequestAttributesForEditPage(final HttpServletRequest request, final LoanBO loanBO)", "class_method_signature": "LoanAccountAction.setRequestAttributesForEditPage(final HttpServletRequest request, final LoanBO loanBO)", "testcase": false, "constructor": false}, {"identifier": "getCustomerFromRequest", "parameters": "(final HttpServletRequest request)", "modifiers": "private", "return": "CustomerBO", "signature": "CustomerBO getCustomerFromRequest(final HttpServletRequest request)", "full_signature": "private CustomerBO getCustomerFromRequest(final HttpServletRequest request)", "class_method_signature": "LoanAccountAction.getCustomerFromRequest(final HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "populateGlimAttributes", "parameters": "(final HttpServletRequest request, final LoanAccountActionForm loanActionForm,\n                                        final String globalAccountNum, final CustomerBO customer)", "modifiers": "private", "return": "void", "signature": "void populateGlimAttributes(final HttpServletRequest request, final LoanAccountActionForm loanActionForm,\n                                        final String globalAccountNum, final CustomerBO customer)", "full_signature": "private void populateGlimAttributes(final HttpServletRequest request, final LoanAccountActionForm loanActionForm,\n                                        final String globalAccountNum, final CustomerBO customer)", "class_method_signature": "LoanAccountAction.populateGlimAttributes(final HttpServletRequest request, final LoanAccountActionForm loanActionForm,\n                                        final String globalAccountNum, final CustomerBO customer)", "testcase": false, "constructor": false}, {"identifier": "getGlimSpecificPropertiesToSet", "parameters": "(final LoanAccountActionForm loanActionForm,\n                                                         final String globalAccountNum, final CustomerBO customer, final List<ValueListElement> businessActivities)", "modifiers": "", "return": "GlimSessionAttributes", "signature": "GlimSessionAttributes getGlimSpecificPropertiesToSet(final LoanAccountActionForm loanActionForm,\n                                                         final String globalAccountNum, final CustomerBO customer, final List<ValueListElement> businessActivities)", "full_signature": " GlimSessionAttributes getGlimSpecificPropertiesToSet(final LoanAccountActionForm loanActionForm,\n                                                         final String globalAccountNum, final CustomerBO customer, final List<ValueListElement> businessActivities)", "class_method_signature": "LoanAccountAction.getGlimSpecificPropertiesToSet(final LoanAccountActionForm loanActionForm,\n                                                         final String globalAccountNum, final CustomerBO customer, final List<ValueListElement> businessActivities)", "testcase": false, "constructor": false}, {"identifier": "fetchClientIdsWithMatchingLoans", "parameters": "(final List<LoanBO> individualLoans,\n                                                         final List<LoanAccountDetailsDto> clientDetails)", "modifiers": "private", "return": "List<String>", "signature": "List<String> fetchClientIdsWithMatchingLoans(final List<LoanBO> individualLoans,\n                                                         final List<LoanAccountDetailsDto> clientDetails)", "full_signature": "private List<String> fetchClientIdsWithMatchingLoans(final List<LoanBO> individualLoans,\n                                                         final List<LoanAccountDetailsDto> clientDetails)", "class_method_signature": "LoanAccountAction.fetchClientIdsWithMatchingLoans(final List<LoanBO> individualLoans,\n                                                         final List<LoanAccountDetailsDto> clientDetails)", "testcase": false, "constructor": false}, {"identifier": "populateClientDetailsFromLoan", "parameters": "(final List<ClientBO> activeClientsUnderGroup,\n                                                              final List<LoanBO> individualLoans, final List<ValueListElement> businessActivities)", "modifiers": "", "return": "List<LoanAccountDetailsDto>", "signature": "List<LoanAccountDetailsDto> populateClientDetailsFromLoan(final List<ClientBO> activeClientsUnderGroup,\n                                                              final List<LoanBO> individualLoans, final List<ValueListElement> businessActivities)", "full_signature": " List<LoanAccountDetailsDto> populateClientDetailsFromLoan(final List<ClientBO> activeClientsUnderGroup,\n                                                              final List<LoanBO> individualLoans, final List<ValueListElement> businessActivities)", "class_method_signature": "LoanAccountAction.populateClientDetailsFromLoan(final List<ClientBO> activeClientsUnderGroup,\n                                                              final List<LoanBO> individualLoans, final List<ValueListElement> businessActivities)", "testcase": false, "constructor": false}, {"identifier": "managePrevious", "parameters": "(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form,\n                                        final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) public", "return": "ActionForward", "signature": "ActionForward managePrevious(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form,\n                                        final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) public ActionForward managePrevious(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form,\n                                        final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.managePrevious(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form,\n                                        final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "managePreview", "parameters": "(final ActionMapping mapping, final ActionForm form,\n                                       final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) public", "return": "ActionForward", "signature": "ActionForward managePreview(final ActionMapping mapping, final ActionForm form,\n                                       final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) public ActionForward managePreview(final ActionMapping mapping, final ActionForm form,\n                                       final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.managePreview(final ActionMapping mapping, final ActionForm form,\n                                       final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getFund", "parameters": "(LoanAccountActionForm loanAccountActionForm)", "modifiers": "private", "return": "FundBO", "signature": "FundBO getFund(LoanAccountActionForm loanAccountActionForm)", "full_signature": "private FundBO getFund(LoanAccountActionForm loanAccountActionForm)", "class_method_signature": "LoanAccountAction.getFund(LoanAccountActionForm loanAccountActionForm)", "testcase": false, "constructor": false}, {"identifier": "performGlimSpecificOnManagePreview", "parameters": "(final HttpServletRequest request,final LoanAccountActionForm loanAccountForm)", "modifiers": "private", "return": "void", "signature": "void performGlimSpecificOnManagePreview(final HttpServletRequest request,final LoanAccountActionForm loanAccountForm)", "full_signature": "private void performGlimSpecificOnManagePreview(final HttpServletRequest request,final LoanAccountActionForm loanAccountForm)", "class_method_signature": "LoanAccountAction.performGlimSpecificOnManagePreview(final HttpServletRequest request,final LoanAccountActionForm loanAccountForm)", "testcase": false, "constructor": false}, {"identifier": "populateDetailsForSelectedClients", "parameters": "(final List<LoanAccountDetailsDto> clientDetails, final List<String> selectedClients)", "modifiers": "private", "return": "List<LoanAccountDetailsDto>", "signature": "List<LoanAccountDetailsDto> populateDetailsForSelectedClients(final List<LoanAccountDetailsDto> clientDetails, final List<String> selectedClients)", "full_signature": "private List<LoanAccountDetailsDto> populateDetailsForSelectedClients(final List<LoanAccountDetailsDto> clientDetails, final List<String> selectedClients)", "class_method_signature": "LoanAccountAction.populateDetailsForSelectedClients(final List<LoanAccountDetailsDto> clientDetails, final List<String> selectedClients)", "testcase": false, "constructor": false}, {"identifier": "setGovernmentIdAndPurpose", "parameters": "(final LoanAccountDetailsDto clientDetail)", "modifiers": "private", "return": "void", "signature": "void setGovernmentIdAndPurpose(final LoanAccountDetailsDto clientDetail)", "full_signature": "private void setGovernmentIdAndPurpose(final LoanAccountDetailsDto clientDetail)", "class_method_signature": "LoanAccountAction.setGovernmentIdAndPurpose(final LoanAccountDetailsDto clientDetail)", "testcase": false, "constructor": false}, {"identifier": "resetBusinessActivity", "parameters": "(final HttpServletRequest request,final LoanAccountActionForm loanAccountActionForm)", "modifiers": "private", "return": "void", "signature": "void resetBusinessActivity(final HttpServletRequest request,final LoanAccountActionForm loanAccountActionForm)", "full_signature": "private void resetBusinessActivity(final HttpServletRequest request,final LoanAccountActionForm loanAccountActionForm)", "class_method_signature": "LoanAccountAction.resetBusinessActivity(final HttpServletRequest request,final LoanAccountActionForm loanAccountActionForm)", "testcase": false, "constructor": false}, {"identifier": "findGovernmentId", "parameters": "(final Integer clientId)", "modifiers": "private", "return": "String", "signature": "String findGovernmentId(final Integer clientId)", "full_signature": "private String findGovernmentId(final Integer clientId)", "class_method_signature": "LoanAccountAction.findGovernmentId(final Integer clientId)", "testcase": false, "constructor": false}, {"identifier": "findBusinessActivityName", "parameters": "(final String businessActivity)", "modifiers": "private", "return": "String", "signature": "String findBusinessActivityName(final String businessActivity)", "full_signature": "private String findBusinessActivityName(final String businessActivity)", "class_method_signature": "LoanAccountAction.findBusinessActivityName(final String businessActivity)", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form,\n                                @SuppressWarnings(\"unused\") final HttpServletRequest request,\n                                @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(validateAndResetToken = true) public", "return": "ActionForward", "signature": "ActionForward cancel(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form,\n                                @SuppressWarnings(\"unused\") final HttpServletRequest request,\n                                @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(validateAndResetToken = true) public ActionForward cancel(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form,\n                                @SuppressWarnings(\"unused\") final HttpServletRequest request,\n                                @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.cancel(final ActionMapping mapping, @SuppressWarnings(\"unused\") final ActionForm form,\n                                @SuppressWarnings(\"unused\") final HttpServletRequest request,\n                                @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                                @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(validateAndResetToken = true) public", "return": "ActionForward", "signature": "ActionForward update(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                                @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(validateAndResetToken = true) public ActionForward update(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                                @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.update(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                                @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "handleIndividualLoans", "parameters": "(final LoanBO loanBO, final LoanAccountActionForm loanAccountActionForm,\n                               final boolean isRepaymentIndepOfMeetingEnabled, final List<LoanAccountDetailsDto> loanAccountDetailsList,\n                               final List<LoanBO> individualLoans, final Locale locale)", "modifiers": "", "return": "void", "signature": "void handleIndividualLoans(final LoanBO loanBO, final LoanAccountActionForm loanAccountActionForm,\n                               final boolean isRepaymentIndepOfMeetingEnabled, final List<LoanAccountDetailsDto> loanAccountDetailsList,\n                               final List<LoanBO> individualLoans, final Locale locale)", "full_signature": " void handleIndividualLoans(final LoanBO loanBO, final LoanAccountActionForm loanAccountActionForm,\n                               final boolean isRepaymentIndepOfMeetingEnabled, final List<LoanAccountDetailsDto> loanAccountDetailsList,\n                               final List<LoanBO> individualLoans, final Locale locale)", "class_method_signature": "LoanAccountAction.handleIndividualLoans(final LoanBO loanBO, final LoanAccountActionForm loanAccountActionForm,\n                               final boolean isRepaymentIndepOfMeetingEnabled, final List<LoanAccountDetailsDto> loanAccountDetailsList,\n                               final List<LoanBO> individualLoans, final Locale locale)", "testcase": false, "constructor": false}, {"identifier": "createNewMeetingForRepaymentDay", "parameters": "(final HttpServletRequest request,\n                                                      final LoanAccountActionForm loanAccountActionForm, final CustomerBO customer)", "modifiers": "private", "return": "MeetingBO", "signature": "MeetingBO createNewMeetingForRepaymentDay(final HttpServletRequest request,\n                                                      final LoanAccountActionForm loanAccountActionForm, final CustomerBO customer)", "full_signature": "private MeetingBO createNewMeetingForRepaymentDay(final HttpServletRequest request,\n                                                      final LoanAccountActionForm loanAccountActionForm, final CustomerBO customer)", "class_method_signature": "LoanAccountAction.createNewMeetingForRepaymentDay(final HttpServletRequest request,\n                                                      final LoanAccountActionForm loanAccountActionForm, final CustomerBO customer)", "testcase": false, "constructor": false}, {"identifier": "getLoanOffering", "parameters": "(Short loanOfferingId, short localeId)", "modifiers": "private", "return": "LoanOfferingBO", "signature": "LoanOfferingBO getLoanOffering(Short loanOfferingId, short localeId)", "full_signature": "private LoanOfferingBO getLoanOffering(Short loanOfferingId, short localeId)", "class_method_signature": "LoanAccountAction.getLoanOffering(Short loanOfferingId, short localeId)", "testcase": false, "constructor": false}, {"identifier": "getNameForBusinessActivityEntity", "parameters": "(final Integer entityId)", "modifiers": "private", "return": "String", "signature": "String getNameForBusinessActivityEntity(final Integer entityId)", "full_signature": "private String getNameForBusinessActivityEntity(final Integer entityId)", "class_method_signature": "LoanAccountAction.getNameForBusinessActivityEntity(final Integer entityId)", "testcase": false, "constructor": false}, {"identifier": "setFormAttributes", "parameters": "(final LoanBO loan, final ActionForm form, final HttpServletRequest request)", "modifiers": "private", "return": "void", "signature": "void setFormAttributes(final LoanBO loan, final ActionForm form, final HttpServletRequest request)", "full_signature": "private void setFormAttributes(final LoanBO loan, final ActionForm form, final HttpServletRequest request)", "class_method_signature": "LoanAccountAction.setFormAttributes(final LoanBO loan, final ActionForm form, final HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "storeObjectOnSessionForUseInJspPage", "parameters": "(final HttpServletRequest request, final String objectKey,\n                                                     final Serializable value)", "modifiers": "private", "return": "void", "signature": "void storeObjectOnSessionForUseInJspPage(final HttpServletRequest request, final String objectKey,\n                                                     final Serializable value)", "full_signature": "private void storeObjectOnSessionForUseInJspPage(final HttpServletRequest request, final String objectKey,\n                                                     final Serializable value)", "class_method_signature": "LoanAccountAction.storeObjectOnSessionForUseInJspPage(final HttpServletRequest request, final String objectKey,\n                                                     final Serializable value)", "testcase": false, "constructor": false}, {"identifier": "storeCollectionOnSessionForUseInJspPage", "parameters": "(final HttpServletRequest request, final String collectionKey,\n                                                         final Collection<? extends Serializable> collectionValue)", "modifiers": "private", "return": "void", "signature": "void storeCollectionOnSessionForUseInJspPage(final HttpServletRequest request, final String collectionKey,\n                                                         final Collection<? extends Serializable> collectionValue)", "full_signature": "private void storeCollectionOnSessionForUseInJspPage(final HttpServletRequest request, final String collectionKey,\n                                                         final Collection<? extends Serializable> collectionValue)", "class_method_signature": "LoanAccountAction.storeCollectionOnSessionForUseInJspPage(final HttpServletRequest request, final String collectionKey,\n                                                         final Collection<? extends Serializable> collectionValue)", "testcase": false, "constructor": false}, {"identifier": "isGlimEnabled", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isGlimEnabled()", "full_signature": "private boolean isGlimEnabled()", "class_method_signature": "LoanAccountAction.isGlimEnabled()", "testcase": false, "constructor": false}, {"identifier": "isNewGlimEnabled", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isNewGlimEnabled()", "full_signature": "private boolean isNewGlimEnabled()", "class_method_signature": "LoanAccountAction.isNewGlimEnabled()", "testcase": false, "constructor": false}, {"identifier": "setGlimEnabledSessionAttributes", "parameters": "(final HttpServletRequest request, final boolean isGroup)", "modifiers": "private", "return": "void", "signature": "void setGlimEnabledSessionAttributes(final HttpServletRequest request, final boolean isGroup)", "full_signature": "private void setGlimEnabledSessionAttributes(final HttpServletRequest request, final boolean isGroup)", "class_method_signature": "LoanAccountAction.setGlimEnabledSessionAttributes(final HttpServletRequest request, final boolean isGroup)", "testcase": false, "constructor": false}, {"identifier": "handleRepaymentsIndependentOfMeetingIfConfigured", "parameters": "(final HttpServletRequest request,\n                                                                  final LoanAccountActionForm loanActionForm, final String recurMonth)", "modifiers": "private", "return": "void", "signature": "void handleRepaymentsIndependentOfMeetingIfConfigured(final HttpServletRequest request,\n                                                                  final LoanAccountActionForm loanActionForm, final String recurMonth)", "full_signature": "private void handleRepaymentsIndependentOfMeetingIfConfigured(final HttpServletRequest request,\n                                                                  final LoanAccountActionForm loanActionForm, final String recurMonth)", "class_method_signature": "LoanAccountAction.handleRepaymentsIndependentOfMeetingIfConfigured(final HttpServletRequest request,\n                                                                  final LoanAccountActionForm loanActionForm, final String recurMonth)", "testcase": false, "constructor": false}, {"identifier": "fillWeekDaysWithLocalizedName", "parameters": "(List<WeekDay> weekDays)", "modifiers": "private", "return": "List<WeekDay>", "signature": "List<WeekDay> fillWeekDaysWithLocalizedName(List<WeekDay> weekDays)", "full_signature": "private List<WeekDay> fillWeekDaysWithLocalizedName(List<WeekDay> weekDays)", "class_method_signature": "LoanAccountAction.fillWeekDaysWithLocalizedName(List<WeekDay> weekDays)", "testcase": false, "constructor": false}, {"identifier": "captureQuestionResponses", "parameters": "(final ActionMapping mapping, final ActionForm form,\n                                                  final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) @Override public", "return": "ActionForward", "signature": "ActionForward captureQuestionResponses(final ActionMapping mapping, final ActionForm form,\n                                                  final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) @Override public ActionForward captureQuestionResponses(final ActionMapping mapping, final ActionForm form,\n                                                  final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.captureQuestionResponses(final ActionMapping mapping, final ActionForm form,\n                                                  final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "editQuestionResponses", "parameters": "(\n            final ActionMapping mapping, final ActionForm form,\n            final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) @Override public", "return": "ActionForward", "signature": "ActionForward editQuestionResponses(\n            final ActionMapping mapping, final ActionForm form,\n            final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) @Override public ActionForward editQuestionResponses(\n            final ActionMapping mapping, final ActionForm form,\n            final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.editQuestionResponses(\n            final ActionMapping mapping, final ActionForm form,\n            final HttpServletRequest request, @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getActionErrors", "parameters": "(Errors errors)", "modifiers": "private", "return": "ActionErrors", "signature": "ActionErrors getActionErrors(Errors errors)", "full_signature": "private ActionErrors getActionErrors(Errors errors)", "class_method_signature": "LoanAccountAction.getActionErrors(Errors errors)", "testcase": false, "constructor": false}, {"identifier": "setCustomerDao", "parameters": "(CustomerDao customerDao)", "modifiers": "public", "return": "void", "signature": "void setCustomerDao(CustomerDao customerDao)", "full_signature": "public void setCustomerDao(CustomerDao customerDao)", "class_method_signature": "LoanAccountAction.setCustomerDao(CustomerDao customerDao)", "testcase": false, "constructor": false}, {"identifier": "getGroupLoanAccountDetails", "parameters": "(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                             @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(saveToken = true) public", "return": "ActionForward", "signature": "ActionForward getGroupLoanAccountDetails(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                             @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(saveToken = true) public ActionForward getGroupLoanAccountDetails(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                             @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.getGroupLoanAccountDetails(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n                             @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getGroupLoanRepaymentSchedule", "parameters": "(final ActionMapping mapping,\n                                                  final ActionForm form, final HttpServletRequest request,\n                                                  @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) public", "return": "ActionForward", "signature": "ActionForward getGroupLoanRepaymentSchedule(final ActionMapping mapping,\n                                                  final ActionForm form, final HttpServletRequest request,\n                                                  @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) public ActionForward getGroupLoanRepaymentSchedule(final ActionMapping mapping,\n                                                  final ActionForm form, final HttpServletRequest request,\n                                                  @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.getGroupLoanRepaymentSchedule(final ActionMapping mapping,\n                                                  final ActionForm form, final HttpServletRequest request,\n                                                  @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getMembersAccountId", "parameters": "(List<LoanBO> membersAccount)", "modifiers": "private", "return": "List<Integer>", "signature": "List<Integer> getMembersAccountId(List<LoanBO> membersAccount)", "full_signature": "private List<Integer> getMembersAccountId(List<LoanBO> membersAccount)", "class_method_signature": "LoanAccountAction.getMembersAccountId(List<LoanBO> membersAccount)", "testcase": false, "constructor": false}, {"identifier": "getMembersSchedule", "parameters": "(List<Integer> membersIds)", "modifiers": "private", "return": "List<OriginalScheduleInfoDto>", "signature": "List<OriginalScheduleInfoDto> getMembersSchedule(List<Integer> membersIds)", "full_signature": "private List<OriginalScheduleInfoDto> getMembersSchedule(List<Integer> membersIds)", "class_method_signature": "LoanAccountAction.getMembersSchedule(List<Integer> membersIds)", "testcase": false, "constructor": false}, {"identifier": "getDetails", "parameters": "(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n            @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "public", "return": "ActionForward", "signature": "ActionForward getDetails(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n            @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "public ActionForward getDetails(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n            @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.getDetails(final ActionMapping mapping, final ActionForm form, final HttpServletRequest request,\n            @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false}], "file": "application/src/main/java/org/mifos/accounts/loan/struts/action/LoanAccountAction.java"}, "focal_method": {"identifier": "getLoanRepaymentSchedule", "parameters": "(final ActionMapping mapping,\n                                                  final ActionForm form, final HttpServletRequest request,\n                                                  @SuppressWarnings(\"unused\") final HttpServletResponse response)", "modifiers": "@TransactionDemarcate(saveToken = true) public", "return": "ActionForward", "body": "@TransactionDemarcate(saveToken = true)\n    public ActionForward getLoanRepaymentSchedule(final ActionMapping mapping,\n                                                  final ActionForm form, final HttpServletRequest request,\n                                                  @SuppressWarnings(\"unused\") final HttpServletResponse response) throws Exception {\n\n        LoanAccountActionForm loanAccountActionForm = (LoanAccountActionForm) form;\n        UserContext userContext = getUserContext(request);\n        Integer loanId = Integer.valueOf(request.getParameter(ACCOUNT_ID));\n        Locale locale = userContext.getPreferredLocale();\n        Date viewDate = loanAccountActionForm.getScheduleViewDateValue(locale);\n\n        LoanBO loan = getLoan(loanId);\n        setSessionAtributeForGLIM(request, loan);\n        loan.updateDetails(userContext);\n        Errors errors = loanBusinessService.computeExtraInterest(loan, viewDate);\n        if (errors.hasErrors()) {\n            loanAccountActionForm.resetScheduleViewDate();\n        }\n\n        OriginalScheduleInfoDto originalSchedule = this.loanServiceFacade.retrieveOriginalLoanSchedule(loanId);\n\n        String memberAccountIdParam = request.getParameter(\"memberAccountId\");\n        if (StringUtils.isNotBlank(memberAccountIdParam)) {\n            Integer memberId = Integer.valueOf(memberAccountIdParam);\n            LoanBO member = loan.findMemberById(memberId);\n            if (member != null) {\n                SessionUtils.setAttribute(CustomerConstants.CUSTOMER_NAME, member.getCustomer().getDisplayName(), request);\n                SessionUtils.setAttribute(CustomerConstants.GLOBAL_CUST_NUM, member.getCustomer().getGlobalCustNum(), request);\n            }\n        }\n\n        SessionUtils.setAttribute(Constants.BUSINESS_KEY, loan, request);\n        SessionUtils.setAttribute(Constants.ORIGINAL_SCHEDULE_AVAILABLE, originalSchedule.hasOriginalInstallments(), request);\n        SessionUtils.setAttribute(Constants.VIEW_DATE, viewDate, request);\n\n        String forward = errors.hasErrors() ? ActionForwards.getLoanRepaymentScheduleFailure.toString() : ActionForwards.getLoanRepaymentSchedule.toString();\n        addErrors(request, getActionErrors(errors));\n        return mapping.findForward(forward);\n    }", "signature": "ActionForward getLoanRepaymentSchedule(final ActionMapping mapping,\n                                                  final ActionForm form, final HttpServletRequest request,\n                                                  @SuppressWarnings(\"unused\") final HttpServletResponse response)", "full_signature": "@TransactionDemarcate(saveToken = true) public ActionForward getLoanRepaymentSchedule(final ActionMapping mapping,\n                                                  final ActionForm form, final HttpServletRequest request,\n                                                  @SuppressWarnings(\"unused\") final HttpServletResponse response)", "class_method_signature": "LoanAccountAction.getLoanRepaymentSchedule(final ActionMapping mapping,\n                                                  final ActionForm form, final HttpServletRequest request,\n                                                  @SuppressWarnings(\"unused\") final HttpServletResponse response)", "testcase": false, "constructor": false, "invocations": ["getUserContext", "valueOf", "getParameter", "getPreferredLocale", "getScheduleViewDateValue", "getLoan", "setSessionAtributeForGLIM", "updateDetails", "computeExtraInterest", "hasErrors", "resetScheduleViewDate", "retrieveOriginalLoanSchedule", "getParameter", "isNotBlank", "valueOf", "findMemberById", "setAttribute", "getDisplayName", "getCustomer", "setAttribute", "getGlobalCustNum", "getCustomer", "setAttribute", "setAttribute", "hasOriginalInstallments", "setAttribute", "hasErrors", "toString", "toString", "addErrors", "getActionErrors", "findForward"]}, "repository": {"repo_id": 1348716, "url": "https://github.com/mifos/head", "language": "Java", "is_fork": false, "fork_count": 91, "stargazer_count": 55, "size": 532732, "license": "licensed"}}