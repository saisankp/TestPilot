{"test_class": {"identifier": "CategoryOptionComboSupplierTest", "superclass": "extends AbstractSupplierTest<CategoryOptionCombo>", "interfaces": "", "fields": [{"original_string": "private CategoryOptionComboSupplier subject;", "modifier": "private", "type": "CategoryOptionComboSupplier", "declarator": "subject", "var_name": "subject"}, {"original_string": "@Mock\n    private ProgramSupplier programSupplier;", "modifier": "@Mock\n    private", "type": "ProgramSupplier", "declarator": "programSupplier", "var_name": "programSupplier"}, {"original_string": "@Mock\n    private AttributeOptionComboLoader attributeOptionComboLoader;", "modifier": "@Mock\n    private", "type": "AttributeOptionComboLoader", "declarator": "attributeOptionComboLoader", "var_name": "attributeOptionComboLoader"}, {"original_string": "private Map<String, Program> programMap;", "modifier": "private", "type": "Map<String, Program>", "declarator": "programMap", "var_name": "programMap"}, {"original_string": "private Event event;", "modifier": "private", "type": "Event", "declarator": "event", "var_name": "event"}, {"original_string": "private Program program;", "modifier": "private", "type": "Program", "declarator": "program", "var_name": "program"}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/test/java/org/hisp/dhis/dxf2/events/importer/context/CategoryOptionComboSupplierTest.java"}, "test_case": {"identifier": "handleNullEvents", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void handleNullEvents()\n    {\n        assertNotNull( subject.get( ImportOptions.getDefaultImportOptions(), null ) );\n    }", "signature": "void handleNullEvents()", "full_signature": "@Test public void handleNullEvents()", "class_method_signature": "CategoryOptionComboSupplierTest.handleNullEvents()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "get", "getDefaultImportOptions"]}, "focal_class": {"identifier": "CategoryOptionComboSupplier", "superclass": "extends AbstractSupplier<Map<String, CategoryOptionCombo>>", "interfaces": "", "fields": [{"original_string": "private final AttributeOptionComboLoader attributeOptionComboLoader;", "modifier": "private final", "type": "AttributeOptionComboLoader", "declarator": "attributeOptionComboLoader", "var_name": "attributeOptionComboLoader"}, {"original_string": "private final ProgramSupplier programSupplier;", "modifier": "private final", "type": "ProgramSupplier", "declarator": "programSupplier", "var_name": "programSupplier"}], "methods": [{"identifier": "CategoryOptionComboSupplier", "parameters": "( NamedParameterJdbcTemplate jdbcTemplate, ProgramSupplier programSupplier,\n        AttributeOptionComboLoader attributeOptionComboLoader )", "modifiers": "public", "return": "", "signature": " CategoryOptionComboSupplier( NamedParameterJdbcTemplate jdbcTemplate, ProgramSupplier programSupplier,\n        AttributeOptionComboLoader attributeOptionComboLoader )", "full_signature": "public  CategoryOptionComboSupplier( NamedParameterJdbcTemplate jdbcTemplate, ProgramSupplier programSupplier,\n        AttributeOptionComboLoader attributeOptionComboLoader )", "class_method_signature": "CategoryOptionComboSupplier.CategoryOptionComboSupplier( NamedParameterJdbcTemplate jdbcTemplate, ProgramSupplier programSupplier,\n        AttributeOptionComboLoader attributeOptionComboLoader )", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "( ImportOptions importOptions, List<Event> events )", "modifiers": "@Override public", "return": "Map<String, CategoryOptionCombo>", "signature": "Map<String, CategoryOptionCombo> get( ImportOptions importOptions, List<Event> events )", "full_signature": "@Override public Map<String, CategoryOptionCombo> get( ImportOptions importOptions, List<Event> events )", "class_method_signature": "CategoryOptionComboSupplier.get( ImportOptions importOptions, List<Event> events )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/importer/context/CategoryOptionComboSupplier.java"}, "focal_method": {"identifier": "get", "parameters": "( ImportOptions importOptions, List<Event> events )", "modifiers": "@Override public", "return": "Map<String, CategoryOptionCombo>", "body": "@Override\n    public Map<String, CategoryOptionCombo> get( ImportOptions importOptions, List<Event> events )\n    {\n        if ( events == null )\n        {\n            return emptyMap();\n        }\n\n        // TODO this should be optimized to execute less SQL queries\n        IdScheme idScheme = importOptions.getIdSchemes().getCategoryOptionIdScheme();\n        Map<String, CategoryOptionCombo> eventToCocMap = new HashMap<>();\n        Map<String, Program> programMap = programSupplier.get( importOptions, events );\n\n        for ( Event event : events )\n        {\n            Program program = programMap.get( event.getProgram() );\n\n            // Can't proceed with null Program, this will fail during the validation stage\n            if ( program == null )\n            {\n                return emptyMap();\n            }\n\n            final CategoryCombo programCatCombo = program.getCategoryCombo();\n            final String aoc = event.getAttributeOptionCombo();\n            final String attributeCatOptions = event.getAttributeCategoryOptions();\n\n            CategoryOptionCombo categoryOptionCombo;\n\n            if ( isNotEmpty( aoc ) )\n            {\n                categoryOptionCombo = attributeOptionComboLoader.getCategoryOptionCombo( idScheme, aoc );\n                if ( categoryOptionCombo == null )\n                {\n                    categoryOptionCombo = attributeOptionComboLoader.getDefault();\n                }\n            }\n            else if ( programCatCombo != null && isNotEmpty( attributeCatOptions ) )\n            {\n                categoryOptionCombo = attributeOptionComboLoader.getAttributeOptionCombo( programCatCombo,\n                    attributeCatOptions, aoc, idScheme );\n            }\n            else\n            {\n                categoryOptionCombo = attributeOptionComboLoader.getDefault();\n            }\n\n            if ( categoryOptionCombo != null )\n            {\n                eventToCocMap.put( event.getUid(), categoryOptionCombo );\n            }\n        }\n\n        return eventToCocMap;\n    }", "signature": "Map<String, CategoryOptionCombo> get( ImportOptions importOptions, List<Event> events )", "full_signature": "@Override public Map<String, CategoryOptionCombo> get( ImportOptions importOptions, List<Event> events )", "class_method_signature": "CategoryOptionComboSupplier.get( ImportOptions importOptions, List<Event> events )", "testcase": false, "constructor": false, "invocations": ["emptyMap", "getCategoryOptionIdScheme", "getIdSchemes", "get", "get", "getProgram", "emptyMap", "getCategoryCombo", "getAttributeOptionCombo", "getAttributeCategoryOptions", "isNotEmpty", "getCategoryOptionCombo", "getDefault", "isNotEmpty", "getAttributeOptionCombo", "getDefault", "put", "getUid"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}