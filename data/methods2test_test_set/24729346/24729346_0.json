{"test_class": {"identifier": "TelemetryDataTest", "superclass": "extends TelemetryData", "interfaces": "", "fields": [], "file": "telemetry/src/test/java/org/ebaysf/ostara/telemetry/mongodb/TelemetryDataTest.java"}, "test_case": {"identifier": "testGetTotalDuration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetTotalDuration() {\n    // Do nothing\n  }", "signature": "void testGetTotalDuration()", "full_signature": "@Test public void testGetTotalDuration()", "class_method_signature": "TelemetryDataTest.testGetTotalDuration()", "testcase": true, "constructor": false, "invocations": []}, "focal_class": {"identifier": "TelemetryData", "superclass": "", "interfaces": "implements java.io.Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "@Id\n\tprivate ObjectId id;", "modifier": "@Id\n\tprivate", "type": "ObjectId", "declarator": "id", "var_name": "id"}, {"original_string": "private List<String> appName;", "modifier": "private", "type": "List<String>", "declarator": "appName", "var_name": "appName"}, {"original_string": "private List<String> oldPlatformVersion;", "modifier": "private", "type": "List<String>", "declarator": "oldPlatformVersion", "var_name": "oldPlatformVersion"}, {"original_string": "private String newPlatformVersion;", "modifier": "private", "type": "String", "declarator": "newPlatformVersion", "var_name": "newPlatformVersion"}, {"original_string": "private String debugLogURL;", "modifier": "private", "type": "String", "declarator": "debugLogURL", "var_name": "debugLogURL"}, {"original_string": "private String warnLogURL;", "modifier": "private", "type": "String", "declarator": "warnLogURL", "var_name": "warnLogURL"}, {"original_string": "private String finalReportURL;", "modifier": "private", "type": "String", "declarator": "finalReportURL", "var_name": "finalReportURL"}, {"original_string": "private String progressReportURL;", "modifier": "private", "type": "String", "declarator": "progressReportURL", "var_name": "progressReportURL"}, {"original_string": "private List<String> detectedAppType;", "modifier": "private", "type": "List<String>", "declarator": "detectedAppType", "var_name": "detectedAppType"}, {"original_string": "private String migrationToolVersion;", "modifier": "private", "type": "String", "declarator": "migrationToolVersion", "var_name": "migrationToolVersion"}, {"original_string": "private String userName;", "modifier": "private", "type": "String", "declarator": "userName", "var_name": "userName"}, {"original_string": "private String additionalEmails;", "modifier": "private", "type": "String", "declarator": "additionalEmails", "var_name": "additionalEmails"}, {"original_string": "private Date startTime;", "modifier": "private", "type": "Date", "declarator": "startTime", "var_name": "startTime"}, {"original_string": "private String overrideAppType;", "modifier": "private", "type": "String", "declarator": "overrideAppType", "var_name": "overrideAppType"}, {"original_string": "private String taskId;", "modifier": "private", "type": "String", "declarator": "taskId", "var_name": "taskId"}, {"original_string": "private String sourceGitURL;", "modifier": "private", "type": "String", "declarator": "sourceGitURL", "var_name": "sourceGitURL"}, {"original_string": "private String sourceGitBranch;", "modifier": "private", "type": "String", "declarator": "sourceGitBranch", "var_name": "sourceGitBranch"}, {"original_string": "private String sourceGitRelativePath;", "modifier": "private", "type": "String", "declarator": "sourceGitRelativePath", "var_name": "sourceGitRelativePath"}, {"original_string": "private String destinationGitURL;", "modifier": "private", "type": "String", "declarator": "destinationGitURL", "var_name": "destinationGitURL"}, {"original_string": "private String destinationGitBranch;", "modifier": "private", "type": "String", "declarator": "destinationGitBranch", "var_name": "destinationGitBranch"}, {"original_string": "private String gitPullRequestURL;", "modifier": "private", "type": "String", "declarator": "gitPullRequestURL", "var_name": "gitPullRequestURL"}, {"original_string": "private Boolean isGitForkSuccessful;", "modifier": "private", "type": "Boolean", "declarator": "isGitForkSuccessful", "var_name": "isGitForkSuccessful"}, {"original_string": "private Boolean isGitCloneSuccessful;", "modifier": "private", "type": "Boolean", "declarator": "isGitCloneSuccessful", "var_name": "isGitCloneSuccessful"}, {"original_string": "private Boolean isMigrationSuccessful;", "modifier": "private", "type": "Boolean", "declarator": "isMigrationSuccessful", "var_name": "isMigrationSuccessful"}, {"original_string": "private Boolean isGitPushSuccesful;", "modifier": "private", "type": "Boolean", "declarator": "isGitPushSuccesful", "var_name": "isGitPushSuccesful"}, {"original_string": "private Boolean isGitBranchSuccessful;", "modifier": "private", "type": "Boolean", "declarator": "isGitBranchSuccessful", "var_name": "isGitBranchSuccessful"}, {"original_string": "private Boolean isGitPullSuccessful;", "modifier": "private", "type": "Boolean", "declarator": "isGitPullSuccessful", "var_name": "isGitPullSuccessful"}, {"original_string": "private Boolean success;", "modifier": "private", "type": "Boolean", "declarator": "success", "var_name": "success"}, {"original_string": "private long gitForkDuration;", "modifier": "private", "type": "long", "declarator": "gitForkDuration", "var_name": "gitForkDuration"}, {"original_string": "private long gitCloneDuration;", "modifier": "private", "type": "long", "declarator": "gitCloneDuration", "var_name": "gitCloneDuration"}, {"original_string": "private long migrationDuration;", "modifier": "private", "type": "long", "declarator": "migrationDuration", "var_name": "migrationDuration"}, {"original_string": "private long gitPushDuration;", "modifier": "private", "type": "long", "declarator": "gitPushDuration", "var_name": "gitPushDuration"}, {"original_string": "private long gitBranchDuration;", "modifier": "private", "type": "long", "declarator": "gitBranchDuration", "var_name": "gitBranchDuration"}, {"original_string": "private long gitPullDuration;", "modifier": "private", "type": "long", "declarator": "gitPullDuration", "var_name": "gitPullDuration"}, {"original_string": "private long totalDuration;", "modifier": "private", "type": "long", "declarator": "totalDuration", "var_name": "totalDuration"}, {"original_string": "private String startDate;", "modifier": "private", "type": "String", "declarator": "startDate", "var_name": "startDate"}], "methods": [{"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "ObjectId", "signature": "ObjectId getId()", "full_signature": "public ObjectId getId()", "class_method_signature": "TelemetryData.getId()", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(ObjectId id)", "modifiers": "public", "return": "void", "signature": "void setId(ObjectId id)", "full_signature": "public void setId(ObjectId id)", "class_method_signature": "TelemetryData.setId(ObjectId id)", "testcase": false, "constructor": false}, {"identifier": "getAppName", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getAppName()", "full_signature": "public List<String> getAppName()", "class_method_signature": "TelemetryData.getAppName()", "testcase": false, "constructor": false}, {"identifier": "setAppName", "parameters": "(List<String> appName)", "modifiers": "public", "return": "void", "signature": "void setAppName(List<String> appName)", "full_signature": "public void setAppName(List<String> appName)", "class_method_signature": "TelemetryData.setAppName(List<String> appName)", "testcase": false, "constructor": false}, {"identifier": "getOldPlatformVersion", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getOldPlatformVersion()", "full_signature": "public List<String> getOldPlatformVersion()", "class_method_signature": "TelemetryData.getOldPlatformVersion()", "testcase": false, "constructor": false}, {"identifier": "setOldPlatformVersion", "parameters": "(List<String> oldPlatformVersion)", "modifiers": "public", "return": "void", "signature": "void setOldPlatformVersion(List<String> oldPlatformVersion)", "full_signature": "public void setOldPlatformVersion(List<String> oldPlatformVersion)", "class_method_signature": "TelemetryData.setOldPlatformVersion(List<String> oldPlatformVersion)", "testcase": false, "constructor": false}, {"identifier": "getNewPlatformVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getNewPlatformVersion()", "full_signature": "public String getNewPlatformVersion()", "class_method_signature": "TelemetryData.getNewPlatformVersion()", "testcase": false, "constructor": false}, {"identifier": "setNewPlatformVersion", "parameters": "(String newPlatformVersion)", "modifiers": "public", "return": "void", "signature": "void setNewPlatformVersion(String newPlatformVersion)", "full_signature": "public void setNewPlatformVersion(String newPlatformVersion)", "class_method_signature": "TelemetryData.setNewPlatformVersion(String newPlatformVersion)", "testcase": false, "constructor": false}, {"identifier": "getDetectedAppType", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getDetectedAppType()", "full_signature": "public List<String> getDetectedAppType()", "class_method_signature": "TelemetryData.getDetectedAppType()", "testcase": false, "constructor": false}, {"identifier": "setDetectedAppType", "parameters": "(List<String> detectedAppType)", "modifiers": "public", "return": "void", "signature": "void setDetectedAppType(List<String> detectedAppType)", "full_signature": "public void setDetectedAppType(List<String> detectedAppType)", "class_method_signature": "TelemetryData.setDetectedAppType(List<String> detectedAppType)", "testcase": false, "constructor": false}, {"identifier": "getMigrationToolVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMigrationToolVersion()", "full_signature": "public String getMigrationToolVersion()", "class_method_signature": "TelemetryData.getMigrationToolVersion()", "testcase": false, "constructor": false}, {"identifier": "setMigrationToolVersion", "parameters": "(String migrationToolVersion)", "modifiers": "public", "return": "void", "signature": "void setMigrationToolVersion(String migrationToolVersion)", "full_signature": "public void setMigrationToolVersion(String migrationToolVersion)", "class_method_signature": "TelemetryData.setMigrationToolVersion(String migrationToolVersion)", "testcase": false, "constructor": false}, {"identifier": "getUserName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUserName()", "full_signature": "public String getUserName()", "class_method_signature": "TelemetryData.getUserName()", "testcase": false, "constructor": false}, {"identifier": "setUserName", "parameters": "(String userName)", "modifiers": "public", "return": "void", "signature": "void setUserName(String userName)", "full_signature": "public void setUserName(String userName)", "class_method_signature": "TelemetryData.setUserName(String userName)", "testcase": false, "constructor": false}, {"identifier": "getAdditionalEmails", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAdditionalEmails()", "full_signature": "public String getAdditionalEmails()", "class_method_signature": "TelemetryData.getAdditionalEmails()", "testcase": false, "constructor": false}, {"identifier": "setAdditionalEmails", "parameters": "(String additionalEmails)", "modifiers": "public", "return": "void", "signature": "void setAdditionalEmails(String additionalEmails)", "full_signature": "public void setAdditionalEmails(String additionalEmails)", "class_method_signature": "TelemetryData.setAdditionalEmails(String additionalEmails)", "testcase": false, "constructor": false}, {"identifier": "getSourceGitURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSourceGitURL()", "full_signature": "public String getSourceGitURL()", "class_method_signature": "TelemetryData.getSourceGitURL()", "testcase": false, "constructor": false}, {"identifier": "setSourceGitURL", "parameters": "(String sourceGitURL)", "modifiers": "public", "return": "void", "signature": "void setSourceGitURL(String sourceGitURL)", "full_signature": "public void setSourceGitURL(String sourceGitURL)", "class_method_signature": "TelemetryData.setSourceGitURL(String sourceGitURL)", "testcase": false, "constructor": false}, {"identifier": "getDestinationGitURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDestinationGitURL()", "full_signature": "public String getDestinationGitURL()", "class_method_signature": "TelemetryData.getDestinationGitURL()", "testcase": false, "constructor": false}, {"identifier": "setDestinationGitURL", "parameters": "(String destinationGitURL)", "modifiers": "public", "return": "void", "signature": "void setDestinationGitURL(String destinationGitURL)", "full_signature": "public void setDestinationGitURL(String destinationGitURL)", "class_method_signature": "TelemetryData.setDestinationGitURL(String destinationGitURL)", "testcase": false, "constructor": false}, {"identifier": "getStartTime", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getStartTime()", "full_signature": "public Date getStartTime()", "class_method_signature": "TelemetryData.getStartTime()", "testcase": false, "constructor": false}, {"identifier": "setStartTime", "parameters": "(Date startTime)", "modifiers": "public", "return": "void", "signature": "void setStartTime(Date startTime)", "full_signature": "public void setStartTime(Date startTime)", "class_method_signature": "TelemetryData.setStartTime(Date startTime)", "testcase": false, "constructor": false}, {"identifier": "getOverrideAppType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOverrideAppType()", "full_signature": "public String getOverrideAppType()", "class_method_signature": "TelemetryData.getOverrideAppType()", "testcase": false, "constructor": false}, {"identifier": "setOverrideAppType", "parameters": "(String overrideAppType)", "modifiers": "public", "return": "void", "signature": "void setOverrideAppType(String overrideAppType)", "full_signature": "public void setOverrideAppType(String overrideAppType)", "class_method_signature": "TelemetryData.setOverrideAppType(String overrideAppType)", "testcase": false, "constructor": false}, {"identifier": "getTaskId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTaskId()", "full_signature": "public String getTaskId()", "class_method_signature": "TelemetryData.getTaskId()", "testcase": false, "constructor": false}, {"identifier": "setTaskId", "parameters": "(String taskId)", "modifiers": "public", "return": "void", "signature": "void setTaskId(String taskId)", "full_signature": "public void setTaskId(String taskId)", "class_method_signature": "TelemetryData.setTaskId(String taskId)", "testcase": false, "constructor": false}, {"identifier": "getSourceGitBranch", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSourceGitBranch()", "full_signature": "public String getSourceGitBranch()", "class_method_signature": "TelemetryData.getSourceGitBranch()", "testcase": false, "constructor": false}, {"identifier": "setSourceGitBranch", "parameters": "(String sourceGitBranch)", "modifiers": "public", "return": "void", "signature": "void setSourceGitBranch(String sourceGitBranch)", "full_signature": "public void setSourceGitBranch(String sourceGitBranch)", "class_method_signature": "TelemetryData.setSourceGitBranch(String sourceGitBranch)", "testcase": false, "constructor": false}, {"identifier": "getSourceGitRelativePath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSourceGitRelativePath()", "full_signature": "public String getSourceGitRelativePath()", "class_method_signature": "TelemetryData.getSourceGitRelativePath()", "testcase": false, "constructor": false}, {"identifier": "setSourceGitRelativePath", "parameters": "(String sourceGitRelativePath)", "modifiers": "public", "return": "void", "signature": "void setSourceGitRelativePath(String sourceGitRelativePath)", "full_signature": "public void setSourceGitRelativePath(String sourceGitRelativePath)", "class_method_signature": "TelemetryData.setSourceGitRelativePath(String sourceGitRelativePath)", "testcase": false, "constructor": false}, {"identifier": "getDestinationGitBranch", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDestinationGitBranch()", "full_signature": "public String getDestinationGitBranch()", "class_method_signature": "TelemetryData.getDestinationGitBranch()", "testcase": false, "constructor": false}, {"identifier": "setDestinationGitBranch", "parameters": "(String destinationGitBranch)", "modifiers": "public", "return": "void", "signature": "void setDestinationGitBranch(String destinationGitBranch)", "full_signature": "public void setDestinationGitBranch(String destinationGitBranch)", "class_method_signature": "TelemetryData.setDestinationGitBranch(String destinationGitBranch)", "testcase": false, "constructor": false}, {"identifier": "isGitForkSuccessful", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isGitForkSuccessful()", "full_signature": "public Boolean isGitForkSuccessful()", "class_method_signature": "TelemetryData.isGitForkSuccessful()", "testcase": false, "constructor": false}, {"identifier": "setGitForkSuccessful", "parameters": "(Boolean isGitForkSuccessful)", "modifiers": "public", "return": "void", "signature": "void setGitForkSuccessful(Boolean isGitForkSuccessful)", "full_signature": "public void setGitForkSuccessful(Boolean isGitForkSuccessful)", "class_method_signature": "TelemetryData.setGitForkSuccessful(Boolean isGitForkSuccessful)", "testcase": false, "constructor": false}, {"identifier": "isGitCloneSuccessful", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isGitCloneSuccessful()", "full_signature": "public Boolean isGitCloneSuccessful()", "class_method_signature": "TelemetryData.isGitCloneSuccessful()", "testcase": false, "constructor": false}, {"identifier": "setGitCloneSuccessful", "parameters": "(Boolean isGitCloneSuccessful)", "modifiers": "public", "return": "void", "signature": "void setGitCloneSuccessful(Boolean isGitCloneSuccessful)", "full_signature": "public void setGitCloneSuccessful(Boolean isGitCloneSuccessful)", "class_method_signature": "TelemetryData.setGitCloneSuccessful(Boolean isGitCloneSuccessful)", "testcase": false, "constructor": false}, {"identifier": "isMigrationSuccessful", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isMigrationSuccessful()", "full_signature": "public Boolean isMigrationSuccessful()", "class_method_signature": "TelemetryData.isMigrationSuccessful()", "testcase": false, "constructor": false}, {"identifier": "setMigrationSuccessful", "parameters": "(Boolean isMigrationSuccessful)", "modifiers": "public", "return": "void", "signature": "void setMigrationSuccessful(Boolean isMigrationSuccessful)", "full_signature": "public void setMigrationSuccessful(Boolean isMigrationSuccessful)", "class_method_signature": "TelemetryData.setMigrationSuccessful(Boolean isMigrationSuccessful)", "testcase": false, "constructor": false}, {"identifier": "isGitPushSuccesful", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isGitPushSuccesful()", "full_signature": "public Boolean isGitPushSuccesful()", "class_method_signature": "TelemetryData.isGitPushSuccesful()", "testcase": false, "constructor": false}, {"identifier": "setGitPushSuccesful", "parameters": "(Boolean isGitPushSuccesful)", "modifiers": "public", "return": "void", "signature": "void setGitPushSuccesful(Boolean isGitPushSuccesful)", "full_signature": "public void setGitPushSuccesful(Boolean isGitPushSuccesful)", "class_method_signature": "TelemetryData.setGitPushSuccesful(Boolean isGitPushSuccesful)", "testcase": false, "constructor": false}, {"identifier": "getSerialversionuid", "parameters": "()", "modifiers": "public static", "return": "long", "signature": "long getSerialversionuid()", "full_signature": "public static long getSerialversionuid()", "class_method_signature": "TelemetryData.getSerialversionuid()", "testcase": false, "constructor": false}, {"identifier": "getGitForkDuration", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getGitForkDuration()", "full_signature": "public long getGitForkDuration()", "class_method_signature": "TelemetryData.getGitForkDuration()", "testcase": false, "constructor": false}, {"identifier": "setGitForkDuration", "parameters": "(long gitForkDuration)", "modifiers": "public", "return": "void", "signature": "void setGitForkDuration(long gitForkDuration)", "full_signature": "public void setGitForkDuration(long gitForkDuration)", "class_method_signature": "TelemetryData.setGitForkDuration(long gitForkDuration)", "testcase": false, "constructor": false}, {"identifier": "getGitCloneDuration", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getGitCloneDuration()", "full_signature": "public long getGitCloneDuration()", "class_method_signature": "TelemetryData.getGitCloneDuration()", "testcase": false, "constructor": false}, {"identifier": "setGitCloneDuration", "parameters": "(long gitCloneDuration)", "modifiers": "public", "return": "void", "signature": "void setGitCloneDuration(long gitCloneDuration)", "full_signature": "public void setGitCloneDuration(long gitCloneDuration)", "class_method_signature": "TelemetryData.setGitCloneDuration(long gitCloneDuration)", "testcase": false, "constructor": false}, {"identifier": "getMigrationDuration", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMigrationDuration()", "full_signature": "public long getMigrationDuration()", "class_method_signature": "TelemetryData.getMigrationDuration()", "testcase": false, "constructor": false}, {"identifier": "setMigrationDuration", "parameters": "(long migrationDuration)", "modifiers": "public", "return": "void", "signature": "void setMigrationDuration(long migrationDuration)", "full_signature": "public void setMigrationDuration(long migrationDuration)", "class_method_signature": "TelemetryData.setMigrationDuration(long migrationDuration)", "testcase": false, "constructor": false}, {"identifier": "getGitPushDuration", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getGitPushDuration()", "full_signature": "public long getGitPushDuration()", "class_method_signature": "TelemetryData.getGitPushDuration()", "testcase": false, "constructor": false}, {"identifier": "setGitPushDuration", "parameters": "(long gitPushDuration)", "modifiers": "public", "return": "void", "signature": "void setGitPushDuration(long gitPushDuration)", "full_signature": "public void setGitPushDuration(long gitPushDuration)", "class_method_signature": "TelemetryData.setGitPushDuration(long gitPushDuration)", "testcase": false, "constructor": false}, {"identifier": "getTotalDuration", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTotalDuration()", "full_signature": "public long getTotalDuration()", "class_method_signature": "TelemetryData.getTotalDuration()", "testcase": false, "constructor": false}, {"identifier": "setTotalDuration", "parameters": "(long totalDuration)", "modifiers": "public", "return": "void", "signature": "void setTotalDuration(long totalDuration)", "full_signature": "public void setTotalDuration(long totalDuration)", "class_method_signature": "TelemetryData.setTotalDuration(long totalDuration)", "testcase": false, "constructor": false}, {"identifier": "getStartDate", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStartDate()", "full_signature": "public String getStartDate()", "class_method_signature": "TelemetryData.getStartDate()", "testcase": false, "constructor": false}, {"identifier": "setStartDate", "parameters": "(String startDate)", "modifiers": "public", "return": "void", "signature": "void setStartDate(String startDate)", "full_signature": "public void setStartDate(String startDate)", "class_method_signature": "TelemetryData.setStartDate(String startDate)", "testcase": false, "constructor": false}, {"identifier": "isGitBranchSuccessful", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isGitBranchSuccessful()", "full_signature": "public Boolean isGitBranchSuccessful()", "class_method_signature": "TelemetryData.isGitBranchSuccessful()", "testcase": false, "constructor": false}, {"identifier": "setGitBranchSuccessful", "parameters": "(Boolean isGitBranchSuccessful)", "modifiers": "public", "return": "void", "signature": "void setGitBranchSuccessful(Boolean isGitBranchSuccessful)", "full_signature": "public void setGitBranchSuccessful(Boolean isGitBranchSuccessful)", "class_method_signature": "TelemetryData.setGitBranchSuccessful(Boolean isGitBranchSuccessful)", "testcase": false, "constructor": false}, {"identifier": "isGitPullSuccessful", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isGitPullSuccessful()", "full_signature": "public Boolean isGitPullSuccessful()", "class_method_signature": "TelemetryData.isGitPullSuccessful()", "testcase": false, "constructor": false}, {"identifier": "setGitPullSuccessful", "parameters": "(Boolean isGitPullSuccessful)", "modifiers": "public", "return": "void", "signature": "void setGitPullSuccessful(Boolean isGitPullSuccessful)", "full_signature": "public void setGitPullSuccessful(Boolean isGitPullSuccessful)", "class_method_signature": "TelemetryData.setGitPullSuccessful(Boolean isGitPullSuccessful)", "testcase": false, "constructor": false}, {"identifier": "getGitBranchDuration", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getGitBranchDuration()", "full_signature": "public long getGitBranchDuration()", "class_method_signature": "TelemetryData.getGitBranchDuration()", "testcase": false, "constructor": false}, {"identifier": "setGitBranchDuration", "parameters": "(long gitBranchDuration)", "modifiers": "public", "return": "void", "signature": "void setGitBranchDuration(long gitBranchDuration)", "full_signature": "public void setGitBranchDuration(long gitBranchDuration)", "class_method_signature": "TelemetryData.setGitBranchDuration(long gitBranchDuration)", "testcase": false, "constructor": false}, {"identifier": "getGitPullDuration", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getGitPullDuration()", "full_signature": "public long getGitPullDuration()", "class_method_signature": "TelemetryData.getGitPullDuration()", "testcase": false, "constructor": false}, {"identifier": "setGitPullDuration", "parameters": "(long gitPullDuration)", "modifiers": "public", "return": "void", "signature": "void setGitPullDuration(long gitPullDuration)", "full_signature": "public void setGitPullDuration(long gitPullDuration)", "class_method_signature": "TelemetryData.setGitPullDuration(long gitPullDuration)", "testcase": false, "constructor": false}, {"identifier": "isSuccess", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isSuccess()", "full_signature": "public Boolean isSuccess()", "class_method_signature": "TelemetryData.isSuccess()", "testcase": false, "constructor": false}, {"identifier": "setSuccess", "parameters": "(Boolean success)", "modifiers": "public", "return": "void", "signature": "void setSuccess(Boolean success)", "full_signature": "public void setSuccess(Boolean success)", "class_method_signature": "TelemetryData.setSuccess(Boolean success)", "testcase": false, "constructor": false}, {"identifier": "getDebugLogURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDebugLogURL()", "full_signature": "public String getDebugLogURL()", "class_method_signature": "TelemetryData.getDebugLogURL()", "testcase": false, "constructor": false}, {"identifier": "setDebugLogURL", "parameters": "(String debugLogURL)", "modifiers": "public", "return": "void", "signature": "void setDebugLogURL(String debugLogURL)", "full_signature": "public void setDebugLogURL(String debugLogURL)", "class_method_signature": "TelemetryData.setDebugLogURL(String debugLogURL)", "testcase": false, "constructor": false}, {"identifier": "getWarnLogURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getWarnLogURL()", "full_signature": "public String getWarnLogURL()", "class_method_signature": "TelemetryData.getWarnLogURL()", "testcase": false, "constructor": false}, {"identifier": "setWarnLogURL", "parameters": "(String warnLogURL)", "modifiers": "public", "return": "void", "signature": "void setWarnLogURL(String warnLogURL)", "full_signature": "public void setWarnLogURL(String warnLogURL)", "class_method_signature": "TelemetryData.setWarnLogURL(String warnLogURL)", "testcase": false, "constructor": false}, {"identifier": "getFinalReportURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFinalReportURL()", "full_signature": "public String getFinalReportURL()", "class_method_signature": "TelemetryData.getFinalReportURL()", "testcase": false, "constructor": false}, {"identifier": "setFinalReportURL", "parameters": "(String finalReportURL)", "modifiers": "public", "return": "void", "signature": "void setFinalReportURL(String finalReportURL)", "full_signature": "public void setFinalReportURL(String finalReportURL)", "class_method_signature": "TelemetryData.setFinalReportURL(String finalReportURL)", "testcase": false, "constructor": false}, {"identifier": "getProgressReportURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getProgressReportURL()", "full_signature": "public String getProgressReportURL()", "class_method_signature": "TelemetryData.getProgressReportURL()", "testcase": false, "constructor": false}, {"identifier": "setProgressReportURL", "parameters": "(String progressReportURL)", "modifiers": "public", "return": "void", "signature": "void setProgressReportURL(String progressReportURL)", "full_signature": "public void setProgressReportURL(String progressReportURL)", "class_method_signature": "TelemetryData.setProgressReportURL(String progressReportURL)", "testcase": false, "constructor": false}, {"identifier": "getGitPullRequestURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getGitPullRequestURL()", "full_signature": "public String getGitPullRequestURL()", "class_method_signature": "TelemetryData.getGitPullRequestURL()", "testcase": false, "constructor": false}, {"identifier": "setGitPullRequestURL", "parameters": "(String gitPullRequestURL)", "modifiers": "public", "return": "void", "signature": "void setGitPullRequestURL(String gitPullRequestURL)", "full_signature": "public void setGitPullRequestURL(String gitPullRequestURL)", "class_method_signature": "TelemetryData.setGitPullRequestURL(String gitPullRequestURL)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TelemetryData.toString()", "testcase": false, "constructor": false}], "file": "telemetry/src/main/java/org/ebaysf/ostara/telemetry/mongodb/TelemetryData.java"}, "focal_method": {"identifier": "getTotalDuration", "parameters": "()", "modifiers": "public", "return": "long", "body": "public long getTotalDuration() {\n\t\treturn totalDuration;\n\t}", "signature": "long getTotalDuration()", "full_signature": "public long getTotalDuration()", "class_method_signature": "TelemetryData.getTotalDuration()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 24729346, "url": "https://github.com/eBay/ostara", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 760, "license": "licensed"}}