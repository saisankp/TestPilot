{"test_class": {"identifier": "ErrorBeanTest", "superclass": "", "interfaces": "", "fields": [], "file": "framework/frontend/src/test/java/org/koenighotze/jee7hotel/framework/frontend/ErrorBeanTest.java"}, "test_case": {"identifier": "testGetExceptionStackTrace", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetExceptionStackTrace() throws Exception {\n        RuntimeException exception = new RuntimeException(\"foo\");\n        exception.initCause(new RuntimeException(new IOException(\"BOOM\")));\n\n        String stackTrace = new ErrorBean().getExceptionStackTrace(exception);\n        assertTrue(Stream.of(stackTrace)\n                .filter(s -> s.contains(\"BOOM\"))\n                .findAny()\n                .isPresent());\n        assertTrue(stackTrace.contains(\"foo\"));\n    }", "signature": "void testGetExceptionStackTrace()", "full_signature": "@Test public void testGetExceptionStackTrace()", "class_method_signature": "ErrorBeanTest.testGetExceptionStackTrace()", "testcase": true, "constructor": false, "invocations": ["initCause", "getExceptionStackTrace", "assertTrue", "isPresent", "findAny", "filter", "of", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "ErrorBean", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(ErrorBean.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(ErrorBean.class.getName())", "var_name": "LOGGER"}], "methods": [{"identifier": "getExceptionStackTrace", "parameters": "(Throwable t)", "modifiers": "public", "return": "String", "signature": "String getExceptionStackTrace(Throwable t)", "full_signature": "public String getExceptionStackTrace(Throwable t)", "class_method_signature": "ErrorBean.getExceptionStackTrace(Throwable t)", "testcase": false, "constructor": false}], "file": "framework/frontend/src/main/java/org/koenighotze/jee7hotel/framework/frontend/ErrorBean.java"}, "focal_method": {"identifier": "getExceptionStackTrace", "parameters": "(Throwable t)", "modifiers": "public", "return": "String", "body": "public String getExceptionStackTrace(Throwable t) {\n        if (null == t) {\n            return \"\";\n        }\n\n        LOGGER.log(Level.SEVERE, \"Unexpected error condition\", t);\n        StringWriter sw = new StringWriter();\n        try (PrintWriter w = new PrintWriter(sw)) {\n            t.printStackTrace(w);\n        }\n        return sw.toString();\n    }", "signature": "String getExceptionStackTrace(Throwable t)", "full_signature": "public String getExceptionStackTrace(Throwable t)", "class_method_signature": "ErrorBean.getExceptionStackTrace(Throwable t)", "testcase": false, "constructor": false, "invocations": ["log", "printStackTrace", "toString"]}, "repository": {"repo_id": 26170170, "url": "https://github.com/koenighotze/Hotel-Reservation-Tool", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 1659, "license": "licensed"}}