{"test_class": {"identifier": "IncidentServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String url = \"http://35.61.56.113:8443\";", "modifier": "private", "type": "String", "declarator": "url = \"http://35.61.56.113:8443\"", "var_name": "url"}, {"original_string": "@Mock\n    IncidentDao incidentDao;", "modifier": "@Mock", "type": "IncidentDao", "declarator": "incidentDao", "var_name": "incidentDao"}, {"original_string": "@InjectMocks\n    IncidentService incidentService;", "modifier": "@InjectMocks", "type": "IncidentService", "declarator": "incidentService", "var_name": "incidentService"}], "file": "app/src/test/java/org/unicef/rapidreg/service/IncidentServiceTest.java"}, "test_case": {"identifier": "should_update_incident_when_give_item_values", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_update_incident_when_give_item_values() throws Exception {\n        ItemValuesMap itemValues = new ItemValuesMap();\n        itemValues.addStringItem(INCIDENT_ID, \"existedUniqueId\");\n        itemValues.addNumberItem(AGE, 18);\n        itemValues.addStringItem(DATE_OF_INTERVIEW, \"2016/12/25\");\n\n        Incident expected = new Incident();\n        PowerMockito.when(incidentDao.getIncidentByUniqueId(\"existedUniqueId\")).thenReturn\n                (expected);\n\n        expected.setContent(new Blob(new String(\"\").getBytes()));\n\n        PowerMockito.when(incidentDao.update(expected)).thenReturn(expected);\n\n        Incident actual = incidentService.update(itemValues);\n\n        verify(incidentDao, times(1)).update(actual);\n\n        assertFalse(\"Sync status should be false\", actual.isSynced());\n        assertThat(\"Age should be 18\", actual.getAge(), is(18));\n        assertThat(\"Registration date should be 2016/12/25\", actual.getRegistrationDate(), is\n                (Utils.getRegisterDateByYyyyMmDd(\"2016/12/25\")));\n    }", "signature": "void should_update_incident_when_give_item_values()", "full_signature": "@Test public void should_update_incident_when_give_item_values()", "class_method_signature": "IncidentServiceTest.should_update_incident_when_give_item_values()", "testcase": true, "constructor": false, "invocations": ["addStringItem", "addNumberItem", "addStringItem", "thenReturn", "when", "getIncidentByUniqueId", "setContent", "getBytes", "thenReturn", "when", "update", "update", "update", "verify", "times", "assertFalse", "isSynced", "assertThat", "getAge", "is", "assertThat", "getRegistrationDate", "is", "getRegisterDateByYyyyMmDd"]}, "focal_class": {"identifier": "IncidentService", "superclass": "extends RecordService", "interfaces": "", "fields": [{"original_string": "public static final String TAG = IncidentService.class.getSimpleName();", "modifier": "public static final", "type": "String", "declarator": "TAG = IncidentService.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "public static final String INCIDENT_DISPLAY_ID = \"incident_id_display\";", "modifier": "public static final", "type": "String", "declarator": "INCIDENT_DISPLAY_ID = \"incident_id_display\"", "var_name": "INCIDENT_DISPLAY_ID"}, {"original_string": "public static final String INCIDENT_ID = \"incident_id\";", "modifier": "public static final", "type": "String", "declarator": "INCIDENT_ID = \"incident_id\"", "var_name": "INCIDENT_ID"}, {"original_string": "public static final String INCIDENT_PRIMARY_ID = \"incident_primary_id\";", "modifier": "public static final", "type": "String", "declarator": "INCIDENT_PRIMARY_ID = \"incident_primary_id\"", "var_name": "INCIDENT_PRIMARY_ID"}, {"original_string": "public static final String EMPTY_ID = \"\";", "modifier": "public static final", "type": "String", "declarator": "EMPTY_ID = \"\"", "var_name": "EMPTY_ID"}, {"original_string": "private IncidentDao incidentDao = new IncidentDaoImpl();", "modifier": "private", "type": "IncidentDao", "declarator": "incidentDao = new IncidentDaoImpl()", "var_name": "incidentDao"}], "methods": [{"identifier": "IncidentService", "parameters": "()", "modifiers": "public", "return": "", "signature": " IncidentService()", "full_signature": "public  IncidentService()", "class_method_signature": "IncidentService.IncidentService()", "testcase": false, "constructor": true}, {"identifier": "IncidentService", "parameters": "(IncidentDao incidentDao)", "modifiers": "public", "return": "", "signature": " IncidentService(IncidentDao incidentDao)", "full_signature": "public  IncidentService(IncidentDao incidentDao)", "class_method_signature": "IncidentService.IncidentService(IncidentDao incidentDao)", "testcase": false, "constructor": true}, {"identifier": "getById", "parameters": "(long incidentId)", "modifiers": "public", "return": "Incident", "signature": "Incident getById(long incidentId)", "full_signature": "public Incident getById(long incidentId)", "class_method_signature": "IncidentService.getById(long incidentId)", "testcase": false, "constructor": false}, {"identifier": "getByUniqueId", "parameters": "(String uniqueId)", "modifiers": "public", "return": "Incident", "signature": "Incident getByUniqueId(String uniqueId)", "full_signature": "public Incident getByUniqueId(String uniqueId)", "class_method_signature": "IncidentService.getByUniqueId(String uniqueId)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "public", "return": "List<Incident>", "signature": "List<Incident> getAll()", "full_signature": "public List<Incident> getAll()", "class_method_signature": "IncidentService.getAll()", "testcase": false, "constructor": false}, {"identifier": "getAllOrderByDateASC", "parameters": "()", "modifiers": "public", "return": "List<Long>", "signature": "List<Long> getAllOrderByDateASC()", "full_signature": "public List<Long> getAllOrderByDateASC()", "class_method_signature": "IncidentService.getAllOrderByDateASC()", "testcase": false, "constructor": false}, {"identifier": "getAllOrderByDateDES", "parameters": "()", "modifiers": "public", "return": "List<Long>", "signature": "List<Long> getAllOrderByDateDES()", "full_signature": "public List<Long> getAllOrderByDateDES()", "class_method_signature": "IncidentService.getAllOrderByDateDES()", "testcase": false, "constructor": false}, {"identifier": "getAllOrderByAgeASC", "parameters": "()", "modifiers": "public", "return": "List<Long>", "signature": "List<Long> getAllOrderByAgeASC()", "full_signature": "public List<Long> getAllOrderByAgeASC()", "class_method_signature": "IncidentService.getAllOrderByAgeASC()", "testcase": false, "constructor": false}, {"identifier": "getAllOrderByAgeDES", "parameters": "()", "modifiers": "public", "return": "List<Long>", "signature": "List<Long> getAllOrderByAgeDES()", "full_signature": "public List<Long> getAllOrderByAgeDES()", "class_method_signature": "IncidentService.getAllOrderByAgeDES()", "testcase": false, "constructor": false}, {"identifier": "getSearchResult", "parameters": "(String uniqueId, String survivorCode, int ageFrom, int ageTo, String\n            typeOfViolence, String location)", "modifiers": "public", "return": "List<Long>", "signature": "List<Long> getSearchResult(String uniqueId, String survivorCode, int ageFrom, int ageTo, String\n            typeOfViolence, String location)", "full_signature": "public List<Long> getSearchResult(String uniqueId, String survivorCode, int ageFrom, int ageTo, String\n            typeOfViolence, String location)", "class_method_signature": "IncidentService.getSearchResult(String uniqueId, String survivorCode, int ageFrom, int ageTo, String\n            typeOfViolence, String location)", "testcase": false, "constructor": false}, {"identifier": "getSearchCondition", "parameters": "(String shortId, String survivorCode, int ageFrom, int ageTo, String\n            typeOfViolence, String location)", "modifiers": "private", "return": "ConditionGroup", "signature": "ConditionGroup getSearchCondition(String shortId, String survivorCode, int ageFrom, int ageTo, String\n            typeOfViolence, String location)", "full_signature": "private ConditionGroup getSearchCondition(String shortId, String survivorCode, int ageFrom, int ageTo, String\n            typeOfViolence, String location)", "class_method_signature": "IncidentService.getSearchCondition(String shortId, String survivorCode, int ageFrom, int ageTo, String\n            typeOfViolence, String location)", "testcase": false, "constructor": false}, {"identifier": "saveOrUpdate", "parameters": "(ItemValuesMap itemValues)", "modifiers": "public", "return": "Incident", "signature": "Incident saveOrUpdate(ItemValuesMap itemValues)", "full_signature": "public Incident saveOrUpdate(ItemValuesMap itemValues)", "class_method_signature": "IncidentService.saveOrUpdate(ItemValuesMap itemValues)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(ItemValuesMap itemValues)", "modifiers": "public", "return": "Incident", "signature": "Incident save(ItemValuesMap itemValues)", "full_signature": "public Incident save(ItemValuesMap itemValues)", "class_method_signature": "IncidentService.save(ItemValuesMap itemValues)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(ItemValuesMap itemValues)", "modifiers": "public", "return": "Incident", "signature": "Incident update(ItemValuesMap itemValues)", "full_signature": "public Incident update(ItemValuesMap itemValues)", "class_method_signature": "IncidentService.update(ItemValuesMap itemValues)", "testcase": false, "constructor": false}, {"identifier": "deleteByRecordId", "parameters": "(long recordId)", "modifiers": "public", "return": "Incident", "signature": "Incident deleteByRecordId(long recordId)", "full_signature": "public Incident deleteByRecordId(long recordId)", "class_method_signature": "IncidentService.deleteByRecordId(long recordId)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "(ItemValuesMap values)", "modifiers": "private", "return": "String", "signature": "String getName(ItemValuesMap values)", "full_signature": "private String getName(ItemValuesMap values)", "class_method_signature": "IncidentService.getName(ItemValuesMap values)", "testcase": false, "constructor": false}, {"identifier": "getByInternalId", "parameters": "(String id)", "modifiers": "public", "return": "Incident", "signature": "Incident getByInternalId(String id)", "full_signature": "public Incident getByInternalId(String id)", "class_method_signature": "IncidentService.getByInternalId(String id)", "testcase": false, "constructor": false}, {"identifier": "hasSameRev", "parameters": "(String id, String rev)", "modifiers": "public", "return": "boolean", "signature": "boolean hasSameRev(String id, String rev)", "full_signature": "public boolean hasSameRev(String id, String rev)", "class_method_signature": "IncidentService.hasSameRev(String id, String rev)", "testcase": false, "constructor": false}, {"identifier": "getAllSyncedRecordsId", "parameters": "()", "modifiers": "public", "return": "List<Long>", "signature": "List<Long> getAllSyncedRecordsId()", "full_signature": "public List<Long> getAllSyncedRecordsId()", "class_method_signature": "IncidentService.getAllSyncedRecordsId()", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/unicef/rapidreg/service/IncidentService.java"}, "focal_method": {"identifier": "update", "parameters": "(ItemValuesMap itemValues)", "modifiers": "public", "return": "Incident", "body": "public Incident update(ItemValuesMap itemValues) throws IOException {\n        Gson gson = new Gson();\n        Blob blob = new Blob(gson.toJson(itemValues.getValues()).getBytes());\n\n        Incident incident = incidentDao.getIncidentByUniqueId(itemValues.getAsString(INCIDENT_ID));\n        incident.setLastUpdatedDate(new Date(Calendar.getInstance().getTimeInMillis()));\n        incident.setContent(blob);\n        incident.setName(getName(itemValues));\n        incident.setSurvivorCode(getSurvivorCode(itemValues));\n        incident.setTypeOfViolence(getTypeOfViolence(itemValues));\n        incident.setLocation(getLocation(itemValues));\n        int age = itemValues.getAsInt(AGE) != null ? itemValues.getAsInt(AGE) : EMPTY_AGE;\n        incident.setAge(age);\n        incident.setCaregiver(getCaregiverName(itemValues));\n        incident.setSynced(false);\n\n        if (itemValues.has(DATE_OF_INTERVIEW)) {\n            incident.setRegistrationDate(Utils.getRegisterDateByYyyyMmDd(itemValues.getAsString(DATE_OF_INTERVIEW)));\n        }\n        return incidentDao.update(incident);\n    }", "signature": "Incident update(ItemValuesMap itemValues)", "full_signature": "public Incident update(ItemValuesMap itemValues)", "class_method_signature": "IncidentService.update(ItemValuesMap itemValues)", "testcase": false, "constructor": false, "invocations": ["getBytes", "toJson", "getValues", "getIncidentByUniqueId", "getAsString", "setLastUpdatedDate", "getTimeInMillis", "getInstance", "setContent", "setName", "getName", "setSurvivorCode", "getSurvivorCode", "setTypeOfViolence", "getTypeOfViolence", "setLocation", "getLocation", "getAsInt", "getAsInt", "setAge", "setCaregiver", "getCaregiverName", "setSynced", "has", "setRegistrationDate", "getRegisterDateByYyyyMmDd", "getAsString", "update"]}, "repository": {"repo_id": 59507570, "url": "https://github.com/UnicefNY/RapidReg", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 10753, "license": "Other"}}