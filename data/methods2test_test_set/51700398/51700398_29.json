{"test_class": {"identifier": "PairServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String YAHOO = \"YAHOO\";", "modifier": "private static final", "type": "String", "declarator": "YAHOO = \"YAHOO\"", "var_name": "YAHOO"}, {"original_string": "@Autowired\n\tprivate PairService pairService;", "modifier": "@Autowired\n\tprivate", "type": "PairService", "declarator": "pairService", "var_name": "pairService"}], "file": "trading-common/src/test/java/fr/ymanvieu/trading/common/provider/PairServiceTest.java"}, "test_case": {"identifier": "testCreate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCreate() {\n\t\tString code = \"XAUUSD=X\";\n\t\tString name = \"XAU/USD\";\n\t\tString source = \"XAU\";\n\t\tString target = \"USD\";\n\n\t\tpairService.create(code, name, source, target, null, YAHOO);\n\n\t\tPair result = pairService.getForCodeAndProvider(code, YAHOO);\n\n\t\tassertThat(result).extracting(\"symbol\", \"name\", \"source.code\", \"target.code\", \"providerCode\") //\n\t\t\t\t.containsExactly(code, name, source, target, YAHOO);\n\t}", "signature": "void testCreate()", "full_signature": "@Test public void testCreate()", "class_method_signature": "PairServiceTest.testCreate()", "testcase": true, "constructor": false, "invocations": ["create", "getForCodeAndProvider", "containsExactly", "extracting", "assertThat"]}, "focal_class": {"identifier": "PairService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate PairRepository pairRepo;", "modifier": "@Autowired\n\tprivate", "type": "PairRepository", "declarator": "pairRepo", "var_name": "pairRepo"}, {"original_string": "@Autowired\n\tprivate PairMapper pairMapper;", "modifier": "@Autowired\n\tprivate", "type": "PairMapper", "declarator": "pairMapper", "var_name": "pairMapper"}], "methods": [{"identifier": "getForCodeAndProvider", "parameters": "(String code, String provider)", "modifiers": "public", "return": "Pair", "signature": "Pair getForCodeAndProvider(String code, String provider)", "full_signature": "public Pair getForCodeAndProvider(String code, String provider)", "class_method_signature": "PairService.getForCodeAndProvider(String code, String provider)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String code, String name, String source, String target, String exchange, String provider)", "modifiers": "public", "return": "Pair", "signature": "Pair create(String code, String name, String source, String target, String exchange, String provider)", "full_signature": "public Pair create(String code, String name, String source, String target, String exchange, String provider)", "class_method_signature": "PairService.create(String code, String name, String source, String target, String exchange, String provider)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String symbol, String providerCode)", "modifiers": "public", "return": "void", "signature": "void remove(String symbol, String providerCode)", "full_signature": "public void remove(String symbol, String providerCode)", "class_method_signature": "PairService.remove(String symbol, String providerCode)", "testcase": false, "constructor": false}, {"identifier": "getAllWithSymbolOrNameContaining", "parameters": "(String symbolOrName)", "modifiers": "public", "return": "List<UpdatedPair>", "signature": "List<UpdatedPair> getAllWithSymbolOrNameContaining(String symbolOrName)", "full_signature": "public List<UpdatedPair> getAllWithSymbolOrNameContaining(String symbolOrName)", "class_method_signature": "PairService.getAllWithSymbolOrNameContaining(String symbolOrName)", "testcase": false, "constructor": false}, {"identifier": "getAllFromProvider", "parameters": "(String providerCode)", "modifiers": "public", "return": "List<Pair>", "signature": "List<Pair> getAllFromProvider(String providerCode)", "full_signature": "public List<Pair> getAllFromProvider(String providerCode)", "class_method_signature": "PairService.getAllFromProvider(String providerCode)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "public", "return": "List<UpdatedPair>", "signature": "List<UpdatedPair> getAll()", "full_signature": "public List<UpdatedPair> getAll()", "class_method_signature": "PairService.getAll()", "testcase": false, "constructor": false}], "file": "trading-common/src/main/java/fr/ymanvieu/trading/common/provider/PairService.java"}, "focal_method": {"identifier": "create", "parameters": "(String code, String name, String source, String target, String exchange, String provider)", "modifiers": "public", "return": "Pair", "body": "public Pair create(String code, String name, String source, String target, String exchange, String provider) {\n\t\tPairEntity pe = new PairEntity(code, name, new SymbolEntity(source), new SymbolEntity(target), exchange, provider);\n\t\tpe = pairRepo.save(pe);\n\t\treturn pairMapper.mapToPair(pe);\n\t}", "signature": "Pair create(String code, String name, String source, String target, String exchange, String provider)", "full_signature": "public Pair create(String code, String name, String source, String target, String exchange, String provider)", "class_method_signature": "PairService.create(String code, String name, String source, String target, String exchange, String provider)", "testcase": false, "constructor": false, "invocations": ["save", "mapToPair"]}, "repository": {"repo_id": 51700398, "url": "https://github.com/ymanvieu/trading", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 988, "license": "licensed"}}