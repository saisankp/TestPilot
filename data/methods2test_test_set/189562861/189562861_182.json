{"test_class": {"identifier": "FstSerializationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FstSerialization fstSerialization;", "modifier": "private", "type": "FstSerialization", "declarator": "fstSerialization", "var_name": "fstSerialization"}], "file": "dubbo-serialization/dubbo-serialization-fst/src/test/java/com/alibaba/dubbo/common/serialize/fst/FstSerializationTest.java"}, "test_case": {"identifier": "testSerialize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSerialize() throws IOException {\n        ObjectOutput objectOutput = fstSerialization.serialize(null, mock(OutputStream.class));\n        assertThat(objectOutput, Matchers.<ObjectOutput>instanceOf(FstObjectOutput.class));\n    }", "signature": "void testSerialize()", "full_signature": "@Test public void testSerialize()", "class_method_signature": "FstSerializationTest.testSerialize()", "testcase": true, "constructor": false, "invocations": ["serialize", "mock", "assertThat", "instanceOf"]}, "focal_class": {"identifier": "FstSerialization", "superclass": "", "interfaces": "implements Serialization", "fields": [], "methods": [{"identifier": "getContentTypeId", "parameters": "()", "modifiers": "@Override public", "return": "byte", "signature": "byte getContentTypeId()", "full_signature": "@Override public byte getContentTypeId()", "class_method_signature": "FstSerialization.getContentTypeId()", "testcase": false, "constructor": false}, {"identifier": "getContentType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getContentType()", "full_signature": "@Override public String getContentType()", "class_method_signature": "FstSerialization.getContentType()", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(URL url, OutputStream out)", "modifiers": "@Override public", "return": "ObjectOutput", "signature": "ObjectOutput serialize(URL url, OutputStream out)", "full_signature": "@Override public ObjectOutput serialize(URL url, OutputStream out)", "class_method_signature": "FstSerialization.serialize(URL url, OutputStream out)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(URL url, InputStream is)", "modifiers": "@Override public", "return": "ObjectInput", "signature": "ObjectInput deserialize(URL url, InputStream is)", "full_signature": "@Override public ObjectInput deserialize(URL url, InputStream is)", "class_method_signature": "FstSerialization.deserialize(URL url, InputStream is)", "testcase": false, "constructor": false}], "file": "dubbo-serialization/dubbo-serialization-fst/src/main/java/com/alibaba/dubbo/common/serialize/fst/FstSerialization.java"}, "focal_method": {"identifier": "serialize", "parameters": "(URL url, OutputStream out)", "modifiers": "@Override public", "return": "ObjectOutput", "body": "@Override\n    public ObjectOutput serialize(URL url, OutputStream out) throws IOException {\n        return new FstObjectOutput(out);\n    }", "signature": "ObjectOutput serialize(URL url, OutputStream out)", "full_signature": "@Override public ObjectOutput serialize(URL url, OutputStream out)", "class_method_signature": "FstSerialization.serialize(URL url, OutputStream out)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 189562861, "url": "https://github.com/smallFive55/dubbo-dubbo-2.6.6", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 1428, "license": "licensed"}}