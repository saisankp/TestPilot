{"test_class": {"identifier": "SubtlesTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/src/test/java/keywhiz/auth/SubtlesTest.java"}, "test_case": {"identifier": "itReturnsTrueWhenBytesMatch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void itReturnsTrueWhenBytesMatch() throws Exception {\n    byte[] a = Hex.decodeHex(\"030A01BF\".toCharArray());\n    byte[] b = Hex.decodeHex(\"030A01BF\".toCharArray());\n    assertThat(Subtles.secureCompare(a, b)).isTrue();\n  }", "signature": "void itReturnsTrueWhenBytesMatch()", "full_signature": "@Test public void itReturnsTrueWhenBytesMatch()", "class_method_signature": "SubtlesTest.itReturnsTrueWhenBytesMatch()", "testcase": true, "constructor": false, "invocations": ["decodeHex", "toCharArray", "decodeHex", "toCharArray", "isTrue", "assertThat", "secureCompare"]}, "focal_class": {"identifier": "Subtles", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Subtles", "parameters": "()", "modifiers": "private", "return": "", "signature": " Subtles()", "full_signature": "private  Subtles()", "class_method_signature": "Subtles.Subtles()", "testcase": false, "constructor": true}, {"identifier": "secureCompare", "parameters": "(final byte[] a, final byte[] b)", "modifiers": "public static", "return": "boolean", "signature": "boolean secureCompare(final byte[] a, final byte[] b)", "full_signature": "public static boolean secureCompare(final byte[] a, final byte[] b)", "class_method_signature": "Subtles.secureCompare(final byte[] a, final byte[] b)", "testcase": false, "constructor": false}, {"identifier": "secureCompare", "parameters": "(final char[] a, final char[] b)", "modifiers": "public static", "return": "boolean", "signature": "boolean secureCompare(final char[] a, final char[] b)", "full_signature": "public static boolean secureCompare(final char[] a, final char[] b)", "class_method_signature": "Subtles.secureCompare(final char[] a, final char[] b)", "testcase": false, "constructor": false}, {"identifier": "secureCompare", "parameters": "(final String a, final String b)", "modifiers": "public static", "return": "boolean", "signature": "boolean secureCompare(final String a, final String b)", "full_signature": "public static boolean secureCompare(final String a, final String b)", "class_method_signature": "Subtles.secureCompare(final String a, final String b)", "testcase": false, "constructor": false}], "file": "server/src/main/java/keywhiz/auth/Subtles.java"}, "focal_method": {"identifier": "secureCompare", "parameters": "(final byte[] a, final byte[] b)", "modifiers": "public static", "return": "boolean", "body": "public static boolean secureCompare(final byte[] a, final byte[] b) {\n    if (a.length != b.length) {\n      return false;\n    }\n\n    int match = 0;\n    for (int i = 0; i < a.length; i++) {\n      match = match | a[i] ^ b[i];\n    }\n\n    return (match == 0); // true if match\n  }", "signature": "boolean secureCompare(final byte[] a, final byte[] b)", "full_signature": "public static boolean secureCompare(final byte[] a, final byte[] b)", "class_method_signature": "Subtles.secureCompare(final byte[] a, final byte[] b)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 32866430, "url": "https://github.com/square/keywhiz", "stars": 2186, "created": "3/25/2015 1:31:39 PM +00:00", "updates": "2020-01-24T18:57:02+00:00", "fork": "False", "license": "licensed"}}