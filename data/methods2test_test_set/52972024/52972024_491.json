{"test_class": {"identifier": "DeserializeStrategyPostJsonTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected IMessageMapper<byte[]> mapperStub;", "modifier": "protected", "type": "IMessageMapper<byte[]>", "declarator": "mapperStub", "var_name": "mapperStub"}], "file": "CoreFeatures/HttpEndpoint/DeserializeStrategyPostJson/src/test/java/info/smart_tools/smartactors/http_endpoint/deserialize_strategy_post_json/DeserializeStrategyPostJsonTest.java"}, "test_case": {"identifier": "testDeserializationResult", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDeserializationResult() throws InvalidArgumentException, ResolutionException, URISyntaxException, DeserializationException, SerializeException {\n        mapperStub = mock(IMessageMapper.class);\n        DeserializeStrategyPostJson deserializeStrategy = new DeserializeStrategyPostJson(mapperStub);\n        when(mapperStub.deserialize(any(byte[].class))).thenReturn(new DSObject(\"{\\\"hello\\\": \\\"world\\\"}\"));\n        IObject iObject = deserializeStrategy.deserialize(new DefaultFullHttpRequest(HttpVersion.HTTP_1_0, HttpMethod.POST, \"http://localhost:9901\"));\n        String iObjectString = iObject.serialize().toString();\n        verify(iObjectString.equals(\"{\\\"hello\\\":\\\"world\\\"}\"));\n    }", "signature": "void testDeserializationResult()", "full_signature": "@Test public void testDeserializationResult()", "class_method_signature": "DeserializeStrategyPostJsonTest.testDeserializationResult()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "deserialize", "any", "deserialize", "toString", "serialize", "verify", "equals"]}, "focal_class": {"identifier": "DeserializeStrategyPostJson", "superclass": "", "interfaces": "implements IDeserializeStrategy<FullHttpRequest>", "fields": [{"original_string": "private final IMessageMapper<byte[]> messageMapper;", "modifier": "private final", "type": "IMessageMapper<byte[]>", "declarator": "messageMapper", "var_name": "messageMapper"}], "methods": [{"identifier": "DeserializeStrategyPostJson", "parameters": "(final IMessageMapper<byte[]> messageMapper)", "modifiers": "public", "return": "", "signature": " DeserializeStrategyPostJson(final IMessageMapper<byte[]> messageMapper)", "full_signature": "public  DeserializeStrategyPostJson(final IMessageMapper<byte[]> messageMapper)", "class_method_signature": "DeserializeStrategyPostJson.DeserializeStrategyPostJson(final IMessageMapper<byte[]> messageMapper)", "testcase": false, "constructor": true}, {"identifier": "deserialize", "parameters": "(final FullHttpRequest request)", "modifiers": "@Override public", "return": "IObject", "signature": "IObject deserialize(final FullHttpRequest request)", "full_signature": "@Override public IObject deserialize(final FullHttpRequest request)", "class_method_signature": "DeserializeStrategyPostJson.deserialize(final FullHttpRequest request)", "testcase": false, "constructor": false}], "file": "CoreFeatures/HttpEndpoint/DeserializeStrategyPostJson/src/main/java/info/smart_tools/smartactors/http_endpoint/deserialize_strategy_post_json/DeserializeStrategyPostJson.java"}, "focal_method": {"identifier": "deserialize", "parameters": "(final FullHttpRequest request)", "modifiers": "@Override public", "return": "IObject", "body": "@Override\n    public IObject deserialize(final FullHttpRequest request) throws DeserializationException {\n        ByteBuf content = request.content();\n\n        byte[] bytes = new byte[content.capacity()];\n\n        content.getBytes(0, bytes);\n\n        try {\n            return messageMapper.deserialize(bytes);\n        } catch (ResolutionException e) {\n            throw new DeserializationException(\"Failed to deserialize request. It should be json\", e);\n        }\n    }", "signature": "IObject deserialize(final FullHttpRequest request)", "full_signature": "@Override public IObject deserialize(final FullHttpRequest request)", "class_method_signature": "DeserializeStrategyPostJson.deserialize(final FullHttpRequest request)", "testcase": false, "constructor": false, "invocations": ["content", "capacity", "getBytes", "deserialize"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}