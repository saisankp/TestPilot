{"test_class": {"identifier": "TestNettyHttpDatabusRelayConnection", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String SOURCE1_SCHEMA_STR =\n      \"{\\\"name\\\":\\\"source1\\\",\\\"type\\\":\\\"record\\\",\\\"fields\\\":[{\\\"name\\\":\\\"s\\\",\\\"type\\\":\\\"string\\\"}]}\";", "modifier": "static final", "type": "String", "declarator": "SOURCE1_SCHEMA_STR =\n      \"{\\\"name\\\":\\\"source1\\\",\\\"type\\\":\\\"record\\\",\\\"fields\\\":[{\\\"name\\\":\\\"s\\\",\\\"type\\\":\\\"string\\\"}]}\"", "var_name": "SOURCE1_SCHEMA_STR"}, {"original_string": "static final String KEY1_SCHEMA_STR =\n      \"{\\\"name\\\":\\\"key1\\\",\\\"type\\\":\\\"record\\\",\\\"fields\\\":[{\\\"name\\\":\\\"strField\\\",\\\"type\\\":\\\"string\\\"}]}\";", "modifier": "static final", "type": "String", "declarator": "KEY1_SCHEMA_STR =\n      \"{\\\"name\\\":\\\"key1\\\",\\\"type\\\":\\\"record\\\",\\\"fields\\\":[{\\\"name\\\":\\\"strField\\\",\\\"type\\\":\\\"string\\\"}]}\"", "var_name": "KEY1_SCHEMA_STR"}, {"original_string": "static final String METADATA1_SCHEMA_STR =\n      \"{\\\"name\\\":\\\"metadata\\\",\\\"namespace\\\":\\\"test_namespace\\\",\\\"type\\\":\\\"record\\\",\\\"fields\\\":[{\\\"name\\\":\\\"randomStrField\\\",\\\"type\\\":\\\"string\\\"}]}\";", "modifier": "static final", "type": "String", "declarator": "METADATA1_SCHEMA_STR =\n      \"{\\\"name\\\":\\\"metadata\\\",\\\"namespace\\\":\\\"test_namespace\\\",\\\"type\\\":\\\"record\\\",\\\"fields\\\":[{\\\"name\\\":\\\"randomStrField\\\",\\\"type\\\":\\\"string\\\"}]}\"", "var_name": "METADATA1_SCHEMA_STR"}, {"original_string": "static final ExecutorService BOSS_POOL = Executors.newCachedThreadPool();", "modifier": "static final", "type": "ExecutorService", "declarator": "BOSS_POOL = Executors.newCachedThreadPool()", "var_name": "BOSS_POOL"}, {"original_string": "static final ExecutorService IO_POOL = Executors.newCachedThreadPool();", "modifier": "static final", "type": "ExecutorService", "declarator": "IO_POOL = Executors.newCachedThreadPool()", "var_name": "IO_POOL"}, {"original_string": "static final int SERVER_ADDRESS_ID = 14466;", "modifier": "static final", "type": "int", "declarator": "SERVER_ADDRESS_ID = 14466", "var_name": "SERVER_ADDRESS_ID"}, {"original_string": "static final LocalAddress SERVER_ADDRESS = new LocalAddress(SERVER_ADDRESS_ID);", "modifier": "static final", "type": "LocalAddress", "declarator": "SERVER_ADDRESS = new LocalAddress(SERVER_ADDRESS_ID)", "var_name": "SERVER_ADDRESS"}, {"original_string": "static final Timer NETWORK_TIMER = new HashedWheelTimer(10, TimeUnit.MILLISECONDS);", "modifier": "static final", "type": "Timer", "declarator": "NETWORK_TIMER = new HashedWheelTimer(10, TimeUnit.MILLISECONDS)", "var_name": "NETWORK_TIMER"}, {"original_string": "static final ChannelGroup TEST_CHANNELS_GROUP = new DefaultChannelGroup();", "modifier": "static final", "type": "ChannelGroup", "declarator": "TEST_CHANNELS_GROUP = new DefaultChannelGroup()", "var_name": "TEST_CHANNELS_GROUP"}, {"original_string": "static final long DEFAULT_READ_TIMEOUT_MS = 10000;", "modifier": "static final", "type": "long", "declarator": "DEFAULT_READ_TIMEOUT_MS = 10000", "var_name": "DEFAULT_READ_TIMEOUT_MS"}, {"original_string": "static final long DEFAULT_WRITE_TIMEOUT_MS = 10000;", "modifier": "static final", "type": "long", "declarator": "DEFAULT_WRITE_TIMEOUT_MS = 10000", "var_name": "DEFAULT_WRITE_TIMEOUT_MS"}, {"original_string": "static final String SOURCE1_NAME = \"test.source1\";", "modifier": "static final", "type": "String", "declarator": "SOURCE1_NAME = \"test.source1\"", "var_name": "SOURCE1_NAME"}, {"original_string": "static final ServerInfo RELAY_SERVER_INFO =\n      new ServerInfo(\"testRelay\", \"master\", new InetSocketAddress(SERVER_ADDRESS_ID), SOURCE1_NAME);", "modifier": "static final", "type": "ServerInfo", "declarator": "RELAY_SERVER_INFO =\n      new ServerInfo(\"testRelay\", \"master\", new InetSocketAddress(SERVER_ADDRESS_ID), SOURCE1_NAME)", "var_name": "RELAY_SERVER_INFO"}, {"original_string": "static NettyHttpConnectionFactory CONN_FACTORY;", "modifier": "static", "type": "NettyHttpConnectionFactory", "declarator": "CONN_FACTORY", "var_name": "CONN_FACTORY"}, {"original_string": "static SimpleTestServerConnection _dummyServer;", "modifier": "static", "type": "SimpleTestServerConnection", "declarator": "_dummyServer", "var_name": "_dummyServer"}, {"original_string": "static DbusEventBuffer.StaticConfig _bufCfg;", "modifier": "static", "type": "DbusEventBuffer.StaticConfig", "declarator": "_bufCfg", "var_name": "_bufCfg"}, {"original_string": "static List<Object> _sourceObjectsList;", "modifier": "static", "type": "List<Object>", "declarator": "_sourceObjectsList", "var_name": "_sourceObjectsList"}, {"original_string": "static List<Object> _keyObjectsList;", "modifier": "static", "type": "List<Object>", "declarator": "_keyObjectsList", "var_name": "_keyObjectsList"}, {"original_string": "static List<Object> _metadataObjectsList;", "modifier": "static", "type": "List<Object>", "declarator": "_metadataObjectsList", "var_name": "_metadataObjectsList"}, {"original_string": "static HashMap<String, List<Object>> _fullV4ResponseMap;", "modifier": "static", "type": "HashMap<String, List<Object>>", "declarator": "_fullV4ResponseMap", "var_name": "_fullV4ResponseMap"}, {"original_string": "static int MAX_EVENT_VERSION = DbusEventFactory.DBUS_EVENT_V2;", "modifier": "static", "type": "int", "declarator": "MAX_EVENT_VERSION = DbusEventFactory.DBUS_EVENT_V2", "var_name": "MAX_EVENT_VERSION"}, {"original_string": "private Level _logLevel = Level.INFO;", "modifier": "private", "type": "Level", "declarator": "_logLevel = Level.INFO", "var_name": "_logLevel"}], "file": "databus-client/databus-client-http/src/test/java/com/linkedin/databus/client/netty/TestNettyHttpDatabusRelayConnection.java"}, "test_case": {"identifier": "testHappyPath", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testHappyPath() throws IOException, ScnNotFoundException, OffsetNotFoundException\n  {\n    final Logger log = Logger.getLogger(\"TestNettyHttpDatabusRelayConnection.testHappyPath\");\n    //NettyHttpDatabusRelayConnection.LOG.setLevel(Level.DEBUG);\n\n    DbusEventBuffer buf = createSimpleBuffer();\n\n    TestingConnectionCallback callback = TestingConnectionCallback.createAndStart(\"testHappyPath\");\n    DummyRemoteExceptionHandler remoteExceptionHandler = new DummyRemoteExceptionHandler();\n    final NettyHttpDatabusRelayConnection conn =\n        (NettyHttpDatabusRelayConnection)\n        CONN_FACTORY.createRelayConnection(RELAY_SERVER_INFO, callback, remoteExceptionHandler);\n    conn.getHandler().getLog().setLevel(Level.DEBUG);\n\n    Assert.assertEquals(MAX_EVENT_VERSION, conn.getMaxEventVersion()); // verify the version - current DBUS_EVENT_V2\n    try\n    {\n      runHappyPathIteration(log, buf, callback, remoteExceptionHandler, conn);\n    }\n    finally\n    {\n      conn.close();\n      callback.shutdown();\n    }\n  }", "signature": "void testHappyPath()", "full_signature": "@Test public void testHappyPath()", "class_method_signature": "TestNettyHttpDatabusRelayConnection.testHappyPath()", "testcase": true, "constructor": false, "invocations": ["getLogger", "createSimpleBuffer", "createAndStart", "createRelayConnection", "setLevel", "getLog", "getHandler", "assertEquals", "getMaxEventVersion", "runHappyPathIteration", "close", "shutdown"]}, "focal_class": {"identifier": "NettyHttpDatabusRelayConnection", "superclass": "extends AbstractNettyHttpConnection", "interfaces": "implements DatabusRelayConnection", "fields": [{"original_string": "public static final String MODULE = NettyHttpDatabusRelayConnection.class.getName();", "modifier": "public static final", "type": "String", "declarator": "MODULE = NettyHttpDatabusRelayConnection.class.getName()", "var_name": "MODULE"}, {"original_string": "public static final Logger LOG = Logger.getLogger(MODULE);", "modifier": "public static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(MODULE)", "var_name": "LOG"}, {"original_string": "public static final boolean needCompress = true;", "modifier": "public static final", "type": "boolean", "declarator": "needCompress = true", "var_name": "needCompress"}, {"original_string": "private final ActorMessageQueue _callback;", "modifier": "private final", "type": "ActorMessageQueue", "declarator": "_callback", "var_name": "_callback"}, {"original_string": "private DatabusRelayConnectionStateMessage _callbackStateReuse;", "modifier": "private", "type": "DatabusRelayConnectionStateMessage", "declarator": "_callbackStateReuse", "var_name": "_callbackStateReuse"}, {"original_string": "private ExtendedReadTimeoutHandler _readTimeOutHandler;", "modifier": "private", "type": "ExtendedReadTimeoutHandler", "declarator": "_readTimeOutHandler", "var_name": "_readTimeOutHandler"}, {"original_string": "private CheckpointMult _checkpoint;", "modifier": "private", "type": "CheckpointMult", "declarator": "_checkpoint", "var_name": "_checkpoint"}, {"original_string": "private State _curState;", "modifier": "private", "type": "State", "declarator": "_curState", "var_name": "_curState"}, {"original_string": "private String _sourcesSubsList;", "modifier": "private", "type": "String", "declarator": "_sourcesSubsList", "var_name": "_sourcesSubsList"}, {"original_string": "private int _freeBufferSpace;", "modifier": "private", "type": "int", "declarator": "_freeBufferSpace", "var_name": "_freeBufferSpace"}, {"original_string": "private DbusKeyCompositeFilter _filter;", "modifier": "private", "type": "DbusKeyCompositeFilter", "declarator": "_filter", "var_name": "_filter"}, {"original_string": "private boolean _enableReadFromLatestSCN = false;", "modifier": "private", "type": "boolean", "declarator": "_enableReadFromLatestSCN = false", "var_name": "_enableReadFromLatestSCN"}, {"original_string": "final int _maxEventVersion;", "modifier": "final", "type": "int", "declarator": "_maxEventVersion", "var_name": "_maxEventVersion"}], "methods": [{"identifier": "NettyHttpDatabusRelayConnection", "parameters": "(ServerInfo relay,\n                                         ActorMessageQueue callback,\n                                         ClientBootstrap bootstrap,\n                                         ContainerStatisticsCollector containerStatsCollector,\n                                         RemoteExceptionHandler remoteExceptionHandler,\n                                         Timer timeoutTimer,\n                                         long writeTimeoutMs,\n                                         long readTimeoutMs,\n                                         int protocolVersion,\n                                         int maxEventVersion,\n                                         ChannelGroup channelGroup)", "modifiers": "public", "return": "", "signature": " NettyHttpDatabusRelayConnection(ServerInfo relay,\n                                         ActorMessageQueue callback,\n                                         ClientBootstrap bootstrap,\n                                         ContainerStatisticsCollector containerStatsCollector,\n                                         RemoteExceptionHandler remoteExceptionHandler,\n                                         Timer timeoutTimer,\n                                         long writeTimeoutMs,\n                                         long readTimeoutMs,\n                                         int protocolVersion,\n                                         int maxEventVersion,\n                                         ChannelGroup channelGroup)", "full_signature": "public  NettyHttpDatabusRelayConnection(ServerInfo relay,\n                                         ActorMessageQueue callback,\n                                         ClientBootstrap bootstrap,\n                                         ContainerStatisticsCollector containerStatsCollector,\n                                         RemoteExceptionHandler remoteExceptionHandler,\n                                         Timer timeoutTimer,\n                                         long writeTimeoutMs,\n                                         long readTimeoutMs,\n                                         int protocolVersion,\n                                         int maxEventVersion,\n                                         ChannelGroup channelGroup)", "class_method_signature": "NettyHttpDatabusRelayConnection.NettyHttpDatabusRelayConnection(ServerInfo relay,\n                                         ActorMessageQueue callback,\n                                         ClientBootstrap bootstrap,\n                                         ContainerStatisticsCollector containerStatsCollector,\n                                         RemoteExceptionHandler remoteExceptionHandler,\n                                         Timer timeoutTimer,\n                                         long writeTimeoutMs,\n                                         long readTimeoutMs,\n                                         int protocolVersion,\n                                         int maxEventVersion,\n                                         ChannelGroup channelGroup)", "testcase": false, "constructor": true}, {"identifier": "NettyHttpDatabusRelayConnection", "parameters": "(ServerInfo relay,\n                                         ActorMessageQueue callback,\n                                         ChannelFactory channelFactory,\n                                         ContainerStatisticsCollector containerStatsCollector,\n                                         RemoteExceptionHandler remoteExceptionHandler,\n                                         Timer timeoutTimer,\n                                         long writeTimeoutMs,\n                                         long readTimeoutMs,\n                                         int protocolVersion,\n                                         int maxEventVersion,\n                                         ChannelGroup channelGroup)", "modifiers": "public", "return": "", "signature": " NettyHttpDatabusRelayConnection(ServerInfo relay,\n                                         ActorMessageQueue callback,\n                                         ChannelFactory channelFactory,\n                                         ContainerStatisticsCollector containerStatsCollector,\n                                         RemoteExceptionHandler remoteExceptionHandler,\n                                         Timer timeoutTimer,\n                                         long writeTimeoutMs,\n                                         long readTimeoutMs,\n                                         int protocolVersion,\n                                         int maxEventVersion,\n                                         ChannelGroup channelGroup)", "full_signature": "public  NettyHttpDatabusRelayConnection(ServerInfo relay,\n                                         ActorMessageQueue callback,\n                                         ChannelFactory channelFactory,\n                                         ContainerStatisticsCollector containerStatsCollector,\n                                         RemoteExceptionHandler remoteExceptionHandler,\n                                         Timer timeoutTimer,\n                                         long writeTimeoutMs,\n                                         long readTimeoutMs,\n                                         int protocolVersion,\n                                         int maxEventVersion,\n                                         ChannelGroup channelGroup)", "class_method_signature": "NettyHttpDatabusRelayConnection.NettyHttpDatabusRelayConnection(ServerInfo relay,\n                                         ActorMessageQueue callback,\n                                         ChannelFactory channelFactory,\n                                         ContainerStatisticsCollector containerStatsCollector,\n                                         RemoteExceptionHandler remoteExceptionHandler,\n                                         Timer timeoutTimer,\n                                         long writeTimeoutMs,\n                                         long readTimeoutMs,\n                                         int protocolVersion,\n                                         int maxEventVersion,\n                                         ChannelGroup channelGroup)", "testcase": false, "constructor": true}, {"identifier": "isEnableReadFromLatestSCN", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEnableReadFromLatestSCN()", "full_signature": "public boolean isEnableReadFromLatestSCN()", "class_method_signature": "NettyHttpDatabusRelayConnection.isEnableReadFromLatestSCN()", "testcase": false, "constructor": false}, {"identifier": "requestSources", "parameters": "(DatabusRelayConnectionStateMessage stateReuse)", "modifiers": "@Override public", "return": "void", "signature": "void requestSources(DatabusRelayConnectionStateMessage stateReuse)", "full_signature": "@Override public void requestSources(DatabusRelayConnectionStateMessage stateReuse)", "class_method_signature": "NettyHttpDatabusRelayConnection.requestSources(DatabusRelayConnectionStateMessage stateReuse)", "testcase": false, "constructor": false}, {"identifier": "onSourcesConnectSuccess", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onSourcesConnectSuccess()", "full_signature": " void onSourcesConnectSuccess()", "class_method_signature": "NettyHttpDatabusRelayConnection.onSourcesConnectSuccess()", "testcase": false, "constructor": false}, {"identifier": "requestRegister", "parameters": "(String sourcesIdList, DatabusRelayConnectionStateMessage stateReuse)", "modifiers": "@Override public", "return": "void", "signature": "void requestRegister(String sourcesIdList, DatabusRelayConnectionStateMessage stateReuse)", "full_signature": "@Override public void requestRegister(String sourcesIdList, DatabusRelayConnectionStateMessage stateReuse)", "class_method_signature": "NettyHttpDatabusRelayConnection.requestRegister(String sourcesIdList, DatabusRelayConnectionStateMessage stateReuse)", "testcase": false, "constructor": false}, {"identifier": "onRegisterConnectSuccess", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onRegisterConnectSuccess()", "full_signature": " void onRegisterConnectSuccess()", "class_method_signature": "NettyHttpDatabusRelayConnection.onRegisterConnectSuccess()", "testcase": false, "constructor": false}, {"identifier": "createRegisterUrl", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String createRegisterUrl()", "full_signature": "private String createRegisterUrl()", "class_method_signature": "NettyHttpDatabusRelayConnection.createRegisterUrl()", "testcase": false, "constructor": false}, {"identifier": "requestStream", "parameters": "(String sourcesSubsList, DbusKeyCompositeFilter filter,\n                            int freeBufferSpace, CheckpointMult cp, Range keyRange,\n                            DatabusRelayConnectionStateMessage stateReuse)", "modifiers": "@Override public", "return": "void", "signature": "void requestStream(String sourcesSubsList, DbusKeyCompositeFilter filter,\n                            int freeBufferSpace, CheckpointMult cp, Range keyRange,\n                            DatabusRelayConnectionStateMessage stateReuse)", "full_signature": "@Override public void requestStream(String sourcesSubsList, DbusKeyCompositeFilter filter,\n                            int freeBufferSpace, CheckpointMult cp, Range keyRange,\n                            DatabusRelayConnectionStateMessage stateReuse)", "class_method_signature": "NettyHttpDatabusRelayConnection.requestStream(String sourcesSubsList, DbusKeyCompositeFilter filter,\n                            int freeBufferSpace, CheckpointMult cp, Range keyRange,\n                            DatabusRelayConnectionStateMessage stateReuse)", "testcase": false, "constructor": false}, {"identifier": "formRequest", "parameters": "(Formatter formatter, String filtersStr)", "modifiers": "", "return": "void", "signature": "void formRequest(Formatter formatter, String filtersStr)", "full_signature": " void formRequest(Formatter formatter, String filtersStr)", "class_method_signature": "NettyHttpDatabusRelayConnection.formRequest(Formatter formatter, String filtersStr)", "testcase": false, "constructor": false}, {"identifier": "onStreamConnectSuccess", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onStreamConnectSuccess()", "full_signature": " void onStreamConnectSuccess()", "class_method_signature": "NettyHttpDatabusRelayConnection.onStreamConnectSuccess()", "testcase": false, "constructor": false}, {"identifier": "populateStreamRequestUrl", "parameters": "(StringBuilder uriString)", "modifiers": "private", "return": "boolean", "signature": "boolean populateStreamRequestUrl(StringBuilder uriString)", "full_signature": "private boolean populateStreamRequestUrl(StringBuilder uriString)", "class_method_signature": "NettyHttpDatabusRelayConnection.populateStreamRequestUrl(StringBuilder uriString)", "testcase": false, "constructor": false}, {"identifier": "connect", "parameters": "(State connectState)", "modifiers": "private", "return": "void", "signature": "void connect(State connectState)", "full_signature": "private void connect(State connectState)", "class_method_signature": "NettyHttpDatabusRelayConnection.connect(State connectState)", "testcase": false, "constructor": false}, {"identifier": "enableReadFromLatestScn", "parameters": "(boolean enable)", "modifiers": "@Override public", "return": "void", "signature": "void enableReadFromLatestScn(boolean enable)", "full_signature": "@Override public void enableReadFromLatestScn(boolean enable)", "class_method_signature": "NettyHttpDatabusRelayConnection.enableReadFromLatestScn(boolean enable)", "testcase": false, "constructor": false}, {"identifier": "onConnectSuccess", "parameters": "(Channel channel)", "modifiers": "private", "return": "void", "signature": "void onConnectSuccess(Channel channel)", "full_signature": "private void onConnectSuccess(Channel channel)", "class_method_signature": "NettyHttpDatabusRelayConnection.onConnectSuccess(Channel channel)", "testcase": false, "constructor": false}, {"identifier": "onRequestFailure", "parameters": "(HttpRequest req, Throwable cause)", "modifiers": "private", "return": "void", "signature": "void onRequestFailure(HttpRequest req, Throwable cause)", "full_signature": "private void onRequestFailure(HttpRequest req, Throwable cause)", "class_method_signature": "NettyHttpDatabusRelayConnection.onRequestFailure(HttpRequest req, Throwable cause)", "testcase": false, "constructor": false}, {"identifier": "onRequestFailure", "parameters": "(String req, Throwable cause)", "modifiers": "private", "return": "void", "signature": "void onRequestFailure(String req, Throwable cause)", "full_signature": "private void onRequestFailure(String req, Throwable cause)", "class_method_signature": "NettyHttpDatabusRelayConnection.onRequestFailure(String req, Throwable cause)", "testcase": false, "constructor": false}, {"identifier": "getMaxEventVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxEventVersion()", "full_signature": "@Override public int getMaxEventVersion()", "class_method_signature": "NettyHttpDatabusRelayConnection.getMaxEventVersion()", "testcase": false, "constructor": false}], "file": "databus-client/databus-client-http/src/main/java/com/linkedin/databus/client/netty/NettyHttpDatabusRelayConnection.java"}, "focal_method": {"identifier": "getMaxEventVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n  public int getMaxEventVersion()\n  {\n    return _maxEventVersion;\n  }", "signature": "int getMaxEventVersion()", "full_signature": "@Override public int getMaxEventVersion()", "class_method_signature": "NettyHttpDatabusRelayConnection.getMaxEventVersion()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 7209229, "url": "https://github.com/linkedin/databus", "language": "Java", "is_fork": false, "fork_count": 653, "stargazer_count": 2899, "size": 51191, "license": "licensed"}}