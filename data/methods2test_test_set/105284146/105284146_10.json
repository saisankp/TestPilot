{"test_class": {"identifier": "AbstractValidationFormatterWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected final String branchId = \"branchId\";", "modifier": "protected final", "type": "String", "declarator": "branchId = \"branchId\"", "var_name": "branchId"}, {"original_string": "protected final String otherBranchId = \"otherBranchId\";", "modifier": "protected final", "type": "String", "declarator": "otherBranchId = \"otherBranchId\"", "var_name": "otherBranchId"}, {"original_string": "protected final double p1 = 39.5056;", "modifier": "protected final", "type": "double", "declarator": "p1 = 39.5056", "var_name": "p1"}, {"original_string": "protected final double p1Calc = 39.5058;", "modifier": "protected final", "type": "double", "declarator": "p1Calc = 39.5058", "var_name": "p1Calc"}, {"original_string": "protected final double q1 = -3.72344;", "modifier": "protected final", "type": "double", "declarator": "q1 = -3.72344", "var_name": "q1"}, {"original_string": "protected final double q1Calc = -3.72348;", "modifier": "protected final", "type": "double", "declarator": "q1Calc = -3.72348", "var_name": "q1Calc"}, {"original_string": "protected final double p2 = -39.5122;", "modifier": "protected final", "type": "double", "declarator": "p2 = -39.5122", "var_name": "p2"}, {"original_string": "protected final double p2Calc = -39.5128;", "modifier": "protected final", "type": "double", "declarator": "p2Calc = -39.5128", "var_name": "p2Calc"}, {"original_string": "protected final double q2 = 3.7746;", "modifier": "protected final", "type": "double", "declarator": "q2 = 3.7746", "var_name": "q2"}, {"original_string": "protected final double q2Calc = 3.7742;", "modifier": "protected final", "type": "double", "declarator": "q2Calc = 3.7742", "var_name": "q2Calc"}, {"original_string": "protected final double r = 0.04;", "modifier": "protected final", "type": "double", "declarator": "r = 0.04", "var_name": "r"}, {"original_string": "protected final double x = 0.423;", "modifier": "protected final", "type": "double", "declarator": "x = 0.423", "var_name": "x"}, {"original_string": "protected final double g1 = 0.0;", "modifier": "protected final", "type": "double", "declarator": "g1 = 0.0", "var_name": "g1"}, {"original_string": "protected final double g2 = 0.0;", "modifier": "protected final", "type": "double", "declarator": "g2 = 0.0", "var_name": "g2"}, {"original_string": "protected final double b1 = 0.0;", "modifier": "protected final", "type": "double", "declarator": "b1 = 0.0", "var_name": "b1"}, {"original_string": "protected final double b2 = 0.0;", "modifier": "protected final", "type": "double", "declarator": "b2 = 0.0", "var_name": "b2"}, {"original_string": "protected final double rho1 = 1;", "modifier": "protected final", "type": "double", "declarator": "rho1 = 1", "var_name": "rho1"}, {"original_string": "protected final double rho2 = 11.249999728;", "modifier": "protected final", "type": "double", "declarator": "rho2 = 11.249999728", "var_name": "rho2"}, {"original_string": "protected final double alpha1 = 0.0;", "modifier": "protected final", "type": "double", "declarator": "alpha1 = 0.0", "var_name": "alpha1"}, {"original_string": "protected final double alpha2 = 0.0;", "modifier": "protected final", "type": "double", "declarator": "alpha2 = 0.0", "var_name": "alpha2"}, {"original_string": "protected final double u1 = 236.80258178710938;", "modifier": "protected final", "type": "double", "declarator": "u1 = 236.80258178710938", "var_name": "u1"}, {"original_string": "protected final double u2 = 21.04814910888672;", "modifier": "protected final", "type": "double", "declarator": "u2 = 21.04814910888672", "var_name": "u2"}, {"original_string": "protected final double theta1 = 0.1257718437996544;", "modifier": "protected final", "type": "double", "declarator": "theta1 = 0.1257718437996544", "var_name": "theta1"}, {"original_string": "protected final double theta2 = 0.12547118123496284;", "modifier": "protected final", "type": "double", "declarator": "theta2 = 0.12547118123496284", "var_name": "theta2"}, {"original_string": "protected final double z = Math.hypot(r, x);", "modifier": "protected final", "type": "double", "declarator": "z = Math.hypot(r, x)", "var_name": "z"}, {"original_string": "protected final double y = 1 / z;", "modifier": "protected final", "type": "double", "declarator": "y = 1 / z", "var_name": "y"}, {"original_string": "protected final double ksi = Math.atan2(r, x);", "modifier": "protected final", "type": "double", "declarator": "ksi = Math.atan2(r, x)", "var_name": "ksi"}, {"original_string": "protected final int phaseAngleClock = 0;", "modifier": "protected final", "type": "int", "declarator": "phaseAngleClock = 0", "var_name": "phaseAngleClock"}, {"original_string": "protected final boolean connected1 = true;", "modifier": "protected final", "type": "boolean", "declarator": "connected1 = true", "var_name": "connected1"}, {"original_string": "protected final boolean connected2 = true;", "modifier": "protected final", "type": "boolean", "declarator": "connected2 = true", "var_name": "connected2"}, {"original_string": "protected final boolean mainComponent1 = true;", "modifier": "protected final", "type": "boolean", "declarator": "mainComponent1 = true", "var_name": "mainComponent1"}, {"original_string": "protected final boolean mainComponent2 = true;", "modifier": "protected final", "type": "boolean", "declarator": "mainComponent2 = true", "var_name": "mainComponent2"}, {"original_string": "protected final boolean validated = true;", "modifier": "protected final", "type": "boolean", "declarator": "validated = true", "var_name": "validated"}, {"original_string": "protected final String generatorId = \"generatorId\";", "modifier": "protected final", "type": "String", "declarator": "generatorId = \"generatorId\"", "var_name": "generatorId"}, {"original_string": "protected final String otherGeneratorId = \"otherGeneratorId\";", "modifier": "protected final", "type": "String", "declarator": "otherGeneratorId = \"otherGeneratorId\"", "var_name": "otherGeneratorId"}, {"original_string": "protected final double p = -39.5056;", "modifier": "protected final", "type": "double", "declarator": "p = -39.5056", "var_name": "p"}, {"original_string": "protected final double q = 3.72344;", "modifier": "protected final", "type": "double", "declarator": "q = 3.72344", "var_name": "q"}, {"original_string": "protected final double v = 380;", "modifier": "protected final", "type": "double", "declarator": "v = 380", "var_name": "v"}, {"original_string": "protected final double targetP = 39.5056;", "modifier": "protected final", "type": "double", "declarator": "targetP = 39.5056", "var_name": "targetP"}, {"original_string": "protected final double expectedP = 39.5056;", "modifier": "protected final", "type": "double", "declarator": "expectedP = 39.5056", "var_name": "expectedP"}, {"original_string": "protected final double targetQ = -3.72344;", "modifier": "protected final", "type": "double", "declarator": "targetQ = -3.72344", "var_name": "targetQ"}, {"original_string": "protected final double targetV = 380;", "modifier": "protected final", "type": "double", "declarator": "targetV = 380", "var_name": "targetV"}, {"original_string": "protected final boolean connected = true;", "modifier": "protected final", "type": "boolean", "declarator": "connected = true", "var_name": "connected"}, {"original_string": "protected final boolean voltageRegulatorOn = true;", "modifier": "protected final", "type": "boolean", "declarator": "voltageRegulatorOn = true", "var_name": "voltageRegulatorOn"}, {"original_string": "protected final double minP = 25;", "modifier": "protected final", "type": "double", "declarator": "minP = 25", "var_name": "minP"}, {"original_string": "protected final double maxP = 45;", "modifier": "protected final", "type": "double", "declarator": "maxP = 45", "var_name": "maxP"}, {"original_string": "protected final double minQ = -10;", "modifier": "protected final", "type": "double", "declarator": "minQ = -10", "var_name": "minQ"}, {"original_string": "protected final double maxQ = 0;", "modifier": "protected final", "type": "double", "declarator": "maxQ = 0", "var_name": "maxQ"}, {"original_string": "protected final String busId = \"busId\";", "modifier": "protected final", "type": "String", "declarator": "busId = \"busId\"", "var_name": "busId"}, {"original_string": "protected final String otherBusId = \"otherBusId\";", "modifier": "protected final", "type": "String", "declarator": "otherBusId = \"otherBusId\"", "var_name": "otherBusId"}, {"original_string": "protected final double incomingP = -37.2287;", "modifier": "protected final", "type": "double", "declarator": "incomingP = -37.2287", "var_name": "incomingP"}, {"original_string": "protected final double incomingQ = -174.383;", "modifier": "protected final", "type": "double", "declarator": "incomingQ = -174.383", "var_name": "incomingQ"}, {"original_string": "protected final double loadP = 37.2286;", "modifier": "protected final", "type": "double", "declarator": "loadP = 37.2286", "var_name": "loadP"}, {"original_string": "protected final double loadQ = 174.38244;", "modifier": "protected final", "type": "double", "declarator": "loadQ = 174.38244", "var_name": "loadQ"}, {"original_string": "protected final double genP = -2020;", "modifier": "protected final", "type": "double", "declarator": "genP = -2020", "var_name": "genP"}, {"original_string": "protected final double genQ = 91.54;", "modifier": "protected final", "type": "double", "declarator": "genQ = 91.54", "var_name": "genQ"}, {"original_string": "protected final double batP = -2019;", "modifier": "protected final", "type": "double", "declarator": "batP = -2019", "var_name": "batP"}, {"original_string": "protected final double batQ = 92.54;", "modifier": "protected final", "type": "double", "declarator": "batQ = 92.54", "var_name": "batQ"}, {"original_string": "protected final double shuntP = 0;", "modifier": "protected final", "type": "double", "declarator": "shuntP = 0", "var_name": "shuntP"}, {"original_string": "protected final double shuntQ = 175.8437;", "modifier": "protected final", "type": "double", "declarator": "shuntQ = 175.8437", "var_name": "shuntQ"}, {"original_string": "protected final double svcP = 0;", "modifier": "protected final", "type": "double", "declarator": "svcP = 0", "var_name": "svcP"}, {"original_string": "protected final double svcQ = 0;", "modifier": "protected final", "type": "double", "declarator": "svcQ = 0", "var_name": "svcQ"}, {"original_string": "protected final double vscCSP = 0;", "modifier": "protected final", "type": "double", "declarator": "vscCSP = 0", "var_name": "vscCSP"}, {"original_string": "protected final double vscCSQ = 0;", "modifier": "protected final", "type": "double", "declarator": "vscCSQ = 0", "var_name": "vscCSQ"}, {"original_string": "protected final double lineP = 1982.7713;", "modifier": "protected final", "type": "double", "declarator": "lineP = 1982.7713", "var_name": "lineP"}, {"original_string": "protected final double lineQ = -441.7662;", "modifier": "protected final", "type": "double", "declarator": "lineQ = -441.7662", "var_name": "lineQ"}, {"original_string": "protected final double danglingLineP = 0;", "modifier": "protected final", "type": "double", "declarator": "danglingLineP = 0", "var_name": "danglingLineP"}, {"original_string": "protected final double danglingLineQ = 0;", "modifier": "protected final", "type": "double", "declarator": "danglingLineQ = 0", "var_name": "danglingLineQ"}, {"original_string": "protected final double twtP = 0;", "modifier": "protected final", "type": "double", "declarator": "twtP = 0", "var_name": "twtP"}, {"original_string": "protected final double twtQ = 0;", "modifier": "protected final", "type": "double", "declarator": "twtQ = 0", "var_name": "twtQ"}, {"original_string": "protected final double tltP = 0;", "modifier": "protected final", "type": "double", "declarator": "tltP = 0", "var_name": "tltP"}, {"original_string": "protected final double tltQ = 0;", "modifier": "protected final", "type": "double", "declarator": "tltQ = 0", "var_name": "tltQ"}, {"original_string": "protected final String svcId = \"svcId\";", "modifier": "protected final", "type": "String", "declarator": "svcId = \"svcId\"", "var_name": "svcId"}, {"original_string": "protected final String otherSvcId = \"otherSvcId\";", "modifier": "protected final", "type": "String", "declarator": "otherSvcId = \"otherSvcId\"", "var_name": "otherSvcId"}, {"original_string": "protected final double reactivePowerSetpoint = -3.72344;", "modifier": "protected final", "type": "double", "declarator": "reactivePowerSetpoint = -3.72344", "var_name": "reactivePowerSetpoint"}, {"original_string": "protected final double voltageSetpoint = 380;", "modifier": "protected final", "type": "double", "declarator": "voltageSetpoint = 380", "var_name": "voltageSetpoint"}, {"original_string": "protected final RegulationMode regulationMode = RegulationMode.VOLTAGE;", "modifier": "protected final", "type": "RegulationMode", "declarator": "regulationMode = RegulationMode.VOLTAGE", "var_name": "regulationMode"}, {"original_string": "protected final double bMin = -10;", "modifier": "protected final", "type": "double", "declarator": "bMin = -10", "var_name": "bMin"}, {"original_string": "protected final double bMax = 0;", "modifier": "protected final", "type": "double", "declarator": "bMax = 0", "var_name": "bMax"}, {"original_string": "protected final String shuntId = \"shuntId\";", "modifier": "protected final", "type": "String", "declarator": "shuntId = \"shuntId\"", "var_name": "shuntId"}, {"original_string": "protected final String otherShuntId = \"otherShuntId\";", "modifier": "protected final", "type": "String", "declarator": "otherShuntId = \"otherShuntId\"", "var_name": "otherShuntId"}, {"original_string": "protected final double expectedQ = 3.724;", "modifier": "protected final", "type": "double", "declarator": "expectedQ = 3.724", "var_name": "expectedQ"}, {"original_string": "protected int currentSectionCount = 0;", "modifier": "protected", "type": "int", "declarator": "currentSectionCount = 0", "var_name": "currentSectionCount"}, {"original_string": "protected int maximumSectionCount = 1;", "modifier": "protected", "type": "int", "declarator": "maximumSectionCount = 1", "var_name": "maximumSectionCount"}, {"original_string": "protected double bPerSection = -0.16;", "modifier": "protected", "type": "double", "declarator": "bPerSection = -0.16", "var_name": "bPerSection"}, {"original_string": "protected double qMax = -144.4;", "modifier": "protected", "type": "double", "declarator": "qMax = -144.4", "var_name": "qMax"}, {"original_string": "protected final double nominalV = 380;", "modifier": "protected final", "type": "double", "declarator": "nominalV = 380", "var_name": "nominalV"}, {"original_string": "protected final String twtId = \"twtId\";", "modifier": "protected final", "type": "String", "declarator": "twtId = \"twtId\"", "var_name": "twtId"}, {"original_string": "protected final String otherTwtId = \"otherTwtId\";", "modifier": "protected final", "type": "String", "declarator": "otherTwtId = \"otherTwtId\"", "var_name": "otherTwtId"}, {"original_string": "protected final double error = 0.000243738;", "modifier": "protected final", "type": "double", "declarator": "error = 0.000243738", "var_name": "error"}, {"original_string": "protected final double upIncrement = 0.00944448;", "modifier": "protected final", "type": "double", "declarator": "upIncrement = 0.00944448", "var_name": "upIncrement"}, {"original_string": "protected final double downIncrement = -0.00834519;", "modifier": "protected final", "type": "double", "declarator": "downIncrement = -0.00834519", "var_name": "downIncrement"}, {"original_string": "protected final double rho = 1.034;", "modifier": "protected final", "type": "double", "declarator": "rho = 1.034", "var_name": "rho"}, {"original_string": "protected final double rhoPreviousStep = 1.043;", "modifier": "protected final", "type": "double", "declarator": "rhoPreviousStep = 1.043", "var_name": "rhoPreviousStep"}, {"original_string": "protected final double rhoNextStep = 1.024;", "modifier": "protected final", "type": "double", "declarator": "rhoNextStep = 1.024", "var_name": "rhoNextStep"}, {"original_string": "protected final int tapPosition = 8;", "modifier": "protected final", "type": "int", "declarator": "tapPosition = 8", "var_name": "tapPosition"}, {"original_string": "protected final int lowTapPosition = 0;", "modifier": "protected final", "type": "int", "declarator": "lowTapPosition = 0", "var_name": "lowTapPosition"}, {"original_string": "protected final int highTapPosition = 30;", "modifier": "protected final", "type": "int", "declarator": "highTapPosition = 30", "var_name": "highTapPosition"}, {"original_string": "protected final double twtTargetV = 92.7781;", "modifier": "protected final", "type": "double", "declarator": "twtTargetV = 92.7781", "var_name": "twtTargetV"}, {"original_string": "protected final Side regulatedSide = Side.ONE;", "modifier": "protected final", "type": "Side", "declarator": "regulatedSide = Side.ONE", "var_name": "regulatedSide"}, {"original_string": "protected final double twtV = 92.8007;", "modifier": "protected final", "type": "double", "declarator": "twtV = 92.8007", "var_name": "twtV"}, {"original_string": "protected final boolean mainComponent = true;", "modifier": "protected final", "type": "boolean", "declarator": "mainComponent = true", "var_name": "mainComponent"}, {"original_string": "protected final String twt3wId = \"twt3wId\";", "modifier": "protected final", "type": "String", "declarator": "twt3wId = \"twt3wId\"", "var_name": "twt3wId"}, {"original_string": "protected final String otherTwt3wId = \"otherTwt3wId\";", "modifier": "protected final", "type": "String", "declarator": "otherTwt3wId = \"otherTwt3wId\"", "var_name": "otherTwt3wId"}], "file": "loadflow/loadflow-validation/src/test/java/com/powsybl/loadflow/validation/io/AbstractValidationFormatterWriterTest.java"}, "test_case": {"identifier": "testTwtsMissingSide", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTwtsMissingSide() throws Exception {\n        Writer writer = new StringWriter();\n        TableFormatterConfig config = new TableFormatterConfig(Locale.getDefault(), ';', \"inv\", true, true);\n        try (ValidationWriter twtsWriter = getTwtsValidationFormatterCsvWriter(config, writer, true, false)) {\n            twtsWriter.write(twtId, Float.NaN, Float.NaN, Float.NaN, rho, rhoPreviousStep, rhoNextStep, tapPosition,\n                             lowTapPosition, highTapPosition, twtTargetV, null, Float.NaN, false, false, true);\n            assertEquals(getTwtsMissingSideContent(), writer.toString().trim());\n        }\n    }", "signature": "void testTwtsMissingSide()", "full_signature": "@Test public void testTwtsMissingSide()", "class_method_signature": "AbstractValidationFormatterWriterTest.testTwtsMissingSide()", "testcase": true, "constructor": false, "invocations": ["getDefault", "getTwtsValidationFormatterCsvWriter", "write", "assertEquals", "getTwtsMissingSideContent", "trim", "toString"]}, "focal_class": {"identifier": "AbstractValidationFormatterWriter", "superclass": "", "interfaces": "implements ValidationWriter", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(AbstractValidationFormatterWriter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(AbstractValidationFormatterWriter.class)", "var_name": "LOGGER"}, {"original_string": "protected static final String SUCCESS = \"success\";", "modifier": "protected static final", "type": "String", "declarator": "SUCCESS = \"success\"", "var_name": "SUCCESS"}, {"original_string": "protected static final String FAIL = \"fail\";", "modifier": "protected static final", "type": "String", "declarator": "FAIL = \"fail\"", "var_name": "FAIL"}, {"original_string": "protected static final String VALIDATION = \"validation\";", "modifier": "protected static final", "type": "String", "declarator": "VALIDATION = \"validation\"", "var_name": "VALIDATION"}, {"original_string": "protected static final String CONNECTED = \"connected\";", "modifier": "protected static final", "type": "String", "declarator": "CONNECTED = \"connected\"", "var_name": "CONNECTED"}, {"original_string": "protected static final String MAIN_COMPONENT = \"mainComponent\";", "modifier": "protected static final", "type": "String", "declarator": "MAIN_COMPONENT = \"mainComponent\"", "var_name": "MAIN_COMPONENT"}, {"original_string": "protected static final String POST_COMPUTATION_SUFFIX = \"_postComp\";", "modifier": "protected static final", "type": "String", "declarator": "POST_COMPUTATION_SUFFIX = \"_postComp\"", "var_name": "POST_COMPUTATION_SUFFIX"}, {"original_string": "protected static final String NOMINAL_V = \"nominalV\";", "modifier": "protected static final", "type": "String", "declarator": "NOMINAL_V = \"nominalV\"", "var_name": "NOMINAL_V"}, {"original_string": "protected static final String NETWORK_P1 = \"network_p1\";", "modifier": "protected static final", "type": "String", "declarator": "NETWORK_P1 = \"network_p1\"", "var_name": "NETWORK_P1"}, {"original_string": "protected static final String EXPECTED_P1 = \"expected_p1\";", "modifier": "protected static final", "type": "String", "declarator": "EXPECTED_P1 = \"expected_p1\"", "var_name": "EXPECTED_P1"}, {"original_string": "protected static final String NETWORK_Q1 = \"network_q1\";", "modifier": "protected static final", "type": "String", "declarator": "NETWORK_Q1 = \"network_q1\"", "var_name": "NETWORK_Q1"}, {"original_string": "protected static final String EXPECTED_Q1 = \"expected_q1\";", "modifier": "protected static final", "type": "String", "declarator": "EXPECTED_Q1 = \"expected_q1\"", "var_name": "EXPECTED_Q1"}, {"original_string": "protected static final String NETWORK_P2 = \"network_p2\";", "modifier": "protected static final", "type": "String", "declarator": "NETWORK_P2 = \"network_p2\"", "var_name": "NETWORK_P2"}, {"original_string": "protected static final String EXPECTED_P2 = \"expected_p2\";", "modifier": "protected static final", "type": "String", "declarator": "EXPECTED_P2 = \"expected_p2\"", "var_name": "EXPECTED_P2"}, {"original_string": "protected static final String NETWORK_Q2 = \"network_q2\";", "modifier": "protected static final", "type": "String", "declarator": "NETWORK_Q2 = \"network_q2\"", "var_name": "NETWORK_Q2"}, {"original_string": "protected static final String EXPECTED_Q2 = \"expected_q2\";", "modifier": "protected static final", "type": "String", "declarator": "EXPECTED_Q2 = \"expected_q2\"", "var_name": "EXPECTED_Q2"}, {"original_string": "protected static final String NETWORK_P3 = \"network_p3\";", "modifier": "protected static final", "type": "String", "declarator": "NETWORK_P3 = \"network_p3\"", "var_name": "NETWORK_P3"}, {"original_string": "protected static final String EXPECTED_P3 = \"expected_p3\";", "modifier": "protected static final", "type": "String", "declarator": "EXPECTED_P3 = \"expected_p3\"", "var_name": "EXPECTED_P3"}, {"original_string": "protected static final String NETWORK_Q3 = \"network_q3\";", "modifier": "protected static final", "type": "String", "declarator": "NETWORK_Q3 = \"network_q3\"", "var_name": "NETWORK_Q3"}, {"original_string": "protected static final String EXPECTED_Q3 = \"expected_q3\";", "modifier": "protected static final", "type": "String", "declarator": "EXPECTED_Q3 = \"expected_q3\"", "var_name": "EXPECTED_Q3"}, {"original_string": "protected static final String THETA1 = \"theta1\";", "modifier": "protected static final", "type": "String", "declarator": "THETA1 = \"theta1\"", "var_name": "THETA1"}, {"original_string": "protected static final String THETA2 = \"theta2\";", "modifier": "protected static final", "type": "String", "declarator": "THETA2 = \"theta2\"", "var_name": "THETA2"}, {"original_string": "protected static final String THETA3 = \"theta3\";", "modifier": "protected static final", "type": "String", "declarator": "THETA3 = \"theta3\"", "var_name": "THETA3"}, {"original_string": "protected ValidationType validationType;", "modifier": "protected", "type": "ValidationType", "declarator": "validationType", "var_name": "validationType"}, {"original_string": "protected boolean compareResults;", "modifier": "protected", "type": "boolean", "declarator": "compareResults", "var_name": "compareResults"}, {"original_string": "protected TableFormatter formatter;", "modifier": "protected", "type": "TableFormatter", "declarator": "formatter", "var_name": "formatter"}, {"original_string": "protected String invalidString;", "modifier": "protected", "type": "String", "declarator": "invalidString", "var_name": "invalidString"}, {"original_string": "protected boolean preLoadflowValidationCompleted = false;", "modifier": "protected", "type": "boolean", "declarator": "preLoadflowValidationCompleted = false", "var_name": "preLoadflowValidationCompleted"}, {"original_string": "protected Map<String, BusData> busesData = new HashMap<>();", "modifier": "protected", "type": "Map<String, BusData>", "declarator": "busesData = new HashMap<>()", "var_name": "busesData"}, {"original_string": "protected Map<String, GeneratorData> generatorsData = new HashMap<>();", "modifier": "protected", "type": "Map<String, GeneratorData>", "declarator": "generatorsData = new HashMap<>()", "var_name": "generatorsData"}, {"original_string": "protected Map<String, SvcData> svcsData = new HashMap<>();", "modifier": "protected", "type": "Map<String, SvcData>", "declarator": "svcsData = new HashMap<>()", "var_name": "svcsData"}, {"original_string": "protected Map<String, ShuntData> shuntsData = new HashMap<>();", "modifier": "protected", "type": "Map<String, ShuntData>", "declarator": "shuntsData = new HashMap<>()", "var_name": "shuntsData"}, {"original_string": "protected Map<String, FlowData> flowsData = new HashMap<>();", "modifier": "protected", "type": "Map<String, FlowData>", "declarator": "flowsData = new HashMap<>()", "var_name": "flowsData"}, {"original_string": "protected Map<String, TransformerData> twtsData = new HashMap<>();", "modifier": "protected", "type": "Map<String, TransformerData>", "declarator": "twtsData = new HashMap<>()", "var_name": "twtsData"}, {"original_string": "protected Map<String, Transformer3WData> twts3wData = new HashMap<>();", "modifier": "protected", "type": "Map<String, Transformer3WData>", "declarator": "twts3wData = new HashMap<>()", "var_name": "twts3wData"}], "methods": [{"identifier": "createTableFormatter", "parameters": "(String id, Class<? extends TableFormatterFactory> formatterFactoryClass,\n                                                  TableFormatterConfig formatterConfig, Writer writer, ValidationType validationType)", "modifiers": "protected", "return": "TableFormatter", "signature": "TableFormatter createTableFormatter(String id, Class<? extends TableFormatterFactory> formatterFactoryClass,\n                                                  TableFormatterConfig formatterConfig, Writer writer, ValidationType validationType)", "full_signature": "protected TableFormatter createTableFormatter(String id, Class<? extends TableFormatterFactory> formatterFactoryClass,\n                                                  TableFormatterConfig formatterConfig, Writer writer, ValidationType validationType)", "class_method_signature": "AbstractValidationFormatterWriter.createTableFormatter(String id, Class<? extends TableFormatterFactory> formatterFactoryClass,\n                                                  TableFormatterConfig formatterConfig, Writer writer, ValidationType validationType)", "testcase": false, "constructor": false}, {"identifier": "getColumns", "parameters": "()", "modifiers": "protected abstract", "return": "Column[]", "signature": "Column[] getColumns()", "full_signature": "protected abstract Column[] getColumns()", "class_method_signature": "AbstractValidationFormatterWriter.getColumns()", "testcase": false, "constructor": false}, {"identifier": "getValidated", "parameters": "(boolean validated)", "modifiers": "protected", "return": "String", "signature": "String getValidated(boolean validated)", "full_signature": "protected String getValidated(boolean validated)", "class_method_signature": "AbstractValidationFormatterWriter.getValidated(boolean validated)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String branchId, double p1, double p1Calc, double q1, double q1Calc, double p2, double p2Calc, double q2, double q2Calc,\n                      double r, double x, double g1, double g2, double b1, double b2, double rho1, double rho2, double alpha1, double alpha2,\n                      double u1, double u2, double theta1, double theta2, double z, double y, double ksi, int phaseAngleClock, boolean connected1, boolean connected2,\n                      boolean mainComponent1, boolean mainComponent2, boolean validated)", "modifiers": "@Override public", "return": "void", "signature": "void write(String branchId, double p1, double p1Calc, double q1, double q1Calc, double p2, double p2Calc, double q2, double q2Calc,\n                      double r, double x, double g1, double g2, double b1, double b2, double rho1, double rho2, double alpha1, double alpha2,\n                      double u1, double u2, double theta1, double theta2, double z, double y, double ksi, int phaseAngleClock, boolean connected1, boolean connected2,\n                      boolean mainComponent1, boolean mainComponent2, boolean validated)", "full_signature": "@Override public void write(String branchId, double p1, double p1Calc, double q1, double q1Calc, double p2, double p2Calc, double q2, double q2Calc,\n                      double r, double x, double g1, double g2, double b1, double b2, double rho1, double rho2, double alpha1, double alpha2,\n                      double u1, double u2, double theta1, double theta2, double z, double y, double ksi, int phaseAngleClock, boolean connected1, boolean connected2,\n                      boolean mainComponent1, boolean mainComponent2, boolean validated)", "class_method_signature": "AbstractValidationFormatterWriter.write(String branchId, double p1, double p1Calc, double q1, double q1Calc, double p2, double p2Calc, double q2, double q2Calc,\n                      double r, double x, double g1, double g2, double b1, double b2, double rho1, double rho2, double alpha1, double alpha2,\n                      double u1, double u2, double theta1, double theta2, double z, double y, double ksi, int phaseAngleClock, boolean connected1, boolean connected2,\n                      boolean mainComponent1, boolean mainComponent2, boolean validated)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String branchId, double p1, double p1Calc, double q1, double q1Calc, double p2, double p2Calc, double q2, double q2Calc,\n                                  double r, double x, double g1, double g2, double b1, double b2, double rho1, double rho2, double alpha1, double alpha2,\n                                  double u1, double u2, double theta1, double theta2, double z, double y, double ksi, int phaseAngleClock, boolean connected1, boolean connected2,\n                                  boolean mainComponent1, boolean mainComponent2, boolean validated, FlowData flowData, boolean found, boolean writeValues)", "modifiers": "protected abstract", "return": "void", "signature": "void write(String branchId, double p1, double p1Calc, double q1, double q1Calc, double p2, double p2Calc, double q2, double q2Calc,\n                                  double r, double x, double g1, double g2, double b1, double b2, double rho1, double rho2, double alpha1, double alpha2,\n                                  double u1, double u2, double theta1, double theta2, double z, double y, double ksi, int phaseAngleClock, boolean connected1, boolean connected2,\n                                  boolean mainComponent1, boolean mainComponent2, boolean validated, FlowData flowData, boolean found, boolean writeValues)", "full_signature": "protected abstract void write(String branchId, double p1, double p1Calc, double q1, double q1Calc, double p2, double p2Calc, double q2, double q2Calc,\n                                  double r, double x, double g1, double g2, double b1, double b2, double rho1, double rho2, double alpha1, double alpha2,\n                                  double u1, double u2, double theta1, double theta2, double z, double y, double ksi, int phaseAngleClock, boolean connected1, boolean connected2,\n                                  boolean mainComponent1, boolean mainComponent2, boolean validated, FlowData flowData, boolean found, boolean writeValues)", "class_method_signature": "AbstractValidationFormatterWriter.write(String branchId, double p1, double p1Calc, double q1, double q1Calc, double p2, double p2Calc, double q2, double q2Calc,\n                                  double r, double x, double g1, double g2, double b1, double b2, double rho1, double rho2, double alpha1, double alpha2,\n                                  double u1, double u2, double theta1, double theta2, double z, double y, double ksi, int phaseAngleClock, boolean connected1, boolean connected2,\n                                  boolean mainComponent1, boolean mainComponent2, boolean validated, FlowData flowData, boolean found, boolean writeValues)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String generatorId, double p, double q, double v, double targetP, double targetQ, double targetV, double expectedP, boolean connected,\n                      boolean voltageRegulatorOn, double minP, double maxP, double minQ, double maxQ, boolean mainComponent, boolean validated)", "modifiers": "@Override public", "return": "void", "signature": "void write(String generatorId, double p, double q, double v, double targetP, double targetQ, double targetV, double expectedP, boolean connected,\n                      boolean voltageRegulatorOn, double minP, double maxP, double minQ, double maxQ, boolean mainComponent, boolean validated)", "full_signature": "@Override public void write(String generatorId, double p, double q, double v, double targetP, double targetQ, double targetV, double expectedP, boolean connected,\n                      boolean voltageRegulatorOn, double minP, double maxP, double minQ, double maxQ, boolean mainComponent, boolean validated)", "class_method_signature": "AbstractValidationFormatterWriter.write(String generatorId, double p, double q, double v, double targetP, double targetQ, double targetV, double expectedP, boolean connected,\n                      boolean voltageRegulatorOn, double minP, double maxP, double minQ, double maxQ, boolean mainComponent, boolean validated)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String generatorId, double p, double q, double v, double targetP, double targetQ, double targetV, double expectedP,\n                                  boolean connected, boolean voltageRegulatorOn, double minP, double maxP, double minQ, double maxQ, boolean mainComponent,\n                                  boolean validated, GeneratorData generatorData, boolean found, boolean writeValues)", "modifiers": "protected abstract", "return": "void", "signature": "void write(String generatorId, double p, double q, double v, double targetP, double targetQ, double targetV, double expectedP,\n                                  boolean connected, boolean voltageRegulatorOn, double minP, double maxP, double minQ, double maxQ, boolean mainComponent,\n                                  boolean validated, GeneratorData generatorData, boolean found, boolean writeValues)", "full_signature": "protected abstract void write(String generatorId, double p, double q, double v, double targetP, double targetQ, double targetV, double expectedP,\n                                  boolean connected, boolean voltageRegulatorOn, double minP, double maxP, double minQ, double maxQ, boolean mainComponent,\n                                  boolean validated, GeneratorData generatorData, boolean found, boolean writeValues)", "class_method_signature": "AbstractValidationFormatterWriter.write(String generatorId, double p, double q, double v, double targetP, double targetQ, double targetV, double expectedP,\n                                  boolean connected, boolean voltageRegulatorOn, double minP, double maxP, double minQ, double maxQ, boolean mainComponent,\n                                  boolean validated, GeneratorData generatorData, boolean found, boolean writeValues)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String busId, double incomingP, double incomingQ, double loadP, double loadQ, double genP, double genQ, double batP, double batQ,\n                      double shuntP, double shuntQ, double svcP, double svcQ, double vscCSP, double vscCSQ, double lineP, double lineQ,\n                      double danglingLineP, double danglingLineQ, double twtP, double twtQ, double tltP, double tltQ, boolean mainComponent,\n                      boolean validated)", "modifiers": "@Override public", "return": "void", "signature": "void write(String busId, double incomingP, double incomingQ, double loadP, double loadQ, double genP, double genQ, double batP, double batQ,\n                      double shuntP, double shuntQ, double svcP, double svcQ, double vscCSP, double vscCSQ, double lineP, double lineQ,\n                      double danglingLineP, double danglingLineQ, double twtP, double twtQ, double tltP, double tltQ, boolean mainComponent,\n                      boolean validated)", "full_signature": "@Override public void write(String busId, double incomingP, double incomingQ, double loadP, double loadQ, double genP, double genQ, double batP, double batQ,\n                      double shuntP, double shuntQ, double svcP, double svcQ, double vscCSP, double vscCSQ, double lineP, double lineQ,\n                      double danglingLineP, double danglingLineQ, double twtP, double twtQ, double tltP, double tltQ, boolean mainComponent,\n                      boolean validated)", "class_method_signature": "AbstractValidationFormatterWriter.write(String busId, double incomingP, double incomingQ, double loadP, double loadQ, double genP, double genQ, double batP, double batQ,\n                      double shuntP, double shuntQ, double svcP, double svcQ, double vscCSP, double vscCSQ, double lineP, double lineQ,\n                      double danglingLineP, double danglingLineQ, double twtP, double twtQ, double tltP, double tltQ, boolean mainComponent,\n                      boolean validated)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String busId, double incomingP, double incomingQ, double loadP, double loadQ, double genP, double genQ, double batP, double batQ,\n                                  double shuntP, double shuntQ, double svcP, double svcQ, double vscCSP, double vscCSQ, double lineP, double lineQ,\n                                  double danglingLineP, double danglingLineQ, double twtP, double twtQ, double tltP, double tltQ, boolean mainComponent,\n                                  boolean validated, BusData busData, boolean found, boolean writeValues)", "modifiers": "protected abstract", "return": "void", "signature": "void write(String busId, double incomingP, double incomingQ, double loadP, double loadQ, double genP, double genQ, double batP, double batQ,\n                                  double shuntP, double shuntQ, double svcP, double svcQ, double vscCSP, double vscCSQ, double lineP, double lineQ,\n                                  double danglingLineP, double danglingLineQ, double twtP, double twtQ, double tltP, double tltQ, boolean mainComponent,\n                                  boolean validated, BusData busData, boolean found, boolean writeValues)", "full_signature": "protected abstract void write(String busId, double incomingP, double incomingQ, double loadP, double loadQ, double genP, double genQ, double batP, double batQ,\n                                  double shuntP, double shuntQ, double svcP, double svcQ, double vscCSP, double vscCSQ, double lineP, double lineQ,\n                                  double danglingLineP, double danglingLineQ, double twtP, double twtQ, double tltP, double tltQ, boolean mainComponent,\n                                  boolean validated, BusData busData, boolean found, boolean writeValues)", "class_method_signature": "AbstractValidationFormatterWriter.write(String busId, double incomingP, double incomingQ, double loadP, double loadQ, double genP, double genQ, double batP, double batQ,\n                                  double shuntP, double shuntQ, double svcP, double svcQ, double vscCSP, double vscCSQ, double lineP, double lineQ,\n                                  double danglingLineP, double danglingLineQ, double twtP, double twtQ, double tltP, double tltQ, boolean mainComponent,\n                                  boolean validated, BusData busData, boolean found, boolean writeValues)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String svcId, double p, double q, double vControlled, double vController, double nominalVcontroller, double reactivePowerSetpoint, double voltageSetpoint,\n                      boolean connected, RegulationMode regulationMode, double bMin, double bMax, boolean mainComponent, boolean validated)", "modifiers": "@Override public", "return": "void", "signature": "void write(String svcId, double p, double q, double vControlled, double vController, double nominalVcontroller, double reactivePowerSetpoint, double voltageSetpoint,\n                      boolean connected, RegulationMode regulationMode, double bMin, double bMax, boolean mainComponent, boolean validated)", "full_signature": "@Override public void write(String svcId, double p, double q, double vControlled, double vController, double nominalVcontroller, double reactivePowerSetpoint, double voltageSetpoint,\n                      boolean connected, RegulationMode regulationMode, double bMin, double bMax, boolean mainComponent, boolean validated)", "class_method_signature": "AbstractValidationFormatterWriter.write(String svcId, double p, double q, double vControlled, double vController, double nominalVcontroller, double reactivePowerSetpoint, double voltageSetpoint,\n                      boolean connected, RegulationMode regulationMode, double bMin, double bMax, boolean mainComponent, boolean validated)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String svcId, double p, double q, double vControlled, double vController, double nominalVcontroller, double reactivePowerSetpoint, double voltageSetpoint,\n                                  boolean connected, RegulationMode regulationMode, double bMin, double bMax, boolean mainComponent, boolean validated,\n                                  SvcData svcData, boolean found, boolean writeValues)", "modifiers": "protected abstract", "return": "void", "signature": "void write(String svcId, double p, double q, double vControlled, double vController, double nominalVcontroller, double reactivePowerSetpoint, double voltageSetpoint,\n                                  boolean connected, RegulationMode regulationMode, double bMin, double bMax, boolean mainComponent, boolean validated,\n                                  SvcData svcData, boolean found, boolean writeValues)", "full_signature": "protected abstract void write(String svcId, double p, double q, double vControlled, double vController, double nominalVcontroller, double reactivePowerSetpoint, double voltageSetpoint,\n                                  boolean connected, RegulationMode regulationMode, double bMin, double bMax, boolean mainComponent, boolean validated,\n                                  SvcData svcData, boolean found, boolean writeValues)", "class_method_signature": "AbstractValidationFormatterWriter.write(String svcId, double p, double q, double vControlled, double vController, double nominalVcontroller, double reactivePowerSetpoint, double voltageSetpoint,\n                                  boolean connected, RegulationMode regulationMode, double bMin, double bMax, boolean mainComponent, boolean validated,\n                                  SvcData svcData, boolean found, boolean writeValues)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String shuntId, double q, double expectedQ, double p, int currentSectionCount, int maximumSectionCount,\n                      double bPerSection, double v, boolean connected, double qMax, double nominalV, boolean mainComponent, boolean validated)", "modifiers": "@Override public", "return": "void", "signature": "void write(String shuntId, double q, double expectedQ, double p, int currentSectionCount, int maximumSectionCount,\n                      double bPerSection, double v, boolean connected, double qMax, double nominalV, boolean mainComponent, boolean validated)", "full_signature": "@Override public void write(String shuntId, double q, double expectedQ, double p, int currentSectionCount, int maximumSectionCount,\n                      double bPerSection, double v, boolean connected, double qMax, double nominalV, boolean mainComponent, boolean validated)", "class_method_signature": "AbstractValidationFormatterWriter.write(String shuntId, double q, double expectedQ, double p, int currentSectionCount, int maximumSectionCount,\n                      double bPerSection, double v, boolean connected, double qMax, double nominalV, boolean mainComponent, boolean validated)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String shuntId, double q, double expectedQ, double p, int currentSectionCount, int maximumSectionCount,\n                                  double bPerSection, double v, boolean connected, double qMax, double nominalV, boolean mainComponent,\n                                  boolean validated, ShuntData shuntData, boolean found, boolean writeValues)", "modifiers": "protected abstract", "return": "void", "signature": "void write(String shuntId, double q, double expectedQ, double p, int currentSectionCount, int maximumSectionCount,\n                                  double bPerSection, double v, boolean connected, double qMax, double nominalV, boolean mainComponent,\n                                  boolean validated, ShuntData shuntData, boolean found, boolean writeValues)", "full_signature": "protected abstract void write(String shuntId, double q, double expectedQ, double p, int currentSectionCount, int maximumSectionCount,\n                                  double bPerSection, double v, boolean connected, double qMax, double nominalV, boolean mainComponent,\n                                  boolean validated, ShuntData shuntData, boolean found, boolean writeValues)", "class_method_signature": "AbstractValidationFormatterWriter.write(String shuntId, double q, double expectedQ, double p, int currentSectionCount, int maximumSectionCount,\n                                  double bPerSection, double v, boolean connected, double qMax, double nominalV, boolean mainComponent,\n                                  boolean validated, ShuntData shuntData, boolean found, boolean writeValues)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String twtId, double error, double upIncrement, double downIncrement, double rho, double rhoPreviousStep, double rhoNextStep,\n                      int tapPosition, int lowTapPosition, int highTapPosition, double targetV, Side regulatedSide, double v, boolean connected,\n                      boolean mainComponent, boolean validated)", "modifiers": "@Override public", "return": "void", "signature": "void write(String twtId, double error, double upIncrement, double downIncrement, double rho, double rhoPreviousStep, double rhoNextStep,\n                      int tapPosition, int lowTapPosition, int highTapPosition, double targetV, Side regulatedSide, double v, boolean connected,\n                      boolean mainComponent, boolean validated)", "full_signature": "@Override public void write(String twtId, double error, double upIncrement, double downIncrement, double rho, double rhoPreviousStep, double rhoNextStep,\n                      int tapPosition, int lowTapPosition, int highTapPosition, double targetV, Side regulatedSide, double v, boolean connected,\n                      boolean mainComponent, boolean validated)", "class_method_signature": "AbstractValidationFormatterWriter.write(String twtId, double error, double upIncrement, double downIncrement, double rho, double rhoPreviousStep, double rhoNextStep,\n                      int tapPosition, int lowTapPosition, int highTapPosition, double targetV, Side regulatedSide, double v, boolean connected,\n                      boolean mainComponent, boolean validated)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String twtId, double error, double upIncrement, double downIncrement, double rho, double rhoPreviousStep, double rhoNextStep,\n                                  int tapPosition, int lowTapPosition, int highTapPosition, double targetV, Side regulatedSide, double v, boolean connected,\n                                  boolean mainComponent, boolean validated, TransformerData twtData, boolean found, boolean writeValues)", "modifiers": "protected abstract", "return": "void", "signature": "void write(String twtId, double error, double upIncrement, double downIncrement, double rho, double rhoPreviousStep, double rhoNextStep,\n                                  int tapPosition, int lowTapPosition, int highTapPosition, double targetV, Side regulatedSide, double v, boolean connected,\n                                  boolean mainComponent, boolean validated, TransformerData twtData, boolean found, boolean writeValues)", "full_signature": "protected abstract void write(String twtId, double error, double upIncrement, double downIncrement, double rho, double rhoPreviousStep, double rhoNextStep,\n                                  int tapPosition, int lowTapPosition, int highTapPosition, double targetV, Side regulatedSide, double v, boolean connected,\n                                  boolean mainComponent, boolean validated, TransformerData twtData, boolean found, boolean writeValues)", "class_method_signature": "AbstractValidationFormatterWriter.write(String twtId, double error, double upIncrement, double downIncrement, double rho, double rhoPreviousStep, double rhoNextStep,\n                                  int tapPosition, int lowTapPosition, int highTapPosition, double targetV, Side regulatedSide, double v, boolean connected,\n                                  boolean mainComponent, boolean validated, TransformerData twtData, boolean found, boolean writeValues)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String twtId, TwtData twtData, boolean validated)", "modifiers": "@Override public", "return": "void", "signature": "void write(String twtId, TwtData twtData, boolean validated)", "full_signature": "@Override public void write(String twtId, TwtData twtData, boolean validated)", "class_method_signature": "AbstractValidationFormatterWriter.write(String twtId, TwtData twtData, boolean validated)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String twtId, Transformer3WData transformer3wData1, Transformer3WData transformer3wData2, boolean found, boolean writeValues)", "modifiers": "protected abstract", "return": "void", "signature": "void write(String twtId, Transformer3WData transformer3wData1, Transformer3WData transformer3wData2, boolean found, boolean writeValues)", "full_signature": "protected abstract void write(String twtId, Transformer3WData transformer3wData1, Transformer3WData transformer3wData2, boolean found, boolean writeValues)", "class_method_signature": "AbstractValidationFormatterWriter.write(String twtId, Transformer3WData transformer3wData1, Transformer3WData transformer3wData2, boolean found, boolean writeValues)", "testcase": false, "constructor": false}, {"identifier": "setValidationCompleted", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void setValidationCompleted()", "full_signature": "@Override public void setValidationCompleted()", "class_method_signature": "AbstractValidationFormatterWriter.setValidationCompleted()", "testcase": false, "constructor": false}, {"identifier": "writeFlowsData", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeFlowsData()", "full_signature": "private void writeFlowsData()", "class_method_signature": "AbstractValidationFormatterWriter.writeFlowsData()", "testcase": false, "constructor": false}, {"identifier": "writeGeneratorsData", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeGeneratorsData()", "full_signature": "private void writeGeneratorsData()", "class_method_signature": "AbstractValidationFormatterWriter.writeGeneratorsData()", "testcase": false, "constructor": false}, {"identifier": "writeBusesData", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeBusesData()", "full_signature": "private void writeBusesData()", "class_method_signature": "AbstractValidationFormatterWriter.writeBusesData()", "testcase": false, "constructor": false}, {"identifier": "writeSvcsData", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeSvcsData()", "full_signature": "private void writeSvcsData()", "class_method_signature": "AbstractValidationFormatterWriter.writeSvcsData()", "testcase": false, "constructor": false}, {"identifier": "writeShuntsData", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeShuntsData()", "full_signature": "private void writeShuntsData()", "class_method_signature": "AbstractValidationFormatterWriter.writeShuntsData()", "testcase": false, "constructor": false}, {"identifier": "writeTwtsData", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeTwtsData()", "full_signature": "private void writeTwtsData()", "class_method_signature": "AbstractValidationFormatterWriter.writeTwtsData()", "testcase": false, "constructor": false}, {"identifier": "writeTwts3wData", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeTwts3wData()", "full_signature": "private void writeTwts3wData()", "class_method_signature": "AbstractValidationFormatterWriter.writeTwts3wData()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "AbstractValidationFormatterWriter.close()", "testcase": false, "constructor": false}], "file": "loadflow/loadflow-validation/src/main/java/com/powsybl/loadflow/validation/io/AbstractValidationFormatterWriter.java"}, "focal_method": {"identifier": "write", "parameters": "(String branchId, double p1, double p1Calc, double q1, double q1Calc, double p2, double p2Calc, double q2, double q2Calc,\n                      double r, double x, double g1, double g2, double b1, double b2, double rho1, double rho2, double alpha1, double alpha2,\n                      double u1, double u2, double theta1, double theta2, double z, double y, double ksi, int phaseAngleClock, boolean connected1, boolean connected2,\n                      boolean mainComponent1, boolean mainComponent2, boolean validated)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void write(String branchId, double p1, double p1Calc, double q1, double q1Calc, double p2, double p2Calc, double q2, double q2Calc,\n                      double r, double x, double g1, double g2, double b1, double b2, double rho1, double rho2, double alpha1, double alpha2,\n                      double u1, double u2, double theta1, double theta2, double z, double y, double ksi, int phaseAngleClock, boolean connected1, boolean connected2,\n                      boolean mainComponent1, boolean mainComponent2, boolean validated) throws IOException {\n        Objects.requireNonNull(branchId);\n        FlowData emptyFlowData = new FlowData(branchId, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN,\n                                              Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN,\n                                              Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, 0, false, false, false, false, false);\n        if (compareResults) {\n            if (preLoadflowValidationCompleted) {\n                boolean found = flowsData.containsKey(branchId);\n                FlowData flowData = found ? flowsData.get(branchId) : emptyFlowData;\n                write(branchId, p1, p1Calc, q1, q1Calc, p2, p2Calc, q2, q2Calc, r, x, g1, g2, b1, b2, rho1, rho2, alpha1, alpha2, u1, u2,\n                      theta1, theta2, z, y, ksi, phaseAngleClock, connected1, connected2, mainComponent1, mainComponent2, validated, flowData, found, true);\n                flowsData.remove(branchId);\n            } else {\n                flowsData.put(branchId, new FlowData(branchId, p1, p1Calc, q1, q1Calc, p2, p2Calc, q2, q2Calc, r, x, g1, g2, b1, b2, rho1, rho2, alpha1, alpha2,\n                                                     u1, u2, theta1, theta2, z, y, ksi, phaseAngleClock, connected1, connected2, mainComponent1, mainComponent2, validated));\n            }\n        } else {\n            write(branchId, p1, p1Calc, q1, q1Calc, p2, p2Calc, q2, q2Calc, r, x, g1, g2, b1, b2, rho1, rho2, alpha1, alpha2, u1, u2,\n                  theta1, theta2, z, y, ksi, phaseAngleClock, connected1, connected2, mainComponent1, mainComponent2, validated, emptyFlowData, false, true);\n        }\n    }", "signature": "void write(String branchId, double p1, double p1Calc, double q1, double q1Calc, double p2, double p2Calc, double q2, double q2Calc,\n                      double r, double x, double g1, double g2, double b1, double b2, double rho1, double rho2, double alpha1, double alpha2,\n                      double u1, double u2, double theta1, double theta2, double z, double y, double ksi, int phaseAngleClock, boolean connected1, boolean connected2,\n                      boolean mainComponent1, boolean mainComponent2, boolean validated)", "full_signature": "@Override public void write(String branchId, double p1, double p1Calc, double q1, double q1Calc, double p2, double p2Calc, double q2, double q2Calc,\n                      double r, double x, double g1, double g2, double b1, double b2, double rho1, double rho2, double alpha1, double alpha2,\n                      double u1, double u2, double theta1, double theta2, double z, double y, double ksi, int phaseAngleClock, boolean connected1, boolean connected2,\n                      boolean mainComponent1, boolean mainComponent2, boolean validated)", "class_method_signature": "AbstractValidationFormatterWriter.write(String branchId, double p1, double p1Calc, double q1, double q1Calc, double p2, double p2Calc, double q2, double q2Calc,\n                      double r, double x, double g1, double g2, double b1, double b2, double rho1, double rho2, double alpha1, double alpha2,\n                      double u1, double u2, double theta1, double theta2, double z, double y, double ksi, int phaseAngleClock, boolean connected1, boolean connected2,\n                      boolean mainComponent1, boolean mainComponent2, boolean validated)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "containsKey", "get", "write", "remove", "put", "write"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}