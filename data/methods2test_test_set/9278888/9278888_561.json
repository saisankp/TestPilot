{"test_class": {"identifier": "MatchersTest", "superclass": "", "interfaces": "", "fields": [], "file": "brave/src/test/java/brave/sampler/MatchersTest.java"}, "test_case": {"identifier": "toArray_list", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void toArray_list() {\n    Matcher<Void> one = b -> true;\n    Matcher<Void> two = b -> false;\n    Matcher<Void> three = b -> true;\n    assertThat(Matchers.toArray(asList(one, two, three)))\n      .containsExactly(one, two, three);\n  }", "signature": "void toArray_list()", "full_signature": "@Test public void toArray_list()", "class_method_signature": "MatchersTest.toArray_list()", "testcase": true, "constructor": false, "invocations": ["containsExactly", "assertThat", "toArray", "asList"]}, "focal_class": {"identifier": "Matchers", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "alwaysMatch", "parameters": "()", "modifiers": "public static", "return": "Matcher<P>", "signature": "Matcher<P> alwaysMatch()", "full_signature": "public static Matcher<P> alwaysMatch()", "class_method_signature": "Matchers.alwaysMatch()", "testcase": false, "constructor": false}, {"identifier": "neverMatch", "parameters": "()", "modifiers": "public static", "return": "Matcher<P>", "signature": "Matcher<P> neverMatch()", "full_signature": "public static Matcher<P> neverMatch()", "class_method_signature": "Matchers.neverMatch()", "testcase": false, "constructor": false}, {"identifier": "and", "parameters": "(Iterable<? extends Matcher<P>> matchers)", "modifiers": "public static", "return": "Matcher<P>", "signature": "Matcher<P> and(Iterable<? extends Matcher<P>> matchers)", "full_signature": "public static Matcher<P> and(Iterable<? extends Matcher<P>> matchers)", "class_method_signature": "Matchers.and(Iterable<? extends Matcher<P>> matchers)", "testcase": false, "constructor": false}, {"identifier": "and", "parameters": "(Matcher<P>... matchers)", "modifiers": "public static", "return": "Matcher<P>", "signature": "Matcher<P> and(Matcher<P>... matchers)", "full_signature": "public static Matcher<P> and(Matcher<P>... matchers)", "class_method_signature": "Matchers.and(Matcher<P>... matchers)", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(Iterable<? extends Matcher<P>> matchers)", "modifiers": "public static", "return": "Matcher<P>", "signature": "Matcher<P> or(Iterable<? extends Matcher<P>> matchers)", "full_signature": "public static Matcher<P> or(Iterable<? extends Matcher<P>> matchers)", "class_method_signature": "Matchers.or(Iterable<? extends Matcher<P>> matchers)", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(Matcher<P>... matchers)", "modifiers": "public static", "return": "Matcher<P>", "signature": "Matcher<P> or(Matcher<P>... matchers)", "full_signature": "public static Matcher<P> or(Matcher<P>... matchers)", "class_method_signature": "Matchers.or(Matcher<P>... matchers)", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "(Iterable<? extends Matcher<P>> matchers)", "modifiers": "static", "return": "Matcher[]", "signature": "Matcher[] toArray(Iterable<? extends Matcher<P>> matchers)", "full_signature": "static Matcher[] toArray(Iterable<? extends Matcher<P>> matchers)", "class_method_signature": "Matchers.toArray(Iterable<? extends Matcher<P>> matchers)", "testcase": false, "constructor": false}, {"identifier": "composite", "parameters": "(Matcher<P>[] matchers, boolean and)", "modifiers": "static", "return": "Matcher<P>", "signature": "Matcher<P> composite(Matcher<P>[] matchers, boolean and)", "full_signature": "static Matcher<P> composite(Matcher<P>[] matchers, boolean and)", "class_method_signature": "Matchers.composite(Matcher<P>[] matchers, boolean and)", "testcase": false, "constructor": false}], "file": "brave/src/main/java/brave/sampler/Matchers.java"}, "focal_method": {"identifier": "toArray", "parameters": "(Iterable<? extends Matcher<P>> matchers)", "modifiers": "static", "return": "Matcher[]", "body": "static <P> Matcher[] toArray(Iterable<? extends Matcher<P>> matchers) {\n    if (matchers == null) throw new NullPointerException(\"matchers == null\");\n    if (matchers instanceof Collection) {\n      return (Matcher[]) ((Collection) matchers).toArray(new Matcher[0]);\n    }\n    List<Matcher<P>> result = new ArrayList<>();\n    for (Matcher<P> matcher : matchers) result.add(matcher);\n    return result.toArray(new Matcher[0]);\n  }", "signature": "Matcher[] toArray(Iterable<? extends Matcher<P>> matchers)", "full_signature": "static Matcher[] toArray(Iterable<? extends Matcher<P>> matchers)", "class_method_signature": "Matchers.toArray(Iterable<? extends Matcher<P>> matchers)", "testcase": false, "constructor": false, "invocations": ["toArray", "add", "toArray"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}