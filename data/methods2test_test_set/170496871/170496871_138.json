{"test_class": {"identifier": "UniformRandomProducerTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/ml/src/test/java/org/apache/ignite/ml/util/generators/primitives/scalar/UniformRandomProducerTest.java"}, "test_case": {"identifier": "testSeedConsidering", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSeedConsidering() {\n        UniformRandomProducer producer1 = new UniformRandomProducer(0, 1, 0L);\n        UniformRandomProducer producer2 = new UniformRandomProducer(0, 1, 0L);\n\n        assertEquals(producer1.get(), producer2.get(), 0.0001);\n    }", "signature": "void testSeedConsidering()", "full_signature": "@Test public void testSeedConsidering()", "class_method_signature": "UniformRandomProducerTest.testSeedConsidering()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "get", "get"]}, "focal_class": {"identifier": "UniformRandomProducer", "superclass": "extends RandomProducerWithGenerator", "interfaces": "", "fields": [{"original_string": "private final double from;", "modifier": "private final", "type": "double", "declarator": "from", "var_name": "from"}, {"original_string": "private final double to;", "modifier": "private final", "type": "double", "declarator": "to", "var_name": "to"}], "methods": [{"identifier": "UniformRandomProducer", "parameters": "(double from, double to)", "modifiers": "public", "return": "", "signature": " UniformRandomProducer(double from, double to)", "full_signature": "public  UniformRandomProducer(double from, double to)", "class_method_signature": "UniformRandomProducer.UniformRandomProducer(double from, double to)", "testcase": false, "constructor": true}, {"identifier": "UniformRandomProducer", "parameters": "(double from, double to, long seed)", "modifiers": "public", "return": "", "signature": " UniformRandomProducer(double from, double to, long seed)", "full_signature": "public  UniformRandomProducer(double from, double to, long seed)", "class_method_signature": "UniformRandomProducer.UniformRandomProducer(double from, double to, long seed)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "()", "modifiers": "@Override public", "return": "Double", "signature": "Double get()", "full_signature": "@Override public Double get()", "class_method_signature": "UniformRandomProducer.get()", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/util/generators/primitives/scalar/UniformRandomProducer.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "@Override public", "return": "Double", "body": "@Override public Double get() {\n        double result = generator().nextDouble() * (to - from) + from;\n        if (result > to)\n            result = to;\n\n        return result;\n    }", "signature": "Double get()", "full_signature": "@Override public Double get()", "class_method_signature": "UniformRandomProducer.get()", "testcase": false, "constructor": false, "invocations": ["nextDouble", "generator"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}