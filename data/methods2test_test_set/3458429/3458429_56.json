{"test_class": {"identifier": "HpackContextTest", "superclass": "", "interfaces": "", "fields": [], "file": "firefly-net/src/test/java/com/fireflysource/net/http/common/v2/hpack/HpackContextTest.java"}, "test_case": {"identifier": "testStaticHuffmanValues", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testStaticHuffmanValues() throws Exception {\n        HpackContext ctx = new HpackContext(4096);\n        for (int i = 2; i <= 14; i++) {\n            Entry entry = ctx.get(i);\n            assertTrue(entry.isStatic());\n\n            ByteBuffer buffer = ByteBuffer.wrap(entry.getStaticHuffmanValue());\n            int huff = 0xff & buffer.get();\n            assertEquals(0x80, (0x80 & huff));\n\n            int len = NBitInteger.decode(buffer, 7);\n\n            assertEquals(len, buffer.remaining());\n            String value = Huffman.decode(buffer);\n\n            assertEquals(entry.getHttpField().getValue(), value);\n\n        }\n    }", "signature": "void testStaticHuffmanValues()", "full_signature": "@Test void testStaticHuffmanValues()", "class_method_signature": "HpackContextTest.testStaticHuffmanValues()", "testcase": true, "constructor": false, "invocations": ["get", "assertTrue", "isStatic", "wrap", "getStaticHuffmanValue", "get", "assertEquals", "decode", "assertEquals", "remaining", "decode", "assertEquals", "getValue", "getHttpField"]}, "focal_class": {"identifier": "HpackContext", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final LazyLogger LOG = SystemLogger.create(HpackContext.class);", "modifier": "private static final", "type": "LazyLogger", "declarator": "LOG = SystemLogger.create(HpackContext.class)", "var_name": "LOG"}, {"original_string": "private static final String EMPTY = \"\";", "modifier": "private static final", "type": "String", "declarator": "EMPTY = \"\"", "var_name": "EMPTY"}, {"original_string": "public static final String[][] STATIC_TABLE = {\n            {null, null},\n            /* 1  */ {\":authority\", EMPTY},\n            /* 2  */ {\":method\", \"GET\"},\n            /* 3  */ {\":method\", \"POST\"},\n            /* 4  */ {\":path\", \"/\"},\n            /* 5  */ {\":path\", \"/index.html\"},\n            /* 6  */ {\":scheme\", \"http\"},\n            /* 7  */ {\":scheme\", \"https\"},\n            /* 8  */ {\":status\", \"200\"},\n            /* 9  */ {\":status\", \"204\"},\n            /* 10 */ {\":status\", \"206\"},\n            /* 11 */ {\":status\", \"304\"},\n            /* 12 */ {\":status\", \"400\"},\n            /* 13 */ {\":status\", \"404\"},\n            /* 14 */ {\":status\", \"500\"},\n            /* 15 */ {\"accept-charset\", EMPTY},\n            /* 16 */ {\"accept-encoding\", \"gzip, deflate\"},\n            /* 17 */ {\"accept-language\", EMPTY},\n            /* 18 */ {\"accept-ranges\", EMPTY},\n            /* 19 */ {\"accept\", EMPTY},\n            /* 20 */ {\"access-control-allow-origin\", EMPTY},\n            /* 21 */ {\"age\", EMPTY},\n            /* 22 */ {\"allow\", EMPTY},\n            /* 23 */ {\"authorization\", EMPTY},\n            /* 24 */ {\"cache-control\", EMPTY},\n            /* 25 */ {\"content-disposition\", EMPTY},\n            /* 26 */ {\"content-encoding\", EMPTY},\n            /* 27 */ {\"content-language\", EMPTY},\n            /* 28 */ {\"content-length\", EMPTY},\n            /* 29 */ {\"content-location\", EMPTY},\n            /* 30 */ {\"content-range\", EMPTY},\n            /* 31 */ {\"content-type\", EMPTY},\n            /* 32 */ {\"cookie\", EMPTY},\n            /* 33 */ {\"date\", EMPTY},\n            /* 34 */ {\"etag\", EMPTY},\n            /* 35 */ {\"expect\", EMPTY},\n            /* 36 */ {\"expires\", EMPTY},\n            /* 37 */ {\"from\", EMPTY},\n            /* 38 */ {\"host\", EMPTY},\n            /* 39 */ {\"if-match\", EMPTY},\n            /* 40 */ {\"if-modified-since\", EMPTY},\n            /* 41 */ {\"if-none-match\", EMPTY},\n            /* 42 */ {\"if-range\", EMPTY},\n            /* 43 */ {\"if-unmodified-since\", EMPTY},\n            /* 44 */ {\"last-modified\", EMPTY},\n            /* 45 */ {\"link\", EMPTY},\n            /* 46 */ {\"location\", EMPTY},\n            /* 47 */ {\"max-forwards\", EMPTY},\n            /* 48 */ {\"proxy-authenticate\", EMPTY},\n            /* 49 */ {\"proxy-authorization\", EMPTY},\n            /* 50 */ {\"range\", EMPTY},\n            /* 51 */ {\"referer\", EMPTY},\n            /* 52 */ {\"refresh\", EMPTY},\n            /* 53 */ {\"retry-after\", EMPTY},\n            /* 54 */ {\"server\", EMPTY},\n            /* 55 */ {\"set-cookie\", EMPTY},\n            /* 56 */ {\"strict-transport-security\", EMPTY},\n            /* 57 */ {\"transfer-encoding\", EMPTY},\n            /* 58 */ {\"user-agent\", EMPTY},\n            /* 59 */ {\"vary\", EMPTY},\n            /* 60 */ {\"via\", EMPTY},\n            /* 61 */ {\"www-authenticate\", EMPTY}\n    };", "modifier": "public static final", "type": "String[][]", "declarator": "STATIC_TABLE = {\n            {null, null},\n            /* 1  */ {\":authority\", EMPTY},\n            /* 2  */ {\":method\", \"GET\"},\n            /* 3  */ {\":method\", \"POST\"},\n            /* 4  */ {\":path\", \"/\"},\n            /* 5  */ {\":path\", \"/index.html\"},\n            /* 6  */ {\":scheme\", \"http\"},\n            /* 7  */ {\":scheme\", \"https\"},\n            /* 8  */ {\":status\", \"200\"},\n            /* 9  */ {\":status\", \"204\"},\n            /* 10 */ {\":status\", \"206\"},\n            /* 11 */ {\":status\", \"304\"},\n            /* 12 */ {\":status\", \"400\"},\n            /* 13 */ {\":status\", \"404\"},\n            /* 14 */ {\":status\", \"500\"},\n            /* 15 */ {\"accept-charset\", EMPTY},\n            /* 16 */ {\"accept-encoding\", \"gzip, deflate\"},\n            /* 17 */ {\"accept-language\", EMPTY},\n            /* 18 */ {\"accept-ranges\", EMPTY},\n            /* 19 */ {\"accept\", EMPTY},\n            /* 20 */ {\"access-control-allow-origin\", EMPTY},\n            /* 21 */ {\"age\", EMPTY},\n            /* 22 */ {\"allow\", EMPTY},\n            /* 23 */ {\"authorization\", EMPTY},\n            /* 24 */ {\"cache-control\", EMPTY},\n            /* 25 */ {\"content-disposition\", EMPTY},\n            /* 26 */ {\"content-encoding\", EMPTY},\n            /* 27 */ {\"content-language\", EMPTY},\n            /* 28 */ {\"content-length\", EMPTY},\n            /* 29 */ {\"content-location\", EMPTY},\n            /* 30 */ {\"content-range\", EMPTY},\n            /* 31 */ {\"content-type\", EMPTY},\n            /* 32 */ {\"cookie\", EMPTY},\n            /* 33 */ {\"date\", EMPTY},\n            /* 34 */ {\"etag\", EMPTY},\n            /* 35 */ {\"expect\", EMPTY},\n            /* 36 */ {\"expires\", EMPTY},\n            /* 37 */ {\"from\", EMPTY},\n            /* 38 */ {\"host\", EMPTY},\n            /* 39 */ {\"if-match\", EMPTY},\n            /* 40 */ {\"if-modified-since\", EMPTY},\n            /* 41 */ {\"if-none-match\", EMPTY},\n            /* 42 */ {\"if-range\", EMPTY},\n            /* 43 */ {\"if-unmodified-since\", EMPTY},\n            /* 44 */ {\"last-modified\", EMPTY},\n            /* 45 */ {\"link\", EMPTY},\n            /* 46 */ {\"location\", EMPTY},\n            /* 47 */ {\"max-forwards\", EMPTY},\n            /* 48 */ {\"proxy-authenticate\", EMPTY},\n            /* 49 */ {\"proxy-authorization\", EMPTY},\n            /* 50 */ {\"range\", EMPTY},\n            /* 51 */ {\"referer\", EMPTY},\n            /* 52 */ {\"refresh\", EMPTY},\n            /* 53 */ {\"retry-after\", EMPTY},\n            /* 54 */ {\"server\", EMPTY},\n            /* 55 */ {\"set-cookie\", EMPTY},\n            /* 56 */ {\"strict-transport-security\", EMPTY},\n            /* 57 */ {\"transfer-encoding\", EMPTY},\n            /* 58 */ {\"user-agent\", EMPTY},\n            /* 59 */ {\"vary\", EMPTY},\n            /* 60 */ {\"via\", EMPTY},\n            /* 61 */ {\"www-authenticate\", EMPTY}\n    }", "var_name": "STATIC_TABLE"}, {"original_string": "private static final Map<HttpField, Entry> STATIC_FIELD_MAP = new HashMap<>();", "modifier": "private static final", "type": "Map<HttpField, Entry>", "declarator": "STATIC_FIELD_MAP = new HashMap<>()", "var_name": "STATIC_FIELD_MAP"}, {"original_string": "private static final Trie<StaticEntry> STATIC_NAME_MAP = new ArrayTernaryTrie<>(true, 512);", "modifier": "private static final", "type": "Trie<StaticEntry>", "declarator": "STATIC_NAME_MAP = new ArrayTernaryTrie<>(true, 512)", "var_name": "STATIC_NAME_MAP"}, {"original_string": "private static final StaticEntry[] STATIC_TABLE_BY_HEADER = new StaticEntry[HttpHeader.UNKNOWN.ordinal()];", "modifier": "private static final", "type": "StaticEntry[]", "declarator": "STATIC_TABLE_BY_HEADER = new StaticEntry[HttpHeader.UNKNOWN.ordinal()]", "var_name": "STATIC_TABLE_BY_HEADER"}, {"original_string": "private static final StaticEntry[] STATIC_TABLE_ENTRIES = new StaticEntry[STATIC_TABLE.length];", "modifier": "private static final", "type": "StaticEntry[]", "declarator": "STATIC_TABLE_ENTRIES = new StaticEntry[STATIC_TABLE.length]", "var_name": "STATIC_TABLE_ENTRIES"}, {"original_string": "public static final int STATIC_SIZE = STATIC_TABLE.length - 1;", "modifier": "public static final", "type": "int", "declarator": "STATIC_SIZE = STATIC_TABLE.length - 1", "var_name": "STATIC_SIZE"}, {"original_string": "private int maxDynamicTableSizeInBytes;", "modifier": "private", "type": "int", "declarator": "maxDynamicTableSizeInBytes", "var_name": "maxDynamicTableSizeInBytes"}, {"original_string": "private int dynamicTableSizeInBytes;", "modifier": "private", "type": "int", "declarator": "dynamicTableSizeInBytes", "var_name": "dynamicTableSizeInBytes"}, {"original_string": "private final DynamicTable dynamicTable;", "modifier": "private final", "type": "DynamicTable", "declarator": "dynamicTable", "var_name": "dynamicTable"}, {"original_string": "private final Map<HttpField, Entry> fieldMap = new HashMap<>();", "modifier": "private final", "type": "Map<HttpField, Entry>", "declarator": "fieldMap = new HashMap<>()", "var_name": "fieldMap"}, {"original_string": "private final Map<String, Entry> nameMap = new HashMap<>();", "modifier": "private final", "type": "Map<String, Entry>", "declarator": "nameMap = new HashMap<>()", "var_name": "nameMap"}], "methods": [{"identifier": "HpackContext", "parameters": "(int maxDynamicTableSize)", "modifiers": "public", "return": "", "signature": " HpackContext(int maxDynamicTableSize)", "full_signature": "public  HpackContext(int maxDynamicTableSize)", "class_method_signature": "HpackContext.HpackContext(int maxDynamicTableSize)", "testcase": false, "constructor": true}, {"identifier": "resize", "parameters": "(int newMaxDynamicTableSize)", "modifiers": "public", "return": "void", "signature": "void resize(int newMaxDynamicTableSize)", "full_signature": "public void resize(int newMaxDynamicTableSize)", "class_method_signature": "HpackContext.resize(int newMaxDynamicTableSize)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(HttpField field)", "modifiers": "public", "return": "Entry", "signature": "Entry get(HttpField field)", "full_signature": "public Entry get(HttpField field)", "class_method_signature": "HpackContext.get(HttpField field)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String name)", "modifiers": "public", "return": "Entry", "signature": "Entry get(String name)", "full_signature": "public Entry get(String name)", "class_method_signature": "HpackContext.get(String name)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int index)", "modifiers": "public", "return": "Entry", "signature": "Entry get(int index)", "full_signature": "public Entry get(int index)", "class_method_signature": "HpackContext.get(int index)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(HttpHeader header)", "modifiers": "public", "return": "Entry", "signature": "Entry get(HttpHeader header)", "full_signature": "public Entry get(HttpHeader header)", "class_method_signature": "HpackContext.get(HttpHeader header)", "testcase": false, "constructor": false}, {"identifier": "getStatic", "parameters": "(HttpHeader header)", "modifiers": "public static", "return": "Entry", "signature": "Entry getStatic(HttpHeader header)", "full_signature": "public static Entry getStatic(HttpHeader header)", "class_method_signature": "HpackContext.getStatic(HttpHeader header)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(HttpField field)", "modifiers": "public", "return": "Entry", "signature": "Entry add(HttpField field)", "full_signature": "public Entry add(HttpField field)", "class_method_signature": "HpackContext.add(HttpField field)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "HpackContext.size()", "testcase": false, "constructor": false}, {"identifier": "getDynamicTableSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDynamicTableSize()", "full_signature": "public int getDynamicTableSize()", "class_method_signature": "HpackContext.getDynamicTableSize()", "testcase": false, "constructor": false}, {"identifier": "getMaxDynamicTableSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxDynamicTableSize()", "full_signature": "public int getMaxDynamicTableSize()", "class_method_signature": "HpackContext.getMaxDynamicTableSize()", "testcase": false, "constructor": false}, {"identifier": "index", "parameters": "(Entry entry)", "modifiers": "public", "return": "int", "signature": "int index(Entry entry)", "full_signature": "public int index(Entry entry)", "class_method_signature": "HpackContext.index(Entry entry)", "testcase": false, "constructor": false}, {"identifier": "staticIndex", "parameters": "(HttpHeader header)", "modifiers": "public static", "return": "int", "signature": "int staticIndex(HttpHeader header)", "full_signature": "public static int staticIndex(HttpHeader header)", "class_method_signature": "HpackContext.staticIndex(HttpHeader header)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "HpackContext.toString()", "testcase": false, "constructor": false}], "file": "firefly-net/src/main/java/com/fireflysource/net/http/common/v2/hpack/HpackContext.java"}, "focal_method": {"identifier": "get", "parameters": "(HttpField field)", "modifiers": "public", "return": "Entry", "body": "public Entry get(HttpField field) {\n        Entry entry = fieldMap.get(field);\n        if (entry == null)\n            entry = STATIC_FIELD_MAP.get(field);\n        return entry;\n    }", "signature": "Entry get(HttpField field)", "full_signature": "public Entry get(HttpField field)", "class_method_signature": "HpackContext.get(HttpField field)", "testcase": false, "constructor": false, "invocations": ["get", "get"]}, "repository": {"repo_id": 3458429, "url": "https://github.com/hypercube1024/firefly", "language": "Java", "is_fork": false, "fork_count": 118, "stargazer_count": 271, "size": 29687, "license": "licensed"}}