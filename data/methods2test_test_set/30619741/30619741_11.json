{"test_class": {"identifier": "BootTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LogManager.getLogger(BootTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LogManager.getLogger(BootTest.class)", "var_name": "log"}, {"original_string": "private static boolean wasInit = false;", "modifier": "private static", "type": "boolean", "declarator": "wasInit = false", "var_name": "wasInit"}, {"original_string": "private static boolean wasRun = false;", "modifier": "private static", "type": "boolean", "declarator": "wasRun = false", "var_name": "wasRun"}, {"original_string": "private static boolean wasInterrupted = false;", "modifier": "private static", "type": "boolean", "declarator": "wasInterrupted = false", "var_name": "wasInterrupted"}, {"original_string": "private static final Semaphore semaphore = new Semaphore(0);", "modifier": "private static final", "type": "Semaphore", "declarator": "semaphore = new Semaphore(0)", "var_name": "semaphore"}], "file": "microservices/src/test/java/io/silverware/microservices/BootTest.java"}, "test_case": {"identifier": "testFullBoot", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testFullBoot() throws InterruptedException {\n\n      Boot.main(\"-D\" + SHUTDOWN_HOOK + \"=false\");\n\n      Assert.assertTrue(semaphore.tryAcquire(50, TimeUnit.SECONDS), \"Timed-out while waiting for platform startup.\");\n\n      Assert.assertTrue(wasInit);\n      Assert.assertTrue(wasRun);\n      Assert.assertFalse(wasInterrupted);\n   }", "signature": "void testFullBoot()", "full_signature": "@Test public void testFullBoot()", "class_method_signature": "BootTest.testFullBoot()", "testcase": true, "constructor": false, "invocations": ["main", "assertTrue", "tryAcquire", "assertTrue", "assertTrue", "assertFalse"]}, "focal_class": {"identifier": "Boot", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LogManager.getLogger(Boot.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LogManager.getLogger(Boot.class)", "var_name": "log"}, {"original_string": "private static final String PROPERTY_LETTER = \"D\";", "modifier": "private static final", "type": "String", "declarator": "PROPERTY_LETTER = \"D\"", "var_name": "PROPERTY_LETTER"}, {"original_string": "private static final String PROPERTY_FILE_LETTER = \"p\";", "modifier": "private static final", "type": "String", "declarator": "PROPERTY_FILE_LETTER = \"p\"", "var_name": "PROPERTY_FILE_LETTER"}], "methods": [{"identifier": "main", "parameters": "(final String... args)", "modifiers": "public static", "return": "void", "signature": "void main(final String... args)", "full_signature": "public static void main(final String... args)", "class_method_signature": "Boot.main(final String... args)", "testcase": false, "constructor": false}, {"identifier": "preMainConfig", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void preMainConfig()", "full_signature": "private static void preMainConfig()", "class_method_signature": "Boot.preMainConfig()", "testcase": false, "constructor": false}, {"identifier": "logFlush", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void logFlush()", "full_signature": "private static void logFlush()", "class_method_signature": "Boot.logFlush()", "testcase": false, "constructor": false}, {"identifier": "loadProperties", "parameters": "(final File propertiesFile)", "modifiers": "private static", "return": "Properties", "signature": "Properties loadProperties(final File propertiesFile)", "full_signature": "private static Properties loadProperties(final File propertiesFile)", "class_method_signature": "Boot.loadProperties(final File propertiesFile)", "testcase": false, "constructor": false}, {"identifier": "getInitialContext", "parameters": "(final String... args)", "modifiers": "@SuppressWarnings(\"static-access\") private static", "return": "Context", "signature": "Context getInitialContext(final String... args)", "full_signature": "@SuppressWarnings(\"static-access\") private static Context getInitialContext(final String... args)", "class_method_signature": "Boot.getInitialContext(final String... args)", "testcase": false, "constructor": false}], "file": "microservices/src/main/java/io/silverware/microservices/Boot.java"}, "focal_method": {"identifier": "main", "parameters": "(final String... args)", "modifiers": "public static", "return": "void", "body": "public static void main(final String... args) {\n      preMainConfig();\n\n      log.info(\"=== Welcome to SilverWare ===\");\n      final Context initialContext = getInitialContext(args);\n      try {\n         Executor.bootHook(initialContext);\n      } catch (InterruptedException ie) {\n         Utils.shutdownLog(log, ie);\n      }\n\n      log.info(\"Goodbye.\");\n      logFlush(); // this is needed for Ctrl+C termination\n   }", "signature": "void main(final String... args)", "full_signature": "public static void main(final String... args)", "class_method_signature": "Boot.main(final String... args)", "testcase": false, "constructor": false, "invocations": ["preMainConfig", "info", "getInitialContext", "bootHook", "shutdownLog", "info", "logFlush"]}, "repository": {"repo_id": 30619741, "url": "https://github.com/SilverThings/SilverWare", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 21, "size": 3333, "license": "licensed"}}