{"test_class": {"identifier": "MultiStereoEncoderTest", "superclass": "", "interfaces": "", "fields": [], "file": "tool/hash/src/test/java/org/openscience/cdk/hash/stereo/MultiStereoEncoderTest.java"}, "test_case": {"identifier": "testReset", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReset() throws Exception {\n        StereoEncoder a = mock(StereoEncoder.class);\n        StereoEncoder b = mock(StereoEncoder.class);\n\n        StereoEncoder encoder = new MultiStereoEncoder(Arrays.asList(a, b));\n\n        long[] current = new long[0];\n        long[] next = new long[0];\n\n        when(a.encode(current, next)).thenReturn(true);\n        when(b.encode(current, next)).thenReturn(true);\n\n        // configured once\n        assertTrue(encoder.encode(current, next));\n\n        // not configured again\n        assertFalse(encoder.encode(current, next));\n\n        verify(a, times(1)).encode(current, next);\n        verify(b, times(1)).encode(current, next);\n\n        encoder.reset();\n\n        assertTrue(encoder.encode(current, next));\n\n        verify(a, times(2)).encode(current, next);\n        verify(b, times(2)).encode(current, next);\n    }", "signature": "void testReset()", "full_signature": "@Test public void testReset()", "class_method_signature": "MultiStereoEncoderTest.testReset()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "asList", "thenReturn", "when", "encode", "thenReturn", "when", "encode", "assertTrue", "encode", "assertFalse", "encode", "encode", "verify", "times", "encode", "verify", "times", "reset", "assertTrue", "encode", "encode", "verify", "times", "encode", "verify", "times"]}, "focal_class": {"identifier": "MultiStereoEncoder", "superclass": "", "interfaces": "implements StereoEncoder", "fields": [{"original_string": "private final BitSet              unconfigured;", "modifier": "private final", "type": "BitSet", "declarator": "unconfigured", "var_name": "unconfigured"}, {"original_string": "private final List<StereoEncoder> encoders;", "modifier": "private final", "type": "List<StereoEncoder>", "declarator": "encoders", "var_name": "encoders"}], "methods": [{"identifier": "MultiStereoEncoder", "parameters": "(List<StereoEncoder> encoders)", "modifiers": "public", "return": "", "signature": " MultiStereoEncoder(List<StereoEncoder> encoders)", "full_signature": "public  MultiStereoEncoder(List<StereoEncoder> encoders)", "class_method_signature": "MultiStereoEncoder.MultiStereoEncoder(List<StereoEncoder> encoders)", "testcase": false, "constructor": true}, {"identifier": "encode", "parameters": "(long[] current, long[] next)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean encode(long[] current, long[] next)", "full_signature": "@Override public boolean encode(long[] current, long[] next)", "class_method_signature": "MultiStereoEncoder.encode(long[] current, long[] next)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "MultiStereoEncoder.reset()", "testcase": false, "constructor": false}], "file": "tool/hash/src/main/java/org/openscience/cdk/hash/stereo/MultiStereoEncoder.java"}, "focal_method": {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void reset() {\n        // mark all as unperceived and reset\n        for (int i = 0; i < encoders.size(); i++) {\n            unconfigured.set(i);\n            encoders.get(i).reset();\n        }\n    }", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "MultiStereoEncoder.reset()", "testcase": false, "constructor": false, "invocations": ["size", "set", "reset", "get"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}