{"test_class": {"identifier": "FidoMdsMetadataValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final MetadataItemsResolver metadataItemsResolver = mock(MetadataItemsResolver.class);", "modifier": "private final", "type": "MetadataItemsResolver", "declarator": "metadataItemsResolver = mock(MetadataItemsResolver.class)", "var_name": "metadataItemsResolver"}, {"original_string": "private final FidoMdsMetadataValidator target = new FidoMdsMetadataValidator(metadataItemsResolver);", "modifier": "private final", "type": "FidoMdsMetadataValidator", "declarator": "target = new FidoMdsMetadataValidator(metadataItemsResolver)", "var_name": "target"}], "file": "webauthn4j-metadata/src/test/java/com/webauthn4j/metadata/FidoMdsMetadataValidatorTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void test() {\n        RegistrationObject registrationObject = TestDataUtil.createRegistrationObjectWithPackedAttestation();\n        target.validate(registrationObject);\n    }", "signature": "void test()", "full_signature": "@Test void test()", "class_method_signature": "FidoMdsMetadataValidatorTest.test()", "testcase": true, "constructor": false, "invocations": ["createRegistrationObjectWithPackedAttestation", "validate"]}, "focal_class": {"identifier": "FidoMdsMetadataValidator", "superclass": "", "interfaces": "implements CustomRegistrationValidator", "fields": [{"original_string": "private final MetadataItemsResolver metadataItemsResolver;", "modifier": "private final", "type": "MetadataItemsResolver", "declarator": "metadataItemsResolver", "var_name": "metadataItemsResolver"}], "methods": [{"identifier": "FidoMdsMetadataValidator", "parameters": "(MetadataItemsResolver metadataItemsResolver)", "modifiers": "public", "return": "", "signature": " FidoMdsMetadataValidator(MetadataItemsResolver metadataItemsResolver)", "full_signature": "public  FidoMdsMetadataValidator(MetadataItemsResolver metadataItemsResolver)", "class_method_signature": "FidoMdsMetadataValidator.FidoMdsMetadataValidator(MetadataItemsResolver metadataItemsResolver)", "testcase": false, "constructor": true}, {"identifier": "FidoMdsMetadataValidator", "parameters": "(ObjectConverter objectConverter, String fidoMetadataServiceEndpoint)", "modifiers": "public", "return": "", "signature": " FidoMdsMetadataValidator(ObjectConverter objectConverter, String fidoMetadataServiceEndpoint)", "full_signature": "public  FidoMdsMetadataValidator(ObjectConverter objectConverter, String fidoMetadataServiceEndpoint)", "class_method_signature": "FidoMdsMetadataValidator.FidoMdsMetadataValidator(ObjectConverter objectConverter, String fidoMetadataServiceEndpoint)", "testcase": false, "constructor": true}, {"identifier": "FidoMdsMetadataValidator", "parameters": "(String fidoMetadataServiceEndpoint)", "modifiers": "public", "return": "", "signature": " FidoMdsMetadataValidator(String fidoMetadataServiceEndpoint)", "full_signature": "public  FidoMdsMetadataValidator(String fidoMetadataServiceEndpoint)", "class_method_signature": "FidoMdsMetadataValidator.FidoMdsMetadataValidator(String fidoMetadataServiceEndpoint)", "testcase": false, "constructor": true}, {"identifier": "validate", "parameters": "(RegistrationObject registrationObject)", "modifiers": "@Override public", "return": "void", "signature": "void validate(RegistrationObject registrationObject)", "full_signature": "@Override public void validate(RegistrationObject registrationObject)", "class_method_signature": "FidoMdsMetadataValidator.validate(RegistrationObject registrationObject)", "testcase": false, "constructor": false}, {"identifier": "doAdditionalValidationForFidoMdsMetadataItem", "parameters": "(MetadataItem metadataItem)", "modifiers": "private", "return": "void", "signature": "void doAdditionalValidationForFidoMdsMetadataItem(MetadataItem metadataItem)", "full_signature": "private void doAdditionalValidationForFidoMdsMetadataItem(MetadataItem metadataItem)", "class_method_signature": "FidoMdsMetadataValidator.doAdditionalValidationForFidoMdsMetadataItem(MetadataItem metadataItem)", "testcase": false, "constructor": false}], "file": "webauthn4j-metadata/src/main/java/com/webauthn4j/metadata/FidoMdsMetadataValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(RegistrationObject registrationObject)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate(RegistrationObject registrationObject) {\n        AAGUID aaguid = registrationObject.getAttestationObject().getAuthenticatorData().getAttestedCredentialData().getAaguid();\n        AttestationStatement attestationStatement = registrationObject.getAttestationObject().getAttestationStatement();\n\n        Set<MetadataItem> metadataItems = metadataItemsResolver.resolve(aaguid);\n\n        List<AttestationType> attestationTypes = metadataItems.stream()\n                .flatMap(item -> item.getMetadataStatement().getAttestationTypes().stream()).collect(Collectors.toList());\n\n        boolean isSurrogate = !attestationTypes.isEmpty() &&\n                attestationTypes.stream().allMatch(type -> type.equals(AttestationType.BASIC_SURROGATE));\n\n        if (isSurrogate && attestationStatement instanceof CertificateBaseAttestationStatement) {\n            CertificateBaseAttestationStatement certificateBaseAttestationStatement = (CertificateBaseAttestationStatement) attestationStatement;\n            if (certificateBaseAttestationStatement.getX5c() != null) {\n                throw new BadAttestationStatementException(\"Although AAGUID is registered for surrogate attestation in metadata, x5c contains certificates.\");\n            }\n        }\n\n        for (MetadataItem metadataItem : metadataItems) {\n            doAdditionalValidationForFidoMdsMetadataItem(metadataItem);\n        }\n    }", "signature": "void validate(RegistrationObject registrationObject)", "full_signature": "@Override public void validate(RegistrationObject registrationObject)", "class_method_signature": "FidoMdsMetadataValidator.validate(RegistrationObject registrationObject)", "testcase": false, "constructor": false, "invocations": ["getAaguid", "getAttestedCredentialData", "getAuthenticatorData", "getAttestationObject", "getAttestationStatement", "getAttestationObject", "resolve", "collect", "flatMap", "stream", "stream", "getAttestationTypes", "getMetadataStatement", "toList", "isEmpty", "allMatch", "stream", "equals", "getX5c", "doAdditionalValidationForFidoMdsMetadataItem"]}, "repository": {"repo_id": 134147639, "url": "https://github.com/webauthn4j/webauthn4j", "stars": 101, "created": "5/20/2018 12:14:36 PM +00:00", "updates": "2020-01-27T13:01:46+00:00", "fork": "False", "license": "licensed"}}