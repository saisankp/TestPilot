{"test_class": {"identifier": "ESPushTaskConfigTest", "superclass": "", "interfaces": "", "fields": [], "file": "samza-elasticsearch/src/test/java/com/quantiply/samza/task/ESPushTaskConfigTest.java"}, "test_case": {"identifier": "testMissingStreamsParam", "parameters": "()", "modifiers": "@Test(expected = ConfigException.class) public", "return": "void", "body": "@Test(expected = ConfigException.class)\n    public void testMissingStreamsParam() throws Exception {\n        Map<String, String> map = new HashMap<String, String>();\n        ESPushTaskConfig.getStreamMap(new MapConfig(map));\n    }", "signature": "void testMissingStreamsParam()", "full_signature": "@Test(expected = ConfigException.class) public void testMissingStreamsParam()", "class_method_signature": "ESPushTaskConfigTest.testMissingStreamsParam()", "testcase": true, "constructor": false, "invocations": ["getStreamMap"]}, "focal_class": {"identifier": "ESPushTaskConfig", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final static String CFS_ES_SYSTEM_NAME = \"es\";", "modifier": "public final static", "type": "String", "declarator": "CFS_ES_SYSTEM_NAME = \"es\"", "var_name": "CFS_ES_SYSTEM_NAME"}, {"original_string": "public final static String CFG_ES_STREAM_NAME = \"bulk-http\";", "modifier": "public final static", "type": "String", "declarator": "CFG_ES_STREAM_NAME = \"bulk-http\"", "var_name": "CFG_ES_STREAM_NAME"}, {"original_string": "public final static String CFG_ES_STREAMS = \"rico.es.streams\";", "modifier": "public final static", "type": "String", "declarator": "CFG_ES_STREAMS = \"rico.es.streams\"", "var_name": "CFG_ES_STREAMS"}, {"original_string": "public final static String CFG_ES_DEFAULT_DOC_METADATA_SRC = \"rico.es.metadata.source\";", "modifier": "public final static", "type": "String", "declarator": "CFG_ES_DEFAULT_DOC_METADATA_SRC = \"rico.es.metadata.source\"", "var_name": "CFG_ES_DEFAULT_DOC_METADATA_SRC"}, {"original_string": "public final static String CFG_ES_STREAM_DOC_METADATA_SRC = \"rico.es.stream.%s.metadata.source\";", "modifier": "public final static", "type": "String", "declarator": "CFG_ES_STREAM_DOC_METADATA_SRC = \"rico.es.stream.%s.metadata.source\"", "var_name": "CFG_ES_STREAM_DOC_METADATA_SRC"}, {"original_string": "public final static String CFG_ES_DEFAULT_INDEX_PREFIX = \"rico.es.index.prefix\";", "modifier": "public final static", "type": "String", "declarator": "CFG_ES_DEFAULT_INDEX_PREFIX = \"rico.es.index.prefix\"", "var_name": "CFG_ES_DEFAULT_INDEX_PREFIX"}, {"original_string": "public final static String CFG_ES_STREAM_INDEX_PREFIX = \"rico.es.stream.%s.index.prefix\";", "modifier": "public final static", "type": "String", "declarator": "CFG_ES_STREAM_INDEX_PREFIX = \"rico.es.stream.%s.index.prefix\"", "var_name": "CFG_ES_STREAM_INDEX_PREFIX"}, {"original_string": "public final static String CFG_ES_DEFAULT_INDEX_DATE_FORMAT = \"rico.es.index.date.format\";", "modifier": "public final static", "type": "String", "declarator": "CFG_ES_DEFAULT_INDEX_DATE_FORMAT = \"rico.es.index.date.format\"", "var_name": "CFG_ES_DEFAULT_INDEX_DATE_FORMAT"}, {"original_string": "public final static String CFG_ES_STREAM_INDEX_DATE_FORMAT = \"rico.es.stream.%s.index.date.format\";", "modifier": "public final static", "type": "String", "declarator": "CFG_ES_STREAM_INDEX_DATE_FORMAT = \"rico.es.stream.%s.index.date.format\"", "var_name": "CFG_ES_STREAM_INDEX_DATE_FORMAT"}, {"original_string": "public final static String CFG_ES_DEFAULT_INDEX_DATE_ZONE = \"rico.es.index.date.zone\";", "modifier": "public final static", "type": "String", "declarator": "CFG_ES_DEFAULT_INDEX_DATE_ZONE = \"rico.es.index.date.zone\"", "var_name": "CFG_ES_DEFAULT_INDEX_DATE_ZONE"}, {"original_string": "public final static String CFG_ES_STREAM_INDEX_DATE_ZONE = \"rico.es.stream.%s.index.date.zone\";", "modifier": "public final static", "type": "String", "declarator": "CFG_ES_STREAM_INDEX_DATE_ZONE = \"rico.es.stream.%s.index.date.zone\"", "var_name": "CFG_ES_STREAM_INDEX_DATE_ZONE"}, {"original_string": "public final static String CFG_ES_DEFAULT_DOC_TYPE = \"rico.es.doc.type\";", "modifier": "public final static", "type": "String", "declarator": "CFG_ES_DEFAULT_DOC_TYPE = \"rico.es.doc.type\"", "var_name": "CFG_ES_DEFAULT_DOC_TYPE"}, {"original_string": "public final static String CFG_ES_STREAM_DOC_TYPE = \"rico.es.stream.%s.doc.type\";", "modifier": "public final static", "type": "String", "declarator": "CFG_ES_STREAM_DOC_TYPE = \"rico.es.stream.%s.doc.type\"", "var_name": "CFG_ES_STREAM_DOC_TYPE"}, {"original_string": "public final static String CFG_ES_DEFAULT_VERSION_TYPE_DEFAULT = \"rico.es.version.type.default\";", "modifier": "public final static", "type": "String", "declarator": "CFG_ES_DEFAULT_VERSION_TYPE_DEFAULT = \"rico.es.version.type.default\"", "var_name": "CFG_ES_DEFAULT_VERSION_TYPE_DEFAULT"}, {"original_string": "public final static String CFG_ES_STREAM_VERSION_TYPE_DEFAULT = \"rico.es.stream.%s.version.type.default\";", "modifier": "public final static", "type": "String", "declarator": "CFG_ES_STREAM_VERSION_TYPE_DEFAULT = \"rico.es.stream.%s.version.type.default\"", "var_name": "CFG_ES_STREAM_VERSION_TYPE_DEFAULT"}, {"original_string": "private final static HashSet<String> METADATA_SRC_OPTIONS = Arrays.stream(MetadataSrc.values()).map(v -> v.toString().toLowerCase()).collect(Collectors.toCollection(HashSet::new));", "modifier": "private final static", "type": "HashSet<String>", "declarator": "METADATA_SRC_OPTIONS = Arrays.stream(MetadataSrc.values()).map(v -> v.toString().toLowerCase()).collect(Collectors.toCollection(HashSet::new))", "var_name": "METADATA_SRC_OPTIONS"}], "methods": [{"identifier": "isStreamConfig", "parameters": "(Config config)", "modifiers": "public static", "return": "boolean", "signature": "boolean isStreamConfig(Config config)", "full_signature": "public static boolean isStreamConfig(Config config)", "class_method_signature": "ESPushTaskConfig.isStreamConfig(Config config)", "testcase": false, "constructor": false}, {"identifier": "getDefaultConfig", "parameters": "(Config config)", "modifiers": "public static", "return": "ESIndexSpec", "signature": "ESIndexSpec getDefaultConfig(Config config)", "full_signature": "public static ESIndexSpec getDefaultConfig(Config config)", "class_method_signature": "ESPushTaskConfig.getDefaultConfig(Config config)", "testcase": false, "constructor": false}, {"identifier": "getStreamMap", "parameters": "(Config config)", "modifiers": "public static", "return": "Map<String,ESIndexSpec>", "signature": "Map<String,ESIndexSpec> getStreamMap(Config config)", "full_signature": "public static Map<String,ESIndexSpec> getStreamMap(Config config)", "class_method_signature": "ESPushTaskConfig.getStreamMap(Config config)", "testcase": false, "constructor": false}, {"identifier": "getStreamConfig", "parameters": "(String stream, Config config)", "modifiers": "private static", "return": "ESIndexSpec", "signature": "ESIndexSpec getStreamConfig(String stream, Config config)", "full_signature": "private static ESIndexSpec getStreamConfig(String stream, Config config)", "class_method_signature": "ESPushTaskConfig.getStreamConfig(String stream, Config config)", "testcase": false, "constructor": false}, {"identifier": "getDefaultDateZoneStr", "parameters": "(Config config)", "modifiers": "private static", "return": "String", "signature": "String getDefaultDateZoneStr(Config config)", "full_signature": "private static String getDefaultDateZoneStr(Config config)", "class_method_signature": "ESPushTaskConfig.getDefaultDateZoneStr(Config config)", "testcase": false, "constructor": false}, {"identifier": "getDefaultMetadataStrParam", "parameters": "(Config config)", "modifiers": "private static", "return": "String", "signature": "String getDefaultMetadataStrParam(Config config)", "full_signature": "private static String getDefaultMetadataStrParam(Config config)", "class_method_signature": "ESPushTaskConfig.getDefaultMetadataStrParam(Config config)", "testcase": false, "constructor": false}, {"identifier": "getVersionType", "parameters": "(String defaultVersionTypeStr)", "modifiers": "private static", "return": "Optional<VersionType>", "signature": "Optional<VersionType> getVersionType(String defaultVersionTypeStr)", "full_signature": "private static Optional<VersionType> getVersionType(String defaultVersionTypeStr)", "class_method_signature": "ESPushTaskConfig.getVersionType(String defaultVersionTypeStr)", "testcase": false, "constructor": false}, {"identifier": "getMetadataSrc", "parameters": "(String stream, String metadataSrcStrParam)", "modifiers": "private static", "return": "MetadataSrc", "signature": "MetadataSrc getMetadataSrc(String stream, String metadataSrcStrParam)", "full_signature": "private static MetadataSrc getMetadataSrc(String stream, String metadataSrcStrParam)", "class_method_signature": "ESPushTaskConfig.getMetadataSrc(String stream, String metadataSrcStrParam)", "testcase": false, "constructor": false}, {"identifier": "getDefaultConfigParam", "parameters": "(Config config, String param, String defaultVal)", "modifiers": "private static", "return": "String", "signature": "String getDefaultConfigParam(Config config, String param, String defaultVal)", "full_signature": "private static String getDefaultConfigParam(Config config, String param, String defaultVal)", "class_method_signature": "ESPushTaskConfig.getDefaultConfigParam(Config config, String param, String defaultVal)", "testcase": false, "constructor": false}, {"identifier": "getOptionalStreamConfigParam", "parameters": "(String stream, Config config, String paramFormat, String defaultVal)", "modifiers": "private static", "return": "String", "signature": "String getOptionalStreamConfigParam(String stream, Config config, String paramFormat, String defaultVal)", "full_signature": "private static String getOptionalStreamConfigParam(String stream, Config config, String paramFormat, String defaultVal)", "class_method_signature": "ESPushTaskConfig.getOptionalStreamConfigParam(String stream, Config config, String paramFormat, String defaultVal)", "testcase": false, "constructor": false}, {"identifier": "getRequiredStreamConfigParam", "parameters": "(String stream, Config config, String paramFormat, String defaultVal)", "modifiers": "private static", "return": "String", "signature": "String getRequiredStreamConfigParam(String stream, Config config, String paramFormat, String defaultVal)", "full_signature": "private static String getRequiredStreamConfigParam(String stream, Config config, String paramFormat, String defaultVal)", "class_method_signature": "ESPushTaskConfig.getRequiredStreamConfigParam(String stream, Config config, String paramFormat, String defaultVal)", "testcase": false, "constructor": false}, {"identifier": "getStreamConfigParam", "parameters": "(String stream, Config config, String paramFormat, String defaultVal, boolean required)", "modifiers": "private static", "return": "String", "signature": "String getStreamConfigParam(String stream, Config config, String paramFormat, String defaultVal, boolean required)", "full_signature": "private static String getStreamConfigParam(String stream, Config config, String paramFormat, String defaultVal, boolean required)", "class_method_signature": "ESPushTaskConfig.getStreamConfigParam(String stream, Config config, String paramFormat, String defaultVal, boolean required)", "testcase": false, "constructor": false}], "file": "samza-elasticsearch/src/main/java/com/quantiply/samza/task/ESPushTaskConfig.java"}, "focal_method": {"identifier": "getStreamMap", "parameters": "(Config config)", "modifiers": "public static", "return": "Map<String,ESIndexSpec>", "body": "public static Map<String,ESIndexSpec> getStreamMap(Config config) {\n        //Get list of stream\n        List<String> streams = config.getList(CFG_ES_STREAMS);\n        return streams.stream()\n                .collect(Collectors.toMap(Function.identity(), stream -> getStreamConfig(stream, config)));\n    }", "signature": "Map<String,ESIndexSpec> getStreamMap(Config config)", "full_signature": "public static Map<String,ESIndexSpec> getStreamMap(Config config)", "class_method_signature": "ESPushTaskConfig.getStreamMap(Config config)", "testcase": false, "constructor": false, "invocations": ["getList", "collect", "stream", "toMap", "identity", "getStreamConfig"]}, "repository": {"repo_id": 23237318, "url": "https://github.com/quantiply/rico", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 5128, "license": "licensed"}}