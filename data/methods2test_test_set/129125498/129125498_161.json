{"test_class": {"identifier": "IndividualsDetectorFactoryProviderTest", "superclass": "extends AbstractDetectorFactoryTest", "interfaces": "", "fields": [{"original_string": "private static final double TOLERANCE = 0.001;", "modifier": "private static final", "type": "double", "declarator": "TOLERANCE = 0.001", "var_name": "TOLERANCE"}], "file": "anomdetect/src/test/java/com/expedia/adaptivealerting/anomdetect/detect/outlier/algo/individuals/IndividualsDetectorFactoryProviderTest.java"}, "test_case": {"identifier": "testBuildDetector", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuildDetector() {\n        val factoryUnderTest = new IndividualsDetectorFactoryProvider();\n        val document = readDocument(\"individuals\");\n        val detector = factoryUnderTest.buildDetector(document);\n        val params = detector.getParams();\n        val trusted = detector.isTrusted();\n\n        assertNotNull(detector);\n        assertEquals(true, trusted);\n        assertEquals(IndividualsDetector.class, detector.getClass());\n        assertEquals(\"a6a4d8c4-4102-51fc-a1c7-38aa6f066cca\", detector.getUuid().toString());\n        assertEquals(3.0, params.getStrongSigmas(), TOLERANCE);\n        assertEquals(10.0, params.getInitValue(), TOLERANCE);\n        assertEquals(30.0, params.getInitMeanEstimate(), TOLERANCE);\n        assertEquals(30, params.getWarmUpPeriod());\n    }", "signature": "void testBuildDetector()", "full_signature": "@Test public void testBuildDetector()", "class_method_signature": "IndividualsDetectorFactoryProviderTest.testBuildDetector()", "testcase": true, "constructor": false, "invocations": ["readDocument", "buildDetector", "getParams", "isTrusted", "assertNotNull", "assertEquals", "assertEquals", "getClass", "assertEquals", "toString", "getUuid", "assertEquals", "getStrongSigmas", "assertEquals", "getInitValue", "assertEquals", "getInitMeanEstimate", "assertEquals", "getWarmUpPeriod"]}, "focal_class": {"identifier": "IndividualsDetectorFactoryProvider", "superclass": "", "interfaces": "implements DetectorFactoryProvider<IndividualsDetector>", "fields": [{"original_string": "private final ObjectMapper objectMapper = new ObjectMapper();", "modifier": "private final", "type": "ObjectMapper", "declarator": "objectMapper = new ObjectMapper()", "var_name": "objectMapper"}], "methods": [{"identifier": "buildDetector", "parameters": "(DetectorDocument document)", "modifiers": "@Override public", "return": "IndividualsDetector", "signature": "IndividualsDetector buildDetector(DetectorDocument document)", "full_signature": "@Override public IndividualsDetector buildDetector(DetectorDocument document)", "class_method_signature": "IndividualsDetectorFactoryProvider.buildDetector(DetectorDocument document)", "testcase": false, "constructor": false}], "file": "anomdetect/src/main/java/com/expedia/adaptivealerting/anomdetect/detect/outlier/algo/individuals/IndividualsDetectorFactoryProvider.java"}, "focal_method": {"identifier": "buildDetector", "parameters": "(DetectorDocument document)", "modifiers": "@Override public", "return": "IndividualsDetector", "body": "@Override\n    public IndividualsDetector buildDetector(DetectorDocument document) {\n        notNull(document, \"document can't be null\");\n        val paramsMap = document.getConfig().get(\"params\");\n        val params = objectMapper.convertValue(paramsMap, IndividualsDetectorParams.class);\n        val trusted = document.isTrusted();\n        return new IndividualsDetector(document.getUuid(), params, trusted, \"individuals\");\n    }", "signature": "IndividualsDetector buildDetector(DetectorDocument document)", "full_signature": "@Override public IndividualsDetector buildDetector(DetectorDocument document)", "class_method_signature": "IndividualsDetectorFactoryProvider.buildDetector(DetectorDocument document)", "testcase": false, "constructor": false, "invocations": ["notNull", "get", "getConfig", "convertValue", "isTrusted", "getUuid"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}