{"test_class": {"identifier": "PdfRotatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-sambox/src/test/java/org/sejda/impl/sambox/component/PdfRotatorTest.java"}, "test_case": {"identifier": "singlePage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void singlePage() {\n        PDDocument document = mock(PDDocument.class);\n        PDPage page = mock(PDPage.class);\n        when(page.getRotation()).thenReturn(180);\n        when(document.getPage(2)).thenReturn(page);\n        new PdfRotator(document).rotate(3, Rotation.DEGREES_270);\n        verify(page).setRotation(90);\n    }", "signature": "void singlePage()", "full_signature": "@Test public void singlePage()", "class_method_signature": "PdfRotatorTest.singlePage()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getRotation", "thenReturn", "when", "getPage", "rotate", "setRotation", "verify"]}, "focal_class": {"identifier": "PdfRotator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(PdfRotator.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(PdfRotator.class)", "var_name": "LOG"}, {"original_string": "private PDDocument document;", "modifier": "private", "type": "PDDocument", "declarator": "document", "var_name": "document"}], "methods": [{"identifier": "PdfRotator", "parameters": "(PDDocument document)", "modifiers": "public", "return": "", "signature": " PdfRotator(PDDocument document)", "full_signature": "public  PdfRotator(PDDocument document)", "class_method_signature": "PdfRotator.PdfRotator(PDDocument document)", "testcase": false, "constructor": true}, {"identifier": "rotate", "parameters": "(int pageNumber, Rotation rotation)", "modifiers": "public", "return": "void", "signature": "void rotate(int pageNumber, Rotation rotation)", "full_signature": "public void rotate(int pageNumber, Rotation rotation)", "class_method_signature": "PdfRotator.rotate(int pageNumber, Rotation rotation)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(PDPage page, Rotation rotation)", "modifiers": "public static", "return": "void", "signature": "void rotate(PDPage page, Rotation rotation)", "full_signature": "public static void rotate(PDPage page, Rotation rotation)", "class_method_signature": "PdfRotator.rotate(PDPage page, Rotation rotation)", "testcase": false, "constructor": false}], "file": "sejda-sambox/src/main/java/org/sejda/impl/sambox/component/PdfRotator.java"}, "focal_method": {"identifier": "rotate", "parameters": "(int pageNumber, Rotation rotation)", "modifiers": "public", "return": "void", "body": "public void rotate(int pageNumber, Rotation rotation) {\n        LOG.debug(\"Applying rotation of {} degrees to page {}\", rotation.getDegrees(), pageNumber);\n        PDPage page = document.getPage(pageNumber - 1);\n        rotate(page, rotation);\n    }", "signature": "void rotate(int pageNumber, Rotation rotation)", "full_signature": "public void rotate(int pageNumber, Rotation rotation)", "class_method_signature": "PdfRotator.rotate(int pageNumber, Rotation rotation)", "testcase": false, "constructor": false, "invocations": ["debug", "getDegrees", "getPage", "rotate"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}