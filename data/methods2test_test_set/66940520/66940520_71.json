{"test_class": {"identifier": "MetadataSyncDelegateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "@Rule\n    public MockitoRule mockitoRule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = MockitoJUnit.rule()", "var_name": "mockitoRule"}, {"original_string": "@InjectMocks\n    private MetadataSyncDelegate metadataSyncDelegate;", "modifier": "@InjectMocks\n    private", "type": "MetadataSyncDelegate", "declarator": "metadataSyncDelegate", "var_name": "metadataSyncDelegate"}, {"original_string": "@Mock\n    private DefaultMetadataSystemSettingService metadataSystemSettingService;", "modifier": "@Mock\n    private", "type": "DefaultMetadataSystemSettingService", "declarator": "metadataSystemSettingService", "var_name": "metadataSystemSettingService"}, {"original_string": "@Mock\n    private SystemService systemService;", "modifier": "@Mock\n    private", "type": "SystemService", "declarator": "systemService", "var_name": "systemService"}, {"original_string": "@Mock\n    private RenderService renderService;", "modifier": "@Mock\n    private", "type": "RenderService", "declarator": "renderService", "var_name": "renderService"}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/test/java/org/hisp/dhis/dxf2/metadata/sync/MetadataSyncDelegateTest.java"}, "test_case": {"identifier": "testShouldVerifyIfStopSyncReturnFalseIfNoSystemVersionInLocal", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testShouldVerifyIfStopSyncReturnFalseIfNoSystemVersionInLocal()\n    {\n        String versionSnapshot = \"{\\\"system:\\\": {\\\"date\\\":\\\"2016-05-24T05:27:25.128+0000\\\", \\\"version\\\": \\\"2.26\\\"}, \\\"name\\\":\\\"testVersion\\\",\\\"created\\\":\\\"2016-05-26T11:43:59.787+0000\\\",\\\"type\\\":\\\"BEST_EFFORT\\\",\\\"id\\\":\\\"ktwh8PHNwtB\\\",\\\"hashCode\\\":\\\"12wa32d4f2et3tyt5yu6i\\\"}\";\n        SystemInfo systemInfo = new SystemInfo();\n        when ( systemService.getSystemInfo() ).thenReturn( systemInfo );\n        boolean shouldStopSync = metadataSyncDelegate.shouldStopSync( versionSnapshot );\n        assertFalse(shouldStopSync);\n    }", "signature": "void testShouldVerifyIfStopSyncReturnFalseIfNoSystemVersionInLocal()", "full_signature": "@Test public void testShouldVerifyIfStopSyncReturnFalseIfNoSystemVersionInLocal()", "class_method_signature": "MetadataSyncDelegateTest.testShouldVerifyIfStopSyncReturnFalseIfNoSystemVersionInLocal()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getSystemInfo", "shouldStopSync", "assertFalse"]}, "focal_class": {"identifier": "MetadataSyncDelegate", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private DefaultMetadataSystemSettingService metadataSystemSettingService;", "modifier": "@Autowired\n    private", "type": "DefaultMetadataSystemSettingService", "declarator": "metadataSystemSettingService", "var_name": "metadataSystemSettingService"}, {"original_string": "@Autowired\n    private RenderService renderService;", "modifier": "@Autowired\n    private", "type": "RenderService", "declarator": "renderService", "var_name": "renderService"}, {"original_string": "@Autowired\n    private SystemService systemService;", "modifier": "@Autowired\n    private", "type": "SystemService", "declarator": "systemService", "var_name": "systemService"}], "methods": [{"identifier": "shouldStopSync", "parameters": "( String metadataVersionSnapshot )", "modifiers": "public", "return": "boolean", "signature": "boolean shouldStopSync( String metadataVersionSnapshot )", "full_signature": "public boolean shouldStopSync( String metadataVersionSnapshot )", "class_method_signature": "MetadataSyncDelegate.shouldStopSync( String metadataVersionSnapshot )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/metadata/sync/MetadataSyncDelegate.java"}, "focal_method": {"identifier": "shouldStopSync", "parameters": "( String metadataVersionSnapshot )", "modifiers": "public", "return": "boolean", "body": "public boolean shouldStopSync( String metadataVersionSnapshot )\n    {\n        SystemInfo systemInfo = systemService.getSystemInfo();\n        String systemVersion = systemInfo.getVersion();\n\n        if ( StringUtils.isEmpty( systemVersion ) || !metadataSystemSettingService.getStopMetadataSyncSetting() )\n        {\n            return false;\n        }\n\n        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream( metadataVersionSnapshot.getBytes( StandardCharsets.UTF_8 ) );\n        String remoteVersion = \"\";\n\n        try\n        {\n            JsonNode systemObject = renderService.getSystemObject( byteArrayInputStream, RenderFormat.JSON );\n\n            if ( systemObject == null )\n            {\n                return false;\n            }\n\n            remoteVersion = systemObject.get( \"version\" ).textValue();\n\n            if ( StringUtils.isEmpty( remoteVersion ) )\n            {\n                return false;\n            }\n        }\n        catch ( IOException e )\n        {\n            log.error( \"Exception occurred when parsing the metadata snapshot\" + e.getMessage() );\n        }\n\n        return !systemVersion.trim().equals( remoteVersion.trim() );\n    }", "signature": "boolean shouldStopSync( String metadataVersionSnapshot )", "full_signature": "public boolean shouldStopSync( String metadataVersionSnapshot )", "class_method_signature": "MetadataSyncDelegate.shouldStopSync( String metadataVersionSnapshot )", "testcase": false, "constructor": false, "invocations": ["getSystemInfo", "getVersion", "isEmpty", "getStopMetadataSyncSetting", "getBytes", "getSystemObject", "textValue", "get", "isEmpty", "error", "getMessage", "equals", "trim", "trim"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}