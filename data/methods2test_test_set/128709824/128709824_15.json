{"test_class": {"identifier": "ProtostuffHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ProtostuffHelper protostuffHelper = new ProtostuffHelper();", "modifier": "private", "type": "ProtostuffHelper", "declarator": "protostuffHelper = new ProtostuffHelper()", "var_name": "protostuffHelper"}], "file": "codec/codec-protostuff/src/test/java/com/alipay/sofa/rpc/codec/protostuff/ProtostuffHelperTest.java"}, "test_case": {"identifier": "getReqClass", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getReqClass() {\n        Class req = protostuffHelper.getReqClass(\n            ProtostuffService.class.getCanonicalName(), \"echoStr\");\n        Assert.assertTrue(req == ExampleObj.class);\n    }", "signature": "void getReqClass()", "full_signature": "@Test public void getReqClass()", "class_method_signature": "ProtostuffHelperTest.getReqClass()", "testcase": true, "constructor": false, "invocations": ["getReqClass", "getCanonicalName", "assertTrue"]}, "focal_class": {"identifier": "ProtostuffHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ConcurrentMap<String, Class> requestClassCache  = new ConcurrentHashMap<String, Class>();", "modifier": "private", "type": "ConcurrentMap<String, Class>", "declarator": "requestClassCache  = new ConcurrentHashMap<String, Class>()", "var_name": "requestClassCache"}, {"original_string": "private ConcurrentMap<String, Class> responseClassCache = new ConcurrentHashMap<String, Class>();", "modifier": "private", "type": "ConcurrentMap<String, Class>", "declarator": "responseClassCache = new ConcurrentHashMap<String, Class>()", "var_name": "responseClassCache"}], "methods": [{"identifier": "getReqClass", "parameters": "(String service, String methodName)", "modifiers": "public", "return": "Class", "signature": "Class getReqClass(String service, String methodName)", "full_signature": "public Class getReqClass(String service, String methodName)", "class_method_signature": "ProtostuffHelper.getReqClass(String service, String methodName)", "testcase": false, "constructor": false}, {"identifier": "getResClass", "parameters": "(String service, String methodName)", "modifiers": "public", "return": "Class", "signature": "Class getResClass(String service, String methodName)", "full_signature": "public Class getResClass(String service, String methodName)", "class_method_signature": "ProtostuffHelper.getResClass(String service, String methodName)", "testcase": false, "constructor": false}, {"identifier": "buildMethodKey", "parameters": "(String serviceName, String methodName)", "modifiers": "private", "return": "String", "signature": "String buildMethodKey(String serviceName, String methodName)", "full_signature": "private String buildMethodKey(String serviceName, String methodName)", "class_method_signature": "ProtostuffHelper.buildMethodKey(String serviceName, String methodName)", "testcase": false, "constructor": false}, {"identifier": "loadProtoClassToCache", "parameters": "(String key, Class clazz, String methodName)", "modifiers": "private", "return": "void", "signature": "void loadProtoClassToCache(String key, Class clazz, String methodName)", "full_signature": "private void loadProtoClassToCache(String key, Class clazz, String methodName)", "class_method_signature": "ProtostuffHelper.loadProtoClassToCache(String key, Class clazz, String methodName)", "testcase": false, "constructor": false}], "file": "codec/codec-protostuff/src/main/java/com/alipay/sofa/rpc/codec/protostuff/ProtostuffHelper.java"}, "focal_method": {"identifier": "getReqClass", "parameters": "(String service, String methodName)", "modifiers": "public", "return": "Class", "body": "public Class getReqClass(String service, String methodName) {\n\n        String key = buildMethodKey(service, methodName);\n        Class reqClass = requestClassCache.get(key);\n        if (reqClass == null) {\n            // \u8bfb\u53d6\u63a5\u53e3\u91cc\u7684\u65b9\u6cd5\u53c2\u6570\u548c\u8fd4\u56de\u503c\n            String interfaceClass = ConfigUniqueNameGenerator.getInterfaceName(service);\n            Class clazz = ClassUtils.forName(interfaceClass, true);\n            loadProtoClassToCache(key, clazz, methodName);\n        }\n        return requestClassCache.get(key);\n    }", "signature": "Class getReqClass(String service, String methodName)", "full_signature": "public Class getReqClass(String service, String methodName)", "class_method_signature": "ProtostuffHelper.getReqClass(String service, String methodName)", "testcase": false, "constructor": false, "invocations": ["buildMethodKey", "get", "getInterfaceName", "forName", "loadProtoClassToCache", "get"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}