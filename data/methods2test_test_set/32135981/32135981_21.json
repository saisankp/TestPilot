{"test_class": {"identifier": "CharacterOutputTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final PluginLog pluginLog = mock(PluginLog.class);", "modifier": "private final", "type": "PluginLog", "declarator": "pluginLog = mock(PluginLog.class)", "var_name": "pluginLog"}, {"original_string": "private final EchoOutput echoOutput = mock(EchoOutput.class);", "modifier": "private final", "type": "EchoOutput", "declarator": "echoOutput = mock(EchoOutput.class)", "var_name": "echoOutput"}], "file": "echo/src/test/java/echo/CharacterOutputTest.java"}, "test_case": {"identifier": "specialCharactersShouldBeOutput", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void specialCharactersShouldBeOutput() {\n        PluginParameters pluginParameters = new PluginParametersBuilder().setDebug(true).createPluginParameters();\n        CharacterOutput characterOutput = new CharacterOutput(pluginParameters);\n        assertThat(characterOutput.getOutput(\"\\u00f6\\u00e4\\u00e5\\u00d6\\u00c4\\u00c5\"), is(\"[['\u00f6' , 246 ],['\u00e4' , 228 ],['\u00e5' , 229 ],['\u00d6' , 214 ],['\u00c4' , 196 ],['\u00c5' , 197 ]]\"));\n    }", "signature": "void specialCharactersShouldBeOutput()", "full_signature": "@Test public void specialCharactersShouldBeOutput()", "class_method_signature": "CharacterOutputTest.specialCharactersShouldBeOutput()", "testcase": true, "constructor": false, "invocations": ["createPluginParameters", "setDebug", "assertThat", "getOutput", "is"]}, "focal_class": {"identifier": "CharacterOutput", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final boolean writeOutput;", "modifier": "private final", "type": "boolean", "declarator": "writeOutput", "var_name": "writeOutput"}, {"original_string": "private boolean firstCharacter = true;", "modifier": "private", "type": "boolean", "declarator": "firstCharacter = true", "var_name": "firstCharacter"}, {"original_string": "private StringBuilder outputStringBuilder;", "modifier": "private", "type": "StringBuilder", "declarator": "outputStringBuilder", "var_name": "outputStringBuilder"}], "methods": [{"identifier": "CharacterOutput", "parameters": "(PluginParameters pluginParameters)", "modifiers": "public", "return": "", "signature": " CharacterOutput(PluginParameters pluginParameters)", "full_signature": "public  CharacterOutput(PluginParameters pluginParameters)", "class_method_signature": "CharacterOutput.CharacterOutput(PluginParameters pluginParameters)", "testcase": false, "constructor": true}, {"identifier": "getOutput", "parameters": "(String message)", "modifiers": "public", "return": "String", "signature": "String getOutput(String message)", "full_signature": "public String getOutput(String message)", "class_method_signature": "CharacterOutput.getOutput(String message)", "testcase": false, "constructor": false}, {"identifier": "generateOutput", "parameters": "(char[] messageChars)", "modifiers": "private", "return": "void", "signature": "void generateOutput(char[] messageChars)", "full_signature": "private void generateOutput(char[] messageChars)", "class_method_signature": "CharacterOutput.generateOutput(char[] messageChars)", "testcase": false, "constructor": false}, {"identifier": "appendOneCharOutput", "parameters": "(char messageChar)", "modifiers": "private", "return": "void", "signature": "void appendOneCharOutput(char messageChar)", "full_signature": "private void appendOneCharOutput(char messageChar)", "class_method_signature": "CharacterOutput.appendOneCharOutput(char messageChar)", "testcase": false, "constructor": false}, {"identifier": "isWriteOutput", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isWriteOutput()", "full_signature": "public boolean isWriteOutput()", "class_method_signature": "CharacterOutput.isWriteOutput()", "testcase": false, "constructor": false}], "file": "echo/src/main/java/echo/CharacterOutput.java"}, "focal_method": {"identifier": "getOutput", "parameters": "(String message)", "modifiers": "public", "return": "String", "body": "public String getOutput(String message) {\n        if (!writeOutput) {\n            return \"\";\n        }\n        generateOutput(message.toCharArray());\n\n        return outputStringBuilder.toString();\n    }", "signature": "String getOutput(String message)", "full_signature": "public String getOutput(String message)", "class_method_signature": "CharacterOutput.getOutput(String message)", "testcase": false, "constructor": false, "invocations": ["generateOutput", "toCharArray", "toString"]}, "repository": {"repo_id": 32135981, "url": "https://github.com/Ekryd/echo-maven-plugin", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 7, "size": 156, "license": "licensed"}}