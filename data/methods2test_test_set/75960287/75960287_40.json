{"test_class": {"identifier": "ConfigNodeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SIMPLE_STRING_NODE = \"Simple_string_node\";", "modifier": "private static final", "type": "String", "declarator": "SIMPLE_STRING_NODE = \"Simple_string_node\"", "var_name": "SIMPLE_STRING_NODE"}, {"original_string": "private static final String STRING_NODE_WITH_QUOTES = \"String_node_with_quotes\";", "modifier": "private static final", "type": "String", "declarator": "STRING_NODE_WITH_QUOTES = \"String_node_with_quotes\"", "var_name": "STRING_NODE_WITH_QUOTES"}, {"original_string": "private static final String STRING_NODE_WITH_DOUBLE_QUOTES = \"String_node_with_double_quotes\";", "modifier": "private static final", "type": "String", "declarator": "STRING_NODE_WITH_DOUBLE_QUOTES = \"String_node_with_double_quotes\"", "var_name": "STRING_NODE_WITH_DOUBLE_QUOTES"}, {"original_string": "private static final String FIRST_LEVEL = \"1st_level\";", "modifier": "private static final", "type": "String", "declarator": "FIRST_LEVEL = \"1st_level\"", "var_name": "FIRST_LEVEL"}, {"original_string": "private static final String SECOND_LEVEL = \"2nd_level\";", "modifier": "private static final", "type": "String", "declarator": "SECOND_LEVEL = \"2nd_level\"", "var_name": "SECOND_LEVEL"}, {"original_string": "private static final String THIRD_LEVEL = \"3rd_level\";", "modifier": "private static final", "type": "String", "declarator": "THIRD_LEVEL = \"3rd_level\"", "var_name": "THIRD_LEVEL"}, {"original_string": "private ConfigNode testTree;", "modifier": "private", "type": "ConfigNode", "declarator": "testTree", "var_name": "testTree"}], "file": "Plan/common/src/test/java/com/djrapitops/plan/settings/config/ConfigNodeTest.java"}, "test_case": {"identifier": "depthOneIsReturnedCorrectly", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void depthOneIsReturnedCorrectly() {\n        assertEquals(0, testTree.childNodes.get(SIMPLE_STRING_NODE).getNodeDepth());\n    }", "signature": "void depthOneIsReturnedCorrectly()", "full_signature": "@Test void depthOneIsReturnedCorrectly()", "class_method_signature": "ConfigNodeTest.depthOneIsReturnedCorrectly()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getNodeDepth", "get"]}, "focal_class": {"identifier": "ConfigNode", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected final String key;", "modifier": "protected final", "type": "String", "declarator": "key", "var_name": "key"}, {"original_string": "protected ConfigNode parent;", "modifier": "protected", "type": "ConfigNode", "declarator": "parent", "var_name": "parent"}, {"original_string": "protected List<String> nodeOrder;", "modifier": "protected", "type": "List<String>", "declarator": "nodeOrder", "var_name": "nodeOrder"}, {"original_string": "protected final Map<String, ConfigNode> childNodes;", "modifier": "protected final", "type": "Map<String, ConfigNode>", "declarator": "childNodes", "var_name": "childNodes"}, {"original_string": "protected List<String> comment;", "modifier": "protected", "type": "List<String>", "declarator": "comment", "var_name": "comment"}, {"original_string": "protected String value;", "modifier": "protected", "type": "String", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "ConfigNode", "parameters": "(String key, ConfigNode parent, String value)", "modifiers": "public", "return": "", "signature": " ConfigNode(String key, ConfigNode parent, String value)", "full_signature": "public  ConfigNode(String key, ConfigNode parent, String value)", "class_method_signature": "ConfigNode.ConfigNode(String key, ConfigNode parent, String value)", "testcase": false, "constructor": true}, {"identifier": "updateParent", "parameters": "(ConfigNode newParent)", "modifiers": "protected", "return": "void", "signature": "void updateParent(ConfigNode newParent)", "full_signature": "protected void updateParent(ConfigNode newParent)", "class_method_signature": "ConfigNode.updateParent(ConfigNode newParent)", "testcase": false, "constructor": false}, {"identifier": "getNode", "parameters": "(String path)", "modifiers": "public", "return": "Optional<ConfigNode>", "signature": "Optional<ConfigNode> getNode(String path)", "full_signature": "public Optional<ConfigNode> getNode(String path)", "class_method_signature": "ConfigNode.getNode(String path)", "testcase": false, "constructor": false}, {"identifier": "splitPathInTwo", "parameters": "(String path)", "modifiers": "private", "return": "String[]", "signature": "String[] splitPathInTwo(String path)", "full_signature": "private String[] splitPathInTwo(String path)", "class_method_signature": "ConfigNode.splitPathInTwo(String path)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(String path)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(String path)", "full_signature": "public boolean contains(String path)", "class_method_signature": "ConfigNode.contains(String path)", "testcase": false, "constructor": false}, {"identifier": "addNode", "parameters": "(String path)", "modifiers": "public", "return": "ConfigNode", "signature": "ConfigNode addNode(String path)", "full_signature": "public ConfigNode addNode(String path)", "class_method_signature": "ConfigNode.addNode(String path)", "testcase": false, "constructor": false}, {"identifier": "removeNode", "parameters": "(String path)", "modifiers": "public", "return": "boolean", "signature": "boolean removeNode(String path)", "full_signature": "public boolean removeNode(String path)", "class_method_signature": "ConfigNode.removeNode(String path)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void remove()", "full_signature": "public void remove()", "class_method_signature": "ConfigNode.remove()", "testcase": false, "constructor": false}, {"identifier": "addChild", "parameters": "(ConfigNode child)", "modifiers": "protected", "return": "ConfigNode", "signature": "ConfigNode addChild(ConfigNode child)", "full_signature": "protected ConfigNode addChild(ConfigNode child)", "class_method_signature": "ConfigNode.addChild(ConfigNode child)", "testcase": false, "constructor": false}, {"identifier": "removeChild", "parameters": "(ConfigNode child)", "modifiers": "protected", "return": "void", "signature": "void removeChild(ConfigNode child)", "full_signature": "protected void removeChild(ConfigNode child)", "class_method_signature": "ConfigNode.removeChild(ConfigNode child)", "testcase": false, "constructor": false}, {"identifier": "moveChild", "parameters": "(String oldPath, String newPath)", "modifiers": "public", "return": "boolean", "signature": "boolean moveChild(String oldPath, String newPath)", "full_signature": "public boolean moveChild(String oldPath, String newPath)", "class_method_signature": "ConfigNode.moveChild(String oldPath, String newPath)", "testcase": false, "constructor": false}, {"identifier": "getKey", "parameters": "(boolean deep)", "modifiers": "public", "return": "String", "signature": "String getKey(boolean deep)", "full_signature": "public String getKey(boolean deep)", "class_method_signature": "ConfigNode.getKey(boolean deep)", "testcase": false, "constructor": false}, {"identifier": "sort", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void sort()", "full_signature": "public void sort()", "class_method_signature": "ConfigNode.sort()", "testcase": false, "constructor": false}, {"identifier": "reorder", "parameters": "(List<String> newOrder)", "modifiers": "public", "return": "void", "signature": "void reorder(List<String> newOrder)", "full_signature": "public void reorder(List<String> newOrder)", "class_method_signature": "ConfigNode.reorder(List<String> newOrder)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void save()", "full_signature": "public void save()", "class_method_signature": "ConfigNode.save()", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(String path, T value)", "modifiers": "public", "return": "void", "signature": "void set(String path, T value)", "full_signature": "public void set(String path, T value)", "class_method_signature": "ConfigNode.set(String path, T value)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(T value)", "modifiers": "public", "return": "void", "signature": "void set(T value)", "full_signature": "public void set(T value)", "class_method_signature": "ConfigNode.set(T value)", "testcase": false, "constructor": false}, {"identifier": "getComment", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getComment()", "full_signature": "public List<String> getComment()", "class_method_signature": "ConfigNode.getComment()", "testcase": false, "constructor": false}, {"identifier": "setComment", "parameters": "(List<String> comment)", "modifiers": "public", "return": "void", "signature": "void setComment(List<String> comment)", "full_signature": "public void setComment(List<String> comment)", "class_method_signature": "ConfigNode.setComment(List<String> comment)", "testcase": false, "constructor": false}, {"identifier": "getStringList", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getStringList()", "full_signature": "public List<String> getStringList()", "class_method_signature": "ConfigNode.getStringList()", "testcase": false, "constructor": false}, {"identifier": "getInteger", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getInteger()", "full_signature": "public Integer getInteger()", "class_method_signature": "ConfigNode.getInteger()", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long getLong()", "full_signature": "public Long getLong()", "class_method_signature": "ConfigNode.getLong()", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getString()", "full_signature": "public String getString()", "class_method_signature": "ConfigNode.getString()", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getBoolean()", "full_signature": "public boolean getBoolean()", "class_method_signature": "ConfigNode.getBoolean()", "testcase": false, "constructor": false}, {"identifier": "getStringList", "parameters": "(String path)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getStringList(String path)", "full_signature": "public List<String> getStringList(String path)", "class_method_signature": "ConfigNode.getStringList(String path)", "testcase": false, "constructor": false}, {"identifier": "getStringMap", "parameters": "(boolean fullKeys)", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getStringMap(boolean fullKeys)", "full_signature": "public Map<String, String> getStringMap(boolean fullKeys)", "class_method_signature": "ConfigNode.getStringMap(boolean fullKeys)", "testcase": false, "constructor": false}, {"identifier": "getInteger", "parameters": "(String path)", "modifiers": "public", "return": "Integer", "signature": "Integer getInteger(String path)", "full_signature": "public Integer getInteger(String path)", "class_method_signature": "ConfigNode.getInteger(String path)", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(String path)", "modifiers": "public", "return": "Long", "signature": "Long getLong(String path)", "full_signature": "public Long getLong(String path)", "class_method_signature": "ConfigNode.getLong(String path)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(String path)", "modifiers": "public", "return": "String", "signature": "String getString(String path)", "full_signature": "public String getString(String path)", "class_method_signature": "ConfigNode.getString(String path)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(String path)", "modifiers": "public", "return": "boolean", "signature": "boolean getBoolean(String path)", "full_signature": "public boolean getBoolean(String path)", "class_method_signature": "ConfigNode.getBoolean(String path)", "testcase": false, "constructor": false}, {"identifier": "copyMissing", "parameters": "(ConfigNode from)", "modifiers": "public", "return": "void", "signature": "void copyMissing(ConfigNode from)", "full_signature": "public void copyMissing(ConfigNode from)", "class_method_signature": "ConfigNode.copyMissing(ConfigNode from)", "testcase": false, "constructor": false}, {"identifier": "copyAll", "parameters": "(ConfigNode from)", "modifiers": "public", "return": "void", "signature": "void copyAll(ConfigNode from)", "full_signature": "public void copyAll(ConfigNode from)", "class_method_signature": "ConfigNode.copyAll(ConfigNode from)", "testcase": false, "constructor": false}, {"identifier": "getNodeDepth", "parameters": "()", "modifiers": "protected", "return": "int", "signature": "int getNodeDepth()", "full_signature": "protected int getNodeDepth()", "class_method_signature": "ConfigNode.getNodeDepth()", "testcase": false, "constructor": false}, {"identifier": "getParent", "parameters": "()", "modifiers": "public", "return": "ConfigNode", "signature": "ConfigNode getParent()", "full_signature": "public ConfigNode getParent()", "class_method_signature": "ConfigNode.getParent()", "testcase": false, "constructor": false}, {"identifier": "isLeafNode", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isLeafNode()", "full_signature": "public boolean isLeafNode()", "class_method_signature": "ConfigNode.isLeafNode()", "testcase": false, "constructor": false}, {"identifier": "getNodeOrder", "parameters": "()", "modifiers": "protected", "return": "List<String>", "signature": "List<String> getNodeOrder()", "full_signature": "protected List<String> getNodeOrder()", "class_method_signature": "ConfigNode.getNodeOrder()", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "public", "return": "Collection<ConfigNode>", "signature": "Collection<ConfigNode> getChildren()", "full_signature": "public Collection<ConfigNode> getChildren()", "class_method_signature": "ConfigNode.getChildren()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "ConfigNode.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ConfigNode.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ConfigNode.toString()", "testcase": false, "constructor": false}], "file": "Plan/common/src/main/java/com/djrapitops/plan/settings/config/ConfigNode.java"}, "focal_method": {"identifier": "getNodeDepth", "parameters": "()", "modifiers": "protected", "return": "int", "body": "protected int getNodeDepth() {\n        return parent != null ? parent.getNodeDepth() + 1 : -1; // Root node is -1\n    }", "signature": "int getNodeDepth()", "full_signature": "protected int getNodeDepth()", "class_method_signature": "ConfigNode.getNodeDepth()", "testcase": false, "constructor": false, "invocations": ["getNodeDepth"]}, "repository": {"repo_id": 75960287, "url": "https://github.com/plan-player-analytics/Plan", "stars": 172, "created": "12/8/2016 5:34:11 PM +00:00", "updates": "2020-01-27T14:34:49+00:00", "fork": "False", "license": "licensed"}}