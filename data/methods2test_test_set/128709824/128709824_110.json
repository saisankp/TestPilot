{"test_class": {"identifier": "SystemInfoTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/api/src/test/java/com/alipay/sofa/rpc/common/SystemInfoTest.java"}, "test_case": {"identifier": "setLocalHost", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setLocalHost() {\n        String old = SystemInfo.getLocalHost();\n        try {\n            SystemInfo.setLocalHost(\"xxx\");\n            Assert.assertEquals(\"xxx\", SystemInfo.getLocalHost());\n        } finally {\n            SystemInfo.setLocalHost(old);\n        }\n    }", "signature": "void setLocalHost()", "full_signature": "@Test public void setLocalHost()", "class_method_signature": "SystemInfoTest.setLocalHost()", "testcase": true, "constructor": false, "invocations": ["getLocalHost", "setLocalHost", "assertEquals", "getLocalHost", "setLocalHost"]}, "focal_class": {"identifier": "SystemInfo", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static String  LOCALHOST;", "modifier": "private static", "type": "String", "declarator": "LOCALHOST", "var_name": "LOCALHOST"}, {"original_string": "private static String  HOSTMACHINE;", "modifier": "private static", "type": "String", "declarator": "HOSTMACHINE", "var_name": "HOSTMACHINE"}, {"original_string": "private static boolean IS_WINDOWS;", "modifier": "private static", "type": "boolean", "declarator": "IS_WINDOWS", "var_name": "IS_WINDOWS"}, {"original_string": "private static boolean IS_LINUX;", "modifier": "private static", "type": "boolean", "declarator": "IS_LINUX", "var_name": "IS_LINUX"}, {"original_string": "private static boolean IS_MAC;", "modifier": "private static", "type": "boolean", "declarator": "IS_MAC", "var_name": "IS_MAC"}], "methods": [{"identifier": "parseOSName", "parameters": "()", "modifiers": "@VisibleForTesting static", "return": "boolean[]", "signature": "boolean[] parseOSName()", "full_signature": "@VisibleForTesting static boolean[] parseOSName()", "class_method_signature": "SystemInfo.parseOSName()", "testcase": false, "constructor": false}, {"identifier": "isWindows", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isWindows()", "full_signature": "public static boolean isWindows()", "class_method_signature": "SystemInfo.isWindows()", "testcase": false, "constructor": false}, {"identifier": "isLinux", "parameters": "()", "modifiers": "public static", "return": "Boolean", "signature": "Boolean isLinux()", "full_signature": "public static Boolean isLinux()", "class_method_signature": "SystemInfo.isLinux()", "testcase": false, "constructor": false}, {"identifier": "isMac", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isMac()", "full_signature": "public static boolean isMac()", "class_method_signature": "SystemInfo.isMac()", "testcase": false, "constructor": false}, {"identifier": "getCpuCores", "parameters": "()", "modifiers": "public static", "return": "int", "signature": "int getCpuCores()", "full_signature": "public static int getCpuCores()", "class_method_signature": "SystemInfo.getCpuCores()", "testcase": false, "constructor": false}, {"identifier": "getLocalHost", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getLocalHost()", "full_signature": "public static String getLocalHost()", "class_method_signature": "SystemInfo.getLocalHost()", "testcase": false, "constructor": false}, {"identifier": "setLocalHost", "parameters": "(String localhost)", "modifiers": "public static", "return": "void", "signature": "void setLocalHost(String localhost)", "full_signature": "public static void setLocalHost(String localhost)", "class_method_signature": "SystemInfo.setLocalHost(String localhost)", "testcase": false, "constructor": false}, {"identifier": "parseHostMachine", "parameters": "()", "modifiers": "@VisibleForTesting static", "return": "String", "signature": "String parseHostMachine()", "full_signature": "@VisibleForTesting static String parseHostMachine()", "class_method_signature": "SystemInfo.parseHostMachine()", "testcase": false, "constructor": false}, {"identifier": "getHostMachine", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getHostMachine()", "full_signature": "public static String getHostMachine()", "class_method_signature": "SystemInfo.getHostMachine()", "testcase": false, "constructor": false}], "file": "core/api/src/main/java/com/alipay/sofa/rpc/common/SystemInfo.java"}, "focal_method": {"identifier": "setLocalHost", "parameters": "(String localhost)", "modifiers": "public static", "return": "void", "body": "public static void setLocalHost(String localhost) {\n        LOCALHOST = localhost;\n    }", "signature": "void setLocalHost(String localhost)", "full_signature": "public static void setLocalHost(String localhost)", "class_method_signature": "SystemInfo.setLocalHost(String localhost)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}