{"test_class": {"identifier": "VariantListBuilderImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private VariantListBuilderImpl variantListBuilder;", "modifier": "private", "type": "VariantListBuilderImpl", "declarator": "variantListBuilder", "var_name": "variantListBuilder"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/VariantListBuilderImplTest.java"}, "test_case": {"identifier": "throwsExceptionOnAddIfNotAtLeastOneMediaTypeLanguageOrEncodingSet", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n    public void throwsExceptionOnAddIfNotAtLeastOneMediaTypeLanguageOrEncodingSet() {\n        variantListBuilder.add();\n    }", "signature": "void throwsExceptionOnAddIfNotAtLeastOneMediaTypeLanguageOrEncodingSet()", "full_signature": "@Test(expected = IllegalStateException.class) public void throwsExceptionOnAddIfNotAtLeastOneMediaTypeLanguageOrEncodingSet()", "class_method_signature": "VariantListBuilderImplTest.throwsExceptionOnAddIfNotAtLeastOneMediaTypeLanguageOrEncodingSet()", "testcase": true, "constructor": false, "invocations": ["add"]}, "focal_class": {"identifier": "VariantListBuilderImpl", "superclass": "extends VariantListBuilder", "interfaces": "", "fields": [{"original_string": "private final List<Locale> languages;", "modifier": "private final", "type": "List<Locale>", "declarator": "languages", "var_name": "languages"}, {"original_string": "private final List<String> encodings;", "modifier": "private final", "type": "List<String>", "declarator": "encodings", "var_name": "encodings"}, {"original_string": "private final List<MediaType> mediaTypes;", "modifier": "private final", "type": "List<MediaType>", "declarator": "mediaTypes", "var_name": "mediaTypes"}, {"original_string": "private List<Variant> variants;", "modifier": "private", "type": "List<Variant>", "declarator": "variants", "var_name": "variants"}], "methods": [{"identifier": "VariantListBuilderImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " VariantListBuilderImpl()", "full_signature": "public  VariantListBuilderImpl()", "class_method_signature": "VariantListBuilderImpl.VariantListBuilderImpl()", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "()", "modifiers": "@Override public", "return": "VariantListBuilder", "signature": "VariantListBuilder add()", "full_signature": "@Override public VariantListBuilder add()", "class_method_signature": "VariantListBuilderImpl.add()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "@Override public", "return": "List<Variant>", "signature": "List<Variant> build()", "full_signature": "@Override public List<Variant> build()", "class_method_signature": "VariantListBuilderImpl.build()", "testcase": false, "constructor": false}, {"identifier": "encodings", "parameters": "(String... encodings)", "modifiers": "@Override public", "return": "VariantListBuilder", "signature": "VariantListBuilder encodings(String... encodings)", "full_signature": "@Override public VariantListBuilder encodings(String... encodings)", "class_method_signature": "VariantListBuilderImpl.encodings(String... encodings)", "testcase": false, "constructor": false}, {"identifier": "languages", "parameters": "(Locale... languages)", "modifiers": "@Override public", "return": "VariantListBuilder", "signature": "VariantListBuilder languages(Locale... languages)", "full_signature": "@Override public VariantListBuilder languages(Locale... languages)", "class_method_signature": "VariantListBuilderImpl.languages(Locale... languages)", "testcase": false, "constructor": false}, {"identifier": "mediaTypes", "parameters": "(MediaType... mediaTypes)", "modifiers": "@Override public", "return": "VariantListBuilder", "signature": "VariantListBuilder mediaTypes(MediaType... mediaTypes)", "full_signature": "@Override public VariantListBuilder mediaTypes(MediaType... mediaTypes)", "class_method_signature": "VariantListBuilderImpl.mediaTypes(MediaType... mediaTypes)", "testcase": false, "constructor": false}, {"identifier": "clearAll", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void clearAll()", "full_signature": "private void clearAll()", "class_method_signature": "VariantListBuilderImpl.clearAll()", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/VariantListBuilderImpl.java"}, "focal_method": {"identifier": "add", "parameters": "()", "modifiers": "@Override public", "return": "VariantListBuilder", "body": "@Override\n    public VariantListBuilder add() {\n        checkState(!(mediaTypes.isEmpty() && languages.isEmpty() && encodings.isEmpty()),\n                   \"At least one media type, language or encoding must be set\");\n\n        if (variants == null) {\n            variants = new ArrayList<>();\n        }\n\n        Iterator<MediaType> mediaTypesIterator = mediaTypes.iterator();\n        do {\n            MediaType mediaType = mediaTypesIterator.hasNext() ? mediaTypesIterator.next() : null;\n            Iterator<Locale> languagesIterator = languages.iterator();\n            do {\n                Locale language = languagesIterator.hasNext() ? languagesIterator.next() : null;\n                Iterator<String> encodingsIterator = encodings.iterator();\n                do {\n                    String encoding = encodingsIterator.hasNext() ? encodingsIterator.next() : null;\n                    variants.add(new Variant(mediaType, language, encoding));\n                } while (encodingsIterator.hasNext());\n            } while (languagesIterator.hasNext());\n        } while (mediaTypesIterator.hasNext());\n\n        clearAll();\n        return this;\n    }", "signature": "VariantListBuilder add()", "full_signature": "@Override public VariantListBuilder add()", "class_method_signature": "VariantListBuilderImpl.add()", "testcase": false, "constructor": false, "invocations": ["checkState", "isEmpty", "isEmpty", "isEmpty", "iterator", "hasNext", "next", "iterator", "hasNext", "next", "iterator", "hasNext", "next", "add", "hasNext", "hasNext", "hasNext", "clearAll"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}