{"test_class": {"identifier": "CourseSynchronizerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long NOT_EXISTING_SAP_COURSE_ID = 4455;", "modifier": "private static final", "type": "long", "declarator": "NOT_EXISTING_SAP_COURSE_ID = 4455", "var_name": "NOT_EXISTING_SAP_COURSE_ID"}, {"original_string": "private CourseSynchronizer courseSynchronizerTestObject;", "modifier": "private", "type": "CourseSynchronizer", "declarator": "courseSynchronizerTestObject", "var_name": "courseSynchronizerTestObject"}], "file": "olat7.8/src/test/java/org/olat/lms/core/course/campus/impl/syncer/CourseSynchronizerTest.java"}, "test_case": {"identifier": "synchronizeCourse_CouldNotFoundCourse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void synchronizeCourse_CouldNotFoundCourse() {\n        DaoManager daoManagerMock = mock(DaoManager.class);\n        when(daoManagerMock.getSapCampusCourse(NOT_EXISTING_SAP_COURSE_ID)).thenReturn(null);\n        // courseSynchronizerTestObject.campusDaoManager = daoManagerMock;\n\n        SynchronizedGroupStatistic statistic = courseSynchronizerTestObject.synchronizeCourse(null);\n        assertNotNull(statistic);\n    }", "signature": "void synchronizeCourse_CouldNotFoundCourse()", "full_signature": "@Test public void synchronizeCourse_CouldNotFoundCourse()", "class_method_signature": "CourseSynchronizerTest.synchronizeCourse_CouldNotFoundCourse()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getSapCampusCourse", "synchronizeCourse", "assertNotNull"]}, "focal_class": {"identifier": "CourseSynchronizer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerHelper.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerHelper.getLogger()", "var_name": "log"}, {"original_string": "@Autowired\n    CampusCourseGroupSynchronizer courseGroupSynchronizer;", "modifier": "@Autowired", "type": "CampusCourseGroupSynchronizer", "declarator": "courseGroupSynchronizer", "var_name": "courseGroupSynchronizer"}, {"original_string": "@Autowired\n    DaoManager campusDaoManager;", "modifier": "@Autowired", "type": "DaoManager", "declarator": "campusDaoManager", "var_name": "campusDaoManager"}, {"original_string": "@Autowired\n    CourseAttributeSynchronizer courseAttributeSynchronizer;", "modifier": "@Autowired", "type": "CourseAttributeSynchronizer", "declarator": "courseAttributeSynchronizer", "var_name": "courseAttributeSynchronizer"}, {"original_string": "@Autowired\n    CampusConfiguration campusConfiguration;", "modifier": "@Autowired", "type": "CampusConfiguration", "declarator": "campusConfiguration", "var_name": "campusConfiguration"}], "methods": [{"identifier": "synchronizeCourse", "parameters": "(CampusCourseImportTO sapCourse)", "modifiers": "public", "return": "SynchronizedGroupStatistic", "signature": "SynchronizedGroupStatistic synchronizeCourse(CampusCourseImportTO sapCourse)", "full_signature": "public SynchronizedGroupStatistic synchronizeCourse(CampusCourseImportTO sapCourse)", "class_method_signature": "CourseSynchronizer.synchronizeCourse(CampusCourseImportTO sapCourse)", "testcase": false, "constructor": false}, {"identifier": "commitDBImplTransaction", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void commitDBImplTransaction()", "full_signature": "private void commitDBImplTransaction()", "class_method_signature": "CourseSynchronizer.commitDBImplTransaction()", "testcase": false, "constructor": false}], "file": "olat7.8/src/main/java/org/olat/lms/core/course/campus/impl/syncer/CourseSynchronizer.java"}, "focal_method": {"identifier": "synchronizeCourse", "parameters": "(CampusCourseImportTO sapCourse)", "modifiers": "public", "return": "SynchronizedGroupStatistic", "body": "public SynchronizedGroupStatistic synchronizeCourse(CampusCourseImportTO sapCourse) {\n        if (sapCourse != null) {\n            long resourceableId = sapCourse.getOlatResourceableId();\n            log.debug(\"synchronizeCourse sapCourseId=\" + sapCourse.getSapCourseId() + \"  resourceableId=\" + resourceableId);\n            ICourse course = CourseFactory.loadCourse(resourceableId);\n            commitDBImplTransaction();\n            log.debug(\"synchronizeCourse start for course=\" + course.getCourseTitle());\n            log.debug(\"synchronizeCourse Lecturer size=\" + sapCourse.getLecturers().size());\n            log.debug(\"synchronizeCourse Participants size=\" + sapCourse.getParticipants().size());\n\n            courseGroupSynchronizer.addAllLecturesAsOwner(course, sapCourse.getLecturers());\n            // SynchronizedGroupStatistic groupStatistic = courseGroupSynchronizer.synchronizeCourseGroupsForStudentsOnly(course, sapCourse);\n            SynchronizedGroupStatistic groupStatistic = courseGroupSynchronizer.synchronizeCourseGroups(course, sapCourse);\n            commitDBImplTransaction();\n            log.debug(\"synchronizeCourse statistic=\" + groupStatistic);\n            if (campusConfiguration.isSynchronizeTitleAndDescriptionEnabled()) {\n                log.debug(\"SynchronizeTitleAndDescription is enabled\");\n                courseAttributeSynchronizer.synchronizeTitleAndDescription(sapCourse.getSapCourseId(), sapCourse);\n                commitDBImplTransaction();\n            }\n            return groupStatistic;\n        } else {\n            return SynchronizedGroupStatistic.createEmptyStatistic();\n        }\n    }", "signature": "SynchronizedGroupStatistic synchronizeCourse(CampusCourseImportTO sapCourse)", "full_signature": "public SynchronizedGroupStatistic synchronizeCourse(CampusCourseImportTO sapCourse)", "class_method_signature": "CourseSynchronizer.synchronizeCourse(CampusCourseImportTO sapCourse)", "testcase": false, "constructor": false, "invocations": ["getOlatResourceableId", "debug", "getSapCourseId", "loadCourse", "commitDBImplTransaction", "debug", "getCourseTitle", "debug", "size", "getLecturers", "debug", "size", "getParticipants", "addAllLecturesAsOwner", "getLecturers", "synchronizeCourseGroups", "commitDBImplTransaction", "debug", "isSynchronizeTitleAndDescriptionEnabled", "debug", "synchronizeTitleAndDescription", "getSapCourseId", "commitDBImplTransaction", "createEmptyStatistic"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}