{"test_class": {"identifier": "OidUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "module/com.sandpolis.core.foundation/src/test/java/com/sandpolis/core/foundation/util/OidUtilTest.java"}, "test_case": {"identifier": "testComputeCollectionTag", "parameters": "()", "modifiers": "@Test @DisplayName(\"Compute collection tags\")", "return": "void", "body": "@Test\n\t@DisplayName(\"Compute collection tags\")\n\tvoid testComputeCollectionTag() {\n\t\tassertEquals(OidUtil.OTYPE_COLLECTION, OidUtil.getOidType(OidUtil.computeCollectionTag(12)));\n\t}", "signature": "void testComputeCollectionTag()", "full_signature": "@Test @DisplayName(\"Compute collection tags\") void testComputeCollectionTag()", "class_method_signature": "OidUtilTest.testComputeCollectionTag()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getOidType", "computeCollectionTag"]}, "focal_class": {"identifier": "OidUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int OFFSET_OTYPE = 0;", "modifier": "public static final", "type": "int", "declarator": "OFFSET_OTYPE = 0", "var_name": "OFFSET_OTYPE"}, {"original_string": "public static final int LENGTH_OTYPE = 2;", "modifier": "public static final", "type": "int", "declarator": "LENGTH_OTYPE = 2", "var_name": "LENGTH_OTYPE"}, {"original_string": "public static final int OTYPE_ATTRIBUTE = 2;", "modifier": "public static final", "type": "int", "declarator": "OTYPE_ATTRIBUTE = 2", "var_name": "OTYPE_ATTRIBUTE"}, {"original_string": "public static final int OTYPE_COLLECTION = 1;", "modifier": "public static final", "type": "int", "declarator": "OTYPE_COLLECTION = 1", "var_name": "OTYPE_COLLECTION"}, {"original_string": "public static final int OTYPE_DOCUMENT = 0;", "modifier": "public static final", "type": "int", "declarator": "OTYPE_DOCUMENT = 0", "var_name": "OTYPE_DOCUMENT"}, {"original_string": "public static final int OFFSET_ATYPE = OFFSET_OTYPE + LENGTH_OTYPE;", "modifier": "public static final", "type": "int", "declarator": "OFFSET_ATYPE = OFFSET_OTYPE + LENGTH_OTYPE", "var_name": "OFFSET_ATYPE"}, {"original_string": "public static final int LENGTH_ATYPE = 5;", "modifier": "public static final", "type": "int", "declarator": "LENGTH_ATYPE = 5", "var_name": "LENGTH_ATYPE"}, {"original_string": "public static final int ATYPE_BOOLEAN = 0;", "modifier": "public static final", "type": "int", "declarator": "ATYPE_BOOLEAN = 0", "var_name": "ATYPE_BOOLEAN"}, {"original_string": "public static final int ATYPE_BYTES = 1;", "modifier": "public static final", "type": "int", "declarator": "ATYPE_BYTES = 1", "var_name": "ATYPE_BYTES"}, {"original_string": "public static final int ATYPE_DOUBLE = 2;", "modifier": "public static final", "type": "int", "declarator": "ATYPE_DOUBLE = 2", "var_name": "ATYPE_DOUBLE"}, {"original_string": "public static final int ATYPE_INSTANCEFLAVOR = 3;", "modifier": "public static final", "type": "int", "declarator": "ATYPE_INSTANCEFLAVOR = 3", "var_name": "ATYPE_INSTANCEFLAVOR"}, {"original_string": "public static final int ATYPE_INSTANCETYPE = 4;", "modifier": "public static final", "type": "int", "declarator": "ATYPE_INSTANCETYPE = 4", "var_name": "ATYPE_INSTANCETYPE"}, {"original_string": "public static final int ATYPE_INTEGER = 5;", "modifier": "public static final", "type": "int", "declarator": "ATYPE_INTEGER = 5", "var_name": "ATYPE_INTEGER"}, {"original_string": "public static final int ATYPE_LONG = 6;", "modifier": "public static final", "type": "int", "declarator": "ATYPE_LONG = 6", "var_name": "ATYPE_LONG"}, {"original_string": "public static final int ATYPE_OID = 7;", "modifier": "public static final", "type": "int", "declarator": "ATYPE_OID = 7", "var_name": "ATYPE_OID"}, {"original_string": "public static final int ATYPE_OSTYPE = 8;", "modifier": "public static final", "type": "int", "declarator": "ATYPE_OSTYPE = 8", "var_name": "ATYPE_OSTYPE"}, {"original_string": "public static final int ATYPE_STRING = 9;", "modifier": "public static final", "type": "int", "declarator": "ATYPE_STRING = 9", "var_name": "ATYPE_STRING"}, {"original_string": "public static final int ATYPE_X509CERTIFICATE = 10;", "modifier": "public static final", "type": "int", "declarator": "ATYPE_X509CERTIFICATE = 10", "var_name": "ATYPE_X509CERTIFICATE"}, {"original_string": "public static final int OFFSET_SINGULARITY = OFFSET_ATYPE + LENGTH_ATYPE;", "modifier": "public static final", "type": "int", "declarator": "OFFSET_SINGULARITY = OFFSET_ATYPE + LENGTH_ATYPE", "var_name": "OFFSET_SINGULARITY"}, {"original_string": "public static final int LENGTH_SINGULARITY = 1;", "modifier": "public static final", "type": "int", "declarator": "LENGTH_SINGULARITY = 1", "var_name": "LENGTH_SINGULARITY"}], "methods": [{"identifier": "computeAttributeTag", "parameters": "(long raw, String type, boolean singular)", "modifiers": "public static", "return": "long", "signature": "long computeAttributeTag(long raw, String type, boolean singular)", "full_signature": "public static long computeAttributeTag(long raw, String type, boolean singular)", "class_method_signature": "OidUtil.computeAttributeTag(long raw, String type, boolean singular)", "testcase": false, "constructor": false}, {"identifier": "computeAttributeTag", "parameters": "(long raw, int type, boolean singular)", "modifiers": "public static", "return": "long", "signature": "long computeAttributeTag(long raw, int type, boolean singular)", "full_signature": "public static long computeAttributeTag(long raw, int type, boolean singular)", "class_method_signature": "OidUtil.computeAttributeTag(long raw, int type, boolean singular)", "testcase": false, "constructor": false}, {"identifier": "computeCollectionTag", "parameters": "(long raw)", "modifiers": "public static", "return": "long", "signature": "long computeCollectionTag(long raw)", "full_signature": "public static long computeCollectionTag(long raw)", "class_method_signature": "OidUtil.computeCollectionTag(long raw)", "testcase": false, "constructor": false}, {"identifier": "computeDocumentTag", "parameters": "(long raw)", "modifiers": "public static", "return": "long", "signature": "long computeDocumentTag(long raw)", "full_signature": "public static long computeDocumentTag(long raw)", "class_method_signature": "OidUtil.computeDocumentTag(long raw)", "testcase": false, "constructor": false}, {"identifier": "getAttributeType", "parameters": "(long tag)", "modifiers": "public static", "return": "int", "signature": "int getAttributeType(long tag)", "full_signature": "public static int getAttributeType(long tag)", "class_method_signature": "OidUtil.getAttributeType(long tag)", "testcase": false, "constructor": false}, {"identifier": "getOidType", "parameters": "(long tag)", "modifiers": "public static", "return": "int", "signature": "int getOidType(long tag)", "full_signature": "public static int getOidType(long tag)", "class_method_signature": "OidUtil.getOidType(long tag)", "testcase": false, "constructor": false}, {"identifier": "isSingular", "parameters": "(long tag)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSingular(long tag)", "full_signature": "public static boolean isSingular(long tag)", "class_method_signature": "OidUtil.isSingular(long tag)", "testcase": false, "constructor": false}, {"identifier": "uuidToTag", "parameters": "(String uuid)", "modifiers": "public static", "return": "long", "signature": "long uuidToTag(String uuid)", "full_signature": "public static long uuidToTag(String uuid)", "class_method_signature": "OidUtil.uuidToTag(String uuid)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(long base, int offset, int length, long value)", "modifiers": "private static", "return": "long", "signature": "long encode(long base, int offset, int length, long value)", "full_signature": "private static long encode(long base, int offset, int length, long value)", "class_method_signature": "OidUtil.encode(long base, int offset, int length, long value)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(long base, int offset, int length)", "modifiers": "private static", "return": "int", "signature": "int decode(long base, int offset, int length)", "full_signature": "private static int decode(long base, int offset, int length)", "class_method_signature": "OidUtil.decode(long base, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "OidUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " OidUtil()", "full_signature": "private  OidUtil()", "class_method_signature": "OidUtil.OidUtil()", "testcase": false, "constructor": true}], "file": "module/com.sandpolis.core.foundation/src/main/java/com/sandpolis/core/foundation/util/OidUtil.java"}, "focal_method": {"identifier": "computeCollectionTag", "parameters": "(long raw)", "modifiers": "public static", "return": "long", "body": "public static long computeCollectionTag(long raw) {\n\t\treturn encode(raw, OFFSET_OTYPE, LENGTH_OTYPE, OTYPE_COLLECTION);\n\t}", "signature": "long computeCollectionTag(long raw)", "full_signature": "public static long computeCollectionTag(long raw)", "class_method_signature": "OidUtil.computeCollectionTag(long raw)", "testcase": false, "constructor": false, "invocations": ["encode"]}, "repository": {"repo_id": 100069523, "url": "https://github.com/Subterranean-Security/Sandpolis", "stars": 25, "created": "8/11/2017 8:55:30 PM +00:00", "updates": "2020-01-27T01:41:01+00:00", "fork": "False", "license": "licensed"}}