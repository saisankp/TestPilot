{"test_class": {"identifier": "MVELSafeHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static TestSecurityManager tsm;", "modifier": "private static", "type": "TestSecurityManager", "declarator": "tsm", "var_name": "tsm"}], "file": "drools-mvel/src/test/java/org/drools/mvel/MVELSafeHelperTest.java"}, "test_case": {"identifier": "testReflectionAttack", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReflectionAttack() throws Exception {\n        String setup = \"java.lang.reflect.Field field = org.drools.core.util.MVELSafeHelper.getDeclaredField(\\\"evaluator\\\");\\n\"\n                + \"System.out.println(field);\\n\"  \n                + \"field.setAccessible(true);\\n\"  \n                + \"field.set(null, \\\"new org.drools.core.util.MVELSafeHelper.RawMVELEvaluator()\\\");\";\n        try {\n            Assert.assertEquals( SafeMVELEvaluator.class.getName(), MVELSafeHelper.getEvaluator().getClass().getName() );\n            MVELSafeHelper.getEvaluator().eval(setup, new HashMap<String,Object>());\n            Assert.fail(\"Should have raised an AccessControlException\");\n        } catch (PropertyAccessException e) {\n            // test succeeded. the policy in place prevented the rule from executing field.setAccessible().\n            //e.printStackTrace();\n        }\n    }", "signature": "void testReflectionAttack()", "full_signature": "@Test public void testReflectionAttack()", "class_method_signature": "MVELSafeHelperTest.testReflectionAttack()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getName", "getName", "getClass", "getEvaluator", "eval", "getEvaluator", "fail"]}, "focal_class": {"identifier": "MVELSafeHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "MVELSafeHelper", "parameters": "()", "modifiers": "private", "return": "", "signature": " MVELSafeHelper()", "full_signature": "private  MVELSafeHelper()", "class_method_signature": "MVELSafeHelper.MVELSafeHelper()", "testcase": false, "constructor": true}, {"identifier": "getEvaluator", "parameters": "()", "modifiers": "public static", "return": "MVELEvaluator", "signature": "MVELEvaluator getEvaluator()", "full_signature": "public static MVELEvaluator getEvaluator()", "class_method_signature": "MVELSafeHelper.getEvaluator()", "testcase": false, "constructor": false}], "file": "drools-mvel/src/main/java/org/drools/mvel/MVELSafeHelper.java"}, "focal_method": {"identifier": "getEvaluator", "parameters": "()", "modifiers": "public static", "return": "MVELEvaluator", "body": "public static MVELEvaluator getEvaluator() {\n        return MVELEvaluatorHolder.evaluator;\n    }", "signature": "MVELEvaluator getEvaluator()", "full_signature": "public static MVELEvaluator getEvaluator()", "class_method_signature": "MVELSafeHelper.getEvaluator()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}