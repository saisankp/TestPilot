{"test_class": {"identifier": "RouterProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String BYPASS_VALUE = \"WilmaBypass=true\";", "modifier": "private static final", "type": "String", "declarator": "BYPASS_VALUE = \"WilmaBypass=true\"", "var_name": "BYPASS_VALUE"}, {"original_string": "@Mock\n    private WilmaHttpRequest request;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private Router router;", "modifier": "@Mock\n    private", "type": "Router", "declarator": "router", "var_name": "router"}, {"original_string": "@InjectMocks\n    private RouterProcessor underTest;", "modifier": "@InjectMocks\n    private", "type": "RouterProcessor", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-core/src/test/java/com/epam/wilma/core/processor/entity/RouterProcessorTest.java"}, "test_case": {"identifier": "testProcessShouldWhenByPassExistsInHeaderNameAndValueShouldNotRedirectRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcessShouldWhenByPassExistsInHeaderNameAndValueShouldNotRedirectRequest() throws ApplicationException {\n        //GIVEN in setUp\n        Map<String, String> headers = new HashMap<>();\n        headers.put(\"1\", \"1\");\n        headers.put(BYPASS_VALUE, BYPASS_VALUE);\n        given(request.getHeaders()).willReturn(headers);\n        //WHEN\n        underTest.process(request);\n        //THEN\n        verify(router, never()).reroute(request);\n    }", "signature": "void testProcessShouldWhenByPassExistsInHeaderNameAndValueShouldNotRedirectRequest()", "full_signature": "@Test public void testProcessShouldWhenByPassExistsInHeaderNameAndValueShouldNotRedirectRequest()", "class_method_signature": "RouterProcessorTest.testProcessShouldWhenByPassExistsInHeaderNameAndValueShouldNotRedirectRequest()", "testcase": true, "constructor": false, "invocations": ["put", "put", "willReturn", "given", "getHeaders", "process", "reroute", "verify", "never"]}, "focal_class": {"identifier": "RouterProcessor", "superclass": "extends ProcessorBase", "interfaces": "", "fields": [{"original_string": "private static final String BYPASS_VALUE = \"WilmaBypass=true\";", "modifier": "private static final", "type": "String", "declarator": "BYPASS_VALUE = \"WilmaBypass=true\"", "var_name": "BYPASS_VALUE"}, {"original_string": "@Autowired\n    private Router router;", "modifier": "@Autowired\n    private", "type": "Router", "declarator": "router", "var_name": "router"}], "methods": [{"identifier": "process", "parameters": "(final WilmaHttpEntity entity)", "modifiers": "@Override public", "return": "void", "signature": "void process(final WilmaHttpEntity entity)", "full_signature": "@Override public void process(final WilmaHttpEntity entity)", "class_method_signature": "RouterProcessor.process(final WilmaHttpEntity entity)", "testcase": false, "constructor": false}, {"identifier": "isByPassPresentInHeader", "parameters": "(final Map<String, String> headers)", "modifiers": "private", "return": "boolean", "signature": "boolean isByPassPresentInHeader(final Map<String, String> headers)", "full_signature": "private boolean isByPassPresentInHeader(final Map<String, String> headers)", "class_method_signature": "RouterProcessor.isByPassPresentInHeader(final Map<String, String> headers)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-core/src/main/java/com/epam/wilma/core/processor/entity/RouterProcessor.java"}, "focal_method": {"identifier": "process", "parameters": "(final WilmaHttpEntity entity)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void process(final WilmaHttpEntity entity) throws ApplicationException {\n        WilmaHttpRequest request = (WilmaHttpRequest) entity;\n        boolean bypassWilma = isByPassPresentInHeader(request.getHeaders());\n        if (!bypassWilma && !request.isRerouted()) {\n            router.reroute(request);\n        }\n    }", "signature": "void process(final WilmaHttpEntity entity)", "full_signature": "@Override public void process(final WilmaHttpEntity entity)", "class_method_signature": "RouterProcessor.process(final WilmaHttpEntity entity)", "testcase": false, "constructor": false, "invocations": ["isByPassPresentInHeader", "getHeaders", "isRerouted", "reroute"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}