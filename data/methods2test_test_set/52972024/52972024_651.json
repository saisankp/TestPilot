{"test_class": {"identifier": "GetAsyncOperationActorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GetAsyncOperationActor actor;", "modifier": "private", "type": "GetAsyncOperationActor", "declarator": "actor", "var_name": "actor"}, {"original_string": "private GetAsyncOperationMessage message;", "modifier": "private", "type": "GetAsyncOperationMessage", "declarator": "message", "var_name": "message"}, {"original_string": "private IAsyncOperationCollection collection;", "modifier": "private", "type": "IAsyncOperationCollection", "declarator": "collection", "var_name": "collection"}], "file": "CommonFeatures/AsyncOperations/GetAsyncOperationActor/src/test/java/info/smart_tools/smartactors/async_operations/get_async_operation/GetAsyncOperationActorTest.java"}, "test_case": {"identifier": "ShouldReadOperationByToken", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void ShouldReadOperationByToken()\n        throws ReadValueException, GetAsyncOperationActorException, GetAsyncOperationException, ChangeValueException {\n\n        String token = \"token\";\n        when(message.getToken()).thenReturn(token);\n        IObject asyncOperation = mock(IObject.class);\n        when(collection.getAsyncOperation(token)).thenReturn(asyncOperation);\n\n        actor.getOperation(message);\n\n        verify(message).setAsyncOperation(asyncOperation);\n    }", "signature": "void ShouldReadOperationByToken()", "full_signature": "@Test public void ShouldReadOperationByToken()", "class_method_signature": "GetAsyncOperationActorTest.ShouldReadOperationByToken()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getToken", "mock", "thenReturn", "when", "getAsyncOperation", "getOperation", "setAsyncOperation", "verify"]}, "focal_class": {"identifier": "GetAsyncOperationActor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IAsyncOperationCollection collection;", "modifier": "private", "type": "IAsyncOperationCollection", "declarator": "collection", "var_name": "collection"}], "methods": [{"identifier": "GetAsyncOperationActor", "parameters": "(final IObject params)", "modifiers": "public", "return": "", "signature": " GetAsyncOperationActor(final IObject params)", "full_signature": "public  GetAsyncOperationActor(final IObject params)", "class_method_signature": "GetAsyncOperationActor.GetAsyncOperationActor(final IObject params)", "testcase": false, "constructor": true}, {"identifier": "getOperation", "parameters": "(final GetAsyncOperationMessage message)", "modifiers": "public", "return": "void", "signature": "void getOperation(final GetAsyncOperationMessage message)", "full_signature": "public void getOperation(final GetAsyncOperationMessage message)", "class_method_signature": "GetAsyncOperationActor.getOperation(final GetAsyncOperationMessage message)", "testcase": false, "constructor": false}], "file": "CommonFeatures/AsyncOperations/GetAsyncOperationActor/src/main/java/info/smart_tools/smartactors/async_operations/get_async_operation/GetAsyncOperationActor.java"}, "focal_method": {"identifier": "getOperation", "parameters": "(final GetAsyncOperationMessage message)", "modifiers": "public", "return": "void", "body": "public void getOperation(final GetAsyncOperationMessage message) throws GetAsyncOperationActorException {\n\n        try {\n            String token = message.getToken();\n            IObject asyncOperation = collection.getAsyncOperation(token);\n            if (asyncOperation == null) {\n                throw new GetAsyncOperationActorException(\"Asynchronous operation by token \" + token + \" is null\");\n            }\n            message.setAsyncOperation(asyncOperation);\n        } catch (ChangeValueException | GetAsyncOperationException | ReadValueException e) {\n            throw new GetAsyncOperationActorException(\"Can't get async operation by token.\", e);\n        }\n    }", "signature": "void getOperation(final GetAsyncOperationMessage message)", "full_signature": "public void getOperation(final GetAsyncOperationMessage message)", "class_method_signature": "GetAsyncOperationActor.getOperation(final GetAsyncOperationMessage message)", "testcase": false, "constructor": false, "invocations": ["getToken", "getAsyncOperation", "setAsyncOperation"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}