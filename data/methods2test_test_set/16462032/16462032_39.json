{"test_class": {"identifier": "PathUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "mucommander-commons-file/src/test/java/com/mucommander/commons/file/util/PathUtilsTest.java"}, "test_case": {"identifier": "testGetDepth", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetDepth() {\n        assert 0 == PathUtils.getDepth(\"/\", \"/\");\n        assert 0 == PathUtils.getDepth(\"\", \"/\");\n        assert 1 == PathUtils.getDepth(\"/home\", \"/\");\n        assert 1 == PathUtils.getDepth(\"/home/\", \"/\");\n        assert 2 == PathUtils.getDepth(\"/home/maxence\", \"/\");\n        assert 2 == PathUtils.getDepth(\"/home/maxence/\", \"/\");\n\n        assert 1 == PathUtils.getDepth(\"/home/maxence\", \"\\\\\");\n        assert 1 == PathUtils.getDepth(\"C:\", \"\\\\\"); \n        assert 1 == PathUtils.getDepth(\"C:\\\\\", \"\\\\\");\n        assert 2 == PathUtils.getDepth(\"C:\\\\home\", \"\\\\\");\n        assert 2 == PathUtils.getDepth(\"C:\\\\home\\\\\", \"\\\\\");\n        assert 3 == PathUtils.getDepth(\"C:\\\\home\\\\maxence\", \"\\\\\");\n        assert 3 == PathUtils.getDepth(\"C:\\\\home\\\\maxence\\\\\", \"\\\\\");\n    }", "signature": "void testGetDepth()", "full_signature": "@Test public void testGetDepth()", "class_method_signature": "PathUtilsTest.testGetDepth()", "testcase": true, "constructor": false, "invocations": ["getDepth", "getDepth", "getDepth", "getDepth", "getDepth", "getDepth", "getDepth", "getDepth", "getDepth", "getDepth", "getDepth", "getDepth", "getDepth"]}, "focal_class": {"identifier": "PathUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(PathUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(PathUtils.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "resolveDestination", "parameters": "(String destPath, AbstractFile baseFolder)", "modifiers": "public static", "return": "ResolvedDestination", "signature": "ResolvedDestination resolveDestination(String destPath, AbstractFile baseFolder)", "full_signature": "public static ResolvedDestination resolveDestination(String destPath, AbstractFile baseFolder)", "class_method_signature": "PathUtils.resolveDestination(String destPath, AbstractFile baseFolder)", "testcase": false, "constructor": false}, {"identifier": "removeLeadingSeparator", "parameters": "(String path)", "modifiers": "public static", "return": "String", "signature": "String removeLeadingSeparator(String path)", "full_signature": "public static String removeLeadingSeparator(String path)", "class_method_signature": "PathUtils.removeLeadingSeparator(String path)", "testcase": false, "constructor": false}, {"identifier": "removeLeadingSeparator", "parameters": "(String path, String separator)", "modifiers": "public static", "return": "String", "signature": "String removeLeadingSeparator(String path, String separator)", "full_signature": "public static String removeLeadingSeparator(String path, String separator)", "class_method_signature": "PathUtils.removeLeadingSeparator(String path, String separator)", "testcase": false, "constructor": false}, {"identifier": "removeTrailingSeparator", "parameters": "(String path)", "modifiers": "public static", "return": "String", "signature": "String removeTrailingSeparator(String path)", "full_signature": "public static String removeTrailingSeparator(String path)", "class_method_signature": "PathUtils.removeTrailingSeparator(String path)", "testcase": false, "constructor": false}, {"identifier": "removeTrailingSeparator", "parameters": "(String path, String separator)", "modifiers": "public static", "return": "String", "signature": "String removeTrailingSeparator(String path, String separator)", "full_signature": "public static String removeTrailingSeparator(String path, String separator)", "class_method_signature": "PathUtils.removeTrailingSeparator(String path, String separator)", "testcase": false, "constructor": false}, {"identifier": "pathEquals", "parameters": "(String path1, String path2, String separator)", "modifiers": "public static", "return": "boolean", "signature": "boolean pathEquals(String path1, String path2, String separator)", "full_signature": "public static boolean pathEquals(String path1, String path2, String separator)", "class_method_signature": "PathUtils.pathEquals(String path1, String path2, String separator)", "testcase": false, "constructor": false}, {"identifier": "getPathHashCode", "parameters": "(String path, String separator)", "modifiers": "public static", "return": "int", "signature": "int getPathHashCode(String path, String separator)", "full_signature": "public static int getPathHashCode(String path, String separator)", "class_method_signature": "PathUtils.getPathHashCode(String path, String separator)", "testcase": false, "constructor": false}, {"identifier": "removeLeadingFragments", "parameters": "(String path, String separator, int nbFragments)", "modifiers": "public static", "return": "String", "signature": "String removeLeadingFragments(String path, String separator, int nbFragments)", "full_signature": "public static String removeLeadingFragments(String path, String separator, int nbFragments)", "class_method_signature": "PathUtils.removeLeadingFragments(String path, String separator, int nbFragments)", "testcase": false, "constructor": false}, {"identifier": "getDepth", "parameters": "(String path, String separator)", "modifiers": "public static", "return": "int", "signature": "int getDepth(String path, String separator)", "full_signature": "public static int getDepth(String path, String separator)", "class_method_signature": "PathUtils.getDepth(String path, String separator)", "testcase": false, "constructor": false}], "file": "mucommander-commons-file/src/main/java/com/mucommander/commons/file/util/PathUtils.java"}, "focal_method": {"identifier": "getDepth", "parameters": "(String path, String separator)", "modifiers": "public static", "return": "int", "body": "public static int getDepth(String path, String separator) {\n        if(path.equals(\"\") || path.equals(separator))\n            return 0;\n\n        int depth = 1;\n        int pos = path.startsWith(separator)?1:0;\n\n        while ((pos=path.indexOf(separator, pos+1))!=-1)\n            depth++;\n\n        if(path.endsWith(separator))\n            depth--;\n\n        return depth;\n    }", "signature": "int getDepth(String path, String separator)", "full_signature": "public static int getDepth(String path, String separator)", "class_method_signature": "PathUtils.getDepth(String path, String separator)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "startsWith", "indexOf", "endsWith"]}, "repository": {"repo_id": 16462032, "url": "https://github.com/mucommander/mucommander", "language": "Java", "is_fork": false, "fork_count": 124, "stargazer_count": 448, "size": 47123, "license": "licensed"}}