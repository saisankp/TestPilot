{"test_class": {"identifier": "LDAPUserGroupCallbackImplTest", "superclass": "extends LDAPBaseTest", "interfaces": "", "fields": [], "file": "jbpm-human-task/jbpm-human-task-core/src/test/java/org/jbpm/services/task/identity/LDAPUserGroupCallbackImplTest.java"}, "test_case": {"identifier": "testGroupExists", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGroupExists() {\n        UserGroupCallback ldapUserGroupCallback = createLdapUserGroupCallback(Configuration.CUSTOM);\n        Assertions.assertThat(ldapUserGroupCallback).isNotNull();\n\n        boolean groupExists = ldapUserGroupCallback.existsGroup(\"manager\");\n        Assertions.assertThat(groupExists).isTrue();\n    }", "signature": "void testGroupExists()", "full_signature": "@Test public void testGroupExists()", "class_method_signature": "LDAPUserGroupCallbackImplTest.testGroupExists()", "testcase": true, "constructor": false, "invocations": ["createLdapUserGroupCallback", "isNotNull", "assertThat", "existsGroup", "isTrue", "assertThat"]}, "focal_class": {"identifier": "LDAPUserGroupCallbackImpl", "superclass": "extends AbstractLDAPUserGroupInfo", "interfaces": "implements UserGroupCallback", "fields": [{"original_string": "private static final String DEFAULT_PROPERTIES_NAME = \"jbpm.usergroup.callback\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_PROPERTIES_NAME = \"jbpm.usergroup.callback\"", "var_name": "DEFAULT_PROPERTIES_NAME"}, {"original_string": "public static final String USER_CTX = \"ldap.user.ctx\";", "modifier": "public static final", "type": "String", "declarator": "USER_CTX = \"ldap.user.ctx\"", "var_name": "USER_CTX"}, {"original_string": "public static final String ROLE_CTX = \"ldap.role.ctx\";", "modifier": "public static final", "type": "String", "declarator": "ROLE_CTX = \"ldap.role.ctx\"", "var_name": "ROLE_CTX"}, {"original_string": "public static final String USER_ROLES_CTX = \"ldap.user.roles.ctx\";", "modifier": "public static final", "type": "String", "declarator": "USER_ROLES_CTX = \"ldap.user.roles.ctx\"", "var_name": "USER_ROLES_CTX"}, {"original_string": "public static final String USER_FILTER = \"ldap.user.filter\";", "modifier": "public static final", "type": "String", "declarator": "USER_FILTER = \"ldap.user.filter\"", "var_name": "USER_FILTER"}, {"original_string": "public static final String ROLE_FILTER = \"ldap.role.filter\";", "modifier": "public static final", "type": "String", "declarator": "ROLE_FILTER = \"ldap.role.filter\"", "var_name": "ROLE_FILTER"}, {"original_string": "public static final String USER_ROLES_FILTER = \"ldap.user.roles.filter\";", "modifier": "public static final", "type": "String", "declarator": "USER_ROLES_FILTER = \"ldap.user.roles.filter\"", "var_name": "USER_ROLES_FILTER"}, {"original_string": "public static final String USER_ATTR_ID = \"ldap.user.attr.id\";", "modifier": "public static final", "type": "String", "declarator": "USER_ATTR_ID = \"ldap.user.attr.id\"", "var_name": "USER_ATTR_ID"}, {"original_string": "public static final String ROLE_ATTR_ID = \"ldap.roles.attr.id\";", "modifier": "public static final", "type": "String", "declarator": "ROLE_ATTR_ID = \"ldap.roles.attr.id\"", "var_name": "ROLE_ATTR_ID"}, {"original_string": "public static final String IS_USER_ID_DN = \"ldap.user.id.dn\";", "modifier": "public static final", "type": "String", "declarator": "IS_USER_ID_DN = \"ldap.user.id.dn\"", "var_name": "IS_USER_ID_DN"}, {"original_string": "public static final String SEARCH_SCOPE = \"ldap.search.scope\";", "modifier": "public static final", "type": "String", "declarator": "SEARCH_SCOPE = \"ldap.search.scope\"", "var_name": "SEARCH_SCOPE"}, {"original_string": "public static final String LDAP_NAME_ESCAPE = \"ldap.name.escape\";", "modifier": "public static final", "type": "String", "declarator": "LDAP_NAME_ESCAPE = \"ldap.name.escape\"", "var_name": "LDAP_NAME_ESCAPE"}, {"original_string": "private static final String[] REQUIRED_PROPERTIES = {USER_CTX, ROLE_CTX, USER_FILTER, ROLE_FILTER, USER_ROLES_FILTER};", "modifier": "private static final", "type": "String[]", "declarator": "REQUIRED_PROPERTIES = {USER_CTX, ROLE_CTX, USER_FILTER, ROLE_FILTER, USER_ROLES_FILTER}", "var_name": "REQUIRED_PROPERTIES"}, {"original_string": "private static final String DEFAULT_USER_ID_DN = \"false\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_USER_ID_DN = \"false\"", "var_name": "DEFAULT_USER_ID_DN"}], "methods": [{"identifier": "LDAPUserGroupCallbackImpl", "parameters": "(boolean activate)", "modifiers": "public", "return": "", "signature": " LDAPUserGroupCallbackImpl(boolean activate)", "full_signature": "public  LDAPUserGroupCallbackImpl(boolean activate)", "class_method_signature": "LDAPUserGroupCallbackImpl.LDAPUserGroupCallbackImpl(boolean activate)", "testcase": false, "constructor": true}, {"identifier": "LDAPUserGroupCallbackImpl", "parameters": "(Properties config)", "modifiers": "public", "return": "", "signature": " LDAPUserGroupCallbackImpl(Properties config)", "full_signature": "public  LDAPUserGroupCallbackImpl(Properties config)", "class_method_signature": "LDAPUserGroupCallbackImpl.LDAPUserGroupCallbackImpl(Properties config)", "testcase": false, "constructor": true}, {"identifier": "existsUser", "parameters": "(String userId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean existsUser(String userId)", "full_signature": "@Override public boolean existsUser(String userId)", "class_method_signature": "LDAPUserGroupCallbackImpl.existsUser(String userId)", "testcase": false, "constructor": false}, {"identifier": "existsGroup", "parameters": "(String groupId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean existsGroup(String groupId)", "full_signature": "@Override public boolean existsGroup(String groupId)", "class_method_signature": "LDAPUserGroupCallbackImpl.existsGroup(String groupId)", "testcase": false, "constructor": false}, {"identifier": "existsEntity", "parameters": "(String entityId, String context, String filter, String attributeId)", "modifiers": "private", "return": "boolean", "signature": "boolean existsEntity(String entityId, String context, String filter, String attributeId)", "full_signature": "private boolean existsEntity(String entityId, String context, String filter, String attributeId)", "class_method_signature": "LDAPUserGroupCallbackImpl.existsEntity(String entityId, String context, String filter, String attributeId)", "testcase": false, "constructor": false}, {"identifier": "getGroupsForUser", "parameters": "(String userId)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getGroupsForUser(String userId)", "full_signature": "@Override public List<String> getGroupsForUser(String userId)", "class_method_signature": "LDAPUserGroupCallbackImpl.getGroupsForUser(String userId)", "testcase": false, "constructor": false}, {"identifier": "isUserIdDn", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isUserIdDn()", "full_signature": "private boolean isUserIdDn()", "class_method_signature": "LDAPUserGroupCallbackImpl.isUserIdDn()", "testcase": false, "constructor": false}, {"identifier": "escapeOn", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean escapeOn()", "full_signature": "private boolean escapeOn()", "class_method_signature": "LDAPUserGroupCallbackImpl.escapeOn()", "testcase": false, "constructor": false}, {"identifier": "escapeIllegalChars", "parameters": "(String entityId)", "modifiers": "protected", "return": "String", "signature": "String escapeIllegalChars(String entityId)", "full_signature": "protected String escapeIllegalChars(String entityId)", "class_method_signature": "LDAPUserGroupCallbackImpl.escapeIllegalChars(String entityId)", "testcase": false, "constructor": false}, {"identifier": "unescapeIllegalChars", "parameters": "(String entityId)", "modifiers": "protected", "return": "String", "signature": "String unescapeIllegalChars(String entityId)", "full_signature": "protected String unescapeIllegalChars(String entityId)", "class_method_signature": "LDAPUserGroupCallbackImpl.unescapeIllegalChars(String entityId)", "testcase": false, "constructor": false}], "file": "jbpm-human-task/jbpm-human-task-core/src/main/java/org/jbpm/services/task/identity/LDAPUserGroupCallbackImpl.java"}, "focal_method": {"identifier": "existsGroup", "parameters": "(String groupId)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean existsGroup(String groupId) {\n        String context = getConfigProperty(ROLE_CTX);\n        String filter = getConfigProperty(ROLE_FILTER);\n        String attributeId = getConfigProperty(ROLE_ATTR_ID, DEFAULT_ROLE_ATTR_ID);\n\n        return existsEntity(groupId, context, filter, attributeId);\n    }", "signature": "boolean existsGroup(String groupId)", "full_signature": "@Override public boolean existsGroup(String groupId)", "class_method_signature": "LDAPUserGroupCallbackImpl.existsGroup(String groupId)", "testcase": false, "constructor": false, "invocations": ["getConfigProperty", "getConfigProperty", "getConfigProperty", "existsEntity"]}, "repository": {"repo_id": 930571, "url": "https://github.com/kiegroup/jbpm", "stars": 1035, "created": "9/22/2010 1:19:52 PM +00:00", "updates": "2020-01-22T03:39:57+00:00", "fork": "False", "license": "licensed"}}