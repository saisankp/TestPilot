{"test_class": {"identifier": "UserUtilityTest", "superclass": "", "interfaces": "", "fields": [], "file": "actors/common/src/test/java/org/sunbird/learner/util/UserUtilityTest.java"}, "test_case": {"identifier": "encryptUserAddressDataSuccess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void encryptUserAddressDataSuccess() {\n    String city = \"Bangalore\";\n    String addressLine1 = \"xyz\";\n    String state = \"Karnataka\";\n    List<Map<String, Object>> addressList = new ArrayList<Map<String, Object>>();\n    Map<String, Object> address = new HashMap<String, Object>();\n    address.put(JsonKey.COUNTRY, \"India\");\n    address.put(JsonKey.CITY, city);\n    address.put(JsonKey.ADDRESS_LINE1, addressLine1);\n    address.put(JsonKey.STATE, state);\n    addressList.add(address);\n    List<Map<String, Object>> response = null;\n    try {\n      response = UserUtility.encryptUserAddressData(addressList);\n    } catch (Exception e) {\n      // TODO Auto-generated catch block\n      e.printStackTrace();\n    }\n    assertNotEquals(\"India\", response.get(0).get(JsonKey.COUNTRY));\n    assertNotEquals(addressLine1, response.get(0).get(JsonKey.ADDRESS_LINE1));\n    assertNotEquals(state, response.get(0).get(JsonKey.STATE));\n  }", "signature": "void encryptUserAddressDataSuccess()", "full_signature": "@Test public void encryptUserAddressDataSuccess()", "class_method_signature": "UserUtilityTest.encryptUserAddressDataSuccess()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "add", "encryptUserAddressData", "printStackTrace", "assertNotEquals", "get", "get", "assertNotEquals", "get", "get", "assertNotEquals", "get", "get"]}, "focal_class": {"identifier": "UserUtility", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static List<String> userKeyToEncrypt;", "modifier": "private static", "type": "List<String>", "declarator": "userKeyToEncrypt", "var_name": "userKeyToEncrypt"}, {"original_string": "private static List<String> addressKeyToEncrypt;", "modifier": "private static", "type": "List<String>", "declarator": "addressKeyToEncrypt", "var_name": "addressKeyToEncrypt"}, {"original_string": "private static List<String> userKeyToDecrypt;", "modifier": "private static", "type": "List<String>", "declarator": "userKeyToDecrypt", "var_name": "userKeyToDecrypt"}, {"original_string": "private static List<String>userKeysToMasked;", "modifier": "private static", "type": "List<String>", "declarator": "userKeysToMasked", "var_name": "userKeysToMasked"}, {"original_string": "private static DecryptionService decryptionService;", "modifier": "private static", "type": "DecryptionService", "declarator": "decryptionService", "var_name": "decryptionService"}, {"original_string": "private static DataMaskingService maskingService;", "modifier": "private static", "type": "DataMaskingService", "declarator": "maskingService", "var_name": "maskingService"}, {"original_string": "private static List<String>phoneMaskedAttributes;", "modifier": "private static", "type": "List<String>", "declarator": "phoneMaskedAttributes", "var_name": "phoneMaskedAttributes"}, {"original_string": "private static List<String>emailMaskedAttributes;", "modifier": "private static", "type": "List<String>", "declarator": "emailMaskedAttributes", "var_name": "emailMaskedAttributes"}], "methods": [{"identifier": "UserUtility", "parameters": "()", "modifiers": "private", "return": "", "signature": " UserUtility()", "full_signature": "private  UserUtility()", "class_method_signature": "UserUtility.UserUtility()", "testcase": false, "constructor": true}, {"identifier": "encryptUserData", "parameters": "(Map<String, Object> userMap)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> encryptUserData(Map<String, Object> userMap)", "full_signature": "public static Map<String, Object> encryptUserData(Map<String, Object> userMap)", "class_method_signature": "UserUtility.encryptUserData(Map<String, Object> userMap)", "testcase": false, "constructor": false}, {"identifier": "encryptSpecificUserData", "parameters": "(\n      Map<String, Object> userMap, List<String> fieldsToEncrypt)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "Map<String, Object>", "signature": "Map<String, Object> encryptSpecificUserData(\n      Map<String, Object> userMap, List<String> fieldsToEncrypt)", "full_signature": "@SuppressWarnings(\"unchecked\") public static Map<String, Object> encryptSpecificUserData(\n      Map<String, Object> userMap, List<String> fieldsToEncrypt)", "class_method_signature": "UserUtility.encryptSpecificUserData(\n      Map<String, Object> userMap, List<String> fieldsToEncrypt)", "testcase": false, "constructor": false}, {"identifier": "encryptUserAddressData", "parameters": "(\n      List<Map<String, Object>> addressList)", "modifiers": "public static", "return": "List<Map<String, Object>>", "signature": "List<Map<String, Object>> encryptUserAddressData(\n      List<Map<String, Object>> addressList)", "full_signature": "public static List<Map<String, Object>> encryptUserAddressData(\n      List<Map<String, Object>> addressList)", "class_method_signature": "UserUtility.encryptUserAddressData(\n      List<Map<String, Object>> addressList)", "testcase": false, "constructor": false}, {"identifier": "decryptUserData", "parameters": "(Map<String, Object> userMap)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> decryptUserData(Map<String, Object> userMap)", "full_signature": "public static Map<String, Object> decryptUserData(Map<String, Object> userMap)", "class_method_signature": "UserUtility.decryptUserData(Map<String, Object> userMap)", "testcase": false, "constructor": false}, {"identifier": "decryptSpecificUserData", "parameters": "(\n      Map<String, Object> userMap, List<String> fieldsToDecrypt)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> decryptSpecificUserData(\n      Map<String, Object> userMap, List<String> fieldsToDecrypt)", "full_signature": "public static Map<String, Object> decryptSpecificUserData(\n      Map<String, Object> userMap, List<String> fieldsToDecrypt)", "class_method_signature": "UserUtility.decryptSpecificUserData(\n      Map<String, Object> userMap, List<String> fieldsToDecrypt)", "testcase": false, "constructor": false}, {"identifier": "decryptUserDataFrmES", "parameters": "(Map<String, Object> userMap)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> decryptUserDataFrmES(Map<String, Object> userMap)", "full_signature": "public static Map<String, Object> decryptUserDataFrmES(Map<String, Object> userMap)", "class_method_signature": "UserUtility.decryptUserDataFrmES(Map<String, Object> userMap)", "testcase": false, "constructor": false}, {"identifier": "decryptUserAddressData", "parameters": "(\n      List<Map<String, Object>> addressList)", "modifiers": "public static", "return": "List<Map<String, Object>>", "signature": "List<Map<String, Object>> decryptUserAddressData(\n      List<Map<String, Object>> addressList)", "full_signature": "public static List<Map<String, Object>> decryptUserAddressData(\n      List<Map<String, Object>> addressList)", "class_method_signature": "UserUtility.decryptUserAddressData(\n      List<Map<String, Object>> addressList)", "testcase": false, "constructor": false}, {"identifier": "encryptUserSearchFilterQueryData", "parameters": "(Map<String, Object> map)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> encryptUserSearchFilterQueryData(Map<String, Object> map)", "full_signature": "public static Map<String, Object> encryptUserSearchFilterQueryData(Map<String, Object> map)", "class_method_signature": "UserUtility.encryptUserSearchFilterQueryData(Map<String, Object> map)", "testcase": false, "constructor": false}, {"identifier": "encryptData", "parameters": "(String data)", "modifiers": "public static", "return": "String", "signature": "String encryptData(String data)", "full_signature": "public static String encryptData(String data)", "class_method_signature": "UserUtility.encryptData(String data)", "testcase": false, "constructor": false}, {"identifier": "maskEmailOrPhone", "parameters": "(String encryptedEmailOrPhone, String type)", "modifiers": "public static", "return": "String", "signature": "String maskEmailOrPhone(String encryptedEmailOrPhone, String type)", "full_signature": "public static String maskEmailOrPhone(String encryptedEmailOrPhone, String type)", "class_method_signature": "UserUtility.maskEmailOrPhone(String encryptedEmailOrPhone, String type)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void init()", "full_signature": "private static void init()", "class_method_signature": "UserUtility.init()", "testcase": false, "constructor": false}], "file": "actors/common/src/main/java/org/sunbird/learner/util/UserUtility.java"}, "focal_method": {"identifier": "encryptUserAddressData", "parameters": "(\n      List<Map<String, Object>> addressList)", "modifiers": "public static", "return": "List<Map<String, Object>>", "body": "public static List<Map<String, Object>> encryptUserAddressData(\n      List<Map<String, Object>> addressList) throws Exception {\n    EncryptionService service = ServiceFactory.getEncryptionServiceInstance(null);\n    // Encrypt user address Info\n    for (Map<String, Object> map : addressList) {\n      for (String key : addressKeyToEncrypt) {\n        if (map.containsKey(key)) {\n          map.put(key, service.encryptData((String) map.get(key)));\n        }\n      }\n    }\n    return addressList;\n  }", "signature": "List<Map<String, Object>> encryptUserAddressData(\n      List<Map<String, Object>> addressList)", "full_signature": "public static List<Map<String, Object>> encryptUserAddressData(\n      List<Map<String, Object>> addressList)", "class_method_signature": "UserUtility.encryptUserAddressData(\n      List<Map<String, Object>> addressList)", "testcase": false, "constructor": false, "invocations": ["getEncryptionServiceInstance", "containsKey", "put", "encryptData", "get"]}, "repository": {"repo_id": 96122408, "url": "https://github.com/project-sunbird/sunbird-lms-mw", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 5, "size": 15380, "license": "licensed"}}