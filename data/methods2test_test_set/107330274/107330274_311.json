{"test_class": {"identifier": "PerformanceToolUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "titus-server-master/src/test/java/com/netflix/titus/master/mesos/kubeapiserver/PerformanceToolUtilTest.java"}, "test_case": {"identifier": "testParser", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParser() {\n        Protos.TaskInfo taskInfo = newTaskInfo(\n                \"TASK_LIFECYCLE_1\",\n                \"selector: slots=0.. slotStep=2; launched: delay=2s; startInitiated: delay=3s; started: delay=60s; killInitiated: delay=5s\"\n        );\n        Map<String, String> annotations = PerformanceToolUtil.findPerformanceTestAnnotations(taskInfo);\n        assertThat(annotations).containsEntry(PerformanceToolUtil.PREPARE_TIME, \"3s\");\n        assertThat(annotations).containsEntry(PerformanceToolUtil.RUN_TIME, \"60s\");\n        assertThat(annotations).containsEntry(PerformanceToolUtil.KILL_TIME, \"5s\");\n    }", "signature": "void testParser()", "full_signature": "@Test public void testParser()", "class_method_signature": "PerformanceToolUtilTest.testParser()", "testcase": true, "constructor": false, "invocations": ["newTaskInfo", "findPerformanceTestAnnotations", "containsEntry", "assertThat", "containsEntry", "assertThat", "containsEntry", "assertThat"]}, "focal_class": {"identifier": "PerformanceToolUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern TASK_STATE_RULES_RE = Pattern.compile(\"(launched|startInitiated|started|killInitiated)\\\\s*:\\\\s*delay=(\\\\d+(ms|s|m|h|d))\");", "modifier": "private static final", "type": "Pattern", "declarator": "TASK_STATE_RULES_RE = Pattern.compile(\"(launched|startInitiated|started|killInitiated)\\\\s*:\\\\s*delay=(\\\\d+(ms|s|m|h|d))\")", "var_name": "TASK_STATE_RULES_RE"}, {"original_string": "static final String PREPARE_TIME = \"github.com.netflix.titus.executor/prepareTime\";", "modifier": "static final", "type": "String", "declarator": "PREPARE_TIME = \"github.com.netflix.titus.executor/prepareTime\"", "var_name": "PREPARE_TIME"}, {"original_string": "static final String RUN_TIME = \"github.com.netflix.titus.executor/runTime\";", "modifier": "static final", "type": "String", "declarator": "RUN_TIME = \"github.com.netflix.titus.executor/runTime\"", "var_name": "RUN_TIME"}, {"original_string": "static final String KILL_TIME = \"github.com.netflix.titus.executor/killTime\";", "modifier": "static final", "type": "String", "declarator": "KILL_TIME = \"github.com.netflix.titus.executor/killTime\"", "var_name": "KILL_TIME"}], "methods": [{"identifier": "findPerformanceTestAnnotations", "parameters": "(Protos.TaskInfo taskInfo)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> findPerformanceTestAnnotations(Protos.TaskInfo taskInfo)", "full_signature": "public static Map<String, String> findPerformanceTestAnnotations(Protos.TaskInfo taskInfo)", "class_method_signature": "PerformanceToolUtil.findPerformanceTestAnnotations(Protos.TaskInfo taskInfo)", "testcase": false, "constructor": false}, {"identifier": "toAnnotations", "parameters": "(Job job)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> toAnnotations(Job job)", "full_signature": "public static Map<String, String> toAnnotations(Job job)", "class_method_signature": "PerformanceToolUtil.toAnnotations(Job job)", "testcase": false, "constructor": false}, {"identifier": "findTaskLifecycleEnv", "parameters": "(Map<String, String> env)", "modifiers": "private static", "return": "Optional<String>", "signature": "Optional<String> findTaskLifecycleEnv(Map<String, String> env)", "full_signature": "private static Optional<String> findTaskLifecycleEnv(Map<String, String> env)", "class_method_signature": "PerformanceToolUtil.findTaskLifecycleEnv(Map<String, String> env)", "testcase": false, "constructor": false}, {"identifier": "toAnnotations", "parameters": "(String envValue)", "modifiers": "private static", "return": "Map<String, String>", "signature": "Map<String, String> toAnnotations(String envValue)", "full_signature": "private static Map<String, String> toAnnotations(String envValue)", "class_method_signature": "PerformanceToolUtil.toAnnotations(String envValue)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/PerformanceToolUtil.java"}, "focal_method": {"identifier": "findPerformanceTestAnnotations", "parameters": "(Protos.TaskInfo taskInfo)", "modifiers": "public static", "return": "Map<String, String>", "body": "public static Map<String, String> findPerformanceTestAnnotations(Protos.TaskInfo taskInfo) {\n        TitanProtos.ContainerInfo containerInfo;\n        try {\n            containerInfo = TitanProtos.ContainerInfo.parseFrom(taskInfo.getData());\n        } catch (InvalidProtocolBufferException e) {\n            return Collections.emptyMap();\n        }\n        return findTaskLifecycleEnv(containerInfo.getUserProvidedEnvMap())\n                .map(PerformanceToolUtil::toAnnotations)\n                .orElse(Collections.emptyMap());\n    }", "signature": "Map<String, String> findPerformanceTestAnnotations(Protos.TaskInfo taskInfo)", "full_signature": "public static Map<String, String> findPerformanceTestAnnotations(Protos.TaskInfo taskInfo)", "class_method_signature": "PerformanceToolUtil.findPerformanceTestAnnotations(Protos.TaskInfo taskInfo)", "testcase": false, "constructor": false, "invocations": ["parseFrom", "getData", "emptyMap", "orElse", "map", "findTaskLifecycleEnv", "getUserProvidedEnvMap", "emptyMap"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}