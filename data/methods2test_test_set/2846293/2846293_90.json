{"test_class": {"identifier": "CompareImagesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String locator = \"ebselenImage\";", "modifier": "private", "type": "String", "declarator": "locator = \"ebselenImage\"", "var_name": "locator"}, {"original_string": "private String wrongLocator = \"fileToDownload\";", "modifier": "private", "type": "String", "declarator": "wrongLocator = \"fileToDownload\"", "var_name": "wrongLocator"}, {"original_string": "private URL localImage = this.getClass().getResource(\"/web/images/ebselen.png\");", "modifier": "private", "type": "URL", "declarator": "localImage = this.getClass().getResource(\"/web/images/ebselen.png\")", "var_name": "localImage"}, {"original_string": "private URL wrongLocalImage = this.getClass().getResource(\"/web/images/lazeryattack.com.png\");", "modifier": "private", "type": "URL", "declarator": "wrongLocalImage = this.getClass().getResource(\"/web/images/lazeryattack.com.png\")", "var_name": "wrongLocalImage"}, {"original_string": "private static JettyServer localWebServer = new JettyServer();", "modifier": "private static", "type": "JettyServer", "declarator": "localWebServer = new JettyServer()", "var_name": "localWebServer"}, {"original_string": "private static int webServerPort = 8081;", "modifier": "private static", "type": "int", "declarator": "webServerPort = 8081", "var_name": "webServerPort"}, {"original_string": "private WebDriver driver = new HtmlUnitDriver();", "modifier": "private", "type": "WebDriver", "declarator": "driver = new HtmlUnitDriver()", "var_name": "driver"}], "file": "ebselen-core/src/test/java/com/lazerycode/ebselen/customhandlers/CompareImagesTest.java"}, "test_case": {"identifier": "compareMatchingImagesUsingString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void compareMatchingImagesUsingString() throws Exception {\n        driver.get(\"http://localhost:8081/downloadTest.html\");\n        String localImage = this.localImage.toURI().getPath();\n        WebElement remoteImage = driver.findElement(By.id(locator));\n        CompareImages imageCompare = new CompareImages(localImage, remoteImage, driver);\n        assertThat(imageCompare.compareImages(), is(equalTo(true)));\n    }", "signature": "void compareMatchingImagesUsingString()", "full_signature": "@Test public void compareMatchingImagesUsingString()", "class_method_signature": "CompareImagesTest.compareMatchingImagesUsingString()", "testcase": true, "constructor": false, "invocations": ["get", "getPath", "toURI", "findElement", "id", "assertThat", "compareImages", "is", "equalTo"]}, "focal_class": {"identifier": "CompareImages", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FileHandler localFileObject;", "modifier": "private", "type": "FileHandler", "declarator": "localFileObject", "var_name": "localFileObject"}, {"original_string": "private WebElement remoteImageObject;", "modifier": "private", "type": "WebElement", "declarator": "remoteImageObject", "var_name": "remoteImageObject"}, {"original_string": "private WebDriver driver;", "modifier": "private", "type": "WebDriver", "declarator": "driver", "var_name": "driver"}], "methods": [{"identifier": "CompareImages", "parameters": "(File localFile, WebElement remoteImage, WebDriver driver)", "modifiers": "public", "return": "", "signature": " CompareImages(File localFile, WebElement remoteImage, WebDriver driver)", "full_signature": "public  CompareImages(File localFile, WebElement remoteImage, WebDriver driver)", "class_method_signature": "CompareImages.CompareImages(File localFile, WebElement remoteImage, WebDriver driver)", "testcase": false, "constructor": true}, {"identifier": "CompareImages", "parameters": "(String localFile, WebElement remoteImage, WebDriver driver)", "modifiers": "public", "return": "", "signature": " CompareImages(String localFile, WebElement remoteImage, WebDriver driver)", "full_signature": "public  CompareImages(String localFile, WebElement remoteImage, WebDriver driver)", "class_method_signature": "CompareImages.CompareImages(String localFile, WebElement remoteImage, WebDriver driver)", "testcase": false, "constructor": true}, {"identifier": "changeLocalFileTo", "parameters": "(File localfile)", "modifiers": "public", "return": "void", "signature": "void changeLocalFileTo(File localfile)", "full_signature": "public void changeLocalFileTo(File localfile)", "class_method_signature": "CompareImages.changeLocalFileTo(File localfile)", "testcase": false, "constructor": false}, {"identifier": "changeLocalFileTo", "parameters": "(String localfile)", "modifiers": "public", "return": "void", "signature": "void changeLocalFileTo(String localfile)", "full_signature": "public void changeLocalFileTo(String localfile)", "class_method_signature": "CompareImages.changeLocalFileTo(String localfile)", "testcase": false, "constructor": false}, {"identifier": "changeRemoteImageTo", "parameters": "(WebElement remoteImage)", "modifiers": "public", "return": "void", "signature": "void changeRemoteImageTo(WebElement remoteImage)", "full_signature": "public void changeRemoteImageTo(WebElement remoteImage)", "class_method_signature": "CompareImages.changeRemoteImageTo(WebElement remoteImage)", "testcase": false, "constructor": false}, {"identifier": "getLocalImage", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getLocalImage()", "full_signature": "public File getLocalImage()", "class_method_signature": "CompareImages.getLocalImage()", "testcase": false, "constructor": false}, {"identifier": "getRemoteImageWebElement", "parameters": "()", "modifiers": "public", "return": "WebElement", "signature": "WebElement getRemoteImageWebElement()", "full_signature": "public WebElement getRemoteImageWebElement()", "class_method_signature": "CompareImages.getRemoteImageWebElement()", "testcase": false, "constructor": false}, {"identifier": "generateMessageDigest", "parameters": "(File fileToHash)", "modifiers": "private", "return": "String", "signature": "String generateMessageDigest(File fileToHash)", "full_signature": "private String generateMessageDigest(File fileToHash)", "class_method_signature": "CompareImages.generateMessageDigest(File fileToHash)", "testcase": false, "constructor": false}, {"identifier": "compareImages", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean compareImages()", "full_signature": "public Boolean compareImages()", "class_method_signature": "CompareImages.compareImages()", "testcase": false, "constructor": false}], "file": "ebselen-core/src/main/java/com/lazerycode/ebselen/customhandlers/CompareImages.java"}, "focal_method": {"identifier": "CompareImages", "parameters": "(File localFile, WebElement remoteImage, WebDriver driver)", "modifiers": "public", "return": "", "body": "public CompareImages(File localFile, WebElement remoteImage, WebDriver driver) throws Exception {\n        this.localFileObject = new FileHandler(localFile);\n        this.remoteImageObject = remoteImage;\n        this.driver = driver;\n    }", "signature": " CompareImages(File localFile, WebElement remoteImage, WebDriver driver)", "full_signature": "public  CompareImages(File localFile, WebElement remoteImage, WebDriver driver)", "class_method_signature": "CompareImages.CompareImages(File localFile, WebElement remoteImage, WebDriver driver)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 2846293, "url": "https://github.com/Ardesco/Ebselen", "language": "Java", "is_fork": false, "fork_count": 56, "stargazer_count": 59, "size": 1133, "license": "licensed"}}