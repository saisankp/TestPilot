{"test_class": {"identifier": "ClientPermissionsTest", "superclass": "", "interfaces": "", "fields": [], "file": "pross-server/src/test/java/com/ibm/pross/server/configuration/permissions/ClientPermissionsTest.java"}, "test_case": {"identifier": "testClearPermission", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testClearPermission() {\n\t\tfinal ClientPermissions clientPermission = new ClientPermissions();\n\t\tAssert.assertEquals(0, clientPermission.getSecrets().size());\n\n\t\tfinal String secret1 = \"test1\";\n\t\tfinal String secret2 = \"test2\";\n\t\t\n\t\tclientPermission.addPermission(secret1, Permissions.GENERATE);\n\t\tAssert.assertEquals(1, clientPermission.getSecrets().size());\n\t\t\n\t\tclientPermission.addPermission(secret1, Permissions.DELETE);\n\t\tAssert.assertEquals(1, clientPermission.getSecrets().size());\n\t\t\n\t\tclientPermission.addPermission(secret2, Permissions.GENERATE);\n\t\tAssert.assertEquals(2, clientPermission.getSecrets().size());\n\t\t\n\t\tclientPermission.clearPermission(secret1);\n\t\tAssert.assertEquals(1, clientPermission.getSecrets().size());\n\t\t\n\t\tclientPermission.clearPermission(\"none\");\n\t\tAssert.assertEquals(1, clientPermission.getSecrets().size());\n\t\t\n\t\tclientPermission.clearPermission(secret2);\n\t\tAssert.assertEquals(0, clientPermission.getSecrets().size());\n\t}", "signature": "void testClearPermission()", "full_signature": "@Test public void testClearPermission()", "class_method_signature": "ClientPermissionsTest.testClearPermission()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "size", "getSecrets", "addPermission", "assertEquals", "size", "getSecrets", "addPermission", "assertEquals", "size", "getSecrets", "addPermission", "assertEquals", "size", "getSecrets", "clearPermission", "assertEquals", "size", "getSecrets", "clearPermission", "assertEquals", "size", "getSecrets", "clearPermission", "assertEquals", "size", "getSecrets"]}, "focal_class": {"identifier": "ClientPermissions", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ConcurrentMap<String, Integer> secretPermissions;", "modifier": "private final", "type": "ConcurrentMap<String, Integer>", "declarator": "secretPermissions", "var_name": "secretPermissions"}], "methods": [{"identifier": "ClientPermissions", "parameters": "()", "modifiers": "public", "return": "", "signature": " ClientPermissions()", "full_signature": "public  ClientPermissions()", "class_method_signature": "ClientPermissions.ClientPermissions()", "testcase": false, "constructor": true}, {"identifier": "ClientPermissions", "parameters": "(final Map<String, Integer> secretPermissions)", "modifiers": "public", "return": "", "signature": " ClientPermissions(final Map<String, Integer> secretPermissions)", "full_signature": "public  ClientPermissions(final Map<String, Integer> secretPermissions)", "class_method_signature": "ClientPermissions.ClientPermissions(final Map<String, Integer> secretPermissions)", "testcase": false, "constructor": true}, {"identifier": "addPermission", "parameters": "(final String secretName, final Permissions permission)", "modifiers": "public", "return": "void", "signature": "void addPermission(final String secretName, final Permissions permission)", "full_signature": "public void addPermission(final String secretName, final Permissions permission)", "class_method_signature": "ClientPermissions.addPermission(final String secretName, final Permissions permission)", "testcase": false, "constructor": false}, {"identifier": "removePermission", "parameters": "(final String secretName, final Permissions permission)", "modifiers": "public", "return": "void", "signature": "void removePermission(final String secretName, final Permissions permission)", "full_signature": "public void removePermission(final String secretName, final Permissions permission)", "class_method_signature": "ClientPermissions.removePermission(final String secretName, final Permissions permission)", "testcase": false, "constructor": false}, {"identifier": "hasPermission", "parameters": "(final String secretName, final Permissions permission)", "modifiers": "public", "return": "boolean", "signature": "boolean hasPermission(final String secretName, final Permissions permission)", "full_signature": "public boolean hasPermission(final String secretName, final Permissions permission)", "class_method_signature": "ClientPermissions.hasPermission(final String secretName, final Permissions permission)", "testcase": false, "constructor": false}, {"identifier": "clearPermission", "parameters": "(final String secretName)", "modifiers": "public", "return": "void", "signature": "void clearPermission(final String secretName)", "full_signature": "public void clearPermission(final String secretName)", "class_method_signature": "ClientPermissions.clearPermission(final String secretName)", "testcase": false, "constructor": false}, {"identifier": "clearAllPermissions", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearAllPermissions()", "full_signature": "public void clearAllPermissions()", "class_method_signature": "ClientPermissions.clearAllPermissions()", "testcase": false, "constructor": false}, {"identifier": "getSecrets", "parameters": "()", "modifiers": "protected", "return": "Set<String>", "signature": "Set<String> getSecrets()", "full_signature": "protected Set<String> getSecrets()", "class_method_signature": "ClientPermissions.getSecrets()", "testcase": false, "constructor": false}], "file": "pross-server/src/main/java/com/ibm/pross/server/configuration/permissions/ClientPermissions.java"}, "focal_method": {"identifier": "clearPermission", "parameters": "(final String secretName)", "modifiers": "public", "return": "void", "body": "public void clearPermission(final String secretName) {\n\t\tthis.secretPermissions.remove(secretName);\n\t}", "signature": "void clearPermission(final String secretName)", "full_signature": "public void clearPermission(final String secretName)", "class_method_signature": "ClientPermissions.clearPermission(final String secretName)", "testcase": false, "constructor": false, "invocations": ["remove"]}, "repository": {"repo_id": 144309611, "url": "https://github.com/jasonkresch/protect", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 38, "size": 1932, "license": "licensed"}}