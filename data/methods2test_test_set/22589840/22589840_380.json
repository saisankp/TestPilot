{"test_class": {"identifier": "AuthenticatorHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "olat7.8/src/test/java/org/olat/system/commons/AuthenticatorHelperTest.java"}, "test_case": {"identifier": "testVerifyCharSets", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testVerifyCharSets() {\n        assertTrue(AuthenticatorHelper.verifyCharSets(\"_1aB\"));\n    }", "signature": "void testVerifyCharSets()", "full_signature": "@Test public void testVerifyCharSets()", "class_method_signature": "AuthenticatorHelperTest.testVerifyCharSets()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "verifyCharSets"]}, "focal_class": {"identifier": "AuthenticatorHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerHelper.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerHelper.getLogger()", "var_name": "LOG"}, {"original_string": "protected static final char[] CHAR_SPECIALS = { '\u00a7', '\u00b0', '+', '\u00a6', '\"', '@', '*', '#', '\u00e7', '%', '&', '\u00ac', '/', '|', '(', '\u00a2', ')', '=', '?', '\\'', '^', '~', '\u20ac',\n            '[', ']', '!', '{', '}', '$', '\u00a3', '<', '>', '\\\\', ',', ';', '.', ':', '-', '_' };", "modifier": "protected static final", "type": "char[]", "declarator": "CHAR_SPECIALS = { '\u00a7', '\u00b0', '+', '\u00a6', '\"', '@', '*', '#', '\u00e7', '%', '&', '\u00ac', '/', '|', '(', '\u00a2', ')', '=', '?', '\\'', '^', '~', '\u20ac',\n            '[', ']', '!', '{', '}', '$', '\u00a3', '<', '>', '\\\\', ',', ';', '.', ':', '-', '_' };", "var_name": "CHAR_SPECIALS"}], "methods": [{"identifier": "verifyPasswordStrength", "parameters": "(String oldPassword, String newPassword, String principalName)", "modifiers": "public static", "return": "boolean", "signature": "boolean verifyPasswordStrength(String oldPassword, String newPassword, String principalName)", "full_signature": "public static boolean verifyPasswordStrength(String oldPassword, String newPassword, String principalName)", "class_method_signature": "AuthenticatorHelper.verifyPasswordStrength(String oldPassword, String newPassword, String principalName)", "testcase": false, "constructor": false}, {"identifier": "getESAPIUser", "parameters": "(String username)", "modifiers": "private static", "return": "DefaultUser", "signature": "DefaultUser getESAPIUser(String username)", "full_signature": "private static DefaultUser getESAPIUser(String username)", "class_method_signature": "AuthenticatorHelper.getESAPIUser(String username)", "testcase": false, "constructor": false}, {"identifier": "verifyCharSets", "parameters": "(String newPassword)", "modifiers": "protected static", "return": "boolean", "signature": "boolean verifyCharSets(String newPassword)", "full_signature": "protected static boolean verifyCharSets(String newPassword)", "class_method_signature": "AuthenticatorHelper.verifyCharSets(String newPassword)", "testcase": false, "constructor": false}], "file": "olat7.8/src/main/java/org/olat/system/commons/AuthenticatorHelper.java"}, "focal_method": {"identifier": "verifyCharSets", "parameters": "(String newPassword)", "modifiers": "protected static", "return": "boolean", "body": "protected static boolean verifyCharSets(String newPassword) {\n        boolean hasLowercase = false;\n        boolean hasUppercase = false;\n        boolean hasDigit = false;\n        boolean hasSpecial = false;\n\n        for (int i = 0; i < newPassword.length(); i++) {\n            if (!hasLowercase && Arrays.binarySearch(EncoderConstants.CHAR_LOWERS, newPassword.charAt(i)) >= 0) {\n                hasLowercase = true;\n            } else if (!hasUppercase && Arrays.binarySearch(EncoderConstants.CHAR_UPPERS, newPassword.charAt(i)) >= 0) {\n                hasUppercase = true;\n            } else if (!hasDigit && Arrays.binarySearch(EncoderConstants.CHAR_DIGITS, newPassword.charAt(i)) >= 0) {\n                hasDigit = true;\n            } else if (!hasSpecial && Arrays.binarySearch(CHAR_SPECIALS, newPassword.charAt(i)) >= 0) {\n                hasSpecial = true;\n            }\n        }\n        return hasLowercase && hasUppercase && hasDigit && hasSpecial;\n    }", "signature": "boolean verifyCharSets(String newPassword)", "full_signature": "protected static boolean verifyCharSets(String newPassword)", "class_method_signature": "AuthenticatorHelper.verifyCharSets(String newPassword)", "testcase": false, "constructor": false, "invocations": ["length", "binarySearch", "charAt", "binarySearch", "charAt", "binarySearch", "charAt", "binarySearch", "charAt"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}