{"test_class": {"identifier": "DownloadProgressNotificationTest", "superclass": "extends BaseNotificationTest", "interfaces": "", "fields": [], "file": "library/src/test/java/io/ona/kujaku/notifications/DownloadProgressNotificationTest.java"}, "test_case": {"identifier": "updateNotificationWithNewMapDownload", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void updateNotificationWithNewMapDownload() throws NoSuchFieldException, IllegalAccessException {\n        DownloadProgressNotification downloadProgressNotification = new DownloadProgressNotification(context);\n\n        String mapName = UUID.randomUUID().toString();\n        String mapBoxAccessToken = \"sample_access_token\";\n        int requestCode = 89238087;\n\n        downloadProgressNotification.createInitialNotification(mapName, mapBoxAccessToken, requestCode, true);\n        assertNotificationBuilder(downloadProgressNotification.notificationBuilder, mapName);\n\n        String newMapName = \"notification channel\";\n        downloadProgressNotification.updateNotificationWithNewMapDownload(newMapName, requestCode);\n        assertNotificationBuilder(downloadProgressNotification.notificationBuilder, newMapName);\n\n        Intent stopDownloadIntent = new Intent(context, MapboxOfflineDownloaderService.class);\n        stopDownloadIntent.putExtra(Constants.PARCELABLE_KEY_SERVICE_ACTION, MapboxOfflineDownloaderService.SERVICE_ACTION.STOP_CURRENT_DOWNLOAD);\n        stopDownloadIntent.putExtra(Constants.PARCELABLE_KEY_MAP_UNIQUE_NAME, newMapName);\n        stopDownloadIntent.putExtra(Constants.PARCELABLE_KEY_MAPBOX_ACCESS_TOKEN, mapBoxAccessToken);\n        stopDownloadIntent.putExtra(Constants.PARCELABLE_KEY_DELETE_TASK_TYPE, MapBoxOfflineQueueTask.TASK_TYPE_DOWNLOAD);\n\n        assertEquals(1, downloadProgressNotification.notificationBuilder.mActions.size());\n        compareIntent(stopDownloadIntent, getIntent(downloadProgressNotification.notificationBuilder.mActions.get(0).getActionIntent()));\n    }", "signature": "void updateNotificationWithNewMapDownload()", "full_signature": "@Test public void updateNotificationWithNewMapDownload()", "class_method_signature": "DownloadProgressNotificationTest.updateNotificationWithNewMapDownload()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "createInitialNotification", "assertNotificationBuilder", "updateNotificationWithNewMapDownload", "assertNotificationBuilder", "putExtra", "putExtra", "putExtra", "putExtra", "assertEquals", "size", "compareIntent", "getIntent", "getActionIntent", "get"]}, "focal_class": {"identifier": "DownloadProgressNotification", "superclass": "extends KujakuNotification", "interfaces": "", "fields": [{"original_string": "public static final String CHANNEL_ID = \"KUJAKU_DOWNLOAD_PROGRESS_CHANNEL\";", "modifier": "public static final", "type": "String", "declarator": "CHANNEL_ID = \"KUJAKU_DOWNLOAD_PROGRESS_CHANNEL\"", "var_name": "CHANNEL_ID"}, {"original_string": "protected NotificationCompat.Builder notificationBuilder;", "modifier": "protected", "type": "NotificationCompat.Builder", "declarator": "notificationBuilder", "var_name": "notificationBuilder"}, {"original_string": "private Intent stopDownloadIntent;", "modifier": "private", "type": "Intent", "declarator": "stopDownloadIntent", "var_name": "stopDownloadIntent"}], "methods": [{"identifier": "DownloadProgressNotification", "parameters": "(Context context)", "modifiers": "public", "return": "", "signature": " DownloadProgressNotification(Context context)", "full_signature": "public  DownloadProgressNotification(Context context)", "class_method_signature": "DownloadProgressNotification.DownloadProgressNotification(Context context)", "testcase": false, "constructor": true}, {"identifier": "createInitialNotification", "parameters": "(String mapName, String mapBoxAccessToken, int requestCode, boolean showAction)", "modifiers": "public", "return": "void", "signature": "void createInitialNotification(String mapName, String mapBoxAccessToken, int requestCode, boolean showAction)", "full_signature": "public void createInitialNotification(String mapName, String mapBoxAccessToken, int requestCode, boolean showAction)", "class_method_signature": "DownloadProgressNotification.createInitialNotification(String mapName, String mapBoxAccessToken, int requestCode, boolean showAction)", "testcase": false, "constructor": false}, {"identifier": "updateNotification", "parameters": "(double percentageProgress, String mapName, int requestCode, boolean showAction)", "modifiers": "public", "return": "void", "signature": "void updateNotification(double percentageProgress, String mapName, int requestCode, boolean showAction)", "full_signature": "public void updateNotification(double percentageProgress, String mapName, int requestCode, boolean showAction)", "class_method_signature": "DownloadProgressNotification.updateNotification(double percentageProgress, String mapName, int requestCode, boolean showAction)", "testcase": false, "constructor": false}, {"identifier": "displayForegroundNotification", "parameters": "(NotificationCompat.Builder notificationBuilder, int notificationId)", "modifiers": "public", "return": "void", "signature": "void displayForegroundNotification(NotificationCompat.Builder notificationBuilder, int notificationId)", "full_signature": "public void displayForegroundNotification(NotificationCompat.Builder notificationBuilder, int notificationId)", "class_method_signature": "DownloadProgressNotification.displayForegroundNotification(NotificationCompat.Builder notificationBuilder, int notificationId)", "testcase": false, "constructor": false}, {"identifier": "displayForegroundNotification", "parameters": "(int notificationId)", "modifiers": "public", "return": "void", "signature": "void displayForegroundNotification(int notificationId)", "full_signature": "public void displayForegroundNotification(int notificationId)", "class_method_signature": "DownloadProgressNotification.displayForegroundNotification(int notificationId)", "testcase": false, "constructor": false}, {"identifier": "updateNotificationWithNewMapDownload", "parameters": "(String mapName, int requestCode)", "modifiers": "public", "return": "void", "signature": "void updateNotificationWithNewMapDownload(String mapName, int requestCode)", "full_signature": "public void updateNotificationWithNewMapDownload(String mapName, int requestCode)", "class_method_signature": "DownloadProgressNotification.updateNotificationWithNewMapDownload(String mapName, int requestCode)", "testcase": false, "constructor": false}, {"identifier": "displayNotification", "parameters": "(int notificationId)", "modifiers": "public", "return": "void", "signature": "void displayNotification(int notificationId)", "full_signature": "public void displayNotification(int notificationId)", "class_method_signature": "DownloadProgressNotification.displayNotification(int notificationId)", "testcase": false, "constructor": false}, {"identifier": "updateNotificationWithDownloadProgress", "parameters": "(double percentageProgress)", "modifiers": "public", "return": "void", "signature": "void updateNotificationWithDownloadProgress(double percentageProgress)", "full_signature": "public void updateNotificationWithDownloadProgress(double percentageProgress)", "class_method_signature": "DownloadProgressNotification.updateNotificationWithDownloadProgress(double percentageProgress)", "testcase": false, "constructor": false}, {"identifier": "clearActions", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearActions()", "full_signature": "public void clearActions()", "class_method_signature": "DownloadProgressNotification.clearActions()", "testcase": false, "constructor": false}, {"identifier": "createStopDownloadIntent", "parameters": "(String mapName, String mapBoxAccessToken)", "modifiers": "public", "return": "Intent", "signature": "Intent createStopDownloadIntent(String mapName, String mapBoxAccessToken)", "full_signature": "public Intent createStopDownloadIntent(String mapName, String mapBoxAccessToken)", "class_method_signature": "DownloadProgressNotification.createStopDownloadIntent(String mapName, String mapBoxAccessToken)", "testcase": false, "constructor": false}, {"identifier": "formatDecimal", "parameters": "(double no)", "modifiers": "protected static", "return": "String", "signature": "String formatDecimal(double no)", "full_signature": "protected static String formatDecimal(double no)", "class_method_signature": "DownloadProgressNotification.formatDecimal(double no)", "testcase": false, "constructor": false}], "file": "library/src/main/java/io/ona/kujaku/notifications/DownloadProgressNotification.java"}, "focal_method": {"identifier": "updateNotificationWithNewMapDownload", "parameters": "(String mapName, int requestCode)", "modifiers": "public", "return": "void", "body": "public void updateNotificationWithNewMapDownload(String mapName, int requestCode) {\n        notificationBuilder.setContentTitle(String.format(context.getString(R.string.notification_download_progress_title), mapName));\n\n        stopDownloadIntent.putExtra(Constants.PARCELABLE_KEY_MAP_UNIQUE_NAME, mapName);\n\n        PendingIntent stopDownloadPendingIntent = PendingIntent.getService(context, requestCode, stopDownloadIntent, PendingIntent.FLAG_CANCEL_CURRENT);\n        NotificationCompat.Action stopDownloadAction = new NotificationCompat.Action(R.drawable.ic_mapbox_download_stop, context.getString(R.string.stop_download), stopDownloadPendingIntent);\n\n        notificationBuilder.mActions.clear();\n        notificationBuilder.addAction(stopDownloadAction);\n    }", "signature": "void updateNotificationWithNewMapDownload(String mapName, int requestCode)", "full_signature": "public void updateNotificationWithNewMapDownload(String mapName, int requestCode)", "class_method_signature": "DownloadProgressNotification.updateNotificationWithNewMapDownload(String mapName, int requestCode)", "testcase": false, "constructor": false, "invocations": ["setContentTitle", "format", "getString", "putExtra", "getService", "getString", "clear", "addAction"]}, "repository": {"repo_id": 109667968, "url": "https://github.com/onaio/kujaku", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 4778, "license": "licensed"}}