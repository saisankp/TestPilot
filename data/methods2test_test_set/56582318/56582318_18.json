{"test_class": {"identifier": "BufferComputingTest", "superclass": "", "interfaces": "", "fields": [], "file": "geoxygene-spatial/src/test/java/fr/ign/cogit/geoxygene/util/algo/geometricAlgorithms/morphomaths/BufferComputingTest.java"}, "test_case": {"identifier": "testBuildHalfOffsetLine", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testBuildHalfOffsetLine() {\n    IDirectPosition p1 = new DirectPosition(0.0, 0.0);\n    IDirectPosition p2 = new DirectPosition(10.0, 0.0);\n    IDirectPosition p3 = new DirectPosition(20.0, 0.0);\n    IDirectPosition p4 = new DirectPosition(20.0, 10.0);\n    IDirectPosition p6 = new DirectPosition(0.0, 5.0);\n    IDirectPosition p7 = new DirectPosition(10.0, 5.0);\n    IDirectPosition p8 = new DirectPosition(20.0, 5.0);\n    IDirectPosition p9 = new DirectPosition(0.0, 5.0);\n    IDirectPosition p10 = new DirectPosition(10.0, 5.0);\n    IDirectPosition p11 = new DirectPosition(15.0, 5.0);\n    IDirectPosition p12 = new DirectPosition(15.0, 10.0);\n    IDirectPositionList list1 = new DirectPositionList();\n    IDirectPositionList list2 = new DirectPositionList();\n    IDirectPositionList list3 = new DirectPositionList();\n    IDirectPositionList list4 = new DirectPositionList();\n    list1.add(p1);\n    list1.add(p2);\n    list1.add(p3);\n    ILineString line1 = new GM_LineString(list1);\n    list2.add(p6);\n    list2.add(p7);\n    list2.add(p8);\n    ILineString line2 = new GM_LineString(list2);\n    Assert.assertTrue(line2.equals(BufferComputing.buildHalfOffsetLine(\n        Side.LEFT, line1, 5.0)));\n    Assert.assertTrue(line1.equals(BufferComputing.buildHalfOffsetLine(\n        Side.RIGHT, line2, 5.0)));\n    list3.add(p1);\n    list3.add(p2);\n    list3.add(p3);\n    list3.add(p4);\n    ILineString line3 = new GM_LineString(list3);\n    list4.add(p9);\n    list4.add(p10);\n    list4.add(p11);\n    list4.add(p12);\n    ILineString line4 = new GM_LineString(list4);\n    Assert.assertTrue(line4.equals((IGeometry) BufferComputing\n        .buildHalfOffsetLine(Side.LEFT, line3, 5.0)));\n    IDirectPositionList list5 = new DirectPositionList();\n    list5.add(new DirectPosition(0.0, 10.0));\n    list5.add(new DirectPosition(20.0, 10.0));\n    list5.add(new DirectPosition(20.0, 0.0));\n    ILineString line5 = new GM_LineString(list5);\n    IDirectPositionList list6 = new DirectPositionList();\n    list6.add(new DirectPosition(0.0, 5.0));\n    list6.add(new DirectPosition(15.0, 5.0));\n    list6.add(new DirectPosition(15.0, 0.0));\n    ILineString line6 = new GM_LineString(list6);\n    Assert.assertTrue(line6.equals(BufferComputing.buildHalfOffsetLine(\n        Side.RIGHT, line5, 5.0)));\n\n  }", "signature": "void testBuildHalfOffsetLine()", "full_signature": "@Test public void testBuildHalfOffsetLine()", "class_method_signature": "BufferComputingTest.testBuildHalfOffsetLine()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "add", "add", "assertTrue", "equals", "buildHalfOffsetLine", "assertTrue", "equals", "buildHalfOffsetLine", "add", "add", "add", "add", "add", "add", "add", "add", "assertTrue", "equals", "buildHalfOffsetLine", "add", "add", "add", "add", "add", "add", "assertTrue", "equals", "buildHalfOffsetLine"]}, "focal_class": {"identifier": "BufferComputing", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger logger = Logger.getLogger(BufferComputing.class\n      .getName());", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger(BufferComputing.class\n      .getName())", "var_name": "logger"}], "methods": [{"identifier": "buildLineHalfBuffer", "parameters": "(ILineString line, double distance,\n      Side side)", "modifiers": "public static", "return": "IPolygon", "signature": "IPolygon buildLineHalfBuffer(ILineString line, double distance,\n      Side side)", "full_signature": "public static IPolygon buildLineHalfBuffer(ILineString line, double distance,\n      Side side)", "class_method_signature": "BufferComputing.buildLineHalfBuffer(ILineString line, double distance,\n      Side side)", "testcase": false, "constructor": false}, {"identifier": "buildSegmentHalfBuffer", "parameters": "(ILineSegment line,\n      double distance, Side side)", "modifiers": "public static", "return": "IPolygon", "signature": "IPolygon buildSegmentHalfBuffer(ILineSegment line,\n      double distance, Side side)", "full_signature": "public static IPolygon buildSegmentHalfBuffer(ILineSegment line,\n      double distance, Side side)", "class_method_signature": "BufferComputing.buildSegmentHalfBuffer(ILineSegment line,\n      double distance, Side side)", "testcase": false, "constructor": false}, {"identifier": "getEndingPtsOfRoundPart", "parameters": "(\n      IDirectPosition point, IRing buffer, double distance)", "modifiers": "public static", "return": "HashMap<IDirectPosition, Integer>", "signature": "HashMap<IDirectPosition, Integer> getEndingPtsOfRoundPart(\n      IDirectPosition point, IRing buffer, double distance)", "full_signature": "public static HashMap<IDirectPosition, Integer> getEndingPtsOfRoundPart(\n      IDirectPosition point, IRing buffer, double distance)", "class_method_signature": "BufferComputing.getEndingPtsOfRoundPart(\n      IDirectPosition point, IRing buffer, double distance)", "testcase": false, "constructor": false}, {"identifier": "getSideEndingPtsOfRoundPart", "parameters": "(Side side, boolean start,\n      IDirectPosition point, IRing buffer, double distance)", "modifiers": "public static", "return": "int", "signature": "int getSideEndingPtsOfRoundPart(Side side, boolean start,\n      IDirectPosition point, IRing buffer, double distance)", "full_signature": "public static int getSideEndingPtsOfRoundPart(Side side, boolean start,\n      IDirectPosition point, IRing buffer, double distance)", "class_method_signature": "BufferComputing.getSideEndingPtsOfRoundPart(Side side, boolean start,\n      IDirectPosition point, IRing buffer, double distance)", "testcase": false, "constructor": false}, {"identifier": "buildHalfOffsetBuffer", "parameters": "(Side side, ILineString line,\n      double distance)", "modifiers": "public static", "return": "IPolygon", "signature": "IPolygon buildHalfOffsetBuffer(Side side, ILineString line,\n      double distance)", "full_signature": "public static IPolygon buildHalfOffsetBuffer(Side side, ILineString line,\n      double distance)", "class_method_signature": "BufferComputing.buildHalfOffsetBuffer(Side side, ILineString line,\n      double distance)", "testcase": false, "constructor": false}, {"identifier": "buildHalfOffsetLine", "parameters": "(Side side, ILineString line,\n      double distance)", "modifiers": "public static", "return": "ILineString", "signature": "ILineString buildHalfOffsetLine(Side side, ILineString line,\n      double distance)", "full_signature": "public static ILineString buildHalfOffsetLine(Side side, ILineString line,\n      double distance)", "class_method_signature": "BufferComputing.buildHalfOffsetLine(Side side, ILineString line,\n      double distance)", "testcase": false, "constructor": false}], "file": "geoxygene-spatial/src/main/java/fr/ign/cogit/geoxygene/util/algo/geometricAlgorithms/morphomaths/BufferComputing.java"}, "focal_method": {"identifier": "buildHalfOffsetLine", "parameters": "(Side side, ILineString line,\n      double distance)", "modifiers": "public static", "return": "ILineString", "body": "public static ILineString buildHalfOffsetLine(Side side, ILineString line,\n      double distance) {\n    IPolygon offsetBuffer = buildHalfOffsetBuffer(side, line, distance);\n    IDirectPositionList pts = offsetBuffer.coord();\n\n    for (IDirectPosition pt : line.coord())\n      pts.remove(pt);\n    // then remove the last point of the polygon\n    pts.remove(pts.size() - 1);\n\n    return new GM_LineString(pts);\n\n  }", "signature": "ILineString buildHalfOffsetLine(Side side, ILineString line,\n      double distance)", "full_signature": "public static ILineString buildHalfOffsetLine(Side side, ILineString line,\n      double distance)", "class_method_signature": "BufferComputing.buildHalfOffsetLine(Side side, ILineString line,\n      double distance)", "testcase": false, "constructor": false, "invocations": ["buildHalfOffsetBuffer", "coord", "coord", "remove", "remove", "size"]}, "repository": {"repo_id": 56582318, "url": "https://github.com/IGNF/geoxygene", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 22, "size": 323511, "license": "licensed"}}