{"test_class": {"identifier": "ByteEntityProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private byte[] testContent;", "modifier": "private", "type": "byte[]", "declarator": "testContent", "var_name": "testContent"}, {"original_string": "private ByteEntityProvider byteEntityProvider;", "modifier": "private", "type": "ByteEntityProvider", "declarator": "byteEntityProvider", "var_name": "byteEntityProvider"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/provider/ByteEntityProviderTest.java"}, "test_case": {"identifier": "readsContentOfEntityStreamAsByteArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void readsContentOfEntityStreamAsByteArray() throws Exception {\n        byte[] result = byteEntityProvider.readFrom(byte[].class, null, null, MediaType.WILDCARD_TYPE, new MultivaluedMapImpl(),\n                                                    new ByteArrayInputStream(testContent));\n        assertArrayEquals(testContent, result);\n    }", "signature": "void readsContentOfEntityStreamAsByteArray()", "full_signature": "@Test public void readsContentOfEntityStreamAsByteArray()", "class_method_signature": "ByteEntityProviderTest.readsContentOfEntityStreamAsByteArray()", "testcase": true, "constructor": false, "invocations": ["readFrom", "assertArrayEquals"]}, "focal_class": {"identifier": "ByteEntityProvider", "superclass": "", "interfaces": "implements EntityProvider<byte[]>", "fields": [], "methods": [{"identifier": "isReadable", "parameters": "(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public boolean isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "ByteEntityProvider.isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "readFrom", "parameters": "(Class<byte[]> type,\n                           Type genericType,\n                           Annotation[] annotations,\n                           MediaType mediaType,\n                           MultivaluedMap<String, String> httpHeaders,\n                           InputStream entityStream)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] readFrom(Class<byte[]> type,\n                           Type genericType,\n                           Annotation[] annotations,\n                           MediaType mediaType,\n                           MultivaluedMap<String, String> httpHeaders,\n                           InputStream entityStream)", "full_signature": "@Override public byte[] readFrom(Class<byte[]> type,\n                           Type genericType,\n                           Annotation[] annotations,\n                           MediaType mediaType,\n                           MultivaluedMap<String, String> httpHeaders,\n                           InputStream entityStream)", "class_method_signature": "ByteEntityProvider.readFrom(Class<byte[]> type,\n                           Type genericType,\n                           Annotation[] annotations,\n                           MediaType mediaType,\n                           MultivaluedMap<String, String> httpHeaders,\n                           InputStream entityStream)", "testcase": false, "constructor": false}, {"identifier": "getContentLength", "parameters": "(MultivaluedMap<String, String> httpHeaders)", "modifiers": "private", "return": "int", "signature": "int getContentLength(MultivaluedMap<String, String> httpHeaders)", "full_signature": "private int getContentLength(MultivaluedMap<String, String> httpHeaders)", "class_method_signature": "ByteEntityProvider.getContentLength(MultivaluedMap<String, String> httpHeaders)", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "(byte[] bytes, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "long", "signature": "long getSize(byte[] bytes, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public long getSize(byte[] bytes, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "ByteEntityProvider.getSize(byte[] bytes, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "isWriteable", "parameters": "(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "ByteEntityProvider.isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "writeTo", "parameters": "(byte[] bytes,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "modifiers": "@Override public", "return": "void", "signature": "void writeTo(byte[] bytes,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "full_signature": "@Override public void writeTo(byte[] bytes,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "class_method_signature": "ByteEntityProvider.writeTo(byte[] bytes,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/provider/ByteEntityProvider.java"}, "focal_method": {"identifier": "readFrom", "parameters": "(Class<byte[]> type,\n                           Type genericType,\n                           Annotation[] annotations,\n                           MediaType mediaType,\n                           MultivaluedMap<String, String> httpHeaders,\n                           InputStream entityStream)", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n    public byte[] readFrom(Class<byte[]> type,\n                           Type genericType,\n                           Annotation[] annotations,\n                           MediaType mediaType,\n                           MultivaluedMap<String, String> httpHeaders,\n                           InputStream entityStream) throws IOException {\n        int length = getContentLength(httpHeaders);\n        ByteArrayOutputStream out = length > 0 ? new NoSyncByteArrayOutputStream(length) : new NoSyncByteArrayOutputStream();\n        ByteStreams.copy(entityStream, out);\n        return out.toByteArray();\n    }", "signature": "byte[] readFrom(Class<byte[]> type,\n                           Type genericType,\n                           Annotation[] annotations,\n                           MediaType mediaType,\n                           MultivaluedMap<String, String> httpHeaders,\n                           InputStream entityStream)", "full_signature": "@Override public byte[] readFrom(Class<byte[]> type,\n                           Type genericType,\n                           Annotation[] annotations,\n                           MediaType mediaType,\n                           MultivaluedMap<String, String> httpHeaders,\n                           InputStream entityStream)", "class_method_signature": "ByteEntityProvider.readFrom(Class<byte[]> type,\n                           Type genericType,\n                           Annotation[] annotations,\n                           MediaType mediaType,\n                           MultivaluedMap<String, String> httpHeaders,\n                           InputStream entityStream)", "testcase": false, "constructor": false, "invocations": ["getContentLength", "copy", "toByteArray"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}