{"test_class": {"identifier": "DataModelFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException exc = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "exc = ExpectedException.none()", "var_name": "exc"}], "file": "commons/src/test/java/org/axway/grapes/commons/datamodel/DataModelFactoryTest.java"}, "test_case": {"identifier": "createComment", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createComment() throws UnsupportedScopeException {\n        Comment comment = DataModelFactory.createComment(\"com.axway.test:1.0.0::jar\",\n                \"DbArtifact\",\n                \"Flag as DO_NOT_USE\",\n                \"test comment\",\n                \"testUser\",\n                new Date());\n\n        assertNotNull(comment);\n        assertEquals(\"com.axway.test:1.0.0::jar\", comment.getEntityId());\n        assertEquals(\"DbArtifact\", comment.getEntityType());\n        assertEquals(\"test comment\", comment.getCommentText());\n        assertEquals(\"testUser\", comment.getCommentedBy());\n        assertEquals(\"Flag as DO_NOT_USE\", comment.getAction());\n    }", "signature": "void createComment()", "full_signature": "@Test public void createComment()", "class_method_signature": "DataModelFactoryTest.createComment()", "testcase": true, "constructor": false, "invocations": ["createComment", "assertNotNull", "assertEquals", "getEntityId", "assertEquals", "getEntityType", "assertEquals", "getCommentText", "assertEquals", "getCommentedBy", "assertEquals", "getAction"]}, "focal_class": {"identifier": "DataModelFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(DataModelFactory.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(DataModelFactory.class.getName())", "var_name": "LOG"}], "methods": [{"identifier": "DataModelFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " DataModelFactory()", "full_signature": "private  DataModelFactory()", "class_method_signature": "DataModelFactory.DataModelFactory()", "testcase": false, "constructor": true}, {"identifier": "createOrganization", "parameters": "(final String name)", "modifiers": "public static", "return": "Organization", "signature": "Organization createOrganization(final String name)", "full_signature": "public static Organization createOrganization(final String name)", "class_method_signature": "DataModelFactory.createOrganization(final String name)", "testcase": false, "constructor": false}, {"identifier": "createModule", "parameters": "(final String name,final String version)", "modifiers": "public static", "return": "Module", "signature": "Module createModule(final String name,final String version)", "full_signature": "public static Module createModule(final String name,final String version)", "class_method_signature": "DataModelFactory.createModule(final String name,final String version)", "testcase": false, "constructor": false}, {"identifier": "createArtifact", "parameters": "(final String groupId, final String artifactId, final String version, final String classifier, final String type, final String extension)", "modifiers": "public static", "return": "Artifact", "signature": "Artifact createArtifact(final String groupId, final String artifactId, final String version, final String classifier, final String type, final String extension)", "full_signature": "public static Artifact createArtifact(final String groupId, final String artifactId, final String version, final String classifier, final String type, final String extension)", "class_method_signature": "DataModelFactory.createArtifact(final String groupId, final String artifactId, final String version, final String classifier, final String type, final String extension)", "testcase": false, "constructor": false}, {"identifier": "createArtifact", "parameters": "(final String groupId, final String artifactId, final String version, final String classifier, final String type, final String extension, final String origin)", "modifiers": "public static", "return": "Artifact", "signature": "Artifact createArtifact(final String groupId, final String artifactId, final String version, final String classifier, final String type, final String extension, final String origin)", "full_signature": "public static Artifact createArtifact(final String groupId, final String artifactId, final String version, final String classifier, final String type, final String extension, final String origin)", "class_method_signature": "DataModelFactory.createArtifact(final String groupId, final String artifactId, final String version, final String classifier, final String type, final String extension, final String origin)", "testcase": false, "constructor": false}, {"identifier": "createLicense", "parameters": "(final String name, final String longName, final String comments, final String regexp, final String url)", "modifiers": "public static", "return": "License", "signature": "License createLicense(final String name, final String longName, final String comments, final String regexp, final String url)", "full_signature": "public static License createLicense(final String name, final String longName, final String comments, final String regexp, final String url)", "class_method_signature": "DataModelFactory.createLicense(final String name, final String longName, final String comments, final String regexp, final String url)", "testcase": false, "constructor": false}, {"identifier": "createDependency", "parameters": "(final Artifact artifact, final Scope scope)", "modifiers": "public static", "return": "Dependency", "signature": "Dependency createDependency(final Artifact artifact, final Scope scope)", "full_signature": "public static Dependency createDependency(final Artifact artifact, final Scope scope)", "class_method_signature": "DataModelFactory.createDependency(final Artifact artifact, final Scope scope)", "testcase": false, "constructor": false}, {"identifier": "createDependency", "parameters": "(final Artifact artifact, final String scope)", "modifiers": "public static", "return": "Dependency", "signature": "Dependency createDependency(final Artifact artifact, final String scope)", "full_signature": "public static Dependency createDependency(final Artifact artifact, final String scope)", "class_method_signature": "DataModelFactory.createDependency(final Artifact artifact, final String scope)", "testcase": false, "constructor": false}, {"identifier": "createPromotionDetails", "parameters": "(final Boolean canBePromoted, final Boolean isSnapshot, final List<String> unPromotedDependencies, final List<Artifact> doNotUseArtifacts)", "modifiers": "public static", "return": "PromotionDetails", "signature": "PromotionDetails createPromotionDetails(final Boolean canBePromoted, final Boolean isSnapshot, final List<String> unPromotedDependencies, final List<Artifact> doNotUseArtifacts)", "full_signature": "public static PromotionDetails createPromotionDetails(final Boolean canBePromoted, final Boolean isSnapshot, final List<String> unPromotedDependencies, final List<Artifact> doNotUseArtifacts)", "class_method_signature": "DataModelFactory.createPromotionDetails(final Boolean canBePromoted, final Boolean isSnapshot, final List<String> unPromotedDependencies, final List<Artifact> doNotUseArtifacts)", "testcase": false, "constructor": false}, {"identifier": "createDelivery", "parameters": "(final String commercialName, final String commercialVersion, final String releaseDate, final List<String> dependencies)", "modifiers": "public static", "return": "Delivery", "signature": "Delivery createDelivery(final String commercialName, final String commercialVersion, final String releaseDate, final List<String> dependencies)", "full_signature": "public static Delivery createDelivery(final String commercialName, final String commercialVersion, final String releaseDate, final List<String> dependencies)", "class_method_signature": "DataModelFactory.createDelivery(final String commercialName, final String commercialVersion, final String releaseDate, final List<String> dependencies)", "testcase": false, "constructor": false}, {"identifier": "createArtifactPromotionStatus", "parameters": "(final Boolean promoted, final String message)", "modifiers": "public static", "return": "ArtifactPromotionStatus", "signature": "ArtifactPromotionStatus createArtifactPromotionStatus(final Boolean promoted, final String message)", "full_signature": "public static ArtifactPromotionStatus createArtifactPromotionStatus(final Boolean promoted, final String message)", "class_method_signature": "DataModelFactory.createArtifactPromotionStatus(final Boolean promoted, final String message)", "testcase": false, "constructor": false}, {"identifier": "createArtifactQuery", "parameters": "(final String user, final int stage , final String name, final String sha256, final String type, final String location)", "modifiers": "public static", "return": "ArtifactQuery", "signature": "ArtifactQuery createArtifactQuery(final String user, final int stage , final String name, final String sha256, final String type, final String location)", "full_signature": "public static ArtifactQuery createArtifactQuery(final String user, final int stage , final String name, final String sha256, final String type, final String location)", "class_method_signature": "DataModelFactory.createArtifactQuery(final String user, final int stage , final String name, final String sha256, final String type, final String location)", "testcase": false, "constructor": false}, {"identifier": "createComment", "parameters": "(final String entityId,\n\t\t\t\t\t\t\t\t\t\tfinal String entityType,\n\t\t\t\t\t\t\t\t\t\tfinal String action,\n\t\t\t\t\t\t\t\t\t\tfinal String commentedText,\n\t\t\t\t\t\t\t\t\t\tfinal String user,\n\t\t\t\t\t\t\t\t\t\tfinal Date date)", "modifiers": "public static", "return": "Comment", "signature": "Comment createComment(final String entityId,\n\t\t\t\t\t\t\t\t\t\tfinal String entityType,\n\t\t\t\t\t\t\t\t\t\tfinal String action,\n\t\t\t\t\t\t\t\t\t\tfinal String commentedText,\n\t\t\t\t\t\t\t\t\t\tfinal String user,\n\t\t\t\t\t\t\t\t\t\tfinal Date date)", "full_signature": "public static Comment createComment(final String entityId,\n\t\t\t\t\t\t\t\t\t\tfinal String entityType,\n\t\t\t\t\t\t\t\t\t\tfinal String action,\n\t\t\t\t\t\t\t\t\t\tfinal String commentedText,\n\t\t\t\t\t\t\t\t\t\tfinal String user,\n\t\t\t\t\t\t\t\t\t\tfinal Date date)", "class_method_signature": "DataModelFactory.createComment(final String entityId,\n\t\t\t\t\t\t\t\t\t\tfinal String entityType,\n\t\t\t\t\t\t\t\t\t\tfinal String action,\n\t\t\t\t\t\t\t\t\t\tfinal String commentedText,\n\t\t\t\t\t\t\t\t\t\tfinal String user,\n\t\t\t\t\t\t\t\t\t\tfinal Date date)", "testcase": false, "constructor": false}], "file": "commons/src/main/java/org/axway/grapes/commons/datamodel/DataModelFactory.java"}, "focal_method": {"identifier": "createComment", "parameters": "(final String entityId,\n\t\t\t\t\t\t\t\t\t\tfinal String entityType,\n\t\t\t\t\t\t\t\t\t\tfinal String action,\n\t\t\t\t\t\t\t\t\t\tfinal String commentedText,\n\t\t\t\t\t\t\t\t\t\tfinal String user,\n\t\t\t\t\t\t\t\t\t\tfinal Date date)", "modifiers": "public static", "return": "Comment", "body": "public static Comment createComment(final String entityId,\n\t\t\t\t\t\t\t\t\t\tfinal String entityType,\n\t\t\t\t\t\t\t\t\t\tfinal String action,\n\t\t\t\t\t\t\t\t\t\tfinal String commentedText,\n\t\t\t\t\t\t\t\t\t\tfinal String user,\n\t\t\t\t\t\t\t\t\t\tfinal Date date) {\n\n\t\tfinal Comment comment = new Comment();\n\t\tcomment.setEntityId(entityId);\n\t\tcomment.setEntityType(entityType);\n\t\tcomment.setAction(action);\n\t\tcomment.setCommentText(commentedText);\n\t\tcomment.setCommentedBy(user);\n\t\tcomment.setCreatedDateTime(date);\n\t\treturn comment;\n\t}", "signature": "Comment createComment(final String entityId,\n\t\t\t\t\t\t\t\t\t\tfinal String entityType,\n\t\t\t\t\t\t\t\t\t\tfinal String action,\n\t\t\t\t\t\t\t\t\t\tfinal String commentedText,\n\t\t\t\t\t\t\t\t\t\tfinal String user,\n\t\t\t\t\t\t\t\t\t\tfinal Date date)", "full_signature": "public static Comment createComment(final String entityId,\n\t\t\t\t\t\t\t\t\t\tfinal String entityType,\n\t\t\t\t\t\t\t\t\t\tfinal String action,\n\t\t\t\t\t\t\t\t\t\tfinal String commentedText,\n\t\t\t\t\t\t\t\t\t\tfinal String user,\n\t\t\t\t\t\t\t\t\t\tfinal Date date)", "class_method_signature": "DataModelFactory.createComment(final String entityId,\n\t\t\t\t\t\t\t\t\t\tfinal String entityType,\n\t\t\t\t\t\t\t\t\t\tfinal String action,\n\t\t\t\t\t\t\t\t\t\tfinal String commentedText,\n\t\t\t\t\t\t\t\t\t\tfinal String user,\n\t\t\t\t\t\t\t\t\t\tfinal Date date)", "testcase": false, "constructor": false, "invocations": ["setEntityId", "setEntityType", "setAction", "setCommentText", "setCommentedBy", "setCreatedDateTime"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}