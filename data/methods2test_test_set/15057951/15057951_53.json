{"test_class": {"identifier": "EntryToMapConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EntryToMapConverter converter;", "modifier": "private", "type": "EntryToMapConverter", "declarator": "converter", "var_name": "converter"}], "file": "smartparam-editor/src/test/java/org/smartparam/editor/core/entry/EntryToMapConverterTest.java"}, "test_case": {"identifier": "shouldReturnNullWhenNoTypeRegisteredForLevelAndValueIsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnNullWhenNoTypeRegisteredForLevelAndValueIsNull() {\n        // when\n        Parameter metadata = new SimpleParameter().withLevel(new SimpleLevel().withName(\"nullValue\"));\n        ParameterEntry entry = new SimpleParameterEntry((String) null);\n\n        // when\n        MapEntry map = converter.asMap(metadata, entry);\n\n        // then\n        assertThat(map.get(\"nullValue\")).isNull();\n    }", "signature": "void shouldReturnNullWhenNoTypeRegisteredForLevelAndValueIsNull()", "full_signature": "@Test public void shouldReturnNullWhenNoTypeRegisteredForLevelAndValueIsNull()", "class_method_signature": "EntryToMapConverterTest.shouldReturnNullWhenNoTypeRegisteredForLevelAndValueIsNull()", "testcase": true, "constructor": false, "invocations": ["withLevel", "withName", "asMap", "isNull", "assertThat", "get"]}, "focal_class": {"identifier": "EntryToMapConverter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ParamEngineRuntimeConfig engineConfig;", "modifier": "private final", "type": "ParamEngineRuntimeConfig", "declarator": "engineConfig", "var_name": "engineConfig"}, {"original_string": "private final MatcherTypeRepository decoderRepository;", "modifier": "private final", "type": "MatcherTypeRepository", "declarator": "decoderRepository", "var_name": "decoderRepository"}], "methods": [{"identifier": "EntryToMapConverter", "parameters": "(ParamEngineRuntimeConfig engineConfig)", "modifiers": "", "return": "", "signature": " EntryToMapConverter(ParamEngineRuntimeConfig engineConfig)", "full_signature": "  EntryToMapConverter(ParamEngineRuntimeConfig engineConfig)", "class_method_signature": "EntryToMapConverter.EntryToMapConverter(ParamEngineRuntimeConfig engineConfig)", "testcase": false, "constructor": true}, {"identifier": "asMap", "parameters": "(Parameter metadata, ParameterEntry parameterEntry)", "modifiers": "", "return": "MapEntry", "signature": "MapEntry asMap(Parameter metadata, ParameterEntry parameterEntry)", "full_signature": " MapEntry asMap(Parameter metadata, ParameterEntry parameterEntry)", "class_method_signature": "EntryToMapConverter.asMap(Parameter metadata, ParameterEntry parameterEntry)", "testcase": false, "constructor": false}, {"identifier": "asObject", "parameters": "(Level level, String levelValue)", "modifiers": "private", "return": "Object", "signature": "Object asObject(Level level, String levelValue)", "full_signature": "private Object asObject(Level level, String levelValue)", "class_method_signature": "EntryToMapConverter.asObject(Level level, String levelValue)", "testcase": false, "constructor": false}], "file": "smartparam-editor/src/main/java/org/smartparam/editor/core/entry/EntryToMapConverter.java"}, "focal_method": {"identifier": "asMap", "parameters": "(Parameter metadata, ParameterEntry parameterEntry)", "modifiers": "", "return": "MapEntry", "body": "MapEntry asMap(Parameter metadata, ParameterEntry parameterEntry) {\n        MapEntry map = new MapEntry(parameterEntry.getKey());\n\n        int index = 0;\n        for (Level level : metadata.getLevels()) {\n            map.put(level.getName(), asObject(level, parameterEntry.getLevels()[index]));\n            index++;\n        }\n\n        return map;\n    }", "signature": "MapEntry asMap(Parameter metadata, ParameterEntry parameterEntry)", "full_signature": " MapEntry asMap(Parameter metadata, ParameterEntry parameterEntry)", "class_method_signature": "EntryToMapConverter.asMap(Parameter metadata, ParameterEntry parameterEntry)", "testcase": false, "constructor": false, "invocations": ["getKey", "getLevels", "put", "getName", "asObject", "getLevels"]}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}