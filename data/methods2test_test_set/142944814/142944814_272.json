{"test_class": {"identifier": "HexUtilsTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "private String[] testcase;", "modifier": "private", "type": "String[]", "declarator": "testcase", "var_name": "testcase"}], "file": "core/util/src/test/java/hera/util/HexUtilsTest.java"}, "test_case": {"identifier": "testDump", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDump() throws Exception {\n\n    byte[] bytes = new byte[1024];\n\n    assertTrue(bytes.length < HexUtils.dump(bytes).length());\n\n    for (int i = 0; i < testcase.length; i++) {\n      final ByteArrayOutputStream byteOut = new ByteArrayOutputStream();\n      final StringReader reader = new StringReader(testcase[i]);\n      try {\n        assertTrue(0 == (testcase[i].length() % 2));\n        char[] characters = new char[2];\n        while (2 == reader.read(characters)) {\n          byteOut.write((byte) Integer.parseInt(new String(characters), 16));\n        }\n        assertNotNull(dump(byteOut.toByteArray()));\n      } finally {\n        close(byteOut, true);\n        closeQuietly(reader);\n      }\n    }\n  }", "signature": "void testDump()", "full_signature": "@Test public void testDump()", "class_method_signature": "HexUtilsTest.testDump()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "length", "dump", "assertTrue", "length", "read", "write", "parseInt", "assertNotNull", "dump", "toByteArray", "close", "closeQuietly"]}, "focal_class": {"identifier": "HexUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final char CONTROL_CHARS_SHOWER = '.';", "modifier": "protected static final", "type": "char", "declarator": "CONTROL_CHARS_SHOWER = '.'", "var_name": "CONTROL_CHARS_SHOWER"}, {"original_string": "protected static final char[] HEXA_CHARS_UPPER =\n      new char[] {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};", "modifier": "protected static final", "type": "char[]", "declarator": "HEXA_CHARS_UPPER =\n      new char[] {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}", "var_name": "HEXA_CHARS_UPPER"}, {"original_string": "protected static final char[] HEXA_CHARS_LOWER =\n      new char[] {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'};", "modifier": "protected static final", "type": "char[]", "declarator": "HEXA_CHARS_LOWER =\n      new char[] {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'}", "var_name": "HEXA_CHARS_LOWER"}, {"original_string": "protected static final int N_INT_BY_BYTE = 4;", "modifier": "protected static final", "type": "int", "declarator": "N_INT_BY_BYTE = 4", "var_name": "N_INT_BY_BYTE"}, {"original_string": "protected static final int WIDTH_PER_LINE = 32;", "modifier": "protected static final", "type": "int", "declarator": "WIDTH_PER_LINE = 32", "var_name": "WIDTH_PER_LINE"}, {"original_string": "protected static final char TWO_BYTES_CHARS_SHOWER = '?';", "modifier": "protected static final", "type": "char", "declarator": "TWO_BYTES_CHARS_SHOWER = '?'", "var_name": "TWO_BYTES_CHARS_SHOWER"}], "methods": [{"identifier": "appendHexa", "parameters": "(final StringBuilder buffer, final int ch,\n      final char[] hexChars)", "modifiers": "protected static", "return": "void", "signature": "void appendHexa(final StringBuilder buffer, final int ch,\n      final char[] hexChars)", "full_signature": "protected static void appendHexa(final StringBuilder buffer, final int ch,\n      final char[] hexChars)", "class_method_signature": "HexUtils.appendHexa(final StringBuilder buffer, final int ch,\n      final char[] hexChars)", "testcase": false, "constructor": false}, {"identifier": "appendHexa", "parameters": "(final StringBuilder buffer, final byte[] bytes,\n      final char[] hexChars)", "modifiers": "protected static", "return": "void", "signature": "void appendHexa(final StringBuilder buffer, final byte[] bytes,\n      final char[] hexChars)", "full_signature": "protected static void appendHexa(final StringBuilder buffer, final byte[] bytes,\n      final char[] hexChars)", "class_method_signature": "HexUtils.appendHexa(final StringBuilder buffer, final byte[] bytes,\n      final char[] hexChars)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(final byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String encode(final byte[] bytes)", "full_signature": "public static String encode(final byte[] bytes)", "class_method_signature": "HexUtils.encode(final byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "encodeLower", "parameters": "(final byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String encodeLower(final byte[] bytes)", "full_signature": "public static String encodeLower(final byte[] bytes)", "class_method_signature": "HexUtils.encodeLower(final byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(final int ch)", "modifiers": "protected static", "return": "int", "signature": "int convert(final int ch)", "full_signature": "protected static int convert(final int ch)", "class_method_signature": "HexUtils.convert(final int ch)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(final String str)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] decode(final String str)", "full_signature": "public static byte[] decode(final String str)", "class_method_signature": "HexUtils.decode(final String str)", "testcase": false, "constructor": false}, {"identifier": "lineEnd", "parameters": "(final StringBuilder hexPart, final StringBuilder textPart,\n      final StringBuilder ret)", "modifiers": "protected static", "return": "void", "signature": "void lineEnd(final StringBuilder hexPart, final StringBuilder textPart,\n      final StringBuilder ret)", "full_signature": "protected static void lineEnd(final StringBuilder hexPart, final StringBuilder textPart,\n      final StringBuilder ret)", "class_method_signature": "HexUtils.lineEnd(final StringBuilder hexPart, final StringBuilder textPart,\n      final StringBuilder ret)", "testcase": false, "constructor": false}, {"identifier": "dump", "parameters": "(final byte[] data)", "modifiers": "public static", "return": "String", "signature": "String dump(final byte[] data)", "full_signature": "public static String dump(final byte[] data)", "class_method_signature": "HexUtils.dump(final byte[] data)", "testcase": false, "constructor": false}, {"identifier": "dump", "parameters": "(final byte[] data, final int offset, final int length)", "modifiers": "public static", "return": "String", "signature": "String dump(final byte[] data, final int offset, final int length)", "full_signature": "public static String dump(final byte[] data, final int offset, final int length)", "class_method_signature": "HexUtils.dump(final byte[] data, final int offset, final int length)", "testcase": false, "constructor": false}, {"identifier": "dump", "parameters": "(final byte[] data, final int offset, final int length,\n      final Writer writer)", "modifiers": "public static", "return": "void", "signature": "void dump(final byte[] data, final int offset, final int length,\n      final Writer writer)", "full_signature": "public static void dump(final byte[] data, final int offset, final int length,\n      final Writer writer)", "class_method_signature": "HexUtils.dump(final byte[] data, final int offset, final int length,\n      final Writer writer)", "testcase": false, "constructor": false}], "file": "core/util/src/main/java/hera/util/HexUtils.java"}, "focal_method": {"identifier": "dump", "parameters": "(final byte[] data)", "modifiers": "public static", "return": "String", "body": "public static String dump(final byte[] data) {\n    if (null == data) {\n      return \"<<null>>\";\n    }\n    return dump(data, 0, data.length);\n  }", "signature": "String dump(final byte[] data)", "full_signature": "public static String dump(final byte[] data)", "class_method_signature": "HexUtils.dump(final byte[] data)", "testcase": false, "constructor": false, "invocations": ["dump"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}