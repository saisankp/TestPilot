{"test_class": {"identifier": "ComposeStackUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int INT_VALUE = 3;", "modifier": "private static final", "type": "int", "declarator": "INT_VALUE = 3", "var_name": "INT_VALUE"}, {"original_string": "private static final long LONG_VALUE = 2L;", "modifier": "private static final", "type": "long", "declarator": "LONG_VALUE = 2L", "var_name": "LONG_VALUE"}], "file": "tiles-template/src/test/java/org/apache/tiles/template/ComposeStackUtilTest.java"}, "test_case": {"identifier": "testFindAncestorWithClass", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFindAncestorWithClass() {\n        Deque<Object> composeStack = new ArrayDeque<Object>();\n        Integer integerValue = new Integer(1);\n        Long longValue = new Long(LONG_VALUE);\n        String stringValue = \"my value\";\n        Integer integerValue2 = new Integer(INT_VALUE);\n        composeStack.push(integerValue);\n        composeStack.push(longValue);\n        composeStack.push(stringValue);\n        composeStack.push(integerValue2);\n        assertEquals(integerValue2, ComposeStackUtil.findAncestorWithClass(composeStack, Integer.class));\n        assertEquals(longValue, ComposeStackUtil.findAncestorWithClass(composeStack, Long.class));\n        assertEquals(stringValue, ComposeStackUtil.findAncestorWithClass(composeStack, String.class));\n        assertEquals(integerValue2, ComposeStackUtil.findAncestorWithClass(composeStack, Object.class));\n        assertNull(ComposeStackUtil.findAncestorWithClass(composeStack, Date.class));\n    }", "signature": "void testFindAncestorWithClass()", "full_signature": "@Test public void testFindAncestorWithClass()", "class_method_signature": "ComposeStackUtilTest.testFindAncestorWithClass()", "testcase": true, "constructor": false, "invocations": ["push", "push", "push", "push", "assertEquals", "findAncestorWithClass", "assertEquals", "findAncestorWithClass", "assertEquals", "findAncestorWithClass", "assertEquals", "findAncestorWithClass", "assertNull", "findAncestorWithClass"]}, "focal_class": {"identifier": "ComposeStackUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String COMPOSE_STACK_ATTRIBUTE_NAME = \"org.apache.tiles.template.COMPOSE_STACK\";", "modifier": "public static final", "type": "String", "declarator": "COMPOSE_STACK_ATTRIBUTE_NAME = \"org.apache.tiles.template.COMPOSE_STACK\"", "var_name": "COMPOSE_STACK_ATTRIBUTE_NAME"}], "methods": [{"identifier": "ComposeStackUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " ComposeStackUtil()", "full_signature": "private  ComposeStackUtil()", "class_method_signature": "ComposeStackUtil.ComposeStackUtil()", "testcase": false, "constructor": true}, {"identifier": "findAncestorWithClass", "parameters": "(Deque<Object> composeStack, Class<?> clazz)", "modifiers": "public static", "return": "Object", "signature": "Object findAncestorWithClass(Deque<Object> composeStack, Class<?> clazz)", "full_signature": "public static Object findAncestorWithClass(Deque<Object> composeStack, Class<?> clazz)", "class_method_signature": "ComposeStackUtil.findAncestorWithClass(Deque<Object> composeStack, Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getComposeStack", "parameters": "(Request request)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "Deque<Object>", "signature": "Deque<Object> getComposeStack(Request request)", "full_signature": "@SuppressWarnings(\"unchecked\") public static Deque<Object> getComposeStack(Request request)", "class_method_signature": "ComposeStackUtil.getComposeStack(Request request)", "testcase": false, "constructor": false}], "file": "tiles-template/src/main/java/org/apache/tiles/template/ComposeStackUtil.java"}, "focal_method": {"identifier": "findAncestorWithClass", "parameters": "(Deque<Object> composeStack, Class<?> clazz)", "modifiers": "public static", "return": "Object", "body": "public static Object findAncestorWithClass(Deque<Object> composeStack, Class<?> clazz) {\n        for (Object obj : composeStack) {\n            if (clazz.isAssignableFrom(obj.getClass())) {\n                return obj;\n            }\n        }\n\n        return null;\n    }", "signature": "Object findAncestorWithClass(Deque<Object> composeStack, Class<?> clazz)", "full_signature": "public static Object findAncestorWithClass(Deque<Object> composeStack, Class<?> clazz)", "class_method_signature": "ComposeStackUtil.findAncestorWithClass(Deque<Object> composeStack, Class<?> clazz)", "testcase": false, "constructor": false, "invocations": ["isAssignableFrom", "getClass"]}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}