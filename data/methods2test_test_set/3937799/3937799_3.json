{"test_class": {"identifier": "TestINodeFile", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final short BLOCKBITS = 48;", "modifier": "static final", "type": "short", "declarator": "BLOCKBITS = 48", "var_name": "BLOCKBITS"}, {"original_string": "static final long BLKSIZE_MAXVALUE = ~(0xffffL << BLOCKBITS);", "modifier": "static final", "type": "long", "declarator": "BLKSIZE_MAXVALUE = ~(0xffffL << BLOCKBITS)", "var_name": "BLKSIZE_MAXVALUE"}, {"original_string": "private String userName = \"Test\";", "modifier": "private", "type": "String", "declarator": "userName = \"Test\"", "var_name": "userName"}, {"original_string": "private short replication;", "modifier": "private", "type": "short", "declarator": "replication", "var_name": "replication"}, {"original_string": "private long preferredBlockSize;", "modifier": "private", "type": "long", "declarator": "preferredBlockSize", "var_name": "preferredBlockSize"}], "file": "adfs-hdfs-project/adfs-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestINodeFile.java"}, "test_case": {"identifier": "testPreferredBlockSize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testPreferredBlockSize () {\n    replication = 3;\n    preferredBlockSize = 128*1024*1024;\n    INodeFile inf = new INodeFile(new PermissionStatus(userName, null,\n                                  FsPermission.getDefault()), null, replication,\n                                  0L, 0L, preferredBlockSize);\n    assertEquals(\"True has to be returned in this case\", preferredBlockSize,\n           inf.getPreferredBlockSize());\n  }", "signature": "void testPreferredBlockSize()", "full_signature": "@Test public void testPreferredBlockSize()", "class_method_signature": "TestINodeFile.testPreferredBlockSize()", "testcase": true, "constructor": false, "invocations": ["getDefault", "assertEquals", "getPreferredBlockSize"]}, "focal_class": {"identifier": "INodeFile", "superclass": "extends INode", "interfaces": "", "fields": [{"original_string": "static final FsPermission UMASK = FsPermission.createImmutable((short) 0111);", "modifier": "static final", "type": "FsPermission", "declarator": "UMASK = FsPermission.createImmutable((short) 0111)", "var_name": "UMASK"}, {"original_string": "static final short BLOCKBITS = 48;", "modifier": "static final", "type": "short", "declarator": "BLOCKBITS = 48", "var_name": "BLOCKBITS"}, {"original_string": "static final long HEADERMASK = 0xffffL << BLOCKBITS;", "modifier": "static final", "type": "long", "declarator": "HEADERMASK = 0xffffL << BLOCKBITS", "var_name": "HEADERMASK"}, {"original_string": "protected long header;", "modifier": "protected", "type": "long", "declarator": "header", "var_name": "header"}, {"original_string": "protected BlockInfo blocks[] = null;", "modifier": "protected", "type": "BlockInfo", "declarator": "blocks[] = null", "var_name": "blocks"}], "methods": [{"identifier": "INodeFile", "parameters": "(PermissionStatus permissions, int nrBlocks, short replication, long modificationTime, long atime,\n      long preferredBlockSize)", "modifiers": "", "return": "", "signature": " INodeFile(PermissionStatus permissions, int nrBlocks, short replication, long modificationTime, long atime,\n      long preferredBlockSize)", "full_signature": "  INodeFile(PermissionStatus permissions, int nrBlocks, short replication, long modificationTime, long atime,\n      long preferredBlockSize)", "class_method_signature": "INodeFile.INodeFile(PermissionStatus permissions, int nrBlocks, short replication, long modificationTime, long atime,\n      long preferredBlockSize)", "testcase": false, "constructor": true}, {"identifier": "INodeFile", "parameters": "()", "modifiers": "protected", "return": "", "signature": " INodeFile()", "full_signature": "protected  INodeFile()", "class_method_signature": "INodeFile.INodeFile()", "testcase": false, "constructor": true}, {"identifier": "INodeFile", "parameters": "(PermissionStatus permissions, BlockInfo[] blklist, short replication, long modificationTime,\n      long atime, long preferredBlockSize)", "modifiers": "protected", "return": "", "signature": " INodeFile(PermissionStatus permissions, BlockInfo[] blklist, short replication, long modificationTime,\n      long atime, long preferredBlockSize)", "full_signature": "protected  INodeFile(PermissionStatus permissions, BlockInfo[] blklist, short replication, long modificationTime,\n      long atime, long preferredBlockSize)", "class_method_signature": "INodeFile.INodeFile(PermissionStatus permissions, BlockInfo[] blklist, short replication, long modificationTime,\n      long atime, long preferredBlockSize)", "testcase": false, "constructor": true}, {"identifier": "setPermission", "parameters": "(FsPermission permission)", "modifiers": "protected", "return": "void", "signature": "void setPermission(FsPermission permission)", "full_signature": "protected void setPermission(FsPermission permission)", "class_method_signature": "INodeFile.setPermission(FsPermission permission)", "testcase": false, "constructor": false}, {"identifier": "isDirectory", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDirectory()", "full_signature": "public boolean isDirectory()", "class_method_signature": "INodeFile.isDirectory()", "testcase": false, "constructor": false}, {"identifier": "getReplication", "parameters": "()", "modifiers": "public", "return": "short", "signature": "short getReplication()", "full_signature": "public short getReplication()", "class_method_signature": "INodeFile.getReplication()", "testcase": false, "constructor": false}, {"identifier": "setReplication", "parameters": "(short replication)", "modifiers": "public", "return": "void", "signature": "void setReplication(short replication)", "full_signature": "public void setReplication(short replication)", "class_method_signature": "INodeFile.setReplication(short replication)", "testcase": false, "constructor": false}, {"identifier": "getPreferredBlockSize", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getPreferredBlockSize()", "full_signature": "public long getPreferredBlockSize()", "class_method_signature": "INodeFile.getPreferredBlockSize()", "testcase": false, "constructor": false}, {"identifier": "setPreferredBlockSize", "parameters": "(long preferredBlkSize)", "modifiers": "public", "return": "void", "signature": "void setPreferredBlockSize(long preferredBlkSize)", "full_signature": "public void setPreferredBlockSize(long preferredBlkSize)", "class_method_signature": "INodeFile.setPreferredBlockSize(long preferredBlkSize)", "testcase": false, "constructor": false}, {"identifier": "getBlocks", "parameters": "()", "modifiers": "", "return": "BlockInfo[]", "signature": "BlockInfo[] getBlocks()", "full_signature": " BlockInfo[] getBlocks()", "class_method_signature": "INodeFile.getBlocks()", "testcase": false, "constructor": false}, {"identifier": "getLastBlock", "parameters": "()", "modifiers": "", "return": "Block", "signature": "Block getLastBlock()", "full_signature": " Block getLastBlock()", "class_method_signature": "INodeFile.getLastBlock()", "testcase": false, "constructor": false}, {"identifier": "addBlock", "parameters": "(BlockInfo newblock)", "modifiers": "", "return": "void", "signature": "void addBlock(BlockInfo newblock)", "full_signature": " void addBlock(BlockInfo newblock)", "class_method_signature": "INodeFile.addBlock(BlockInfo newblock)", "testcase": false, "constructor": false}, {"identifier": "setBlock", "parameters": "(int idx, BlockInfo blk)", "modifiers": "", "return": "void", "signature": "void setBlock(int idx, BlockInfo blk)", "full_signature": " void setBlock(int idx, BlockInfo blk)", "class_method_signature": "INodeFile.setBlock(int idx, BlockInfo blk)", "testcase": false, "constructor": false}, {"identifier": "collectSubtreeBlocksAndClear", "parameters": "(List<Block> v)", "modifiers": "", "return": "int", "signature": "int collectSubtreeBlocksAndClear(List<Block> v)", "full_signature": " int collectSubtreeBlocksAndClear(List<Block> v)", "class_method_signature": "INodeFile.collectSubtreeBlocksAndClear(List<Block> v)", "testcase": false, "constructor": false}, {"identifier": "computeContentSummary", "parameters": "(long[] summary)", "modifiers": "", "return": "long[]", "signature": "long[] computeContentSummary(long[] summary)", "full_signature": " long[] computeContentSummary(long[] summary)", "class_method_signature": "INodeFile.computeContentSummary(long[] summary)", "testcase": false, "constructor": false}, {"identifier": "spaceConsumedInTree", "parameters": "(DirCounts counts)", "modifiers": "@Override", "return": "DirCounts", "signature": "DirCounts spaceConsumedInTree(DirCounts counts)", "full_signature": "@Override DirCounts spaceConsumedInTree(DirCounts counts)", "class_method_signature": "INodeFile.spaceConsumedInTree(DirCounts counts)", "testcase": false, "constructor": false}, {"identifier": "diskspaceConsumed", "parameters": "()", "modifiers": "", "return": "long", "signature": "long diskspaceConsumed()", "full_signature": " long diskspaceConsumed()", "class_method_signature": "INodeFile.diskspaceConsumed()", "testcase": false, "constructor": false}, {"identifier": "diskspaceConsumed", "parameters": "(Block[] blkArr)", "modifiers": "", "return": "long", "signature": "long diskspaceConsumed(Block[] blkArr)", "full_signature": " long diskspaceConsumed(Block[] blkArr)", "class_method_signature": "INodeFile.diskspaceConsumed(Block[] blkArr)", "testcase": false, "constructor": false}, {"identifier": "getPenultimateBlock", "parameters": "()", "modifiers": "", "return": "Block", "signature": "Block getPenultimateBlock()", "full_signature": " Block getPenultimateBlock()", "class_method_signature": "INodeFile.getPenultimateBlock()", "testcase": false, "constructor": false}], "file": "adfs-hdfs-project/adfs-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java"}, "focal_method": {"identifier": "getPreferredBlockSize", "parameters": "()", "modifiers": "public", "return": "long", "body": "public long getPreferredBlockSize() {\n    return header & ~HEADERMASK;\n  }", "signature": "long getPreferredBlockSize()", "full_signature": "public long getPreferredBlockSize()", "class_method_signature": "INodeFile.getPreferredBlockSize()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 3937799, "url": "https://github.com/taobao/ADFS", "language": "Java", "is_fork": false, "fork_count": 50, "stargazer_count": 108, "size": 53300, "license": "licensed"}}