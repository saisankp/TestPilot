{"test_class": {"identifier": "GeoToolsFeatureModelTest", "superclass": "extends AbstractGeoToolsTest", "interfaces": "", "fields": [{"original_string": "private GeoToolsFeatureModel featureModel;", "modifier": "private", "type": "GeoToolsFeatureModel", "declarator": "featureModel", "var_name": "featureModel"}, {"original_string": "private SimpleFeature feature;", "modifier": "private", "type": "SimpleFeature", "declarator": "feature", "var_name": "feature"}, {"original_string": "@Autowired\n\t@Qualifier(\"populatedPlaces110mInfo\")\n\tprivate VectorLayerInfo layerInfo;", "modifier": "@Autowired\n\t@Qualifier(\"populatedPlaces110mInfo\")\n\tprivate", "type": "VectorLayerInfo", "declarator": "layerInfo", "var_name": "layerInfo"}], "file": "plugin/layer-geotools/geotools/src/test/java/org/geomajas/layer/geotools/GeoToolsFeatureModelTest.java"}, "test_case": {"identifier": "testGetAttributes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetAttributes() throws Exception {\n\t\tAssert.assertEquals(\"Pasay City\", featureModel.getAttributes(feature).get(ATTRIBUTE_NAME).getValue());\n\t}", "signature": "void testGetAttributes()", "full_signature": "@Test public void testGetAttributes()", "class_method_signature": "GeoToolsFeatureModelTest.testGetAttributes()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getValue", "get", "getAttributes"]}, "focal_class": {"identifier": "GeoToolsFeatureModel", "superclass": "extends FeatureSourceRetriever", "interfaces": "implements FeatureModel", "fields": [{"original_string": "private final SimpleFeatureBuilder builder;", "modifier": "private final", "type": "SimpleFeatureBuilder", "declarator": "builder", "var_name": "builder"}, {"original_string": "private final int srid;", "modifier": "private final", "type": "int", "declarator": "srid", "var_name": "srid"}, {"original_string": "private final DtoConverterService converterService;", "modifier": "private final", "type": "DtoConverterService", "declarator": "converterService", "var_name": "converterService"}], "methods": [{"identifier": "GeoToolsFeatureModel", "parameters": "(DataStore dataStore, String featureSourceName, int srid,\n\t\t\tDtoConverterService converterService)", "modifiers": "public", "return": "", "signature": " GeoToolsFeatureModel(DataStore dataStore, String featureSourceName, int srid,\n\t\t\tDtoConverterService converterService)", "full_signature": "public  GeoToolsFeatureModel(DataStore dataStore, String featureSourceName, int srid,\n\t\t\tDtoConverterService converterService)", "class_method_signature": "GeoToolsFeatureModel.GeoToolsFeatureModel(DataStore dataStore, String featureSourceName, int srid,\n\t\t\tDtoConverterService converterService)", "testcase": false, "constructor": true}, {"identifier": "getAttribute", "parameters": "(Object feature, String name)", "modifiers": "@Override public", "return": "Attribute", "signature": "Attribute getAttribute(Object feature, String name)", "full_signature": "@Override public Attribute getAttribute(Object feature, String name)", "class_method_signature": "GeoToolsFeatureModel.getAttribute(Object feature, String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributes", "parameters": "(Object feature)", "modifiers": "@Override public", "return": "Map<String, Attribute>", "signature": "Map<String, Attribute> getAttributes(Object feature)", "full_signature": "@Override public Map<String, Attribute> getAttributes(Object feature)", "class_method_signature": "GeoToolsFeatureModel.getAttributes(Object feature)", "testcase": false, "constructor": false}, {"identifier": "convertAttribute", "parameters": "(Object object, String name)", "modifiers": "private", "return": "Attribute", "signature": "Attribute convertAttribute(Object object, String name)", "full_signature": "private Attribute convertAttribute(Object object, String name)", "class_method_signature": "GeoToolsFeatureModel.convertAttribute(Object object, String name)", "testcase": false, "constructor": false}, {"identifier": "getGeometry", "parameters": "(Object feature)", "modifiers": "@Override public", "return": "Geometry", "signature": "Geometry getGeometry(Object feature)", "full_signature": "@Override public Geometry getGeometry(Object feature)", "class_method_signature": "GeoToolsFeatureModel.getGeometry(Object feature)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "(Object feature)", "modifiers": "@Override public", "return": "String", "signature": "String getId(Object feature)", "full_signature": "@Override public String getId(Object feature)", "class_method_signature": "GeoToolsFeatureModel.getId(Object feature)", "testcase": false, "constructor": false}, {"identifier": "getSrid", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSrid()", "full_signature": "@Override public int getSrid()", "class_method_signature": "GeoToolsFeatureModel.getSrid()", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object newInstance()", "full_signature": "@Override public Object newInstance()", "class_method_signature": "GeoToolsFeatureModel.newInstance()", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(String id)", "modifiers": "@Override public", "return": "Object", "signature": "Object newInstance(String id)", "full_signature": "@Override public Object newInstance(String id)", "class_method_signature": "GeoToolsFeatureModel.newInstance(String id)", "testcase": false, "constructor": false}, {"identifier": "canHandle", "parameters": "(Object feature)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canHandle(Object feature)", "full_signature": "@Override public boolean canHandle(Object feature)", "class_method_signature": "GeoToolsFeatureModel.canHandle(Object feature)", "testcase": false, "constructor": false}], "file": "plugin/layer-geotools/geotools/src/main/java/org/geomajas/layer/geotools/GeoToolsFeatureModel.java"}, "focal_method": {"identifier": "getAttributes", "parameters": "(Object feature)", "modifiers": "@Override public", "return": "Map<String, Attribute>", "body": "@Override\n\tpublic Map<String, Attribute> getAttributes(Object feature) throws LayerException {\n\t\tSimpleFeature f = asFeature(feature);\n\t\tHashMap<String, Attribute> attribs = new HashMap<String, Attribute>();\n\t\tfor (AbstractAttributeInfo attributeInfo : getAttributeInfoMap().values()) {\n\t\t\tString name = attributeInfo.getName();\n\t\t\tattribs.put(name, convertAttribute(f.getAttribute(name), name));\n\t\t}\n\t\treturn attribs;\n\t}", "signature": "Map<String, Attribute> getAttributes(Object feature)", "full_signature": "@Override public Map<String, Attribute> getAttributes(Object feature)", "class_method_signature": "GeoToolsFeatureModel.getAttributes(Object feature)", "testcase": false, "constructor": false, "invocations": ["asFeature", "values", "getAttributeInfoMap", "getName", "put", "convertAttribute", "getAttribute"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}