{"test_class": {"identifier": "FileDbProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FileDbProvider provider = new FileDbProvider();", "modifier": "private", "type": "FileDbProvider", "declarator": "provider = new FileDbProvider()", "var_name": "provider"}], "file": "persistence/modeshape-persistence-file/src/test/java/org/modeshape/persistence/file/FileDbProviderTest.java"}, "test_case": {"identifier": "shouldReturnDBBasedOnType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnDBBasedOnType() {\n        Assert.assertNotNull(provider.getDB(FileDbProvider.TYPE_MEM, new BasicDocument()));        \n        Assert.assertNotNull(provider.getDB(FileDbProvider.TYPE_FILE, new BasicDocument(FileDbProvider.PATH_FIELD, \"path\")));        \n    }", "signature": "void shouldReturnDBBasedOnType()", "full_signature": "@Test public void shouldReturnDBBasedOnType()", "class_method_signature": "FileDbProviderTest.shouldReturnDBBasedOnType()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getDB", "assertNotNull", "getDB"]}, "focal_class": {"identifier": "FileDbProvider", "superclass": "", "interfaces": "implements SchematicDbProvider<FileDb>", "fields": [{"original_string": "public static final String TYPE_MEM = \"mem\";", "modifier": "public static final", "type": "String", "declarator": "TYPE_MEM = \"mem\"", "var_name": "TYPE_MEM"}, {"original_string": "public static final String TYPE_FILE = \"file\";", "modifier": "public static final", "type": "String", "declarator": "TYPE_FILE = \"file\"", "var_name": "TYPE_FILE"}, {"original_string": "public static final String PATH_FIELD = \"path\";", "modifier": "public static final", "type": "String", "declarator": "PATH_FIELD = \"path\"", "var_name": "PATH_FIELD"}, {"original_string": "public static final String COMPRESS_FIELD = \"compress\";", "modifier": "public static final", "type": "String", "declarator": "COMPRESS_FIELD = \"compress\"", "var_name": "COMPRESS_FIELD"}, {"original_string": "private static final Logger LOGGER = Logger.getLogger(FileDbProvider.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(FileDbProvider.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "getDB", "parameters": "( String type, Document configuration )", "modifiers": "@Override public", "return": "FileDb", "signature": "FileDb getDB( String type, Document configuration )", "full_signature": "@Override public FileDb getDB( String type, Document configuration )", "class_method_signature": "FileDbProvider.getDB( String type, Document configuration )", "testcase": false, "constructor": false}], "file": "persistence/modeshape-persistence-file/src/main/java/org/modeshape/persistence/file/FileDbProvider.java"}, "focal_method": {"identifier": "getDB", "parameters": "( String type, Document configuration )", "modifiers": "@Override public", "return": "FileDb", "body": "@Override\n    public FileDb getDB( String type, Document configuration ) {\n        if (TYPE_MEM.equalsIgnoreCase(type)) {\n            LOGGER.debug(\"Returning new in-memory schematic DB...\");\n            return FileDb.inMemory(configuration.getBoolean(COMPRESS_FIELD, false));\n        } else if (TYPE_FILE.equalsIgnoreCase(type)) {\n            boolean compress = configuration.getBoolean(COMPRESS_FIELD, true);\n            String path = configuration.getString(PATH_FIELD, null);\n            LOGGER.debug(\"Returning new disk schematic DB at {0}...\", path);\n            return FileDb.onDisk(compress, path);\n        }\n        return null;\n    }", "signature": "FileDb getDB( String type, Document configuration )", "full_signature": "@Override public FileDb getDB( String type, Document configuration )", "class_method_signature": "FileDbProvider.getDB( String type, Document configuration )", "testcase": false, "constructor": false, "invocations": ["equalsIgnoreCase", "debug", "inMemory", "getBoolean", "equalsIgnoreCase", "getBoolean", "getString", "debug", "onDisk"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}