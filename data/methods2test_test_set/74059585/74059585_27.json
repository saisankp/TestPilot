{"test_class": {"identifier": "NonRegisteringDriverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final TraceService mockTraceService = mock(TraceService.class);", "modifier": "private final", "type": "TraceService", "declarator": "mockTraceService = mock(TraceService.class)", "var_name": "mockTraceService"}, {"original_string": "private final TraceService.Span mockTraceSpan = mock(TraceService.Span.class);", "modifier": "private final", "type": "TraceService.Span", "declarator": "mockTraceSpan = mock(TraceService.Span.class)", "var_name": "mockTraceSpan"}, {"original_string": "private final Driver mockRealDriver = mock(Driver.class);", "modifier": "private final", "type": "Driver", "declarator": "mockRealDriver = mock(Driver.class)", "var_name": "mockRealDriver"}, {"original_string": "private final Connection mockRealConnection = mock(Connection.class);", "modifier": "private final", "type": "Connection", "declarator": "mockRealConnection = mock(Connection.class)", "var_name": "mockRealConnection"}, {"original_string": "private NonRegisteringDriver driver;", "modifier": "private", "type": "NonRegisteringDriver", "declarator": "driver", "var_name": "driver"}], "file": "jdbc/driver-common/src/test/java/com/google/cloud/trace/jdbc/NonRegisteringDriverTest.java"}, "test_case": {"identifier": "jdbcCompliant", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void jdbcCompliant() {\n    assertThat(driver.jdbcCompliant()).isFalse();\n  }", "signature": "void jdbcCompliant()", "full_signature": "@Test public void jdbcCompliant()", "class_method_signature": "NonRegisteringDriverTest.jdbcCompliant()", "testcase": true, "constructor": false, "invocations": ["isFalse", "assertThat", "jdbcCompliant"]}, "focal_class": {"identifier": "NonRegisteringDriver", "superclass": "", "interfaces": "implements Driver", "fields": [{"original_string": "private static final String URL_PREFIX = \"jdbc:stackdriver:\";", "modifier": "private static final", "type": "String", "declarator": "URL_PREFIX = \"jdbc:stackdriver:\"", "var_name": "URL_PREFIX"}, {"original_string": "private static final int MAJOR_VERSION = 1;", "modifier": "private static final", "type": "int", "declarator": "MAJOR_VERSION = 1", "var_name": "MAJOR_VERSION"}, {"original_string": "private static final int MINOR_VERSION = 0;", "modifier": "private static final", "type": "int", "declarator": "MINOR_VERSION = 0", "var_name": "MINOR_VERSION"}, {"original_string": "private final TraceService traceService;", "modifier": "private final", "type": "TraceService", "declarator": "traceService", "var_name": "traceService"}], "methods": [{"identifier": "NonRegisteringDriver", "parameters": "()", "modifiers": "public", "return": "", "signature": " NonRegisteringDriver()", "full_signature": "public  NonRegisteringDriver()", "class_method_signature": "NonRegisteringDriver.NonRegisteringDriver()", "testcase": false, "constructor": true}, {"identifier": "NonRegisteringDriver", "parameters": "(TraceService traceService)", "modifiers": "@VisibleForTesting", "return": "", "signature": " NonRegisteringDriver(TraceService traceService)", "full_signature": "@VisibleForTesting  NonRegisteringDriver(TraceService traceService)", "class_method_signature": "NonRegisteringDriver.NonRegisteringDriver(TraceService traceService)", "testcase": false, "constructor": true}, {"identifier": "acceptsURL", "parameters": "(@Nullable String url)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean acceptsURL(@Nullable String url)", "full_signature": "@Override public boolean acceptsURL(@Nullable String url)", "class_method_signature": "NonRegisteringDriver.acceptsURL(@Nullable String url)", "testcase": false, "constructor": false}, {"identifier": "connect", "parameters": "(@Nullable String url, @Nullable Properties info)", "modifiers": "@Override public", "return": "Connection", "signature": "Connection connect(@Nullable String url, @Nullable Properties info)", "full_signature": "@Override public Connection connect(@Nullable String url, @Nullable Properties info)", "class_method_signature": "NonRegisteringDriver.connect(@Nullable String url, @Nullable Properties info)", "testcase": false, "constructor": false}, {"identifier": "connect", "parameters": "(String url, Properties info, TraceOptions traceOptions)", "modifiers": "@VisibleForTesting", "return": "Connection", "signature": "Connection connect(String url, Properties info, TraceOptions traceOptions)", "full_signature": "@VisibleForTesting Connection connect(String url, Properties info, TraceOptions traceOptions)", "class_method_signature": "NonRegisteringDriver.connect(String url, Properties info, TraceOptions traceOptions)", "testcase": false, "constructor": false}, {"identifier": "getMajorVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMajorVersion()", "full_signature": "@Override public int getMajorVersion()", "class_method_signature": "NonRegisteringDriver.getMajorVersion()", "testcase": false, "constructor": false}, {"identifier": "getMinorVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMinorVersion()", "full_signature": "@Override public int getMinorVersion()", "class_method_signature": "NonRegisteringDriver.getMinorVersion()", "testcase": false, "constructor": false}, {"identifier": "getPropertyInfo", "parameters": "(@Nullable String url, @Nullable Properties info)", "modifiers": "@Override public", "return": "DriverPropertyInfo[]", "signature": "DriverPropertyInfo[] getPropertyInfo(@Nullable String url, @Nullable Properties info)", "full_signature": "@Override public DriverPropertyInfo[] getPropertyInfo(@Nullable String url, @Nullable Properties info)", "class_method_signature": "NonRegisteringDriver.getPropertyInfo(@Nullable String url, @Nullable Properties info)", "testcase": false, "constructor": false}, {"identifier": "getParentLogger", "parameters": "()", "modifiers": "@Override public", "return": "Logger", "signature": "Logger getParentLogger()", "full_signature": "@Override public Logger getParentLogger()", "class_method_signature": "NonRegisteringDriver.getParentLogger()", "testcase": false, "constructor": false}, {"identifier": "jdbcCompliant", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean jdbcCompliant()", "full_signature": "@Override public boolean jdbcCompliant()", "class_method_signature": "NonRegisteringDriver.jdbcCompliant()", "testcase": false, "constructor": false}, {"identifier": "getRealUrl", "parameters": "(String url)", "modifiers": "private static", "return": "String", "signature": "String getRealUrl(String url)", "full_signature": "private static String getRealUrl(String url)", "class_method_signature": "NonRegisteringDriver.getRealUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "checkNotNullUrl", "parameters": "(String url)", "modifiers": "private static", "return": "void", "signature": "void checkNotNullUrl(String url)", "full_signature": "private static void checkNotNullUrl(String url)", "class_method_signature": "NonRegisteringDriver.checkNotNullUrl(String url)", "testcase": false, "constructor": false}], "file": "jdbc/driver-common/src/main/java/com/google/cloud/trace/jdbc/NonRegisteringDriver.java"}, "focal_method": {"identifier": "jdbcCompliant", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean jdbcCompliant() {\n    return false;\n  }", "signature": "boolean jdbcCompliant()", "full_signature": "@Override public boolean jdbcCompliant()", "class_method_signature": "NonRegisteringDriver.jdbcCompliant()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 74059585, "url": "https://github.com/GoogleCloudPlatform/cloud-trace-java-instrumentation", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 10, "size": 141, "license": "licensed"}}