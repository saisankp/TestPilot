{"test_class": {"identifier": "EventCorrelatingSpoutOutputCollectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_COMPONENT_NAME_FOR_STORM = \"1-testComponent\";", "modifier": "private static final", "type": "String", "declarator": "TEST_COMPONENT_NAME_FOR_STORM = \"1-testComponent\"", "var_name": "TEST_COMPONENT_NAME_FOR_STORM"}, {"original_string": "private static final int TASK_1 = 1;", "modifier": "private static final", "type": "int", "declarator": "TASK_1 = 1", "var_name": "TASK_1"}, {"original_string": "private static final int TASK_2 = 2;", "modifier": "private static final", "type": "int", "declarator": "TASK_2 = 2", "var_name": "TASK_2"}, {"original_string": "@Injectable\n    private TopologyContext mockedTopologyContext;", "modifier": "@Injectable\n    private", "type": "TopologyContext", "declarator": "mockedTopologyContext", "var_name": "mockedTopologyContext"}, {"original_string": "private StormEventCorrelationInjector mockEventCorrelationInjector = new StormEventCorrelationInjector();", "modifier": "private", "type": "StormEventCorrelationInjector", "declarator": "mockEventCorrelationInjector = new StormEventCorrelationInjector()", "var_name": "mockEventCorrelationInjector"}, {"original_string": "@Injectable\n    private SpoutOutputCollector mockedOutputCollector;", "modifier": "@Injectable\n    private", "type": "SpoutOutputCollector", "declarator": "mockedOutputCollector", "var_name": "mockedOutputCollector"}, {"original_string": "private EventCorrelatingSpoutOutputCollector sut;", "modifier": "private", "type": "EventCorrelatingSpoutOutputCollector", "declarator": "sut", "var_name": "sut"}, {"original_string": "public static final StreamlineEventImpl INPUT_STREAMLINE_EVENT = StreamlineEventImpl.builder()\n            .fieldsAndValues(new HashMap<String, Object>() {{\n                put(\"illuminance\", 70);\n                put(\"temp\", 104);\n                put(\"foo\", 100);\n                put(\"humidity\", \"40h\");\n            }})\n            .dataSourceId(\"ds-\" + System.currentTimeMillis())\n            .build();", "modifier": "public static final", "type": "StreamlineEventImpl", "declarator": "INPUT_STREAMLINE_EVENT = StreamlineEventImpl.builder()\n            .fieldsAndValues(new HashMap<String, Object>() {{\n                put(\"illuminance\", 70);\n                put(\"temp\", 104);\n                put(\"foo\", 100);\n                put(\"humidity\", \"40h\");\n            }})\n            .dataSourceId(\"ds-\" + System.currentTimeMillis())\n            .build()", "var_name": "INPUT_STREAMLINE_EVENT"}], "file": "streams/runners/storm/runtime/src/test/java/com/hortonworks/streamline/streams/runtime/storm/event/correlation/EventCorrelatingSpoutOutputCollectorTest.java"}, "test_case": {"identifier": "reportError", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void reportError() throws Exception {\n        setupExpectationsForTopologyContextNoEmit();\n        setupExpectationsForEventCorrelationInjector();\n\n        sut = new EventCorrelatingSpoutOutputCollector(mockedTopologyContext, mockedOutputCollector);\n        Deencapsulation.setField(sut, \"eventCorrelationInjector\", mockEventCorrelationInjector);\n\n        Throwable throwable = new RuntimeException(\"error\");\n        sut.reportError(throwable);\n\n        new Verifications() {{\n            mockedOutputCollector.reportError(throwable); times = 1;\n        }};\n    }", "signature": "void reportError()", "full_signature": "@Test public void reportError()", "class_method_signature": "EventCorrelatingSpoutOutputCollectorTest.reportError()", "testcase": true, "constructor": false, "invocations": ["setupExpectationsForTopologyContextNoEmit", "setupExpectationsForEventCorrelationInjector", "setField", "reportError", "reportError"]}, "focal_class": {"identifier": "EventCorrelatingSpoutOutputCollector", "superclass": "extends SpoutOutputCollector", "interfaces": "", "fields": [{"original_string": "private final TopologyContext topologyContext;", "modifier": "private final", "type": "TopologyContext", "declarator": "topologyContext", "var_name": "topologyContext"}, {"original_string": "private final SpoutOutputCollector delegate;", "modifier": "private final", "type": "SpoutOutputCollector", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private final StormEventCorrelationInjector eventCorrelationInjector;", "modifier": "private final", "type": "StormEventCorrelationInjector", "declarator": "eventCorrelationInjector", "var_name": "eventCorrelationInjector"}], "methods": [{"identifier": "EventCorrelatingSpoutOutputCollector", "parameters": "(TopologyContext topologyContext, SpoutOutputCollector delegate)", "modifiers": "public", "return": "", "signature": " EventCorrelatingSpoutOutputCollector(TopologyContext topologyContext, SpoutOutputCollector delegate)", "full_signature": "public  EventCorrelatingSpoutOutputCollector(TopologyContext topologyContext, SpoutOutputCollector delegate)", "class_method_signature": "EventCorrelatingSpoutOutputCollector.EventCorrelatingSpoutOutputCollector(TopologyContext topologyContext, SpoutOutputCollector delegate)", "testcase": false, "constructor": true}, {"identifier": "emit", "parameters": "(String streamId, List<Object> tuple)", "modifiers": "@Override public", "return": "List<Integer>", "signature": "List<Integer> emit(String streamId, List<Object> tuple)", "full_signature": "@Override public List<Integer> emit(String streamId, List<Object> tuple)", "class_method_signature": "EventCorrelatingSpoutOutputCollector.emit(String streamId, List<Object> tuple)", "testcase": false, "constructor": false}, {"identifier": "emit", "parameters": "(List<Object> tuple)", "modifiers": "@Override public", "return": "List<Integer>", "signature": "List<Integer> emit(List<Object> tuple)", "full_signature": "@Override public List<Integer> emit(List<Object> tuple)", "class_method_signature": "EventCorrelatingSpoutOutputCollector.emit(List<Object> tuple)", "testcase": false, "constructor": false}, {"identifier": "emit", "parameters": "(String streamId, List<Object> tuple, Object messageId)", "modifiers": "@Override public", "return": "List<Integer>", "signature": "List<Integer> emit(String streamId, List<Object> tuple, Object messageId)", "full_signature": "@Override public List<Integer> emit(String streamId, List<Object> tuple, Object messageId)", "class_method_signature": "EventCorrelatingSpoutOutputCollector.emit(String streamId, List<Object> tuple, Object messageId)", "testcase": false, "constructor": false}, {"identifier": "emit", "parameters": "(List<Object> tuple, Object messageId)", "modifiers": "@Override public", "return": "List<Integer>", "signature": "List<Integer> emit(List<Object> tuple, Object messageId)", "full_signature": "@Override public List<Integer> emit(List<Object> tuple, Object messageId)", "class_method_signature": "EventCorrelatingSpoutOutputCollector.emit(List<Object> tuple, Object messageId)", "testcase": false, "constructor": false}, {"identifier": "emitDirect", "parameters": "(int taskId, String streamId, List<Object> tuple)", "modifiers": "@Override public", "return": "void", "signature": "void emitDirect(int taskId, String streamId, List<Object> tuple)", "full_signature": "@Override public void emitDirect(int taskId, String streamId, List<Object> tuple)", "class_method_signature": "EventCorrelatingSpoutOutputCollector.emitDirect(int taskId, String streamId, List<Object> tuple)", "testcase": false, "constructor": false}, {"identifier": "emitDirect", "parameters": "(int taskId, List<Object> tuple)", "modifiers": "@Override public", "return": "void", "signature": "void emitDirect(int taskId, List<Object> tuple)", "full_signature": "@Override public void emitDirect(int taskId, List<Object> tuple)", "class_method_signature": "EventCorrelatingSpoutOutputCollector.emitDirect(int taskId, List<Object> tuple)", "testcase": false, "constructor": false}, {"identifier": "emitDirect", "parameters": "(int taskId, String streamId, List<Object> tuple, Object messageId)", "modifiers": "@Override public", "return": "void", "signature": "void emitDirect(int taskId, String streamId, List<Object> tuple, Object messageId)", "full_signature": "@Override public void emitDirect(int taskId, String streamId, List<Object> tuple, Object messageId)", "class_method_signature": "EventCorrelatingSpoutOutputCollector.emitDirect(int taskId, String streamId, List<Object> tuple, Object messageId)", "testcase": false, "constructor": false}, {"identifier": "emitDirect", "parameters": "(int taskId, List<Object> tuple, Object messageId)", "modifiers": "@Override public", "return": "void", "signature": "void emitDirect(int taskId, List<Object> tuple, Object messageId)", "full_signature": "@Override public void emitDirect(int taskId, List<Object> tuple, Object messageId)", "class_method_signature": "EventCorrelatingSpoutOutputCollector.emitDirect(int taskId, List<Object> tuple, Object messageId)", "testcase": false, "constructor": false}, {"identifier": "reportError", "parameters": "(Throwable throwable)", "modifiers": "@Override public", "return": "void", "signature": "void reportError(Throwable throwable)", "full_signature": "@Override public void reportError(Throwable throwable)", "class_method_signature": "EventCorrelatingSpoutOutputCollector.reportError(Throwable throwable)", "testcase": false, "constructor": false}, {"identifier": "getPendingCount", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getPendingCount()", "full_signature": "@Override public long getPendingCount()", "class_method_signature": "EventCorrelatingSpoutOutputCollector.getPendingCount()", "testcase": false, "constructor": false}, {"identifier": "injectCorrelationInformation", "parameters": "(List<Object> tuple)", "modifiers": "private", "return": "StreamlineEvent", "signature": "StreamlineEvent injectCorrelationInformation(List<Object> tuple)", "full_signature": "private StreamlineEvent injectCorrelationInformation(List<Object> tuple)", "class_method_signature": "EventCorrelatingSpoutOutputCollector.injectCorrelationInformation(List<Object> tuple)", "testcase": false, "constructor": false}], "file": "streams/runners/storm/runtime/src/main/java/com/hortonworks/streamline/streams/runtime/storm/event/correlation/EventCorrelatingSpoutOutputCollector.java"}, "focal_method": {"identifier": "reportError", "parameters": "(Throwable throwable)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void reportError(Throwable throwable) {\n        delegate.reportError(throwable);\n    }", "signature": "void reportError(Throwable throwable)", "full_signature": "@Override public void reportError(Throwable throwable)", "class_method_signature": "EventCorrelatingSpoutOutputCollector.reportError(Throwable throwable)", "testcase": false, "constructor": false, "invocations": ["reportError"]}, "repository": {"repo_id": 35627039, "url": "https://github.com/hortonworks/streamline", "language": "Java", "is_fork": false, "fork_count": 94, "stargazer_count": 147, "size": 69226, "license": "licensed"}}