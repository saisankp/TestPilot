{"test_class": {"identifier": "QuotaCheckerTest", "superclass": "", "interfaces": "", "fields": [], "file": "servers/zms/src/test/java/com/yahoo/athenz/zms/QuotaCheckerTest.java"}, "test_case": {"identifier": "testCheckGroupQuota", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCheckGroupQuota() {\n\n        QuotaChecker quotaCheck = new QuotaChecker();\n        Quota mockQuota = new Quota().setName(\"athenz\")\n                .setGroup(2).setGroupMember(2);\n        ObjectStoreConnection con = Mockito.mock(ObjectStoreConnection.class);\n        Mockito.when(con.getQuota(\"athenz\")).thenReturn(mockQuota);\n        Mockito.when(con.countGroups(\"athenz\")).thenReturn(1);\n\n        ArrayList<GroupMember> groupMembers = new ArrayList<>();\n        groupMembers.add(new GroupMember().setMemberName(\"user.joe\"));\n        Group group = new Group().setGroupMembers(groupMembers);\n\n        // this should be successful - no exceptions\n\n        quotaCheck.checkGroupQuota(con, \"athenz\", group, \"caller\");\n    }", "signature": "void testCheckGroupQuota()", "full_signature": "@Test public void testCheckGroupQuota()", "class_method_signature": "QuotaCheckerTest.testCheckGroupQuota()", "testcase": true, "constructor": false, "invocations": ["setGroupMember", "setGroup", "setName", "mock", "thenReturn", "when", "getQuota", "thenReturn", "when", "countGroups", "add", "setMemberName", "setGroupMembers", "checkGroupQuota"]}, "focal_class": {"identifier": "QuotaChecker", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Quota defaultQuota;", "modifier": "private final", "type": "Quota", "declarator": "defaultQuota", "var_name": "defaultQuota"}, {"original_string": "private boolean quotaCheckEnabled;", "modifier": "private", "type": "boolean", "declarator": "quotaCheckEnabled", "var_name": "quotaCheckEnabled"}], "methods": [{"identifier": "QuotaChecker", "parameters": "()", "modifiers": "public", "return": "", "signature": " QuotaChecker()", "full_signature": "public  QuotaChecker()", "class_method_signature": "QuotaChecker.QuotaChecker()", "testcase": false, "constructor": true}, {"identifier": "getDomainQuota", "parameters": "(ObjectStoreConnection con, String domainName)", "modifiers": "public", "return": "Quota", "signature": "Quota getDomainQuota(ObjectStoreConnection con, String domainName)", "full_signature": "public Quota getDomainQuota(ObjectStoreConnection con, String domainName)", "class_method_signature": "QuotaChecker.getDomainQuota(ObjectStoreConnection con, String domainName)", "testcase": false, "constructor": false}, {"identifier": "setQuotaCheckEnabled", "parameters": "(boolean quotaCheckEnabled)", "modifiers": "", "return": "void", "signature": "void setQuotaCheckEnabled(boolean quotaCheckEnabled)", "full_signature": " void setQuotaCheckEnabled(boolean quotaCheckEnabled)", "class_method_signature": "QuotaChecker.setQuotaCheckEnabled(boolean quotaCheckEnabled)", "testcase": false, "constructor": false}, {"identifier": "getListSize", "parameters": "(List<?> list)", "modifiers": "", "return": "int", "signature": "int getListSize(List<?> list)", "full_signature": " int getListSize(List<?> list)", "class_method_signature": "QuotaChecker.getListSize(List<?> list)", "testcase": false, "constructor": false}, {"identifier": "checkSubdomainQuota", "parameters": "(ObjectStoreConnection con, String domainName, String caller)", "modifiers": "", "return": "void", "signature": "void checkSubdomainQuota(ObjectStoreConnection con, String domainName, String caller)", "full_signature": " void checkSubdomainQuota(ObjectStoreConnection con, String domainName, String caller)", "class_method_signature": "QuotaChecker.checkSubdomainQuota(ObjectStoreConnection con, String domainName, String caller)", "testcase": false, "constructor": false}, {"identifier": "checkRoleQuota", "parameters": "(ObjectStoreConnection con, String domainName, Role role, String caller)", "modifiers": "", "return": "void", "signature": "void checkRoleQuota(ObjectStoreConnection con, String domainName, Role role, String caller)", "full_signature": " void checkRoleQuota(ObjectStoreConnection con, String domainName, Role role, String caller)", "class_method_signature": "QuotaChecker.checkRoleQuota(ObjectStoreConnection con, String domainName, Role role, String caller)", "testcase": false, "constructor": false}, {"identifier": "checkGroupQuota", "parameters": "(ObjectStoreConnection con, String domainName, Group group, String caller)", "modifiers": "", "return": "void", "signature": "void checkGroupQuota(ObjectStoreConnection con, String domainName, Group group, String caller)", "full_signature": " void checkGroupQuota(ObjectStoreConnection con, String domainName, Group group, String caller)", "class_method_signature": "QuotaChecker.checkGroupQuota(ObjectStoreConnection con, String domainName, Group group, String caller)", "testcase": false, "constructor": false}, {"identifier": "checkRoleMembershipQuota", "parameters": "(ObjectStoreConnection con, String domainName,\n            String roleName, String caller)", "modifiers": "", "return": "void", "signature": "void checkRoleMembershipQuota(ObjectStoreConnection con, String domainName,\n            String roleName, String caller)", "full_signature": " void checkRoleMembershipQuota(ObjectStoreConnection con, String domainName,\n            String roleName, String caller)", "class_method_signature": "QuotaChecker.checkRoleMembershipQuota(ObjectStoreConnection con, String domainName,\n            String roleName, String caller)", "testcase": false, "constructor": false}, {"identifier": "checkGroupMembershipQuota", "parameters": "(ObjectStoreConnection con, String domainName,\n                                  String groupName, String caller)", "modifiers": "", "return": "void", "signature": "void checkGroupMembershipQuota(ObjectStoreConnection con, String domainName,\n                                  String groupName, String caller)", "full_signature": " void checkGroupMembershipQuota(ObjectStoreConnection con, String domainName,\n                                  String groupName, String caller)", "class_method_signature": "QuotaChecker.checkGroupMembershipQuota(ObjectStoreConnection con, String domainName,\n                                  String groupName, String caller)", "testcase": false, "constructor": false}, {"identifier": "checkPolicyQuota", "parameters": "(ObjectStoreConnection con, String domainName, Policy policy, String caller)", "modifiers": "", "return": "void", "signature": "void checkPolicyQuota(ObjectStoreConnection con, String domainName, Policy policy, String caller)", "full_signature": " void checkPolicyQuota(ObjectStoreConnection con, String domainName, Policy policy, String caller)", "class_method_signature": "QuotaChecker.checkPolicyQuota(ObjectStoreConnection con, String domainName, Policy policy, String caller)", "testcase": false, "constructor": false}, {"identifier": "checkPolicyAssertionQuota", "parameters": "(ObjectStoreConnection con, String domainName,\n            String policyName, String caller)", "modifiers": "", "return": "void", "signature": "void checkPolicyAssertionQuota(ObjectStoreConnection con, String domainName,\n            String policyName, String caller)", "full_signature": " void checkPolicyAssertionQuota(ObjectStoreConnection con, String domainName,\n            String policyName, String caller)", "class_method_signature": "QuotaChecker.checkPolicyAssertionQuota(ObjectStoreConnection con, String domainName,\n            String policyName, String caller)", "testcase": false, "constructor": false}, {"identifier": "checkServiceIdentityQuota", "parameters": "(ObjectStoreConnection con, String domainName,\n            ServiceIdentity service, String caller)", "modifiers": "", "return": "void", "signature": "void checkServiceIdentityQuota(ObjectStoreConnection con, String domainName,\n            ServiceIdentity service, String caller)", "full_signature": " void checkServiceIdentityQuota(ObjectStoreConnection con, String domainName,\n            ServiceIdentity service, String caller)", "class_method_signature": "QuotaChecker.checkServiceIdentityQuota(ObjectStoreConnection con, String domainName,\n            ServiceIdentity service, String caller)", "testcase": false, "constructor": false}, {"identifier": "checkServiceIdentityPublicKeyQuota", "parameters": "(ObjectStoreConnection con, String domainName,\n            String serviceName, String caller)", "modifiers": "", "return": "void", "signature": "void checkServiceIdentityPublicKeyQuota(ObjectStoreConnection con, String domainName,\n            String serviceName, String caller)", "full_signature": " void checkServiceIdentityPublicKeyQuota(ObjectStoreConnection con, String domainName,\n            String serviceName, String caller)", "class_method_signature": "QuotaChecker.checkServiceIdentityPublicKeyQuota(ObjectStoreConnection con, String domainName,\n            String serviceName, String caller)", "testcase": false, "constructor": false}, {"identifier": "checkEntityQuota", "parameters": "(ObjectStoreConnection con, String domainName, Entity entity,\n            String caller)", "modifiers": "", "return": "void", "signature": "void checkEntityQuota(ObjectStoreConnection con, String domainName, Entity entity,\n            String caller)", "full_signature": " void checkEntityQuota(ObjectStoreConnection con, String domainName, Entity entity,\n            String caller)", "class_method_signature": "QuotaChecker.checkEntityQuota(ObjectStoreConnection con, String domainName, Entity entity,\n            String caller)", "testcase": false, "constructor": false}], "file": "servers/zms/src/main/java/com/yahoo/athenz/zms/QuotaChecker.java"}, "focal_method": {"identifier": "checkGroupQuota", "parameters": "(ObjectStoreConnection con, String domainName, Group group, String caller)", "modifiers": "", "return": "void", "body": "void checkGroupQuota(ObjectStoreConnection con, String domainName, Group group, String caller) {\n\n        // if quota check is disabled we have nothing to do\n\n        if (!quotaCheckEnabled) {\n            return;\n        }\n\n        // if our group is null then there is no quota check\n\n        if (group == null) {\n            return;\n        }\n\n        // first retrieve the domain quota\n\n        final Quota quota = getDomainQuota(con, domainName);\n\n        // first we're going to verify the elements that do not\n        // require any further data from the object store\n\n        int objectCount = getListSize(group.getGroupMembers());\n        if (quota.getGroupMember() < objectCount) {\n            throw ZMSUtils.quotaLimitError(\"group member quota exceeded - limit: \"\n                    + quota.getGroupMember() + \" actual: \" + objectCount, caller);\n        }\n\n        // now we're going to check if we'll be allowed\n        // to create this group in the domain\n\n        objectCount = con.countGroups(domainName) + 1;\n        if (quota.getGroup() < objectCount) {\n            throw ZMSUtils.quotaLimitError(\"group quota exceeded - limit: \"\n                    + quota.getGroup() + \" actual: \" + objectCount, caller);\n        }\n    }", "signature": "void checkGroupQuota(ObjectStoreConnection con, String domainName, Group group, String caller)", "full_signature": " void checkGroupQuota(ObjectStoreConnection con, String domainName, Group group, String caller)", "class_method_signature": "QuotaChecker.checkGroupQuota(ObjectStoreConnection con, String domainName, Group group, String caller)", "testcase": false, "constructor": false, "invocations": ["getDomainQuota", "getListSize", "getGroupMembers", "getGroupMember", "quotaLimitError", "getGroupMember", "countGroups", "getGroup", "quotaLimitError", "getGroup"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}