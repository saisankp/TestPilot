{"test_class": {"identifier": "SessionLoginHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "BiliLiveLib/src/test/java/charlie/bililivelib/user/SessionLoginHelperTest.java"}, "test_case": {"identifier": "startLogin", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void startLogin() throws Exception {\n        String email = testInput(\"E-Mail:\");\n        String password = testInput(\"Password:\");\n\n        SessionLoginHelper helper = new SessionLoginHelper(email, password);\n        JOptionPane.showMessageDialog(null, \"Captcha\", \"Captcha\",\n                JOptionPane.PLAIN_MESSAGE, new ImageIcon(helper.getCaptcha()));\n\n        String captcha = testInput(\"Captcha:\");\n        helper.loginWithCaptcha(captcha);\n\n        assertEquals(SessionLoginHelper.LoginStatus.SUCCESS, helper.getStatus());\n    }", "signature": "void startLogin()", "full_signature": "@Test public void startLogin()", "class_method_signature": "SessionLoginHelperTest.startLogin()", "testcase": true, "constructor": false, "invocations": ["testInput", "testInput", "showMessageDialog", "getCaptcha", "testInput", "loginWithCaptcha", "assertEquals", "getStatus"]}, "focal_class": {"identifier": "SessionLoginHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int DEFAULT_LOGIN_TIMEOUT_MILLIS = 2000;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_LOGIN_TIMEOUT_MILLIS = 2000", "var_name": "DEFAULT_LOGIN_TIMEOUT_MILLIS"}, {"original_string": "public static final boolean DEFAULT_KEEP_LOGGING_IN = true;", "modifier": "public static final", "type": "boolean", "declarator": "DEFAULT_KEEP_LOGGING_IN = true", "var_name": "DEFAULT_KEEP_LOGGING_IN"}, {"original_string": "public static final String LOGIN_JAVASCRIPT;", "modifier": "public static final", "type": "String", "declarator": "LOGIN_JAVASCRIPT", "var_name": "LOGIN_JAVASCRIPT"}, {"original_string": "public static final String TRUST_STORE_PASSWORD = \"bilibili\";", "modifier": "public static final", "type": "String", "declarator": "TRUST_STORE_PASSWORD = \"bilibili\"", "var_name": "TRUST_STORE_PASSWORD"}, {"original_string": "public static final String MINILOGIN_URL = \"https://passport.bilibili.com/ajax/miniLogin/minilogin\";", "modifier": "public static final", "type": "String", "declarator": "MINILOGIN_URL = \"https://passport.bilibili.com/ajax/miniLogin/minilogin\"", "var_name": "MINILOGIN_URL"}, {"original_string": "private long loginTimeoutMillis;", "modifier": "private", "type": "long", "declarator": "loginTimeoutMillis", "var_name": "loginTimeoutMillis"}, {"original_string": "private HtmlPage miniLoginPage;", "modifier": "private", "type": "HtmlPage", "declarator": "miniLoginPage", "var_name": "miniLoginPage"}, {"original_string": "private WebClient webClient;", "modifier": "private", "type": "WebClient", "declarator": "webClient", "var_name": "webClient"}, {"original_string": "private String email;", "modifier": "private", "type": "String", "declarator": "email", "var_name": "email"}, {"original_string": "private String password;", "modifier": "private", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "private boolean keepLoggingIn;", "modifier": "private", "type": "boolean", "declarator": "keepLoggingIn", "var_name": "keepLoggingIn"}, {"original_string": "private LoginStatus status = NOT_COMPLETED;", "modifier": "private", "type": "LoginStatus", "declarator": "status = NOT_COMPLETED", "var_name": "status"}], "methods": [{"identifier": "SessionLoginHelper", "parameters": "(@NotNull String email, @NotNull String password)", "modifiers": "public", "return": "", "signature": " SessionLoginHelper(@NotNull String email, @NotNull String password)", "full_signature": "public  SessionLoginHelper(@NotNull String email, @NotNull String password)", "class_method_signature": "SessionLoginHelper.SessionLoginHelper(@NotNull String email, @NotNull String password)", "testcase": false, "constructor": true}, {"identifier": "SessionLoginHelper", "parameters": "(@NotNull String email, @NotNull String password, @NotNull String userAgent)", "modifiers": "public", "return": "", "signature": " SessionLoginHelper(@NotNull String email, @NotNull String password, @NotNull String userAgent)", "full_signature": "public  SessionLoginHelper(@NotNull String email, @NotNull String password, @NotNull String userAgent)", "class_method_signature": "SessionLoginHelper.SessionLoginHelper(@NotNull String email, @NotNull String password, @NotNull String userAgent)", "testcase": false, "constructor": true}, {"identifier": "SessionLoginHelper", "parameters": "(@NotNull String email, @NotNull String password,\n                              long loginTimeoutMillis, boolean keepLoggingIn, @NotNull String userAgent)", "modifiers": "public", "return": "", "signature": " SessionLoginHelper(@NotNull String email, @NotNull String password,\n                              long loginTimeoutMillis, boolean keepLoggingIn, @NotNull String userAgent)", "full_signature": "public  SessionLoginHelper(@NotNull String email, @NotNull String password,\n                              long loginTimeoutMillis, boolean keepLoggingIn, @NotNull String userAgent)", "class_method_signature": "SessionLoginHelper.SessionLoginHelper(@NotNull String email, @NotNull String password,\n                              long loginTimeoutMillis, boolean keepLoggingIn, @NotNull String userAgent)", "testcase": false, "constructor": true}, {"identifier": "initWebClient", "parameters": "(String userAgent)", "modifiers": "private", "return": "void", "signature": "void initWebClient(String userAgent)", "full_signature": "private void initWebClient(String userAgent)", "class_method_signature": "SessionLoginHelper.initWebClient(String userAgent)", "testcase": false, "constructor": false}, {"identifier": "checkArguments", "parameters": "(String userAgent)", "modifiers": "private", "return": "void", "signature": "void checkArguments(String userAgent)", "full_signature": "private void checkArguments(String userAgent)", "class_method_signature": "SessionLoginHelper.checkArguments(String userAgent)", "testcase": false, "constructor": false}, {"identifier": "avoidUselessErrorMessages", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void avoidUselessErrorMessages()", "full_signature": "private void avoidUselessErrorMessages()", "class_method_signature": "SessionLoginHelper.avoidUselessErrorMessages()", "testcase": false, "constructor": false}, {"identifier": "startLogin", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void startLogin()", "full_signature": "private void startLogin()", "class_method_signature": "SessionLoginHelper.startLogin()", "testcase": false, "constructor": false}, {"identifier": "parseStatus", "parameters": "(@NonNls String statusJSON)", "modifiers": "private", "return": "void", "signature": "void parseStatus(@NonNls String statusJSON)", "full_signature": "private void parseStatus(@NonNls String statusJSON)", "class_method_signature": "SessionLoginHelper.parseStatus(@NonNls String statusJSON)", "testcase": false, "constructor": false}, {"identifier": "getCaptcha", "parameters": "()", "modifiers": "public", "return": "Image", "signature": "Image getCaptcha()", "full_signature": "public Image getCaptcha()", "class_method_signature": "SessionLoginHelper.getCaptcha()", "testcase": false, "constructor": false}, {"identifier": "loginWithCaptcha", "parameters": "(String captcha)", "modifiers": "public", "return": "void", "signature": "void loginWithCaptcha(String captcha)", "full_signature": "public void loginWithCaptcha(String captcha)", "class_method_signature": "SessionLoginHelper.loginWithCaptcha(String captcha)", "testcase": false, "constructor": false}, {"identifier": "fillSession", "parameters": "(Session session)", "modifiers": "public", "return": "void", "signature": "void fillSession(Session session)", "full_signature": "public void fillSession(Session session)", "class_method_signature": "SessionLoginHelper.fillSession(Session session)", "testcase": false, "constructor": false}, {"identifier": "setLoginTimeoutMillis", "parameters": "(long loginTimeoutMillis)", "modifiers": "public", "return": "void", "signature": "void setLoginTimeoutMillis(long loginTimeoutMillis)", "full_signature": "public void setLoginTimeoutMillis(long loginTimeoutMillis)", "class_method_signature": "SessionLoginHelper.setLoginTimeoutMillis(long loginTimeoutMillis)", "testcase": false, "constructor": false}, {"identifier": "setEmail", "parameters": "(@NotNull String email)", "modifiers": "public", "return": "void", "signature": "void setEmail(@NotNull String email)", "full_signature": "public void setEmail(@NotNull String email)", "class_method_signature": "SessionLoginHelper.setEmail(@NotNull String email)", "testcase": false, "constructor": false}, {"identifier": "setPassword", "parameters": "(@NotNull String password)", "modifiers": "public", "return": "void", "signature": "void setPassword(@NotNull String password)", "full_signature": "public void setPassword(@NotNull String password)", "class_method_signature": "SessionLoginHelper.setPassword(@NotNull String password)", "testcase": false, "constructor": false}], "file": "BiliLiveLib/src/main/java/charlie/bililivelib/user/SessionLoginHelper.java"}, "focal_method": {"identifier": "startLogin", "parameters": "()", "modifiers": "private", "return": "void", "body": "private void startLogin() throws BiliLiveException {\n        try {\n            status = NOT_COMPLETED;\n            miniLoginPage = webClient.getPage(MINILOGIN_URL);\n            miniLoginPage.executeJavaScript(LOGIN_JAVASCRIPT);\n            webClient.setStatusHandler((page, message) -> {\n                if (page == miniLoginPage) {\n                    parseStatus(message);\n                }\n            });\n        } catch (IOException ex) {\n            throw new NetworkException(\"IO Exception\", ex);\n        }\n    }", "signature": "void startLogin()", "full_signature": "private void startLogin()", "class_method_signature": "SessionLoginHelper.startLogin()", "testcase": false, "constructor": false, "invocations": ["getPage", "executeJavaScript", "setStatusHandler", "parseStatus"]}, "repository": {"repo_id": 74730037, "url": "https://github.com/cqjjjzr/BiliLiveLib", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 17, "size": 535, "license": "licensed"}}