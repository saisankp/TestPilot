{"test_class": {"identifier": "TestJsapi10SpokenInput", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger\n            .getLogger(TestJsapi10SpokenInput.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger\n            .getLogger(TestJsapi10SpokenInput.class)", "var_name": "LOGGER"}, {"original_string": "private Jsapi10SpokenInput recognizer;", "modifier": "private", "type": "Jsapi10SpokenInput", "declarator": "recognizer", "var_name": "recognizer"}], "file": "org.jvoicexml.implementation.jsapi10/src/test/java/org/jvoicexml/implementation/jsapi10/TestJsapi10SpokenInput.java"}, "test_case": {"identifier": "testLoadGrammar", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLoadGrammar() throws Exception, JVoiceXMLEvent {\n        final String lf = System.getProperty(\"line.separator\");\n        final String grammar = \"#JSGF V1.0;\" + lf + \"grammar test;\" + lf\n                + \"public <test> = a|b|c;\";\n        final File file = File.createTempFile(\"jvxmltest\", \".gram\");\n        final URI uri = writeToFile(file, grammar);\n        final RuleGrammarImplementation impl = (RuleGrammarImplementation) recognizer\n                .loadGrammar(uri, GrammarType.JSGF);\n        Assert.assertNotNull(impl);\n        final RuleGrammar ruleGrammar = impl.getGrammarDocument();\n        Assert.assertEquals(\"test\", ruleGrammar.getName());\n        final RuleAlternatives alternatives = (RuleAlternatives) ruleGrammar\n                .getRule(\"test\");\n        Assert.assertNotNull(alternatives);\n        final Rule[] rules = alternatives.getRules();\n        Assert.assertEquals(3, rules.length);\n        Assert.assertEquals(\"a\", rules[0].toString());\n        Assert.assertEquals(\"b\", rules[1].toString());\n        Assert.assertEquals(\"c\", rules[2].toString());\n    }", "signature": "void testLoadGrammar()", "full_signature": "@Test public void testLoadGrammar()", "class_method_signature": "TestJsapi10SpokenInput.testLoadGrammar()", "testcase": true, "constructor": false, "invocations": ["getProperty", "createTempFile", "writeToFile", "loadGrammar", "assertNotNull", "getGrammarDocument", "assertEquals", "getName", "getRule", "assertNotNull", "getRules", "assertEquals", "assertEquals", "toString", "assertEquals", "toString", "assertEquals", "toString"]}, "focal_class": {"identifier": "Jsapi10SpokenInput", "superclass": "", "interfaces": "implements SpokenInput, StreamableSpokenInput", "fields": [{"original_string": "private static final Logger LOGGER = Logger\n            .getLogger(Jsapi10SpokenInput.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger\n            .getLogger(Jsapi10SpokenInput.class)", "var_name": "LOGGER"}, {"original_string": "private static final Collection<BargeInType> BARGE_IN_TYPES;", "modifier": "private static final", "type": "Collection<BargeInType>", "declarator": "BARGE_IN_TYPES", "var_name": "BARGE_IN_TYPES"}, {"original_string": "private static final Collection<GrammarType> GRAMMAR_TYPES;", "modifier": "private static final", "type": "Collection<GrammarType>", "declarator": "GRAMMAR_TYPES", "var_name": "GRAMMAR_TYPES"}, {"original_string": "private Recognizer recognizer;", "modifier": "private", "type": "Recognizer", "declarator": "recognizer", "var_name": "recognizer"}, {"original_string": "private final Collection<SpokenInputListener> listener;", "modifier": "private final", "type": "Collection<SpokenInputListener>", "declarator": "listener", "var_name": "listener"}, {"original_string": "private final RecognizerModeDesc desc;", "modifier": "private final", "type": "RecognizerModeDesc", "declarator": "desc", "var_name": "desc"}, {"original_string": "private SpokenInputConnectionHandler handler;", "modifier": "private", "type": "SpokenInputConnectionHandler", "declarator": "handler", "var_name": "handler"}, {"original_string": "private ConnectionInformation info;", "modifier": "private", "type": "ConnectionInformation", "declarator": "info", "var_name": "info"}, {"original_string": "private ResultListener resultListener;", "modifier": "private", "type": "ResultListener", "declarator": "resultListener", "var_name": "resultListener"}, {"original_string": "private StreamableSpokenInput streamableInput;", "modifier": "private", "type": "StreamableSpokenInput", "declarator": "streamableInput", "var_name": "streamableInput"}], "methods": [{"identifier": "Jsapi10SpokenInput", "parameters": "(final RecognizerModeDesc defaultDescriptor)", "modifiers": "public", "return": "", "signature": " Jsapi10SpokenInput(final RecognizerModeDesc defaultDescriptor)", "full_signature": "public  Jsapi10SpokenInput(final RecognizerModeDesc defaultDescriptor)", "class_method_signature": "Jsapi10SpokenInput.Jsapi10SpokenInput(final RecognizerModeDesc defaultDescriptor)", "testcase": false, "constructor": true}, {"identifier": "open", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void open()", "full_signature": "public void open()", "class_method_signature": "Jsapi10SpokenInput.open()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "Jsapi10SpokenInput.close()", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(final SpokenInputListener inputListener)", "modifiers": "public", "return": "void", "signature": "void addListener(final SpokenInputListener inputListener)", "full_signature": "public void addListener(final SpokenInputListener inputListener)", "class_method_signature": "Jsapi10SpokenInput.addListener(final SpokenInputListener inputListener)", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(final SpokenInputListener inputListener)", "modifiers": "public", "return": "void", "signature": "void removeListener(final SpokenInputListener inputListener)", "full_signature": "public void removeListener(final SpokenInputListener inputListener)", "class_method_signature": "Jsapi10SpokenInput.removeListener(final SpokenInputListener inputListener)", "testcase": false, "constructor": false}, {"identifier": "getSupportedBargeInTypes", "parameters": "()", "modifiers": "public", "return": "Collection<BargeInType>", "signature": "Collection<BargeInType> getSupportedBargeInTypes()", "full_signature": "public Collection<BargeInType> getSupportedBargeInTypes()", "class_method_signature": "Jsapi10SpokenInput.getSupportedBargeInTypes()", "testcase": false, "constructor": false}, {"identifier": "loadGrammar", "parameters": "(final URI uri,\n            final GrammarType type)", "modifiers": "@Override public", "return": "GrammarImplementation<?>", "signature": "GrammarImplementation<?> loadGrammar(final URI uri,\n            final GrammarType type)", "full_signature": "@Override public GrammarImplementation<?> loadGrammar(final URI uri,\n            final GrammarType type)", "class_method_signature": "Jsapi10SpokenInput.loadGrammar(final URI uri,\n            final GrammarType type)", "testcase": false, "constructor": false}, {"identifier": "dumpLoadedGrammars", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void dumpLoadedGrammars()", "full_signature": "private void dumpLoadedGrammars()", "class_method_signature": "Jsapi10SpokenInput.dumpLoadedGrammars()", "testcase": false, "constructor": false}, {"identifier": "activateGrammars", "parameters": "(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "modifiers": "public", "return": "void", "signature": "void activateGrammars(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "full_signature": "public void activateGrammars(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "class_method_signature": "Jsapi10SpokenInput.activateGrammars(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "testcase": false, "constructor": false}, {"identifier": "deactivateGrammars", "parameters": "(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "modifiers": "public", "return": "void", "signature": "void deactivateGrammars(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "full_signature": "public void deactivateGrammars(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "class_method_signature": "Jsapi10SpokenInput.deactivateGrammars(\n            final Collection<GrammarImplementation<? extends Object>> grammars)", "testcase": false, "constructor": false}, {"identifier": "getActiveGrammars", "parameters": "()", "modifiers": "", "return": "Collection<RuleGrammar>", "signature": "Collection<RuleGrammar> getActiveGrammars()", "full_signature": " Collection<RuleGrammar> getActiveGrammars()", "class_method_signature": "Jsapi10SpokenInput.getActiveGrammars()", "testcase": false, "constructor": false}, {"identifier": "startRecognition", "parameters": "(\n            final DataModel model,\n            final SpeechRecognizerProperties speech,\n            final DtmfRecognizerProperties dtmf)", "modifiers": "@Override public", "return": "void", "signature": "void startRecognition(\n            final DataModel model,\n            final SpeechRecognizerProperties speech,\n            final DtmfRecognizerProperties dtmf)", "full_signature": "@Override public void startRecognition(\n            final DataModel model,\n            final SpeechRecognizerProperties speech,\n            final DtmfRecognizerProperties dtmf)", "class_method_signature": "Jsapi10SpokenInput.startRecognition(\n            final DataModel model,\n            final SpeechRecognizerProperties speech,\n            final DtmfRecognizerProperties dtmf)", "testcase": false, "constructor": false}, {"identifier": "stopRecognition", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stopRecognition()", "full_signature": "public void stopRecognition()", "class_method_signature": "Jsapi10SpokenInput.stopRecognition()", "testcase": false, "constructor": false}, {"identifier": "activate", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void activate()", "full_signature": "public void activate()", "class_method_signature": "Jsapi10SpokenInput.activate()", "testcase": false, "constructor": false}, {"identifier": "passivate", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void passivate()", "full_signature": "public void passivate()", "class_method_signature": "Jsapi10SpokenInput.passivate()", "testcase": false, "constructor": false}, {"identifier": "connect", "parameters": "(final ConnectionInformation connectionInformation)", "modifiers": "public", "return": "void", "signature": "void connect(final ConnectionInformation connectionInformation)", "full_signature": "public void connect(final ConnectionInformation connectionInformation)", "class_method_signature": "Jsapi10SpokenInput.connect(final ConnectionInformation connectionInformation)", "testcase": false, "constructor": false}, {"identifier": "disconnect", "parameters": "(final ConnectionInformation connectionInformation)", "modifiers": "public", "return": "void", "signature": "void disconnect(final ConnectionInformation connectionInformation)", "full_signature": "public void disconnect(final ConnectionInformation connectionInformation)", "class_method_signature": "Jsapi10SpokenInput.disconnect(final ConnectionInformation connectionInformation)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getType()", "full_signature": "public String getType()", "class_method_signature": "Jsapi10SpokenInput.getType()", "testcase": false, "constructor": false}, {"identifier": "getSupportedGrammarTypes", "parameters": "()", "modifiers": "public", "return": "Collection<GrammarType>", "signature": "Collection<GrammarType> getSupportedGrammarTypes()", "full_signature": "public Collection<GrammarType> getSupportedGrammarTypes()", "class_method_signature": "Jsapi10SpokenInput.getSupportedGrammarTypes()", "testcase": false, "constructor": false}, {"identifier": "setSpokenInputConnectionHandler", "parameters": "(\n            final SpokenInputConnectionHandler connectionHandler)", "modifiers": "public", "return": "void", "signature": "void setSpokenInputConnectionHandler(\n            final SpokenInputConnectionHandler connectionHandler)", "full_signature": "public void setSpokenInputConnectionHandler(\n            final SpokenInputConnectionHandler connectionHandler)", "class_method_signature": "Jsapi10SpokenInput.setSpokenInputConnectionHandler(\n            final SpokenInputConnectionHandler connectionHandler)", "testcase": false, "constructor": false}, {"identifier": "getUriForNextSpokenInput", "parameters": "()", "modifiers": "public", "return": "URI", "signature": "URI getUriForNextSpokenInput()", "full_signature": "public URI getUriForNextSpokenInput()", "class_method_signature": "Jsapi10SpokenInput.getUriForNextSpokenInput()", "testcase": false, "constructor": false}, {"identifier": "isBusy", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isBusy()", "full_signature": "public boolean isBusy()", "class_method_signature": "Jsapi10SpokenInput.isBusy()", "testcase": false, "constructor": false}, {"identifier": "setStreamableSpokenInput", "parameters": "(final StreamableSpokenInput streamable)", "modifiers": "public", "return": "void", "signature": "void setStreamableSpokenInput(final StreamableSpokenInput streamable)", "full_signature": "public void setStreamableSpokenInput(final StreamableSpokenInput streamable)", "class_method_signature": "Jsapi10SpokenInput.setStreamableSpokenInput(final StreamableSpokenInput streamable)", "testcase": false, "constructor": false}, {"identifier": "writeRecognizerStream", "parameters": "(final byte[] buffer, final int offset,\n            final int length)", "modifiers": "public", "return": "void", "signature": "void writeRecognizerStream(final byte[] buffer, final int offset,\n            final int length)", "full_signature": "public void writeRecognizerStream(final byte[] buffer, final int offset,\n            final int length)", "class_method_signature": "Jsapi10SpokenInput.writeRecognizerStream(final byte[] buffer, final int offset,\n            final int length)", "testcase": false, "constructor": false}, {"identifier": "fireInputEvent", "parameters": "(final SpokenInputEvent event)", "modifiers": "", "return": "void", "signature": "void fireInputEvent(final SpokenInputEvent event)", "full_signature": " void fireInputEvent(final SpokenInputEvent event)", "class_method_signature": "Jsapi10SpokenInput.fireInputEvent(final SpokenInputEvent event)", "testcase": false, "constructor": false}], "file": "org.jvoicexml.implementation.jsapi10/src/main/java/org/jvoicexml/implementation/jsapi10/Jsapi10SpokenInput.java"}, "focal_method": {"identifier": "loadGrammar", "parameters": "(final URI uri,\n            final GrammarType type)", "modifiers": "@Override public", "return": "GrammarImplementation<?>", "body": "@Override\n    public GrammarImplementation<?> loadGrammar(final URI uri,\n            final GrammarType type) throws NoresourceError, IOException,\n            UnsupportedFormatError {\n        if (recognizer == null) {\n            throw new NoresourceError(\"No recognizer available!\");\n        }\n\n        if (type != GrammarType.JSGF) {\n            throw new UnsupportedFormatError(\n                    \"JSAPI 1.0 implementation supports only type \"\n                            + GrammarType.JSGF.getType());\n        }\n\n        if (LOGGER.isDebugEnabled()) {\n            LOGGER.debug(\"loading grammar from URI '\" + uri + \"'\");\n        }\n        final RuleGrammar grammar;\n        try {\n            final URL url = uri.toURL();\n            InputStream input = url.openStream();\n            final BufferedInputStream bufferedInput = new BufferedInputStream(\n                    input);\n            bufferedInput.mark(Integer.MAX_VALUE);\n            final ByteArrayOutputStream out = new ByteArrayOutputStream();\n            final byte[] buffer = new byte[256];\n            int read = 0;\n            do {\n                read = bufferedInput.read(buffer);\n                if (read > 0) {\n                    out.write(buffer, 0, read);\n                }\n            } while (read >= 0);\n            bufferedInput.reset();\n            final InputStreamReader reader = new InputStreamReader(bufferedInput);\n            grammar = recognizer.loadJSGF(reader);\n        } catch (javax.speech.recognition.GrammarException ge) {\n            throw new UnsupportedFormatError(ge.getMessage(), ge);\n        }\n\n        return new RuleGrammarImplementation(grammar, uri);\n    }", "signature": "GrammarImplementation<?> loadGrammar(final URI uri,\n            final GrammarType type)", "full_signature": "@Override public GrammarImplementation<?> loadGrammar(final URI uri,\n            final GrammarType type)", "class_method_signature": "Jsapi10SpokenInput.loadGrammar(final URI uri,\n            final GrammarType type)", "testcase": false, "constructor": false, "invocations": ["getType", "isDebugEnabled", "debug", "toURL", "openStream", "mark", "read", "write", "reset", "loadJSGF", "getMessage"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}