{"test_class": {"identifier": "PriorityTagUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "client/lookout-common/src/test/java/com/alipay/lookout/common/utils/PriorityTagUtilTest.java"}, "test_case": {"identifier": "testResolveNothing", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testResolveNothing() {\n        List<Tag> tags = new ArrayList<Tag>();\n        tags.add(new BasicTag(\"k1\", \"v1\"));\n        Assert.assertNotEquals(PRIORITY.HIGH, PriorityTagUtil.resolve(tags));\n        Assert.assertEquals(PRIORITY.NORMAL, PriorityTagUtil.resolve(tags));\n\n    }", "signature": "void testResolveNothing()", "full_signature": "@Test public void testResolveNothing()", "class_method_signature": "PriorityTagUtilTest.testResolveNothing()", "testcase": true, "constructor": false, "invocations": ["add", "assertNotEquals", "resolve", "assertEquals", "resolve"]}, "focal_class": {"identifier": "PriorityTagUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "PriorityTagUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " PriorityTagUtil()", "full_signature": "private  PriorityTagUtil()", "class_method_signature": "PriorityTagUtil.PriorityTagUtil()", "testcase": false, "constructor": true}, {"identifier": "resolve", "parameters": "(Iterable<Tag> tags)", "modifiers": "public static", "return": "PRIORITY", "signature": "PRIORITY resolve(Iterable<Tag> tags)", "full_signature": "public static PRIORITY resolve(Iterable<Tag> tags)", "class_method_signature": "PriorityTagUtil.resolve(Iterable<Tag> tags)", "testcase": false, "constructor": false}], "file": "client/lookout-common/src/main/java/com/alipay/lookout/common/utils/PriorityTagUtil.java"}, "focal_method": {"identifier": "resolve", "parameters": "(Iterable<Tag> tags)", "modifiers": "public static", "return": "PRIORITY", "body": "public static PRIORITY resolve(Iterable<Tag> tags) {\n        //default\n        PRIORITY v = PRIORITY.NORMAL;\n\n        String value = Utils.getTagValue(tags, TAG_PRIORITY_KEY);\n        if (value != null) {\n            for (PRIORITY p : PRIORITY.values()) {\n                if (p.name().equalsIgnoreCase(value)) {\n                    return p;\n                }\n            }\n        }\n        return v;\n    }", "signature": "PRIORITY resolve(Iterable<Tag> tags)", "full_signature": "public static PRIORITY resolve(Iterable<Tag> tags)", "class_method_signature": "PriorityTagUtil.resolve(Iterable<Tag> tags)", "testcase": false, "constructor": false, "invocations": ["getTagValue", "values", "equalsIgnoreCase", "name"]}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}