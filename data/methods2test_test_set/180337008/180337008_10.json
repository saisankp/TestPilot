{"test_class": {"identifier": "SignatureServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private SignatureService signatureService;", "modifier": "@Autowired\n    private", "type": "SignatureService", "declarator": "signatureService", "var_name": "signatureService"}], "file": "pes-service/src/test/java/fr/sictiam/stela/pesservice/service/SignatureServiceTest.java"}, "test_case": {"identifier": "testAlteredSignature", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAlteredSignature() throws Exception {\n        boolean valid = true;\n        InputStream pesFile = new ClassPathResource(\"data/test-alteree.xml\").getInputStream();\n\n        try {\n            signatureService.validatePes(pesFile);\n        } catch (SignatureException e) {\n            valid = false;\n        }\n\n        Assert.assertFalse(valid);\n    }", "signature": "void testAlteredSignature()", "full_signature": "@Test public void testAlteredSignature()", "class_method_signature": "SignatureServiceTest.testAlteredSignature()", "testcase": true, "constructor": false, "invocations": ["getInputStream", "validatePes", "assertFalse"]}, "focal_class": {"identifier": "SignatureService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(SignatureService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(SignatureService.class)", "var_name": "LOGGER"}, {"original_string": "private static final String NAMESPACE_SPEC_NS = \"http://www.w3.org/2000/xmlns/\";", "modifier": "private static final", "type": "String", "declarator": "NAMESPACE_SPEC_NS = \"http://www.w3.org/2000/xmlns/\"", "var_name": "NAMESPACE_SPEC_NS"}, {"original_string": "private static final String SIGNATURE_SPEC_NS = \"http://www.w3.org/2000/09/xmldsig#\";", "modifier": "private static final", "type": "String", "declarator": "SIGNATURE_SPEC_NS = \"http://www.w3.org/2000/09/xmldsig#\"", "var_name": "SIGNATURE_SPEC_NS"}, {"original_string": "private static final String QUALIFIED_NAME = \"xmlns:ds\";", "modifier": "private static final", "type": "String", "declarator": "QUALIFIED_NAME = \"xmlns:ds\"", "var_name": "QUALIFIED_NAME"}, {"original_string": "@Value(\"${application.pdfValidation}\")\n    private boolean validatePdfSignature;", "modifier": "@Value(\"${application.pdfValidation}\")\n    private", "type": "boolean", "declarator": "validatePdfSignature", "var_name": "validatePdfSignature"}], "methods": [{"identifier": "loadXml", "parameters": "(InputStream pesStream)", "modifiers": "private", "return": "Document", "signature": "Document loadXml(InputStream pesStream)", "full_signature": "private Document loadXml(InputStream pesStream)", "class_method_signature": "SignatureService.loadXml(InputStream pesStream)", "testcase": false, "constructor": false}, {"identifier": "processPesVerification", "parameters": "(Document document)", "modifiers": "private", "return": "List<SignatureVerifierResult>", "signature": "List<SignatureVerifierResult> processPesVerification(Document document)", "full_signature": "private List<SignatureVerifierResult> processPesVerification(Document document)", "class_method_signature": "SignatureService.processPesVerification(Document document)", "testcase": false, "constructor": false}, {"identifier": "createNamespaceNode", "parameters": "(Document document)", "modifiers": "private static", "return": "Element", "signature": "Element createNamespaceNode(Document document)", "full_signature": "private static Element createNamespaceNode(Document document)", "class_method_signature": "SignatureService.createNamespaceNode(Document document)", "testcase": false, "constructor": false}, {"identifier": "validatePdfAttachment", "parameters": "(byte[] pdf)", "modifiers": "private", "return": "List<String>", "signature": "List<String> validatePdfAttachment(byte[] pdf)", "full_signature": "private List<String> validatePdfAttachment(byte[] pdf)", "class_method_signature": "SignatureService.validatePdfAttachment(byte[] pdf)", "testcase": false, "constructor": false}, {"identifier": "validatePes", "parameters": "(byte[] pesFile)", "modifiers": "public", "return": "void", "signature": "void validatePes(byte[] pesFile)", "full_signature": "public void validatePes(byte[] pesFile)", "class_method_signature": "SignatureService.validatePes(byte[] pesFile)", "testcase": false, "constructor": false}, {"identifier": "validatePes", "parameters": "(InputStream pesStream)", "modifiers": "public", "return": "void", "signature": "void validatePes(InputStream pesStream)", "full_signature": "public void validatePes(InputStream pesStream)", "class_method_signature": "SignatureService.validatePes(InputStream pesStream)", "testcase": false, "constructor": false}], "file": "pes-service/src/main/java/fr/sictiam/stela/pesservice/service/SignatureService.java"}, "focal_method": {"identifier": "validatePes", "parameters": "(byte[] pesFile)", "modifiers": "public", "return": "void", "body": "public void validatePes(byte[] pesFile) throws SignatureException {\n        validatePes(new ByteArrayInputStream(pesFile));\n    }", "signature": "void validatePes(byte[] pesFile)", "full_signature": "public void validatePes(byte[] pesFile)", "class_method_signature": "SignatureService.validatePes(byte[] pesFile)", "testcase": false, "constructor": false, "invocations": ["validatePes"]}, "repository": {"repo_id": 180337008, "url": "https://github.com/SICTIAM/stela", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 7714, "license": "licensed"}}