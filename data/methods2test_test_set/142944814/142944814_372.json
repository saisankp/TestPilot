{"test_class": {"identifier": "EmptyContextTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "core/common/src/test/java/hera/EmptyContextTest.java"}, "test_case": {"identifier": "testNewInstance", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testNewInstance() {\n    final Context instance1 = EmptyContext.getInstance();\n    final Context instance2 = EmptyContext.getInstance();\n    assertNotNull(instance1);\n    assertTrue(instance1 == instance2);\n  }", "signature": "void testNewInstance()", "full_signature": "@Test public void testNewInstance()", "class_method_signature": "EmptyContextTest.testNewInstance()", "testcase": true, "constructor": false, "invocations": ["getInstance", "getInstance", "assertNotNull", "assertTrue"]}, "focal_class": {"identifier": "EmptyContext", "superclass": "", "interfaces": "implements Context", "fields": [{"original_string": "protected static final Context instance = new EmptyContext();", "modifier": "protected static final", "type": "Context", "declarator": "instance = new EmptyContext()", "var_name": "instance"}, {"original_string": "@ToString.Exclude\n  protected final transient Logger logger = getLogger(getClass());", "modifier": "@ToString.Exclude\n  protected final transient", "type": "Logger", "declarator": "logger = getLogger(getClass())", "var_name": "logger"}, {"original_string": "protected final String scope = \"<<empty>>\";", "modifier": "protected final", "type": "String", "declarator": "scope = \"<<empty>>\"", "var_name": "scope"}], "methods": [{"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "Context", "signature": "Context getInstance()", "full_signature": "public static Context getInstance()", "class_method_signature": "EmptyContext.getInstance()", "testcase": false, "constructor": false}, {"identifier": "EmptyContext", "parameters": "()", "modifiers": "", "return": "", "signature": " EmptyContext()", "full_signature": "  EmptyContext()", "class_method_signature": "EmptyContext.EmptyContext()", "testcase": false, "constructor": true}, {"identifier": "withValue", "parameters": "(final Key<T> key, final T value)", "modifiers": "@Override public", "return": "Context", "signature": "Context withValue(final Key<T> key, final T value)", "full_signature": "@Override public Context withValue(final Key<T> key, final T value)", "class_method_signature": "EmptyContext.withValue(final Key<T> key, final T value)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final Key<T> key)", "modifiers": "@Override public", "return": "T", "signature": "T get(final Key<T> key)", "full_signature": "@Override public T get(final Key<T> key)", "class_method_signature": "EmptyContext.get(final Key<T> key)", "testcase": false, "constructor": false}, {"identifier": "getOrDefault", "parameters": "(final Key<T> key, final T defaultValue)", "modifiers": "@Override public", "return": "T", "signature": "T getOrDefault(final Key<T> key, final T defaultValue)", "full_signature": "@Override public T getOrDefault(final Key<T> key, final T defaultValue)", "class_method_signature": "EmptyContext.getOrDefault(final Key<T> key, final T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "withScope", "parameters": "(final String scope)", "modifiers": "@Override public", "return": "Context", "signature": "Context withScope(final String scope)", "full_signature": "@Override public Context withScope(final String scope)", "class_method_signature": "EmptyContext.withScope(final String scope)", "testcase": false, "constructor": false}, {"identifier": "getScope", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getScope()", "full_signature": "@Override public String getScope()", "class_method_signature": "EmptyContext.getScope()", "testcase": false, "constructor": false}], "file": "core/common/src/main/java/hera/EmptyContext.java"}, "focal_method": {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "Context", "body": "public static Context getInstance() {\n    return instance;\n  }", "signature": "Context getInstance()", "full_signature": "public static Context getInstance()", "class_method_signature": "EmptyContext.getInstance()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}