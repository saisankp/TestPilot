{"test_class": {"identifier": "NoFileEntityProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private NoFileEntityProvider noFileEntityProvider;", "modifier": "private", "type": "NoFileEntityProvider", "declarator": "noFileEntityProvider", "var_name": "noFileEntityProvider"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/provider/ext/NoFileEntityProviderTest.java"}, "test_case": {"identifier": "writesFileToOutputStream", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void writesFileToOutputStream() throws Exception {\n        thrown.expect(webApplicationExceptionBadRequestMatcher());\n        noFileEntityProvider.writeTo(null, null, null, null, null, null, null);\n    }", "signature": "void writesFileToOutputStream()", "full_signature": "@Test public void writesFileToOutputStream()", "class_method_signature": "NoFileEntityProviderTest.writesFileToOutputStream()", "testcase": true, "constructor": false, "invocations": ["expect", "webApplicationExceptionBadRequestMatcher", "writeTo"]}, "focal_class": {"identifier": "NoFileEntityProvider", "superclass": "extends FileEntityProvider", "interfaces": "", "fields": [], "methods": [{"identifier": "getSize", "parameters": "(File file, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "long", "signature": "long getSize(File file, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public long getSize(File file, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "NoFileEntityProvider.getSize(File file, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "readFrom", "parameters": "(Class<File> type,\n                         Type genericType,\n                         Annotation[] annotations,\n                         MediaType mediaType,\n                         MultivaluedMap<String, String> httpHeaders,\n                         InputStream entityStream)", "modifiers": "@Override public", "return": "File", "signature": "File readFrom(Class<File> type,\n                         Type genericType,\n                         Annotation[] annotations,\n                         MediaType mediaType,\n                         MultivaluedMap<String, String> httpHeaders,\n                         InputStream entityStream)", "full_signature": "@Override public File readFrom(Class<File> type,\n                         Type genericType,\n                         Annotation[] annotations,\n                         MediaType mediaType,\n                         MultivaluedMap<String, String> httpHeaders,\n                         InputStream entityStream)", "class_method_signature": "NoFileEntityProvider.readFrom(Class<File> type,\n                         Type genericType,\n                         Annotation[] annotations,\n                         MediaType mediaType,\n                         MultivaluedMap<String, String> httpHeaders,\n                         InputStream entityStream)", "testcase": false, "constructor": false}, {"identifier": "writeTo", "parameters": "(File file,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "modifiers": "@Override public", "return": "void", "signature": "void writeTo(File file,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "full_signature": "@Override public void writeTo(File file,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "class_method_signature": "NoFileEntityProvider.writeTo(File file,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/provider/ext/NoFileEntityProvider.java"}, "focal_method": {"identifier": "writeTo", "parameters": "(File file,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void writeTo(File file,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream) throws IOException {\n        throw new WebApplicationException(Response.status(BAD_REQUEST).entity(\n                \"File is not supported as method's parameter.\").type(TEXT_PLAIN).build());\n    }", "signature": "void writeTo(File file,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "full_signature": "@Override public void writeTo(File file,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "class_method_signature": "NoFileEntityProvider.writeTo(File file,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "testcase": false, "constructor": false, "invocations": ["build", "type", "entity", "status"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}