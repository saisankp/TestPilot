{"test_class": {"identifier": "CheramiClientImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static CheramiClientImpl client;", "modifier": "private static", "type": "CheramiClientImpl", "declarator": "client", "var_name": "client"}, {"original_string": "private static MockFrontendService frontendService;", "modifier": "private static", "type": "MockFrontendService", "declarator": "frontendService", "var_name": "frontendService"}, {"original_string": "private static final Logger logger = LoggerFactory.getLogger(CheramiClientImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(CheramiClientImpl.class)", "var_name": "logger"}, {"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "lib/src/test/java/com/uber/cherami/client/CheramiClientImplTest.java"}, "test_case": {"identifier": "testCreateConsumerGroup", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateConsumerGroup() throws Exception {\n        CreateConsumerGroupRequest request = new CreateConsumerGroupRequest();\n        final String destination = \"/foo/bar\";\n        final String consumerGroup = \"/test/group\";\n        final int lockTimeout = new Random().nextInt();\n        final int maxDelivery = new Random().nextInt();\n        final String email = \"foo@bar.com\";\n        final int skipOlder = new Random().nextInt();\n        final long timestamp = new Date().getTime();\n        request.setDestinationPath(destination);\n        request.setConsumerGroupName(consumerGroup);\n        request.setLockTimeoutInSeconds(lockTimeout);\n        request.setMaxDeliveryCount(maxDelivery);\n        request.setOwnerEmail(email);\n        request.setSkipOlderMessagesInSeconds(skipOlder);\n        request.setStartFrom(timestamp);\n        ConsumerGroupDescription response = client.createConsumerGroup(request);\n\n        // Simple test case of creating a ConsumerGroup with path and group name\n        assert (response.getDestinationPath().equals(destination));\n        assert (response.getConsumerGroupName().equals(consumerGroup));\n\n        // Client should not be able to create a duplicate ConsumerGroup\n        thrown.expect(EntityAlreadyExistsError.class);\n        client.createConsumerGroup(request);\n    }", "signature": "void testCreateConsumerGroup()", "full_signature": "@Test public void testCreateConsumerGroup()", "class_method_signature": "CheramiClientImplTest.testCreateConsumerGroup()", "testcase": true, "constructor": false, "invocations": ["nextInt", "nextInt", "nextInt", "getTime", "setDestinationPath", "setConsumerGroupName", "setLockTimeoutInSeconds", "setMaxDeliveryCount", "setOwnerEmail", "setSkipOlderMessagesInSeconds", "setStartFrom", "createConsumerGroup", "equals", "getDestinationPath", "equals", "getConsumerGroupName", "expect", "createConsumerGroup"]}, "focal_class": {"identifier": "CheramiClientImpl", "superclass": "", "interfaces": "implements CheramiClient", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(CheramiClientImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(CheramiClientImpl.class)", "var_name": "logger"}, {"original_string": "private static final int DEFAULT_PAGE_SIZE = 1000;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_PAGE_SIZE = 1000", "var_name": "DEFAULT_PAGE_SIZE"}, {"original_string": "private static final String FRONTEND_SERVICE_NAME = \"cherami-frontendhost\";", "modifier": "private static final", "type": "String", "declarator": "FRONTEND_SERVICE_NAME = \"cherami-frontendhost\"", "var_name": "FRONTEND_SERVICE_NAME"}, {"original_string": "private static final String INTERFACE_NAME = \"BFrontend\";", "modifier": "private static final", "type": "String", "declarator": "INTERFACE_NAME = \"BFrontend\"", "var_name": "INTERFACE_NAME"}, {"original_string": "private final TChannel tChannel;", "modifier": "private final", "type": "TChannel", "declarator": "tChannel", "var_name": "tChannel"}, {"original_string": "private final ClientOptions options;", "modifier": "private final", "type": "ClientOptions", "declarator": "options", "var_name": "options"}, {"original_string": "private final String serviceName;", "modifier": "private final", "type": "String", "declarator": "serviceName", "var_name": "serviceName"}, {"original_string": "private final Map<String, String> thriftHeaders;", "modifier": "private final", "type": "Map<String, String>", "declarator": "thriftHeaders", "var_name": "thriftHeaders"}, {"original_string": "private final MetricsReporter metricsReporter;", "modifier": "private final", "type": "MetricsReporter", "declarator": "metricsReporter", "var_name": "metricsReporter"}, {"original_string": "private HyperbahnClient hyperbahnClient;", "modifier": "private", "type": "HyperbahnClient", "declarator": "hyperbahnClient", "var_name": "hyperbahnClient"}, {"original_string": "private SubChannel subChannel;", "modifier": "private", "type": "SubChannel", "declarator": "subChannel", "var_name": "subChannel"}], "methods": [{"identifier": "CheramiClientImpl", "parameters": "(ClientOptions options)", "modifiers": "private", "return": "", "signature": " CheramiClientImpl(ClientOptions options)", "full_signature": "private  CheramiClientImpl(ClientOptions options)", "class_method_signature": "CheramiClientImpl.CheramiClientImpl(ClientOptions options)", "testcase": false, "constructor": true}, {"identifier": "CheramiClientImpl", "parameters": "(String host, int port, ClientOptions options)", "modifiers": "protected", "return": "", "signature": " CheramiClientImpl(String host, int port, ClientOptions options)", "full_signature": "protected  CheramiClientImpl(String host, int port, ClientOptions options)", "class_method_signature": "CheramiClientImpl.CheramiClientImpl(String host, int port, ClientOptions options)", "testcase": false, "constructor": true}, {"identifier": "CheramiClientImpl", "parameters": "(String routerFile, ClientOptions options)", "modifiers": "protected", "return": "", "signature": " CheramiClientImpl(String routerFile, ClientOptions options)", "full_signature": "protected  CheramiClientImpl(String routerFile, ClientOptions options)", "class_method_signature": "CheramiClientImpl.CheramiClientImpl(String routerFile, ClientOptions options)", "testcase": false, "constructor": true}, {"identifier": "getMetricsReporter", "parameters": "()", "modifiers": "protected", "return": "MetricsReporter", "signature": "MetricsReporter getMetricsReporter()", "full_signature": "protected MetricsReporter getMetricsReporter()", "class_method_signature": "CheramiClientImpl.getMetricsReporter()", "testcase": false, "constructor": false}, {"identifier": "getOptions", "parameters": "()", "modifiers": "@Override public", "return": "ClientOptions", "signature": "ClientOptions getOptions()", "full_signature": "@Override public ClientOptions getOptions()", "class_method_signature": "CheramiClientImpl.getOptions()", "testcase": false, "constructor": false}, {"identifier": "isProd", "parameters": "(String deploymentStr)", "modifiers": "private", "return": "boolean", "signature": "boolean isProd(String deploymentStr)", "full_signature": "private boolean isProd(String deploymentStr)", "class_method_signature": "CheramiClientImpl.isProd(String deploymentStr)", "testcase": false, "constructor": false}, {"identifier": "getFrontendServiceName", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getFrontendServiceName()", "full_signature": "private String getFrontendServiceName()", "class_method_signature": "CheramiClientImpl.getFrontendServiceName()", "testcase": false, "constructor": false}, {"identifier": "getWebsocketClient", "parameters": "()", "modifiers": "protected static", "return": "WebSocketClient", "signature": "WebSocketClient getWebsocketClient()", "full_signature": "protected static WebSocketClient getWebsocketClient()", "class_method_signature": "CheramiClientImpl.getWebsocketClient()", "testcase": false, "constructor": false}, {"identifier": "getEndpoint", "parameters": "(String service, String method)", "modifiers": "private static", "return": "String", "signature": "String getEndpoint(String service, String method)", "full_signature": "private static String getEndpoint(String service, String method)", "class_method_signature": "CheramiClientImpl.getEndpoint(String service, String method)", "testcase": false, "constructor": false}, {"identifier": "throwOnRpcError", "parameters": "(ThriftResponse<?> response)", "modifiers": "private", "return": "void", "signature": "void throwOnRpcError(ThriftResponse<?> response)", "full_signature": "private void throwOnRpcError(ThriftResponse<?> response)", "class_method_signature": "CheramiClientImpl.throwOnRpcError(ThriftResponse<?> response)", "testcase": false, "constructor": false}, {"identifier": "throwOnNullRequest", "parameters": "(Object request)", "modifiers": "private", "return": "void", "signature": "void throwOnNullRequest(Object request)", "full_signature": "private void throwOnNullRequest(Object request)", "class_method_signature": "CheramiClientImpl.throwOnNullRequest(Object request)", "testcase": false, "constructor": false}, {"identifier": "buildThriftRequest", "parameters": "(String apiName, T body)", "modifiers": "private", "return": "ThriftRequest<T>", "signature": "ThriftRequest<T> buildThriftRequest(String apiName, T body)", "full_signature": "private ThriftRequest<T> buildThriftRequest(String apiName, T body)", "class_method_signature": "CheramiClientImpl.buildThriftRequest(String apiName, T body)", "testcase": false, "constructor": false}, {"identifier": "doRemoteCall", "parameters": "(ThriftRequest<?> request)", "modifiers": "private", "return": "ThriftResponse<T>", "signature": "ThriftResponse<T> doRemoteCall(ThriftRequest<?> request)", "full_signature": "private ThriftResponse<T> doRemoteCall(ThriftRequest<?> request)", "class_method_signature": "CheramiClientImpl.doRemoteCall(ThriftRequest<?> request)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "CheramiClientImpl.close()", "testcase": false, "constructor": false}, {"identifier": "createConsumerGroup", "parameters": "(CreateConsumerGroupRequest request)", "modifiers": "@Override public", "return": "ConsumerGroupDescription", "signature": "ConsumerGroupDescription createConsumerGroup(CreateConsumerGroupRequest request)", "full_signature": "@Override public ConsumerGroupDescription createConsumerGroup(CreateConsumerGroupRequest request)", "class_method_signature": "CheramiClientImpl.createConsumerGroup(CreateConsumerGroupRequest request)", "testcase": false, "constructor": false}, {"identifier": "createDestination", "parameters": "(CreateDestinationRequest request)", "modifiers": "@Override public", "return": "DestinationDescription", "signature": "DestinationDescription createDestination(CreateDestinationRequest request)", "full_signature": "@Override public DestinationDescription createDestination(CreateDestinationRequest request)", "class_method_signature": "CheramiClientImpl.createDestination(CreateDestinationRequest request)", "testcase": false, "constructor": false}, {"identifier": "createPublisher", "parameters": "(CreatePublisherRequest request)", "modifiers": "@Override public", "return": "CheramiPublisher", "signature": "CheramiPublisher createPublisher(CreatePublisherRequest request)", "full_signature": "@Override public CheramiPublisher createPublisher(CreatePublisherRequest request)", "class_method_signature": "CheramiClientImpl.createPublisher(CreatePublisherRequest request)", "testcase": false, "constructor": false}, {"identifier": "createConsumer", "parameters": "(CreateConsumerRequest request)", "modifiers": "@Override public", "return": "CheramiConsumer", "signature": "CheramiConsumer createConsumer(CreateConsumerRequest request)", "full_signature": "@Override public CheramiConsumer createConsumer(CreateConsumerRequest request)", "class_method_signature": "CheramiClientImpl.createConsumer(CreateConsumerRequest request)", "testcase": false, "constructor": false}, {"identifier": "deleteConsumerGroup", "parameters": "(DeleteConsumerGroupRequest request)", "modifiers": "@Override public", "return": "void", "signature": "void deleteConsumerGroup(DeleteConsumerGroupRequest request)", "full_signature": "@Override public void deleteConsumerGroup(DeleteConsumerGroupRequest request)", "class_method_signature": "CheramiClientImpl.deleteConsumerGroup(DeleteConsumerGroupRequest request)", "testcase": false, "constructor": false}, {"identifier": "deleteDestination", "parameters": "(DeleteDestinationRequest request)", "modifiers": "@Override public", "return": "void", "signature": "void deleteDestination(DeleteDestinationRequest request)", "full_signature": "@Override public void deleteDestination(DeleteDestinationRequest request)", "class_method_signature": "CheramiClientImpl.deleteDestination(DeleteDestinationRequest request)", "testcase": false, "constructor": false}, {"identifier": "readConsumerGroup", "parameters": "(ReadConsumerGroupRequest request)", "modifiers": "@Override public", "return": "ConsumerGroupDescription", "signature": "ConsumerGroupDescription readConsumerGroup(ReadConsumerGroupRequest request)", "full_signature": "@Override public ConsumerGroupDescription readConsumerGroup(ReadConsumerGroupRequest request)", "class_method_signature": "CheramiClientImpl.readConsumerGroup(ReadConsumerGroupRequest request)", "testcase": false, "constructor": false}, {"identifier": "readDestination", "parameters": "(ReadDestinationRequest request)", "modifiers": "@Override public", "return": "DestinationDescription", "signature": "DestinationDescription readDestination(ReadDestinationRequest request)", "full_signature": "@Override public DestinationDescription readDestination(ReadDestinationRequest request)", "class_method_signature": "CheramiClientImpl.readDestination(ReadDestinationRequest request)", "testcase": false, "constructor": false}, {"identifier": "updateConsumerGroup", "parameters": "(UpdateConsumerGroupRequest request)", "modifiers": "@Override public", "return": "ConsumerGroupDescription", "signature": "ConsumerGroupDescription updateConsumerGroup(UpdateConsumerGroupRequest request)", "full_signature": "@Override public ConsumerGroupDescription updateConsumerGroup(UpdateConsumerGroupRequest request)", "class_method_signature": "CheramiClientImpl.updateConsumerGroup(UpdateConsumerGroupRequest request)", "testcase": false, "constructor": false}, {"identifier": "updateDestination", "parameters": "(UpdateDestinationRequest request)", "modifiers": "@Override public", "return": "DestinationDescription", "signature": "DestinationDescription updateDestination(UpdateDestinationRequest request)", "full_signature": "@Override public DestinationDescription updateDestination(UpdateDestinationRequest request)", "class_method_signature": "CheramiClientImpl.updateDestination(UpdateDestinationRequest request)", "testcase": false, "constructor": false}, {"identifier": "listConsumerGroups", "parameters": "(ListConsumerGroupRequest request)", "modifiers": "@Override public", "return": "ListConsumerGroupResult", "signature": "ListConsumerGroupResult listConsumerGroups(ListConsumerGroupRequest request)", "full_signature": "@Override public ListConsumerGroupResult listConsumerGroups(ListConsumerGroupRequest request)", "class_method_signature": "CheramiClientImpl.listConsumerGroups(ListConsumerGroupRequest request)", "testcase": false, "constructor": false}, {"identifier": "listDestinations", "parameters": "(ListDestinationsRequest request)", "modifiers": "@Override public", "return": "ListDestinationsResult", "signature": "ListDestinationsResult listDestinations(ListDestinationsRequest request)", "full_signature": "@Override public ListDestinationsResult listDestinations(ListDestinationsRequest request)", "class_method_signature": "CheramiClientImpl.listDestinations(ListDestinationsRequest request)", "testcase": false, "constructor": false}, {"identifier": "readDestinationHosts", "parameters": "(String path)", "modifiers": "@Override public", "return": "List<HostAddress>", "signature": "List<HostAddress> readDestinationHosts(String path)", "full_signature": "@Override public List<HostAddress> readDestinationHosts(String path)", "class_method_signature": "CheramiClientImpl.readDestinationHosts(String path)", "testcase": false, "constructor": false}, {"identifier": "readPublisherOptions", "parameters": "(String path)", "modifiers": "@Override public", "return": "ReadPublisherOptionsResult", "signature": "ReadPublisherOptionsResult readPublisherOptions(String path)", "full_signature": "@Override public ReadPublisherOptionsResult readPublisherOptions(String path)", "class_method_signature": "CheramiClientImpl.readPublisherOptions(String path)", "testcase": false, "constructor": false}, {"identifier": "readConsumerGroupHosts", "parameters": "(String path, String consumerGroupName)", "modifiers": "@Override public", "return": "ReadConsumerGroupHostsResult", "signature": "ReadConsumerGroupHostsResult readConsumerGroupHosts(String path, String consumerGroupName)", "full_signature": "@Override public ReadConsumerGroupHostsResult readConsumerGroupHosts(String path, String consumerGroupName)", "class_method_signature": "CheramiClientImpl.readConsumerGroupHosts(String path, String consumerGroupName)", "testcase": false, "constructor": false}], "file": "lib/src/main/java/com/uber/cherami/client/CheramiClientImpl.java"}, "focal_method": {"identifier": "createConsumerGroup", "parameters": "(CreateConsumerGroupRequest request)", "modifiers": "@Override public", "return": "ConsumerGroupDescription", "body": "@Override\n    public ConsumerGroupDescription createConsumerGroup(CreateConsumerGroupRequest request)\n            throws EntityAlreadyExistsError, BadRequestError, IOException {\n\n        this.throwOnNullRequest(request);\n\n        if (!request.isSetConsumerGroupName()) {\n            throw new BadRequestError(\"request missing consumerGroupName parameter\");\n        }\n        if (!request.isSetDestinationPath()) {\n            throw new BadRequestError(\"request missing destinationPath parameter\");\n        }\n\n        ThriftRequest<createConsumerGroup_args> thriftRequest = null;\n        ThriftResponse<createConsumerGroup_result> thriftResponse = null;\n        try {\n\n            thriftRequest = buildThriftRequest(\"createConsumerGroup\", new createConsumerGroup_args(request));\n            thriftResponse = doRemoteCall(thriftRequest);\n            createConsumerGroup_result result = thriftResponse.getBody(createConsumerGroup_result.class);\n            if (thriftResponse.getResponseCode() == ResponseCode.OK) {\n                return result.getSuccess();\n            }\n            if (result != null && result.isSetEntityExistsError()) {\n                throw result.getEntityExistsError();\n            }\n            if (result != null && result.isSetRequestError()) {\n                throw result.getRequestError();\n            }\n            throw new IOException(\"createConsumerGroup failed with unknown error:\" + result);\n        } finally {\n            if (thriftResponse != null) {\n                thriftResponse.release();\n            }\n        }\n    }", "signature": "ConsumerGroupDescription createConsumerGroup(CreateConsumerGroupRequest request)", "full_signature": "@Override public ConsumerGroupDescription createConsumerGroup(CreateConsumerGroupRequest request)", "class_method_signature": "CheramiClientImpl.createConsumerGroup(CreateConsumerGroupRequest request)", "testcase": false, "constructor": false, "invocations": ["throwOnNullRequest", "isSetConsumerGroupName", "isSetDestinationPath", "buildThriftRequest", "doRemoteCall", "getBody", "getResponseCode", "getSuccess", "isSetEntityExistsError", "getEntityExistsError", "isSetRequestError", "getRequestError", "release"]}, "repository": {"repo_id": 65776167, "url": "https://github.com/uber-archive/cherami-client-java", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 5, "size": 162, "license": "licensed"}}