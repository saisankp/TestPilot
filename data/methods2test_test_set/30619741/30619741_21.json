{"test_class": {"identifier": "JgroupsMessageSenderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Capturing\n   private MessageDispatcher dispatcher;", "modifier": "@Capturing\n   private", "type": "MessageDispatcher", "declarator": "dispatcher", "var_name": "dispatcher"}, {"original_string": "@Tested\n   private JgroupsMessageSender jgroupsMessageSender;", "modifier": "@Tested\n   private", "type": "JgroupsMessageSender", "declarator": "jgroupsMessageSender", "var_name": "jgroupsMessageSender"}, {"original_string": "private Address address = new org.jgroups.util.UUID();", "modifier": "private", "type": "Address", "declarator": "address = new org.jgroups.util.UUID()", "var_name": "address"}], "file": "cluster-microservice-provider/src/test/java/io/silverware/microservices/providers/cluster/internal/JgroupsMessageSenderTest.java"}, "test_case": {"identifier": "testSendToAddressAsync", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testSendToAddressAsync() throws Exception {\n      String id = UUID.randomUUID().toString();\n      jgroupsMessageSender.sendToAddressAsync(address, id);\n      new Verifications() {{\n         Message msg;\n         RequestOptions options;\n         dispatcher.sendMessage(msg = withCapture(), options = withCapture());\n         assertThat(msg.getObject()).isEqualTo(id);\n         assertThat(msg.getDest()).isEqualTo(address);\n         assertThat(options.getMode()).isEqualTo(ResponseMode.GET_NONE);\n      }};\n\n   }", "signature": "void testSendToAddressAsync()", "full_signature": "@Test public void testSendToAddressAsync()", "class_method_signature": "JgroupsMessageSenderTest.testSendToAddressAsync()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "sendToAddressAsync", "sendMessage", "withCapture", "withCapture", "isEqualTo", "assertThat", "getObject", "isEqualTo", "assertThat", "getDest", "isEqualTo", "assertThat", "getMode"]}, "focal_class": {"identifier": "JgroupsMessageSender", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LogManager.getLogger(JgroupsMessageSender.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LogManager.getLogger(JgroupsMessageSender.class)", "var_name": "log"}, {"original_string": "private static final long MESSAGE_TIMEOUT = TimeUnit.SECONDS.toMillis(10);", "modifier": "private static final", "type": "long", "declarator": "MESSAGE_TIMEOUT = TimeUnit.SECONDS.toMillis(10)", "var_name": "MESSAGE_TIMEOUT"}, {"original_string": "private static final Message.Flag[] SYNC_MESSAGE_FLAGS = { Message.Flag.DONT_BUNDLE };", "modifier": "private static final", "type": "Message.Flag[]", "declarator": "SYNC_MESSAGE_FLAGS = { Message.Flag.DONT_BUNDLE }", "var_name": "SYNC_MESSAGE_FLAGS"}, {"original_string": "private static final RequestOptions SYNC_OPTIONS = new RequestOptions(ResponseMode.GET_ALL, MESSAGE_TIMEOUT, true, null, SYNC_MESSAGE_FLAGS);", "modifier": "private static final", "type": "RequestOptions", "declarator": "SYNC_OPTIONS = new RequestOptions(ResponseMode.GET_ALL, MESSAGE_TIMEOUT, true, null, SYNC_MESSAGE_FLAGS)", "var_name": "SYNC_OPTIONS"}, {"original_string": "private static final RequestOptions ASYNC_OPTIONS = new RequestOptions(ResponseMode.GET_NONE, MESSAGE_TIMEOUT, true);", "modifier": "private static final", "type": "RequestOptions", "declarator": "ASYNC_OPTIONS = new RequestOptions(ResponseMode.GET_NONE, MESSAGE_TIMEOUT, true)", "var_name": "ASYNC_OPTIONS"}, {"original_string": "private final MessageDispatcher dispatcher;", "modifier": "private final", "type": "MessageDispatcher", "declarator": "dispatcher", "var_name": "dispatcher"}, {"original_string": "private Set<Address> filteredAdresses;", "modifier": "private", "type": "Set<Address>", "declarator": "filteredAdresses", "var_name": "filteredAdresses"}], "methods": [{"identifier": "JgroupsMessageSender", "parameters": "(MessageDispatcher dispatcher)", "modifiers": "public", "return": "", "signature": " JgroupsMessageSender(MessageDispatcher dispatcher)", "full_signature": "public  JgroupsMessageSender(MessageDispatcher dispatcher)", "class_method_signature": "JgroupsMessageSender.JgroupsMessageSender(MessageDispatcher dispatcher)", "testcase": false, "constructor": true}, {"identifier": "getFilteredAddresses", "parameters": "()", "modifiers": "private", "return": "Set<Address>", "signature": "Set<Address> getFilteredAddresses()", "full_signature": "private Set<Address> getFilteredAddresses()", "class_method_signature": "JgroupsMessageSender.getFilteredAddresses()", "testcase": false, "constructor": false}, {"identifier": "sendToClusterSync", "parameters": "(Serializable content)", "modifiers": "public", "return": "RspList<T>", "signature": "RspList<T> sendToClusterSync(Serializable content)", "full_signature": "public RspList<T> sendToClusterSync(Serializable content)", "class_method_signature": "JgroupsMessageSender.sendToClusterSync(Serializable content)", "testcase": false, "constructor": false}, {"identifier": "sendToClusterAsync", "parameters": "(Serializable content, Set<Address> addressesToSkip, FutureListener<RspList<T>> listener)", "modifiers": "public", "return": "void", "signature": "void sendToClusterAsync(Serializable content, Set<Address> addressesToSkip, FutureListener<RspList<T>> listener)", "full_signature": "public void sendToClusterAsync(Serializable content, Set<Address> addressesToSkip, FutureListener<RspList<T>> listener)", "class_method_signature": "JgroupsMessageSender.sendToClusterAsync(Serializable content, Set<Address> addressesToSkip, FutureListener<RspList<T>> listener)", "testcase": false, "constructor": false}, {"identifier": "sendToClusterAsync", "parameters": "(Serializable content, FutureListener<RspList<T>> listener)", "modifiers": "public", "return": "void", "signature": "void sendToClusterAsync(Serializable content, FutureListener<RspList<T>> listener)", "full_signature": "public void sendToClusterAsync(Serializable content, FutureListener<RspList<T>> listener)", "class_method_signature": "JgroupsMessageSender.sendToClusterAsync(Serializable content, FutureListener<RspList<T>> listener)", "testcase": false, "constructor": false}, {"identifier": "getMembersAddresses", "parameters": "()", "modifiers": "", "return": "List<Address>", "signature": "List<Address> getMembersAddresses()", "full_signature": " List<Address> getMembersAddresses()", "class_method_signature": "JgroupsMessageSender.getMembersAddresses()", "testcase": false, "constructor": false}, {"identifier": "getOtherMembersAddresses", "parameters": "()", "modifiers": "private", "return": "List<Address>", "signature": "List<Address> getOtherMembersAddresses()", "full_signature": "private List<Address> getOtherMembersAddresses()", "class_method_signature": "JgroupsMessageSender.getOtherMembersAddresses()", "testcase": false, "constructor": false}, {"identifier": "sendToAddressAsync", "parameters": "(Address address, Serializable content)", "modifiers": "public", "return": "void", "signature": "void sendToAddressAsync(Address address, Serializable content)", "full_signature": "public void sendToAddressAsync(Address address, Serializable content)", "class_method_signature": "JgroupsMessageSender.sendToAddressAsync(Address address, Serializable content)", "testcase": false, "constructor": false}, {"identifier": "sendToAddressSync", "parameters": "(Address address, Serializable content)", "modifiers": "public", "return": "T", "signature": "T sendToAddressSync(Address address, Serializable content)", "full_signature": "public T sendToAddressSync(Address address, Serializable content)", "class_method_signature": "JgroupsMessageSender.sendToAddressSync(Address address, Serializable content)", "testcase": false, "constructor": false}, {"identifier": "isEmptyCluster", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmptyCluster()", "full_signature": "public boolean isEmptyCluster()", "class_method_signature": "JgroupsMessageSender.isEmptyCluster()", "testcase": false, "constructor": false}], "file": "cluster-microservice-provider/src/main/java/io/silverware/microservices/providers/cluster/internal/JgroupsMessageSender.java"}, "focal_method": {"identifier": "sendToAddressAsync", "parameters": "(Address address, Serializable content)", "modifiers": "public", "return": "void", "body": "public void sendToAddressAsync(Address address, Serializable content) throws Exception {\n      this.dispatcher.sendMessage(new Message(address, Util.objectToByteBuffer(content)), ASYNC_OPTIONS);\n   }", "signature": "void sendToAddressAsync(Address address, Serializable content)", "full_signature": "public void sendToAddressAsync(Address address, Serializable content)", "class_method_signature": "JgroupsMessageSender.sendToAddressAsync(Address address, Serializable content)", "testcase": false, "constructor": false, "invocations": ["sendMessage", "objectToByteBuffer"]}, "repository": {"repo_id": 30619741, "url": "https://github.com/SilverThings/SilverWare", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 21, "size": 3333, "license": "licensed"}}