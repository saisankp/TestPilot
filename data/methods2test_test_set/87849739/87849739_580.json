{"test_class": {"identifier": "KamonCounterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Counter sut;", "modifier": "private", "type": "Counter", "declarator": "sut", "var_name": "sut"}], "file": "services/utils/metrics/src/test/java/org/eclipse/ditto/services/utils/metrics/instruments/counter/KamonCounterTest.java"}, "test_case": {"identifier": "getCount", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getCount() {\n        sut.increment();\n        assertThat(sut.getCount()).isEqualTo(1);\n    }", "signature": "void getCount()", "full_signature": "@Test public void getCount()", "class_method_signature": "KamonCounterTest.getCount()", "testcase": true, "constructor": false, "invocations": ["increment", "isEqualTo", "assertThat", "getCount"]}, "focal_class": {"identifier": "KamonCounter", "superclass": "", "interfaces": "implements Counter", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(KamonCounter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(KamonCounter.class)", "var_name": "LOGGER"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final Map<String, String> tags;", "modifier": "private final", "type": "Map<String, String>", "declarator": "tags", "var_name": "tags"}], "methods": [{"identifier": "KamonCounter", "parameters": "(final String name, final Map<String, String> tags)", "modifiers": "private", "return": "", "signature": " KamonCounter(final String name, final Map<String, String> tags)", "full_signature": "private  KamonCounter(final String name, final Map<String, String> tags)", "class_method_signature": "KamonCounter.KamonCounter(final String name, final Map<String, String> tags)", "testcase": false, "constructor": true}, {"identifier": "newCounter", "parameters": "(final String name)", "modifiers": "public static", "return": "KamonCounter", "signature": "KamonCounter newCounter(final String name)", "full_signature": "public static KamonCounter newCounter(final String name)", "class_method_signature": "KamonCounter.newCounter(final String name)", "testcase": false, "constructor": false}, {"identifier": "newCounter", "parameters": "(final String name, final Map<String, String> tags)", "modifiers": "public static", "return": "KamonCounter", "signature": "KamonCounter newCounter(final String name, final Map<String, String> tags)", "full_signature": "public static KamonCounter newCounter(final String name, final Map<String, String> tags)", "class_method_signature": "KamonCounter.newCounter(final String name, final Map<String, String> tags)", "testcase": false, "constructor": false}, {"identifier": "tag", "parameters": "(final String key, final String value)", "modifiers": "@Override public", "return": "KamonCounter", "signature": "KamonCounter tag(final String key, final String value)", "full_signature": "@Override public KamonCounter tag(final String key, final String value)", "class_method_signature": "KamonCounter.tag(final String key, final String value)", "testcase": false, "constructor": false}, {"identifier": "tags", "parameters": "(final Map<String, String> tags)", "modifiers": "@Override public", "return": "KamonCounter", "signature": "KamonCounter tags(final Map<String, String> tags)", "full_signature": "@Override public KamonCounter tags(final Map<String, String> tags)", "class_method_signature": "KamonCounter.tags(final Map<String, String> tags)", "testcase": false, "constructor": false}, {"identifier": "getTag", "parameters": "(final String key)", "modifiers": "@Nullable @Override public", "return": "String", "signature": "String getTag(final String key)", "full_signature": "@Nullable @Override public String getTag(final String key)", "class_method_signature": "KamonCounter.getTag(final String key)", "testcase": false, "constructor": false}, {"identifier": "getTags", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getTags()", "full_signature": "@Override public Map<String, String> getTags()", "class_method_signature": "KamonCounter.getTags()", "testcase": false, "constructor": false}, {"identifier": "increment", "parameters": "()", "modifiers": "@Override public", "return": "KamonCounter", "signature": "KamonCounter increment()", "full_signature": "@Override public KamonCounter increment()", "class_method_signature": "KamonCounter.increment()", "testcase": false, "constructor": false}, {"identifier": "increment", "parameters": "(final long times)", "modifiers": "@Override public", "return": "KamonCounter", "signature": "KamonCounter increment(final long times)", "full_signature": "@Override public KamonCounter increment(final long times)", "class_method_signature": "KamonCounter.increment(final long times)", "testcase": false, "constructor": false}, {"identifier": "getCount", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getCount()", "full_signature": "@Override public long getCount()", "class_method_signature": "KamonCounter.getCount()", "testcase": false, "constructor": false}, {"identifier": "getSnapshot", "parameters": "()", "modifiers": "private", "return": "long", "signature": "long getSnapshot()", "full_signature": "private long getSnapshot()", "class_method_signature": "KamonCounter.getSnapshot()", "testcase": false, "constructor": false}, {"identifier": "getKamonInternalCounter", "parameters": "()", "modifiers": "private", "return": "kamon.metric.Counter", "signature": "kamon.metric.Counter getKamonInternalCounter()", "full_signature": "private kamon.metric.Counter getKamonInternalCounter()", "class_method_signature": "KamonCounter.getKamonInternalCounter()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean reset()", "full_signature": "@Override public boolean reset()", "class_method_signature": "KamonCounter.reset()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "KamonCounter.toString()", "testcase": false, "constructor": false}], "file": "services/utils/metrics/src/main/java/org/eclipse/ditto/services/utils/metrics/instruments/counter/KamonCounter.java"}, "focal_method": {"identifier": "getCount", "parameters": "()", "modifiers": "@Override public", "return": "long", "body": "@Override\n    public long getCount() {\n        return getSnapshot();\n    }", "signature": "long getCount()", "full_signature": "@Override public long getCount()", "class_method_signature": "KamonCounter.getCount()", "testcase": false, "constructor": false, "invocations": ["getSnapshot"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}