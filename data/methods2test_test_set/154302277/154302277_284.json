{"test_class": {"identifier": "DomainInfoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DOMAIN_DISTRIBUTION_AUTOMATION = \"DISTRIBUTION_AUTOMATION\";", "modifier": "private static final", "type": "String", "declarator": "DOMAIN_DISTRIBUTION_AUTOMATION = \"DISTRIBUTION_AUTOMATION\"", "var_name": "DOMAIN_DISTRIBUTION_AUTOMATION"}, {"original_string": "private static final String DOMAIN_PUBLIC_LIGHTING = \"PUBLIC_LIGHTING\";", "modifier": "private static final", "type": "String", "declarator": "DOMAIN_PUBLIC_LIGHTING = \"PUBLIC_LIGHTING\"", "var_name": "DOMAIN_PUBLIC_LIGHTING"}, {"original_string": "private static final String DOMAIN_VERSION = \"1.0\";", "modifier": "private static final", "type": "String", "declarator": "DOMAIN_VERSION = \"1.0\"", "var_name": "DOMAIN_VERSION"}, {"original_string": "private static final DomainInfo DOMAIN_INFO_DISTRIBUTION_AUTOMATION = new DomainInfo(DOMAIN_DISTRIBUTION_AUTOMATION,\n            DOMAIN_VERSION);", "modifier": "private static final", "type": "DomainInfo", "declarator": "DOMAIN_INFO_DISTRIBUTION_AUTOMATION = new DomainInfo(DOMAIN_DISTRIBUTION_AUTOMATION,\n            DOMAIN_VERSION)", "var_name": "DOMAIN_INFO_DISTRIBUTION_AUTOMATION"}, {"original_string": "private static final DomainInfo DOMAIN_INFO_PUBLIC_LIGHTING = new DomainInfo(DOMAIN_PUBLIC_LIGHTING,\n            DOMAIN_VERSION);", "modifier": "private static final", "type": "DomainInfo", "declarator": "DOMAIN_INFO_PUBLIC_LIGHTING = new DomainInfo(DOMAIN_PUBLIC_LIGHTING,\n            DOMAIN_VERSION)", "var_name": "DOMAIN_INFO_PUBLIC_LIGHTING"}], "file": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/test/java/org/opensmartgridplatform/adapter/protocol/iec60870/domain/valueobjects/DomainInfoTest.java"}, "test_case": {"identifier": "testEqualsReturnsFalseForObjectsWithDifferentDomainValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEqualsReturnsFalseForObjectsWithDifferentDomainValues() {\n        // Arrange\n        final DomainInfo thisDomainInfo = new DomainInfo(DOMAIN_DISTRIBUTION_AUTOMATION, DOMAIN_VERSION);\n        final DomainInfo otherDomainInfo = new DomainInfo(DOMAIN_PUBLIC_LIGHTING, DOMAIN_VERSION);\n        // Act\n        final boolean actual = thisDomainInfo.equals(otherDomainInfo);\n        // Assert\n        assertThat(actual).isFalse();\n    }", "signature": "void testEqualsReturnsFalseForObjectsWithDifferentDomainValues()", "full_signature": "@Test public void testEqualsReturnsFalseForObjectsWithDifferentDomainValues()", "class_method_signature": "DomainInfoTest.testEqualsReturnsFalseForObjectsWithDifferentDomainValues()", "testcase": true, "constructor": false, "invocations": ["equals", "isFalse", "assertThat"]}, "focal_class": {"identifier": "DomainInfo", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String domain;", "modifier": "private final", "type": "String", "declarator": "domain", "var_name": "domain"}, {"original_string": "private final String domainVersion;", "modifier": "private final", "type": "String", "declarator": "domainVersion", "var_name": "domainVersion"}], "methods": [{"identifier": "DomainInfo", "parameters": "(final String domain, final String domainVersion)", "modifiers": "public", "return": "", "signature": " DomainInfo(final String domain, final String domainVersion)", "full_signature": "public  DomainInfo(final String domain, final String domainVersion)", "class_method_signature": "DomainInfo.DomainInfo(final String domain, final String domainVersion)", "testcase": false, "constructor": true}, {"identifier": "getDomain", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDomain()", "full_signature": "public String getDomain()", "class_method_signature": "DomainInfo.getDomain()", "testcase": false, "constructor": false}, {"identifier": "getDomainVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDomainVersion()", "full_signature": "public String getDomainVersion()", "class_method_signature": "DomainInfo.getDomainVersion()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "DomainInfo.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DomainInfo.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DomainInfo.toString()", "testcase": false, "constructor": false}], "file": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/main/java/org/opensmartgridplatform/adapter/protocol/iec60870/domain/valueobjects/DomainInfo.java"}, "focal_method": {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(final Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (!(obj instanceof DomainInfo)) {\n            return false;\n        }\n        final DomainInfo other = (DomainInfo) obj;\n        return Objects.equals(this.domain, other.domain) && Objects.equals(this.domainVersion, other.domainVersion);\n    }", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "DomainInfo.equals(final Object obj)", "testcase": false, "constructor": false, "invocations": ["equals", "equals"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}