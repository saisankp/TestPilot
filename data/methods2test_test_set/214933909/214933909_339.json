{"test_class": {"identifier": "DeleteCheckDaoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    DeleteCheckDao deleteCheckDao;", "modifier": "@Autowired", "type": "DeleteCheckDao", "declarator": "deleteCheckDao", "var_name": "deleteCheckDao"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/dao/DeleteCheckDaoTest.java"}, "test_case": {"identifier": "isServerGroupIdInServer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isServerGroupIdInServer() throws Exception {\n        boolean b = deleteCheckDao.isServerGroupIdInServer(1L);\n        System.out.println(\"isServerGroupIdInServer :-------> \" + b);\n        Assert.assertTrue(b);\n    }", "signature": "void isServerGroupIdInServer()", "full_signature": "@Test public void isServerGroupIdInServer()", "class_method_signature": "DeleteCheckDaoTest.isServerGroupIdInServer()", "testcase": true, "constructor": false, "invocations": ["isServerGroupIdInServer", "println", "assertTrue"]}, "focal_class": {"identifier": "DeleteCheckDao", "superclass": "extends BaseDao", "interfaces": "", "fields": [], "methods": [{"identifier": "isDbsetIdInTaskSQL", "parameters": "(Long dbsetId)", "modifiers": "public", "return": "boolean", "signature": "boolean isDbsetIdInTaskSQL(Long dbsetId)", "full_signature": "public boolean isDbsetIdInTaskSQL(Long dbsetId)", "class_method_signature": "DeleteCheckDao.isDbsetIdInTaskSQL(Long dbsetId)", "testcase": false, "constructor": false}, {"identifier": "isProjectAndDbsetIdInTaskSQL", "parameters": "(Long projectId, Long dbsetId)", "modifiers": "public", "return": "boolean", "signature": "boolean isProjectAndDbsetIdInTaskSQL(Long projectId, Long dbsetId)", "full_signature": "public boolean isProjectAndDbsetIdInTaskSQL(Long projectId, Long dbsetId)", "class_method_signature": "DeleteCheckDao.isProjectAndDbsetIdInTaskSQL(Long projectId, Long dbsetId)", "testcase": false, "constructor": false}, {"identifier": "isDbsetIdInTaskSQL", "parameters": "(Long projectId, Set<Long> dbsetIds)", "modifiers": "public", "return": "boolean", "signature": "boolean isDbsetIdInTaskSQL(Long projectId, Set<Long> dbsetIds)", "full_signature": "public boolean isDbsetIdInTaskSQL(Long projectId, Set<Long> dbsetIds)", "class_method_signature": "DeleteCheckDao.isDbsetIdInTaskSQL(Long projectId, Set<Long> dbsetIds)", "testcase": false, "constructor": false}, {"identifier": "isDbsetIdInTaskSQL", "parameters": "(Set<Long> dbsetIds)", "modifiers": "public", "return": "boolean", "signature": "boolean isDbsetIdInTaskSQL(Set<Long> dbsetIds)", "full_signature": "public boolean isDbsetIdInTaskSQL(Set<Long> dbsetIds)", "class_method_signature": "DeleteCheckDao.isDbsetIdInTaskSQL(Set<Long> dbsetIds)", "testcase": false, "constructor": false}, {"identifier": "isDbsetIdInTaskTable", "parameters": "(Long dbsetId)", "modifiers": "public", "return": "boolean", "signature": "boolean isDbsetIdInTaskTable(Long dbsetId)", "full_signature": "public boolean isDbsetIdInTaskTable(Long dbsetId)", "class_method_signature": "DeleteCheckDao.isDbsetIdInTaskTable(Long dbsetId)", "testcase": false, "constructor": false}, {"identifier": "isDbsetIdInTaskTable", "parameters": "(Long projectId, Long dbsetId)", "modifiers": "public", "return": "boolean", "signature": "boolean isDbsetIdInTaskTable(Long projectId, Long dbsetId)", "full_signature": "public boolean isDbsetIdInTaskTable(Long projectId, Long dbsetId)", "class_method_signature": "DeleteCheckDao.isDbsetIdInTaskTable(Long projectId, Long dbsetId)", "testcase": false, "constructor": false}, {"identifier": "isDbsetIdInTaskTable", "parameters": "(Long projectId, Set<Long> dbsetIds)", "modifiers": "public", "return": "boolean", "signature": "boolean isDbsetIdInTaskTable(Long projectId, Set<Long> dbsetIds)", "full_signature": "public boolean isDbsetIdInTaskTable(Long projectId, Set<Long> dbsetIds)", "class_method_signature": "DeleteCheckDao.isDbsetIdInTaskTable(Long projectId, Set<Long> dbsetIds)", "testcase": false, "constructor": false}, {"identifier": "isDbsetIdInTaskTable", "parameters": "(Set<Long> dbsetIds)", "modifiers": "public", "return": "boolean", "signature": "boolean isDbsetIdInTaskTable(Set<Long> dbsetIds)", "full_signature": "public boolean isDbsetIdInTaskTable(Set<Long> dbsetIds)", "class_method_signature": "DeleteCheckDao.isDbsetIdInTaskTable(Set<Long> dbsetIds)", "testcase": false, "constructor": false}, {"identifier": "isDbsetIdInProjectDbsetRelation", "parameters": "(Long dbsetId)", "modifiers": "public", "return": "boolean", "signature": "boolean isDbsetIdInProjectDbsetRelation(Long dbsetId)", "full_signature": "public boolean isDbsetIdInProjectDbsetRelation(Long dbsetId)", "class_method_signature": "DeleteCheckDao.isDbsetIdInProjectDbsetRelation(Long dbsetId)", "testcase": false, "constructor": false}, {"identifier": "isDbsetIdInDatabasesetentry", "parameters": "(Long dbsetId)", "modifiers": "public", "return": "boolean", "signature": "boolean isDbsetIdInDatabasesetentry(Long dbsetId)", "full_signature": "public boolean isDbsetIdInDatabasesetentry(Long dbsetId)", "class_method_signature": "DeleteCheckDao.isDbsetIdInDatabasesetentry(Long dbsetId)", "testcase": false, "constructor": false}, {"identifier": "isServerGroupIdInAppGroup", "parameters": "(Long serverGroupId)", "modifiers": "public", "return": "boolean", "signature": "boolean isServerGroupIdInAppGroup(Long serverGroupId)", "full_signature": "public boolean isServerGroupIdInAppGroup(Long serverGroupId)", "class_method_signature": "DeleteCheckDao.isServerGroupIdInAppGroup(Long serverGroupId)", "testcase": false, "constructor": false}, {"identifier": "isServerGroupIdInServer", "parameters": "(Long serverGroupId)", "modifiers": "public", "return": "boolean", "signature": "boolean isServerGroupIdInServer(Long serverGroupId)", "full_signature": "public boolean isServerGroupIdInServer(Long serverGroupId)", "class_method_signature": "DeleteCheckDao.isServerGroupIdInServer(Long serverGroupId)", "testcase": false, "constructor": false}, {"identifier": "isDbsetEntryIdInProject", "parameters": "(Long dbId)", "modifiers": "public", "return": "boolean", "signature": "boolean isDbsetEntryIdInProject(Long dbId)", "full_signature": "public boolean isDbsetEntryIdInProject(Long dbId)", "class_method_signature": "DeleteCheckDao.isDbsetEntryIdInProject(Long dbId)", "testcase": false, "constructor": false}, {"identifier": "isDbsetIdInProject", "parameters": "(Long appGroupId)", "modifiers": "public", "return": "boolean", "signature": "boolean isDbsetIdInProject(Long appGroupId)", "full_signature": "public boolean isDbsetIdInProject(Long appGroupId)", "class_method_signature": "DeleteCheckDao.isDbsetIdInProject(Long appGroupId)", "testcase": false, "constructor": false}, {"identifier": "isProjectIdInProjectDbsetRelatio", "parameters": "(Long projectId)", "modifiers": "public", "return": "boolean", "signature": "boolean isProjectIdInProjectDbsetRelatio(Long projectId)", "full_signature": "public boolean isProjectIdInProjectDbsetRelatio(Long projectId)", "class_method_signature": "DeleteCheckDao.isProjectIdInProjectDbsetRelatio(Long projectId)", "testcase": false, "constructor": false}, {"identifier": "isProjectIdInTaskTable", "parameters": "(Long projectId)", "modifiers": "public", "return": "boolean", "signature": "boolean isProjectIdInTaskTable(Long projectId)", "full_signature": "public boolean isProjectIdInTaskTable(Long projectId)", "class_method_signature": "DeleteCheckDao.isProjectIdInTaskTable(Long projectId)", "testcase": false, "constructor": false}, {"identifier": "isProjectIdInTaskSQL", "parameters": "(Long projectId)", "modifiers": "public", "return": "boolean", "signature": "boolean isProjectIdInTaskSQL(Long projectId)", "full_signature": "public boolean isProjectIdInTaskSQL(Long projectId)", "class_method_signature": "DeleteCheckDao.isProjectIdInTaskSQL(Long projectId)", "testcase": false, "constructor": false}, {"identifier": "isIdInTable", "parameters": "(String table, String name, Long id)", "modifiers": "private", "return": "boolean", "signature": "boolean isIdInTable(String table, String name, Long id)", "full_signature": "private boolean isIdInTable(String table, String name, Long id)", "class_method_signature": "DeleteCheckDao.isIdInTable(String table, String name, Long id)", "testcase": false, "constructor": false}, {"identifier": "isIdInTable", "parameters": "(String table, Map<String, Long> fields)", "modifiers": "private", "return": "boolean", "signature": "boolean isIdInTable(String table, Map<String, Long> fields)", "full_signature": "private boolean isIdInTable(String table, Map<String, Long> fields)", "class_method_signature": "DeleteCheckDao.isIdInTable(String table, Map<String, Long> fields)", "testcase": false, "constructor": false}, {"identifier": "getIsIdInTableSql", "parameters": "(String table, String name, Long id)", "modifiers": "private", "return": "String", "signature": "String getIsIdInTableSql(String table, String name, Long id)", "full_signature": "private String getIsIdInTableSql(String table, String name, Long id)", "class_method_signature": "DeleteCheckDao.getIsIdInTableSql(String table, String name, Long id)", "testcase": false, "constructor": false}, {"identifier": "getIsIdInTableSql", "parameters": "(String table, Map<String, Long> fields)", "modifiers": "private", "return": "String", "signature": "String getIsIdInTableSql(String table, Map<String, Long> fields)", "full_signature": "private String getIsIdInTableSql(String table, Map<String, Long> fields)", "class_method_signature": "DeleteCheckDao.getIsIdInTableSql(String table, Map<String, Long> fields)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/dao/DeleteCheckDao.java"}, "focal_method": {"identifier": "isServerGroupIdInServer", "parameters": "(Long serverGroupId)", "modifiers": "public", "return": "boolean", "body": "public boolean isServerGroupIdInServer(Long serverGroupId) throws SQLException {\n        return isIdInTable(\"server\", \"server_group_id\", serverGroupId);\n    }", "signature": "boolean isServerGroupIdInServer(Long serverGroupId)", "full_signature": "public boolean isServerGroupIdInServer(Long serverGroupId)", "class_method_signature": "DeleteCheckDao.isServerGroupIdInServer(Long serverGroupId)", "testcase": false, "constructor": false, "invocations": ["isIdInTable"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}