{"test_class": {"identifier": "TestApplicationHistoryManagerOnTimelineStore", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int SCALE = 5;", "modifier": "private static final", "type": "int", "declarator": "SCALE = 5", "var_name": "SCALE"}, {"original_string": "private static TimelineStore store;", "modifier": "private static", "type": "TimelineStore", "declarator": "store", "var_name": "store"}, {"original_string": "private ApplicationHistoryManagerOnTimelineStore historyManager;", "modifier": "private", "type": "ApplicationHistoryManagerOnTimelineStore", "declarator": "historyManager", "var_name": "historyManager"}, {"original_string": "private UserGroupInformation callerUGI;", "modifier": "private", "type": "UserGroupInformation", "declarator": "callerUGI", "var_name": "callerUGI"}, {"original_string": "private Configuration conf;", "modifier": "private", "type": "Configuration", "declarator": "conf", "var_name": "conf"}], "file": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/test/java/org/apache/hadoop/yarn/server/applicationhistoryservice/TestApplicationHistoryManagerOnTimelineStore.java"}, "test_case": {"identifier": "testGetApplicationAttemptReport", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetApplicationAttemptReport() throws Exception {\n    final ApplicationAttemptId appAttemptId =\n        ApplicationAttemptId.newInstance(ApplicationId.newInstance(0, 1), 1);\n    ApplicationAttemptReport appAttempt;\n    if (callerUGI == null) {\n      appAttempt = historyManager.getApplicationAttempt(appAttemptId);\n    } else {\n      try {\n        appAttempt =\n            callerUGI.doAs(new PrivilegedExceptionAction<ApplicationAttemptReport> () {\n          @Override\n          public ApplicationAttemptReport run() throws Exception {\n            return historyManager.getApplicationAttempt(appAttemptId);\n          }\n        });\n        if (callerUGI != null && callerUGI.getShortUserName().equals(\"user3\")) {\n          // The exception is expected\n          Assert.fail();\n        }\n      } catch (AuthorizationException e) {\n        if (callerUGI != null && callerUGI.getShortUserName().equals(\"user3\")) {\n          // The exception is expected\n          return;\n        }\n        throw e;\n      }\n    }\n    Assert.assertNotNull(appAttempt);\n    Assert.assertEquals(appAttemptId, appAttempt.getApplicationAttemptId());\n    Assert.assertEquals(ContainerId.newContainerId(appAttemptId, 1),\n        appAttempt.getAMContainerId());\n    Assert.assertEquals(\"test host\", appAttempt.getHost());\n    Assert.assertEquals(100, appAttempt.getRpcPort());\n    Assert.assertEquals(\"test tracking url\", appAttempt.getTrackingUrl());\n    Assert.assertEquals(\"test original tracking url\",\n        appAttempt.getOriginalTrackingUrl());\n    Assert.assertEquals(\"test diagnostics info\", appAttempt.getDiagnostics());\n    Assert.assertEquals(YarnApplicationAttemptState.FINISHED,\n        appAttempt.getYarnApplicationAttemptState());\n  }", "signature": "void testGetApplicationAttemptReport()", "full_signature": "@Test public void testGetApplicationAttemptReport()", "class_method_signature": "TestApplicationHistoryManagerOnTimelineStore.testGetApplicationAttemptReport()", "testcase": true, "constructor": false, "invocations": ["newInstance", "newInstance", "getApplicationAttempt", "doAs", "getApplicationAttempt", "equals", "getShortUserName", "fail", "equals", "getShortUserName", "assertNotNull", "assertEquals", "getApplicationAttemptId", "assertEquals", "newContainerId", "getAMContainerId", "assertEquals", "getHost", "assertEquals", "getRpcPort", "assertEquals", "getTrackingUrl", "assertEquals", "getOriginalTrackingUrl", "assertEquals", "getDiagnostics", "assertEquals", "getYarnApplicationAttemptState"]}, "focal_class": {"identifier": "ApplicationHistoryManagerOnTimelineStore", "superclass": "extends AbstractService", "interfaces": "implements\n    ApplicationHistoryManager", "fields": [{"original_string": "private static final Log LOG = LogFactory\n      .getLog(ApplicationHistoryManagerOnTimelineStore.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory\n      .getLog(ApplicationHistoryManagerOnTimelineStore.class)", "var_name": "LOG"}, {"original_string": "@VisibleForTesting\n  static final String UNAVAILABLE = \"N/A\";", "modifier": "@VisibleForTesting\n  static final", "type": "String", "declarator": "UNAVAILABLE = \"N/A\"", "var_name": "UNAVAILABLE"}, {"original_string": "private TimelineDataManager timelineDataManager;", "modifier": "private", "type": "TimelineDataManager", "declarator": "timelineDataManager", "var_name": "timelineDataManager"}, {"original_string": "private ApplicationACLsManager aclsManager;", "modifier": "private", "type": "ApplicationACLsManager", "declarator": "aclsManager", "var_name": "aclsManager"}, {"original_string": "private String serverHttpAddress;", "modifier": "private", "type": "String", "declarator": "serverHttpAddress", "var_name": "serverHttpAddress"}, {"original_string": "private long maxLoadedApplications;", "modifier": "private", "type": "long", "declarator": "maxLoadedApplications", "var_name": "maxLoadedApplications"}], "methods": [{"identifier": "ApplicationHistoryManagerOnTimelineStore", "parameters": "(\n      TimelineDataManager timelineDataManager,\n      ApplicationACLsManager aclsManager)", "modifiers": "public", "return": "", "signature": " ApplicationHistoryManagerOnTimelineStore(\n      TimelineDataManager timelineDataManager,\n      ApplicationACLsManager aclsManager)", "full_signature": "public  ApplicationHistoryManagerOnTimelineStore(\n      TimelineDataManager timelineDataManager,\n      ApplicationACLsManager aclsManager)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.ApplicationHistoryManagerOnTimelineStore(\n      TimelineDataManager timelineDataManager,\n      ApplicationACLsManager aclsManager)", "testcase": false, "constructor": true}, {"identifier": "serviceInit", "parameters": "(Configuration conf)", "modifiers": "@Override protected", "return": "void", "signature": "void serviceInit(Configuration conf)", "full_signature": "@Override protected void serviceInit(Configuration conf)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.serviceInit(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getApplication", "parameters": "(ApplicationId appId)", "modifiers": "@Override public", "return": "ApplicationReport", "signature": "ApplicationReport getApplication(ApplicationId appId)", "full_signature": "@Override public ApplicationReport getApplication(ApplicationId appId)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.getApplication(ApplicationId appId)", "testcase": false, "constructor": false}, {"identifier": "getApplications", "parameters": "(long appsNum)", "modifiers": "@Override public", "return": "Map<ApplicationId, ApplicationReport>", "signature": "Map<ApplicationId, ApplicationReport> getApplications(long appsNum)", "full_signature": "@Override public Map<ApplicationId, ApplicationReport> getApplications(long appsNum)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.getApplications(long appsNum)", "testcase": false, "constructor": false}, {"identifier": "getApplicationAttempts", "parameters": "(ApplicationId appId)", "modifiers": "@Override public", "return": "Map<ApplicationAttemptId, ApplicationAttemptReport>", "signature": "Map<ApplicationAttemptId, ApplicationAttemptReport> getApplicationAttempts(ApplicationId appId)", "full_signature": "@Override public Map<ApplicationAttemptId, ApplicationAttemptReport> getApplicationAttempts(ApplicationId appId)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.getApplicationAttempts(ApplicationId appId)", "testcase": false, "constructor": false}, {"identifier": "getApplicationAttempt", "parameters": "(\n      ApplicationAttemptId appAttemptId)", "modifiers": "@Override public", "return": "ApplicationAttemptReport", "signature": "ApplicationAttemptReport getApplicationAttempt(\n      ApplicationAttemptId appAttemptId)", "full_signature": "@Override public ApplicationAttemptReport getApplicationAttempt(\n      ApplicationAttemptId appAttemptId)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.getApplicationAttempt(\n      ApplicationAttemptId appAttemptId)", "testcase": false, "constructor": false}, {"identifier": "getApplicationAttempt", "parameters": "(\n      ApplicationAttemptId appAttemptId, boolean checkACLs)", "modifiers": "private", "return": "ApplicationAttemptReport", "signature": "ApplicationAttemptReport getApplicationAttempt(\n      ApplicationAttemptId appAttemptId, boolean checkACLs)", "full_signature": "private ApplicationAttemptReport getApplicationAttempt(\n      ApplicationAttemptId appAttemptId, boolean checkACLs)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.getApplicationAttempt(\n      ApplicationAttemptId appAttemptId, boolean checkACLs)", "testcase": false, "constructor": false}, {"identifier": "getContainer", "parameters": "(ContainerId containerId)", "modifiers": "@Override public", "return": "ContainerReport", "signature": "ContainerReport getContainer(ContainerId containerId)", "full_signature": "@Override public ContainerReport getContainer(ContainerId containerId)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.getContainer(ContainerId containerId)", "testcase": false, "constructor": false}, {"identifier": "getAMContainer", "parameters": "(ApplicationAttemptId appAttemptId)", "modifiers": "@Override public", "return": "ContainerReport", "signature": "ContainerReport getAMContainer(ApplicationAttemptId appAttemptId)", "full_signature": "@Override public ContainerReport getAMContainer(ApplicationAttemptId appAttemptId)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.getAMContainer(ApplicationAttemptId appAttemptId)", "testcase": false, "constructor": false}, {"identifier": "getContainers", "parameters": "(\n      ApplicationAttemptId appAttemptId)", "modifiers": "@Override public", "return": "Map<ContainerId, ContainerReport>", "signature": "Map<ContainerId, ContainerReport> getContainers(\n      ApplicationAttemptId appAttemptId)", "full_signature": "@Override public Map<ContainerId, ContainerReport> getContainers(\n      ApplicationAttemptId appAttemptId)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.getContainers(\n      ApplicationAttemptId appAttemptId)", "testcase": false, "constructor": false}, {"identifier": "convertToApplicationReport", "parameters": "(\n      TimelineEntity entity, ApplicationReportField field)", "modifiers": "private static", "return": "ApplicationReportExt", "signature": "ApplicationReportExt convertToApplicationReport(\n      TimelineEntity entity, ApplicationReportField field)", "full_signature": "private static ApplicationReportExt convertToApplicationReport(\n      TimelineEntity entity, ApplicationReportField field)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.convertToApplicationReport(\n      TimelineEntity entity, ApplicationReportField field)", "testcase": false, "constructor": false}, {"identifier": "convertToApplicationAttemptReport", "parameters": "(\n      TimelineEntity entity)", "modifiers": "private static", "return": "ApplicationAttemptReport", "signature": "ApplicationAttemptReport convertToApplicationAttemptReport(\n      TimelineEntity entity)", "full_signature": "private static ApplicationAttemptReport convertToApplicationAttemptReport(\n      TimelineEntity entity)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.convertToApplicationAttemptReport(\n      TimelineEntity entity)", "testcase": false, "constructor": false}, {"identifier": "convertToContainerReport", "parameters": "(\n      TimelineEntity entity, String serverHttpAddress, String user)", "modifiers": "private static", "return": "ContainerReport", "signature": "ContainerReport convertToContainerReport(\n      TimelineEntity entity, String serverHttpAddress, String user)", "full_signature": "private static ContainerReport convertToContainerReport(\n      TimelineEntity entity, String serverHttpAddress, String user)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.convertToContainerReport(\n      TimelineEntity entity, String serverHttpAddress, String user)", "testcase": false, "constructor": false}, {"identifier": "generateApplicationReport", "parameters": "(TimelineEntity entity,\n      ApplicationReportField field)", "modifiers": "private", "return": "ApplicationReportExt", "signature": "ApplicationReportExt generateApplicationReport(TimelineEntity entity,\n      ApplicationReportField field)", "full_signature": "private ApplicationReportExt generateApplicationReport(TimelineEntity entity,\n      ApplicationReportField field)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.generateApplicationReport(TimelineEntity entity,\n      ApplicationReportField field)", "testcase": false, "constructor": false}, {"identifier": "getApplication", "parameters": "(ApplicationId appId,\n      ApplicationReportField field)", "modifiers": "private", "return": "ApplicationReportExt", "signature": "ApplicationReportExt getApplication(ApplicationId appId,\n      ApplicationReportField field)", "full_signature": "private ApplicationReportExt getApplication(ApplicationId appId,\n      ApplicationReportField field)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.getApplication(ApplicationId appId,\n      ApplicationReportField field)", "testcase": false, "constructor": false}, {"identifier": "checkAccess", "parameters": "(ApplicationReportExt app)", "modifiers": "private", "return": "void", "signature": "void checkAccess(ApplicationReportExt app)", "full_signature": "private void checkAccess(ApplicationReportExt app)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.checkAccess(ApplicationReportExt app)", "testcase": false, "constructor": false}], "file": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java"}, "focal_method": {"identifier": "getApplicationAttempt", "parameters": "(\n      ApplicationAttemptId appAttemptId)", "modifiers": "@Override public", "return": "ApplicationAttemptReport", "body": "@Override\n  public ApplicationAttemptReport getApplicationAttempt(\n      ApplicationAttemptId appAttemptId) throws YarnException, IOException {\n    return getApplicationAttempt(appAttemptId, true);\n  }", "signature": "ApplicationAttemptReport getApplicationAttempt(\n      ApplicationAttemptId appAttemptId)", "full_signature": "@Override public ApplicationAttemptReport getApplicationAttempt(\n      ApplicationAttemptId appAttemptId)", "class_method_signature": "ApplicationHistoryManagerOnTimelineStore.getApplicationAttempt(\n      ApplicationAttemptId appAttemptId)", "testcase": false, "constructor": false, "invocations": ["getApplicationAttempt"]}, "repository": {"repo_id": 195808004, "url": "https://github.com/mouzwang/hadoop-2.7.2", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 24927, "license": "licensed"}}