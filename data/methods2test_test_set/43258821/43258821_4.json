{"test_class": {"identifier": "ByteBufferSeekableByteChannelTest", "superclass": "", "interfaces": "", "fields": [], "file": "common/src/test/java/io/blobkeeper/common/util/ByteBufferSeekableByteChannelTest.java"}, "test_case": {"identifier": "size", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void size() throws IOException {\n        SeekableByteChannel channel = new ByteBufferSeekableByteChannel(ByteBuffer.wrap(new byte[]{0x1, 0x2, 0x3, 0x4}));\n        assertEquals(channel.size(), 4);\n        channel.close();\n    }", "signature": "void size()", "full_signature": "@Test public void size()", "class_method_signature": "ByteBufferSeekableByteChannelTest.size()", "testcase": true, "constructor": false, "invocations": ["wrap", "assertEquals", "size", "close"]}, "focal_class": {"identifier": "ByteBufferSeekableByteChannel", "superclass": "", "interfaces": "implements SeekableByteChannel", "fields": [{"original_string": "private ByteBuffer buffer;", "modifier": "private", "type": "ByteBuffer", "declarator": "buffer", "var_name": "buffer"}, {"original_string": "private boolean open;", "modifier": "private", "type": "boolean", "declarator": "open", "var_name": "open"}, {"original_string": "private int size;", "modifier": "private", "type": "int", "declarator": "size", "var_name": "size"}], "methods": [{"identifier": "ByteBufferSeekableByteChannel", "parameters": "(ByteBuffer buffer)", "modifiers": "public", "return": "", "signature": " ByteBufferSeekableByteChannel(ByteBuffer buffer)", "full_signature": "public  ByteBufferSeekableByteChannel(ByteBuffer buffer)", "class_method_signature": "ByteBufferSeekableByteChannel.ByteBufferSeekableByteChannel(ByteBuffer buffer)", "testcase": false, "constructor": true}, {"identifier": "isOpen", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isOpen()", "full_signature": "public boolean isOpen()", "class_method_signature": "ByteBufferSeekableByteChannel.isOpen()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "ByteBufferSeekableByteChannel.close()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(ByteBuffer dst)", "modifiers": "public", "return": "int", "signature": "int read(ByteBuffer dst)", "full_signature": "public int read(ByteBuffer dst)", "class_method_signature": "ByteBufferSeekableByteChannel.read(ByteBuffer dst)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(ByteBuffer src)", "modifiers": "public", "return": "int", "signature": "int write(ByteBuffer src)", "full_signature": "public int write(ByteBuffer src)", "class_method_signature": "ByteBufferSeekableByteChannel.write(ByteBuffer src)", "testcase": false, "constructor": false}, {"identifier": "position", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long position()", "full_signature": "public long position()", "class_method_signature": "ByteBufferSeekableByteChannel.position()", "testcase": false, "constructor": false}, {"identifier": "position", "parameters": "(long newPosition)", "modifiers": "public", "return": "SeekableByteChannel", "signature": "SeekableByteChannel position(long newPosition)", "full_signature": "public SeekableByteChannel position(long newPosition)", "class_method_signature": "ByteBufferSeekableByteChannel.position(long newPosition)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long size()", "full_signature": "public long size()", "class_method_signature": "ByteBufferSeekableByteChannel.size()", "testcase": false, "constructor": false}, {"identifier": "truncate", "parameters": "(long size)", "modifiers": "public", "return": "SeekableByteChannel", "signature": "SeekableByteChannel truncate(long size)", "full_signature": "public SeekableByteChannel truncate(long size)", "class_method_signature": "ByteBufferSeekableByteChannel.truncate(long size)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(ByteBuffer buffer, int count)", "modifiers": "private", "return": "ByteBuffer", "signature": "ByteBuffer read(ByteBuffer buffer, int count)", "full_signature": "private ByteBuffer read(ByteBuffer buffer, int count)", "class_method_signature": "ByteBufferSeekableByteChannel.read(ByteBuffer buffer, int count)", "testcase": false, "constructor": false}], "file": "common/src/main/java/io/blobkeeper/common/util/ByteBufferSeekableByteChannel.java"}, "focal_method": {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "long", "body": "public long size() throws IOException {\n        return size;\n    }", "signature": "long size()", "full_signature": "public long size()", "class_method_signature": "ByteBufferSeekableByteChannel.size()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 43258821, "url": "https://github.com/sherman/blobkeeper", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 20, "size": 417, "license": "licensed"}}