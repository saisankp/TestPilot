{"test_class": {"identifier": "NewRelicScannerTest", "superclass": "", "interfaces": "", "fields": [], "file": "mercator-newrelic/src/test/java/org/lendingclub/mercator/newrelic/NewRelicScannerTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test @Ignore public", "return": "void", "body": "@Test\n\t@Ignore\n\tpublic void test() {\n\t\t\n\t\tString accountId = \"290\";\n\t\tString token = \"1234\";\n\t\t\n\t\tNewRelicScanner scanner = new Projector.Builder().build().createBuilder(NewRelicScannerBuilder.class).withAccountId(accountId).withToken(token).build();\n\t\tscanner.scan();\t\n\t}", "signature": "void test()", "full_signature": "@Test @Ignore public void test()", "class_method_signature": "NewRelicScannerTest.test()", "testcase": true, "constructor": false, "invocations": ["build", "withToken", "withAccountId", "createBuilder", "build", "scan"]}, "focal_class": {"identifier": "NewRelicScanner", "superclass": "extends AbstractScanner", "interfaces": "", "fields": [{"original_string": "private Logger logger = LoggerFactory.getLogger(this.getClass());", "modifier": "private", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(this.getClass())", "var_name": "logger"}, {"original_string": "private Supplier<NewRelicClient> clientSupplier = Suppliers.memoize(new NewRelicClientSupplier());", "modifier": "private", "type": "Supplier<NewRelicClient>", "declarator": "clientSupplier = Suppliers.memoize(new NewRelicClientSupplier())", "var_name": "clientSupplier"}], "methods": [{"identifier": "NewRelicScanner", "parameters": "(ScannerBuilder<? extends Scanner> builder)", "modifiers": "public", "return": "", "signature": " NewRelicScanner(ScannerBuilder<? extends Scanner> builder)", "full_signature": "public  NewRelicScanner(ScannerBuilder<? extends Scanner> builder)", "class_method_signature": "NewRelicScanner.NewRelicScanner(ScannerBuilder<? extends Scanner> builder)", "testcase": false, "constructor": true}, {"identifier": "scan", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void scan()", "full_signature": "@Override public void scan()", "class_method_signature": "NewRelicScanner.scan()", "testcase": false, "constructor": false}, {"identifier": "getNewRelicClient", "parameters": "()", "modifiers": "public", "return": "NewRelicClient", "signature": "NewRelicClient getNewRelicClient()", "full_signature": "public NewRelicClient getNewRelicClient()", "class_method_signature": "NewRelicScanner.getNewRelicClient()", "testcase": false, "constructor": false}, {"identifier": "scanApms", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void scanApms()", "full_signature": "private void scanApms()", "class_method_signature": "NewRelicScanner.scanApms()", "testcase": false, "constructor": false}, {"identifier": "scanServers", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void scanServers()", "full_signature": "private void scanServers()", "class_method_signature": "NewRelicScanner.scanServers()", "testcase": false, "constructor": false}, {"identifier": "scanAlertPolicies", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void scanAlertPolicies()", "full_signature": "private void scanAlertPolicies()", "class_method_signature": "NewRelicScanner.scanAlertPolicies()", "testcase": false, "constructor": false}, {"identifier": "scanAlertConditions", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void scanAlertConditions()", "full_signature": "private void scanAlertConditions()", "class_method_signature": "NewRelicScanner.scanAlertConditions()", "testcase": false, "constructor": false}, {"identifier": "purgeOldData", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void purgeOldData()", "full_signature": "private void purgeOldData()", "class_method_signature": "NewRelicScanner.purgeOldData()", "testcase": false, "constructor": false}], "file": "mercator-newrelic/src/main/java/org/lendingclub/mercator/newrelic/NewRelicScanner.java"}, "focal_method": {"identifier": "scan", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void scan() {\n\t\t\n\t\tscanApms();\n\t\tscanServers();\n\t\tscanAlertPolicies();\n\t\tscanAlertConditions();\n\t\tpurgeOldData();\n\n\t}", "signature": "void scan()", "full_signature": "@Override public void scan()", "class_method_signature": "NewRelicScanner.scan()", "testcase": false, "constructor": false, "invocations": ["scanApms", "scanServers", "scanAlertPolicies", "scanAlertConditions", "purgeOldData"]}, "repository": {"repo_id": 80497637, "url": "https://github.com/LendingClub/mercator", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 64, "size": 646, "license": "licensed"}}