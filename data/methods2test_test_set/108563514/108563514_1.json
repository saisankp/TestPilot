{"test_class": {"identifier": "ServerDataSourceTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/com/mccorby/federatedlearning/datasource/network/ServerDataSourceTest.java"}, "test_case": {"identifier": "testSendGradient", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSendGradient() {\n        // Given\n        byte[] gradient = new byte[]{};\n        NetworkModel networkModel = mock(NetworkModel.class);\n        NetworkMapper mapper = mock(NetworkMapper.class);\n        given(mapper.toNetworkModel(gradient)).willReturn(networkModel);\n\n        given(networkModel.getGradient()).willReturn(gradient);\n\n        ServerService networkService = mock(ServerService.class);\n\n        // When\n        ServerDataSource dataSource = new ServerDataSource(networkService, mapper);\n        dataSource.sendGradient(gradient);\n\n        // Then\n        verify(mapper).toNetworkModel(gradient);\n        verify(networkService).uploadGradient(any(RequestBody.class));\n    }", "signature": "void testSendGradient()", "full_signature": "@Test public void testSendGradient()", "class_method_signature": "ServerDataSourceTest.testSendGradient()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "willReturn", "given", "toNetworkModel", "willReturn", "given", "getGradient", "mock", "sendGradient", "toNetworkModel", "verify", "uploadGradient", "verify", "any"]}, "focal_class": {"identifier": "ServerDataSource", "superclass": "", "interfaces": "implements FederatedNetworkDataSource", "fields": [{"original_string": "private ServerService networkService;", "modifier": "private", "type": "ServerService", "declarator": "networkService", "var_name": "networkService"}, {"original_string": "private NetworkMapper mapper;", "modifier": "private", "type": "NetworkMapper", "declarator": "mapper", "var_name": "mapper"}], "methods": [{"identifier": "ServerDataSource", "parameters": "(ServerService networkService, NetworkMapper mapper)", "modifiers": "public", "return": "", "signature": " ServerDataSource(ServerService networkService, NetworkMapper mapper)", "full_signature": "public  ServerDataSource(ServerService networkService, NetworkMapper mapper)", "class_method_signature": "ServerDataSource.ServerDataSource(ServerService networkService, NetworkMapper mapper)", "testcase": false, "constructor": true}, {"identifier": "sendGradient", "parameters": "(byte[] gradient)", "modifiers": "@Override public", "return": "Observable<Boolean>", "signature": "Observable<Boolean> sendGradient(byte[] gradient)", "full_signature": "@Override public Observable<Boolean> sendGradient(byte[] gradient)", "class_method_signature": "ServerDataSource.sendGradient(byte[] gradient)", "testcase": false, "constructor": false}, {"identifier": "retrieveGradient", "parameters": "()", "modifiers": "@Override public", "return": "Observable<byte[]>", "signature": "Observable<byte[]> retrieveGradient()", "full_signature": "@Override public Observable<byte[]> retrieveGradient()", "class_method_signature": "ServerDataSource.retrieveGradient()", "testcase": false, "constructor": false}, {"identifier": "registerModel", "parameters": "()", "modifiers": "@Override public", "return": "Observable<Integer>", "signature": "Observable<Integer> registerModel()", "full_signature": "@Override public Observable<Integer> registerModel()", "class_method_signature": "ServerDataSource.registerModel()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/mccorby/federatedlearning/datasource/network/ServerDataSource.java"}, "focal_method": {"identifier": "sendGradient", "parameters": "(byte[] gradient)", "modifiers": "@Override public", "return": "Observable<Boolean>", "body": "@Override\n    public Observable<Boolean> sendGradient(byte[] gradient) {\n        NetworkModel networkModel = mapper.toNetworkModel(gradient);\n        RequestBody requestBody = RequestBody\n                .create(MediaType.parse(\"application/octet-stream\"), networkModel.getGradient());\n        return networkService.uploadGradient(requestBody);\n    }", "signature": "Observable<Boolean> sendGradient(byte[] gradient)", "full_signature": "@Override public Observable<Boolean> sendGradient(byte[] gradient)", "class_method_signature": "ServerDataSource.sendGradient(byte[] gradient)", "testcase": false, "constructor": false, "invocations": ["toNetworkModel", "create", "parse", "getGradient", "uploadGradient"]}, "repository": {"repo_id": 108563514, "url": "https://github.com/mccorby/FederatedAndroidTrainer", "language": "Java", "is_fork": false, "fork_count": 24, "stargazer_count": 121, "size": 292, "license": "licensed"}}