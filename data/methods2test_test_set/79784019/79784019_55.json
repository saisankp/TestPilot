{"test_class": {"identifier": "FieldScannerTest", "superclass": "", "interfaces": "", "fields": [], "file": "stardao-core/src/test/java/io/stardog/stardao/core/field/FieldScannerTest.java"}, "test_case": {"identifier": "testScanAnnotations", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testScanAnnotations() throws Exception {\n        FieldScanner scanner = new FieldScanner();\n        FieldData data = scanner.scanAnnotations(TestModel.class);\n\n        assertEquals(\"id\", data.getId().getName());\n        assertEquals(\"updateId\", data.getUpdatedBy().getName());\n        assertEquals(\"updateAt\", data.getUpdatedAt().getName());\n        assertEquals(\"createId\", data.getCreatedBy().getName());\n        assertEquals(\"createAt\", data.getCreatedAt().getName());\n    }", "signature": "void testScanAnnotations()", "full_signature": "@Test public void testScanAnnotations()", "class_method_signature": "FieldScannerTest.testScanAnnotations()", "testcase": true, "constructor": false, "invocations": ["scanAnnotations", "assertEquals", "getName", "getId", "assertEquals", "getName", "getUpdatedBy", "assertEquals", "getName", "getUpdatedAt", "assertEquals", "getName", "getCreatedBy", "assertEquals", "getName", "getCreatedAt"]}, "focal_class": {"identifier": "FieldScanner", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "scanAnnotations", "parameters": "(Class modelClass)", "modifiers": "public", "return": "FieldData", "signature": "FieldData scanAnnotations(Class modelClass)", "full_signature": "public FieldData scanAnnotations(Class modelClass)", "class_method_signature": "FieldScanner.scanAnnotations(Class modelClass)", "testcase": false, "constructor": false}, {"identifier": "addToMap", "parameters": "(FieldData.Builder builder, ImmutableMap.Builder<String,Field> fieldMap,\n                            Map<Class,Field> found, String fieldName, AccessibleObject method, boolean isOptional)", "modifiers": "protected", "return": "void", "signature": "void addToMap(FieldData.Builder builder, ImmutableMap.Builder<String,Field> fieldMap,\n                            Map<Class,Field> found, String fieldName, AccessibleObject method, boolean isOptional)", "full_signature": "protected void addToMap(FieldData.Builder builder, ImmutableMap.Builder<String,Field> fieldMap,\n                            Map<Class,Field> found, String fieldName, AccessibleObject method, boolean isOptional)", "class_method_signature": "FieldScanner.addToMap(FieldData.Builder builder, ImmutableMap.Builder<String,Field> fieldMap,\n                            Map<Class,Field> found, String fieldName, AccessibleObject method, boolean isOptional)", "testcase": false, "constructor": false}, {"identifier": "toFieldName", "parameters": "(Method method)", "modifiers": "protected", "return": "String", "signature": "String toFieldName(Method method)", "full_signature": "protected String toFieldName(Method method)", "class_method_signature": "FieldScanner.toFieldName(Method method)", "testcase": false, "constructor": false}, {"identifier": "isFieldOptional", "parameters": "(java.lang.reflect.Field field)", "modifiers": "protected", "return": "boolean", "signature": "boolean isFieldOptional(java.lang.reflect.Field field)", "full_signature": "protected boolean isFieldOptional(java.lang.reflect.Field field)", "class_method_signature": "FieldScanner.isFieldOptional(java.lang.reflect.Field field)", "testcase": false, "constructor": false}, {"identifier": "isMethodFieldOptional", "parameters": "(Method method)", "modifiers": "protected", "return": "boolean", "signature": "boolean isMethodFieldOptional(Method method)", "full_signature": "protected boolean isMethodFieldOptional(Method method)", "class_method_signature": "FieldScanner.isMethodFieldOptional(Method method)", "testcase": false, "constructor": false}], "file": "stardao-core/src/main/java/io/stardog/stardao/core/field/FieldScanner.java"}, "focal_method": {"identifier": "scanAnnotations", "parameters": "(Class modelClass)", "modifiers": "public", "return": "FieldData", "body": "public FieldData scanAnnotations(Class modelClass) {\n        FieldData.Builder builder = FieldData.builder();\n        ImmutableMap.Builder<String,Field> fieldMap = ImmutableMap.builder();\n\n        Map<Class,Field> found = new HashMap<>();\n        Set<String> scannedFields = new HashSet<>();\n\n        for (java.lang.reflect.Field field : modelClass.getDeclaredFields()) {\n            String fieldName = field.getName();\n            addToMap(builder, fieldMap, found, fieldName, field, isFieldOptional(field));\n            scannedFields.add(fieldName);\n        }\n        for (Method method : modelClass.getDeclaredMethods()) {\n            String fieldName = toFieldName(method);\n            if (fieldName != null && !scannedFields.contains(fieldName)) {\n                addToMap(builder, fieldMap, found, fieldName, method, isMethodFieldOptional(method));\n            }\n        }\n        builder.map(fieldMap.build());\n        return builder.build();\n    }", "signature": "FieldData scanAnnotations(Class modelClass)", "full_signature": "public FieldData scanAnnotations(Class modelClass)", "class_method_signature": "FieldScanner.scanAnnotations(Class modelClass)", "testcase": false, "constructor": false, "invocations": ["builder", "builder", "getDeclaredFields", "getName", "addToMap", "isFieldOptional", "add", "getDeclaredMethods", "toFieldName", "contains", "addToMap", "isMethodFieldOptional", "map", "build", "build"]}, "repository": {"repo_id": 79784019, "url": "https://github.com/stardogventures/stardao", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 8, "size": 219, "license": "licensed"}}