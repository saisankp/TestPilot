{"test_class": {"identifier": "AbstractObjectConverterTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private final AbstractObjectConverter<Object[]> underTest = new AbstractObjectConverter<Object[]>() {\n        @Override\n        public Object[] convert(Object[] data, boolean isVarargs, Class<?>[] parameterTypes) {\n            return null;\n        }\n    };", "modifier": "@InjectMocks\n    private final", "type": "AbstractObjectConverter<Object[]>", "declarator": "underTest = new AbstractObjectConverter<Object[]>() {\n        @Override\n        public Object[] convert(Object[] data, boolean isVarargs, Class<?>[] parameterTypes) {\n            return null;\n        }\n    }", "var_name": "underTest"}], "file": "junit4/src/test/java/com/tngtech/java/junit/dataprovider/internal/convert/AbstractObjectConverterTest.java"}, "test_case": {"identifier": "testCheckIfArgumentsMatchParameterTypesShouldNotThrowExceptionIfSingleArgumentTypeEqualsParameterType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCheckIfArgumentsMatchParameterTypesShouldNotThrowExceptionIfSingleArgumentTypeEqualsParameterType() {\n        // Given:\n        Object[] arguments = new Object[] { 'a' };\n        Class<?>[] parameterTypes = new Class<?>[] { Character.class };\n\n        // When:\n        underTest.checkIfArgumentsMatchParameterTypes(arguments, parameterTypes);\n\n        // Then: no exception\n    }", "signature": "void testCheckIfArgumentsMatchParameterTypesShouldNotThrowExceptionIfSingleArgumentTypeEqualsParameterType()", "full_signature": "@Test public void testCheckIfArgumentsMatchParameterTypesShouldNotThrowExceptionIfSingleArgumentTypeEqualsParameterType()", "class_method_signature": "AbstractObjectConverterTest.testCheckIfArgumentsMatchParameterTypesShouldNotThrowExceptionIfSingleArgumentTypeEqualsParameterType()", "testcase": true, "constructor": false, "invocations": ["checkIfArgumentsMatchParameterTypes"]}, "focal_class": {"identifier": "AbstractObjectConverter", "superclass": "extends com.tngtech.junit.dataprovider.convert.AbstractObjectConverter<V>", "interfaces": "", "fields": [], "methods": [{"identifier": "convert", "parameters": "(V data, boolean isVarargs, Class<?>[] parameterTypes)", "modifiers": "@Override public abstract", "return": "Object[]", "signature": "Object[] convert(V data, boolean isVarargs, Class<?>[] parameterTypes)", "full_signature": "@Override public abstract Object[] convert(V data, boolean isVarargs, Class<?>[] parameterTypes)", "class_method_signature": "AbstractObjectConverter.convert(V data, boolean isVarargs, Class<?>[] parameterTypes)", "testcase": false, "constructor": false}, {"identifier": "checkIfArgumentsMatchParameterTypes", "parameters": "(Object[] arguments, Class<?>[] parameterTypes)", "modifiers": "@Override protected", "return": "void", "signature": "void checkIfArgumentsMatchParameterTypes(Object[] arguments, Class<?>[] parameterTypes)", "full_signature": "@Override protected void checkIfArgumentsMatchParameterTypes(Object[] arguments, Class<?>[] parameterTypes)", "class_method_signature": "AbstractObjectConverter.checkIfArgumentsMatchParameterTypes(Object[] arguments, Class<?>[] parameterTypes)", "testcase": false, "constructor": false}], "file": "junit4/src/main/java/com/tngtech/java/junit/dataprovider/internal/convert/AbstractObjectConverter.java"}, "focal_method": {"identifier": "checkIfArgumentsMatchParameterTypes", "parameters": "(Object[] arguments, Class<?>[] parameterTypes)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void checkIfArgumentsMatchParameterTypes(Object[] arguments, Class<?>[] parameterTypes) {\n        checkNotNull(arguments, \"'arguments' must not be null\");\n        checkNotNull(parameterTypes, \"'testMethod' must not be null\");\n        checkArgument(parameterTypes.length == arguments.length, \"Expected %d arguments for test method but got %d.\",\n                parameterTypes.length, arguments.length);\n\n        super.checkIfArgumentsMatchParameterTypes(arguments, parameterTypes);\n    }", "signature": "void checkIfArgumentsMatchParameterTypes(Object[] arguments, Class<?>[] parameterTypes)", "full_signature": "@Override protected void checkIfArgumentsMatchParameterTypes(Object[] arguments, Class<?>[] parameterTypes)", "class_method_signature": "AbstractObjectConverter.checkIfArgumentsMatchParameterTypes(Object[] arguments, Class<?>[] parameterTypes)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "checkNotNull", "checkArgument", "checkIfArgumentsMatchParameterTypes"]}, "repository": {"repo_id": 8175611, "url": "https://github.com/TNG/junit-dataprovider", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 215, "size": 1383, "license": "licensed"}}