{"test_class": {"identifier": "EnsResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Web3j web3j;", "modifier": "private", "type": "Web3j", "declarator": "web3j", "var_name": "web3j"}, {"original_string": "private Web3jService web3jService;", "modifier": "private", "type": "Web3jService", "declarator": "web3jService", "var_name": "web3jService"}, {"original_string": "private EnsResolver ensResolver;", "modifier": "private", "type": "EnsResolver", "declarator": "ensResolver", "var_name": "ensResolver"}], "file": "core/src/test/java/org/web3j/ens/EnsResolverTest.java"}, "test_case": {"identifier": "testIsSyncedBelowThreshold", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsSyncedBelowThreshold() throws Exception {\n        configureSyncing(false);\n        configureLatestBlock((System.currentTimeMillis() / 1000) - DEFAULT_SYNC_THRESHOLD);\n\n        assertFalse(ensResolver.isSynced());\n    }", "signature": "void testIsSyncedBelowThreshold()", "full_signature": "@Test public void testIsSyncedBelowThreshold()", "class_method_signature": "EnsResolverTest.testIsSyncedBelowThreshold()", "testcase": true, "constructor": false, "invocations": ["configureSyncing", "configureLatestBlock", "currentTimeMillis", "assertFalse", "isSynced"]}, "focal_class": {"identifier": "EnsResolver", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final long DEFAULT_SYNC_THRESHOLD = 1000 * 60 * 3;", "modifier": "static final", "type": "long", "declarator": "DEFAULT_SYNC_THRESHOLD = 1000 * 60 * 3", "var_name": "DEFAULT_SYNC_THRESHOLD"}, {"original_string": "static final String REVERSE_NAME_SUFFIX = \".addr.reverse\";", "modifier": "static final", "type": "String", "declarator": "REVERSE_NAME_SUFFIX = \".addr.reverse\"", "var_name": "REVERSE_NAME_SUFFIX"}, {"original_string": "private final Web3j web3j;", "modifier": "private final", "type": "Web3j", "declarator": "web3j", "var_name": "web3j"}, {"original_string": "private final TransactionManager transactionManager;", "modifier": "private final", "type": "TransactionManager", "declarator": "transactionManager", "var_name": "transactionManager"}, {"original_string": "private long syncThreshold;", "modifier": "private", "type": "long", "declarator": "syncThreshold", "var_name": "syncThreshold"}], "methods": [{"identifier": "EnsResolver", "parameters": "(Web3j web3j, long syncThreshold)", "modifiers": "public", "return": "", "signature": " EnsResolver(Web3j web3j, long syncThreshold)", "full_signature": "public  EnsResolver(Web3j web3j, long syncThreshold)", "class_method_signature": "EnsResolver.EnsResolver(Web3j web3j, long syncThreshold)", "testcase": false, "constructor": true}, {"identifier": "EnsResolver", "parameters": "(Web3j web3j)", "modifiers": "public", "return": "", "signature": " EnsResolver(Web3j web3j)", "full_signature": "public  EnsResolver(Web3j web3j)", "class_method_signature": "EnsResolver.EnsResolver(Web3j web3j)", "testcase": false, "constructor": true}, {"identifier": "setSyncThreshold", "parameters": "(long syncThreshold)", "modifiers": "public", "return": "void", "signature": "void setSyncThreshold(long syncThreshold)", "full_signature": "public void setSyncThreshold(long syncThreshold)", "class_method_signature": "EnsResolver.setSyncThreshold(long syncThreshold)", "testcase": false, "constructor": false}, {"identifier": "getSyncThreshold", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getSyncThreshold()", "full_signature": "public long getSyncThreshold()", "class_method_signature": "EnsResolver.getSyncThreshold()", "testcase": false, "constructor": false}, {"identifier": "obtainPublicResolver", "parameters": "(String ensName)", "modifiers": "public", "return": "PublicResolver", "signature": "PublicResolver obtainPublicResolver(String ensName)", "full_signature": "public PublicResolver obtainPublicResolver(String ensName)", "class_method_signature": "EnsResolver.obtainPublicResolver(String ensName)", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(String contractId)", "modifiers": "public", "return": "String", "signature": "String resolve(String contractId)", "full_signature": "public String resolve(String contractId)", "class_method_signature": "EnsResolver.resolve(String contractId)", "testcase": false, "constructor": false}, {"identifier": "reverseResolve", "parameters": "(String address)", "modifiers": "public", "return": "String", "signature": "String reverseResolve(String address)", "full_signature": "public String reverseResolve(String address)", "class_method_signature": "EnsResolver.reverseResolve(String address)", "testcase": false, "constructor": false}, {"identifier": "lookupResolver", "parameters": "(String ensName)", "modifiers": "", "return": "PublicResolver", "signature": "PublicResolver lookupResolver(String ensName)", "full_signature": " PublicResolver lookupResolver(String ensName)", "class_method_signature": "EnsResolver.lookupResolver(String ensName)", "testcase": false, "constructor": false}, {"identifier": "isSynced", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isSynced()", "full_signature": " boolean isSynced()", "class_method_signature": "EnsResolver.isSynced()", "testcase": false, "constructor": false}, {"identifier": "isValidEnsName", "parameters": "(String input)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValidEnsName(String input)", "full_signature": "public static boolean isValidEnsName(String input)", "class_method_signature": "EnsResolver.isValidEnsName(String input)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/web3j/ens/EnsResolver.java"}, "focal_method": {"identifier": "isSynced", "parameters": "()", "modifiers": "", "return": "boolean", "body": "boolean isSynced() throws Exception {\n        EthSyncing ethSyncing = web3j.ethSyncing().send();\n        if (ethSyncing.isSyncing()) {\n            return false;\n        } else {\n            EthBlock ethBlock =\n                    web3j.ethGetBlockByNumber(DefaultBlockParameterName.LATEST, false).send();\n            long timestamp = ethBlock.getBlock().getTimestamp().longValue() * 1000;\n\n            return System.currentTimeMillis() - syncThreshold < timestamp;\n        }\n    }", "signature": "boolean isSynced()", "full_signature": " boolean isSynced()", "class_method_signature": "EnsResolver.isSynced()", "testcase": false, "constructor": false, "invocations": ["send", "ethSyncing", "isSyncing", "send", "ethGetBlockByNumber", "longValue", "getTimestamp", "getBlock", "currentTimeMillis"]}, "repository": {"repo_id": 149736342, "url": "https://github.com/BrahmaOS/brahmaos-web3j", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 1779, "license": "licensed"}}