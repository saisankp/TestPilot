{"test_class": {"identifier": "NotPresentFilterTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/springframework/ldap/filter/NotPresentFilterTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n\t\tString attribute = \"foo\";\n\t\tNotPresentFilter originalObject = new NotPresentFilter(attribute);\n\t\tNotPresentFilter identicalObject = new NotPresentFilter(attribute);\n\t\tNotPresentFilter differentObject = new NotPresentFilter(\"bar\");\n\t\tNotPresentFilter subclassObject = new NotPresentFilter(attribute) {\n        };\n\n        new EqualsTester(originalObject, identicalObject, differentObject,\n                subclassObject);\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "NotPresentFilterTest.testEquals()", "testcase": true, "constructor": false, "invocations": []}, "focal_class": {"identifier": "NotPresentFilter", "superclass": "extends AbstractFilter", "interfaces": "", "fields": [{"original_string": "private String attribute;", "modifier": "private", "type": "String", "declarator": "attribute", "var_name": "attribute"}], "methods": [{"identifier": "NotPresentFilter", "parameters": "(String attribute)", "modifiers": "public", "return": "", "signature": " NotPresentFilter(String attribute)", "full_signature": "public  NotPresentFilter(String attribute)", "class_method_signature": "NotPresentFilter.NotPresentFilter(String attribute)", "testcase": false, "constructor": true}, {"identifier": "encode", "parameters": "(StringBuffer buff)", "modifiers": "public", "return": "StringBuffer", "signature": "StringBuffer encode(StringBuffer buff)", "full_signature": "public StringBuffer encode(StringBuffer buff)", "class_method_signature": "NotPresentFilter.encode(StringBuffer buff)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "NotPresentFilter.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "NotPresentFilter.hashCode()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/filter/NotPresentFilter.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n\n        NotPresentFilter that = (NotPresentFilter) o;\n\n        if (attribute != null ? !attribute.equals(that.attribute) : that.attribute != null) return false;\n\n        return true;\n    }", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "NotPresentFilter.equals(Object o)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "equals"]}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}