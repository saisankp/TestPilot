{"test_class": {"identifier": "AnagramsTest", "superclass": "", "interfaces": "", "fields": [], "file": "anagrams/20141014-david-paul/src/test/java/AnagramsTest.java"}, "test_case": {"identifier": "testFirstTwoLetterOfBenAreSwapped", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFirstTwoLetterOfBenAreSwapped() throws Exception {\n        String input = \"ben\";\n\n        List<String> output = Anagrams.generate(input);\n\n        assertThat(output).contains(\"ebn\");\n    }", "signature": "void testFirstTwoLetterOfBenAreSwapped()", "full_signature": "@Test public void testFirstTwoLetterOfBenAreSwapped()", "class_method_signature": "AnagramsTest.testFirstTwoLetterOfBenAreSwapped()", "testcase": true, "constructor": false, "invocations": ["generate", "contains", "assertThat"]}, "focal_class": {"identifier": "Anagrams", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "total", "parameters": "(String anagram)", "modifiers": "private static", "return": "int", "signature": "int total(String anagram)", "full_signature": "private static int total(String anagram)", "class_method_signature": "Anagrams.total(String anagram)", "testcase": false, "constructor": false}, {"identifier": "generate", "parameters": "(String input)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> generate(String input)", "full_signature": "public static List<String> generate(String input)", "class_method_signature": "Anagrams.generate(String input)", "testcase": false, "constructor": false}], "file": "anagrams/20141014-david-paul/src/main/java/Anagrams.java"}, "focal_method": {"identifier": "generate", "parameters": "(String input)", "modifiers": "public static", "return": "List<String>", "body": "public static List<String> generate(String input) {\n        List<String> anagrams = new ArrayList<String>();\n\n        char[] inputChars = input.toCharArray();\n\n        for (int i = 0; i < total(input); i++) {\n            int movePosition = i < input.length() ? i : 0;\n            char move = inputChars[movePosition];\n            char replace = inputChars[1];\n            inputChars[movePosition] = replace;\n            inputChars[1] = move;\n\n            String output = String.valueOf(inputChars);\n\n            anagrams.add(output);\n        }\n\n        return anagrams;\n    }", "signature": "List<String> generate(String input)", "full_signature": "public static List<String> generate(String input)", "class_method_signature": "Anagrams.generate(String input)", "testcase": false, "constructor": false, "invocations": ["toCharArray", "total", "length", "valueOf", "add"]}, "repository": {"repo_id": 6509909, "url": "https://github.com/novoda/dojos", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 72, "size": 12987, "license": "licensed"}}