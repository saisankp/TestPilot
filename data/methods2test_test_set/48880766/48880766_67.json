{"test_class": {"identifier": "PackedLocalDateTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/tech/tablesaw/columns/dates/PackedLocalDateTest.java"}, "test_case": {"identifier": "testMinusDays", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testMinusDays() {\n    LocalDate day = LocalDate.of(2011, 1, 3);\n    int packed = pack(day);\n    int day2 = minusDays(4, packed);\n    assertEquals(12, getMonthValue(day2));\n    assertEquals(2010, getYear(day2));\n    assertEquals(30, getDayOfMonth(day2));\n  }", "signature": "void testMinusDays()", "full_signature": "@Test public void testMinusDays()", "class_method_signature": "PackedLocalDateTest.testMinusDays()", "testcase": true, "constructor": false, "invocations": ["of", "pack", "minusDays", "assertEquals", "getMonthValue", "assertEquals", "getYear", "assertEquals", "getDayOfMonth"]}, "focal_class": {"identifier": "PackedLocalDate", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int DAYS_PER_CYCLE = 146097;", "modifier": "private static final", "type": "int", "declarator": "DAYS_PER_CYCLE = 146097", "var_name": "DAYS_PER_CYCLE"}, {"original_string": "private static final long DAYS_0000_TO_1970 = (DAYS_PER_CYCLE * 5L) - (30L * 365L + 7L);", "modifier": "private static final", "type": "long", "declarator": "DAYS_0000_TO_1970 = (DAYS_PER_CYCLE * 5L) - (30L * 365L + 7L)", "var_name": "DAYS_0000_TO_1970"}], "methods": [{"identifier": "getDayOfMonth", "parameters": "(int date)", "modifiers": "public static", "return": "byte", "signature": "byte getDayOfMonth(int date)", "full_signature": "public static byte getDayOfMonth(int date)", "class_method_signature": "PackedLocalDate.getDayOfMonth(int date)", "testcase": false, "constructor": false}, {"identifier": "getYear", "parameters": "(int date)", "modifiers": "public static", "return": "short", "signature": "short getYear(int date)", "full_signature": "public static short getYear(int date)", "class_method_signature": "PackedLocalDate.getYear(int date)", "testcase": false, "constructor": false}, {"identifier": "asLocalDate", "parameters": "(int date)", "modifiers": "public static", "return": "LocalDate", "signature": "LocalDate asLocalDate(int date)", "full_signature": "public static LocalDate asLocalDate(int date)", "class_method_signature": "PackedLocalDate.asLocalDate(int date)", "testcase": false, "constructor": false}, {"identifier": "getMonthValue", "parameters": "(int date)", "modifiers": "public static", "return": "byte", "signature": "byte getMonthValue(int date)", "full_signature": "public static byte getMonthValue(int date)", "class_method_signature": "PackedLocalDate.getMonthValue(int date)", "testcase": false, "constructor": false}, {"identifier": "pack", "parameters": "(LocalDate date)", "modifiers": "public static", "return": "int", "signature": "int pack(LocalDate date)", "full_signature": "public static int pack(LocalDate date)", "class_method_signature": "PackedLocalDate.pack(LocalDate date)", "testcase": false, "constructor": false}, {"identifier": "pack", "parameters": "(short yr, byte m, byte d)", "modifiers": "public static", "return": "int", "signature": "int pack(short yr, byte m, byte d)", "full_signature": "public static int pack(short yr, byte m, byte d)", "class_method_signature": "PackedLocalDate.pack(short yr, byte m, byte d)", "testcase": false, "constructor": false}, {"identifier": "pack", "parameters": "(int yr, int m, int d)", "modifiers": "public static", "return": "int", "signature": "int pack(int yr, int m, int d)", "full_signature": "public static int pack(int yr, int m, int d)", "class_method_signature": "PackedLocalDate.pack(int yr, int m, int d)", "testcase": false, "constructor": false}, {"identifier": "toDateString", "parameters": "(int date)", "modifiers": "public static", "return": "String", "signature": "String toDateString(int date)", "full_signature": "public static String toDateString(int date)", "class_method_signature": "PackedLocalDate.toDateString(int date)", "testcase": false, "constructor": false}, {"identifier": "getDayOfYear", "parameters": "(int packedDate)", "modifiers": "public static", "return": "int", "signature": "int getDayOfYear(int packedDate)", "full_signature": "public static int getDayOfYear(int packedDate)", "class_method_signature": "PackedLocalDate.getDayOfYear(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isLeapYear", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isLeapYear(int packedDate)", "full_signature": "public static boolean isLeapYear(int packedDate)", "class_method_signature": "PackedLocalDate.isLeapYear(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "getMonth", "parameters": "(int packedDate)", "modifiers": "public static", "return": "Month", "signature": "Month getMonth(int packedDate)", "full_signature": "public static Month getMonth(int packedDate)", "class_method_signature": "PackedLocalDate.getMonth(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "lengthOfMonth", "parameters": "(int packedDate)", "modifiers": "public static", "return": "int", "signature": "int lengthOfMonth(int packedDate)", "full_signature": "public static int lengthOfMonth(int packedDate)", "class_method_signature": "PackedLocalDate.lengthOfMonth(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "toEpochDay", "parameters": "(int packedDate)", "modifiers": "public static", "return": "long", "signature": "long toEpochDay(int packedDate)", "full_signature": "public static long toEpochDay(int packedDate)", "class_method_signature": "PackedLocalDate.toEpochDay(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "getDayOfWeek", "parameters": "(int packedDate)", "modifiers": "public static", "return": "DayOfWeek", "signature": "DayOfWeek getDayOfWeek(int packedDate)", "full_signature": "public static DayOfWeek getDayOfWeek(int packedDate)", "class_method_signature": "PackedLocalDate.getDayOfWeek(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "getQuarter", "parameters": "(int packedDate)", "modifiers": "public static", "return": "int", "signature": "int getQuarter(int packedDate)", "full_signature": "public static int getQuarter(int packedDate)", "class_method_signature": "PackedLocalDate.getQuarter(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInQ1", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInQ1(int packedDate)", "full_signature": "public static boolean isInQ1(int packedDate)", "class_method_signature": "PackedLocalDate.isInQ1(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInQ2", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInQ2(int packedDate)", "full_signature": "public static boolean isInQ2(int packedDate)", "class_method_signature": "PackedLocalDate.isInQ2(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInQ3", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInQ3(int packedDate)", "full_signature": "public static boolean isInQ3(int packedDate)", "class_method_signature": "PackedLocalDate.isInQ3(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInQ4", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInQ4(int packedDate)", "full_signature": "public static boolean isInQ4(int packedDate)", "class_method_signature": "PackedLocalDate.isInQ4(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isAfter", "parameters": "(int packedDate, int value)", "modifiers": "public static", "return": "boolean", "signature": "boolean isAfter(int packedDate, int value)", "full_signature": "public static boolean isAfter(int packedDate, int value)", "class_method_signature": "PackedLocalDate.isAfter(int packedDate, int value)", "testcase": false, "constructor": false}, {"identifier": "isEqualTo", "parameters": "(int packedDate, int value)", "modifiers": "public static", "return": "boolean", "signature": "boolean isEqualTo(int packedDate, int value)", "full_signature": "public static boolean isEqualTo(int packedDate, int value)", "class_method_signature": "PackedLocalDate.isEqualTo(int packedDate, int value)", "testcase": false, "constructor": false}, {"identifier": "isBefore", "parameters": "(int packedDate, int value)", "modifiers": "public static", "return": "boolean", "signature": "boolean isBefore(int packedDate, int value)", "full_signature": "public static boolean isBefore(int packedDate, int value)", "class_method_signature": "PackedLocalDate.isBefore(int packedDate, int value)", "testcase": false, "constructor": false}, {"identifier": "isOnOrBefore", "parameters": "(int packedDate, int value)", "modifiers": "public static", "return": "boolean", "signature": "boolean isOnOrBefore(int packedDate, int value)", "full_signature": "public static boolean isOnOrBefore(int packedDate, int value)", "class_method_signature": "PackedLocalDate.isOnOrBefore(int packedDate, int value)", "testcase": false, "constructor": false}, {"identifier": "isOnOrAfter", "parameters": "(int packedDate, int value)", "modifiers": "public static", "return": "boolean", "signature": "boolean isOnOrAfter(int packedDate, int value)", "full_signature": "public static boolean isOnOrAfter(int packedDate, int value)", "class_method_signature": "PackedLocalDate.isOnOrAfter(int packedDate, int value)", "testcase": false, "constructor": false}, {"identifier": "isDayOfWeek", "parameters": "(int packedDate, DayOfWeek dayOfWeek)", "modifiers": "public static", "return": "boolean", "signature": "boolean isDayOfWeek(int packedDate, DayOfWeek dayOfWeek)", "full_signature": "public static boolean isDayOfWeek(int packedDate, DayOfWeek dayOfWeek)", "class_method_signature": "PackedLocalDate.isDayOfWeek(int packedDate, DayOfWeek dayOfWeek)", "testcase": false, "constructor": false}, {"identifier": "isSunday", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSunday(int packedDate)", "full_signature": "public static boolean isSunday(int packedDate)", "class_method_signature": "PackedLocalDate.isSunday(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isMonday", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isMonday(int packedDate)", "full_signature": "public static boolean isMonday(int packedDate)", "class_method_signature": "PackedLocalDate.isMonday(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isTuesday", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isTuesday(int packedDate)", "full_signature": "public static boolean isTuesday(int packedDate)", "class_method_signature": "PackedLocalDate.isTuesday(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isWednesday", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isWednesday(int packedDate)", "full_signature": "public static boolean isWednesday(int packedDate)", "class_method_signature": "PackedLocalDate.isWednesday(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isThursday", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isThursday(int packedDate)", "full_signature": "public static boolean isThursday(int packedDate)", "class_method_signature": "PackedLocalDate.isThursday(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isFriday", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isFriday(int packedDate)", "full_signature": "public static boolean isFriday(int packedDate)", "class_method_signature": "PackedLocalDate.isFriday(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isSaturday", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isSaturday(int packedDate)", "full_signature": "public static boolean isSaturday(int packedDate)", "class_method_signature": "PackedLocalDate.isSaturday(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isFirstDayOfMonth", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isFirstDayOfMonth(int packedDate)", "full_signature": "public static boolean isFirstDayOfMonth(int packedDate)", "class_method_signature": "PackedLocalDate.isFirstDayOfMonth(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInJanuary", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInJanuary(int packedDate)", "full_signature": "public static boolean isInJanuary(int packedDate)", "class_method_signature": "PackedLocalDate.isInJanuary(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInFebruary", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInFebruary(int packedDate)", "full_signature": "public static boolean isInFebruary(int packedDate)", "class_method_signature": "PackedLocalDate.isInFebruary(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInMarch", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInMarch(int packedDate)", "full_signature": "public static boolean isInMarch(int packedDate)", "class_method_signature": "PackedLocalDate.isInMarch(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInApril", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInApril(int packedDate)", "full_signature": "public static boolean isInApril(int packedDate)", "class_method_signature": "PackedLocalDate.isInApril(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInMay", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInMay(int packedDate)", "full_signature": "public static boolean isInMay(int packedDate)", "class_method_signature": "PackedLocalDate.isInMay(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInJune", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInJune(int packedDate)", "full_signature": "public static boolean isInJune(int packedDate)", "class_method_signature": "PackedLocalDate.isInJune(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInJuly", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInJuly(int packedDate)", "full_signature": "public static boolean isInJuly(int packedDate)", "class_method_signature": "PackedLocalDate.isInJuly(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInAugust", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInAugust(int packedDate)", "full_signature": "public static boolean isInAugust(int packedDate)", "class_method_signature": "PackedLocalDate.isInAugust(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInSeptember", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInSeptember(int packedDate)", "full_signature": "public static boolean isInSeptember(int packedDate)", "class_method_signature": "PackedLocalDate.isInSeptember(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInOctober", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInOctober(int packedDate)", "full_signature": "public static boolean isInOctober(int packedDate)", "class_method_signature": "PackedLocalDate.isInOctober(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInNovember", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInNovember(int packedDate)", "full_signature": "public static boolean isInNovember(int packedDate)", "class_method_signature": "PackedLocalDate.isInNovember(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInDecember", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInDecember(int packedDate)", "full_signature": "public static boolean isInDecember(int packedDate)", "class_method_signature": "PackedLocalDate.isInDecember(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isLastDayOfMonth", "parameters": "(int packedDate)", "modifiers": "public static", "return": "boolean", "signature": "boolean isLastDayOfMonth(int packedDate)", "full_signature": "public static boolean isLastDayOfMonth(int packedDate)", "class_method_signature": "PackedLocalDate.isLastDayOfMonth(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "withDayOfMonth", "parameters": "(int dayOfMonth, int packedDate)", "modifiers": "public static", "return": "int", "signature": "int withDayOfMonth(int dayOfMonth, int packedDate)", "full_signature": "public static int withDayOfMonth(int dayOfMonth, int packedDate)", "class_method_signature": "PackedLocalDate.withDayOfMonth(int dayOfMonth, int packedDate)", "testcase": false, "constructor": false}, {"identifier": "withMonth", "parameters": "(int month, int packedDate)", "modifiers": "public static", "return": "int", "signature": "int withMonth(int month, int packedDate)", "full_signature": "public static int withMonth(int month, int packedDate)", "class_method_signature": "PackedLocalDate.withMonth(int month, int packedDate)", "testcase": false, "constructor": false}, {"identifier": "withYear", "parameters": "(int year, int packedDate)", "modifiers": "public static", "return": "int", "signature": "int withYear(int year, int packedDate)", "full_signature": "public static int withYear(int year, int packedDate)", "class_method_signature": "PackedLocalDate.withYear(int year, int packedDate)", "testcase": false, "constructor": false}, {"identifier": "plusYears", "parameters": "(int yearsToAdd, int packedDate)", "modifiers": "public static", "return": "int", "signature": "int plusYears(int yearsToAdd, int packedDate)", "full_signature": "public static int plusYears(int yearsToAdd, int packedDate)", "class_method_signature": "PackedLocalDate.plusYears(int yearsToAdd, int packedDate)", "testcase": false, "constructor": false}, {"identifier": "minusYears", "parameters": "(int years, int packedDate)", "modifiers": "public static", "return": "int", "signature": "int minusYears(int years, int packedDate)", "full_signature": "public static int minusYears(int years, int packedDate)", "class_method_signature": "PackedLocalDate.minusYears(int years, int packedDate)", "testcase": false, "constructor": false}, {"identifier": "plusMonths", "parameters": "(int months, int packedDate)", "modifiers": "public static", "return": "int", "signature": "int plusMonths(int months, int packedDate)", "full_signature": "public static int plusMonths(int months, int packedDate)", "class_method_signature": "PackedLocalDate.plusMonths(int months, int packedDate)", "testcase": false, "constructor": false}, {"identifier": "minusMonths", "parameters": "(int months, int packedDate)", "modifiers": "public static", "return": "int", "signature": "int minusMonths(int months, int packedDate)", "full_signature": "public static int minusMonths(int months, int packedDate)", "class_method_signature": "PackedLocalDate.minusMonths(int months, int packedDate)", "testcase": false, "constructor": false}, {"identifier": "plusWeeks", "parameters": "(int valueToAdd, int packedDate)", "modifiers": "public static", "return": "int", "signature": "int plusWeeks(int valueToAdd, int packedDate)", "full_signature": "public static int plusWeeks(int valueToAdd, int packedDate)", "class_method_signature": "PackedLocalDate.plusWeeks(int valueToAdd, int packedDate)", "testcase": false, "constructor": false}, {"identifier": "minusWeeks", "parameters": "(int valueToSubtract, int packedDate)", "modifiers": "public static", "return": "int", "signature": "int minusWeeks(int valueToSubtract, int packedDate)", "full_signature": "public static int minusWeeks(int valueToSubtract, int packedDate)", "class_method_signature": "PackedLocalDate.minusWeeks(int valueToSubtract, int packedDate)", "testcase": false, "constructor": false}, {"identifier": "plusDays", "parameters": "(int days, int packedDate)", "modifiers": "public static", "return": "int", "signature": "int plusDays(int days, int packedDate)", "full_signature": "public static int plusDays(int days, int packedDate)", "class_method_signature": "PackedLocalDate.plusDays(int days, int packedDate)", "testcase": false, "constructor": false}, {"identifier": "minusDays", "parameters": "(int days, int packedDate)", "modifiers": "public static", "return": "int", "signature": "int minusDays(int days, int packedDate)", "full_signature": "public static int minusDays(int days, int packedDate)", "class_method_signature": "PackedLocalDate.minusDays(int days, int packedDate)", "testcase": false, "constructor": false}, {"identifier": "isInYear", "parameters": "(int next, int year)", "modifiers": "public static", "return": "boolean", "signature": "boolean isInYear(int next, int year)", "full_signature": "public static boolean isInYear(int next, int year)", "class_method_signature": "PackedLocalDate.isInYear(int next, int year)", "testcase": false, "constructor": false}, {"identifier": "lengthOfYear", "parameters": "(int packedDate)", "modifiers": "public static", "return": "int", "signature": "int lengthOfYear(int packedDate)", "full_signature": "public static int lengthOfYear(int packedDate)", "class_method_signature": "PackedLocalDate.lengthOfYear(int packedDate)", "testcase": false, "constructor": false}, {"identifier": "resolvePreviousValid", "parameters": "(int year, int month, int day)", "modifiers": "private static", "return": "int", "signature": "int resolvePreviousValid(int year, int month, int day)", "full_signature": "private static int resolvePreviousValid(int year, int month, int day)", "class_method_signature": "PackedLocalDate.resolvePreviousValid(int year, int month, int day)", "testcase": false, "constructor": false}, {"identifier": "getWeekOfYear", "parameters": "(int packedDateTime)", "modifiers": "public static", "return": "int", "signature": "int getWeekOfYear(int packedDateTime)", "full_signature": "public static int getWeekOfYear(int packedDateTime)", "class_method_signature": "PackedLocalDate.getWeekOfYear(int packedDateTime)", "testcase": false, "constructor": false}, {"identifier": "ofEpochDay", "parameters": "(long epochDay)", "modifiers": "private static", "return": "int", "signature": "int ofEpochDay(long epochDay)", "full_signature": "private static int ofEpochDay(long epochDay)", "class_method_signature": "PackedLocalDate.ofEpochDay(long epochDay)", "testcase": false, "constructor": false}, {"identifier": "plus", "parameters": "(int valueToAdd, ChronoUnit unit, int packedDate)", "modifiers": "public static", "return": "int", "signature": "int plus(int valueToAdd, ChronoUnit unit, int packedDate)", "full_signature": "public static int plus(int valueToAdd, ChronoUnit unit, int packedDate)", "class_method_signature": "PackedLocalDate.plus(int valueToAdd, ChronoUnit unit, int packedDate)", "testcase": false, "constructor": false}, {"identifier": "minus", "parameters": "(int valueToAdd, ChronoUnit unit, int packedDate)", "modifiers": "public static", "return": "int", "signature": "int minus(int valueToAdd, ChronoUnit unit, int packedDate)", "full_signature": "public static int minus(int valueToAdd, ChronoUnit unit, int packedDate)", "class_method_signature": "PackedLocalDate.minus(int valueToAdd, ChronoUnit unit, int packedDate)", "testcase": false, "constructor": false}, {"identifier": "daysUntil", "parameters": "(int packedDateEnd, int packedDateStart)", "modifiers": "public static", "return": "int", "signature": "int daysUntil(int packedDateEnd, int packedDateStart)", "full_signature": "public static int daysUntil(int packedDateEnd, int packedDateStart)", "class_method_signature": "PackedLocalDate.daysUntil(int packedDateEnd, int packedDateStart)", "testcase": false, "constructor": false}, {"identifier": "weeksUntil", "parameters": "(int packedDateEnd, int packedDateStart)", "modifiers": "public static", "return": "int", "signature": "int weeksUntil(int packedDateEnd, int packedDateStart)", "full_signature": "public static int weeksUntil(int packedDateEnd, int packedDateStart)", "class_method_signature": "PackedLocalDate.weeksUntil(int packedDateEnd, int packedDateStart)", "testcase": false, "constructor": false}, {"identifier": "monthsUntil", "parameters": "(int packedDateEnd, int packedDateStart)", "modifiers": "public static", "return": "int", "signature": "int monthsUntil(int packedDateEnd, int packedDateStart)", "full_signature": "public static int monthsUntil(int packedDateEnd, int packedDateStart)", "class_method_signature": "PackedLocalDate.monthsUntil(int packedDateEnd, int packedDateStart)", "testcase": false, "constructor": false}, {"identifier": "yearsUntil", "parameters": "(int packedDateEnd, int packedDateStart)", "modifiers": "public static", "return": "int", "signature": "int yearsUntil(int packedDateEnd, int packedDateStart)", "full_signature": "public static int yearsUntil(int packedDateEnd, int packedDateStart)", "class_method_signature": "PackedLocalDate.yearsUntil(int packedDateEnd, int packedDateStart)", "testcase": false, "constructor": false}, {"identifier": "getMonthInternal", "parameters": "(int packedDate)", "modifiers": "private static", "return": "int", "signature": "int getMonthInternal(int packedDate)", "full_signature": "private static int getMonthInternal(int packedDate)", "class_method_signature": "PackedLocalDate.getMonthInternal(int packedDate)", "testcase": false, "constructor": false}], "file": "core/src/main/java/tech/tablesaw/columns/dates/PackedLocalDate.java"}, "focal_method": {"identifier": "minusDays", "parameters": "(int days, int packedDate)", "modifiers": "public static", "return": "int", "body": "public static int minusDays(int days, int packedDate) {\n    return plusDays(-days, packedDate);\n  }", "signature": "int minusDays(int days, int packedDate)", "full_signature": "public static int minusDays(int days, int packedDate)", "class_method_signature": "PackedLocalDate.minusDays(int days, int packedDate)", "testcase": false, "constructor": false, "invocations": ["plusDays"]}, "repository": {"repo_id": 48880766, "url": "https://github.com/jtablesaw/tablesaw", "stars": 2021, "created": "1/1/2016 2:58:28 PM +00:00", "updates": "2020-01-24T23:26:07+00:00", "fork": "False", "license": "licensed"}}