{"test_class": {"identifier": "UserGoodsOrderServiceTest", "superclass": "extends BaseSpringJunitUtil", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate UserGoodsOrderService userGoodsOrderService;", "modifier": "@Autowired\n\tprivate", "type": "UserGoodsOrderService", "declarator": "userGoodsOrderService", "var_name": "userGoodsOrderService"}, {"original_string": "private Set<UserGoodsOrderPo> userGoodsOrders = new LinkedHashSet<UserGoodsOrderPo>();", "modifier": "private", "type": "Set<UserGoodsOrderPo>", "declarator": "userGoodsOrders = new LinkedHashSet<UserGoodsOrderPo>()", "var_name": "userGoodsOrders"}], "file": "xa-collector/src/test/java/com/xinnet/xa/collector/saletrack/service/impl/UserGoodsOrderServiceTest.java"}, "test_case": {"identifier": "testBatchInsert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testBatchInsert() throws Exception{\n\t\tuserGoodsOrderService.batchInsert(userGoodsOrders);\n\t}", "signature": "void testBatchInsert()", "full_signature": "@Test public void testBatchInsert()", "class_method_signature": "UserGoodsOrderServiceTest.testBatchInsert()", "testcase": true, "constructor": false, "invocations": ["batchInsert"]}, "focal_class": {"identifier": "UserGoodsOrderService", "superclass": "", "interfaces": "implements IUserGoodsOrderService", "fields": [{"original_string": "private final static Logger logger = Logger.getLogger(UserGoodsOrderService.class);", "modifier": "private final static", "type": "Logger", "declarator": "logger = Logger.getLogger(UserGoodsOrderService.class)", "var_name": "logger"}, {"original_string": "@Autowired\n\tprivate UserGoodsOrderDao userGoodsOrderDao;", "modifier": "@Autowired\n\tprivate", "type": "UserGoodsOrderDao", "declarator": "userGoodsOrderDao", "var_name": "userGoodsOrderDao"}], "methods": [{"identifier": "batchInsert", "parameters": "(Set<UserGoodsOrderPo> set)", "modifiers": "@Override public", "return": "void", "signature": "void batchInsert(Set<UserGoodsOrderPo> set)", "full_signature": "@Override public void batchInsert(Set<UserGoodsOrderPo> set)", "class_method_signature": "UserGoodsOrderService.batchInsert(Set<UserGoodsOrderPo> set)", "testcase": false, "constructor": false}, {"identifier": "batchUpdate", "parameters": "(Set<UserGoodsOrderPo> set)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void batchUpdate(Set<UserGoodsOrderPo> set)", "full_signature": "@Override public synchronized void batchUpdate(Set<UserGoodsOrderPo> set)", "class_method_signature": "UserGoodsOrderService.batchUpdate(Set<UserGoodsOrderPo> set)", "testcase": false, "constructor": false}, {"identifier": "convertUpdateUserGoodsOrder", "parameters": "(UserGoodsOrderPo userGoodsOrder, UserGoodsOrderPo userGoodsOrderPo)", "modifiers": "private synchronized", "return": "void", "signature": "void convertUpdateUserGoodsOrder(UserGoodsOrderPo userGoodsOrder, UserGoodsOrderPo userGoodsOrderPo)", "full_signature": "private synchronized void convertUpdateUserGoodsOrder(UserGoodsOrderPo userGoodsOrder, UserGoodsOrderPo userGoodsOrderPo)", "class_method_signature": "UserGoodsOrderService.convertUpdateUserGoodsOrder(UserGoodsOrderPo userGoodsOrder, UserGoodsOrderPo userGoodsOrderPo)", "testcase": false, "constructor": false}, {"identifier": "processingData", "parameters": "(Set<UserGoodsOrderDetailVo> userGoodsOrderDetailVos)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void processingData(Set<UserGoodsOrderDetailVo> userGoodsOrderDetailVos)", "full_signature": "@Override public synchronized void processingData(Set<UserGoodsOrderDetailVo> userGoodsOrderDetailVos)", "class_method_signature": "UserGoodsOrderService.processingData(Set<UserGoodsOrderDetailVo> userGoodsOrderDetailVos)", "testcase": false, "constructor": false}, {"identifier": "getUserGoodsOrderPoMap", "parameters": "(Set<UserGoodsOrderDetailVo> userGoodsOrderDetailVos )", "modifiers": "private", "return": "Map<String,LinkedHashSet<UserGoodsOrderPo>>", "signature": "Map<String,LinkedHashSet<UserGoodsOrderPo>> getUserGoodsOrderPoMap(Set<UserGoodsOrderDetailVo> userGoodsOrderDetailVos )", "full_signature": "private Map<String,LinkedHashSet<UserGoodsOrderPo>> getUserGoodsOrderPoMap(Set<UserGoodsOrderDetailVo> userGoodsOrderDetailVos )", "class_method_signature": "UserGoodsOrderService.getUserGoodsOrderPoMap(Set<UserGoodsOrderDetailVo> userGoodsOrderDetailVos )", "testcase": false, "constructor": false}, {"identifier": "convertUserGoodsOrderDetailVoTo", "parameters": "(UserGoodsOrderDetailVo userGoodsOrderDetailVo)", "modifiers": "private", "return": "UserGoodsOrderPo", "signature": "UserGoodsOrderPo convertUserGoodsOrderDetailVoTo(UserGoodsOrderDetailVo userGoodsOrderDetailVo)", "full_signature": "private UserGoodsOrderPo convertUserGoodsOrderDetailVoTo(UserGoodsOrderDetailVo userGoodsOrderDetailVo)", "class_method_signature": "UserGoodsOrderService.convertUserGoodsOrderDetailVoTo(UserGoodsOrderDetailVo userGoodsOrderDetailVo)", "testcase": false, "constructor": false}], "file": "xa-collector/src/main/java/com/xinnet/xa/collector/saletrack/service/impl/UserGoodsOrderService.java"}, "focal_method": {"identifier": "batchInsert", "parameters": "(Set<UserGoodsOrderPo> set)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic  void batchInsert(Set<UserGoodsOrderPo> set) throws Exception{\n\t\t/**\n\t\t * \u7531\u4e8e\u591a\u7ebf\u7a0b\u539f\u56e0\uff0c\u4fdd\u5b58\u4e4b\u524d\u5fc5\u987b\u68c0\u6d4b\u8be5\u5bf9\u8c61\u662f\u5426\u5b58\u5728\uff0c\u6570\u636e\u5b58\u5728\u4e0d\u5728\u4fdd\u5b58\uff0c\u505a\u66f4\u65b0\u64cd\u4f5c\n\t\t */\n\t\tSet<UserGoodsOrderPo> updateSet = new LinkedHashSet<UserGoodsOrderPo>();\n\t\tfor(UserGoodsOrderPo vpo: set){\n\t\t\tif(StringUtils.isNotBlank(vpo.getShopCartGoodsCookieId())){\n\t\t\t\tUserGoodsOrderPo po = userGoodsOrderDao.findBy(vpo.getShopCartGoodsCookieId());\n\t\t\t\tif(null != po ) {\n\t\t\t\t\tupdateSet.add(vpo);\n\t\t\t\t\tset.remove(vpo);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tconvertUpdateUserGoodsOrder(vpo, vpo);\n\t\t\t\t\tlogger.info(\"Insert UserGoodsOrderPo \" + vpo);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tuserGoodsOrderDao.save(set);\t\t\n\t\t} catch (IllegalArgumentException e) {\n\t\t\tlogger.error(\"\u6279\u91cf\u4fdd\u5b58\u5931\u8d25\uff0c\u5931\u8d25\u539f\u56e0:\"+e.getMessage(),e);\n\t\t}\n\t\tif(updateSet.size() > 0){\n\t\t    logger.info(\"\u6709 \"+updateSet.size()+\" \u4e2a\u8fdb\u5165\u8d2d\u7269\u8f66\u52a8\u4f5c\u5ef6\u8fdf\uff01\");\n\t\t\tbatchUpdate(updateSet);//\u5047\u5982\u8fdb\u5165\u8d2d\u7269\u8f66\u7684\u52a8\u4f5c\u540e\u5230\uff0c\u66f4\u65b0\u8fdb\u5165\u8d2d\u7269\u8f66\u7684\u64cd\u4f5c\n\t\t}\t\t\n\t}", "signature": "void batchInsert(Set<UserGoodsOrderPo> set)", "full_signature": "@Override public void batchInsert(Set<UserGoodsOrderPo> set)", "class_method_signature": "UserGoodsOrderService.batchInsert(Set<UserGoodsOrderPo> set)", "testcase": false, "constructor": false, "invocations": ["isNotBlank", "getShopCartGoodsCookieId", "findBy", "getShopCartGoodsCookieId", "add", "remove", "convertUpdateUserGoodsOrder", "info", "save", "error", "", "size", "info", "ze()", "batchUpdate"]}, "repository": {"repo_id": 47752557, "url": "https://github.com/yanweiqi/xinnet-analysis", "language": "Java", "is_fork": false, "fork_count": 16, "stargazer_count": 13, "size": 187, "license": "licensed"}}