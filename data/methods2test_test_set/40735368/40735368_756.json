{"test_class": {"identifier": "ReferencedEnvelope3DTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/library/api/src/test/java/org/geotools/geometry/jts/ReferencedEnvelope3DTest.java"}, "test_case": {"identifier": "empty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void empty() {\n        // ensure empty can grab a default CRS when starting from nothing\n        ReferencedEnvelope3D bbox = new ReferencedEnvelope3D(); // this is empty\n        assertNull(bbox.getCoordinateReferenceSystem());\n\n        ReferencedEnvelope3D australia = new ReferencedEnvelope3D(DefaultGeographicCRS.WGS84_3D);\n        australia.include(40, 110, 0);\n        australia.include(10, 150, 10);\n\n        bbox.include(australia);\n        \n        assertEquals( australia.getCoordinateReferenceSystem(), bbox.getCoordinateReferenceSystem() );\n    }", "signature": "void empty()", "full_signature": "@Test public void empty()", "class_method_signature": "ReferencedEnvelope3DTest.empty()", "testcase": true, "constructor": false, "invocations": ["assertNull", "getCoordinateReferenceSystem", "include", "include", "include", "assertEquals", "getCoordinateReferenceSystem", "getCoordinateReferenceSystem"]}, "focal_class": {"identifier": "ReferencedEnvelope3D", "superclass": "extends ReferencedEnvelope", "interfaces": "implements BoundingBox3D", "fields": [{"original_string": "private static final long serialVersionUID = -3188702602373537163L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -3188702602373537163L", "var_name": "serialVersionUID"}, {"original_string": "private double minz;", "modifier": "private", "type": "double", "declarator": "minz", "var_name": "minz"}, {"original_string": "private double maxz;", "modifier": "private", "type": "double", "declarator": "maxz", "var_name": "maxz"}, {"original_string": "public static ReferencedEnvelope3D EVERYTHING = new ReferencedEnvelope3D(Double.NEGATIVE_INFINITY,\n            Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY,\n            Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, null) {\n        private static final long serialVersionUID = -3188702602373537164L;\n\n        public boolean contains(BoundingBox bbox) {\n            return true;\n        }\n\n        public boolean contains(Coordinate p) {\n            return true;\n        }\n\n        public boolean contains(DirectPosition pos) {\n            return true;\n        }\n\n        public boolean contains(double x, double y, double z) {\n            return true;\n        }\n\n        public boolean isEmpty() {\n            return false;\n        }\n\n        public boolean isNull() {\n            return true;\n        }\n        \n        public double getArea() {\n            //return super.getArea();\n            return Double.POSITIVE_INFINITY;\n        }\n        \n        public double getVolume() {\n            //return super.getArea();\n            return Double.POSITIVE_INFINITY;\n        }\n        \n        public void setBounds(BoundingBox3D arg0) {\n            throw new IllegalStateException(\"Cannot modify ReferencedEnvelope.EVERYTHING\");\n        }\n        public Coordinate centre() {\n            return new Coordinate();\n        }\n        public void setToNull() {\n            // um ignore this as we are already \"null\"\n        }\n        public boolean equals(Object obj) {\n            if( obj == EVERYTHING ){\n                return true;\n            }\n            if( obj instanceof ReferencedEnvelope3D ){\n                ReferencedEnvelope3D other = (ReferencedEnvelope3D) obj;\n                if( other.crs != EVERYTHING.crs ) return false;\n                if( other.getMinX() != EVERYTHING.getMinX() ) return false;\n                if( other.getMinY() != EVERYTHING.getMinY() ) return false;\n                if( other.getMinZ() != EVERYTHING.getMinZ() ) return false;\n                if( other.getMaxX() != EVERYTHING.getMaxX() ) return false;\n                if( other.getMaxY() != EVERYTHING.getMaxY() ) return false;\n                if( other.getMaxZ() != EVERYTHING.getMaxZ() ) return false;\n                \n                return true;\n            }\n            return super.equals(obj);\n        }\n        \n        public String toString() {\n            return \"ReferencedEnvelope.EVERYTHING\";\n        }\n    };", "modifier": "public static", "type": "ReferencedEnvelope3D", "declarator": "EVERYTHING = new ReferencedEnvelope3D(Double.NEGATIVE_INFINITY,\n            Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY,\n            Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, null) {\n        private static final long serialVersionUID = -3188702602373537164L;\n\n        public boolean contains(BoundingBox bbox) {\n            return true;\n        }\n\n        public boolean contains(Coordinate p) {\n            return true;\n        }\n\n        public boolean contains(DirectPosition pos) {\n            return true;\n        }\n\n        public boolean contains(double x, double y, double z) {\n            return true;\n        }\n\n        public boolean isEmpty() {\n            return false;\n        }\n\n        public boolean isNull() {\n            return true;\n        }\n        \n        public double getArea() {\n            //return super.getArea();\n            return Double.POSITIVE_INFINITY;\n        }\n        \n        public double getVolume() {\n            //return super.getArea();\n            return Double.POSITIVE_INFINITY;\n        }\n        \n        public void setBounds(BoundingBox3D arg0) {\n            throw new IllegalStateException(\"Cannot modify ReferencedEnvelope.EVERYTHING\");\n        }\n        public Coordinate centre() {\n            return new Coordinate();\n        }\n        public void setToNull() {\n            // um ignore this as we are already \"null\"\n        }\n        public boolean equals(Object obj) {\n            if( obj == EVERYTHING ){\n                return true;\n            }\n            if( obj instanceof ReferencedEnvelope3D ){\n                ReferencedEnvelope3D other = (ReferencedEnvelope3D) obj;\n                if( other.crs != EVERYTHING.crs ) return false;\n                if( other.getMinX() != EVERYTHING.getMinX() ) return false;\n                if( other.getMinY() != EVERYTHING.getMinY() ) return false;\n                if( other.getMinZ() != EVERYTHING.getMinZ() ) return false;\n                if( other.getMaxX() != EVERYTHING.getMaxX() ) return false;\n                if( other.getMaxY() != EVERYTHING.getMaxY() ) return false;\n                if( other.getMaxZ() != EVERYTHING.getMaxZ() ) return false;\n                \n                return true;\n            }\n            return super.equals(obj);\n        }\n        \n        public String toString() {\n            return \"ReferencedEnvelope.EVERYTHING\";\n        }\n    }", "var_name": "EVERYTHING"}], "methods": [{"identifier": "intersects", "parameters": "(Coordinate p1, Coordinate p2, Coordinate q)", "modifiers": "public static", "return": "boolean", "signature": "boolean intersects(Coordinate p1, Coordinate p2, Coordinate q)", "full_signature": "public static boolean intersects(Coordinate p1, Coordinate p2, Coordinate q)", "class_method_signature": "ReferencedEnvelope3D.intersects(Coordinate p1, Coordinate p2, Coordinate q)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(Coordinate p1, Coordinate p2,\n\t\t\tCoordinate q1, Coordinate q2)", "modifiers": "public static", "return": "boolean", "signature": "boolean intersects(Coordinate p1, Coordinate p2,\n\t\t\tCoordinate q1, Coordinate q2)", "full_signature": "public static boolean intersects(Coordinate p1, Coordinate p2,\n\t\t\tCoordinate q1, Coordinate q2)", "class_method_signature": "ReferencedEnvelope3D.intersects(Coordinate p1, Coordinate p2,\n\t\t\tCoordinate q1, Coordinate q2)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void init()", "full_signature": "public void init()", "class_method_signature": "ReferencedEnvelope3D.init()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(double x1, double x2, double y1, double y2, double z1,\n\t\t\tdouble z2)", "modifiers": "public", "return": "void", "signature": "void init(double x1, double x2, double y1, double y2, double z1,\n\t\t\tdouble z2)", "full_signature": "public void init(double x1, double x2, double y1, double y2, double z1,\n\t\t\tdouble z2)", "class_method_signature": "ReferencedEnvelope3D.init(double x1, double x2, double y1, double y2, double z1,\n\t\t\tdouble z2)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(Coordinate p1, Coordinate p2)", "modifiers": "public", "return": "void", "signature": "void init(Coordinate p1, Coordinate p2)", "full_signature": "public void init(Coordinate p1, Coordinate p2)", "class_method_signature": "ReferencedEnvelope3D.init(Coordinate p1, Coordinate p2)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(Coordinate p)", "modifiers": "public", "return": "void", "signature": "void init(Coordinate p)", "full_signature": "public void init(Coordinate p)", "class_method_signature": "ReferencedEnvelope3D.init(Coordinate p)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(Envelope env)", "modifiers": "@Override public", "return": "void", "signature": "void init(Envelope env)", "full_signature": "@Override public void init(Envelope env)", "class_method_signature": "ReferencedEnvelope3D.init(Envelope env)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(ReferencedEnvelope3D env)", "modifiers": "public", "return": "void", "signature": "void init(ReferencedEnvelope3D env)", "full_signature": "public void init(ReferencedEnvelope3D env)", "class_method_signature": "ReferencedEnvelope3D.init(ReferencedEnvelope3D env)", "testcase": false, "constructor": false}, {"identifier": "setToNull", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void setToNull()", "full_signature": "public void setToNull()", "class_method_signature": "ReferencedEnvelope3D.setToNull()", "testcase": false, "constructor": false}, {"identifier": "getDepth", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getDepth()", "full_signature": "public double getDepth()", "class_method_signature": "ReferencedEnvelope3D.getDepth()", "testcase": false, "constructor": false}, {"identifier": "getMinZ", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getMinZ()", "full_signature": "public double getMinZ()", "class_method_signature": "ReferencedEnvelope3D.getMinZ()", "testcase": false, "constructor": false}, {"identifier": "getMaxZ", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getMaxZ()", "full_signature": "public double getMaxZ()", "class_method_signature": "ReferencedEnvelope3D.getMaxZ()", "testcase": false, "constructor": false}, {"identifier": "getVolume", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getVolume()", "full_signature": "public double getVolume()", "class_method_signature": "ReferencedEnvelope3D.getVolume()", "testcase": false, "constructor": false}, {"identifier": "minExtent", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double minExtent()", "full_signature": "public double minExtent()", "class_method_signature": "ReferencedEnvelope3D.minExtent()", "testcase": false, "constructor": false}, {"identifier": "maxExtent", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double maxExtent()", "full_signature": "public double maxExtent()", "class_method_signature": "ReferencedEnvelope3D.maxExtent()", "testcase": false, "constructor": false}, {"identifier": "expandToInclude", "parameters": "(Coordinate p)", "modifiers": "public", "return": "void", "signature": "void expandToInclude(Coordinate p)", "full_signature": "public void expandToInclude(Coordinate p)", "class_method_signature": "ReferencedEnvelope3D.expandToInclude(Coordinate p)", "testcase": false, "constructor": false}, {"identifier": "expandBy", "parameters": "(double distance)", "modifiers": "public", "return": "void", "signature": "void expandBy(double distance)", "full_signature": "public void expandBy(double distance)", "class_method_signature": "ReferencedEnvelope3D.expandBy(double distance)", "testcase": false, "constructor": false}, {"identifier": "expandBy", "parameters": "(double deltaX, double deltaY, double deltaZ)", "modifiers": "public", "return": "void", "signature": "void expandBy(double deltaX, double deltaY, double deltaZ)", "full_signature": "public void expandBy(double deltaX, double deltaY, double deltaZ)", "class_method_signature": "ReferencedEnvelope3D.expandBy(double deltaX, double deltaY, double deltaZ)", "testcase": false, "constructor": false}, {"identifier": "expandToInclude", "parameters": "(double x, double y, double z)", "modifiers": "public", "return": "void", "signature": "void expandToInclude(double x, double y, double z)", "full_signature": "public void expandToInclude(double x, double y, double z)", "class_method_signature": "ReferencedEnvelope3D.expandToInclude(double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "expandToInclude", "parameters": "(DirectPosition pt )", "modifiers": "@Override public", "return": "void", "signature": "void expandToInclude(DirectPosition pt )", "full_signature": "@Override public void expandToInclude(DirectPosition pt )", "class_method_signature": "ReferencedEnvelope3D.expandToInclude(DirectPosition pt )", "testcase": false, "constructor": false}, {"identifier": "translate", "parameters": "(double transX, double transY, double transZ)", "modifiers": "public", "return": "void", "signature": "void translate(double transX, double transY, double transZ)", "full_signature": "public void translate(double transX, double transY, double transZ)", "class_method_signature": "ReferencedEnvelope3D.translate(double transX, double transY, double transZ)", "testcase": false, "constructor": false}, {"identifier": "centre", "parameters": "()", "modifiers": "public", "return": "Coordinate", "signature": "Coordinate centre()", "full_signature": "public Coordinate centre()", "class_method_signature": "ReferencedEnvelope3D.centre()", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(ReferencedEnvelope3D other)", "modifiers": "public", "return": "boolean", "signature": "boolean intersects(ReferencedEnvelope3D other)", "full_signature": "public boolean intersects(ReferencedEnvelope3D other)", "class_method_signature": "ReferencedEnvelope3D.intersects(ReferencedEnvelope3D other)", "testcase": false, "constructor": false}, {"identifier": "overlaps", "parameters": "(ReferencedEnvelope3D other)", "modifiers": "public", "return": "boolean", "signature": "boolean overlaps(ReferencedEnvelope3D other)", "full_signature": "public boolean overlaps(ReferencedEnvelope3D other)", "class_method_signature": "ReferencedEnvelope3D.overlaps(ReferencedEnvelope3D other)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(Coordinate p)", "modifiers": "public", "return": "boolean", "signature": "boolean intersects(Coordinate p)", "full_signature": "public boolean intersects(Coordinate p)", "class_method_signature": "ReferencedEnvelope3D.intersects(Coordinate p)", "testcase": false, "constructor": false}, {"identifier": "overlaps", "parameters": "(Coordinate p)", "modifiers": "public", "return": "boolean", "signature": "boolean overlaps(Coordinate p)", "full_signature": "public boolean overlaps(Coordinate p)", "class_method_signature": "ReferencedEnvelope3D.overlaps(Coordinate p)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(double x, double y, double z)", "modifiers": "public", "return": "boolean", "signature": "boolean intersects(double x, double y, double z)", "full_signature": "public boolean intersects(double x, double y, double z)", "class_method_signature": "ReferencedEnvelope3D.intersects(double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "overlaps", "parameters": "(double x, double y, double z)", "modifiers": "public", "return": "boolean", "signature": "boolean overlaps(double x, double y, double z)", "full_signature": "public boolean overlaps(double x, double y, double z)", "class_method_signature": "ReferencedEnvelope3D.overlaps(double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(Coordinate p)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(Coordinate p)", "full_signature": "public boolean contains(Coordinate p)", "class_method_signature": "ReferencedEnvelope3D.contains(Coordinate p)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(double x, double y, double z)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(double x, double y, double z)", "full_signature": "public boolean contains(double x, double y, double z)", "class_method_signature": "ReferencedEnvelope3D.contains(double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "covers", "parameters": "(double x, double y, double z)", "modifiers": "public", "return": "boolean", "signature": "boolean covers(double x, double y, double z)", "full_signature": "public boolean covers(double x, double y, double z)", "class_method_signature": "ReferencedEnvelope3D.covers(double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "covers", "parameters": "(Coordinate p)", "modifiers": "public", "return": "boolean", "signature": "boolean covers(Coordinate p)", "full_signature": "public boolean covers(Coordinate p)", "class_method_signature": "ReferencedEnvelope3D.covers(Coordinate p)", "testcase": false, "constructor": false}, {"identifier": "covers", "parameters": "(ReferencedEnvelope3D other)", "modifiers": "public", "return": "boolean", "signature": "boolean covers(ReferencedEnvelope3D other)", "full_signature": "public boolean covers(ReferencedEnvelope3D other)", "class_method_signature": "ReferencedEnvelope3D.covers(ReferencedEnvelope3D other)", "testcase": false, "constructor": false}, {"identifier": "distance", "parameters": "(ReferencedEnvelope3D env)", "modifiers": "public", "return": "double", "signature": "double distance(ReferencedEnvelope3D env)", "full_signature": "public double distance(ReferencedEnvelope3D env)", "class_method_signature": "ReferencedEnvelope3D.distance(ReferencedEnvelope3D env)", "testcase": false, "constructor": false}, {"identifier": "ReferencedEnvelope3D", "parameters": "()", "modifiers": "public", "return": "", "signature": " ReferencedEnvelope3D()", "full_signature": "public  ReferencedEnvelope3D()", "class_method_signature": "ReferencedEnvelope3D.ReferencedEnvelope3D()", "testcase": false, "constructor": true}, {"identifier": "ReferencedEnvelope3D", "parameters": "(CoordinateReferenceSystem crs)", "modifiers": "public", "return": "", "signature": " ReferencedEnvelope3D(CoordinateReferenceSystem crs)", "full_signature": "public  ReferencedEnvelope3D(CoordinateReferenceSystem crs)", "class_method_signature": "ReferencedEnvelope3D.ReferencedEnvelope3D(CoordinateReferenceSystem crs)", "testcase": false, "constructor": true}, {"identifier": "ReferencedEnvelope3D", "parameters": "(final double x1, final double x2, final double y1, final double y2,\n    \t\tfinal double z1, final double z2, final CoordinateReferenceSystem crs)", "modifiers": "public", "return": "", "signature": " ReferencedEnvelope3D(final double x1, final double x2, final double y1, final double y2,\n    \t\tfinal double z1, final double z2, final CoordinateReferenceSystem crs)", "full_signature": "public  ReferencedEnvelope3D(final double x1, final double x2, final double y1, final double y2,\n    \t\tfinal double z1, final double z2, final CoordinateReferenceSystem crs)", "class_method_signature": "ReferencedEnvelope3D.ReferencedEnvelope3D(final double x1, final double x2, final double y1, final double y2,\n    \t\tfinal double z1, final double z2, final CoordinateReferenceSystem crs)", "testcase": false, "constructor": true}, {"identifier": "ReferencedEnvelope3D", "parameters": "(final ReferencedEnvelope3D envelope)", "modifiers": "public", "return": "", "signature": " ReferencedEnvelope3D(final ReferencedEnvelope3D envelope)", "full_signature": "public  ReferencedEnvelope3D(final ReferencedEnvelope3D envelope)", "class_method_signature": "ReferencedEnvelope3D.ReferencedEnvelope3D(final ReferencedEnvelope3D envelope)", "testcase": false, "constructor": true}, {"identifier": "ReferencedEnvelope3D", "parameters": "(final BoundingBox3D bbox)", "modifiers": "public", "return": "", "signature": " ReferencedEnvelope3D(final BoundingBox3D bbox)", "full_signature": "public  ReferencedEnvelope3D(final BoundingBox3D bbox)", "class_method_signature": "ReferencedEnvelope3D.ReferencedEnvelope3D(final BoundingBox3D bbox)", "testcase": false, "constructor": true}, {"identifier": "ReferencedEnvelope3D", "parameters": "(final Envelope envelope, final CoordinateReferenceSystem crs)", "modifiers": "public", "return": "", "signature": " ReferencedEnvelope3D(final Envelope envelope, final CoordinateReferenceSystem crs)", "full_signature": "public  ReferencedEnvelope3D(final Envelope envelope, final CoordinateReferenceSystem crs)", "class_method_signature": "ReferencedEnvelope3D.ReferencedEnvelope3D(final Envelope envelope, final CoordinateReferenceSystem crs)", "testcase": false, "constructor": true}, {"identifier": "ReferencedEnvelope3D", "parameters": "(final org.opengis.geometry.Envelope envelope)", "modifiers": "public", "return": "", "signature": " ReferencedEnvelope3D(final org.opengis.geometry.Envelope envelope)", "full_signature": "public  ReferencedEnvelope3D(final org.opengis.geometry.Envelope envelope)", "class_method_signature": "ReferencedEnvelope3D.ReferencedEnvelope3D(final org.opengis.geometry.Envelope envelope)", "testcase": false, "constructor": true}, {"identifier": "ReferencedEnvelope3D", "parameters": "(final ReferencedEnvelope3D envelope, final CoordinateReferenceSystem crs)", "modifiers": "public", "return": "", "signature": " ReferencedEnvelope3D(final ReferencedEnvelope3D envelope, final CoordinateReferenceSystem crs)", "full_signature": "public  ReferencedEnvelope3D(final ReferencedEnvelope3D envelope, final CoordinateReferenceSystem crs)", "class_method_signature": "ReferencedEnvelope3D.ReferencedEnvelope3D(final ReferencedEnvelope3D envelope, final CoordinateReferenceSystem crs)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "(BoundingBox bounds)", "modifiers": "public", "return": "void", "signature": "void init(BoundingBox bounds)", "full_signature": "public void init(BoundingBox bounds)", "class_method_signature": "ReferencedEnvelope3D.init(BoundingBox bounds)", "testcase": false, "constructor": false}, {"identifier": "getJTSEnvelope", "parameters": "(final BoundingBox3D bbox)", "modifiers": "private static", "return": "ReferencedEnvelope3D", "signature": "ReferencedEnvelope3D getJTSEnvelope(final BoundingBox3D bbox)", "full_signature": "private static ReferencedEnvelope3D getJTSEnvelope(final BoundingBox3D bbox)", "class_method_signature": "ReferencedEnvelope3D.getJTSEnvelope(final BoundingBox3D bbox)", "testcase": false, "constructor": false}, {"identifier": "getDimension", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDimension()", "full_signature": "public int getDimension()", "class_method_signature": "ReferencedEnvelope3D.getDimension()", "testcase": false, "constructor": false}, {"identifier": "getMinimum", "parameters": "(final int dimension)", "modifiers": "public", "return": "double", "signature": "double getMinimum(final int dimension)", "full_signature": "public double getMinimum(final int dimension)", "class_method_signature": "ReferencedEnvelope3D.getMinimum(final int dimension)", "testcase": false, "constructor": false}, {"identifier": "getMaximum", "parameters": "(final int dimension)", "modifiers": "public", "return": "double", "signature": "double getMaximum(final int dimension)", "full_signature": "public double getMaximum(final int dimension)", "class_method_signature": "ReferencedEnvelope3D.getMaximum(final int dimension)", "testcase": false, "constructor": false}, {"identifier": "getMedian", "parameters": "(final int dimension)", "modifiers": "public", "return": "double", "signature": "double getMedian(final int dimension)", "full_signature": "public double getMedian(final int dimension)", "class_method_signature": "ReferencedEnvelope3D.getMedian(final int dimension)", "testcase": false, "constructor": false}, {"identifier": "getSpan", "parameters": "(final int dimension)", "modifiers": "public", "return": "double", "signature": "double getSpan(final int dimension)", "full_signature": "public double getSpan(final int dimension)", "class_method_signature": "ReferencedEnvelope3D.getSpan(final int dimension)", "testcase": false, "constructor": false}, {"identifier": "getLowerCorner", "parameters": "()", "modifiers": "public", "return": "DirectPosition", "signature": "DirectPosition getLowerCorner()", "full_signature": "public DirectPosition getLowerCorner()", "class_method_signature": "ReferencedEnvelope3D.getLowerCorner()", "testcase": false, "constructor": false}, {"identifier": "getUpperCorner", "parameters": "()", "modifiers": "public", "return": "DirectPosition", "signature": "DirectPosition getUpperCorner()", "full_signature": "public DirectPosition getUpperCorner()", "class_method_signature": "ReferencedEnvelope3D.getUpperCorner()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "ReferencedEnvelope3D.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(DirectPosition pos)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(DirectPosition pos)", "full_signature": "public boolean contains(DirectPosition pos)", "class_method_signature": "ReferencedEnvelope3D.contains(DirectPosition pos)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final BoundingBox3D bbox)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(final BoundingBox3D bbox)", "full_signature": "public boolean contains(final BoundingBox3D bbox)", "class_method_signature": "ReferencedEnvelope3D.contains(final BoundingBox3D bbox)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(final BoundingBox3D bbox)", "modifiers": "public", "return": "boolean", "signature": "boolean intersects(final BoundingBox3D bbox)", "full_signature": "public boolean intersects(final BoundingBox3D bbox)", "class_method_signature": "ReferencedEnvelope3D.intersects(final BoundingBox3D bbox)", "testcase": false, "constructor": false}, {"identifier": "intersection", "parameters": "(ReferencedEnvelope3D env)", "modifiers": "public", "return": "ReferencedEnvelope3D", "signature": "ReferencedEnvelope3D intersection(ReferencedEnvelope3D env)", "full_signature": "public ReferencedEnvelope3D intersection(ReferencedEnvelope3D env)", "class_method_signature": "ReferencedEnvelope3D.intersection(ReferencedEnvelope3D env)", "testcase": false, "constructor": false}, {"identifier": "include", "parameters": "(final BoundingBox3D bbox)", "modifiers": "public", "return": "void", "signature": "void include(final BoundingBox3D bbox)", "full_signature": "public void include(final BoundingBox3D bbox)", "class_method_signature": "ReferencedEnvelope3D.include(final BoundingBox3D bbox)", "testcase": false, "constructor": false}, {"identifier": "expandToInclude", "parameters": "(ReferencedEnvelope3D other)", "modifiers": "public", "return": "void", "signature": "void expandToInclude(ReferencedEnvelope3D other)", "full_signature": "public void expandToInclude(ReferencedEnvelope3D other)", "class_method_signature": "ReferencedEnvelope3D.expandToInclude(ReferencedEnvelope3D other)", "testcase": false, "constructor": false}, {"identifier": "include", "parameters": "(double x, double y, double z)", "modifiers": "public", "return": "void", "signature": "void include(double x, double y, double z)", "full_signature": "public void include(double x, double y, double z)", "class_method_signature": "ReferencedEnvelope3D.include(double x, double y, double z)", "testcase": false, "constructor": false}, {"identifier": "setBounds", "parameters": "(final BoundingBox3D bbox)", "modifiers": "public", "return": "void", "signature": "void setBounds(final BoundingBox3D bbox)", "full_signature": "public void setBounds(final BoundingBox3D bbox)", "class_method_signature": "ReferencedEnvelope3D.setBounds(final BoundingBox3D bbox)", "testcase": false, "constructor": false}, {"identifier": "toBounds", "parameters": "(final CoordinateReferenceSystem targetCRS)", "modifiers": "public", "return": "BoundingBox", "signature": "BoundingBox toBounds(final CoordinateReferenceSystem targetCRS)", "full_signature": "public BoundingBox toBounds(final CoordinateReferenceSystem targetCRS)", "class_method_signature": "ReferencedEnvelope3D.toBounds(final CoordinateReferenceSystem targetCRS)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(CoordinateReferenceSystem targetCRS, boolean lenient)", "modifiers": "public", "return": "ReferencedEnvelope", "signature": "ReferencedEnvelope transform(CoordinateReferenceSystem targetCRS, boolean lenient)", "full_signature": "public ReferencedEnvelope transform(CoordinateReferenceSystem targetCRS, boolean lenient)", "class_method_signature": "ReferencedEnvelope3D.transform(CoordinateReferenceSystem targetCRS, boolean lenient)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(final CoordinateReferenceSystem targetCRS,\n        final boolean lenient, final int numPointsForTransformation)", "modifiers": "public", "return": "ReferencedEnvelope", "signature": "ReferencedEnvelope transform(final CoordinateReferenceSystem targetCRS,\n        final boolean lenient, final int numPointsForTransformation)", "full_signature": "public ReferencedEnvelope transform(final CoordinateReferenceSystem targetCRS,\n        final boolean lenient, final int numPointsForTransformation)", "class_method_signature": "ReferencedEnvelope3D.transform(final CoordinateReferenceSystem targetCRS,\n        final boolean lenient, final int numPointsForTransformation)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ReferencedEnvelope3D.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object other)", "full_signature": "@Override public boolean equals(final Object other)", "class_method_signature": "ReferencedEnvelope3D.equals(final Object other)", "testcase": false, "constructor": false}, {"identifier": "boundsEquals3D", "parameters": "(final org.opengis.geometry.Envelope other, double eps)", "modifiers": "public", "return": "boolean", "signature": "boolean boundsEquals3D(final org.opengis.geometry.Envelope other, double eps)", "full_signature": "public boolean boundsEquals3D(final org.opengis.geometry.Envelope other, double eps)", "class_method_signature": "ReferencedEnvelope3D.boundsEquals3D(final org.opengis.geometry.Envelope other, double eps)", "testcase": false, "constructor": false}, {"identifier": "include", "parameters": "(double x, double y)", "modifiers": "@Override public", "return": "void", "signature": "void include(double x, double y)", "full_signature": "@Override public void include(double x, double y)", "class_method_signature": "ReferencedEnvelope3D.include(double x, double y)", "testcase": false, "constructor": false}], "file": "modules/library/api/src/main/java/org/geotools/geometry/jts/ReferencedEnvelope3D.java"}, "focal_method": {"identifier": "include", "parameters": "(final BoundingBox3D bbox)", "modifiers": "public", "return": "void", "body": "public void include(final BoundingBox3D bbox) {\n        if( crs == null ){\n            this.crs = bbox.getCoordinateReferenceSystem();\n        }\n        expandToInclude(getJTSEnvelope(bbox));        \n    }", "signature": "void include(final BoundingBox3D bbox)", "full_signature": "public void include(final BoundingBox3D bbox)", "class_method_signature": "ReferencedEnvelope3D.include(final BoundingBox3D bbox)", "testcase": false, "constructor": false, "invocations": ["getCoordinateReferenceSystem", "expandToInclude", "getJTSEnvelope"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}