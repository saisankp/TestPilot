{"test_class": {"identifier": "Ip4AddressTest", "superclass": "", "interfaces": "", "fields": [], "file": "utils/src/test/java/com/cloud/utils/net/Ip4AddressTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() throws Exception {\n        new EqualsTester()\n                .addEqualityGroup(new Ip4Address(\"0.0.0.1\", \"00:00:00:00:00:02\"), new Ip4Address(1L, 2L))\n                .addEqualityGroup(new Ip4Address(\"0.0.0.1\", \"00:00:00:00:00:00\"), new Ip4Address(1L, 0L), new Ip4Address(1L, 0L), new Ip4Address(1L), new Ip4Address(\"0.0.0.1\"))\n                .testEquals();\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "Ip4AddressTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["testEquals", "addEqualityGroup", "addEqualityGroup"]}, "focal_class": {"identifier": "Ip4Address", "superclass": "", "interfaces": "", "fields": [{"original_string": "String _addr;", "modifier": "", "type": "String", "declarator": "_addr", "var_name": "_addr"}, {"original_string": "String _mac;", "modifier": "", "type": "String", "declarator": "_mac", "var_name": "_mac"}, {"original_string": "static final String s_empty_mac = \"00:00:00:00:00:00\";", "modifier": "static final", "type": "String", "declarator": "s_empty_mac = \"00:00:00:00:00:00\"", "var_name": "s_empty_mac"}], "methods": [{"identifier": "Ip4Address", "parameters": "(String addr, String mac)", "modifiers": "public", "return": "", "signature": " Ip4Address(String addr, String mac)", "full_signature": "public  Ip4Address(String addr, String mac)", "class_method_signature": "Ip4Address.Ip4Address(String addr, String mac)", "testcase": false, "constructor": true}, {"identifier": "Ip4Address", "parameters": "(long addr, long mac)", "modifiers": "public", "return": "", "signature": " Ip4Address(long addr, long mac)", "full_signature": "public  Ip4Address(long addr, long mac)", "class_method_signature": "Ip4Address.Ip4Address(long addr, long mac)", "testcase": false, "constructor": true}, {"identifier": "Ip4Address", "parameters": "(String addr)", "modifiers": "public", "return": "", "signature": " Ip4Address(String addr)", "full_signature": "public  Ip4Address(String addr)", "class_method_signature": "Ip4Address.Ip4Address(String addr)", "testcase": false, "constructor": true}, {"identifier": "Ip4Address", "parameters": "(long addr)", "modifiers": "public", "return": "", "signature": " Ip4Address(long addr)", "full_signature": "public  Ip4Address(long addr)", "class_method_signature": "Ip4Address.Ip4Address(long addr)", "testcase": false, "constructor": true}, {"identifier": "ip4", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String ip4()", "full_signature": "public String ip4()", "class_method_signature": "Ip4Address.ip4()", "testcase": false, "constructor": false}, {"identifier": "mac", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String mac()", "full_signature": "public String mac()", "class_method_signature": "Ip4Address.mac()", "testcase": false, "constructor": false}, {"identifier": "toLong", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long toLong()", "full_signature": "public long toLong()", "class_method_signature": "Ip4Address.toLong()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object that)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object that)", "full_signature": "@Override public boolean equals(Object that)", "class_method_signature": "Ip4Address.equals(Object that)", "testcase": false, "constructor": false}, {"identifier": "isSameAddressAs", "parameters": "(Object other)", "modifiers": "public", "return": "boolean", "signature": "boolean isSameAddressAs(Object other)", "full_signature": "public boolean isSameAddressAs(Object other)", "class_method_signature": "Ip4Address.isSameAddressAs(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Ip4Address.hashCode()", "testcase": false, "constructor": false}], "file": "utils/src/main/java/com/cloud/utils/net/Ip4Address.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object that)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object that) {\n\n        if (that instanceof Ip4Address) {\n            Ip4Address ip4 = (Ip4Address)that;\n            return _addr.equals(ip4._addr) && (_mac == ip4._mac || _mac.equals(ip4._mac));\n        } else {\n            return false;\n        }\n    }", "signature": "boolean equals(Object that)", "full_signature": "@Override public boolean equals(Object that)", "class_method_signature": "Ip4Address.equals(Object that)", "testcase": false, "constructor": false, "invocations": ["equals", "equals"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}