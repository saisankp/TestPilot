{"test_class": {"identifier": "StreamingSheetTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private StreamingSheet streamingSheet;", "modifier": "private", "type": "StreamingSheet", "declarator": "streamingSheet", "var_name": "streamingSheet"}], "file": "dataprep-backend-service/src/test/java/org/talend/dataprep/schema/xls/streaming/StreamingSheetTest.java"}, "test_case": {"identifier": "setColumnBreak", "parameters": "()", "modifiers": "@Test(expected = UnsupportedOperationException.class) public", "return": "void", "body": "@Test(expected = UnsupportedOperationException.class)\n    public void setColumnBreak() throws Exception {\n        streamingSheet.setColumnBreak(0);\n    }", "signature": "void setColumnBreak()", "full_signature": "@Test(expected = UnsupportedOperationException.class) public void setColumnBreak()", "class_method_signature": "StreamingSheetTest.setColumnBreak()", "testcase": true, "constructor": false, "invocations": ["setColumnBreak"]}, "focal_class": {"identifier": "StreamingSheet", "superclass": "", "interfaces": "implements Sheet", "fields": [{"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final StreamingSheetReader reader;", "modifier": "private final", "type": "StreamingSheetReader", "declarator": "reader", "var_name": "reader"}], "methods": [{"identifier": "StreamingSheet", "parameters": "(String name, StreamingSheetReader reader)", "modifiers": "public", "return": "", "signature": " StreamingSheet(String name, StreamingSheetReader reader)", "full_signature": "public  StreamingSheet(String name, StreamingSheetReader reader)", "class_method_signature": "StreamingSheet.StreamingSheet(String name, StreamingSheetReader reader)", "testcase": false, "constructor": true}, {"identifier": "getReader", "parameters": "()", "modifiers": "public", "return": "StreamingSheetReader", "signature": "StreamingSheetReader getReader()", "full_signature": "public StreamingSheetReader getReader()", "class_method_signature": "StreamingSheet.getReader()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Row>", "signature": "Iterator<Row> iterator()", "full_signature": "@Override public Iterator<Row> iterator()", "class_method_signature": "StreamingSheet.iterator()", "testcase": false, "constructor": false}, {"identifier": "rowIterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Row>", "signature": "Iterator<Row> rowIterator()", "full_signature": "@Override public Iterator<Row> rowIterator()", "class_method_signature": "StreamingSheet.rowIterator()", "testcase": false, "constructor": false}, {"identifier": "getSheetName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSheetName()", "full_signature": "@Override public String getSheetName()", "class_method_signature": "StreamingSheet.getSheetName()", "testcase": false, "constructor": false}, {"identifier": "createRow", "parameters": "(int rownum)", "modifiers": "@Override public", "return": "Row", "signature": "Row createRow(int rownum)", "full_signature": "@Override public Row createRow(int rownum)", "class_method_signature": "StreamingSheet.createRow(int rownum)", "testcase": false, "constructor": false}, {"identifier": "removeRow", "parameters": "(Row row)", "modifiers": "@Override public", "return": "void", "signature": "void removeRow(Row row)", "full_signature": "@Override public void removeRow(Row row)", "class_method_signature": "StreamingSheet.removeRow(Row row)", "testcase": false, "constructor": false}, {"identifier": "getRow", "parameters": "(int rownum)", "modifiers": "@Override public", "return": "Row", "signature": "Row getRow(int rownum)", "full_signature": "@Override public Row getRow(int rownum)", "class_method_signature": "StreamingSheet.getRow(int rownum)", "testcase": false, "constructor": false}, {"identifier": "getPhysicalNumberOfRows", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getPhysicalNumberOfRows()", "full_signature": "@Override public int getPhysicalNumberOfRows()", "class_method_signature": "StreamingSheet.getPhysicalNumberOfRows()", "testcase": false, "constructor": false}, {"identifier": "getFirstRowNum", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getFirstRowNum()", "full_signature": "@Override public int getFirstRowNum()", "class_method_signature": "StreamingSheet.getFirstRowNum()", "testcase": false, "constructor": false}, {"identifier": "getLastRowNum", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getLastRowNum()", "full_signature": "@Override public int getLastRowNum()", "class_method_signature": "StreamingSheet.getLastRowNum()", "testcase": false, "constructor": false}, {"identifier": "setColumnHidden", "parameters": "(int columnIndex, boolean hidden)", "modifiers": "@Override public", "return": "void", "signature": "void setColumnHidden(int columnIndex, boolean hidden)", "full_signature": "@Override public void setColumnHidden(int columnIndex, boolean hidden)", "class_method_signature": "StreamingSheet.setColumnHidden(int columnIndex, boolean hidden)", "testcase": false, "constructor": false}, {"identifier": "isColumnHidden", "parameters": "(int columnIndex)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isColumnHidden(int columnIndex)", "full_signature": "@Override public boolean isColumnHidden(int columnIndex)", "class_method_signature": "StreamingSheet.isColumnHidden(int columnIndex)", "testcase": false, "constructor": false}, {"identifier": "setRightToLeft", "parameters": "(boolean value)", "modifiers": "@Override public", "return": "void", "signature": "void setRightToLeft(boolean value)", "full_signature": "@Override public void setRightToLeft(boolean value)", "class_method_signature": "StreamingSheet.setRightToLeft(boolean value)", "testcase": false, "constructor": false}, {"identifier": "isRightToLeft", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRightToLeft()", "full_signature": "@Override public boolean isRightToLeft()", "class_method_signature": "StreamingSheet.isRightToLeft()", "testcase": false, "constructor": false}, {"identifier": "setColumnWidth", "parameters": "(int columnIndex, int width)", "modifiers": "@Override public", "return": "void", "signature": "void setColumnWidth(int columnIndex, int width)", "full_signature": "@Override public void setColumnWidth(int columnIndex, int width)", "class_method_signature": "StreamingSheet.setColumnWidth(int columnIndex, int width)", "testcase": false, "constructor": false}, {"identifier": "getColumnWidth", "parameters": "(int columnIndex)", "modifiers": "@Override public", "return": "int", "signature": "int getColumnWidth(int columnIndex)", "full_signature": "@Override public int getColumnWidth(int columnIndex)", "class_method_signature": "StreamingSheet.getColumnWidth(int columnIndex)", "testcase": false, "constructor": false}, {"identifier": "getColumnWidthInPixels", "parameters": "(int columnIndex)", "modifiers": "@Override public", "return": "float", "signature": "float getColumnWidthInPixels(int columnIndex)", "full_signature": "@Override public float getColumnWidthInPixels(int columnIndex)", "class_method_signature": "StreamingSheet.getColumnWidthInPixels(int columnIndex)", "testcase": false, "constructor": false}, {"identifier": "setDefaultColumnWidth", "parameters": "(int width)", "modifiers": "@Override public", "return": "void", "signature": "void setDefaultColumnWidth(int width)", "full_signature": "@Override public void setDefaultColumnWidth(int width)", "class_method_signature": "StreamingSheet.setDefaultColumnWidth(int width)", "testcase": false, "constructor": false}, {"identifier": "getDefaultColumnWidth", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getDefaultColumnWidth()", "full_signature": "@Override public int getDefaultColumnWidth()", "class_method_signature": "StreamingSheet.getDefaultColumnWidth()", "testcase": false, "constructor": false}, {"identifier": "getDefaultRowHeight", "parameters": "()", "modifiers": "@Override public", "return": "short", "signature": "short getDefaultRowHeight()", "full_signature": "@Override public short getDefaultRowHeight()", "class_method_signature": "StreamingSheet.getDefaultRowHeight()", "testcase": false, "constructor": false}, {"identifier": "getDefaultRowHeightInPoints", "parameters": "()", "modifiers": "@Override public", "return": "float", "signature": "float getDefaultRowHeightInPoints()", "full_signature": "@Override public float getDefaultRowHeightInPoints()", "class_method_signature": "StreamingSheet.getDefaultRowHeightInPoints()", "testcase": false, "constructor": false}, {"identifier": "setDefaultRowHeight", "parameters": "(short height)", "modifiers": "@Override public", "return": "void", "signature": "void setDefaultRowHeight(short height)", "full_signature": "@Override public void setDefaultRowHeight(short height)", "class_method_signature": "StreamingSheet.setDefaultRowHeight(short height)", "testcase": false, "constructor": false}, {"identifier": "setDefaultRowHeightInPoints", "parameters": "(float height)", "modifiers": "@Override public", "return": "void", "signature": "void setDefaultRowHeightInPoints(float height)", "full_signature": "@Override public void setDefaultRowHeightInPoints(float height)", "class_method_signature": "StreamingSheet.setDefaultRowHeightInPoints(float height)", "testcase": false, "constructor": false}, {"identifier": "getColumnStyle", "parameters": "(int column)", "modifiers": "@Override public", "return": "CellStyle", "signature": "CellStyle getColumnStyle(int column)", "full_signature": "@Override public CellStyle getColumnStyle(int column)", "class_method_signature": "StreamingSheet.getColumnStyle(int column)", "testcase": false, "constructor": false}, {"identifier": "addMergedRegion", "parameters": "(CellRangeAddress region)", "modifiers": "@Override public", "return": "int", "signature": "int addMergedRegion(CellRangeAddress region)", "full_signature": "@Override public int addMergedRegion(CellRangeAddress region)", "class_method_signature": "StreamingSheet.addMergedRegion(CellRangeAddress region)", "testcase": false, "constructor": false}, {"identifier": "setVerticallyCenter", "parameters": "(boolean value)", "modifiers": "@Override public", "return": "void", "signature": "void setVerticallyCenter(boolean value)", "full_signature": "@Override public void setVerticallyCenter(boolean value)", "class_method_signature": "StreamingSheet.setVerticallyCenter(boolean value)", "testcase": false, "constructor": false}, {"identifier": "setHorizontallyCenter", "parameters": "(boolean value)", "modifiers": "@Override public", "return": "void", "signature": "void setHorizontallyCenter(boolean value)", "full_signature": "@Override public void setHorizontallyCenter(boolean value)", "class_method_signature": "StreamingSheet.setHorizontallyCenter(boolean value)", "testcase": false, "constructor": false}, {"identifier": "getHorizontallyCenter", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getHorizontallyCenter()", "full_signature": "@Override public boolean getHorizontallyCenter()", "class_method_signature": "StreamingSheet.getHorizontallyCenter()", "testcase": false, "constructor": false}, {"identifier": "getVerticallyCenter", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getVerticallyCenter()", "full_signature": "@Override public boolean getVerticallyCenter()", "class_method_signature": "StreamingSheet.getVerticallyCenter()", "testcase": false, "constructor": false}, {"identifier": "removeMergedRegion", "parameters": "(int index)", "modifiers": "@Override public", "return": "void", "signature": "void removeMergedRegion(int index)", "full_signature": "@Override public void removeMergedRegion(int index)", "class_method_signature": "StreamingSheet.removeMergedRegion(int index)", "testcase": false, "constructor": false}, {"identifier": "getNumMergedRegions", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getNumMergedRegions()", "full_signature": "@Override public int getNumMergedRegions()", "class_method_signature": "StreamingSheet.getNumMergedRegions()", "testcase": false, "constructor": false}, {"identifier": "getMergedRegion", "parameters": "(int index)", "modifiers": "@Override public", "return": "CellRangeAddress", "signature": "CellRangeAddress getMergedRegion(int index)", "full_signature": "@Override public CellRangeAddress getMergedRegion(int index)", "class_method_signature": "StreamingSheet.getMergedRegion(int index)", "testcase": false, "constructor": false}, {"identifier": "getMergedRegions", "parameters": "()", "modifiers": "@Override public", "return": "List<CellRangeAddress>", "signature": "List<CellRangeAddress> getMergedRegions()", "full_signature": "@Override public List<CellRangeAddress> getMergedRegions()", "class_method_signature": "StreamingSheet.getMergedRegions()", "testcase": false, "constructor": false}, {"identifier": "setForceFormulaRecalculation", "parameters": "(boolean value)", "modifiers": "@Override public", "return": "void", "signature": "void setForceFormulaRecalculation(boolean value)", "full_signature": "@Override public void setForceFormulaRecalculation(boolean value)", "class_method_signature": "StreamingSheet.setForceFormulaRecalculation(boolean value)", "testcase": false, "constructor": false}, {"identifier": "getForceFormulaRecalculation", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getForceFormulaRecalculation()", "full_signature": "@Override public boolean getForceFormulaRecalculation()", "class_method_signature": "StreamingSheet.getForceFormulaRecalculation()", "testcase": false, "constructor": false}, {"identifier": "setAutobreaks", "parameters": "(boolean value)", "modifiers": "@Override public", "return": "void", "signature": "void setAutobreaks(boolean value)", "full_signature": "@Override public void setAutobreaks(boolean value)", "class_method_signature": "StreamingSheet.setAutobreaks(boolean value)", "testcase": false, "constructor": false}, {"identifier": "setDisplayGuts", "parameters": "(boolean value)", "modifiers": "@Override public", "return": "void", "signature": "void setDisplayGuts(boolean value)", "full_signature": "@Override public void setDisplayGuts(boolean value)", "class_method_signature": "StreamingSheet.setDisplayGuts(boolean value)", "testcase": false, "constructor": false}, {"identifier": "setDisplayZeros", "parameters": "(boolean value)", "modifiers": "@Override public", "return": "void", "signature": "void setDisplayZeros(boolean value)", "full_signature": "@Override public void setDisplayZeros(boolean value)", "class_method_signature": "StreamingSheet.setDisplayZeros(boolean value)", "testcase": false, "constructor": false}, {"identifier": "isDisplayZeros", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDisplayZeros()", "full_signature": "@Override public boolean isDisplayZeros()", "class_method_signature": "StreamingSheet.isDisplayZeros()", "testcase": false, "constructor": false}, {"identifier": "setFitToPage", "parameters": "(boolean value)", "modifiers": "@Override public", "return": "void", "signature": "void setFitToPage(boolean value)", "full_signature": "@Override public void setFitToPage(boolean value)", "class_method_signature": "StreamingSheet.setFitToPage(boolean value)", "testcase": false, "constructor": false}, {"identifier": "setRowSumsBelow", "parameters": "(boolean value)", "modifiers": "@Override public", "return": "void", "signature": "void setRowSumsBelow(boolean value)", "full_signature": "@Override public void setRowSumsBelow(boolean value)", "class_method_signature": "StreamingSheet.setRowSumsBelow(boolean value)", "testcase": false, "constructor": false}, {"identifier": "setRowSumsRight", "parameters": "(boolean value)", "modifiers": "@Override public", "return": "void", "signature": "void setRowSumsRight(boolean value)", "full_signature": "@Override public void setRowSumsRight(boolean value)", "class_method_signature": "StreamingSheet.setRowSumsRight(boolean value)", "testcase": false, "constructor": false}, {"identifier": "getAutobreaks", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getAutobreaks()", "full_signature": "@Override public boolean getAutobreaks()", "class_method_signature": "StreamingSheet.getAutobreaks()", "testcase": false, "constructor": false}, {"identifier": "getDisplayGuts", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getDisplayGuts()", "full_signature": "@Override public boolean getDisplayGuts()", "class_method_signature": "StreamingSheet.getDisplayGuts()", "testcase": false, "constructor": false}, {"identifier": "getFitToPage", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getFitToPage()", "full_signature": "@Override public boolean getFitToPage()", "class_method_signature": "StreamingSheet.getFitToPage()", "testcase": false, "constructor": false}, {"identifier": "getRowSumsBelow", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getRowSumsBelow()", "full_signature": "@Override public boolean getRowSumsBelow()", "class_method_signature": "StreamingSheet.getRowSumsBelow()", "testcase": false, "constructor": false}, {"identifier": "getRowSumsRight", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getRowSumsRight()", "full_signature": "@Override public boolean getRowSumsRight()", "class_method_signature": "StreamingSheet.getRowSumsRight()", "testcase": false, "constructor": false}, {"identifier": "isPrintGridlines", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isPrintGridlines()", "full_signature": "@Override public boolean isPrintGridlines()", "class_method_signature": "StreamingSheet.isPrintGridlines()", "testcase": false, "constructor": false}, {"identifier": "setPrintGridlines", "parameters": "(boolean show)", "modifiers": "@Override public", "return": "void", "signature": "void setPrintGridlines(boolean show)", "full_signature": "@Override public void setPrintGridlines(boolean show)", "class_method_signature": "StreamingSheet.setPrintGridlines(boolean show)", "testcase": false, "constructor": false}, {"identifier": "getPrintSetup", "parameters": "()", "modifiers": "@Override public", "return": "PrintSetup", "signature": "PrintSetup getPrintSetup()", "full_signature": "@Override public PrintSetup getPrintSetup()", "class_method_signature": "StreamingSheet.getPrintSetup()", "testcase": false, "constructor": false}, {"identifier": "getHeader", "parameters": "()", "modifiers": "@Override public", "return": "Header", "signature": "Header getHeader()", "full_signature": "@Override public Header getHeader()", "class_method_signature": "StreamingSheet.getHeader()", "testcase": false, "constructor": false}, {"identifier": "getFooter", "parameters": "()", "modifiers": "@Override public", "return": "Footer", "signature": "Footer getFooter()", "full_signature": "@Override public Footer getFooter()", "class_method_signature": "StreamingSheet.getFooter()", "testcase": false, "constructor": false}, {"identifier": "setSelected", "parameters": "(boolean value)", "modifiers": "@Override public", "return": "void", "signature": "void setSelected(boolean value)", "full_signature": "@Override public void setSelected(boolean value)", "class_method_signature": "StreamingSheet.setSelected(boolean value)", "testcase": false, "constructor": false}, {"identifier": "getMargin", "parameters": "(short margin)", "modifiers": "@Override public", "return": "double", "signature": "double getMargin(short margin)", "full_signature": "@Override public double getMargin(short margin)", "class_method_signature": "StreamingSheet.getMargin(short margin)", "testcase": false, "constructor": false}, {"identifier": "setMargin", "parameters": "(short margin, double size)", "modifiers": "@Override public", "return": "void", "signature": "void setMargin(short margin, double size)", "full_signature": "@Override public void setMargin(short margin, double size)", "class_method_signature": "StreamingSheet.setMargin(short margin, double size)", "testcase": false, "constructor": false}, {"identifier": "getProtect", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getProtect()", "full_signature": "@Override public boolean getProtect()", "class_method_signature": "StreamingSheet.getProtect()", "testcase": false, "constructor": false}, {"identifier": "protectSheet", "parameters": "(String password)", "modifiers": "@Override public", "return": "void", "signature": "void protectSheet(String password)", "full_signature": "@Override public void protectSheet(String password)", "class_method_signature": "StreamingSheet.protectSheet(String password)", "testcase": false, "constructor": false}, {"identifier": "getScenarioProtect", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getScenarioProtect()", "full_signature": "@Override public boolean getScenarioProtect()", "class_method_signature": "StreamingSheet.getScenarioProtect()", "testcase": false, "constructor": false}, {"identifier": "getTopRow", "parameters": "()", "modifiers": "@Override public", "return": "short", "signature": "short getTopRow()", "full_signature": "@Override public short getTopRow()", "class_method_signature": "StreamingSheet.getTopRow()", "testcase": false, "constructor": false}, {"identifier": "getLeftCol", "parameters": "()", "modifiers": "@Override public", "return": "short", "signature": "short getLeftCol()", "full_signature": "@Override public short getLeftCol()", "class_method_signature": "StreamingSheet.getLeftCol()", "testcase": false, "constructor": false}, {"identifier": "showInPane", "parameters": "(int toprow, int leftcol)", "modifiers": "@Override public", "return": "void", "signature": "void showInPane(int toprow, int leftcol)", "full_signature": "@Override public void showInPane(int toprow, int leftcol)", "class_method_signature": "StreamingSheet.showInPane(int toprow, int leftcol)", "testcase": false, "constructor": false}, {"identifier": "shiftRows", "parameters": "(int startRow, int endRow, int n)", "modifiers": "@Override public", "return": "void", "signature": "void shiftRows(int startRow, int endRow, int n)", "full_signature": "@Override public void shiftRows(int startRow, int endRow, int n)", "class_method_signature": "StreamingSheet.shiftRows(int startRow, int endRow, int n)", "testcase": false, "constructor": false}, {"identifier": "shiftRows", "parameters": "(int startRow, int endRow, int n, boolean copyRowHeight, boolean resetOriginalRowHeight)", "modifiers": "@Override public", "return": "void", "signature": "void shiftRows(int startRow, int endRow, int n, boolean copyRowHeight, boolean resetOriginalRowHeight)", "full_signature": "@Override public void shiftRows(int startRow, int endRow, int n, boolean copyRowHeight, boolean resetOriginalRowHeight)", "class_method_signature": "StreamingSheet.shiftRows(int startRow, int endRow, int n, boolean copyRowHeight, boolean resetOriginalRowHeight)", "testcase": false, "constructor": false}, {"identifier": "shiftColumns", "parameters": "(int startColumn, int endColumn, int n)", "modifiers": "@Override public", "return": "void", "signature": "void shiftColumns(int startColumn, int endColumn, int n)", "full_signature": "@Override public void shiftColumns(int startColumn, int endColumn, int n)", "class_method_signature": "StreamingSheet.shiftColumns(int startColumn, int endColumn, int n)", "testcase": false, "constructor": false}, {"identifier": "createFreezePane", "parameters": "(int colSplit, int rowSplit, int leftmostColumn, int topRow)", "modifiers": "@Override public", "return": "void", "signature": "void createFreezePane(int colSplit, int rowSplit, int leftmostColumn, int topRow)", "full_signature": "@Override public void createFreezePane(int colSplit, int rowSplit, int leftmostColumn, int topRow)", "class_method_signature": "StreamingSheet.createFreezePane(int colSplit, int rowSplit, int leftmostColumn, int topRow)", "testcase": false, "constructor": false}, {"identifier": "createFreezePane", "parameters": "(int colSplit, int rowSplit)", "modifiers": "@Override public", "return": "void", "signature": "void createFreezePane(int colSplit, int rowSplit)", "full_signature": "@Override public void createFreezePane(int colSplit, int rowSplit)", "class_method_signature": "StreamingSheet.createFreezePane(int colSplit, int rowSplit)", "testcase": false, "constructor": false}, {"identifier": "createSplitPane", "parameters": "(int xSplitPos, int ySplitPos, int leftmostColumn, int topRow, int activePane)", "modifiers": "@Override public", "return": "void", "signature": "void createSplitPane(int xSplitPos, int ySplitPos, int leftmostColumn, int topRow, int activePane)", "full_signature": "@Override public void createSplitPane(int xSplitPos, int ySplitPos, int leftmostColumn, int topRow, int activePane)", "class_method_signature": "StreamingSheet.createSplitPane(int xSplitPos, int ySplitPos, int leftmostColumn, int topRow, int activePane)", "testcase": false, "constructor": false}, {"identifier": "getPaneInformation", "parameters": "()", "modifiers": "@Override public", "return": "PaneInformation", "signature": "PaneInformation getPaneInformation()", "full_signature": "@Override public PaneInformation getPaneInformation()", "class_method_signature": "StreamingSheet.getPaneInformation()", "testcase": false, "constructor": false}, {"identifier": "setDisplayGridlines", "parameters": "(boolean show)", "modifiers": "@Override public", "return": "void", "signature": "void setDisplayGridlines(boolean show)", "full_signature": "@Override public void setDisplayGridlines(boolean show)", "class_method_signature": "StreamingSheet.setDisplayGridlines(boolean show)", "testcase": false, "constructor": false}, {"identifier": "isDisplayGridlines", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDisplayGridlines()", "full_signature": "@Override public boolean isDisplayGridlines()", "class_method_signature": "StreamingSheet.isDisplayGridlines()", "testcase": false, "constructor": false}, {"identifier": "setDisplayFormulas", "parameters": "(boolean show)", "modifiers": "@Override public", "return": "void", "signature": "void setDisplayFormulas(boolean show)", "full_signature": "@Override public void setDisplayFormulas(boolean show)", "class_method_signature": "StreamingSheet.setDisplayFormulas(boolean show)", "testcase": false, "constructor": false}, {"identifier": "isDisplayFormulas", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDisplayFormulas()", "full_signature": "@Override public boolean isDisplayFormulas()", "class_method_signature": "StreamingSheet.isDisplayFormulas()", "testcase": false, "constructor": false}, {"identifier": "setDisplayRowColHeadings", "parameters": "(boolean show)", "modifiers": "@Override public", "return": "void", "signature": "void setDisplayRowColHeadings(boolean show)", "full_signature": "@Override public void setDisplayRowColHeadings(boolean show)", "class_method_signature": "StreamingSheet.setDisplayRowColHeadings(boolean show)", "testcase": false, "constructor": false}, {"identifier": "isDisplayRowColHeadings", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDisplayRowColHeadings()", "full_signature": "@Override public boolean isDisplayRowColHeadings()", "class_method_signature": "StreamingSheet.isDisplayRowColHeadings()", "testcase": false, "constructor": false}, {"identifier": "setRowBreak", "parameters": "(int row)", "modifiers": "@Override public", "return": "void", "signature": "void setRowBreak(int row)", "full_signature": "@Override public void setRowBreak(int row)", "class_method_signature": "StreamingSheet.setRowBreak(int row)", "testcase": false, "constructor": false}, {"identifier": "isRowBroken", "parameters": "(int row)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRowBroken(int row)", "full_signature": "@Override public boolean isRowBroken(int row)", "class_method_signature": "StreamingSheet.isRowBroken(int row)", "testcase": false, "constructor": false}, {"identifier": "removeRowBreak", "parameters": "(int row)", "modifiers": "@Override public", "return": "void", "signature": "void removeRowBreak(int row)", "full_signature": "@Override public void removeRowBreak(int row)", "class_method_signature": "StreamingSheet.removeRowBreak(int row)", "testcase": false, "constructor": false}, {"identifier": "getRowBreaks", "parameters": "()", "modifiers": "@Override public", "return": "int[]", "signature": "int[] getRowBreaks()", "full_signature": "@Override public int[] getRowBreaks()", "class_method_signature": "StreamingSheet.getRowBreaks()", "testcase": false, "constructor": false}, {"identifier": "getColumnBreaks", "parameters": "()", "modifiers": "@Override public", "return": "int[]", "signature": "int[] getColumnBreaks()", "full_signature": "@Override public int[] getColumnBreaks()", "class_method_signature": "StreamingSheet.getColumnBreaks()", "testcase": false, "constructor": false}, {"identifier": "setColumnBreak", "parameters": "(int column)", "modifiers": "@Override public", "return": "void", "signature": "void setColumnBreak(int column)", "full_signature": "@Override public void setColumnBreak(int column)", "class_method_signature": "StreamingSheet.setColumnBreak(int column)", "testcase": false, "constructor": false}, {"identifier": "isColumnBroken", "parameters": "(int column)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isColumnBroken(int column)", "full_signature": "@Override public boolean isColumnBroken(int column)", "class_method_signature": "StreamingSheet.isColumnBroken(int column)", "testcase": false, "constructor": false}, {"identifier": "removeColumnBreak", "parameters": "(int column)", "modifiers": "@Override public", "return": "void", "signature": "void removeColumnBreak(int column)", "full_signature": "@Override public void removeColumnBreak(int column)", "class_method_signature": "StreamingSheet.removeColumnBreak(int column)", "testcase": false, "constructor": false}, {"identifier": "setColumnGroupCollapsed", "parameters": "(int columnNumber, boolean collapsed)", "modifiers": "@Override public", "return": "void", "signature": "void setColumnGroupCollapsed(int columnNumber, boolean collapsed)", "full_signature": "@Override public void setColumnGroupCollapsed(int columnNumber, boolean collapsed)", "class_method_signature": "StreamingSheet.setColumnGroupCollapsed(int columnNumber, boolean collapsed)", "testcase": false, "constructor": false}, {"identifier": "groupColumn", "parameters": "(int fromColumn, int toColumn)", "modifiers": "@Override public", "return": "void", "signature": "void groupColumn(int fromColumn, int toColumn)", "full_signature": "@Override public void groupColumn(int fromColumn, int toColumn)", "class_method_signature": "StreamingSheet.groupColumn(int fromColumn, int toColumn)", "testcase": false, "constructor": false}, {"identifier": "ungroupColumn", "parameters": "(int fromColumn, int toColumn)", "modifiers": "@Override public", "return": "void", "signature": "void ungroupColumn(int fromColumn, int toColumn)", "full_signature": "@Override public void ungroupColumn(int fromColumn, int toColumn)", "class_method_signature": "StreamingSheet.ungroupColumn(int fromColumn, int toColumn)", "testcase": false, "constructor": false}, {"identifier": "groupRow", "parameters": "(int fromRow, int toRow)", "modifiers": "@Override public", "return": "void", "signature": "void groupRow(int fromRow, int toRow)", "full_signature": "@Override public void groupRow(int fromRow, int toRow)", "class_method_signature": "StreamingSheet.groupRow(int fromRow, int toRow)", "testcase": false, "constructor": false}, {"identifier": "ungroupRow", "parameters": "(int fromRow, int toRow)", "modifiers": "@Override public", "return": "void", "signature": "void ungroupRow(int fromRow, int toRow)", "full_signature": "@Override public void ungroupRow(int fromRow, int toRow)", "class_method_signature": "StreamingSheet.ungroupRow(int fromRow, int toRow)", "testcase": false, "constructor": false}, {"identifier": "setRowGroupCollapsed", "parameters": "(int row, boolean collapse)", "modifiers": "@Override public", "return": "void", "signature": "void setRowGroupCollapsed(int row, boolean collapse)", "full_signature": "@Override public void setRowGroupCollapsed(int row, boolean collapse)", "class_method_signature": "StreamingSheet.setRowGroupCollapsed(int row, boolean collapse)", "testcase": false, "constructor": false}, {"identifier": "setDefaultColumnStyle", "parameters": "(int column, CellStyle style)", "modifiers": "@Override public", "return": "void", "signature": "void setDefaultColumnStyle(int column, CellStyle style)", "full_signature": "@Override public void setDefaultColumnStyle(int column, CellStyle style)", "class_method_signature": "StreamingSheet.setDefaultColumnStyle(int column, CellStyle style)", "testcase": false, "constructor": false}, {"identifier": "autoSizeColumn", "parameters": "(int column)", "modifiers": "@Override public", "return": "void", "signature": "void autoSizeColumn(int column)", "full_signature": "@Override public void autoSizeColumn(int column)", "class_method_signature": "StreamingSheet.autoSizeColumn(int column)", "testcase": false, "constructor": false}, {"identifier": "autoSizeColumn", "parameters": "(int column, boolean useMergedCells)", "modifiers": "@Override public", "return": "void", "signature": "void autoSizeColumn(int column, boolean useMergedCells)", "full_signature": "@Override public void autoSizeColumn(int column, boolean useMergedCells)", "class_method_signature": "StreamingSheet.autoSizeColumn(int column, boolean useMergedCells)", "testcase": false, "constructor": false}, {"identifier": "createDrawingPatriarch", "parameters": "()", "modifiers": "@Override public", "return": "Drawing", "signature": "Drawing createDrawingPatriarch()", "full_signature": "@Override public Drawing createDrawingPatriarch()", "class_method_signature": "StreamingSheet.createDrawingPatriarch()", "testcase": false, "constructor": false}, {"identifier": "getWorkbook", "parameters": "()", "modifiers": "@Override public", "return": "Workbook", "signature": "Workbook getWorkbook()", "full_signature": "@Override public Workbook getWorkbook()", "class_method_signature": "StreamingSheet.getWorkbook()", "testcase": false, "constructor": false}, {"identifier": "isSelected", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSelected()", "full_signature": "@Override public boolean isSelected()", "class_method_signature": "StreamingSheet.isSelected()", "testcase": false, "constructor": false}, {"identifier": "setArrayFormula", "parameters": "(String formula, CellRangeAddress range)", "modifiers": "@Override public", "return": "CellRange<? extends Cell>", "signature": "CellRange<? extends Cell> setArrayFormula(String formula, CellRangeAddress range)", "full_signature": "@Override public CellRange<? extends Cell> setArrayFormula(String formula, CellRangeAddress range)", "class_method_signature": "StreamingSheet.setArrayFormula(String formula, CellRangeAddress range)", "testcase": false, "constructor": false}, {"identifier": "removeArrayFormula", "parameters": "(Cell cell)", "modifiers": "@Override public", "return": "CellRange<? extends Cell>", "signature": "CellRange<? extends Cell> removeArrayFormula(Cell cell)", "full_signature": "@Override public CellRange<? extends Cell> removeArrayFormula(Cell cell)", "class_method_signature": "StreamingSheet.removeArrayFormula(Cell cell)", "testcase": false, "constructor": false}, {"identifier": "getDataValidationHelper", "parameters": "()", "modifiers": "@Override public", "return": "DataValidationHelper", "signature": "DataValidationHelper getDataValidationHelper()", "full_signature": "@Override public DataValidationHelper getDataValidationHelper()", "class_method_signature": "StreamingSheet.getDataValidationHelper()", "testcase": false, "constructor": false}, {"identifier": "getDataValidations", "parameters": "()", "modifiers": "@Override public", "return": "List<? extends DataValidation>", "signature": "List<? extends DataValidation> getDataValidations()", "full_signature": "@Override public List<? extends DataValidation> getDataValidations()", "class_method_signature": "StreamingSheet.getDataValidations()", "testcase": false, "constructor": false}, {"identifier": "addValidationData", "parameters": "(DataValidation dataValidation)", "modifiers": "@Override public", "return": "void", "signature": "void addValidationData(DataValidation dataValidation)", "full_signature": "@Override public void addValidationData(DataValidation dataValidation)", "class_method_signature": "StreamingSheet.addValidationData(DataValidation dataValidation)", "testcase": false, "constructor": false}, {"identifier": "setAutoFilter", "parameters": "(CellRangeAddress range)", "modifiers": "@Override public", "return": "AutoFilter", "signature": "AutoFilter setAutoFilter(CellRangeAddress range)", "full_signature": "@Override public AutoFilter setAutoFilter(CellRangeAddress range)", "class_method_signature": "StreamingSheet.setAutoFilter(CellRangeAddress range)", "testcase": false, "constructor": false}, {"identifier": "getSheetConditionalFormatting", "parameters": "()", "modifiers": "@Override public", "return": "SheetConditionalFormatting", "signature": "SheetConditionalFormatting getSheetConditionalFormatting()", "full_signature": "@Override public SheetConditionalFormatting getSheetConditionalFormatting()", "class_method_signature": "StreamingSheet.getSheetConditionalFormatting()", "testcase": false, "constructor": false}, {"identifier": "getRepeatingRows", "parameters": "()", "modifiers": "@Override public", "return": "CellRangeAddress", "signature": "CellRangeAddress getRepeatingRows()", "full_signature": "@Override public CellRangeAddress getRepeatingRows()", "class_method_signature": "StreamingSheet.getRepeatingRows()", "testcase": false, "constructor": false}, {"identifier": "getRepeatingColumns", "parameters": "()", "modifiers": "@Override public", "return": "CellRangeAddress", "signature": "CellRangeAddress getRepeatingColumns()", "full_signature": "@Override public CellRangeAddress getRepeatingColumns()", "class_method_signature": "StreamingSheet.getRepeatingColumns()", "testcase": false, "constructor": false}, {"identifier": "setRepeatingRows", "parameters": "(CellRangeAddress rowRangeRef)", "modifiers": "@Override public", "return": "void", "signature": "void setRepeatingRows(CellRangeAddress rowRangeRef)", "full_signature": "@Override public void setRepeatingRows(CellRangeAddress rowRangeRef)", "class_method_signature": "StreamingSheet.setRepeatingRows(CellRangeAddress rowRangeRef)", "testcase": false, "constructor": false}, {"identifier": "setRepeatingColumns", "parameters": "(CellRangeAddress columnRangeRef)", "modifiers": "@Override public", "return": "void", "signature": "void setRepeatingColumns(CellRangeAddress columnRangeRef)", "full_signature": "@Override public void setRepeatingColumns(CellRangeAddress columnRangeRef)", "class_method_signature": "StreamingSheet.setRepeatingColumns(CellRangeAddress columnRangeRef)", "testcase": false, "constructor": false}, {"identifier": "getColumnOutlineLevel", "parameters": "(int columnIndex)", "modifiers": "@Override public", "return": "int", "signature": "int getColumnOutlineLevel(int columnIndex)", "full_signature": "@Override public int getColumnOutlineLevel(int columnIndex)", "class_method_signature": "StreamingSheet.getColumnOutlineLevel(int columnIndex)", "testcase": false, "constructor": false}, {"identifier": "getActiveCell", "parameters": "()", "modifiers": "@Override public", "return": "CellAddress", "signature": "CellAddress getActiveCell()", "full_signature": "@Override public CellAddress getActiveCell()", "class_method_signature": "StreamingSheet.getActiveCell()", "testcase": false, "constructor": false}, {"identifier": "getCellComment", "parameters": "(CellAddress ref)", "modifiers": "@Override public", "return": "Comment", "signature": "Comment getCellComment(CellAddress ref)", "full_signature": "@Override public Comment getCellComment(CellAddress ref)", "class_method_signature": "StreamingSheet.getCellComment(CellAddress ref)", "testcase": false, "constructor": false}, {"identifier": "getCellComments", "parameters": "()", "modifiers": "@Override public", "return": "Map<CellAddress, ? extends Comment>", "signature": "Map<CellAddress, ? extends Comment> getCellComments()", "full_signature": "@Override public Map<CellAddress, ? extends Comment> getCellComments()", "class_method_signature": "StreamingSheet.getCellComments()", "testcase": false, "constructor": false}, {"identifier": "getDrawingPatriarch", "parameters": "()", "modifiers": "@Override public", "return": "Drawing", "signature": "Drawing getDrawingPatriarch()", "full_signature": "@Override public Drawing getDrawingPatriarch()", "class_method_signature": "StreamingSheet.getDrawingPatriarch()", "testcase": false, "constructor": false}, {"identifier": "getHyperlink", "parameters": "(int row, int column)", "modifiers": "@Override public", "return": "Hyperlink", "signature": "Hyperlink getHyperlink(int row, int column)", "full_signature": "@Override public Hyperlink getHyperlink(int row, int column)", "class_method_signature": "StreamingSheet.getHyperlink(int row, int column)", "testcase": false, "constructor": false}, {"identifier": "getHyperlinkList", "parameters": "()", "modifiers": "@Override public", "return": "List<? extends Hyperlink>", "signature": "List<? extends Hyperlink> getHyperlinkList()", "full_signature": "@Override public List<? extends Hyperlink> getHyperlinkList()", "class_method_signature": "StreamingSheet.getHyperlinkList()", "testcase": false, "constructor": false}, {"identifier": "setActiveCell", "parameters": "(CellAddress address)", "modifiers": "@Override public", "return": "void", "signature": "void setActiveCell(CellAddress address)", "full_signature": "@Override public void setActiveCell(CellAddress address)", "class_method_signature": "StreamingSheet.setActiveCell(CellAddress address)", "testcase": false, "constructor": false}, {"identifier": "setZoom", "parameters": "(int scale)", "modifiers": "@Override public", "return": "void", "signature": "void setZoom(int scale)", "full_signature": "@Override public void setZoom(int scale)", "class_method_signature": "StreamingSheet.setZoom(int scale)", "testcase": false, "constructor": false}, {"identifier": "addMergedRegionUnsafe", "parameters": "(CellRangeAddress region)", "modifiers": "@Override public", "return": "int", "signature": "int addMergedRegionUnsafe(CellRangeAddress region)", "full_signature": "@Override public int addMergedRegionUnsafe(CellRangeAddress region)", "class_method_signature": "StreamingSheet.addMergedRegionUnsafe(CellRangeAddress region)", "testcase": false, "constructor": false}, {"identifier": "validateMergedRegions", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void validateMergedRegions()", "full_signature": "@Override public void validateMergedRegions()", "class_method_signature": "StreamingSheet.validateMergedRegions()", "testcase": false, "constructor": false}, {"identifier": "removeMergedRegions", "parameters": "(Collection<Integer> indices)", "modifiers": "@Override public", "return": "void", "signature": "void removeMergedRegions(Collection<Integer> indices)", "full_signature": "@Override public void removeMergedRegions(Collection<Integer> indices)", "class_method_signature": "StreamingSheet.removeMergedRegions(Collection<Integer> indices)", "testcase": false, "constructor": false}, {"identifier": "isPrintRowAndColumnHeadings", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isPrintRowAndColumnHeadings()", "full_signature": "@Override public boolean isPrintRowAndColumnHeadings()", "class_method_signature": "StreamingSheet.isPrintRowAndColumnHeadings()", "testcase": false, "constructor": false}, {"identifier": "setPrintRowAndColumnHeadings", "parameters": "(boolean show)", "modifiers": "@Override public", "return": "void", "signature": "void setPrintRowAndColumnHeadings(boolean show)", "full_signature": "@Override public void setPrintRowAndColumnHeadings(boolean show)", "class_method_signature": "StreamingSheet.setPrintRowAndColumnHeadings(boolean show)", "testcase": false, "constructor": false}, {"identifier": "getHyperlink", "parameters": "(CellAddress addr)", "modifiers": "@Override public", "return": "Hyperlink", "signature": "Hyperlink getHyperlink(CellAddress addr)", "full_signature": "@Override public Hyperlink getHyperlink(CellAddress addr)", "class_method_signature": "StreamingSheet.getHyperlink(CellAddress addr)", "testcase": false, "constructor": false}], "file": "dataprep-backend-service/src/main/java/org/talend/dataprep/schema/xls/streaming/StreamingSheet.java"}, "focal_method": {"identifier": "setColumnBreak", "parameters": "(int column)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void setColumnBreak(int column) {\n        throw new UnsupportedOperationException();\n    }", "signature": "void setColumnBreak(int column)", "full_signature": "@Override public void setColumnBreak(int column)", "class_method_signature": "StreamingSheet.setColumnBreak(int column)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}