{"test_class": {"identifier": "RecorderControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = Logger.getLogger(RecorderControllerTest.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.getLogger(RecorderControllerTest.class.getName())", "var_name": "log"}, {"original_string": "private NetworkTableInstance ntInstance;", "modifier": "private", "type": "NetworkTableInstance", "declarator": "ntInstance", "var_name": "ntInstance"}, {"original_string": "private Recorder recorder;", "modifier": "private", "type": "Recorder", "declarator": "recorder", "var_name": "recorder"}, {"original_string": "private RecorderController controller;", "modifier": "private", "type": "RecorderController", "declarator": "controller", "var_name": "controller"}], "file": "plugins/networktables/src/test/java/edu/wpi/first/shuffleboard/plugin/networktables/RecorderControllerTest.java"}, "test_case": {"identifier": "testSetOnStartup", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSetOnStartup() {\n    final String format = \"already-set-when-connected-${time}\";\n    ntInstance.getEntry(RecorderController.DEFAULT_START_STOP_KEY).setBoolean(true);\n    ntInstance.getEntry(RecorderController.DEFAULT_FILE_NAME_FORMAT_KEY).setString(format);\n    controller.start();\n    ntInstance.waitForEntryListenerQueue(-1);\n    assertAll(\n        () -> assertTrue(recorder.isRunning(), \"Recorder should be running\"),\n        () -> assertEquals(format, recorder.getFileNameFormat(), \"File name format should have been set\")\n    );\n  }", "signature": "void testSetOnStartup()", "full_signature": "@Test public void testSetOnStartup()", "class_method_signature": "RecorderControllerTest.testSetOnStartup()", "testcase": true, "constructor": false, "invocations": ["setBoolean", "getEntry", "setString", "getEntry", "start", "waitForEntryListenerQueue", "assertAll", "assertTrue", "isRunning", "assertEquals", "getFileNameFormat"]}, "focal_class": {"identifier": "RecorderController", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String DEFAULT_RECORDING_ROOT_TABLE = \"/Shuffleboard/.recording\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_RECORDING_ROOT_TABLE = \"/Shuffleboard/.recording\"", "var_name": "DEFAULT_RECORDING_ROOT_TABLE"}, {"original_string": "public static final String DEFAULT_START_STOP_KEY = DEFAULT_RECORDING_ROOT_TABLE + \"/RecordData\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_START_STOP_KEY = DEFAULT_RECORDING_ROOT_TABLE + \"/RecordData\"", "var_name": "DEFAULT_START_STOP_KEY"}, {"original_string": "public static final String DEFAULT_FILE_NAME_FORMAT_KEY = DEFAULT_RECORDING_ROOT_TABLE + \"/FileNameFormat\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_FILE_NAME_FORMAT_KEY = DEFAULT_RECORDING_ROOT_TABLE + \"/FileNameFormat\"", "var_name": "DEFAULT_FILE_NAME_FORMAT_KEY"}, {"original_string": "private final NetworkTableEntry startStopControlEntry;", "modifier": "private final", "type": "NetworkTableEntry", "declarator": "startStopControlEntry", "var_name": "startStopControlEntry"}, {"original_string": "private final NetworkTableEntry fileNameFormatEntry;", "modifier": "private final", "type": "NetworkTableEntry", "declarator": "fileNameFormatEntry", "var_name": "fileNameFormatEntry"}, {"original_string": "private final Recorder recorder;", "modifier": "private final", "type": "Recorder", "declarator": "recorder", "var_name": "recorder"}, {"original_string": "private final MarkerGenerator markerGenerator;", "modifier": "private final", "type": "MarkerGenerator", "declarator": "markerGenerator", "var_name": "markerGenerator"}, {"original_string": "private static final int updateFlags =\n      EntryListenerFlags.kImmediate\n          | EntryListenerFlags.kLocal\n          | EntryListenerFlags.kNew\n          | EntryListenerFlags.kDelete\n          | EntryListenerFlags.kUpdate;", "modifier": "private static final", "type": "int", "declarator": "updateFlags =\n      EntryListenerFlags.kImmediate\n          | EntryListenerFlags.kLocal\n          | EntryListenerFlags.kNew\n          | EntryListenerFlags.kDelete\n          | EntryListenerFlags.kUpdate", "var_name": "updateFlags"}, {"original_string": "private int listenerHandle = 0;", "modifier": "private", "type": "int", "declarator": "listenerHandle = 0", "var_name": "listenerHandle"}, {"original_string": "private int lastControlEntryFlags = -1;", "modifier": "private", "type": "int", "declarator": "lastControlEntryFlags = -1", "var_name": "lastControlEntryFlags"}], "methods": [{"identifier": "createWithDefaultEntries", "parameters": "(NetworkTableInstance ntInstance)", "modifiers": "public static", "return": "RecorderController", "signature": "RecorderController createWithDefaultEntries(NetworkTableInstance ntInstance)", "full_signature": "public static RecorderController createWithDefaultEntries(NetworkTableInstance ntInstance)", "class_method_signature": "RecorderController.createWithDefaultEntries(NetworkTableInstance ntInstance)", "testcase": false, "constructor": false}, {"identifier": "RecorderController", "parameters": "(NetworkTableInstance ntInstance,\n                            String startStopKey,\n                            String fileNameFormatKey,\n                            Recorder recorder)", "modifiers": "public", "return": "", "signature": " RecorderController(NetworkTableInstance ntInstance,\n                            String startStopKey,\n                            String fileNameFormatKey,\n                            Recorder recorder)", "full_signature": "public  RecorderController(NetworkTableInstance ntInstance,\n                            String startStopKey,\n                            String fileNameFormatKey,\n                            Recorder recorder)", "class_method_signature": "RecorderController.RecorderController(NetworkTableInstance ntInstance,\n                            String startStopKey,\n                            String fileNameFormatKey,\n                            Recorder recorder)", "testcase": false, "constructor": true}, {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "RecorderController.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "RecorderController.stop()", "testcase": false, "constructor": false}, {"identifier": "updateControl", "parameters": "(EntryNotification event)", "modifiers": "private", "return": "void", "signature": "void updateControl(EntryNotification event)", "full_signature": "private void updateControl(EntryNotification event)", "class_method_signature": "RecorderController.updateControl(EntryNotification event)", "testcase": false, "constructor": false}], "file": "plugins/networktables/src/main/java/edu/wpi/first/shuffleboard/plugin/networktables/RecorderController.java"}, "focal_method": {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void start() {\n    listenerHandle = startStopControlEntry.addListener(this::updateControl, updateFlags);\n    markerGenerator.start();\n  }", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "RecorderController.start()", "testcase": false, "constructor": false, "invocations": ["addListener", "start"]}, "repository": {"repo_id": 91855299, "url": "https://github.com/wpilibsuite/shuffleboard", "stars": 52, "created": "5/20/2017 12:38:25 AM +00:00", "updates": "2020-01-23T20:11:35+00:00", "fork": "False", "license": "licensed"}}