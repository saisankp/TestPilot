{"test_class": {"identifier": "TransformersTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PublishSubject<String> upstream;", "modifier": "private", "type": "PublishSubject<String>", "declarator": "upstream", "var_name": "upstream"}, {"original_string": "private TestAction action;", "modifier": "private", "type": "TestAction", "declarator": "action", "var_name": "action"}, {"original_string": "private TestScheduler scheduler;", "modifier": "private", "type": "TestScheduler", "declarator": "scheduler", "var_name": "scheduler"}, {"original_string": "private TestConsumer<String> consumer;", "modifier": "private", "type": "TestConsumer<String>", "declarator": "consumer", "var_name": "consumer"}], "file": "mobius-rx/src/test/java/com/spotify/mobius/rx/TransformersTest.java"}, "test_case": {"identifier": "consumerTransformerShouldPropagateCompletion", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void consumerTransformerShouldPropagateCompletion() throws Exception {\n    AssertableSubscriber<Object> subscriber =\n        upstream.compose(Transformers.fromConsumer(consumer, scheduler)).test();\n\n    upstream.onNext(\"hi\");\n    upstream.onCompleted();\n\n    scheduler.triggerActions();\n\n    subscriber.awaitTerminalEvent(1, TimeUnit.SECONDS);\n    subscriber.assertCompleted();\n  }", "signature": "void consumerTransformerShouldPropagateCompletion()", "full_signature": "@Test public void consumerTransformerShouldPropagateCompletion()", "class_method_signature": "TransformersTest.consumerTransformerShouldPropagateCompletion()", "testcase": true, "constructor": false, "invocations": ["test", "compose", "fromConsumer", "onNext", "onCompleted", "triggerActions", "awaitTerminalEvent", "assertCompleted"]}, "focal_class": {"identifier": "Transformers", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Transformers", "parameters": "()", "modifiers": "private", "return": "", "signature": " Transformers()", "full_signature": "private  Transformers()", "class_method_signature": "Transformers.Transformers()", "testcase": false, "constructor": true}, {"identifier": "fromAction", "parameters": "(final Action0 doEffect)", "modifiers": "static", "return": "Transformer<F, E>", "signature": "Transformer<F, E> fromAction(final Action0 doEffect)", "full_signature": "static Transformer<F, E> fromAction(final Action0 doEffect)", "class_method_signature": "Transformers.fromAction(final Action0 doEffect)", "testcase": false, "constructor": false}, {"identifier": "fromAction", "parameters": "(\n      final Action0 doEffect, @Nullable final Scheduler scheduler)", "modifiers": "static", "return": "Transformer<F, E>", "signature": "Transformer<F, E> fromAction(\n      final Action0 doEffect, @Nullable final Scheduler scheduler)", "full_signature": "static Transformer<F, E> fromAction(\n      final Action0 doEffect, @Nullable final Scheduler scheduler)", "class_method_signature": "Transformers.fromAction(\n      final Action0 doEffect, @Nullable final Scheduler scheduler)", "testcase": false, "constructor": false}, {"identifier": "fromConsumer", "parameters": "(final Action1<F> doEffect)", "modifiers": "static", "return": "Transformer<F, E>", "signature": "Transformer<F, E> fromConsumer(final Action1<F> doEffect)", "full_signature": "static Transformer<F, E> fromConsumer(final Action1<F> doEffect)", "class_method_signature": "Transformers.fromConsumer(final Action1<F> doEffect)", "testcase": false, "constructor": false}, {"identifier": "fromConsumer", "parameters": "(\n      final Action1<F> doEffect, @Nullable final Scheduler scheduler)", "modifiers": "static", "return": "Transformer<F, E>", "signature": "Transformer<F, E> fromConsumer(\n      final Action1<F> doEffect, @Nullable final Scheduler scheduler)", "full_signature": "static Transformer<F, E> fromConsumer(\n      final Action1<F> doEffect, @Nullable final Scheduler scheduler)", "class_method_signature": "Transformers.fromConsumer(\n      final Action1<F> doEffect, @Nullable final Scheduler scheduler)", "testcase": false, "constructor": false}, {"identifier": "fromFunction", "parameters": "(\n      final Function<F, E> function, @Nullable final Scheduler scheduler)", "modifiers": "static", "return": "Observable.Transformer<F, E>", "signature": "Observable.Transformer<F, E> fromFunction(\n      final Function<F, E> function, @Nullable final Scheduler scheduler)", "full_signature": "static Observable.Transformer<F, E> fromFunction(\n      final Function<F, E> function, @Nullable final Scheduler scheduler)", "class_method_signature": "Transformers.fromFunction(\n      final Function<F, E> function, @Nullable final Scheduler scheduler)", "testcase": false, "constructor": false}, {"identifier": "fromFunction", "parameters": "(final Function<F, E> function)", "modifiers": "static", "return": "Observable.Transformer<F, E>", "signature": "Observable.Transformer<F, E> fromFunction(final Function<F, E> function)", "full_signature": "static Observable.Transformer<F, E> fromFunction(final Function<F, E> function)", "class_method_signature": "Transformers.fromFunction(final Function<F, E> function)", "testcase": false, "constructor": false}], "file": "mobius-rx/src/main/java/com/spotify/mobius/rx/Transformers.java"}, "focal_method": {"identifier": "fromConsumer", "parameters": "(final Action1<F> doEffect)", "modifiers": "static", "return": "Transformer<F, E>", "body": "static <F, E> Transformer<F, E> fromConsumer(final Action1<F> doEffect) {\n    return fromConsumer(doEffect, null);\n  }", "signature": "Transformer<F, E> fromConsumer(final Action1<F> doEffect)", "full_signature": "static Transformer<F, E> fromConsumer(final Action1<F> doEffect)", "class_method_signature": "Transformers.fromConsumer(final Action1<F> doEffect)", "testcase": false, "constructor": false, "invocations": ["fromConsumer"]}, "repository": {"repo_id": 118132535, "url": "https://github.com/spotify/mobius", "stars": 663, "created": "1/19/2018 2:07:51 PM +00:00", "updates": "2020-01-27T22:05:43+00:00", "fork": "False", "license": "licensed"}}