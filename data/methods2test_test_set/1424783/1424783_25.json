{"test_class": {"identifier": "FixedTableModelTest", "superclass": "extends AndroidplotTest", "interfaces": "", "fields": [], "file": "androidplot-core/src/test/java/com/androidplot/ui/FixedTableModelTest.java"}, "test_case": {"identifier": "testRowMajor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRowMajor() throws Exception {\n        FixedTableModel model = new FixedTableModel(300, 500, TableOrder.ROW_MAJOR);\n\n        RectF tableRect = new RectF(0, 0, 1000, 2000);\n\n        // test the numElement limit:\n        Iterator<RectF> it = model.getIterator(tableRect, 5);\n        assertTrue(it.hasNext());\n        RectF cellRect = it.next();\n        assertEquals(0f, cellRect.left);\n        assertEquals(0f, cellRect.top);\n        assertEquals(300f, cellRect.right);\n        assertEquals(500f, cellRect.bottom);\n\n        assertTrue(it.hasNext());\n        cellRect = it.next();\n        assertEquals(0f, cellRect.left);\n        assertEquals(500f, cellRect.top);\n        assertEquals(300f, cellRect.right);\n        assertEquals(1000f, cellRect.bottom);\n\n        assertTrue(it.hasNext());\n        cellRect = it.next();\n        assertEquals(0f, cellRect.left);\n        assertEquals(1000f, cellRect.top);\n        assertEquals(300f, cellRect.right);\n        assertEquals(1500f, cellRect.bottom);\n\n        assertTrue(it.hasNext());\n        cellRect = it.next();\n        assertEquals(0f, cellRect.left);\n        assertEquals(1500f, cellRect.top);\n        assertEquals(300f, cellRect.right);\n        assertEquals(2000f, cellRect.bottom);\n\n        // next column over\n        assertTrue(it.hasNext());\n        cellRect = it.next();\n        assertEquals(300f, cellRect.left);\n        assertEquals(0f, cellRect.top);\n        assertEquals(600f, cellRect.right);\n        assertEquals(500f, cellRect.bottom);\n    }", "signature": "void testRowMajor()", "full_signature": "@Test public void testRowMajor()", "class_method_signature": "FixedTableModelTest.testRowMajor()", "testcase": true, "constructor": false, "invocations": ["getIterator", "assertTrue", "hasNext", "next", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertTrue", "hasNext", "next", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertTrue", "hasNext", "next", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertTrue", "hasNext", "next", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertTrue", "hasNext", "next", "assertEquals", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "FixedTableModel", "superclass": "extends TableModel", "interfaces": "", "fields": [{"original_string": "private float cellWidth;", "modifier": "private", "type": "float", "declarator": "cellWidth", "var_name": "cellWidth"}, {"original_string": "private float cellHeight;", "modifier": "private", "type": "float", "declarator": "cellHeight", "var_name": "cellHeight"}], "methods": [{"identifier": "FixedTableModel", "parameters": "(float cellWidth, float cellHeight, TableOrder order)", "modifiers": "public", "return": "", "signature": " FixedTableModel(float cellWidth, float cellHeight, TableOrder order)", "full_signature": "public  FixedTableModel(float cellWidth, float cellHeight, TableOrder order)", "class_method_signature": "FixedTableModel.FixedTableModel(float cellWidth, float cellHeight, TableOrder order)", "testcase": false, "constructor": true}, {"identifier": "getIterator", "parameters": "(RectF tableRect, int totalElements)", "modifiers": "@Override public", "return": "Iterator<RectF>", "signature": "Iterator<RectF> getIterator(RectF tableRect, int totalElements)", "full_signature": "@Override public Iterator<RectF> getIterator(RectF tableRect, int totalElements)", "class_method_signature": "FixedTableModel.getIterator(RectF tableRect, int totalElements)", "testcase": false, "constructor": false}, {"identifier": "getCellWidth", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getCellWidth()", "full_signature": "public float getCellWidth()", "class_method_signature": "FixedTableModel.getCellWidth()", "testcase": false, "constructor": false}, {"identifier": "setCellWidth", "parameters": "(float cellWidth)", "modifiers": "public", "return": "void", "signature": "void setCellWidth(float cellWidth)", "full_signature": "public void setCellWidth(float cellWidth)", "class_method_signature": "FixedTableModel.setCellWidth(float cellWidth)", "testcase": false, "constructor": false}, {"identifier": "getCellHeight", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getCellHeight()", "full_signature": "public float getCellHeight()", "class_method_signature": "FixedTableModel.getCellHeight()", "testcase": false, "constructor": false}, {"identifier": "setCellHeight", "parameters": "(float cellHeight)", "modifiers": "public", "return": "void", "signature": "void setCellHeight(float cellHeight)", "full_signature": "public void setCellHeight(float cellHeight)", "class_method_signature": "FixedTableModel.setCellHeight(float cellHeight)", "testcase": false, "constructor": false}], "file": "androidplot-core/src/main/java/com/androidplot/ui/FixedTableModel.java"}, "focal_method": {"identifier": "getIterator", "parameters": "(RectF tableRect, int totalElements)", "modifiers": "@Override public", "return": "Iterator<RectF>", "body": "@Override\n    public Iterator<RectF> getIterator(RectF tableRect, int totalElements) {\n        return new FixedTableModelIterator(this, tableRect, totalElements);\n    }", "signature": "Iterator<RectF> getIterator(RectF tableRect, int totalElements)", "full_signature": "@Override public Iterator<RectF> getIterator(RectF tableRect, int totalElements)", "class_method_signature": "FixedTableModel.getIterator(RectF tableRect, int totalElements)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1424783, "url": "https://github.com/halfhp/androidplot", "language": "Java", "is_fork": false, "fork_count": 129, "stargazer_count": 369, "size": 7178, "license": "licensed"}}