{"test_class": {"identifier": "WebApiUrlProtectedControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private TestConfig testConfig;", "modifier": "@Autowired\n    private", "type": "TestConfig", "declarator": "testConfig", "var_name": "testConfig"}, {"original_string": "private WebTestClient webTestClient;", "modifier": "private", "type": "WebTestClient", "declarator": "webTestClient", "var_name": "webTestClient"}, {"original_string": "private WebClient webClient;", "modifier": "private", "type": "WebClient", "declarator": "webClient", "var_name": "webClient"}], "file": "tictactoe-services/webapi-service/src/test/java/com/tictactoe/webapi/controller/WebApiUrlProtectedControllerTest.java"}, "test_case": {"identifier": "createGame_TokenAuth_Admin_Ok", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createGame_TokenAuth_Admin_Ok() {\n        List<User> users = webClient\n                .get()\n                .uri(USERS_URL)\n                .headers(tokenAuthHeaders(webTestClient, testConfig.getAdminName(), testConfig.getAdminPassword()))\n                .retrieve()\n                .bodyToFlux(User.class)\n                .collect(Collectors.toList())\n                .block();\n        assertNotNull(users);\n        assertTrue(users.size() > 3);\n        webTestClient\n                .post()\n                .uri(GAME_URL)\n                .body(BodyInserters.fromObject(createGame(users.get(0), users.get(1))))\n                .headers(tokenAuthHeaders(webTestClient, testConfig.getAdminName(), testConfig.getAdminPassword()))\n                .exchange()\n                .expectStatus().isOk();\n    }", "signature": "void createGame_TokenAuth_Admin_Ok()", "full_signature": "@Test public void createGame_TokenAuth_Admin_Ok()", "class_method_signature": "WebApiUrlProtectedControllerTest.createGame_TokenAuth_Admin_Ok()", "testcase": true, "constructor": false, "invocations": ["block", "collect", "bodyToFlux", "retrieve", "headers", "uri", "get", "tokenAuthHeaders", "getAdminName", "getAdminPassword", "toList", "assertNotNull", "assertTrue", "size", "isOk", "expectStatus", "exchange", "headers", "body", "uri", "post", "fromObject", "createGame", "get", "get", "tokenAuthHeaders", "getAdminName", "getAdminPassword"]}, "focal_class": {"identifier": "WebApiUrlProtectedController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final WebApiService webApiService;", "modifier": "private final", "type": "WebApiService", "declarator": "webApiService", "var_name": "webApiService"}], "methods": [{"identifier": "WebApiUrlProtectedController", "parameters": "(WebApiService webApiService)", "modifiers": "public", "return": "", "signature": " WebApiUrlProtectedController(WebApiService webApiService)", "full_signature": "public  WebApiUrlProtectedController(WebApiService webApiService)", "class_method_signature": "WebApiUrlProtectedController.WebApiUrlProtectedController(WebApiService webApiService)", "testcase": false, "constructor": true}, {"identifier": "getAllGames", "parameters": "()", "modifiers": "@GetMapping(\"games\") public", "return": "Flux<Game>", "signature": "Flux<Game> getAllGames()", "full_signature": "@GetMapping(\"games\") public Flux<Game> getAllGames()", "class_method_signature": "WebApiUrlProtectedController.getAllGames()", "testcase": false, "constructor": false}, {"identifier": "createGame", "parameters": "(@RequestBody Map<String, Object> gameRequest)", "modifiers": "@PostMapping(\"game\") public", "return": "Mono<Game>", "signature": "Mono<Game> createGame(@RequestBody Map<String, Object> gameRequest)", "full_signature": "@PostMapping(\"game\") public Mono<Game> createGame(@RequestBody Map<String, Object> gameRequest)", "class_method_signature": "WebApiUrlProtectedController.createGame(@RequestBody Map<String, Object> gameRequest)", "testcase": false, "constructor": false}], "file": "tictactoe-services/webapi-service/src/main/java/com/tictactoe/webapi/controller/WebApiUrlProtectedController.java"}, "focal_method": {"identifier": "createGame", "parameters": "(@RequestBody Map<String, Object> gameRequest)", "modifiers": "@PostMapping(\"game\") public", "return": "Mono<Game>", "body": "@PostMapping(\"game\")\n    public Mono<Game> createGame(@RequestBody Map<String, Object> gameRequest) {\n        return webApiService.createGame(gameRequest);\n    }", "signature": "Mono<Game> createGame(@RequestBody Map<String, Object> gameRequest)", "full_signature": "@PostMapping(\"game\") public Mono<Game> createGame(@RequestBody Map<String, Object> gameRequest)", "class_method_signature": "WebApiUrlProtectedController.createGame(@RequestBody Map<String, Object> gameRequest)", "testcase": false, "constructor": false, "invocations": ["createGame"]}, "repository": {"repo_id": 159454491, "url": "https://github.com/lynx-r/tictactoe-microservices-example", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 17, "size": 629, "license": "licensed"}}