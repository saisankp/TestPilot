{"test_class": {"identifier": "DataObjectFactoryImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final DataObjectFactory factory = new DataObjectFactoryImpl();", "modifier": "private final", "type": "DataObjectFactory", "declarator": "factory = new DataObjectFactoryImpl()", "var_name": "factory"}], "file": "wdtk-datamodel/src/test/java/org/wikidata/wdtk/datamodel/implementation/DataObjectFactoryImplTest.java"}, "test_case": {"identifier": "testGetPropertyDocument", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n\tpublic final void testGetPropertyDocument() {\n\t\tPropertyDocument o1 = new PropertyDocumentImpl(\n\t\t\t\tfactory.getPropertyIdValue(\"P42\", \"foo\"),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tfactory.getDatatypeIdValue(DatatypeIdValue.DT_TIME),\n\t\t\t\t0);\n\t\tPropertyDocument o2 = factory.getPropertyDocument(\n\t\t\t\tfactory.getPropertyIdValue(\"P42\", \"foo\"),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tfactory.getDatatypeIdValue(DatatypeIdValue.DT_TIME),\n\t\t\t\t0);\n\t\tassertEquals(o1, o2);\n\t}", "signature": "void testGetPropertyDocument()", "full_signature": "@Test public final void testGetPropertyDocument()", "class_method_signature": "DataObjectFactoryImplTest.testGetPropertyDocument()", "testcase": true, "constructor": false, "invocations": ["getPropertyIdValue", "emptyList", "emptyList", "emptyList", "emptyList", "getDatatypeIdValue", "getPropertyDocument", "getPropertyIdValue", "emptyList", "emptyList", "emptyList", "emptyList", "getDatatypeIdValue", "assertEquals"]}, "focal_class": {"identifier": "DataObjectFactoryImpl", "superclass": "", "interfaces": "implements DataObjectFactory", "fields": [], "methods": [{"identifier": "getItemIdValue", "parameters": "(String id, String siteIri)", "modifiers": "@Override public", "return": "ItemIdValue", "signature": "ItemIdValue getItemIdValue(String id, String siteIri)", "full_signature": "@Override public ItemIdValue getItemIdValue(String id, String siteIri)", "class_method_signature": "DataObjectFactoryImpl.getItemIdValue(String id, String siteIri)", "testcase": false, "constructor": false}, {"identifier": "getPropertyIdValue", "parameters": "(String id, String siteIri)", "modifiers": "@Override public", "return": "PropertyIdValue", "signature": "PropertyIdValue getPropertyIdValue(String id, String siteIri)", "full_signature": "@Override public PropertyIdValue getPropertyIdValue(String id, String siteIri)", "class_method_signature": "DataObjectFactoryImpl.getPropertyIdValue(String id, String siteIri)", "testcase": false, "constructor": false}, {"identifier": "getLexemeIdValue", "parameters": "(String id, String siteIri)", "modifiers": "@Override public", "return": "LexemeIdValue", "signature": "LexemeIdValue getLexemeIdValue(String id, String siteIri)", "full_signature": "@Override public LexemeIdValue getLexemeIdValue(String id, String siteIri)", "class_method_signature": "DataObjectFactoryImpl.getLexemeIdValue(String id, String siteIri)", "testcase": false, "constructor": false}, {"identifier": "getFormIdValue", "parameters": "(String id, String siteIri)", "modifiers": "@Override public", "return": "FormIdValue", "signature": "FormIdValue getFormIdValue(String id, String siteIri)", "full_signature": "@Override public FormIdValue getFormIdValue(String id, String siteIri)", "class_method_signature": "DataObjectFactoryImpl.getFormIdValue(String id, String siteIri)", "testcase": false, "constructor": false}, {"identifier": "getSenseIdValue", "parameters": "(String id, String siteIri)", "modifiers": "@Override public", "return": "SenseIdValue", "signature": "SenseIdValue getSenseIdValue(String id, String siteIri)", "full_signature": "@Override public SenseIdValue getSenseIdValue(String id, String siteIri)", "class_method_signature": "DataObjectFactoryImpl.getSenseIdValue(String id, String siteIri)", "testcase": false, "constructor": false}, {"identifier": "getMediaInfoIdValue", "parameters": "(String id, String siteIri)", "modifiers": "@Override public", "return": "MediaInfoIdValue", "signature": "MediaInfoIdValue getMediaInfoIdValue(String id, String siteIri)", "full_signature": "@Override public MediaInfoIdValue getMediaInfoIdValue(String id, String siteIri)", "class_method_signature": "DataObjectFactoryImpl.getMediaInfoIdValue(String id, String siteIri)", "testcase": false, "constructor": false}, {"identifier": "getDatatypeIdValue", "parameters": "(String id)", "modifiers": "@Override public", "return": "DatatypeIdValue", "signature": "DatatypeIdValue getDatatypeIdValue(String id)", "full_signature": "@Override public DatatypeIdValue getDatatypeIdValue(String id)", "class_method_signature": "DataObjectFactoryImpl.getDatatypeIdValue(String id)", "testcase": false, "constructor": false}, {"identifier": "getTimeValue", "parameters": "(long year, byte month, byte day, byte hour,\n\t\t\tbyte minute, byte second, byte precision, int beforeTolerance,\n\t\t\tint afterTolerance, int timezoneOffset, String calendarModel)", "modifiers": "@Override public", "return": "TimeValue", "signature": "TimeValue getTimeValue(long year, byte month, byte day, byte hour,\n\t\t\tbyte minute, byte second, byte precision, int beforeTolerance,\n\t\t\tint afterTolerance, int timezoneOffset, String calendarModel)", "full_signature": "@Override public TimeValue getTimeValue(long year, byte month, byte day, byte hour,\n\t\t\tbyte minute, byte second, byte precision, int beforeTolerance,\n\t\t\tint afterTolerance, int timezoneOffset, String calendarModel)", "class_method_signature": "DataObjectFactoryImpl.getTimeValue(long year, byte month, byte day, byte hour,\n\t\t\tbyte minute, byte second, byte precision, int beforeTolerance,\n\t\t\tint afterTolerance, int timezoneOffset, String calendarModel)", "testcase": false, "constructor": false}, {"identifier": "getGlobeCoordinatesValue", "parameters": "(double latitude,\n\t\t\tdouble longitude, double precision, String globeIri)", "modifiers": "@Override public", "return": "GlobeCoordinatesValue", "signature": "GlobeCoordinatesValue getGlobeCoordinatesValue(double latitude,\n\t\t\tdouble longitude, double precision, String globeIri)", "full_signature": "@Override public GlobeCoordinatesValue getGlobeCoordinatesValue(double latitude,\n\t\t\tdouble longitude, double precision, String globeIri)", "class_method_signature": "DataObjectFactoryImpl.getGlobeCoordinatesValue(double latitude,\n\t\t\tdouble longitude, double precision, String globeIri)", "testcase": false, "constructor": false}, {"identifier": "getStringValue", "parameters": "(String string)", "modifiers": "@Override public", "return": "StringValue", "signature": "StringValue getStringValue(String string)", "full_signature": "@Override public StringValue getStringValue(String string)", "class_method_signature": "DataObjectFactoryImpl.getStringValue(String string)", "testcase": false, "constructor": false}, {"identifier": "getMonolingualTextValue", "parameters": "(String text,\n\t\t\tString languageCode)", "modifiers": "@Override public", "return": "MonolingualTextValue", "signature": "MonolingualTextValue getMonolingualTextValue(String text,\n\t\t\tString languageCode)", "full_signature": "@Override public MonolingualTextValue getMonolingualTextValue(String text,\n\t\t\tString languageCode)", "class_method_signature": "DataObjectFactoryImpl.getMonolingualTextValue(String text,\n\t\t\tString languageCode)", "testcase": false, "constructor": false}, {"identifier": "getQuantityValue", "parameters": "(BigDecimal numericValue)", "modifiers": "@Override public", "return": "QuantityValue", "signature": "QuantityValue getQuantityValue(BigDecimal numericValue)", "full_signature": "@Override public QuantityValue getQuantityValue(BigDecimal numericValue)", "class_method_signature": "DataObjectFactoryImpl.getQuantityValue(BigDecimal numericValue)", "testcase": false, "constructor": false}, {"identifier": "getQuantityValue", "parameters": "(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound)", "modifiers": "@Override public", "return": "QuantityValue", "signature": "QuantityValue getQuantityValue(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound)", "full_signature": "@Override public QuantityValue getQuantityValue(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound)", "class_method_signature": "DataObjectFactoryImpl.getQuantityValue(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound)", "testcase": false, "constructor": false}, {"identifier": "getQuantityValue", "parameters": "(BigDecimal numericValue, String unit)", "modifiers": "@Override public", "return": "QuantityValue", "signature": "QuantityValue getQuantityValue(BigDecimal numericValue, String unit)", "full_signature": "@Override public QuantityValue getQuantityValue(BigDecimal numericValue, String unit)", "class_method_signature": "DataObjectFactoryImpl.getQuantityValue(BigDecimal numericValue, String unit)", "testcase": false, "constructor": false}, {"identifier": "getQuantityValue", "parameters": "(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound, String unit)", "modifiers": "@Override public", "return": "QuantityValue", "signature": "QuantityValue getQuantityValue(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound, String unit)", "full_signature": "@Override public QuantityValue getQuantityValue(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound, String unit)", "class_method_signature": "DataObjectFactoryImpl.getQuantityValue(BigDecimal numericValue,\n\t\t\tBigDecimal lowerBound, BigDecimal upperBound, String unit)", "testcase": false, "constructor": false}, {"identifier": "getValueSnak", "parameters": "(PropertyIdValue propertyId, Value value)", "modifiers": "@Override public", "return": "ValueSnak", "signature": "ValueSnak getValueSnak(PropertyIdValue propertyId, Value value)", "full_signature": "@Override public ValueSnak getValueSnak(PropertyIdValue propertyId, Value value)", "class_method_signature": "DataObjectFactoryImpl.getValueSnak(PropertyIdValue propertyId, Value value)", "testcase": false, "constructor": false}, {"identifier": "getSomeValueSnak", "parameters": "(PropertyIdValue propertyId)", "modifiers": "@Override public", "return": "SomeValueSnak", "signature": "SomeValueSnak getSomeValueSnak(PropertyIdValue propertyId)", "full_signature": "@Override public SomeValueSnak getSomeValueSnak(PropertyIdValue propertyId)", "class_method_signature": "DataObjectFactoryImpl.getSomeValueSnak(PropertyIdValue propertyId)", "testcase": false, "constructor": false}, {"identifier": "getNoValueSnak", "parameters": "(PropertyIdValue propertyId)", "modifiers": "@Override public", "return": "NoValueSnak", "signature": "NoValueSnak getNoValueSnak(PropertyIdValue propertyId)", "full_signature": "@Override public NoValueSnak getNoValueSnak(PropertyIdValue propertyId)", "class_method_signature": "DataObjectFactoryImpl.getNoValueSnak(PropertyIdValue propertyId)", "testcase": false, "constructor": false}, {"identifier": "getSnakGroup", "parameters": "(List<? extends Snak> snaks)", "modifiers": "@Override public", "return": "SnakGroup", "signature": "SnakGroup getSnakGroup(List<? extends Snak> snaks)", "full_signature": "@Override public SnakGroup getSnakGroup(List<? extends Snak> snaks)", "class_method_signature": "DataObjectFactoryImpl.getSnakGroup(List<? extends Snak> snaks)", "testcase": false, "constructor": false}, {"identifier": "getClaim", "parameters": "(EntityIdValue subject, Snak mainSnak,\n\t\t\tList<SnakGroup> qualifiers)", "modifiers": "@Override public", "return": "Claim", "signature": "Claim getClaim(EntityIdValue subject, Snak mainSnak,\n\t\t\tList<SnakGroup> qualifiers)", "full_signature": "@Override public Claim getClaim(EntityIdValue subject, Snak mainSnak,\n\t\t\tList<SnakGroup> qualifiers)", "class_method_signature": "DataObjectFactoryImpl.getClaim(EntityIdValue subject, Snak mainSnak,\n\t\t\tList<SnakGroup> qualifiers)", "testcase": false, "constructor": false}, {"identifier": "getReference", "parameters": "(List<SnakGroup> snakGroups)", "modifiers": "@Override public", "return": "Reference", "signature": "Reference getReference(List<SnakGroup> snakGroups)", "full_signature": "@Override public Reference getReference(List<SnakGroup> snakGroups)", "class_method_signature": "DataObjectFactoryImpl.getReference(List<SnakGroup> snakGroups)", "testcase": false, "constructor": false}, {"identifier": "getStatement", "parameters": "(Claim claim,\n\t\t\tList<Reference> references, StatementRank rank,\n\t\t\tString statementId)", "modifiers": "@Override public", "return": "Statement", "signature": "Statement getStatement(Claim claim,\n\t\t\tList<Reference> references, StatementRank rank,\n\t\t\tString statementId)", "full_signature": "@Override public Statement getStatement(Claim claim,\n\t\t\tList<Reference> references, StatementRank rank,\n\t\t\tString statementId)", "class_method_signature": "DataObjectFactoryImpl.getStatement(Claim claim,\n\t\t\tList<Reference> references, StatementRank rank,\n\t\t\tString statementId)", "testcase": false, "constructor": false}, {"identifier": "getStatement", "parameters": "(EntityIdValue subject, Snak mainSnak, List<SnakGroup> qualifiers,\n\t\t\tList<Reference> references, StatementRank rank, String statementId)", "modifiers": "@Override public", "return": "Statement", "signature": "Statement getStatement(EntityIdValue subject, Snak mainSnak, List<SnakGroup> qualifiers,\n\t\t\tList<Reference> references, StatementRank rank, String statementId)", "full_signature": "@Override public Statement getStatement(EntityIdValue subject, Snak mainSnak, List<SnakGroup> qualifiers,\n\t\t\tList<Reference> references, StatementRank rank, String statementId)", "class_method_signature": "DataObjectFactoryImpl.getStatement(EntityIdValue subject, Snak mainSnak, List<SnakGroup> qualifiers,\n\t\t\tList<Reference> references, StatementRank rank, String statementId)", "testcase": false, "constructor": false}, {"identifier": "getStatementGroup", "parameters": "(List<Statement> statements)", "modifiers": "@Override public", "return": "StatementGroup", "signature": "StatementGroup getStatementGroup(List<Statement> statements)", "full_signature": "@Override public StatementGroup getStatementGroup(List<Statement> statements)", "class_method_signature": "DataObjectFactoryImpl.getStatementGroup(List<Statement> statements)", "testcase": false, "constructor": false}, {"identifier": "getSiteLink", "parameters": "(String title, String siteKey,\n\t\t\tList<ItemIdValue> badges)", "modifiers": "@Override public", "return": "SiteLink", "signature": "SiteLink getSiteLink(String title, String siteKey,\n\t\t\tList<ItemIdValue> badges)", "full_signature": "@Override public SiteLink getSiteLink(String title, String siteKey,\n\t\t\tList<ItemIdValue> badges)", "class_method_signature": "DataObjectFactoryImpl.getSiteLink(String title, String siteKey,\n\t\t\tList<ItemIdValue> badges)", "testcase": false, "constructor": false}, {"identifier": "getPropertyDocument", "parameters": "(PropertyIdValue propertyId,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId,\n\t\t\tlong revisionId)", "modifiers": "@Override public", "return": "PropertyDocument", "signature": "PropertyDocument getPropertyDocument(PropertyIdValue propertyId,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId,\n\t\t\tlong revisionId)", "full_signature": "@Override public PropertyDocument getPropertyDocument(PropertyIdValue propertyId,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId,\n\t\t\tlong revisionId)", "class_method_signature": "DataObjectFactoryImpl.getPropertyDocument(PropertyIdValue propertyId,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId,\n\t\t\tlong revisionId)", "testcase": false, "constructor": false}, {"identifier": "getItemDocument", "parameters": "(ItemIdValue itemIdValue,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tMap<String, SiteLink> siteLinks, long revisionId)", "modifiers": "@Override public", "return": "ItemDocument", "signature": "ItemDocument getItemDocument(ItemIdValue itemIdValue,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tMap<String, SiteLink> siteLinks, long revisionId)", "full_signature": "@Override public ItemDocument getItemDocument(ItemIdValue itemIdValue,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tMap<String, SiteLink> siteLinks, long revisionId)", "class_method_signature": "DataObjectFactoryImpl.getItemDocument(ItemIdValue itemIdValue,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tMap<String, SiteLink> siteLinks, long revisionId)", "testcase": false, "constructor": false}, {"identifier": "getLexemeDocument", "parameters": "(LexemeIdValue lexemeIdValue,\n\t\t\tItemIdValue lexicalCategory,\n\t\t\tItemIdValue language,\n\t\t\tList<MonolingualTextValue> lemmas,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tList<FormDocument> forms,\n\t\t\tList<SenseDocument> senses,\n\t\t\tlong revisionId)", "modifiers": "@Override public", "return": "LexemeDocument", "signature": "LexemeDocument getLexemeDocument(LexemeIdValue lexemeIdValue,\n\t\t\tItemIdValue lexicalCategory,\n\t\t\tItemIdValue language,\n\t\t\tList<MonolingualTextValue> lemmas,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tList<FormDocument> forms,\n\t\t\tList<SenseDocument> senses,\n\t\t\tlong revisionId)", "full_signature": "@Override public LexemeDocument getLexemeDocument(LexemeIdValue lexemeIdValue,\n\t\t\tItemIdValue lexicalCategory,\n\t\t\tItemIdValue language,\n\t\t\tList<MonolingualTextValue> lemmas,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tList<FormDocument> forms,\n\t\t\tList<SenseDocument> senses,\n\t\t\tlong revisionId)", "class_method_signature": "DataObjectFactoryImpl.getLexemeDocument(LexemeIdValue lexemeIdValue,\n\t\t\tItemIdValue lexicalCategory,\n\t\t\tItemIdValue language,\n\t\t\tList<MonolingualTextValue> lemmas,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tList<FormDocument> forms,\n\t\t\tList<SenseDocument> senses,\n\t\t\tlong revisionId)", "testcase": false, "constructor": false}, {"identifier": "getFormDocument", "parameters": "(FormIdValue formIdValue,\n\t\t\tList<MonolingualTextValue> representations,\n\t\t\tList<ItemIdValue> grammaticalFeatures,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tlong revisionId)", "modifiers": "@Override public", "return": "FormDocument", "signature": "FormDocument getFormDocument(FormIdValue formIdValue,\n\t\t\tList<MonolingualTextValue> representations,\n\t\t\tList<ItemIdValue> grammaticalFeatures,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tlong revisionId)", "full_signature": "@Override public FormDocument getFormDocument(FormIdValue formIdValue,\n\t\t\tList<MonolingualTextValue> representations,\n\t\t\tList<ItemIdValue> grammaticalFeatures,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tlong revisionId)", "class_method_signature": "DataObjectFactoryImpl.getFormDocument(FormIdValue formIdValue,\n\t\t\tList<MonolingualTextValue> representations,\n\t\t\tList<ItemIdValue> grammaticalFeatures,\n\t\t\tList<StatementGroup> statementGroups,\n\t\t\tlong revisionId)", "testcase": false, "constructor": false}, {"identifier": "getSenseDocument", "parameters": "(SenseIdValue senseIdValue,\n\t\t\t\t\t\t\t\t\t\tList<MonolingualTextValue> glosses,\n\t\t\t\t\t\t\t\t\t\tList<StatementGroup> statementGroups,\n\t\t\t\t\t\t\t\t\t\tlong revisionId)", "modifiers": "@Override public", "return": "SenseDocument", "signature": "SenseDocument getSenseDocument(SenseIdValue senseIdValue,\n\t\t\t\t\t\t\t\t\t\tList<MonolingualTextValue> glosses,\n\t\t\t\t\t\t\t\t\t\tList<StatementGroup> statementGroups,\n\t\t\t\t\t\t\t\t\t\tlong revisionId)", "full_signature": "@Override public SenseDocument getSenseDocument(SenseIdValue senseIdValue,\n\t\t\t\t\t\t\t\t\t\tList<MonolingualTextValue> glosses,\n\t\t\t\t\t\t\t\t\t\tList<StatementGroup> statementGroups,\n\t\t\t\t\t\t\t\t\t\tlong revisionId)", "class_method_signature": "DataObjectFactoryImpl.getSenseDocument(SenseIdValue senseIdValue,\n\t\t\t\t\t\t\t\t\t\tList<MonolingualTextValue> glosses,\n\t\t\t\t\t\t\t\t\t\tList<StatementGroup> statementGroups,\n\t\t\t\t\t\t\t\t\t\tlong revisionId)", "testcase": false, "constructor": false}, {"identifier": "getMediaInfoDocument", "parameters": "(MediaInfoIdValue mediaInfoIdValue,\n\t\t\t\t\t\t\t\t\t\tList<MonolingualTextValue> labels,\n\t\t\t\t\t\t\t\t\t\tList<StatementGroup> statementGroups,\n\t\t\t\t\t\t\t\t\t\tlong revisionId)", "modifiers": "@Override public", "return": "MediaInfoDocument", "signature": "MediaInfoDocument getMediaInfoDocument(MediaInfoIdValue mediaInfoIdValue,\n\t\t\t\t\t\t\t\t\t\tList<MonolingualTextValue> labels,\n\t\t\t\t\t\t\t\t\t\tList<StatementGroup> statementGroups,\n\t\t\t\t\t\t\t\t\t\tlong revisionId)", "full_signature": "@Override public MediaInfoDocument getMediaInfoDocument(MediaInfoIdValue mediaInfoIdValue,\n\t\t\t\t\t\t\t\t\t\tList<MonolingualTextValue> labels,\n\t\t\t\t\t\t\t\t\t\tList<StatementGroup> statementGroups,\n\t\t\t\t\t\t\t\t\t\tlong revisionId)", "class_method_signature": "DataObjectFactoryImpl.getMediaInfoDocument(MediaInfoIdValue mediaInfoIdValue,\n\t\t\t\t\t\t\t\t\t\tList<MonolingualTextValue> labels,\n\t\t\t\t\t\t\t\t\t\tList<StatementGroup> statementGroups,\n\t\t\t\t\t\t\t\t\t\tlong revisionId)", "testcase": false, "constructor": false}], "file": "wdtk-datamodel/src/main/java/org/wikidata/wdtk/datamodel/implementation/DataObjectFactoryImpl.java"}, "focal_method": {"identifier": "getPropertyDocument", "parameters": "(PropertyIdValue propertyId,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId,\n\t\t\tlong revisionId)", "modifiers": "@Override public", "return": "PropertyDocument", "body": "@Override\n\tpublic PropertyDocument getPropertyDocument(PropertyIdValue propertyId,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId,\n\t\t\tlong revisionId) {\n\t\treturn new PropertyDocumentImpl(\n\t\t\t\tpropertyId, labels, descriptions, aliases, statementGroups,\n\t\t\t\tdatatypeId,\trevisionId);\n\t}", "signature": "PropertyDocument getPropertyDocument(PropertyIdValue propertyId,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId,\n\t\t\tlong revisionId)", "full_signature": "@Override public PropertyDocument getPropertyDocument(PropertyIdValue propertyId,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId,\n\t\t\tlong revisionId)", "class_method_signature": "DataObjectFactoryImpl.getPropertyDocument(PropertyIdValue propertyId,\n\t\t\tList<MonolingualTextValue> labels,\n\t\t\tList<MonolingualTextValue> descriptions,\n\t\t\tList<MonolingualTextValue> aliases,\n\t\t\tList<StatementGroup> statementGroups, DatatypeIdValue datatypeId,\n\t\t\tlong revisionId)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 16144428, "url": "https://github.com/Wikidata/Wikidata-Toolkit", "language": "Java", "is_fork": false, "fork_count": 80, "stargazer_count": 264, "size": 11241, "license": "licensed"}}