{"test_class": {"identifier": "StringContainerTest", "superclass": "", "interfaces": "", "fields": [], "file": "tsfile/src/test/java/org/apache/iotdb/tsfile/utils/StringContainerTest.java"}, "test_case": {"identifier": "testGetSubString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetSubString() {\n    StringContainer a = new StringContainer();\n    try {\n      a.getSubString(0);\n    } catch (Exception e) {\n      assertTrue(e instanceof IndexOutOfBoundsException);\n    }\n    a.addHead(\"a\", \"bbb\", \"cc\");\n    assertEquals(\"a\", a.getSubString(0));\n    assertEquals(\"cc\", a.getSubString(-1));\n    assertEquals(\"bbb\", a.getSubString(-2));\n    try {\n      a.getSubString(4);\n    } catch (Exception e) {\n      assertTrue(e instanceof IndexOutOfBoundsException);\n    }\n    a.addTail(\"dd\", \"eeee\");\n    assertEquals(\"a\", a.getSubString(0));\n    assertEquals(\"cc\", a.getSubString(-3));\n    assertEquals(\"dd\", a.getSubString(3));\n    assertEquals(\"eeee\", a.getSubString(-1));\n    try {\n      a.getSubString(9);\n    } catch (Exception e) {\n      assertTrue(e instanceof IndexOutOfBoundsException);\n    }\n  }", "signature": "void testGetSubString()", "full_signature": "@Test public void testGetSubString()", "class_method_signature": "StringContainerTest.testGetSubString()", "testcase": true, "constructor": false, "invocations": ["getSubString", "assertTrue", "addHead", "assertEquals", "getSubString", "assertEquals", "getSubString", "assertEquals", "getSubString", "getSubString", "assertTrue", "addTail", "assertEquals", "getSubString", "assertEquals", "getSubString", "assertEquals", "getSubString", "assertEquals", "getSubString", "getSubString", "assertTrue"]}, "focal_class": {"identifier": "StringContainer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String joinSeparator;", "modifier": "private final", "type": "String", "declarator": "joinSeparator", "var_name": "joinSeparator"}, {"original_string": "private StringBuilder stringBuilder;", "modifier": "private", "type": "StringBuilder", "declarator": "stringBuilder", "var_name": "stringBuilder"}, {"original_string": "private ArrayList<String> sequenceList;", "modifier": "private", "type": "ArrayList<String>", "declarator": "sequenceList", "var_name": "sequenceList"}, {"original_string": "private ArrayList<String> reverseList;", "modifier": "private", "type": "ArrayList<String>", "declarator": "reverseList", "var_name": "reverseList"}, {"original_string": "private int totalLength = 0;", "modifier": "private", "type": "int", "declarator": "totalLength = 0", "var_name": "totalLength"}, {"original_string": "private int count = 0;", "modifier": "private", "type": "int", "declarator": "count = 0", "var_name": "count"}, {"original_string": "private boolean isUpdated = true;", "modifier": "private", "type": "boolean", "declarator": "isUpdated = true", "var_name": "isUpdated"}, {"original_string": "private String cache;", "modifier": "private", "type": "String", "declarator": "cache", "var_name": "cache"}], "methods": [{"identifier": "StringContainer", "parameters": "()", "modifiers": "public", "return": "", "signature": " StringContainer()", "full_signature": "public  StringContainer()", "class_method_signature": "StringContainer.StringContainer()", "testcase": false, "constructor": true}, {"identifier": "StringContainer", "parameters": "(String joinSeparator)", "modifiers": "public", "return": "", "signature": " StringContainer(String joinSeparator)", "full_signature": "public  StringContainer(String joinSeparator)", "class_method_signature": "StringContainer.StringContainer(String joinSeparator)", "testcase": false, "constructor": true}, {"identifier": "StringContainer", "parameters": "(String[] strings)", "modifiers": "public", "return": "", "signature": " StringContainer(String[] strings)", "full_signature": "public  StringContainer(String[] strings)", "class_method_signature": "StringContainer.StringContainer(String[] strings)", "testcase": false, "constructor": true}, {"identifier": "StringContainer", "parameters": "(String[] strings, String joinSeparator)", "modifiers": "public", "return": "", "signature": " StringContainer(String[] strings, String joinSeparator)", "full_signature": "public  StringContainer(String[] strings, String joinSeparator)", "class_method_signature": "StringContainer.StringContainer(String[] strings, String joinSeparator)", "testcase": false, "constructor": true}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "StringContainer.size()", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int length()", "full_signature": "public int length()", "class_method_signature": "StringContainer.length()", "testcase": false, "constructor": false}, {"identifier": "getSequenceList", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getSequenceList()", "full_signature": "public List<String> getSequenceList()", "class_method_signature": "StringContainer.getSequenceList()", "testcase": false, "constructor": false}, {"identifier": "getReverseList", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getReverseList()", "full_signature": "public List<String> getReverseList()", "class_method_signature": "StringContainer.getReverseList()", "testcase": false, "constructor": false}, {"identifier": "addTail", "parameters": "(Object... objs)", "modifiers": "public", "return": "StringContainer", "signature": "StringContainer addTail(Object... objs)", "full_signature": "public StringContainer addTail(Object... objs)", "class_method_signature": "StringContainer.addTail(Object... objs)", "testcase": false, "constructor": false}, {"identifier": "addTail", "parameters": "(String... strings)", "modifiers": "public", "return": "StringContainer", "signature": "StringContainer addTail(String... strings)", "full_signature": "public StringContainer addTail(String... strings)", "class_method_signature": "StringContainer.addTail(String... strings)", "testcase": false, "constructor": false}, {"identifier": "addTail", "parameters": "(StringContainer myContainer)", "modifiers": "public", "return": "StringContainer", "signature": "StringContainer addTail(StringContainer myContainer)", "full_signature": "public StringContainer addTail(StringContainer myContainer)", "class_method_signature": "StringContainer.addTail(StringContainer myContainer)", "testcase": false, "constructor": false}, {"identifier": "addHead", "parameters": "(String... strings)", "modifiers": "public", "return": "StringContainer", "signature": "StringContainer addHead(String... strings)", "full_signature": "public StringContainer addHead(String... strings)", "class_method_signature": "StringContainer.addHead(String... strings)", "testcase": false, "constructor": false}, {"identifier": "addHead", "parameters": "(StringContainer myContainer)", "modifiers": "public", "return": "StringContainer", "signature": "StringContainer addHead(StringContainer myContainer)", "full_signature": "public StringContainer addHead(StringContainer myContainer)", "class_method_signature": "StringContainer.addHead(StringContainer myContainer)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "StringContainer.toString()", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(String separator)", "modifiers": "public", "return": "String", "signature": "String join(String separator)", "full_signature": "public String join(String separator)", "class_method_signature": "StringContainer.join(String separator)", "testcase": false, "constructor": false}, {"identifier": "getSubString", "parameters": "(int index)", "modifiers": "public", "return": "String", "signature": "String getSubString(int index)", "full_signature": "public String getSubString(int index)", "class_method_signature": "StringContainer.getSubString(int index)", "testcase": false, "constructor": false}, {"identifier": "getSubStringContainer", "parameters": "(int start, int end)", "modifiers": "public", "return": "StringContainer", "signature": "StringContainer getSubStringContainer(int start, int end)", "full_signature": "public StringContainer getSubStringContainer(int start, int end)", "class_method_signature": "StringContainer.getSubStringContainer(int start, int end)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "StringContainer.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object sc)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object sc)", "full_signature": "@Override public boolean equals(Object sc)", "class_method_signature": "StringContainer.equals(Object sc)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(StringContainer sc)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(StringContainer sc)", "full_signature": "public boolean equals(StringContainer sc)", "class_method_signature": "StringContainer.equals(StringContainer sc)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "StringContainer", "signature": "StringContainer clone()", "full_signature": "@Override public StringContainer clone()", "class_method_signature": "StringContainer.clone()", "testcase": false, "constructor": false}], "file": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/StringContainer.java"}, "focal_method": {"identifier": "getSubString", "parameters": "(int index)", "modifiers": "public", "return": "String", "body": "public String getSubString(int index) {\n    int realIndex = index >= 0 ? index : count + index;\n    if (realIndex < 0 || realIndex >= count) {\n      throw new IndexOutOfBoundsException(String.format(\n          \"Index: %d, Real Index: %d, Size: %d\", index, realIndex, count));\n    }\n    if (realIndex < reverseList.size()) {\n      return reverseList.get(reverseList.size() - 1 - realIndex);\n    } else {\n      return sequenceList.get(realIndex - reverseList.size());\n    }\n  }", "signature": "String getSubString(int index)", "full_signature": "public String getSubString(int index)", "class_method_signature": "StringContainer.getSubString(int index)", "testcase": false, "constructor": false, "invocations": ["format", "size", "get", "size", "get", "size"]}, "repository": {"repo_id": 158975124, "url": "https://github.com/apache/incubator-iotdb", "stars": 449, "created": "11/24/2018 9:29:17 PM +00:00", "updates": "2020-01-21T08:10:15+00:00", "fork": "False", "license": "licensed"}}