{"test_class": {"identifier": "DBMakerTest", "superclass": "", "interfaces": "", "fields": [], "file": "migration/third-party/org.mapdb/src/test/java/org/mapdb/DBMakerTest.java"}, "test_case": {"identifier": "testCacheSoftRefEnable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCacheSoftRefEnable() throws Exception {\n        DB db = DBMaker\n                .newMemoryDB()\n                .journalDisable()\n                .cacheSoftRefEnable()\n                .make();\n        verifyDB(db);\n        assertTrue(db.engine.getClass() == CacheWeakSoftRef.class);\n        assertFalse(((CacheWeakSoftRef)db.engine).useWeakRef);\n    }", "signature": "void testCacheSoftRefEnable()", "full_signature": "@Test public void testCacheSoftRefEnable()", "class_method_signature": "DBMakerTest.testCacheSoftRefEnable()", "testcase": true, "constructor": false, "invocations": ["make", "cacheSoftRefEnable", "journalDisable", "newMemoryDB", "verifyDB", "assertTrue", "getClass", "assertFalse"]}, "focal_class": {"identifier": "DBMaker", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final byte CACHE_DISABLE = 0;", "modifier": "protected static final", "type": "byte", "declarator": "CACHE_DISABLE = 0", "var_name": "CACHE_DISABLE"}, {"original_string": "protected static final byte CACHE_FIXED_HASH_TABLE = 1;", "modifier": "protected static final", "type": "byte", "declarator": "CACHE_FIXED_HASH_TABLE = 1", "var_name": "CACHE_FIXED_HASH_TABLE"}, {"original_string": "protected static final byte CACHE_HARD_REF = 2;", "modifier": "protected static final", "type": "byte", "declarator": "CACHE_HARD_REF = 2", "var_name": "CACHE_HARD_REF"}, {"original_string": "protected static final byte CACHE_WEAK_REF = 3;", "modifier": "protected static final", "type": "byte", "declarator": "CACHE_WEAK_REF = 3", "var_name": "CACHE_WEAK_REF"}, {"original_string": "protected static final byte CACHE_SOFT_REF = 4;", "modifier": "protected static final", "type": "byte", "declarator": "CACHE_SOFT_REF = 4", "var_name": "CACHE_SOFT_REF"}, {"original_string": "protected static final byte CACHE_LRU = 5;", "modifier": "protected static final", "type": "byte", "declarator": "CACHE_LRU = 5", "var_name": "CACHE_LRU"}, {"original_string": "protected byte _cache = CACHE_FIXED_HASH_TABLE;", "modifier": "protected", "type": "byte", "declarator": "_cache = CACHE_FIXED_HASH_TABLE", "var_name": "_cache"}, {"original_string": "protected int _cacheSize = 1024*32;", "modifier": "protected", "type": "int", "declarator": "_cacheSize = 1024*32", "var_name": "_cacheSize"}, {"original_string": "protected File _file;", "modifier": "protected", "type": "File", "declarator": "_file", "var_name": "_file"}, {"original_string": "protected boolean _journalEnabled = true;", "modifier": "protected", "type": "boolean", "declarator": "_journalEnabled = true", "var_name": "_journalEnabled"}, {"original_string": "protected boolean _asyncWriteEnabled = true;", "modifier": "protected", "type": "boolean", "declarator": "_asyncWriteEnabled = true", "var_name": "_asyncWriteEnabled"}, {"original_string": "protected int _asyncFlushDelay = 100;", "modifier": "protected", "type": "int", "declarator": "_asyncFlushDelay = 100", "var_name": "_asyncFlushDelay"}, {"original_string": "protected boolean _deleteFilesAfterClose = false;", "modifier": "protected", "type": "boolean", "declarator": "_deleteFilesAfterClose = false", "var_name": "_deleteFilesAfterClose"}, {"original_string": "protected boolean _readOnly = false;", "modifier": "protected", "type": "boolean", "declarator": "_readOnly = false", "var_name": "_readOnly"}, {"original_string": "protected boolean _closeOnJvmShutdown = false;", "modifier": "protected", "type": "boolean", "declarator": "_closeOnJvmShutdown = false", "var_name": "_closeOnJvmShutdown"}, {"original_string": "protected boolean _compressionEnabled = false;", "modifier": "protected", "type": "boolean", "declarator": "_compressionEnabled = false", "var_name": "_compressionEnabled"}, {"original_string": "protected byte[] _xteaEncryptionKey = null;", "modifier": "protected", "type": "byte[]", "declarator": "_xteaEncryptionKey = null", "var_name": "_xteaEncryptionKey"}, {"original_string": "protected boolean _freeSpaceReclaimDisabled = false;", "modifier": "protected", "type": "boolean", "declarator": "_freeSpaceReclaimDisabled = false", "var_name": "_freeSpaceReclaimDisabled"}, {"original_string": "protected boolean _checksumEnabled = false;", "modifier": "protected", "type": "boolean", "declarator": "_checksumEnabled = false", "var_name": "_checksumEnabled"}, {"original_string": "protected boolean _ifInMemoryUseDirectBuffer = false;", "modifier": "protected", "type": "boolean", "declarator": "_ifInMemoryUseDirectBuffer = false", "var_name": "_ifInMemoryUseDirectBuffer"}, {"original_string": "protected boolean _failOnWrongHeader = false;", "modifier": "protected", "type": "boolean", "declarator": "_failOnWrongHeader = false", "var_name": "_failOnWrongHeader"}, {"original_string": "protected boolean _RAF = false;", "modifier": "protected", "type": "boolean", "declarator": "_RAF = false", "var_name": "_RAF"}, {"original_string": "protected boolean _powerSavingMode = false;", "modifier": "protected", "type": "boolean", "declarator": "_powerSavingMode = false", "var_name": "_powerSavingMode"}, {"original_string": "protected boolean _appendStorage;", "modifier": "protected", "type": "boolean", "declarator": "_appendStorage", "var_name": "_appendStorage"}], "methods": [{"identifier": "DBMaker", "parameters": "()", "modifiers": "protected", "return": "", "signature": " DBMaker()", "full_signature": "protected  DBMaker()", "class_method_signature": "DBMaker.DBMaker()", "testcase": false, "constructor": true}, {"identifier": "newMemoryDB", "parameters": "()", "modifiers": "public static", "return": "DBMaker", "signature": "DBMaker newMemoryDB()", "full_signature": "public static DBMaker newMemoryDB()", "class_method_signature": "DBMaker.newMemoryDB()", "testcase": false, "constructor": false}, {"identifier": "newDirectMemoryDB", "parameters": "()", "modifiers": "public static", "return": "DBMaker", "signature": "DBMaker newDirectMemoryDB()", "full_signature": "public static DBMaker newDirectMemoryDB()", "class_method_signature": "DBMaker.newDirectMemoryDB()", "testcase": false, "constructor": false}, {"identifier": "newAppendFileDB", "parameters": "(File file)", "modifiers": "public static", "return": "DBMaker", "signature": "DBMaker newAppendFileDB(File file)", "full_signature": "public static DBMaker newAppendFileDB(File file)", "class_method_signature": "DBMaker.newAppendFileDB(File file)", "testcase": false, "constructor": false}, {"identifier": "newTempTreeMap", "parameters": "()", "modifiers": "public static", "return": "BTreeMap<K,V>", "signature": "BTreeMap<K,V> newTempTreeMap()", "full_signature": "public static BTreeMap<K,V> newTempTreeMap()", "class_method_signature": "DBMaker.newTempTreeMap()", "testcase": false, "constructor": false}, {"identifier": "newTempHashMap", "parameters": "()", "modifiers": "public static", "return": "HTreeMap<K,V>", "signature": "HTreeMap<K,V> newTempHashMap()", "full_signature": "public static HTreeMap<K,V> newTempHashMap()", "class_method_signature": "DBMaker.newTempHashMap()", "testcase": false, "constructor": false}, {"identifier": "newTempTreeSet", "parameters": "()", "modifiers": "public static", "return": "NavigableSet<K>", "signature": "NavigableSet<K> newTempTreeSet()", "full_signature": "public static NavigableSet<K> newTempTreeSet()", "class_method_signature": "DBMaker.newTempTreeSet()", "testcase": false, "constructor": false}, {"identifier": "newTempHashSet", "parameters": "()", "modifiers": "public static", "return": "Set<K>", "signature": "Set<K> newTempHashSet()", "full_signature": "public static Set<K> newTempHashSet()", "class_method_signature": "DBMaker.newTempHashSet()", "testcase": false, "constructor": false}, {"identifier": "newTempFileDB", "parameters": "()", "modifiers": "public static", "return": "DBMaker", "signature": "DBMaker newTempFileDB()", "full_signature": "public static DBMaker newTempFileDB()", "class_method_signature": "DBMaker.newTempFileDB()", "testcase": false, "constructor": false}, {"identifier": "newFileDB", "parameters": "(File file)", "modifiers": "public static", "return": "DBMaker", "signature": "DBMaker newFileDB(File file)", "full_signature": "public static DBMaker newFileDB(File file)", "class_method_signature": "DBMaker.newFileDB(File file)", "testcase": false, "constructor": false}, {"identifier": "journalDisable", "parameters": "()", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker journalDisable()", "full_signature": "public DBMaker journalDisable()", "class_method_signature": "DBMaker.journalDisable()", "testcase": false, "constructor": false}, {"identifier": "cacheDisable", "parameters": "()", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker cacheDisable()", "full_signature": "public DBMaker cacheDisable()", "class_method_signature": "DBMaker.cacheDisable()", "testcase": false, "constructor": false}, {"identifier": "cacheHardRefEnable", "parameters": "()", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker cacheHardRefEnable()", "full_signature": "public DBMaker cacheHardRefEnable()", "class_method_signature": "DBMaker.cacheHardRefEnable()", "testcase": false, "constructor": false}, {"identifier": "cacheWeakRefEnable", "parameters": "()", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker cacheWeakRefEnable()", "full_signature": "public DBMaker cacheWeakRefEnable()", "class_method_signature": "DBMaker.cacheWeakRefEnable()", "testcase": false, "constructor": false}, {"identifier": "cacheSoftRefEnable", "parameters": "()", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker cacheSoftRefEnable()", "full_signature": "public DBMaker cacheSoftRefEnable()", "class_method_signature": "DBMaker.cacheSoftRefEnable()", "testcase": false, "constructor": false}, {"identifier": "cacheLRUEnable", "parameters": "()", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker cacheLRUEnable()", "full_signature": "public DBMaker cacheLRUEnable()", "class_method_signature": "DBMaker.cacheLRUEnable()", "testcase": false, "constructor": false}, {"identifier": "randomAccessFileEnable", "parameters": "()", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker randomAccessFileEnable()", "full_signature": "public DBMaker randomAccessFileEnable()", "class_method_signature": "DBMaker.randomAccessFileEnable()", "testcase": false, "constructor": false}, {"identifier": "randomAccessFileEnableIfNeeded", "parameters": "()", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker randomAccessFileEnableIfNeeded()", "full_signature": "public DBMaker randomAccessFileEnableIfNeeded()", "class_method_signature": "DBMaker.randomAccessFileEnableIfNeeded()", "testcase": false, "constructor": false}, {"identifier": "cacheSize", "parameters": "(int cacheSize)", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker cacheSize(int cacheSize)", "full_signature": "public DBMaker cacheSize(int cacheSize)", "class_method_signature": "DBMaker.cacheSize(int cacheSize)", "testcase": false, "constructor": false}, {"identifier": "asyncWriteDisable", "parameters": "()", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker asyncWriteDisable()", "full_signature": "public DBMaker asyncWriteDisable()", "class_method_signature": "DBMaker.asyncWriteDisable()", "testcase": false, "constructor": false}, {"identifier": "asyncFlushDelay", "parameters": "(int delay)", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker asyncFlushDelay(int delay)", "full_signature": "public DBMaker asyncFlushDelay(int delay)", "class_method_signature": "DBMaker.asyncFlushDelay(int delay)", "testcase": false, "constructor": false}, {"identifier": "deleteFilesAfterClose", "parameters": "()", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker deleteFilesAfterClose()", "full_signature": "public DBMaker deleteFilesAfterClose()", "class_method_signature": "DBMaker.deleteFilesAfterClose()", "testcase": false, "constructor": false}, {"identifier": "closeOnJvmShutdown", "parameters": "()", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker closeOnJvmShutdown()", "full_signature": "public DBMaker closeOnJvmShutdown()", "class_method_signature": "DBMaker.closeOnJvmShutdown()", "testcase": false, "constructor": false}, {"identifier": "compressionEnable", "parameters": "()", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker compressionEnable()", "full_signature": "public DBMaker compressionEnable()", "class_method_signature": "DBMaker.compressionEnable()", "testcase": false, "constructor": false}, {"identifier": "encryptionEnable", "parameters": "(String password)", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker encryptionEnable(String password)", "full_signature": "public DBMaker encryptionEnable(String password)", "class_method_signature": "DBMaker.encryptionEnable(String password)", "testcase": false, "constructor": false}, {"identifier": "encryptionEnable", "parameters": "(byte[] password)", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker encryptionEnable(byte[] password)", "full_signature": "public DBMaker encryptionEnable(byte[] password)", "class_method_signature": "DBMaker.encryptionEnable(byte[] password)", "testcase": false, "constructor": false}, {"identifier": "checksumEnable", "parameters": "()", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker checksumEnable()", "full_signature": "public DBMaker checksumEnable()", "class_method_signature": "DBMaker.checksumEnable()", "testcase": false, "constructor": false}, {"identifier": "readOnly", "parameters": "()", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker readOnly()", "full_signature": "public DBMaker readOnly()", "class_method_signature": "DBMaker.readOnly()", "testcase": false, "constructor": false}, {"identifier": "freeSpaceReclaimDisable", "parameters": "()", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker freeSpaceReclaimDisable()", "full_signature": "public DBMaker freeSpaceReclaimDisable()", "class_method_signature": "DBMaker.freeSpaceReclaimDisable()", "testcase": false, "constructor": false}, {"identifier": "powerSavingModeEnable", "parameters": "()", "modifiers": "public", "return": "DBMaker", "signature": "DBMaker powerSavingModeEnable()", "full_signature": "public DBMaker powerSavingModeEnable()", "class_method_signature": "DBMaker.powerSavingModeEnable()", "testcase": false, "constructor": false}, {"identifier": "make", "parameters": "()", "modifiers": "public", "return": "DB", "signature": "DB make()", "full_signature": "public DB make()", "class_method_signature": "DBMaker.make()", "testcase": false, "constructor": false}, {"identifier": "makeTxMaker", "parameters": "()", "modifiers": "public", "return": "TxMaker", "signature": "TxMaker makeTxMaker()", "full_signature": "public TxMaker makeTxMaker()", "class_method_signature": "DBMaker.makeTxMaker()", "testcase": false, "constructor": false}, {"identifier": "makeEngine", "parameters": "()", "modifiers": "public", "return": "Engine", "signature": "Engine makeEngine()", "full_signature": "public Engine makeEngine()", "class_method_signature": "DBMaker.makeEngine()", "testcase": false, "constructor": false}], "file": "migration/third-party/org.mapdb/src/main/java/org/mapdb/DBMaker.java"}, "focal_method": {"identifier": "cacheSoftRefEnable", "parameters": "()", "modifiers": "public", "return": "DBMaker", "body": "public DBMaker cacheSoftRefEnable(){\n        this._cache = CACHE_SOFT_REF;\n        return this;\n    }", "signature": "DBMaker cacheSoftRefEnable()", "full_signature": "public DBMaker cacheSoftRefEnable()", "class_method_signature": "DBMaker.cacheSoftRefEnable()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 113878762, "url": "https://github.com/crossminer/scava", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 16, "size": 1903904, "license": "licensed"}}