{"test_class": {"identifier": "SelectorLabelSetDisplayerTest", "superclass": "extends AbstractDisplayerTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    SyncBeanManager beanManager;", "modifier": "@Mock", "type": "SyncBeanManager", "declarator": "beanManager", "var_name": "beanManager"}, {"original_string": "@Mock\n    SyncBeanDef<SelectorLabelItem> labelItemBean;", "modifier": "@Mock", "type": "SyncBeanDef<SelectorLabelItem>", "declarator": "labelItemBean", "var_name": "labelItemBean"}, {"original_string": "@Mock\n    SelectorLabelItem labelItem;", "modifier": "@Mock", "type": "SelectorLabelItem", "declarator": "labelItem", "var_name": "labelItem"}], "file": "dashbuilder-client/dashbuilder-renderers/dashbuilder-renderer-default/src/test/java/org/dashbuilder/renderer/client/selector/SelectorLabelSetDisplayerTest.java"}, "test_case": {"identifier": "testNullNotShown", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNullNotShown() {\n        DisplayerSettings departmentList = DisplayerSettingsFactory.newSelectorSettings()\n                .dataset(EXPENSES)\n                .group(COLUMN_DEPARTMENT)\n                .column(COLUMN_DEPARTMENT)\n                .column(COLUMN_ID, AggregateFunctionType.COUNT)\n                .buildSettings();\n\n        // Insert a null entry into the dataset\n        DataSet expensesDataSet = clientDataSetManager.getDataSet(EXPENSES);\n        int column = expensesDataSet.getColumnIndex(expensesDataSet.getColumnById(COLUMN_DEPARTMENT));\n        expensesDataSet.setValueAt(0, column, null);\n\n        // ... and make sure it's not shown\n        SelectorLabelSetDisplayer presenter = createSelectorDisplayer(departmentList);\n        SelectorLabelSetDisplayer.View view = presenter.getView();\n        presenter.draw();\n\n        verify(view, times(5)).addItem(any());\n        verify(view, never()).addItem(null);\n    }", "signature": "void testNullNotShown()", "full_signature": "@Test public void testNullNotShown()", "class_method_signature": "SelectorLabelSetDisplayerTest.testNullNotShown()", "testcase": true, "constructor": false, "invocations": ["buildSettings", "column", "column", "group", "dataset", "newSelectorSettings", "getDataSet", "getColumnIndex", "getColumnById", "setValueAt", "createSelectorDisplayer", "getView", "draw", "addItem", "verify", "times", "any", "addItem", "verify", "never"]}, "focal_class": {"identifier": "SelectorLabelSetDisplayer", "superclass": "extends AbstractErraiDisplayer<SelectorLabelSetDisplayer.View>", "interfaces": "", "fields": [{"original_string": "protected View view;", "modifier": "protected", "type": "View", "declarator": "view", "var_name": "view"}, {"original_string": "protected boolean filterOn = false;", "modifier": "protected", "type": "boolean", "declarator": "filterOn = false", "var_name": "filterOn"}, {"original_string": "protected boolean multipleSelections = false;", "modifier": "protected", "type": "boolean", "declarator": "multipleSelections = false", "var_name": "multipleSelections"}, {"original_string": "protected SyncBeanManager beanManager;", "modifier": "protected", "type": "SyncBeanManager", "declarator": "beanManager", "var_name": "beanManager"}, {"original_string": "protected Set<SelectorLabelItem> itemCollection = new HashSet<>();", "modifier": "protected", "type": "Set<SelectorLabelItem>", "declarator": "itemCollection = new HashSet<>()", "var_name": "itemCollection"}], "methods": [{"identifier": "SelectorLabelSetDisplayer", "parameters": "(View view, SyncBeanManager beanManager)", "modifiers": "@Inject public", "return": "", "signature": " SelectorLabelSetDisplayer(View view, SyncBeanManager beanManager)", "full_signature": "@Inject public  SelectorLabelSetDisplayer(View view, SyncBeanManager beanManager)", "class_method_signature": "SelectorLabelSetDisplayer.SelectorLabelSetDisplayer(View view, SyncBeanManager beanManager)", "testcase": false, "constructor": true}, {"identifier": "getView", "parameters": "()", "modifiers": "@Override public", "return": "View", "signature": "View getView()", "full_signature": "@Override public View getView()", "class_method_signature": "SelectorLabelSetDisplayer.getView()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "SelectorLabelSetDisplayer.close()", "testcase": false, "constructor": false}, {"identifier": "clearItems", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void clearItems()", "full_signature": "protected void clearItems()", "class_method_signature": "SelectorLabelSetDisplayer.clearItems()", "testcase": false, "constructor": false}, {"identifier": "resetItems", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void resetItems()", "full_signature": "protected void resetItems()", "class_method_signature": "SelectorLabelSetDisplayer.resetItems()", "testcase": false, "constructor": false}, {"identifier": "createDisplayerConstraints", "parameters": "()", "modifiers": "@Override public", "return": "DisplayerConstraints", "signature": "DisplayerConstraints createDisplayerConstraints()", "full_signature": "@Override public DisplayerConstraints createDisplayerConstraints()", "class_method_signature": "SelectorLabelSetDisplayer.createDisplayerConstraints()", "testcase": false, "constructor": false}, {"identifier": "beforeDataSetLookup", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void beforeDataSetLookup()", "full_signature": "@Override protected void beforeDataSetLookup()", "class_method_signature": "SelectorLabelSetDisplayer.beforeDataSetLookup()", "testcase": false, "constructor": false}, {"identifier": "createVisualization", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void createVisualization()", "full_signature": "@Override protected void createVisualization()", "class_method_signature": "SelectorLabelSetDisplayer.createVisualization()", "testcase": false, "constructor": false}, {"identifier": "updateVisualization", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void updateVisualization()", "full_signature": "@Override protected void updateVisualization()", "class_method_signature": "SelectorLabelSetDisplayer.updateVisualization()", "testcase": false, "constructor": false}, {"identifier": "getFirstColumnId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFirstColumnId()", "full_signature": "public String getFirstColumnId()", "class_method_signature": "SelectorLabelSetDisplayer.getFirstColumnId()", "testcase": false, "constructor": false}, {"identifier": "onItemSelected", "parameters": "(SelectorLabelItem item)", "modifiers": "", "return": "void", "signature": "void onItemSelected(SelectorLabelItem item)", "full_signature": " void onItemSelected(SelectorLabelItem item)", "class_method_signature": "SelectorLabelSetDisplayer.onItemSelected(SelectorLabelItem item)", "testcase": false, "constructor": false}, {"identifier": "onItemReset", "parameters": "(SelectorLabelItem item)", "modifiers": "", "return": "void", "signature": "void onItemReset(SelectorLabelItem item)", "full_signature": " void onItemReset(SelectorLabelItem item)", "class_method_signature": "SelectorLabelSetDisplayer.onItemReset(SelectorLabelItem item)", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-renderers/dashbuilder-renderer-default/src/main/java/org/dashbuilder/renderer/client/selector/SelectorLabelSetDisplayer.java"}, "focal_method": {"identifier": "getView", "parameters": "()", "modifiers": "@Override public", "return": "View", "body": "@Override\n    public View getView() {\n        return view;\n    }", "signature": "View getView()", "full_signature": "@Override public View getView()", "class_method_signature": "SelectorLabelSetDisplayer.getView()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}