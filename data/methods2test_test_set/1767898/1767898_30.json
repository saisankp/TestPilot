{"test_class": {"identifier": "CompanyTemplateTest", "superclass": "extends AbstractLinkedInApiTest", "interfaces": "", "fields": [], "file": "spring-social-linkedin/src/test/java/org/springframework/social/linkedin/api/impl/CompanyTemplateTest.java"}, "test_case": {"identifier": "search", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void search() {\n\t\tmockServer.expect(requestTo(CompanyTemplate.COMPANY_SEARCH_URL.replaceFirst(\"\\\\{keywords\\\\}\", \"spring%20j2ee\") + \"&oauth2_access_token=ACCESS_TOKEN\")).andExpect(method(GET))\n\t\t\t.andRespond(withSuccess(new ClassPathResource(\"company_search.json\", getClass()), MediaType.APPLICATION_JSON));\n\t\tCompanies result = linkedIn.companyOperations().search(\"spring j2ee\");\n\t\t\n\t\tassertEquals(10, result.getCount());\n\t\tassertEquals(0, result.getStart());\n\t\tassertEquals(88, result.getTotal());\n\t\tassertEquals(10, result.getCompanies().size());\n\t\t\n\t\tCompany company = result.getCompanies().get(0);\n\t\tassertEquals(\"\", company.getBlogRssUrl());\n\t\tassertEquals(\"P\", company.getCompanyType().getCode());\n\t\tassertEquals(\"Privately Held\", company.getCompanyType().getName());\n\t\tassertEquals(\"Rain Concert Technologies (P) Ltd, is a leading provider of Web-Mobile-Electronics convergent solutions and has capabilities that span across various domains, applications and technologies. Very strong Web-Mobile convergent solutions are at its best with Rain Concert.\\r\\nOur spectrum of  solutions range from  High End Web Application Development, Rich Internet Applications, iphone/ipad Applications, e-Governance solutions, Social Networking Applications, Online Learning Management Systems, Web Casting Applications, Web Based CRM & ERP Solutions, Collaborative Video Sharing Platforms, e-Commerce Applications, Online Auction & e-Commerce Portals,  to development of Games for Web & Mobile, Enterprise domain solutions. \\r\\nThe company has a Regional Office in Delhi and has set up offices in Saudi, Dubai and soon to launch its office in Bahrain and has strategic partners in USA, Bahrain and UAE. Aarthika Technologies, the subsidiary of Rain Concert has a strong presence in the online sales platform and continues to maintain its position as a Top Rated Company. \\r\\n\\r\\n\\r\\nTechnology Expertise\\r\\n\\r\\nRich Internet Applications\\r\\n\\r\\nInteractive 3D\\r\\nAs3, Flash, Flex\\r\\nAdobe AIR, Paper Vision 3D\\r\\nFlash Media Server\\r\\nWowsa Server\\r\\n\\r\\nMobile \\r\\n\\r\\nIphone, ipad,\\r\\nAndroid, BlackBerry, J2Me, Symbian\\r\\n\\r\\nWeb \\r\\n\\r\\nPHP, Ruby on Rail, Perl, .Net,\\r\\nJ2EE, Hibernete, Spring\\r\\nMySQl, MSSQL, Oracle\\r\\n\\r\\nElectronics\\r\\n\\r\\nUtility Electronics\\r\\nHigh-end Security Products\\r\\nConvergent Applications\", company.getDescription());\n\t\tassertEquals(\"aarthikaindia.com\", company.getEmailDomains().get(0));\n\t\tassertEquals(\"D\", company.getEmployeeCountRange().getCode());\n\t\tassertEquals(\"51-200\", company.getEmployeeCountRange().getName());\n\t\tassertEquals(2006, company.getFoundedYear());\n\t\tassertEquals(202421, company.getId());\n\t\tassertEquals(\"Information Technology and Services\", company.getIndustry());\n\t\tassertEquals(1, company.getLocations().size());\n\t\tassertEquals(\"Trivandrum\", company.getLocations().get(0).getAddress().getCity());\n\t\tassertEquals(\"695010\", company.getLocations().get(0).getAddress().getPostalCode());\n\t\tassertEquals(\"Thejaswini\", company.getLocations().get(0).getAddress().getStreet1());\n\t\tassertEquals(\"Rain Concert Technologies (P) Ltd. / Aarthika Technologies\", company.getName());\n\t\tassertEquals(166, company.getNumFollowers());\n\t\tassertEquals(7, company.getSpecialties().size());\n\t\tassertEquals(\"Web Application Development\", company.getSpecialties().get(0));\n\t\tassertEquals(\"OPR\", company.getStatus().getCode());\n\t\tassertEquals(\"Operating\", company.getStatus().getName());\n\t\tassertEquals(\"\", company.getTwitterId());\n\t\tassertEquals(\"rain-concert-technologies-p-ltd.-aarthika-technologies\", company.getUniversalName());\n\t\tassertEquals(\"www.rainconcert.in\", company.getWebsiteUrl());\n\t}", "signature": "void search()", "full_signature": "@Test public void search()", "class_method_signature": "CompanyTemplateTest.search()", "testcase": true, "constructor": false, "invocations": ["andRespond", "andExpect", "expect", "requestTo", "replaceFirst", "method", "withSuccess", "getClass", "search", "companyOperations", "assertEquals", "getCount", "assertEquals", "getStart", "assertEquals", "getTotal", "assertEquals", "size", "getCompanies", "get", "getCompanies", "assertEquals", "getBlogRssUrl", "assertEquals", "getCode", "getCompanyType", "assertEquals", "getName", "getCompanyType", "assertEquals", "getDescription", "assertEquals", "get", "getEmailDomains", "assertEquals", "getCode", "getEmployeeCountRange", "assertEquals", "getName", "getEmployeeCountRange", "assertEquals", "getFoundedYear", "assertEquals", "getId", "assertEquals", "getIndustry", "assertEquals", "size", "getLocations", "assertEquals", "getCity", "getAddress", "get", "getLocations", "assertEquals", "getPostalCode", "getAddress", "get", "getLocations", "assertEquals", "getStreet1", "getAddress", "get", "getLocations", "assertEquals", "getName", "assertEquals", "getNumFollowers", "assertEquals", "size", "getSpecialties", "assertEquals", "get", "getSpecialties", "assertEquals", "getCode", "getStatus", "assertEquals", "getName", "getStatus", "assertEquals", "getTwitterId", "assertEquals", "getUniversalName", "assertEquals", "getWebsiteUrl"]}, "focal_class": {"identifier": "CompanyTemplate", "superclass": "extends AbstractTemplate", "interfaces": "implements CompanyOperations", "fields": [{"original_string": "private final RestOperations restOperations;", "modifier": "private final", "type": "RestOperations", "declarator": "restOperations", "var_name": "restOperations"}, {"original_string": "private final ObjectMapper objectMapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}, {"original_string": "public static final String BASE_URL = \"https://api.linkedin.com/v1/\";", "modifier": "public static final", "type": "String", "declarator": "BASE_URL = \"https://api.linkedin.com/v1/\"", "var_name": "BASE_URL"}, {"original_string": "public static final String COMPANY_FIELDS = \"(id,name,universal-name,email-domains,company-type,ticker,website-url,industry,status,logo-url,square-logo-url,blog-rss-url,twitter-id,employee-count-range,specialties,locations,description,stock-exchange,founded-year,end-year,num-followers)\";", "modifier": "public static final", "type": "String", "declarator": "COMPANY_FIELDS = \"(id,name,universal-name,email-domains,company-type,ticker,website-url,industry,status,logo-url,square-logo-url,blog-rss-url,twitter-id,employee-count-range,specialties,locations,description,stock-exchange,founded-year,end-year,num-followers)\"", "var_name": "COMPANY_FIELDS"}, {"original_string": "public static final String COMPANY_URL = BASE_URL + \"companies{id}:\" + COMPANY_FIELDS + \"?{filter}\";", "modifier": "public static final", "type": "String", "declarator": "COMPANY_URL = BASE_URL + \"companies{id}:\" + COMPANY_FIELDS + \"?{filter}\"", "var_name": "COMPANY_URL"}, {"original_string": "public static final String COMPANY_SEARCH_URL = BASE_URL + \"company-search:(companies:\" + COMPANY_FIELDS + \")?keywords={keywords}\";", "modifier": "public static final", "type": "String", "declarator": "COMPANY_SEARCH_URL = BASE_URL + \"company-search:(companies:\" + COMPANY_FIELDS + \")?keywords={keywords}\"", "var_name": "COMPANY_SEARCH_URL"}, {"original_string": "public static final String COMPANY_FOLLOW_URL = BASE_URL + \"people/~/following/companies:\" + COMPANY_FIELDS;", "modifier": "public static final", "type": "String", "declarator": "COMPANY_FOLLOW_URL = BASE_URL + \"people/~/following/companies:\" + COMPANY_FIELDS", "var_name": "COMPANY_FOLLOW_URL"}, {"original_string": "public static final String COMPANY_FOLLOW_START_STOP_URL = BASE_URL + \"people/~/following/companies/id={id}\";", "modifier": "public static final", "type": "String", "declarator": "COMPANY_FOLLOW_START_STOP_URL = BASE_URL + \"people/~/following/companies/id={id}\"", "var_name": "COMPANY_FOLLOW_START_STOP_URL"}, {"original_string": "public static final String COMPANY_SUGGESTIONS_TO_FOLLOW = BASE_URL + \"people/~/suggestions/to-follow/companies:\" + COMPANY_FIELDS;", "modifier": "public static final", "type": "String", "declarator": "COMPANY_SUGGESTIONS_TO_FOLLOW = BASE_URL + \"people/~/suggestions/to-follow/companies:\" + COMPANY_FIELDS", "var_name": "COMPANY_SUGGESTIONS_TO_FOLLOW"}, {"original_string": "public static final String PRODUCT_FIELDS=\"(id,name,type,creation-timestamp,logo-url,description,features,video:(title,url),product-deal:(title,url,text),sales-persons,num-recommendations,recommendations:(recommender,id,product-id,text,reply,timestamp,likes:(timestamp,person)),product-category,website-url,disclaimer)\";", "modifier": "public static final", "type": "String", "declarator": "PRODUCT_FIELDS=\"(id,name,type,creation-timestamp,logo-url,description,features,video:(title,url),product-deal:(title,url,text),sales-persons,num-recommendations,recommendations:(recommender,id,product-id,text,reply,timestamp,likes:(timestamp,person)),product-category,website-url,disclaimer)\"", "var_name": "PRODUCT_FIELDS"}, {"original_string": "public static final String PRODUCTS_URL = BASE_URL + \"companies/{id}/products:\" + PRODUCT_FIELDS +\"?start={start}&count={count}\";", "modifier": "public static final", "type": "String", "declarator": "PRODUCTS_URL = BASE_URL + \"companies/{id}/products:\" + PRODUCT_FIELDS +\"?start={start}&count={count}\"", "var_name": "PRODUCTS_URL"}], "methods": [{"identifier": "CompanyTemplate", "parameters": "(RestOperations RestOperations, ObjectMapper objectMapper)", "modifiers": "public", "return": "", "signature": " CompanyTemplate(RestOperations RestOperations, ObjectMapper objectMapper)", "full_signature": "public  CompanyTemplate(RestOperations RestOperations, ObjectMapper objectMapper)", "class_method_signature": "CompanyTemplate.CompanyTemplate(RestOperations RestOperations, ObjectMapper objectMapper)", "testcase": false, "constructor": true}, {"identifier": "getCompany", "parameters": "(int id)", "modifiers": "public", "return": "Company", "signature": "Company getCompany(int id)", "full_signature": "public Company getCompany(int id)", "class_method_signature": "CompanyTemplate.getCompany(int id)", "testcase": false, "constructor": false}, {"identifier": "getCompanyByUniversalName", "parameters": "(String name)", "modifiers": "public", "return": "Company", "signature": "Company getCompanyByUniversalName(String name)", "full_signature": "public Company getCompanyByUniversalName(String name)", "class_method_signature": "CompanyTemplate.getCompanyByUniversalName(String name)", "testcase": false, "constructor": false}, {"identifier": "getCompaniesByEmailDomain", "parameters": "(String domain)", "modifiers": "public", "return": "List<Company>", "signature": "List<Company> getCompaniesByEmailDomain(String domain)", "full_signature": "public List<Company> getCompaniesByEmailDomain(String domain)", "class_method_signature": "CompanyTemplate.getCompaniesByEmailDomain(String domain)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String keywords)", "modifiers": "public", "return": "Companies", "signature": "Companies search(String keywords)", "full_signature": "public Companies search(String keywords)", "class_method_signature": "CompanyTemplate.search(String keywords)", "testcase": false, "constructor": false}, {"identifier": "getFollowing", "parameters": "()", "modifiers": "public", "return": "List<Company>", "signature": "List<Company> getFollowing()", "full_signature": "public List<Company> getFollowing()", "class_method_signature": "CompanyTemplate.getFollowing()", "testcase": false, "constructor": false}, {"identifier": "getSuggestionsToFollow", "parameters": "()", "modifiers": "public", "return": "List<Company>", "signature": "List<Company> getSuggestionsToFollow()", "full_signature": "public List<Company> getSuggestionsToFollow()", "class_method_signature": "CompanyTemplate.getSuggestionsToFollow()", "testcase": false, "constructor": false}, {"identifier": "startFollowingCompany", "parameters": "(int id)", "modifiers": "public", "return": "void", "signature": "void startFollowingCompany(int id)", "full_signature": "public void startFollowingCompany(int id)", "class_method_signature": "CompanyTemplate.startFollowingCompany(int id)", "testcase": false, "constructor": false}, {"identifier": "stopFollowingCompany", "parameters": "(int id)", "modifiers": "public", "return": "void", "signature": "void stopFollowingCompany(int id)", "full_signature": "public void stopFollowingCompany(int id)", "class_method_signature": "CompanyTemplate.stopFollowingCompany(int id)", "testcase": false, "constructor": false}, {"identifier": "getProducts", "parameters": "(int companyId, int start, int count)", "modifiers": "public", "return": "Products", "signature": "Products getProducts(int companyId, int start, int count)", "full_signature": "public Products getProducts(int companyId, int start, int count)", "class_method_signature": "CompanyTemplate.getProducts(int companyId, int start, int count)", "testcase": false, "constructor": false}], "file": "spring-social-linkedin/src/main/java/org/springframework/social/linkedin/api/impl/CompanyTemplate.java"}, "focal_method": {"identifier": "search", "parameters": "(String keywords)", "modifiers": "public", "return": "Companies", "body": "public Companies search(String keywords) {\n\t\tJsonNode node = restOperations.getForObject(COMPANY_SEARCH_URL, JsonNode.class, keywords);\n\t\ttry {\n\t\t\treturn objectMapper.reader(new TypeReference<Companies>(){}).readValue(node.path(\"companies\"));\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}", "signature": "Companies search(String keywords)", "full_signature": "public Companies search(String keywords)", "class_method_signature": "CompanyTemplate.search(String keywords)", "testcase": false, "constructor": false, "invocations": ["getForObject", "readValue", "reader", "path"]}, "repository": {"repo_id": 1767898, "url": "https://github.com/spring-projects/spring-social-linkedin", "language": "Java", "is_fork": false, "fork_count": 66, "stargazer_count": 71, "size": 12391, "license": "licensed"}}