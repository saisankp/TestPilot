{"test_class": {"identifier": "AbstractClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@SuppressWarnings(\"unused\")\n    private final static Logger LOGGER = LoggerFactory.getLogger(AbstractClientTest.class);", "modifier": "@SuppressWarnings(\"unused\")\n    private final static", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(AbstractClientTest.class)", "var_name": "LOGGER"}], "file": "Core/src/test/java/org/openestate/is24/restapi/AbstractClientTest.java"}, "test_case": {"identifier": "testGetUrlEncodedValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetUrlEncodedValue() {\n        Assert.assertEquals(\n                \"1%2B2%3D3%20%C3%A4%C3%B6%C3%BC%C3%9F%20%2F%20%E2%82%AC%20%26\",\n                AbstractClient.getUrlEncodedValue(\"1+2=3 \u00e4\u00f6\u00fc\u00df / \u20ac &\"));\n    }", "signature": "void testGetUrlEncodedValue()", "full_signature": "@Test public void testGetUrlEncodedValue()", "class_method_signature": "AbstractClientTest.testGetUrlEncodedValue()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getUrlEncodedValue"]}, "focal_class": {"identifier": "AbstractClient", "superclass": "", "interfaces": "implements Closeable", "fields": [{"original_string": "@SuppressWarnings(\"unused\")\n    private final static Logger LOGGER = LoggerFactory.getLogger(AbstractClient.class);", "modifier": "@SuppressWarnings(\"unused\")\n    private final static", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(AbstractClient.class)", "var_name": "LOGGER"}, {"original_string": "@SuppressWarnings(\"unused\")\n    public final static String LIVE_API = \"https://rest.immobilienscout24.de/restapi\";", "modifier": "@SuppressWarnings(\"unused\")\n    public final static", "type": "String", "declarator": "LIVE_API = \"https://rest.immobilienscout24.de/restapi\"", "var_name": "LIVE_API"}, {"original_string": "@SuppressWarnings(\"unused\")\n    public final static String SANDBOX_API = \"https://rest.sandbox-immobilienscout24.de/restapi\";", "modifier": "@SuppressWarnings(\"unused\")\n    public final static", "type": "String", "declarator": "SANDBOX_API = \"https://rest.sandbox-immobilienscout24.de/restapi\"", "var_name": "SANDBOX_API"}, {"original_string": "@SuppressWarnings(\"unused\")\n    public final static String RESPONSE_HEADER_API_CLIENT = \"L-IS24-ApiClient\";", "modifier": "@SuppressWarnings(\"unused\")\n    public final static", "type": "String", "declarator": "RESPONSE_HEADER_API_CLIENT = \"L-IS24-ApiClient\"", "var_name": "RESPONSE_HEADER_API_CLIENT"}, {"original_string": "@SuppressWarnings(\"unused\")\n    public final static String RESPONSE_HEADER_CAUSER_ID = \"L-IS24-CauserId\";", "modifier": "@SuppressWarnings(\"unused\")\n    public final static", "type": "String", "declarator": "RESPONSE_HEADER_CAUSER_ID = \"L-IS24-CauserId\"", "var_name": "RESPONSE_HEADER_CAUSER_ID"}, {"original_string": "@SuppressWarnings(\"unused\")\n    public final static String RESPONSE_HEADER_REQUEST_REFNUM = \"L-IS24-RequestRefnum\";", "modifier": "@SuppressWarnings(\"unused\")\n    public final static", "type": "String", "declarator": "RESPONSE_HEADER_REQUEST_REFNUM = \"L-IS24-RequestRefnum\"", "var_name": "RESPONSE_HEADER_REQUEST_REFNUM"}, {"original_string": "@SuppressWarnings(\"unused\")\n    public final static String RESPONSE_HEADER_RESOURCE_ID = \"L-IS24-ResourceId\";", "modifier": "@SuppressWarnings(\"unused\")\n    public final static", "type": "String", "declarator": "RESPONSE_HEADER_RESOURCE_ID = \"L-IS24-ResourceId\"", "var_name": "RESPONSE_HEADER_RESOURCE_ID"}, {"original_string": "@SuppressWarnings(\"unused\")\n    public final static String XML_CONTENT_TYPE = \"application/xml\";", "modifier": "@SuppressWarnings(\"unused\")\n    public final static", "type": "String", "declarator": "XML_CONTENT_TYPE = \"application/xml\"", "var_name": "XML_CONTENT_TYPE"}, {"original_string": "@SuppressWarnings(\"unused\")\n    public final static String JSON_CONTENT_TYPE = \"application/json\";", "modifier": "@SuppressWarnings(\"unused\")\n    public final static", "type": "String", "declarator": "JSON_CONTENT_TYPE = \"application/json\"", "var_name": "JSON_CONTENT_TYPE"}, {"original_string": "private final String apiBaseUrl;", "modifier": "private final", "type": "String", "declarator": "apiBaseUrl", "var_name": "apiBaseUrl"}, {"original_string": "private final String consumerToken;", "modifier": "private final", "type": "String", "declarator": "consumerToken", "var_name": "consumerToken"}, {"original_string": "private final String consumerSecret;", "modifier": "private final", "type": "String", "declarator": "consumerSecret", "var_name": "consumerSecret"}, {"original_string": "private OAuthConsumer oAuthConsumer = null;", "modifier": "private", "type": "OAuthConsumer", "declarator": "oAuthConsumer = null", "var_name": "oAuthConsumer"}, {"original_string": "private OAuthProvider oAuthProvider = null;", "modifier": "private", "type": "OAuthProvider", "declarator": "oAuthProvider = null", "var_name": "oAuthProvider"}], "methods": [{"identifier": "AbstractClient", "parameters": "(String apiBaseUrl, String consumerToken, String consumerSecret)", "modifiers": "protected", "return": "", "signature": " AbstractClient(String apiBaseUrl, String consumerToken, String consumerSecret)", "full_signature": "protected  AbstractClient(String apiBaseUrl, String consumerToken, String consumerSecret)", "class_method_signature": "AbstractClient.AbstractClient(String apiBaseUrl, String consumerToken, String consumerSecret)", "testcase": false, "constructor": true}, {"identifier": "authorize", "parameters": "(Authorization authorization)", "modifiers": "@SuppressWarnings(\"unused\") public final", "return": "void", "signature": "void authorize(Authorization authorization)", "full_signature": "@SuppressWarnings(\"unused\") public final void authorize(Authorization authorization)", "class_method_signature": "AbstractClient.authorize(Authorization authorization)", "testcase": false, "constructor": false}, {"identifier": "authorize", "parameters": "(String accessToken, String accessSecret)", "modifiers": "@SuppressWarnings(\"RedundantThrows\") public final", "return": "void", "signature": "void authorize(String accessToken, String accessSecret)", "full_signature": "@SuppressWarnings(\"RedundantThrows\") public final void authorize(String accessToken, String accessSecret)", "class_method_signature": "AbstractClient.authorize(String accessToken, String accessSecret)", "testcase": false, "constructor": false}, {"identifier": "authorizeAfterVerification", "parameters": "(Verification verification, String verificationCode)", "modifiers": "public final", "return": "Authorization", "signature": "Authorization authorizeAfterVerification(Verification verification, String verificationCode)", "full_signature": "public final Authorization authorizeAfterVerification(Verification verification, String verificationCode)", "class_method_signature": "AbstractClient.authorizeAfterVerification(Verification verification, String verificationCode)", "testcase": false, "constructor": false}, {"identifier": "authorizeAfterVerification", "parameters": "(String verificationToken, String verificationSecret, String verificationCode)", "modifiers": "public final", "return": "Authorization", "signature": "Authorization authorizeAfterVerification(String verificationToken, String verificationSecret, String verificationCode)", "full_signature": "public final Authorization authorizeAfterVerification(String verificationToken, String verificationSecret, String verificationCode)", "class_method_signature": "AbstractClient.authorizeAfterVerification(String verificationToken, String verificationSecret, String verificationCode)", "testcase": false, "constructor": false}, {"identifier": "buildOAuthConsumer", "parameters": "(String token, String secret)", "modifiers": "protected", "return": "OAuthConsumer", "signature": "OAuthConsumer buildOAuthConsumer(String token, String secret)", "full_signature": "protected OAuthConsumer buildOAuthConsumer(String token, String secret)", "class_method_signature": "AbstractClient.buildOAuthConsumer(String token, String secret)", "testcase": false, "constructor": false}, {"identifier": "buildOAuthProvider", "parameters": "(String apiBaseUrl)", "modifiers": "protected", "return": "OAuthProvider", "signature": "OAuthProvider buildOAuthProvider(String apiBaseUrl)", "full_signature": "protected OAuthProvider buildOAuthProvider(String apiBaseUrl)", "class_method_signature": "AbstractClient.buildOAuthProvider(String apiBaseUrl)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "AbstractClient.close()", "testcase": false, "constructor": false}, {"identifier": "fetchVerification", "parameters": "()", "modifiers": "@SuppressWarnings(\"unused\") public final", "return": "Verification", "signature": "Verification fetchVerification()", "full_signature": "@SuppressWarnings(\"unused\") public final Verification fetchVerification()", "class_method_signature": "AbstractClient.fetchVerification()", "testcase": false, "constructor": false}, {"identifier": "fetchVerification", "parameters": "(String callbackUrl)", "modifiers": "public final", "return": "Verification", "signature": "Verification fetchVerification(String callbackUrl)", "full_signature": "public final Verification fetchVerification(String callbackUrl)", "class_method_signature": "AbstractClient.fetchVerification(String callbackUrl)", "testcase": false, "constructor": false}, {"identifier": "getApiBaseUrl", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getApiBaseUrl()", "full_signature": "public final String getApiBaseUrl()", "class_method_signature": "AbstractClient.getApiBaseUrl()", "testcase": false, "constructor": false}, {"identifier": "getAuthConsumer", "parameters": "()", "modifiers": "public final", "return": "OAuthConsumer", "signature": "OAuthConsumer getAuthConsumer()", "full_signature": "public final OAuthConsumer getAuthConsumer()", "class_method_signature": "AbstractClient.getAuthConsumer()", "testcase": false, "constructor": false}, {"identifier": "getAuthProvider", "parameters": "()", "modifiers": "public final", "return": "OAuthProvider", "signature": "OAuthProvider getAuthProvider()", "full_signature": "public final OAuthProvider getAuthProvider()", "class_method_signature": "AbstractClient.getAuthProvider()", "testcase": false, "constructor": false}, {"identifier": "getEncoding", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getEncoding()", "full_signature": "public static String getEncoding()", "class_method_signature": "AbstractClient.getEncoding()", "testcase": false, "constructor": false}, {"identifier": "getUrlEncodedValue", "parameters": "(String value)", "modifiers": "public static", "return": "String", "signature": "String getUrlEncodedValue(String value)", "full_signature": "public static String getUrlEncodedValue(String value)", "class_method_signature": "AbstractClient.getUrlEncodedValue(String value)", "testcase": false, "constructor": false}, {"identifier": "sendJsonRequest", "parameters": "(URL url, RequestMethod method, String json)", "modifiers": "@SuppressWarnings(\"unused\") protected abstract", "return": "Response", "signature": "Response sendJsonRequest(URL url, RequestMethod method, String json)", "full_signature": "@SuppressWarnings(\"unused\") protected abstract Response sendJsonRequest(URL url, RequestMethod method, String json)", "class_method_signature": "AbstractClient.sendJsonRequest(URL url, RequestMethod method, String json)", "testcase": false, "constructor": false}, {"identifier": "sendXmlRequest", "parameters": "(URL url, RequestMethod method, String xml)", "modifiers": "protected abstract", "return": "Response", "signature": "Response sendXmlRequest(URL url, RequestMethod method, String xml)", "full_signature": "protected abstract Response sendXmlRequest(URL url, RequestMethod method, String xml)", "class_method_signature": "AbstractClient.sendXmlRequest(URL url, RequestMethod method, String xml)", "testcase": false, "constructor": false}, {"identifier": "sendXmlAttachmentRequest", "parameters": "(URL url, RequestMethod method, String xml, InputStream input, String fileName, String mimeType)", "modifiers": "@SuppressWarnings(\"SameParameterValue\") protected abstract", "return": "Response", "signature": "Response sendXmlAttachmentRequest(URL url, RequestMethod method, String xml, InputStream input, String fileName, String mimeType)", "full_signature": "@SuppressWarnings(\"SameParameterValue\") protected abstract Response sendXmlAttachmentRequest(URL url, RequestMethod method, String xml, InputStream input, String fileName, String mimeType)", "class_method_signature": "AbstractClient.sendXmlAttachmentRequest(URL url, RequestMethod method, String xml, InputStream input, String fileName, String mimeType)", "testcase": false, "constructor": false}, {"identifier": "sendVideoUploadRequest", "parameters": "(URI url, RequestMethod method, String auth, InputStream input, String fileName, long fileSize)", "modifiers": "@SuppressWarnings(\"SameParameterValue\") protected abstract", "return": "Response", "signature": "Response sendVideoUploadRequest(URI url, RequestMethod method, String auth, InputStream input, String fileName, long fileSize)", "full_signature": "@SuppressWarnings(\"SameParameterValue\") protected abstract Response sendVideoUploadRequest(URI url, RequestMethod method, String auth, InputStream input, String fileName, long fileSize)", "class_method_signature": "AbstractClient.sendVideoUploadRequest(URI url, RequestMethod method, String auth, InputStream input, String fileName, long fileSize)", "testcase": false, "constructor": false}], "file": "Core/src/main/java/org/openestate/is24/restapi/AbstractClient.java"}, "focal_method": {"identifier": "getUrlEncodedValue", "parameters": "(String value)", "modifiers": "public static", "return": "String", "body": "public static String getUrlEncodedValue(String value) {\n        try {\n            return StringUtils.replace(\n                    new URLCodec().encode(StringUtils.trimToNull(value), getEncoding()),\n                    \"+\", \"%20\");\n        } catch (UnsupportedEncodingException ex) {\n            LOGGER.error(\"Unsupported encoding!\", ex);\n            return null;\n        }\n    }", "signature": "String getUrlEncodedValue(String value)", "full_signature": "public static String getUrlEncodedValue(String value)", "class_method_signature": "AbstractClient.getUrlEncodedValue(String value)", "testcase": false, "constructor": false, "invocations": ["replace", "encode", "trimToNull", "getEncoding", "error"]}, "repository": {"repo_id": 21267129, "url": "https://github.com/OpenEstate/OpenEstate-IS24-REST", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 4173, "license": "licensed"}}