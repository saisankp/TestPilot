{"test_class": {"identifier": "TestProductDao", "superclass": "extends TestAbstractHibernateDao<Product, Long>", "interfaces": "", "fields": [{"original_string": "@Autowired\n   private ProductDao dao;", "modifier": "@Autowired\n   private", "type": "ProductDao", "declarator": "dao", "var_name": "dao"}], "file": "core/src/test/java/fr/gael/dhus/database/dao/TestProductDao.java"}, "test_case": {"identifier": "getProductByUuid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void getProductByUuid ()\n   {\n      String valid = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6\";\n      String invalid = \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb6\";\n      User user = new User ();\n      user.setUUID (\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0\");\n      user.setUsername (\"koko\");\n\n      Product product = dao.getProductByUuid(valid);\n      Assert.assertNotNull (product);\n      Assert.assertEquals (product.getId ().intValue (), 6);\n\n      product = dao.getProductByUuid(invalid);\n      Assert.assertNull (product);\n\n      product = dao.getProductByUuid(valid);\n      Assert.assertNotNull (product);\n      Assert.assertEquals (product.getId ().intValue (), 6);\n\n      product = dao.getProductByUuid(null);\n      Assert.assertNull (product);\n   }", "signature": "void getProductByUuid()", "full_signature": "@Test public void getProductByUuid()", "class_method_signature": "TestProductDao.getProductByUuid()", "testcase": true, "constructor": false, "invocations": ["setUUID", "setUsername", "getProductByUuid", "assertNotNull", "assertEquals", "intValue", "getId", "getProductByUuid", "assertNull", "getProductByUuid", "assertNotNull", "assertEquals", "intValue", "getId", "getProductByUuid", "assertNull"]}, "focal_class": {"identifier": "ProductDao", "superclass": "extends HibernateDao<Product, Long>", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LogManager.getLogger(ProductDao.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LogManager.getLogger(ProductDao.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n   private CollectionDao collectionDao;", "modifier": "@Autowired\n   private", "type": "CollectionDao", "declarator": "collectionDao", "var_name": "collectionDao"}, {"original_string": "@Autowired\n   private ProductCartDao productCartDao;", "modifier": "@Autowired\n   private", "type": "ProductCartDao", "declarator": "productCartDao", "var_name": "productCartDao"}, {"original_string": "@Autowired\n   private UserDao userDao;", "modifier": "@Autowired\n   private", "type": "UserDao", "declarator": "userDao", "var_name": "userDao"}, {"original_string": "private final static Integer MAX_PRODUCT_PAGE_SIZE =\n         Integer.getInteger(\"max.product.page.size\", -1);", "modifier": "private final static", "type": "Integer", "declarator": "MAX_PRODUCT_PAGE_SIZE =\n         Integer.getInteger(\"max.product.page.size\", -1)", "var_name": "MAX_PRODUCT_PAGE_SIZE"}], "methods": [{"identifier": "checkProductNumber", "parameters": "(int n)", "modifiers": "static", "return": "void", "signature": "void checkProductNumber(int n)", "full_signature": "static void checkProductNumber(int n)", "class_method_signature": "ProductDao.checkProductNumber(int n)", "testcase": false, "constructor": false}, {"identifier": "scrollFiltered", "parameters": "(String filter, final Long collection_id, int skip)", "modifiers": "public", "return": "Iterator<Product>", "signature": "Iterator<Product> scrollFiltered(String filter, final Long collection_id, int skip)", "full_signature": "public Iterator<Product> scrollFiltered(String filter, final Long collection_id, int skip)", "class_method_signature": "ProductDao.scrollFiltered(String filter, final Long collection_id, int skip)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void deleteAll()", "full_signature": "@Override public void deleteAll()", "class_method_signature": "ProductDao.deleteAll()", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Product product)", "modifiers": "@Override public", "return": "void", "signature": "void delete(Product product)", "full_signature": "@Override public void delete(Product product)", "class_method_signature": "ProductDao.delete(Product product)", "testcase": false, "constructor": false}, {"identifier": "setIndexes", "parameters": "(Product product, List<MetadataIndex>indexes)", "modifiers": "public", "return": "void", "signature": "void setIndexes(Product product, List<MetadataIndex>indexes)", "full_signature": "public void setIndexes(Product product, List<MetadataIndex>indexes)", "class_method_signature": "ProductDao.setIndexes(Product product, List<MetadataIndex>indexes)", "testcase": false, "constructor": false}, {"identifier": "setIndexes", "parameters": "(Long id, List<MetadataIndex>indexes)", "modifiers": "public", "return": "void", "signature": "void setIndexes(Long id, List<MetadataIndex>indexes)", "full_signature": "public void setIndexes(Long id, List<MetadataIndex>indexes)", "class_method_signature": "ProductDao.setIndexes(Long id, List<MetadataIndex>indexes)", "testcase": false, "constructor": false}, {"identifier": "getProductByUuid", "parameters": "(final String uuid)", "modifiers": "public", "return": "Product", "signature": "Product getProductByUuid(final String uuid)", "full_signature": "public Product getProductByUuid(final String uuid)", "class_method_signature": "ProductDao.getProductByUuid(final String uuid)", "testcase": false, "constructor": false}, {"identifier": "getAllProducts", "parameters": "()", "modifiers": "public", "return": "Iterator<Product>", "signature": "Iterator<Product> getAllProducts()", "full_signature": "public Iterator<Product> getAllProducts()", "class_method_signature": "ProductDao.getAllProducts()", "testcase": false, "constructor": false}, {"identifier": "getProductByIdentifier", "parameters": "(final String identifier)", "modifiers": "public", "return": "Product", "signature": "Product getProductByIdentifier(final String identifier)", "full_signature": "public Product getProductByIdentifier(final String identifier)", "class_method_signature": "ProductDao.getProductByIdentifier(final String identifier)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Product p)", "modifiers": "@Override public synchronized", "return": "Product", "signature": "Product create(Product p)", "full_signature": "@Override public synchronized Product create(Product p)", "class_method_signature": "ProductDao.create(Product p)", "testcase": false, "constructor": false}, {"identifier": "listCriteria", "parameters": "(DetachedCriteria detached, int skip, int top)", "modifiers": "@Override public", "return": "List<Product>", "signature": "List<Product> listCriteria(DetachedCriteria detached, int skip, int top)", "full_signature": "@Override public List<Product> listCriteria(DetachedCriteria detached, int skip, int top)", "class_method_signature": "ProductDao.listCriteria(DetachedCriteria detached, int skip, int top)", "testcase": false, "constructor": false}, {"identifier": "executeHQLQuery", "parameters": "(final String hql,\n         final List<SQLVisitor.SQLVisitorParameter> parameters, final int skip, final int top)", "modifiers": "@Override public", "return": "List<Product>", "signature": "List<Product> executeHQLQuery(final String hql,\n         final List<SQLVisitor.SQLVisitorParameter> parameters, final int skip, final int top)", "full_signature": "@Override public List<Product> executeHQLQuery(final String hql,\n         final List<SQLVisitor.SQLVisitorParameter> parameters, final int skip, final int top)", "class_method_signature": "ProductDao.executeHQLQuery(final String hql,\n         final List<SQLVisitor.SQLVisitorParameter> parameters, final int skip, final int top)", "testcase": false, "constructor": false}, {"identifier": "getProductUUIDs", "parameters": "(String hql, List<SQLVisitorParameter> hqlParameters, int skip, int top)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "List<LoggableProduct>", "signature": "List<LoggableProduct> getProductUUIDs(String hql, List<SQLVisitorParameter> hqlParameters, int skip, int top)", "full_signature": "@SuppressWarnings(\"unchecked\") public List<LoggableProduct> getProductUUIDs(String hql, List<SQLVisitorParameter> hqlParameters, int skip, int top)", "class_method_signature": "ProductDao.getProductUUIDs(String hql, List<SQLVisitorParameter> hqlParameters, int skip, int top)", "testcase": false, "constructor": false}], "file": "core/src/main/java/fr/gael/dhus/database/dao/ProductDao.java"}, "focal_method": {"identifier": "getProductByUuid", "parameters": "(final String uuid)", "modifiers": "public", "return": "Product", "body": "public Product getProductByUuid(final String uuid)\n   {\n      return getHibernateTemplate().execute(session -> {\n         Query query = session.createQuery(\"FROM Product WHERE uuid=?\");\n         query.setParameter(0, uuid, StandardBasicTypes.STRING);\n         List list = query.list();\n         return (Product) (list.isEmpty() ? null : list.get(0));\n      });\n   }", "signature": "Product getProductByUuid(final String uuid)", "full_signature": "public Product getProductByUuid(final String uuid)", "class_method_signature": "ProductDao.getProductByUuid(final String uuid)", "testcase": false, "constructor": false, "invocations": ["execute", "getHibernateTemplate", "createQuery", "setParameter", "list", "isEmpty", "get"]}, "repository": {"repo_id": 90016934, "url": "https://github.com/SentinelDataHub/dhus-core", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 5, "size": 2371, "license": "licensed"}}