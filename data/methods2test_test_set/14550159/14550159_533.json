{"test_class": {"identifier": "AcceptMediaTypeHeaderDelegateTest", "superclass": "", "interfaces": "", "fields": [], "file": "everrest-core/src/test/java/org/everrest/core/impl/header/AcceptMediaTypeHeaderDelegateTest.java"}, "test_case": {"identifier": "testParsingAcceptMediaTypeHeader", "parameters": "(String acceptMediaTypeHeader, String type, String subType, Map<String,String> parameters, float qValue)", "modifiers": "@UseDataProvider(\"forTestParsingAcceptMediaTypeHeader\") @Test public", "return": "void", "body": "@UseDataProvider(\"forTestParsingAcceptMediaTypeHeader\")\n    @Test\n    public void testParsingAcceptMediaTypeHeader(String acceptMediaTypeHeader, String type, String subType, Map<String,String> parameters, float qValue) {\n        AcceptMediaTypeHeaderDelegate headerDelegate = new AcceptMediaTypeHeaderDelegate();\n        AcceptMediaType acceptMediaType = headerDelegate.fromString(acceptMediaTypeHeader);\n\n        assertEquals(type, acceptMediaType.getType());\n        assertEquals(subType, acceptMediaType.getSubtype());\n        assertEquals(parameters, acceptMediaType.getParameters());\n        assertEquals(qValue, acceptMediaType.getQvalue(), 0.0F);\n    }", "signature": "void testParsingAcceptMediaTypeHeader(String acceptMediaTypeHeader, String type, String subType, Map<String,String> parameters, float qValue)", "full_signature": "@UseDataProvider(\"forTestParsingAcceptMediaTypeHeader\") @Test public void testParsingAcceptMediaTypeHeader(String acceptMediaTypeHeader, String type, String subType, Map<String,String> parameters, float qValue)", "class_method_signature": "AcceptMediaTypeHeaderDelegateTest.testParsingAcceptMediaTypeHeader(String acceptMediaTypeHeader, String type, String subType, Map<String,String> parameters, float qValue)", "testcase": true, "constructor": false, "invocations": ["fromString", "assertEquals", "getType", "assertEquals", "getSubtype", "assertEquals", "getParameters", "assertEquals", "getQvalue"]}, "focal_class": {"identifier": "AcceptMediaTypeHeaderDelegate", "superclass": "", "interfaces": "implements RuntimeDelegate.HeaderDelegate<AcceptMediaType>", "fields": [], "methods": [{"identifier": "fromString", "parameters": "(String header)", "modifiers": "@Override public", "return": "AcceptMediaType", "signature": "AcceptMediaType fromString(String header)", "full_signature": "@Override public AcceptMediaType fromString(String header)", "class_method_signature": "AcceptMediaTypeHeaderDelegate.fromString(String header)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(AcceptMediaType acceptMediaType)", "modifiers": "@Override public", "return": "String", "signature": "String toString(AcceptMediaType acceptMediaType)", "full_signature": "@Override public String toString(AcceptMediaType acceptMediaType)", "class_method_signature": "AcceptMediaTypeHeaderDelegate.toString(AcceptMediaType acceptMediaType)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/header/AcceptMediaTypeHeaderDelegate.java"}, "focal_method": {"identifier": "fromString", "parameters": "(String header)", "modifiers": "@Override public", "return": "AcceptMediaType", "body": "@Override\n    public AcceptMediaType fromString(String header) {\n        if (header == null) {\n            throw new IllegalArgumentException();\n        }\n        return new AcceptMediaType(MediaType.valueOf(header));\n    }", "signature": "AcceptMediaType fromString(String header)", "full_signature": "@Override public AcceptMediaType fromString(String header)", "class_method_signature": "AcceptMediaTypeHeaderDelegate.fromString(String header)", "testcase": false, "constructor": false, "invocations": ["valueOf"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}