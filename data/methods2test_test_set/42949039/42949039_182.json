{"test_class": {"identifier": "TagHelperTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Mock\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@Mock\n    private JsonHelper jsonHelper;", "modifier": "@Mock\n    private", "type": "JsonHelper", "declarator": "jsonHelper", "var_name": "jsonHelper"}, {"original_string": "@InjectMocks\n    private TagHelper tagHelper;", "modifier": "@InjectMocks\n    private", "type": "TagHelper", "declarator": "tagHelper", "var_name": "tagHelper"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/TagHelperTest.java"}, "test_case": {"identifier": "testValidateTagKeyTagKeyIsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateTagKeyTagKeyIsNull()\n    {\n        // Try to validate a null tag key.\n        try\n        {\n            tagHelper.validateTagKey(null);\n            fail();\n        }\n        catch (IllegalArgumentException e)\n        {\n            assertEquals(\"A tag key must be specified.\", e.getMessage());\n        }\n    }", "signature": "void testValidateTagKeyTagKeyIsNull()", "full_signature": "@Test public void testValidateTagKeyTagKeyIsNull()", "class_method_signature": "TagHelperTest.testValidateTagKeyTagKeyIsNull()", "testcase": true, "constructor": false, "invocations": ["validateTagKey", "fail", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "TagHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(TagHelper.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(TagHelper.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Autowired\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@Autowired\n    private JsonHelper jsonHelper;", "modifier": "@Autowired\n    private", "type": "JsonHelper", "declarator": "jsonHelper", "var_name": "jsonHelper"}], "methods": [{"identifier": "executeFunctionForTagEntities", "parameters": "(final String indexName, final List<TagEntity> tagEntities,\n        final TriConsumer<String, String, String> function)", "modifiers": "public", "return": "void", "signature": "void executeFunctionForTagEntities(final String indexName, final List<TagEntity> tagEntities,\n        final TriConsumer<String, String, String> function)", "full_signature": "public void executeFunctionForTagEntities(final String indexName, final List<TagEntity> tagEntities,\n        final TriConsumer<String, String, String> function)", "class_method_signature": "TagHelper.executeFunctionForTagEntities(final String indexName, final List<TagEntity> tagEntities,\n        final TriConsumer<String, String, String> function)", "testcase": false, "constructor": false}, {"identifier": "safeObjectMapperWriteValueAsString", "parameters": "(final TagEntity tagEntity)", "modifiers": "public", "return": "String", "signature": "String safeObjectMapperWriteValueAsString(final TagEntity tagEntity)", "full_signature": "public String safeObjectMapperWriteValueAsString(final TagEntity tagEntity)", "class_method_signature": "TagHelper.safeObjectMapperWriteValueAsString(final TagEntity tagEntity)", "testcase": false, "constructor": false}, {"identifier": "validateTagKey", "parameters": "(TagKey tagKey)", "modifiers": "public", "return": "void", "signature": "void validateTagKey(TagKey tagKey)", "full_signature": "public void validateTagKey(TagKey tagKey)", "class_method_signature": "TagHelper.validateTagKey(TagKey tagKey)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/TagHelper.java"}, "focal_method": {"identifier": "validateTagKey", "parameters": "(TagKey tagKey)", "modifiers": "public", "return": "void", "body": "public void validateTagKey(TagKey tagKey) throws IllegalArgumentException\n    {\n        Assert.notNull(tagKey, \"A tag key must be specified.\");\n        tagKey.setTagTypeCode(alternateKeyHelper.validateStringParameter(\"tag type code\", tagKey.getTagTypeCode()));\n        tagKey.setTagCode(alternateKeyHelper.validateStringParameter(\"tag code\", tagKey.getTagCode()));\n    }", "signature": "void validateTagKey(TagKey tagKey)", "full_signature": "public void validateTagKey(TagKey tagKey)", "class_method_signature": "TagHelper.validateTagKey(TagKey tagKey)", "testcase": false, "constructor": false, "invocations": ["notNull", "setTagTypeCode", "validateStringParameter", "getTagTypeCode", "setTagCode", "validateStringParameter", "getTagCode"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}