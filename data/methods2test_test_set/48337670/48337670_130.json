{"test_class": {"identifier": "ThingUIDTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/ThingUIDTest.java"}, "test_case": {"identifier": "testGetBridgeIds", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetBridgeIds() {\n        ThingTypeUID thingType = new ThingTypeUID(\"fake\", \"type\");\n        ThingUID subject = new ThingUID(thingType, new ThingUID(\"fake\", \"something\", \"bridge\"), \"thing\");\n\n        assertEquals(\"fake:type:bridge:thing\", subject.getAsString());\n        assertThat(subject.getBridgeIds(), hasSize(1));\n        assertEquals(\"bridge\", subject.getBridgeIds().get(0));\n    }", "signature": "void testGetBridgeIds()", "full_signature": "@Test public void testGetBridgeIds()", "class_method_signature": "ThingUIDTest.testGetBridgeIds()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getAsString", "assertThat", "getBridgeIds", "hasSize", "assertEquals", "get", "getBridgeIds"]}, "focal_class": {"identifier": "ThingUID", "superclass": "extends UID", "interfaces": "", "fields": [{"original_string": "private static final String NO_THING_TYPE = \"\";", "modifier": "private static final", "type": "String", "declarator": "NO_THING_TYPE = \"\"", "var_name": "NO_THING_TYPE"}], "methods": [{"identifier": "ThingUID", "parameters": "()", "modifiers": "", "return": "", "signature": " ThingUID()", "full_signature": "  ThingUID()", "class_method_signature": "ThingUID.ThingUID()", "testcase": false, "constructor": true}, {"identifier": "ThingUID", "parameters": "(ThingTypeUID thingTypeUID, String id)", "modifiers": "public", "return": "", "signature": " ThingUID(ThingTypeUID thingTypeUID, String id)", "full_signature": "public  ThingUID(ThingTypeUID thingTypeUID, String id)", "class_method_signature": "ThingUID.ThingUID(ThingTypeUID thingTypeUID, String id)", "testcase": false, "constructor": true}, {"identifier": "ThingUID", "parameters": "(ThingTypeUID thingTypeUID, ThingUID bridgeUID, String id)", "modifiers": "public", "return": "", "signature": " ThingUID(ThingTypeUID thingTypeUID, ThingUID bridgeUID, String id)", "full_signature": "public  ThingUID(ThingTypeUID thingTypeUID, ThingUID bridgeUID, String id)", "class_method_signature": "ThingUID.ThingUID(ThingTypeUID thingTypeUID, ThingUID bridgeUID, String id)", "testcase": false, "constructor": true}, {"identifier": "ThingUID", "parameters": "(ThingTypeUID thingTypeUID, String id, String... bridgeIds)", "modifiers": "public", "return": "", "signature": " ThingUID(ThingTypeUID thingTypeUID, String id, String... bridgeIds)", "full_signature": "public  ThingUID(ThingTypeUID thingTypeUID, String id, String... bridgeIds)", "class_method_signature": "ThingUID.ThingUID(ThingTypeUID thingTypeUID, String id, String... bridgeIds)", "testcase": false, "constructor": true}, {"identifier": "ThingUID", "parameters": "(String bindingId, String id)", "modifiers": "public", "return": "", "signature": " ThingUID(String bindingId, String id)", "full_signature": "public  ThingUID(String bindingId, String id)", "class_method_signature": "ThingUID.ThingUID(String bindingId, String id)", "testcase": false, "constructor": true}, {"identifier": "ThingUID", "parameters": "(String bindingId, ThingUID bridgeUID, String id)", "modifiers": "public", "return": "", "signature": " ThingUID(String bindingId, ThingUID bridgeUID, String id)", "full_signature": "public  ThingUID(String bindingId, ThingUID bridgeUID, String id)", "class_method_signature": "ThingUID.ThingUID(String bindingId, ThingUID bridgeUID, String id)", "testcase": false, "constructor": true}, {"identifier": "getArray", "parameters": "(String bindingId, String thingTypeId, String id, @Nullable String... bridgeIds)", "modifiers": "private static", "return": "String[]", "signature": "String[] getArray(String bindingId, String thingTypeId, String id, @Nullable String... bridgeIds)", "full_signature": "private static String[] getArray(String bindingId, String thingTypeId, String id, @Nullable String... bridgeIds)", "class_method_signature": "ThingUID.getArray(String bindingId, String thingTypeId, String id, @Nullable String... bridgeIds)", "testcase": false, "constructor": false}, {"identifier": "getArray", "parameters": "(String bindingId, String thingTypeId, String id, List<String> bridgeIds,\n            String bridgeId)", "modifiers": "private static", "return": "String[]", "signature": "String[] getArray(String bindingId, String thingTypeId, String id, List<String> bridgeIds,\n            String bridgeId)", "full_signature": "private static String[] getArray(String bindingId, String thingTypeId, String id, List<String> bridgeIds,\n            String bridgeId)", "class_method_signature": "ThingUID.getArray(String bindingId, String thingTypeId, String id, List<String> bridgeIds,\n            String bridgeId)", "testcase": false, "constructor": false}, {"identifier": "ThingUID", "parameters": "(String bindingId, String thingTypeId, String id)", "modifiers": "public", "return": "", "signature": " ThingUID(String bindingId, String thingTypeId, String id)", "full_signature": "public  ThingUID(String bindingId, String thingTypeId, String id)", "class_method_signature": "ThingUID.ThingUID(String bindingId, String thingTypeId, String id)", "testcase": false, "constructor": true}, {"identifier": "ThingUID", "parameters": "(String thingUID)", "modifiers": "public", "return": "", "signature": " ThingUID(String thingUID)", "full_signature": "public  ThingUID(String thingUID)", "class_method_signature": "ThingUID.ThingUID(String thingUID)", "testcase": false, "constructor": true}, {"identifier": "ThingUID", "parameters": "(String... segments)", "modifiers": "public", "return": "", "signature": " ThingUID(String... segments)", "full_signature": "public  ThingUID(String... segments)", "class_method_signature": "ThingUID.ThingUID(String... segments)", "testcase": false, "constructor": true}, {"identifier": "getBridgeIds", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getBridgeIds()", "full_signature": "public List<String> getBridgeIds()", "class_method_signature": "ThingUID.getBridgeIds()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "ThingUID.getId()", "testcase": false, "constructor": false}, {"identifier": "getMinimalNumberOfSegments", "parameters": "()", "modifiers": "@Override protected", "return": "int", "signature": "int getMinimalNumberOfSegments()", "full_signature": "@Override protected int getMinimalNumberOfSegments()", "class_method_signature": "ThingUID.getMinimalNumberOfSegments()", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/ThingUID.java"}, "focal_method": {"identifier": "getBridgeIds", "parameters": "()", "modifiers": "public", "return": "List<String>", "body": "public List<String> getBridgeIds() {\n        List<String> allSegments = getAllSegments();\n        return allSegments.subList(2, allSegments.size() - 1);\n    }", "signature": "List<String> getBridgeIds()", "full_signature": "public List<String> getBridgeIds()", "class_method_signature": "ThingUID.getBridgeIds()", "testcase": false, "constructor": false, "invocations": ["getAllSegments", "subList", "size"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}