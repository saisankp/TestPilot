{"test_class": {"identifier": "GroupServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private GroupService groupService;", "modifier": "@Mock\n    private", "type": "GroupService", "declarator": "groupService", "var_name": "groupService"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/service/GroupServiceTest.java"}, "test_case": {"identifier": "isNotExistInProjectAndGroupTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isNotExistInProjectAndGroupTest() throws Exception {\n        Assert.assertTrue(groupService.isNotExistInProjectAndGroup(\"name\"));\n    }", "signature": "void isNotExistInProjectAndGroupTest()", "full_signature": "@Test public void isNotExistInProjectAndGroupTest()", "class_method_signature": "GroupServiceTest.isNotExistInProjectAndGroupTest()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isNotExistInProjectAndGroup"]}, "focal_class": {"identifier": "GroupService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private Consts consts;", "modifier": "@Autowired\n    private", "type": "Consts", "declarator": "consts", "var_name": "consts"}, {"original_string": "@Autowired\n    private Message message;", "modifier": "@Autowired\n    private", "type": "Message", "declarator": "message", "var_name": "message"}, {"original_string": "@Autowired\n    private GroupDao groupDao;", "modifier": "@Autowired\n    private", "type": "GroupDao", "declarator": "groupDao", "var_name": "groupDao"}, {"original_string": "@Autowired\n    private UserGroupDao userGroupDao;", "modifier": "@Autowired\n    private", "type": "UserGroupDao", "declarator": "userGroupDao", "var_name": "userGroupDao"}, {"original_string": "@Autowired\n    private LoginUserDao loginUserDao;", "modifier": "@Autowired\n    private", "type": "LoginUserDao", "declarator": "loginUserDao", "var_name": "loginUserDao"}, {"original_string": "@Autowired\n    private PermissionService permissionService;", "modifier": "@Autowired\n    private", "type": "PermissionService", "declarator": "permissionService", "var_name": "permissionService"}, {"original_string": "@Autowired\n    private ProjectDao projectDao;", "modifier": "@Autowired\n    private", "type": "ProjectDao", "declarator": "projectDao", "var_name": "projectDao"}], "methods": [{"identifier": "validatePermision", "parameters": "(LoginUser user, Errors errors)", "modifiers": "public", "return": "ValidatorChain", "signature": "ValidatorChain validatePermision(LoginUser user, Errors errors)", "full_signature": "public ValidatorChain validatePermision(LoginUser user, Errors errors)", "class_method_signature": "GroupService.validatePermision(LoginUser user, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "addDalGroup", "parameters": "(LoginUser user, DasGroup group)", "modifiers": "public", "return": "boolean", "signature": "boolean addDalGroup(LoginUser user, DasGroup group)", "full_signature": "public boolean addDalGroup(LoginUser user, DasGroup group)", "class_method_signature": "GroupService.addDalGroup(LoginUser user, DasGroup group)", "testcase": false, "constructor": false}, {"identifier": "updateDalGroup", "parameters": "(LoginUser user, DasGroup group)", "modifiers": "public", "return": "boolean", "signature": "boolean updateDalGroup(LoginUser user, DasGroup group)", "full_signature": "public boolean updateDalGroup(LoginUser user, DasGroup group)", "class_method_signature": "GroupService.updateDalGroup(LoginUser user, DasGroup group)", "testcase": false, "constructor": false}, {"identifier": "isInSuperGroup", "parameters": "(String userNo)", "modifiers": "public", "return": "boolean", "signature": "boolean isInSuperGroup(String userNo)", "full_signature": "public boolean isInSuperGroup(String userNo)", "class_method_signature": "GroupService.isInSuperGroup(String userNo)", "testcase": false, "constructor": false}, {"identifier": "isInCurrentGroup", "parameters": "(Long userId, int currentGroupId)", "modifiers": "public", "return": "boolean", "signature": "boolean isInCurrentGroup(Long userId, int currentGroupId)", "full_signature": "public boolean isInCurrentGroup(Long userId, int currentGroupId)", "class_method_signature": "GroupService.isInCurrentGroup(Long userId, int currentGroupId)", "testcase": false, "constructor": false}, {"identifier": "findGroupPageList", "parameters": "(Paging<DasGroup> paging)", "modifiers": "public", "return": "ListResult<DalGroupView>", "signature": "ListResult<DalGroupView> findGroupPageList(Paging<DasGroup> paging)", "full_signature": "public ListResult<DalGroupView> findGroupPageList(Paging<DasGroup> paging)", "class_method_signature": "GroupService.findGroupPageList(Paging<DasGroup> paging)", "testcase": false, "constructor": false}, {"identifier": "isNotExistByName", "parameters": "(DasGroup group)", "modifiers": "public", "return": "boolean", "signature": "boolean isNotExistByName(DasGroup group)", "full_signature": "public boolean isNotExistByName(DasGroup group)", "class_method_signature": "GroupService.isNotExistByName(DasGroup group)", "testcase": false, "constructor": false}, {"identifier": "isNotExistInProjectAndGroup", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "signature": "boolean isNotExistInProjectAndGroup(String name)", "full_signature": "public boolean isNotExistInProjectAndGroup(String name)", "class_method_signature": "GroupService.isNotExistInProjectAndGroup(String name)", "testcase": false, "constructor": false}, {"identifier": "initAdminGroup", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int initAdminGroup()", "full_signature": "public int initAdminGroup()", "class_method_signature": "GroupService.initAdminGroup()", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/service/GroupService.java"}, "focal_method": {"identifier": "isNotExistInProjectAndGroup", "parameters": "(String name)", "modifiers": "public", "return": "boolean", "body": "public boolean isNotExistInProjectAndGroup(String name) throws SQLException {\n        name = name.trim();\n        return projectDao.getCountByName(name) == 0 && groupDao.getCountByName(name) == 0;\n    }", "signature": "boolean isNotExistInProjectAndGroup(String name)", "full_signature": "public boolean isNotExistInProjectAndGroup(String name)", "class_method_signature": "GroupService.isNotExistInProjectAndGroup(String name)", "testcase": false, "constructor": false, "invocations": ["trim", "getCountByName", "getCountByName"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}