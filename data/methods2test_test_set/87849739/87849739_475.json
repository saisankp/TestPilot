{"test_class": {"identifier": "DittoPublicKeyProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Long LATCH_TIMEOUT = 20L;", "modifier": "private static final", "type": "Long", "declarator": "LATCH_TIMEOUT = 20L", "var_name": "LATCH_TIMEOUT"}, {"original_string": "private static final HttpRequest DISCOVERY_ENDPOINT_REQUEST =\n            HttpRequest.GET(\"https://google.com/.well-known/openid-configuration\");", "modifier": "private static final", "type": "HttpRequest", "declarator": "DISCOVERY_ENDPOINT_REQUEST =\n            HttpRequest.GET(\"https://google.com/.well-known/openid-configuration\")", "var_name": "DISCOVERY_ENDPOINT_REQUEST"}, {"original_string": "private static final String JWKS_URI = \"https://the.uri.com\";", "modifier": "private static final", "type": "String", "declarator": "JWKS_URI = \"https://the.uri.com\"", "var_name": "JWKS_URI"}, {"original_string": "private static final HttpRequest PUBLIC_KEYS_REQUEST = HttpRequest.GET(JWKS_URI);", "modifier": "private static final", "type": "HttpRequest", "declarator": "PUBLIC_KEYS_REQUEST = HttpRequest.GET(JWKS_URI)", "var_name": "PUBLIC_KEYS_REQUEST"}, {"original_string": "private static final String KEY_ID = \"cc34c0a0-bd5a-4a3c-a50d-a2a7db7643df\";", "modifier": "private static final", "type": "String", "declarator": "KEY_ID = \"cc34c0a0-bd5a-4a3c-a50d-a2a7db7643df\"", "var_name": "KEY_ID"}, {"original_string": "private ActorSystem actorSystem;", "modifier": "private", "type": "ActorSystem", "declarator": "actorSystem", "var_name": "actorSystem"}, {"original_string": "private PublicKeyProvider underTest;", "modifier": "private", "type": "PublicKeyProvider", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "@Mock\n    public HttpClientFacade httpClientMock;", "modifier": "@Mock\n    public", "type": "HttpClientFacade", "declarator": "httpClientMock", "var_name": "httpClientMock"}, {"original_string": "@Mock\n    public CacheConfig cacheConfigMock;", "modifier": "@Mock\n    public", "type": "CacheConfig", "declarator": "cacheConfigMock", "var_name": "cacheConfigMock"}], "file": "services/gateway/security/src/test/java/org/eclipse/ditto/services/gateway/security/authentication/jwt/DittoPublicKeyProviderTest.java"}, "test_case": {"identifier": "verifyThatKeyIsNotCachedIfResponseDoesNotContainKeyId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void verifyThatKeyIsNotCachedIfResponseDoesNotContainKeyId()\n            throws InterruptedException, ExecutionException, TimeoutException {\n\n        mockSuccessfulDiscoveryEndpointRequest();\n        mockSuccessfulPublicKeysRequestWithoutMatchingKeyId();\n\n        assertThat(underTest.getPublicKey(\"google.com\", KEY_ID).get(LATCH_TIMEOUT, TimeUnit.SECONDS)).isEmpty();\n        verify(httpClientMock).createSingleHttpRequest(DISCOVERY_ENDPOINT_REQUEST);\n        verify(httpClientMock).createSingleHttpRequest(PUBLIC_KEYS_REQUEST);\n\n        Mockito.clearInvocations(httpClientMock);\n\n        assertThat(underTest.getPublicKey(\"google.com\", KEY_ID).get(LATCH_TIMEOUT, TimeUnit.SECONDS)).isEmpty();\n        verify(httpClientMock).createSingleHttpRequest(DISCOVERY_ENDPOINT_REQUEST);\n        verify(httpClientMock).createSingleHttpRequest(PUBLIC_KEYS_REQUEST);\n    }", "signature": "void verifyThatKeyIsNotCachedIfResponseDoesNotContainKeyId()", "full_signature": "@Test public void verifyThatKeyIsNotCachedIfResponseDoesNotContainKeyId()", "class_method_signature": "DittoPublicKeyProviderTest.verifyThatKeyIsNotCachedIfResponseDoesNotContainKeyId()", "testcase": true, "constructor": false, "invocations": ["mockSuccessfulDiscoveryEndpointRequest", "mockSuccessfulPublicKeysRequestWithoutMatchingKeyId", "isEmpty", "assertThat", "get", "getPublicKey", "createSingleHttpRequest", "verify", "createSingleHttpRequest", "verify", "clearInvocations", "isEmpty", "assertThat", "get", "getPublicKey", "createSingleHttpRequest", "verify", "createSingleHttpRequest", "verify"]}, "focal_class": {"identifier": "DittoPublicKeyProvider", "superclass": "", "interfaces": "implements PublicKeyProvider", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(DittoPublicKeyProvider.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(DittoPublicKeyProvider.class)", "var_name": "LOGGER"}, {"original_string": "private static final long JWK_REQUEST_TIMEOUT_MILLISECONDS = 5000;", "modifier": "private static final", "type": "long", "declarator": "JWK_REQUEST_TIMEOUT_MILLISECONDS = 5000", "var_name": "JWK_REQUEST_TIMEOUT_MILLISECONDS"}, {"original_string": "private static final String OPENID_CONNECT_DISCOVERY_PATH = \"/.well-known/openid-configuration\";", "modifier": "private static final", "type": "String", "declarator": "OPENID_CONNECT_DISCOVERY_PATH = \"/.well-known/openid-configuration\"", "var_name": "OPENID_CONNECT_DISCOVERY_PATH"}, {"original_string": "private static final String HTTPS = \"https://\";", "modifier": "private static final", "type": "String", "declarator": "HTTPS = \"https://\"", "var_name": "HTTPS"}, {"original_string": "private static final JsonFieldDefinition<String> JSON_JWKS_URI = JsonFieldDefinition.ofString(\"jwks_uri\");", "modifier": "private static final", "type": "JsonFieldDefinition<String>", "declarator": "JSON_JWKS_URI = JsonFieldDefinition.ofString(\"jwks_uri\")", "var_name": "JSON_JWKS_URI"}, {"original_string": "private final JwtSubjectIssuersConfig jwtSubjectIssuersConfig;", "modifier": "private final", "type": "JwtSubjectIssuersConfig", "declarator": "jwtSubjectIssuersConfig", "var_name": "jwtSubjectIssuersConfig"}, {"original_string": "private final HttpClientFacade httpClient;", "modifier": "private final", "type": "HttpClientFacade", "declarator": "httpClient", "var_name": "httpClient"}, {"original_string": "private final Cache<PublicKeyIdWithIssuer, PublicKey> publicKeyCache;", "modifier": "private final", "type": "Cache<PublicKeyIdWithIssuer, PublicKey>", "declarator": "publicKeyCache", "var_name": "publicKeyCache"}], "methods": [{"identifier": "DittoPublicKeyProvider", "parameters": "(final JwtSubjectIssuersConfig jwtSubjectIssuersConfig,\n            final HttpClientFacade httpClient,\n            final CacheConfig publicKeysConfig,\n            final String cacheName)", "modifiers": "private", "return": "", "signature": " DittoPublicKeyProvider(final JwtSubjectIssuersConfig jwtSubjectIssuersConfig,\n            final HttpClientFacade httpClient,\n            final CacheConfig publicKeysConfig,\n            final String cacheName)", "full_signature": "private  DittoPublicKeyProvider(final JwtSubjectIssuersConfig jwtSubjectIssuersConfig,\n            final HttpClientFacade httpClient,\n            final CacheConfig publicKeysConfig,\n            final String cacheName)", "class_method_signature": "DittoPublicKeyProvider.DittoPublicKeyProvider(final JwtSubjectIssuersConfig jwtSubjectIssuersConfig,\n            final HttpClientFacade httpClient,\n            final CacheConfig publicKeysConfig,\n            final String cacheName)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final JwtSubjectIssuersConfig jwtSubjectIssuersConfig,\n            final HttpClientFacade httpClient,\n            final CacheConfig publicKeysCacheConfig,\n            final String cacheName)", "modifiers": "public static", "return": "PublicKeyProvider", "signature": "PublicKeyProvider of(final JwtSubjectIssuersConfig jwtSubjectIssuersConfig,\n            final HttpClientFacade httpClient,\n            final CacheConfig publicKeysCacheConfig,\n            final String cacheName)", "full_signature": "public static PublicKeyProvider of(final JwtSubjectIssuersConfig jwtSubjectIssuersConfig,\n            final HttpClientFacade httpClient,\n            final CacheConfig publicKeysCacheConfig,\n            final String cacheName)", "class_method_signature": "DittoPublicKeyProvider.of(final JwtSubjectIssuersConfig jwtSubjectIssuersConfig,\n            final HttpClientFacade httpClient,\n            final CacheConfig publicKeysCacheConfig,\n            final String cacheName)", "testcase": false, "constructor": false}, {"identifier": "getPublicKey", "parameters": "(final String issuer, final String keyId)", "modifiers": "@Override public", "return": "CompletableFuture<Optional<PublicKey>>", "signature": "CompletableFuture<Optional<PublicKey>> getPublicKey(final String issuer, final String keyId)", "full_signature": "@Override public CompletableFuture<Optional<PublicKey>> getPublicKey(final String issuer, final String keyId)", "class_method_signature": "DittoPublicKeyProvider.getPublicKey(final String issuer, final String keyId)", "testcase": false, "constructor": false}, {"identifier": "loadPublicKey", "parameters": "(final PublicKeyIdWithIssuer publicKeyIdWithIssuer,\n            final Executor executor)", "modifiers": "private", "return": "CompletableFuture<PublicKey>", "signature": "CompletableFuture<PublicKey> loadPublicKey(final PublicKeyIdWithIssuer publicKeyIdWithIssuer,\n            final Executor executor)", "full_signature": "private CompletableFuture<PublicKey> loadPublicKey(final PublicKeyIdWithIssuer publicKeyIdWithIssuer,\n            final Executor executor)", "class_method_signature": "DittoPublicKeyProvider.loadPublicKey(final PublicKeyIdWithIssuer publicKeyIdWithIssuer,\n            final Executor executor)", "testcase": false, "constructor": false}, {"identifier": "getDiscoveryEndpoint", "parameters": "(final String issuer)", "modifiers": "private", "return": "String", "signature": "String getDiscoveryEndpoint(final String issuer)", "full_signature": "private String getDiscoveryEndpoint(final String issuer)", "class_method_signature": "DittoPublicKeyProvider.getDiscoveryEndpoint(final String issuer)", "testcase": false, "constructor": false}, {"identifier": "mapResponseToJsonArray", "parameters": "(final HttpResponse response)", "modifiers": "private", "return": "CompletableFuture<JsonArray>", "signature": "CompletableFuture<JsonArray> mapResponseToJsonArray(final HttpResponse response)", "full_signature": "private CompletableFuture<JsonArray> mapResponseToJsonArray(final HttpResponse response)", "class_method_signature": "DittoPublicKeyProvider.mapResponseToJsonArray(final HttpResponse response)", "testcase": false, "constructor": false}, {"identifier": "getPublicKeysFromDiscoveryEndpoint", "parameters": "(final String discoveryEndpoint)", "modifiers": "private", "return": "HttpResponse", "signature": "HttpResponse getPublicKeysFromDiscoveryEndpoint(final String discoveryEndpoint)", "full_signature": "private HttpResponse getPublicKeysFromDiscoveryEndpoint(final String discoveryEndpoint)", "class_method_signature": "DittoPublicKeyProvider.getPublicKeysFromDiscoveryEndpoint(final String discoveryEndpoint)", "testcase": false, "constructor": false}, {"identifier": "extractDittoRuntimeException", "parameters": "(final ExecutionException e,\n            final String discoveryEndpoint)", "modifiers": "private static", "return": "DittoRuntimeException", "signature": "DittoRuntimeException extractDittoRuntimeException(final ExecutionException e,\n            final String discoveryEndpoint)", "full_signature": "private static DittoRuntimeException extractDittoRuntimeException(final ExecutionException e,\n            final String discoveryEndpoint)", "class_method_signature": "DittoPublicKeyProvider.extractDittoRuntimeException(final ExecutionException e,\n            final String discoveryEndpoint)", "testcase": false, "constructor": false}, {"identifier": "mapResponseToJsonObject", "parameters": "(final HttpResponse response)", "modifiers": "private", "return": "CompletionStage<JsonObject>", "signature": "CompletionStage<JsonObject> mapResponseToJsonObject(final HttpResponse response)", "full_signature": "private CompletionStage<JsonObject> mapResponseToJsonObject(final HttpResponse response)", "class_method_signature": "DittoPublicKeyProvider.mapResponseToJsonObject(final HttpResponse response)", "testcase": false, "constructor": false}, {"identifier": "handleNonSuccessResponse", "parameters": "(final HttpResponse response)", "modifiers": "private", "return": "void", "signature": "void handleNonSuccessResponse(final HttpResponse response)", "full_signature": "private void handleNonSuccessResponse(final HttpResponse response)", "class_method_signature": "DittoPublicKeyProvider.handleNonSuccessResponse(final HttpResponse response)", "testcase": false, "constructor": false}, {"identifier": "getBodyAsString", "parameters": "(final HttpResponse response)", "modifiers": "private", "return": "CompletionStage<String>", "signature": "CompletionStage<String> getBodyAsString(final HttpResponse response)", "full_signature": "private CompletionStage<String> getBodyAsString(final HttpResponse response)", "class_method_signature": "DittoPublicKeyProvider.getBodyAsString(final HttpResponse response)", "testcase": false, "constructor": false}, {"identifier": "handleUnexpectedException", "parameters": "(final Throwable e,\n            final String discoveryEndpoint)", "modifiers": "private static", "return": "PublicKeyProviderUnavailableException", "signature": "PublicKeyProviderUnavailableException handleUnexpectedException(final Throwable e,\n            final String discoveryEndpoint)", "full_signature": "private static PublicKeyProviderUnavailableException handleUnexpectedException(final Throwable e,\n            final String discoveryEndpoint)", "class_method_signature": "DittoPublicKeyProvider.handleUnexpectedException(final Throwable e,\n            final String discoveryEndpoint)", "testcase": false, "constructor": false}, {"identifier": "mapToPublicKey", "parameters": "(final JsonArray publicKeys, final String keyId,\n            final String discoveryEndpoint)", "modifiers": "private static", "return": "PublicKey", "signature": "PublicKey mapToPublicKey(final JsonArray publicKeys, final String keyId,\n            final String discoveryEndpoint)", "full_signature": "private static PublicKey mapToPublicKey(final JsonArray publicKeys, final String keyId,\n            final String discoveryEndpoint)", "class_method_signature": "DittoPublicKeyProvider.mapToPublicKey(final JsonArray publicKeys, final String keyId,\n            final String discoveryEndpoint)", "testcase": false, "constructor": false}], "file": "services/gateway/security/src/main/java/org/eclipse/ditto/services/gateway/security/authentication/jwt/DittoPublicKeyProvider.java"}, "focal_method": {"identifier": "getPublicKey", "parameters": "(final String issuer, final String keyId)", "modifiers": "@Override public", "return": "CompletableFuture<Optional<PublicKey>>", "body": "@Override\n    public CompletableFuture<Optional<PublicKey>> getPublicKey(final String issuer, final String keyId) {\n        argumentNotNull(issuer);\n        argumentNotNull(keyId);\n\n        return publicKeyCache.get(PublicKeyIdWithIssuer.of(keyId, issuer));\n    }", "signature": "CompletableFuture<Optional<PublicKey>> getPublicKey(final String issuer, final String keyId)", "full_signature": "@Override public CompletableFuture<Optional<PublicKey>> getPublicKey(final String issuer, final String keyId)", "class_method_signature": "DittoPublicKeyProvider.getPublicKey(final String issuer, final String keyId)", "testcase": false, "constructor": false, "invocations": ["argumentNotNull", "argumentNotNull", "get", "of"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}