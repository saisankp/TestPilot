{"test_class": {"identifier": "SpeedFormatterUtilTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [{"original_string": "private static final double METERS_PER_SECOND_SPEED = 15;", "modifier": "private static final", "type": "double", "declarator": "METERS_PER_SECOND_SPEED = 15", "var_name": "METERS_PER_SECOND_SPEED"}, {"original_string": "private static final double KILOMETERS_PER_HOUR_SPEED = 54;", "modifier": "private static final", "type": "double", "declarator": "KILOMETERS_PER_HOUR_SPEED = 54", "var_name": "KILOMETERS_PER_HOUR_SPEED"}, {"original_string": "private static final double MILES_PER_HOUR_SPEED = 34;", "modifier": "private static final", "type": "double", "declarator": "MILES_PER_HOUR_SPEED = 34", "var_name": "MILES_PER_HOUR_SPEED"}], "file": "MSDKUIKit/MSDKUILib/src/test/java/com/here/msdkui/common/SpeedFormatterUtilTest.java"}, "test_case": {"identifier": "testFormat", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFormat() {\n        assertEquals(\n                SpeedFormatterUtil.format(METERS_PER_SECOND_SPEED, UnitSystem.METRIC),\n                (int) KILOMETERS_PER_HOUR_SPEED);\n        assertEquals(\n                SpeedFormatterUtil.format(METERS_PER_SECOND_SPEED, UnitSystem.IMPERIAL_UK),\n                (int) MILES_PER_HOUR_SPEED);\n        assertEquals(\n                SpeedFormatterUtil.format(METERS_PER_SECOND_SPEED, UnitSystem.IMPERIAL_US),\n                (int) MILES_PER_HOUR_SPEED);\n    }", "signature": "void testFormat()", "full_signature": "@Test public void testFormat()", "class_method_signature": "SpeedFormatterUtilTest.testFormat()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "format", "assertEquals", "format", "assertEquals", "format"]}, "focal_class": {"identifier": "SpeedFormatterUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "SpeedFormatterUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " SpeedFormatterUtil()", "full_signature": "private  SpeedFormatterUtil()", "class_method_signature": "SpeedFormatterUtil.SpeedFormatterUtil()", "testcase": false, "constructor": true}, {"identifier": "format", "parameters": "(final double metersPerSecond, final UnitSystem system)", "modifiers": "public static", "return": "int", "signature": "int format(final double metersPerSecond, final UnitSystem system)", "full_signature": "public static int format(final double metersPerSecond, final UnitSystem system)", "class_method_signature": "SpeedFormatterUtil.format(final double metersPerSecond, final UnitSystem system)", "testcase": false, "constructor": false}, {"identifier": "getUnitString", "parameters": "(final Context context, final UnitSystem system)", "modifiers": "public static", "return": "String", "signature": "String getUnitString(final Context context, final UnitSystem system)", "full_signature": "public static String getUnitString(final Context context, final UnitSystem system)", "class_method_signature": "SpeedFormatterUtil.getUnitString(final Context context, final UnitSystem system)", "testcase": false, "constructor": false}], "file": "MSDKUIKit/MSDKUILib/src/main/java/com/here/msdkui/common/SpeedFormatterUtil.java"}, "focal_method": {"identifier": "format", "parameters": "(final double metersPerSecond, final UnitSystem system)", "modifiers": "public static", "return": "int", "body": "public static int format(final double metersPerSecond, final UnitSystem system) {\n        SpeedConverter speedConverter = new SpeedConverter();\n        Measurement speedMeterPerSecond = new Measurement(metersPerSecond,\n                MeasurementUnit.METERS_PER_SECOND);\n        double ret;\n        switch (system) {\n            case IMPERIAL_UK:\n            case IMPERIAL_US:\n                ret = speedConverter.convert(speedMeterPerSecond.getValue(),\n                        speedMeterPerSecond.getUnit(), MeasurementUnit.MILES_PER_HOUR).getValue();\n                break;\n            case METRIC:\n            default: // metric\n                ret = speedConverter.convert(speedMeterPerSecond.getValue(),\n                        speedMeterPerSecond.getUnit(), MeasurementUnit.KILOMETERS_PER_HOUR).getValue();\n                break;\n        }\n        return (int) Math.round(ret);\n    }", "signature": "int format(final double metersPerSecond, final UnitSystem system)", "full_signature": "public static int format(final double metersPerSecond, final UnitSystem system)", "class_method_signature": "SpeedFormatterUtil.format(final double metersPerSecond, final UnitSystem system)", "testcase": false, "constructor": false, "invocations": ["getValue", "convert", "getValue", "getUnit", "getValue", "convert", "getValue", "getUnit", "round"]}, "repository": {"repo_id": 141680627, "url": "https://github.com/heremaps/msdkui-android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 35, "size": 5559, "license": "licensed"}}