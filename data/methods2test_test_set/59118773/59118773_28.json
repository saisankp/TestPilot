{"test_class": {"identifier": "ClassFieldsDefaultTest", "superclass": "", "interfaces": "", "fields": [], "file": "persistence/src/test/java/org/devgateway/toolkit/persistence/excel/info/ClassFieldsDefaultTest.java"}, "test_case": {"identifier": "getFields", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getFields() throws Exception {\n        final String[] expectedFields = {\"id\", \"label\"};\n\n        final ClassFields classFields = new ClassFieldsDefault(TestClass.class);\n        final Iterator<Field> fields = classFields.getFields();\n\n        final List<String> actualFields = new ArrayList<>();\n        while (fields.hasNext()) {\n            final Field f = fields.next();\n            actualFields.add(f.getName());\n        }\n\n        Assert.assertArrayEquals(\"Check declared fields\", expectedFields, actualFields.toArray());\n    }", "signature": "void getFields()", "full_signature": "@Test public void getFields()", "class_method_signature": "ClassFieldsDefaultTest.getFields()", "testcase": true, "constructor": false, "invocations": ["getFields", "hasNext", "next", "add", "getName", "assertArrayEquals", "toArray"]}, "focal_class": {"identifier": "ClassFieldsDefault", "superclass": "", "interfaces": "implements ClassFields", "fields": [{"original_string": "private final Class clazz;", "modifier": "private final", "type": "Class", "declarator": "clazz", "var_name": "clazz"}, {"original_string": "private final Boolean getInheritedFields;", "modifier": "private final", "type": "Boolean", "declarator": "getInheritedFields", "var_name": "getInheritedFields"}, {"original_string": "private Field[] declaredFields;", "modifier": "private", "type": "Field[]", "declarator": "declaredFields", "var_name": "declaredFields"}], "methods": [{"identifier": "ClassFieldsDefault", "parameters": "(final Class clazz, final Boolean getInheritedFields)", "modifiers": "public", "return": "", "signature": " ClassFieldsDefault(final Class clazz, final Boolean getInheritedFields)", "full_signature": "public  ClassFieldsDefault(final Class clazz, final Boolean getInheritedFields)", "class_method_signature": "ClassFieldsDefault.ClassFieldsDefault(final Class clazz, final Boolean getInheritedFields)", "testcase": false, "constructor": true}, {"identifier": "ClassFieldsDefault", "parameters": "(final Class clazz)", "modifiers": "public", "return": "", "signature": " ClassFieldsDefault(final Class clazz)", "full_signature": "public  ClassFieldsDefault(final Class clazz)", "class_method_signature": "ClassFieldsDefault.ClassFieldsDefault(final Class clazz)", "testcase": false, "constructor": true}, {"identifier": "getFields", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Field>", "signature": "Iterator<Field> getFields()", "full_signature": "@Override public Iterator<Field> getFields()", "class_method_signature": "ClassFieldsDefault.getFields()", "testcase": false, "constructor": false}, {"identifier": "getClazz", "parameters": "()", "modifiers": "@Override public", "return": "Class", "signature": "Class getClazz()", "full_signature": "@Override public Class getClazz()", "class_method_signature": "ClassFieldsDefault.getClazz()", "testcase": false, "constructor": false}, {"identifier": "getAllFields", "parameters": "(final Class clazz)", "modifiers": "private", "return": "List<Field>", "signature": "List<Field> getAllFields(final Class clazz)", "full_signature": "private List<Field> getAllFields(final Class clazz)", "class_method_signature": "ClassFieldsDefault.getAllFields(final Class clazz)", "testcase": false, "constructor": false}], "file": "persistence/src/main/java/org/devgateway/toolkit/persistence/excel/info/ClassFieldsDefault.java"}, "focal_method": {"identifier": "getFields", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Field>", "body": "@Override\n    public Iterator<Field> getFields() {\n        // cache declared fields of a class\n        if (declaredFields == null) {\n            if (getInheritedFields) {\n                declaredFields = getAllFields(clazz).toArray(new Field[getAllFields(clazz).size()]);\n            } else {\n                declaredFields = clazz.getDeclaredFields();\n            }\n        }\n\n        // filter some of the fields including this$0 used in inner classes\n        final Iterator<Field> fields = Arrays.stream(declaredFields)\n                .filter(field -> !field.getName().equals(\"serialVersionUID\"))\n                .filter(field -> !field.getName().equals(\"this$0\"))\n                .iterator();\n\n        return fields;\n    }", "signature": "Iterator<Field> getFields()", "full_signature": "@Override public Iterator<Field> getFields()", "class_method_signature": "ClassFieldsDefault.getFields()", "testcase": false, "constructor": false, "invocations": ["toArray", "getAllFields", "size", "getAllFields", "getDeclaredFields", "iterator", "filter", "filter", "stream", "equals", "getName", "equals", "getName"]}, "repository": {"repo_id": 59118773, "url": "https://github.com/devgateway/oc-explorer", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 9004, "license": "licensed"}}