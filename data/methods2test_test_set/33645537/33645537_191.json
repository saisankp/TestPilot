{"test_class": {"identifier": "AnagramsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Anagrams anagrams;", "modifier": "private", "type": "Anagrams", "declarator": "anagrams", "var_name": "anagrams"}], "file": "algs/src/test/java/com/github/pedrovgs/problem25/AnagramsTest.java"}, "test_case": {"identifier": "shouldCalculateEveryAnagram", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void shouldCalculateEveryAnagram() {\n    String input = \"abc\";\n\n    List<String> result = anagrams.get(input);\n    String[] arrayResult = new String[result.size()];\n    result.toArray(arrayResult);\n\n    String[] expectedArray = { \"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\" };\n    assertArrayEquals(expectedArray, arrayResult);\n  }", "signature": "void shouldCalculateEveryAnagram()", "full_signature": "@Test public void shouldCalculateEveryAnagram()", "class_method_signature": "AnagramsTest.shouldCalculateEveryAnagram()", "testcase": true, "constructor": false, "invocations": ["get", "size", "toArray", "assertArrayEquals"]}, "focal_class": {"identifier": "Anagrams", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "get", "parameters": "(String input)", "modifiers": "public", "return": "List<String>", "signature": "List<String> get(String input)", "full_signature": "public List<String> get(String input)", "class_method_signature": "Anagrams.get(String input)", "testcase": false, "constructor": false}, {"identifier": "getAnagramsInner", "parameters": "(String prefix, String word)", "modifiers": "private", "return": "List<String>", "signature": "List<String> getAnagramsInner(String prefix, String word)", "full_signature": "private List<String> getAnagramsInner(String prefix, String word)", "class_method_signature": "Anagrams.getAnagramsInner(String prefix, String word)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem25/Anagrams.java"}, "focal_method": {"identifier": "get", "parameters": "(String input)", "modifiers": "public", "return": "List<String>", "body": "public List<String> get(String input) {\n    List<String> result = null;\n    if (input == null) {\n      throw new IllegalArgumentException(\"You can't pass a null String as input.\");\n    } else if (input.isEmpty()) {\n      result = new LinkedList<String>();\n    } else {\n      result = getAnagramsInner(\"\", input);\n    }\n    return result;\n  }", "signature": "List<String> get(String input)", "full_signature": "public List<String> get(String input)", "class_method_signature": "Anagrams.get(String input)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "getAnagramsInner"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}