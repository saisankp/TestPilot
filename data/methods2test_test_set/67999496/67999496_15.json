{"test_class": {"identifier": "AuthServicePluginUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "plugin-api/src/test/java/com/gentics/mesh/plugin/auth/AuthServicePluginUtilsTest.java"}, "test_case": {"identifier": "testRoleFilter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testRoleFilter() {\n\t\tList<RoleResponse> roles = new ArrayList<>();\n\t\troles.add(new RoleResponse().setName(\"role1\").setGroups(new GroupReference().setName(\"group1\")));\n\t\troles.add(new RoleResponse().setName(\"role2\"));\n\t\troles.add(new RoleResponse().setName(\"role3\"));\n\t\tList<GroupResponse> groups = new ArrayList<>();\n\t\tgroups.add(new GroupResponse().setName(\"group2\").setRoles(new RoleReference().setName(\"role2\")));\n\t\tgroups.add(new GroupResponse().setName(\"group3\"));\n\n\t\tRoleFilter filter = AuthServicePluginUtils.createRoleFilter(roles, groups);\n\t\tassertTrue(filter.filter(\"admin\", \"role\"));\n\t\tassertTrue(filter.filter(\"group3\", \"role3\"));\n\t\tassertFalse(filter.filter(\"group2\", \"role2\"));\n\t\tassertFalse(filter.filter(\"group1\", \"role1\"));\n\t}", "signature": "void testRoleFilter()", "full_signature": "@Test public void testRoleFilter()", "class_method_signature": "AuthServicePluginUtilsTest.testRoleFilter()", "testcase": true, "constructor": false, "invocations": ["add", "setGroups", "setName", "setName", "add", "setName", "add", "setName", "add", "setRoles", "setName", "setName", "add", "setName", "createRoleFilter", "assertTrue", "filter", "assertTrue", "filter", "assertFalse", "filter", "assertFalse", "filter"]}, "focal_class": {"identifier": "AuthServicePluginUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "AuthServicePluginUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " AuthServicePluginUtils()", "full_signature": "private  AuthServicePluginUtils()", "class_method_signature": "AuthServicePluginUtils.AuthServicePluginUtils()", "testcase": false, "constructor": true}, {"identifier": "createRoleFilter", "parameters": "(List<RoleResponse> roles, List<GroupResponse> groups)", "modifiers": "public static", "return": "RoleFilter", "signature": "RoleFilter createRoleFilter(List<RoleResponse> roles, List<GroupResponse> groups)", "full_signature": "public static RoleFilter createRoleFilter(List<RoleResponse> roles, List<GroupResponse> groups)", "class_method_signature": "AuthServicePluginUtils.createRoleFilter(List<RoleResponse> roles, List<GroupResponse> groups)", "testcase": false, "constructor": false}, {"identifier": "createGroupFilter", "parameters": "(List<GroupResponse> groups)", "modifiers": "public static", "return": "GroupFilter", "signature": "GroupFilter createGroupFilter(List<GroupResponse> groups)", "full_signature": "public static GroupFilter createGroupFilter(List<GroupResponse> groups)", "class_method_signature": "AuthServicePluginUtils.createGroupFilter(List<GroupResponse> groups)", "testcase": false, "constructor": false}], "file": "plugin-api/src/main/java/com/gentics/mesh/plugin/auth/AuthServicePluginUtils.java"}, "focal_method": {"identifier": "createRoleFilter", "parameters": "(List<RoleResponse> roles, List<GroupResponse> groups)", "modifiers": "public static", "return": "RoleFilter", "body": "public static RoleFilter createRoleFilter(List<RoleResponse> roles, List<GroupResponse> groups) {\n\t\tSet<String> allowed = new HashSet<>();\n\t\tgroups.forEach(g -> {\n\t\t\tg.getRoles().forEach(r -> {\n\t\t\t\tallowed.add(r.getName() + \"-\" + g.getName());\n\t\t\t});\n\t\t});\n\t\troles.forEach(r -> {\n\t\t\tr.getGroups().forEach(g -> {\n\t\t\t\tallowed.add(r.getName() + \"-\" + g.getName());\n\t\t\t});\n\t\t});\n\t\treturn (groupName, roleName) -> {\n\t\t\treturn !allowed.contains(roleName + \"-\" + groupName);\n\t\t};\n\t}", "signature": "RoleFilter createRoleFilter(List<RoleResponse> roles, List<GroupResponse> groups)", "full_signature": "public static RoleFilter createRoleFilter(List<RoleResponse> roles, List<GroupResponse> groups)", "class_method_signature": "AuthServicePluginUtils.createRoleFilter(List<RoleResponse> roles, List<GroupResponse> groups)", "testcase": false, "constructor": false, "invocations": ["forEach", "forEach", "getRoles", "add", "getName", "getName", "forEach", "forEach", "getGroups", "add", "getName", "getName", "contains"]}, "repository": {"repo_id": 67999496, "url": "https://github.com/gentics/mesh", "stars": 412, "created": "9/12/2016 10:28:41 AM +00:00", "updates": "2020-01-27T10:25:42+00:00", "fork": "False", "license": "licensed"}}