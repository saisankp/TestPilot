{"test_class": {"identifier": "DistributedQueueTest", "superclass": "extends ClientBase", "interfaces": "", "fields": [], "file": "bigdata-intro/zk-intro/src/test/java/org/apache/zookeeper/recipes/queue/DistributedQueueTest.java"}, "test_case": {"identifier": "testRemove1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRemove1() throws Exception{\n        String dir = \"/testRemove1\";\n        String testString = \"Hello World\";\n        final int num_clients = 1;\n        ZooKeeper clients[] = new ZooKeeper[num_clients];\n        DistributedQueue queueHandles[] = new DistributedQueue[num_clients];\n        for(int i=0; i < clients.length; i++){\n            clients[i] = createClient();\n            queueHandles[i] = new DistributedQueue(clients[i], dir, null);\n        }\n\n        try{\n            queueHandles[0].remove();\n        }catch(NoSuchElementException e){\n            return;\n        }\n        Assert.assertTrue(false);\n    }", "signature": "void testRemove1()", "full_signature": "@Test public void testRemove1()", "class_method_signature": "DistributedQueueTest.testRemove1()", "testcase": true, "constructor": false, "invocations": ["createClient", "remove", "assertTrue"]}, "focal_class": {"identifier": "DistributedQueue", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(DistributedQueue.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(DistributedQueue.class)", "var_name": "LOG"}, {"original_string": "private final String dir;", "modifier": "private final", "type": "String", "declarator": "dir", "var_name": "dir"}, {"original_string": "private ZooKeeper zookeeper;", "modifier": "private", "type": "ZooKeeper", "declarator": "zookeeper", "var_name": "zookeeper"}, {"original_string": "private List<ACL> acl = ZooDefs.Ids.OPEN_ACL_UNSAFE;", "modifier": "private", "type": "List<ACL>", "declarator": "acl = ZooDefs.Ids.OPEN_ACL_UNSAFE", "var_name": "acl"}, {"original_string": "private final String prefix = \"qn-\";", "modifier": "private final", "type": "String", "declarator": "prefix = \"qn-\"", "var_name": "prefix"}], "methods": [{"identifier": "DistributedQueue", "parameters": "(ZooKeeper zookeeper, String dir, List<ACL> acl)", "modifiers": "public", "return": "", "signature": " DistributedQueue(ZooKeeper zookeeper, String dir, List<ACL> acl)", "full_signature": "public  DistributedQueue(ZooKeeper zookeeper, String dir, List<ACL> acl)", "class_method_signature": "DistributedQueue.DistributedQueue(ZooKeeper zookeeper, String dir, List<ACL> acl)", "testcase": false, "constructor": true}, {"identifier": "orderedChildren", "parameters": "(Watcher watcher)", "modifiers": "private", "return": "TreeMap<Long,String>", "signature": "TreeMap<Long,String> orderedChildren(Watcher watcher)", "full_signature": "private TreeMap<Long,String> orderedChildren(Watcher watcher)", "class_method_signature": "DistributedQueue.orderedChildren(Watcher watcher)", "testcase": false, "constructor": false}, {"identifier": "smallestChildName", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String smallestChildName()", "full_signature": "private String smallestChildName()", "class_method_signature": "DistributedQueue.smallestChildName()", "testcase": false, "constructor": false}, {"identifier": "element", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] element()", "full_signature": "public byte[] element()", "class_method_signature": "DistributedQueue.element()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] remove()", "full_signature": "public byte[] remove()", "class_method_signature": "DistributedQueue.remove()", "testcase": false, "constructor": false}, {"identifier": "take", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] take()", "full_signature": "public byte[] take()", "class_method_signature": "DistributedQueue.take()", "testcase": false, "constructor": false}, {"identifier": "offer", "parameters": "(byte[] data)", "modifiers": "public", "return": "boolean", "signature": "boolean offer(byte[] data)", "full_signature": "public boolean offer(byte[] data)", "class_method_signature": "DistributedQueue.offer(byte[] data)", "testcase": false, "constructor": false}, {"identifier": "peek", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] peek()", "full_signature": "public byte[] peek()", "class_method_signature": "DistributedQueue.peek()", "testcase": false, "constructor": false}, {"identifier": "poll", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] poll()", "full_signature": "public byte[] poll()", "class_method_signature": "DistributedQueue.poll()", "testcase": false, "constructor": false}], "file": "bigdata-intro/zk-intro/src/main/java/org/apache/zookeeper/recipes/queue/DistributedQueue.java"}, "focal_method": {"identifier": "remove", "parameters": "()", "modifiers": "public", "return": "byte[]", "body": "public byte[] remove() throws NoSuchElementException, KeeperException, InterruptedException {\n        TreeMap<Long,String> orderedChildren;\n        // Same as for element.  Should refactor this.\n        while(true){\n            try{\n                orderedChildren = orderedChildren(null);\n            }catch(KeeperException.NoNodeException e){\n                throw new NoSuchElementException();\n            }\n            if(orderedChildren.size() == 0) throw new NoSuchElementException();\n\n            for(String headNode : orderedChildren.values()){\n                String path = dir +\"/\"+headNode;\n                try{\n                    byte[] data = zookeeper.getData(path, false, null);\n                    zookeeper.delete(path, -1);\n                    return data;\n                }catch(KeeperException.NoNodeException e){\n                    // Another client deleted the node first.\n                }\n            }\n\n        }\n    }", "signature": "byte[] remove()", "full_signature": "public byte[] remove()", "class_method_signature": "DistributedQueue.remove()", "testcase": false, "constructor": false, "invocations": ["orderedChildren", "size", "values", "getData", "delete"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}