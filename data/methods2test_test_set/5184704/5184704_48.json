{"test_class": {"identifier": "HandshakeTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/com/github/mpjct/jmpjct/mysql/proto/HandshakeTest.java"}, "test_case": {"identifier": "test_5_5_2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_5_5_2() {\n        // https://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::Handshake\n        byte[] packet = new byte[] {\n            (byte)0x36, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x0a, (byte)0x35, (byte)0x2e, (byte)0x35,\n            (byte)0x2e, (byte)0x32, (byte)0x2d, (byte)0x6d, (byte)0x32, (byte)0x00, (byte)0x0b, (byte)0x00,\n            (byte)0x00, (byte)0x00, (byte)0x64, (byte)0x76, (byte)0x48, (byte)0x40, (byte)0x49, (byte)0x2d,\n            (byte)0x43, (byte)0x4a, (byte)0x00, (byte)0xff, (byte)0xf7, (byte)0x08, (byte)0x02, (byte)0x00,\n            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,\n            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x2a, (byte)0x34, (byte)0x64,\n            (byte)0x7c, (byte)0x63, (byte)0x5a, (byte)0x77, (byte)0x6b, (byte)0x34, (byte)0x5e, (byte)0x5d,\n            (byte)0x3a, (byte)0x00\n        };\n        assertArrayEquals(packet, Handshake.loadFromPacket(packet).toPacket());\n    }", "signature": "void test_5_5_2()", "full_signature": "@Test public void test_5_5_2()", "class_method_signature": "HandshakeTest.test_5_5_2()", "testcase": true, "constructor": false, "invocations": ["assertArrayEquals", "toPacket", "loadFromPacket"]}, "focal_class": {"identifier": "Handshake", "superclass": "extends Packet", "interfaces": "", "fields": [{"original_string": "public long protocolVersion = 0x0a;", "modifier": "public", "type": "long", "declarator": "protocolVersion = 0x0a", "var_name": "protocolVersion"}, {"original_string": "public String serverVersion = \"\";", "modifier": "public", "type": "String", "declarator": "serverVersion = \"\"", "var_name": "serverVersion"}, {"original_string": "public long connectionId = 0;", "modifier": "public", "type": "long", "declarator": "connectionId = 0", "var_name": "connectionId"}, {"original_string": "public String challenge1 = \"\";", "modifier": "public", "type": "String", "declarator": "challenge1 = \"\"", "var_name": "challenge1"}, {"original_string": "public long capabilityFlags = Flags.CLIENT_PROTOCOL_41;", "modifier": "public", "type": "long", "declarator": "capabilityFlags = Flags.CLIENT_PROTOCOL_41", "var_name": "capabilityFlags"}, {"original_string": "public long characterSet = 0;", "modifier": "public", "type": "long", "declarator": "characterSet = 0", "var_name": "characterSet"}, {"original_string": "public long statusFlags = 0;", "modifier": "public", "type": "long", "declarator": "statusFlags = 0", "var_name": "statusFlags"}, {"original_string": "public String challenge2 = \"\";", "modifier": "public", "type": "String", "declarator": "challenge2 = \"\"", "var_name": "challenge2"}, {"original_string": "public long authPluginDataLength = 0;", "modifier": "public", "type": "long", "declarator": "authPluginDataLength = 0", "var_name": "authPluginDataLength"}, {"original_string": "public String authPluginName = \"\";", "modifier": "public", "type": "String", "declarator": "authPluginName = \"\"", "var_name": "authPluginName"}], "methods": [{"identifier": "setCapabilityFlag", "parameters": "(long flag)", "modifiers": "public", "return": "void", "signature": "void setCapabilityFlag(long flag)", "full_signature": "public void setCapabilityFlag(long flag)", "class_method_signature": "Handshake.setCapabilityFlag(long flag)", "testcase": false, "constructor": false}, {"identifier": "removeCapabilityFlag", "parameters": "(long flag)", "modifiers": "public", "return": "void", "signature": "void removeCapabilityFlag(long flag)", "full_signature": "public void removeCapabilityFlag(long flag)", "class_method_signature": "Handshake.removeCapabilityFlag(long flag)", "testcase": false, "constructor": false}, {"identifier": "toggleCapabilityFlag", "parameters": "(long flag)", "modifiers": "public", "return": "void", "signature": "void toggleCapabilityFlag(long flag)", "full_signature": "public void toggleCapabilityFlag(long flag)", "class_method_signature": "Handshake.toggleCapabilityFlag(long flag)", "testcase": false, "constructor": false}, {"identifier": "hasCapabilityFlag", "parameters": "(long flag)", "modifiers": "public", "return": "boolean", "signature": "boolean hasCapabilityFlag(long flag)", "full_signature": "public boolean hasCapabilityFlag(long flag)", "class_method_signature": "Handshake.hasCapabilityFlag(long flag)", "testcase": false, "constructor": false}, {"identifier": "setStatusFlag", "parameters": "(long flag)", "modifiers": "public", "return": "void", "signature": "void setStatusFlag(long flag)", "full_signature": "public void setStatusFlag(long flag)", "class_method_signature": "Handshake.setStatusFlag(long flag)", "testcase": false, "constructor": false}, {"identifier": "removeStatusFlag", "parameters": "(long flag)", "modifiers": "public", "return": "void", "signature": "void removeStatusFlag(long flag)", "full_signature": "public void removeStatusFlag(long flag)", "class_method_signature": "Handshake.removeStatusFlag(long flag)", "testcase": false, "constructor": false}, {"identifier": "toggleStatusFlag", "parameters": "(long flag)", "modifiers": "public", "return": "void", "signature": "void toggleStatusFlag(long flag)", "full_signature": "public void toggleStatusFlag(long flag)", "class_method_signature": "Handshake.toggleStatusFlag(long flag)", "testcase": false, "constructor": false}, {"identifier": "hasStatusFlag", "parameters": "(long flag)", "modifiers": "public", "return": "boolean", "signature": "boolean hasStatusFlag(long flag)", "full_signature": "public boolean hasStatusFlag(long flag)", "class_method_signature": "Handshake.hasStatusFlag(long flag)", "testcase": false, "constructor": false}, {"identifier": "getPayload", "parameters": "()", "modifiers": "public", "return": "ArrayList<byte[]>", "signature": "ArrayList<byte[]> getPayload()", "full_signature": "public ArrayList<byte[]> getPayload()", "class_method_signature": "Handshake.getPayload()", "testcase": false, "constructor": false}, {"identifier": "loadFromPacket", "parameters": "(byte[] packet)", "modifiers": "public static", "return": "Handshake", "signature": "Handshake loadFromPacket(byte[] packet)", "full_signature": "public static Handshake loadFromPacket(byte[] packet)", "class_method_signature": "Handshake.loadFromPacket(byte[] packet)", "testcase": false, "constructor": false}], "file": "src/com/github/mpjct/jmpjct/mysql/proto/Handshake.java"}, "focal_method": {"identifier": "loadFromPacket", "parameters": "(byte[] packet)", "modifiers": "public static", "return": "Handshake", "body": "public static Handshake loadFromPacket(byte[] packet) {\n        Handshake obj = new Handshake();\n        Proto proto = new Proto(packet, 3);\n\n        obj.sequenceId = proto.get_fixed_int(1);\n        obj.protocolVersion = proto.get_fixed_int(1);\n        obj.serverVersion = proto.get_null_str();\n        obj.connectionId = proto.get_fixed_int(4);\n        obj.challenge1 = proto.get_fixed_str(8);\n        proto.get_filler(1);\n        obj.capabilityFlags = proto.get_fixed_int(2) << 16;\n\n        if (proto.has_remaining_data()) {\n            obj.characterSet = proto.get_fixed_int(1);\n            obj.statusFlags = proto.get_fixed_int(2);\n            obj.setCapabilityFlag(proto.get_fixed_int(2));\n\n            if (obj.hasCapabilityFlag(Flags.CLIENT_PLUGIN_AUTH)) {\n                obj.authPluginDataLength = proto.get_fixed_int(1);\n            }\n            else {\n                proto.get_filler(1);\n            }\n\n            proto.get_filler(10);\n\n            if (obj.hasCapabilityFlag(Flags.CLIENT_SECURE_CONNECTION)) {\n                obj.challenge2 = proto.get_fixed_str(Math.max(13, obj.authPluginDataLength - 8));\n            }\n\n            if (obj.hasCapabilityFlag(Flags.CLIENT_PLUGIN_AUTH)) {\n                obj.authPluginName = proto.get_null_str();\n            }\n        }\n\n        return obj;\n    }", "signature": "Handshake loadFromPacket(byte[] packet)", "full_signature": "public static Handshake loadFromPacket(byte[] packet)", "class_method_signature": "Handshake.loadFromPacket(byte[] packet)", "testcase": false, "constructor": false, "invocations": ["get_fixed_int", "get_fixed_int", "get_null_str", "get_fixed_int", "get_fixed_str", "get_filler", "get_fixed_int", "has_remaining_data", "get_fixed_int", "get_fixed_int", "setCapabilityFlag", "get_fixed_int", "hasCapabilityFlag", "get_fixed_int", "get_filler", "get_filler", "hasCapabilityFlag", "get_fixed_str", "max", "hasCapabilityFlag", "get_null_str"]}, "repository": {"repo_id": 5184704, "url": "https://github.com/MPjct/JMPjct", "language": "Java", "is_fork": false, "fork_count": 52, "stargazer_count": 81, "size": 16233, "license": "licensed"}}