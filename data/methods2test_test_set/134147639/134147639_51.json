{"test_class": {"identifier": "AuthenticatorAssertionResponseTest", "superclass": "", "interfaces": "", "fields": [], "file": "webauthn4j-core/src/test/java/com/webauthn4j/data/AuthenticatorAssertionResponseTest.java"}, "test_case": {"identifier": "getUserHandle_test", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void getUserHandle_test() {\n        AuthenticatorAssertionResponse instance = new AuthenticatorAssertionResponse(new byte[0], new byte[1], new byte[2], new byte[3]);\n        assertThat(instance.getUserHandle()).isEqualTo(new byte[3]);\n    }", "signature": "void getUserHandle_test()", "full_signature": "@Test void getUserHandle_test()", "class_method_signature": "AuthenticatorAssertionResponseTest.getUserHandle_test()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "getUserHandle"]}, "focal_class": {"identifier": "AuthenticatorAssertionResponse", "superclass": "extends AuthenticatorResponse", "interfaces": "", "fields": [{"original_string": "private final byte[] authenticatorData;", "modifier": "private final", "type": "byte[]", "declarator": "authenticatorData", "var_name": "authenticatorData"}, {"original_string": "private final byte[] signature;", "modifier": "private final", "type": "byte[]", "declarator": "signature", "var_name": "signature"}, {"original_string": "private final byte[] userHandle;", "modifier": "private final", "type": "byte[]", "declarator": "userHandle", "var_name": "userHandle"}], "methods": [{"identifier": "AuthenticatorAssertionResponse", "parameters": "(byte[] clientDataJSON, byte[] authenticatorData, byte[] signature, byte[] userHandle)", "modifiers": "public", "return": "", "signature": " AuthenticatorAssertionResponse(byte[] clientDataJSON, byte[] authenticatorData, byte[] signature, byte[] userHandle)", "full_signature": "public  AuthenticatorAssertionResponse(byte[] clientDataJSON, byte[] authenticatorData, byte[] signature, byte[] userHandle)", "class_method_signature": "AuthenticatorAssertionResponse.AuthenticatorAssertionResponse(byte[] clientDataJSON, byte[] authenticatorData, byte[] signature, byte[] userHandle)", "testcase": false, "constructor": true}, {"identifier": "getAuthenticatorData", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getAuthenticatorData()", "full_signature": "public byte[] getAuthenticatorData()", "class_method_signature": "AuthenticatorAssertionResponse.getAuthenticatorData()", "testcase": false, "constructor": false}, {"identifier": "getSignature", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getSignature()", "full_signature": "public byte[] getSignature()", "class_method_signature": "AuthenticatorAssertionResponse.getSignature()", "testcase": false, "constructor": false}, {"identifier": "getUserHandle", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getUserHandle()", "full_signature": "public byte[] getUserHandle()", "class_method_signature": "AuthenticatorAssertionResponse.getUserHandle()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "AuthenticatorAssertionResponse.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AuthenticatorAssertionResponse.hashCode()", "testcase": false, "constructor": false}], "file": "webauthn4j-core/src/main/java/com/webauthn4j/data/AuthenticatorAssertionResponse.java"}, "focal_method": {"identifier": "getUserHandle", "parameters": "()", "modifiers": "public", "return": "byte[]", "body": "public byte[] getUserHandle() {\n        return ArrayUtil.clone(userHandle);\n    }", "signature": "byte[] getUserHandle()", "full_signature": "public byte[] getUserHandle()", "class_method_signature": "AuthenticatorAssertionResponse.getUserHandle()", "testcase": false, "constructor": false, "invocations": ["clone"]}, "repository": {"repo_id": 134147639, "url": "https://github.com/webauthn4j/webauthn4j", "stars": 101, "created": "5/20/2018 12:14:36 PM +00:00", "updates": "2020-01-27T13:01:46+00:00", "fork": "False", "license": "licensed"}}