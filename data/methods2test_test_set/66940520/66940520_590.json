{"test_class": {"identifier": "DateTimeUnitTest", "superclass": "", "interfaces": "", "fields": [], "file": "dhis-2/dhis-api/src/test/java/org/hisp/dhis/calendar/DateTimeUnitTest.java"}, "test_case": {"identifier": "fromJdkCalendarTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void fromJdkCalendarTest()\n    {\n        java.util.Calendar cal = new GregorianCalendar( 2014, 2, 20 );\n        DateTimeUnit dateTimeUnit = DateTimeUnit.fromJdkCalendar( cal );\n\n        assertEquals( 2014, dateTimeUnit.getYear() );\n        assertEquals( 3, dateTimeUnit.getMonth() );\n        assertEquals( 20, dateTimeUnit.getDay() );\n    }", "signature": "void fromJdkCalendarTest()", "full_signature": "@Test public void fromJdkCalendarTest()", "class_method_signature": "DateTimeUnitTest.fromJdkCalendarTest()", "testcase": true, "constructor": false, "invocations": ["fromJdkCalendar", "assertEquals", "getYear", "assertEquals", "getMonth", "assertEquals", "getDay"]}, "focal_class": {"identifier": "DateTimeUnit", "superclass": "", "interfaces": "", "fields": [{"original_string": "@NotNull\n    private int year;", "modifier": "@NotNull\n    private", "type": "int", "declarator": "year", "var_name": "year"}, {"original_string": "@NotNull\n    private int month;", "modifier": "@NotNull\n    private", "type": "int", "declarator": "month", "var_name": "month"}, {"original_string": "@NotNull\n    private int day;", "modifier": "@NotNull\n    private", "type": "int", "declarator": "day", "var_name": "day"}, {"original_string": "private int dayOfWeek;", "modifier": "private", "type": "int", "declarator": "dayOfWeek", "var_name": "dayOfWeek"}, {"original_string": "final boolean iso8601;", "modifier": "final", "type": "boolean", "declarator": "iso8601", "var_name": "iso8601"}, {"original_string": "private int hour;", "modifier": "private", "type": "int", "declarator": "hour", "var_name": "hour"}, {"original_string": "private int minute;", "modifier": "private", "type": "int", "declarator": "minute", "var_name": "minute"}, {"original_string": "private int second;", "modifier": "private", "type": "int", "declarator": "second", "var_name": "second"}, {"original_string": "private int millis;", "modifier": "private", "type": "int", "declarator": "millis", "var_name": "millis"}, {"original_string": "private TimeZone timeZone = TimeZone.getDefault();", "modifier": "private", "type": "TimeZone", "declarator": "timeZone = TimeZone.getDefault()", "var_name": "timeZone"}], "methods": [{"identifier": "DateTimeUnit", "parameters": "( boolean iso8601 )", "modifiers": "public", "return": "", "signature": " DateTimeUnit( boolean iso8601 )", "full_signature": "public  DateTimeUnit( boolean iso8601 )", "class_method_signature": "DateTimeUnit.DateTimeUnit( boolean iso8601 )", "testcase": false, "constructor": true}, {"identifier": "DateTimeUnit", "parameters": "()", "modifiers": "public", "return": "", "signature": " DateTimeUnit()", "full_signature": "public  DateTimeUnit()", "class_method_signature": "DateTimeUnit.DateTimeUnit()", "testcase": false, "constructor": true}, {"identifier": "DateTimeUnit", "parameters": "( DateTimeUnit dateTimeUnit )", "modifiers": "public", "return": "", "signature": " DateTimeUnit( DateTimeUnit dateTimeUnit )", "full_signature": "public  DateTimeUnit( DateTimeUnit dateTimeUnit )", "class_method_signature": "DateTimeUnit.DateTimeUnit( DateTimeUnit dateTimeUnit )", "testcase": false, "constructor": true}, {"identifier": "DateTimeUnit", "parameters": "( DateTimeUnit dateTimeUnit, boolean iso8601 )", "modifiers": "public", "return": "", "signature": " DateTimeUnit( DateTimeUnit dateTimeUnit, boolean iso8601 )", "full_signature": "public  DateTimeUnit( DateTimeUnit dateTimeUnit, boolean iso8601 )", "class_method_signature": "DateTimeUnit.DateTimeUnit( DateTimeUnit dateTimeUnit, boolean iso8601 )", "testcase": false, "constructor": true}, {"identifier": "DateTimeUnit", "parameters": "( int year, int month, int day, boolean iso8601 )", "modifiers": "public", "return": "", "signature": " DateTimeUnit( int year, int month, int day, boolean iso8601 )", "full_signature": "public  DateTimeUnit( int year, int month, int day, boolean iso8601 )", "class_method_signature": "DateTimeUnit.DateTimeUnit( int year, int month, int day, boolean iso8601 )", "testcase": false, "constructor": true}, {"identifier": "DateTimeUnit", "parameters": "( int year, int month, int day )", "modifiers": "public", "return": "", "signature": " DateTimeUnit( int year, int month, int day )", "full_signature": "public  DateTimeUnit( int year, int month, int day )", "class_method_signature": "DateTimeUnit.DateTimeUnit( int year, int month, int day )", "testcase": false, "constructor": true}, {"identifier": "DateTimeUnit", "parameters": "( int year, int month, int day, int dayOfWeek, boolean iso8601 )", "modifiers": "public", "return": "", "signature": " DateTimeUnit( int year, int month, int day, int dayOfWeek, boolean iso8601 )", "full_signature": "public  DateTimeUnit( int year, int month, int day, int dayOfWeek, boolean iso8601 )", "class_method_signature": "DateTimeUnit.DateTimeUnit( int year, int month, int day, int dayOfWeek, boolean iso8601 )", "testcase": false, "constructor": true}, {"identifier": "DateTimeUnit", "parameters": "( int year, int month, int day, int dayOfWeek )", "modifiers": "public", "return": "", "signature": " DateTimeUnit( int year, int month, int day, int dayOfWeek )", "full_signature": "public  DateTimeUnit( int year, int month, int day, int dayOfWeek )", "class_method_signature": "DateTimeUnit.DateTimeUnit( int year, int month, int day, int dayOfWeek )", "testcase": false, "constructor": true}, {"identifier": "setDate", "parameters": "( int year, int month, int day )", "modifiers": "public", "return": "void", "signature": "void setDate( int year, int month, int day )", "full_signature": "public void setDate( int year, int month, int day )", "class_method_signature": "DateTimeUnit.setDate( int year, int month, int day )", "testcase": false, "constructor": false}, {"identifier": "setTime", "parameters": "( int hour, int minute, int second, int millis )", "modifiers": "public", "return": "void", "signature": "void setTime( int hour, int minute, int second, int millis )", "full_signature": "public void setTime( int hour, int minute, int second, int millis )", "class_method_signature": "DateTimeUnit.setTime( int hour, int minute, int second, int millis )", "testcase": false, "constructor": false}, {"identifier": "getYear", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getYear()", "full_signature": "public int getYear()", "class_method_signature": "DateTimeUnit.getYear()", "testcase": false, "constructor": false}, {"identifier": "setYear", "parameters": "( int year )", "modifiers": "public", "return": "void", "signature": "void setYear( int year )", "full_signature": "public void setYear( int year )", "class_method_signature": "DateTimeUnit.setYear( int year )", "testcase": false, "constructor": false}, {"identifier": "getMonth", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMonth()", "full_signature": "public int getMonth()", "class_method_signature": "DateTimeUnit.getMonth()", "testcase": false, "constructor": false}, {"identifier": "setMonth", "parameters": "( int month )", "modifiers": "public", "return": "void", "signature": "void setMonth( int month )", "full_signature": "public void setMonth( int month )", "class_method_signature": "DateTimeUnit.setMonth( int month )", "testcase": false, "constructor": false}, {"identifier": "getDay", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDay()", "full_signature": "public int getDay()", "class_method_signature": "DateTimeUnit.getDay()", "testcase": false, "constructor": false}, {"identifier": "setDay", "parameters": "( int day )", "modifiers": "public", "return": "void", "signature": "void setDay( int day )", "full_signature": "public void setDay( int day )", "class_method_signature": "DateTimeUnit.setDay( int day )", "testcase": false, "constructor": false}, {"identifier": "getDayOfWeek", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDayOfWeek()", "full_signature": "public int getDayOfWeek()", "class_method_signature": "DateTimeUnit.getDayOfWeek()", "testcase": false, "constructor": false}, {"identifier": "setDayOfWeek", "parameters": "( int dayOfWeek )", "modifiers": "public", "return": "void", "signature": "void setDayOfWeek( int dayOfWeek )", "full_signature": "public void setDayOfWeek( int dayOfWeek )", "class_method_signature": "DateTimeUnit.setDayOfWeek( int dayOfWeek )", "testcase": false, "constructor": false}, {"identifier": "isIso8601", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isIso8601()", "full_signature": "public boolean isIso8601()", "class_method_signature": "DateTimeUnit.isIso8601()", "testcase": false, "constructor": false}, {"identifier": "getHour", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getHour()", "full_signature": "public int getHour()", "class_method_signature": "DateTimeUnit.getHour()", "testcase": false, "constructor": false}, {"identifier": "setHour", "parameters": "( int hour )", "modifiers": "public", "return": "void", "signature": "void setHour( int hour )", "full_signature": "public void setHour( int hour )", "class_method_signature": "DateTimeUnit.setHour( int hour )", "testcase": false, "constructor": false}, {"identifier": "getMinute", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMinute()", "full_signature": "public int getMinute()", "class_method_signature": "DateTimeUnit.getMinute()", "testcase": false, "constructor": false}, {"identifier": "setMinute", "parameters": "( int minute )", "modifiers": "public", "return": "void", "signature": "void setMinute( int minute )", "full_signature": "public void setMinute( int minute )", "class_method_signature": "DateTimeUnit.setMinute( int minute )", "testcase": false, "constructor": false}, {"identifier": "getSecond", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSecond()", "full_signature": "public int getSecond()", "class_method_signature": "DateTimeUnit.getSecond()", "testcase": false, "constructor": false}, {"identifier": "setSecond", "parameters": "( int second )", "modifiers": "public", "return": "void", "signature": "void setSecond( int second )", "full_signature": "public void setSecond( int second )", "class_method_signature": "DateTimeUnit.setSecond( int second )", "testcase": false, "constructor": false}, {"identifier": "getMillis", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMillis()", "full_signature": "public int getMillis()", "class_method_signature": "DateTimeUnit.getMillis()", "testcase": false, "constructor": false}, {"identifier": "setMillis", "parameters": "( int millis )", "modifiers": "public", "return": "void", "signature": "void setMillis( int millis )", "full_signature": "public void setMillis( int millis )", "class_method_signature": "DateTimeUnit.setMillis( int millis )", "testcase": false, "constructor": false}, {"identifier": "getTimeZone", "parameters": "()", "modifiers": "public", "return": "TimeZone", "signature": "TimeZone getTimeZone()", "full_signature": "public TimeZone getTimeZone()", "class_method_signature": "DateTimeUnit.getTimeZone()", "testcase": false, "constructor": false}, {"identifier": "setTimeZone", "parameters": "( TimeZone timeZone )", "modifiers": "public", "return": "void", "signature": "void setTimeZone( TimeZone timeZone )", "full_signature": "public void setTimeZone( TimeZone timeZone )", "class_method_signature": "DateTimeUnit.setTimeZone( TimeZone timeZone )", "testcase": false, "constructor": false}, {"identifier": "toUtc", "parameters": "()", "modifiers": "public", "return": "DateTimeUnit", "signature": "DateTimeUnit toUtc()", "full_signature": "public DateTimeUnit toUtc()", "class_method_signature": "DateTimeUnit.toUtc()", "testcase": false, "constructor": false}, {"identifier": "toJodaDateTime", "parameters": "()", "modifiers": "public", "return": "DateTime", "signature": "DateTime toJodaDateTime()", "full_signature": "public DateTime toJodaDateTime()", "class_method_signature": "DateTimeUnit.toJodaDateTime()", "testcase": false, "constructor": false}, {"identifier": "toJodaDateTime", "parameters": "( Chronology chronology )", "modifiers": "public", "return": "DateTime", "signature": "DateTime toJodaDateTime( Chronology chronology )", "full_signature": "public DateTime toJodaDateTime( Chronology chronology )", "class_method_signature": "DateTimeUnit.toJodaDateTime( Chronology chronology )", "testcase": false, "constructor": false}, {"identifier": "toJdkCalendar", "parameters": "()", "modifiers": "public", "return": "java.util.Calendar", "signature": "java.util.Calendar toJdkCalendar()", "full_signature": "public java.util.Calendar toJdkCalendar()", "class_method_signature": "DateTimeUnit.toJdkCalendar()", "testcase": false, "constructor": false}, {"identifier": "toJdkDate", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date toJdkDate()", "full_signature": "public Date toJdkDate()", "class_method_signature": "DateTimeUnit.toJdkDate()", "testcase": false, "constructor": false}, {"identifier": "fromJodaDateTime", "parameters": "( DateTime dateTime )", "modifiers": "public static", "return": "DateTimeUnit", "signature": "DateTimeUnit fromJodaDateTime( DateTime dateTime )", "full_signature": "public static DateTimeUnit fromJodaDateTime( DateTime dateTime )", "class_method_signature": "DateTimeUnit.fromJodaDateTime( DateTime dateTime )", "testcase": false, "constructor": false}, {"identifier": "fromJodaDateTime", "parameters": "( DateTime dateTime, boolean iso8601 )", "modifiers": "public static", "return": "DateTimeUnit", "signature": "DateTimeUnit fromJodaDateTime( DateTime dateTime, boolean iso8601 )", "full_signature": "public static DateTimeUnit fromJodaDateTime( DateTime dateTime, boolean iso8601 )", "class_method_signature": "DateTimeUnit.fromJodaDateTime( DateTime dateTime, boolean iso8601 )", "testcase": false, "constructor": false}, {"identifier": "fromJdkCalendar", "parameters": "( java.util.Calendar calendar )", "modifiers": "public static", "return": "DateTimeUnit", "signature": "DateTimeUnit fromJdkCalendar( java.util.Calendar calendar )", "full_signature": "public static DateTimeUnit fromJdkCalendar( java.util.Calendar calendar )", "class_method_signature": "DateTimeUnit.fromJdkCalendar( java.util.Calendar calendar )", "testcase": false, "constructor": false}, {"identifier": "fromJdkDate", "parameters": "( Date date )", "modifiers": "public static", "return": "DateTimeUnit", "signature": "DateTimeUnit fromJdkDate( Date date )", "full_signature": "public static DateTimeUnit fromJdkDate( Date date )", "class_method_signature": "DateTimeUnit.fromJdkDate( Date date )", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "( Object o )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals( Object o )", "full_signature": "@Override public boolean equals( Object o )", "class_method_signature": "DateTimeUnit.equals( Object o )", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DateTimeUnit.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DateTimeUnit.toString()", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/calendar/DateTimeUnit.java"}, "focal_method": {"identifier": "fromJdkCalendar", "parameters": "( java.util.Calendar calendar )", "modifiers": "public static", "return": "DateTimeUnit", "body": "public static DateTimeUnit fromJdkCalendar( java.util.Calendar calendar )\n    {\n        return fromJodaDateTime( new DateTime( calendar ) );\n    }", "signature": "DateTimeUnit fromJdkCalendar( java.util.Calendar calendar )", "full_signature": "public static DateTimeUnit fromJdkCalendar( java.util.Calendar calendar )", "class_method_signature": "DateTimeUnit.fromJdkCalendar( java.util.Calendar calendar )", "testcase": false, "constructor": false, "invocations": ["fromJodaDateTime"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}