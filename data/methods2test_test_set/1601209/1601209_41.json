{"test_class": {"identifier": "HttpMethodTest", "superclass": "", "interfaces": "", "fields": [], "file": "unirest/src/test/java/kong/unirest/HttpMethodTest.java"}, "test_case": {"identifier": "equalsTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void equalsTest() {\n        assertEquals(HttpMethod.valueOf(\"GET\"), HttpMethod.valueOf(\"GET\"));\n        assertEquals(HttpMethod.GET, HttpMethod.GET);\n        assertNotEquals(HttpMethod.valueOf(\"GET\"), HttpMethod.valueOf(\"PUT\"));\n        assertNotEquals(HttpMethod.GET, HttpMethod.PUT);\n    }", "signature": "void equalsTest()", "full_signature": "@Test public void equalsTest()", "class_method_signature": "HttpMethodTest.equalsTest()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "valueOf", "valueOf", "assertEquals", "assertNotEquals", "valueOf", "valueOf", "assertNotEquals"]}, "focal_class": {"identifier": "HttpMethod", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Map<String, HttpMethod> REGISTRY = new HashMap<>();", "modifier": "private static final", "type": "Map<String, HttpMethod>", "declarator": "REGISTRY = new HashMap<>()", "var_name": "REGISTRY"}, {"original_string": "public static final HttpMethod GET = valueOf(\"GET\");", "modifier": "public static final", "type": "HttpMethod", "declarator": "GET = valueOf(\"GET\")", "var_name": "GET"}, {"original_string": "public static final HttpMethod POST = valueOf(\"POST\");", "modifier": "public static final", "type": "HttpMethod", "declarator": "POST = valueOf(\"POST\")", "var_name": "POST"}, {"original_string": "public static final HttpMethod PUT = valueOf(\"PUT\");", "modifier": "public static final", "type": "HttpMethod", "declarator": "PUT = valueOf(\"PUT\")", "var_name": "PUT"}, {"original_string": "public static final HttpMethod DELETE = valueOf(\"DELETE\");", "modifier": "public static final", "type": "HttpMethod", "declarator": "DELETE = valueOf(\"DELETE\")", "var_name": "DELETE"}, {"original_string": "public static final HttpMethod PATCH = valueOf(\"PATCH\");", "modifier": "public static final", "type": "HttpMethod", "declarator": "PATCH = valueOf(\"PATCH\")", "var_name": "PATCH"}, {"original_string": "public static final HttpMethod HEAD = valueOf(\"HEAD\");", "modifier": "public static final", "type": "HttpMethod", "declarator": "HEAD = valueOf(\"HEAD\")", "var_name": "HEAD"}, {"original_string": "public static final HttpMethod OPTIONS = valueOf(\"OPTIONS\");", "modifier": "public static final", "type": "HttpMethod", "declarator": "OPTIONS = valueOf(\"OPTIONS\")", "var_name": "OPTIONS"}, {"original_string": "public static final HttpMethod TRACE = valueOf(\"TRACE\");", "modifier": "public static final", "type": "HttpMethod", "declarator": "TRACE = valueOf(\"TRACE\")", "var_name": "TRACE"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "HttpMethod", "parameters": "(String name)", "modifiers": "private", "return": "", "signature": " HttpMethod(String name)", "full_signature": "private  HttpMethod(String name)", "class_method_signature": "HttpMethod.HttpMethod(String name)", "testcase": false, "constructor": true}, {"identifier": "valueOf", "parameters": "(String verb)", "modifiers": "public static", "return": "HttpMethod", "signature": "HttpMethod valueOf(String verb)", "full_signature": "public static HttpMethod valueOf(String verb)", "class_method_signature": "HttpMethod.valueOf(String verb)", "testcase": false, "constructor": false}, {"identifier": "all", "parameters": "()", "modifiers": "public", "return": "Set<HttpMethod>", "signature": "Set<HttpMethod> all()", "full_signature": "public Set<HttpMethod> all()", "class_method_signature": "HttpMethod.all()", "testcase": false, "constructor": false}, {"identifier": "name", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String name()", "full_signature": "public String name()", "class_method_signature": "HttpMethod.name()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "HttpMethod.toString()", "testcase": false, "constructor": false}], "file": "unirest/src/main/java/kong/unirest/HttpMethod.java"}, "focal_method": {"identifier": "valueOf", "parameters": "(String verb)", "modifiers": "public static", "return": "HttpMethod", "body": "public static HttpMethod valueOf(String verb){\n\t\treturn REGISTRY.computeIfAbsent(String.valueOf(verb).toUpperCase(), HttpMethod::new);\n\t}", "signature": "HttpMethod valueOf(String verb)", "full_signature": "public static HttpMethod valueOf(String verb)", "class_method_signature": "HttpMethod.valueOf(String verb)", "testcase": false, "constructor": false, "invocations": ["computeIfAbsent", "toUpperCase", "valueOf"]}, "repository": {"repo_id": 1601209, "url": "https://github.com/Kong/unirest-java", "stars": 1855, "created": "4/11/2011 9:19:53 PM +00:00", "updates": "2020-01-25T12:07:58+00:00", "fork": "False", "license": "licensed"}}