{"test_class": {"identifier": "EsLookupBoltTest", "superclass": "extends AbstractEsBoltTest<EsLookupBolt>", "interfaces": "", "fields": [{"original_string": "@Mock\n    private EsConfig esConfig;", "modifier": "@Mock\n    private", "type": "EsConfig", "declarator": "esConfig", "var_name": "esConfig"}, {"original_string": "@Mock\n    private ElasticsearchGetRequest getRequest;", "modifier": "@Mock\n    private", "type": "ElasticsearchGetRequest", "declarator": "getRequest", "var_name": "getRequest"}, {"original_string": "@Mock\n    private EsLookupResultOutput output;", "modifier": "@Mock\n    private", "type": "EsLookupResultOutput", "declarator": "output", "var_name": "output"}, {"original_string": "@Mock\n    private Tuple tuple;", "modifier": "@Mock\n    private", "type": "Tuple", "declarator": "tuple", "var_name": "tuple"}, {"original_string": "@Mock\n    private GetRequest request;", "modifier": "@Mock\n    private", "type": "GetRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private Client client;", "modifier": "@Mock\n    private", "type": "Client", "declarator": "client", "var_name": "client"}, {"original_string": "private Client originalClient;", "modifier": "private", "type": "Client", "declarator": "originalClient", "var_name": "originalClient"}], "file": "storm/storm-elasticsearch/src/test/java/org/apache/storm/elasticsearch/bolt/EsLookupBoltTest.java"}, "test_case": {"identifier": "fieldsAreDeclaredThroughProvidedOutput", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void fieldsAreDeclaredThroughProvidedOutput() throws Exception {\n        Fields fields = new Fields(UUID.randomUUID().toString());\n        when(output.fields()).thenReturn(fields);\n        OutputFieldsDeclarer declarer = mock(OutputFieldsDeclarer.class);\n        bolt.declareOutputFields(declarer);\n\n        ArgumentCaptor<Fields> declaredFields = ArgumentCaptor.forClass(Fields.class);\n        verify(declarer).declare(declaredFields.capture());\n\n        assertThat(declaredFields.getValue(), is(fields));\n    }", "signature": "void fieldsAreDeclaredThroughProvidedOutput()", "full_signature": "@Test public void fieldsAreDeclaredThroughProvidedOutput()", "class_method_signature": "EsLookupBoltTest.fieldsAreDeclaredThroughProvidedOutput()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "thenReturn", "when", "fields", "mock", "declareOutputFields", "forClass", "declare", "verify", "capture", "assertThat", "getValue", "is"]}, "focal_class": {"identifier": "EsLookupBolt", "superclass": "extends AbstractEsBolt", "interfaces": "", "fields": [{"original_string": "private final ElasticsearchGetRequest getRequest;", "modifier": "private final", "type": "ElasticsearchGetRequest", "declarator": "getRequest", "var_name": "getRequest"}, {"original_string": "private final EsLookupResultOutput output;", "modifier": "private final", "type": "EsLookupResultOutput", "declarator": "output", "var_name": "output"}], "methods": [{"identifier": "EsLookupBolt", "parameters": "(EsConfig esConfig, ElasticsearchGetRequest getRequest, EsLookupResultOutput output)", "modifiers": "public", "return": "", "signature": " EsLookupBolt(EsConfig esConfig, ElasticsearchGetRequest getRequest, EsLookupResultOutput output)", "full_signature": "public  EsLookupBolt(EsConfig esConfig, ElasticsearchGetRequest getRequest, EsLookupResultOutput output)", "class_method_signature": "EsLookupBolt.EsLookupBolt(EsConfig esConfig, ElasticsearchGetRequest getRequest, EsLookupResultOutput output)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "(Tuple tuple)", "modifiers": "@Override public", "return": "void", "signature": "void execute(Tuple tuple)", "full_signature": "@Override public void execute(Tuple tuple)", "class_method_signature": "EsLookupBolt.execute(Tuple tuple)", "testcase": false, "constructor": false}, {"identifier": "lookupValuesInEs", "parameters": "(Tuple tuple)", "modifiers": "private", "return": "Collection<Values>", "signature": "Collection<Values> lookupValuesInEs(Tuple tuple)", "full_signature": "private Collection<Values> lookupValuesInEs(Tuple tuple)", "class_method_signature": "EsLookupBolt.lookupValuesInEs(Tuple tuple)", "testcase": false, "constructor": false}, {"identifier": "tryEmitAndAck", "parameters": "(Collection<Values> values, Tuple tuple)", "modifiers": "private", "return": "void", "signature": "void tryEmitAndAck(Collection<Values> values, Tuple tuple)", "full_signature": "private void tryEmitAndAck(Collection<Values> values, Tuple tuple)", "class_method_signature": "EsLookupBolt.tryEmitAndAck(Collection<Values> values, Tuple tuple)", "testcase": false, "constructor": false}, {"identifier": "declareOutputFields", "parameters": "(OutputFieldsDeclarer outputFieldsDeclarer)", "modifiers": "@Override public", "return": "void", "signature": "void declareOutputFields(OutputFieldsDeclarer outputFieldsDeclarer)", "full_signature": "@Override public void declareOutputFields(OutputFieldsDeclarer outputFieldsDeclarer)", "class_method_signature": "EsLookupBolt.declareOutputFields(OutputFieldsDeclarer outputFieldsDeclarer)", "testcase": false, "constructor": false}], "file": "storm/storm-elasticsearch/src/main/java/org/apache/storm/elasticsearch/bolt/EsLookupBolt.java"}, "focal_method": {"identifier": "declareOutputFields", "parameters": "(OutputFieldsDeclarer outputFieldsDeclarer)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void declareOutputFields(OutputFieldsDeclarer outputFieldsDeclarer) {\n        outputFieldsDeclarer.declare(output.fields());\n    }", "signature": "void declareOutputFields(OutputFieldsDeclarer outputFieldsDeclarer)", "full_signature": "@Override public void declareOutputFields(OutputFieldsDeclarer outputFieldsDeclarer)", "class_method_signature": "EsLookupBolt.declareOutputFields(OutputFieldsDeclarer outputFieldsDeclarer)", "testcase": false, "constructor": false, "invocations": ["declare", "fields"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}