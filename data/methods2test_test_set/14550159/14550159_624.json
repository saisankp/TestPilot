{"test_class": {"identifier": "DefaultMethodInvokerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ARGUMENT_VALUE = \"to be or not to be\";", "modifier": "private static final", "type": "String", "declarator": "ARGUMENT_VALUE = \"to be or not to be\"", "var_name": "ARGUMENT_VALUE"}, {"original_string": "private static final Class  ARGUMENT_CLASS = String.class;", "modifier": "private static final", "type": "Class", "declarator": "ARGUMENT_CLASS = String.class", "var_name": "ARGUMENT_CLASS"}, {"original_string": "private static final String RESOURCE_PATH  = \"/a/b\";", "modifier": "private static final", "type": "String", "declarator": "RESOURCE_PATH  = \"/a/b\"", "var_name": "RESOURCE_PATH"}, {"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private ParameterResolverFactory  parameterResolverFactory;", "modifier": "private", "type": "ParameterResolverFactory", "declarator": "parameterResolverFactory", "var_name": "parameterResolverFactory"}, {"original_string": "private GenericResourceMethod     resourceMethod;", "modifier": "private", "type": "GenericResourceMethod", "declarator": "resourceMethod", "var_name": "resourceMethod"}, {"original_string": "private Parameter                 entityParameter;", "modifier": "private", "type": "Parameter", "declarator": "entityParameter", "var_name": "entityParameter"}, {"original_string": "private Annotation                parameterAnnotation;", "modifier": "private", "type": "Annotation", "declarator": "parameterAnnotation", "var_name": "parameterAnnotation"}, {"original_string": "private Parameter                 annotatedParameter;", "modifier": "private", "type": "Parameter", "declarator": "annotatedParameter", "var_name": "annotatedParameter"}, {"original_string": "private ParameterResolver         parameterResolver;", "modifier": "private", "type": "ParameterResolver", "declarator": "parameterResolver", "var_name": "parameterResolver"}, {"original_string": "private ApplicationContext        applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private MessageBodyReader<String> messageBodyReader;", "modifier": "private", "type": "MessageBodyReader<String>", "declarator": "messageBodyReader", "var_name": "messageBodyReader"}, {"original_string": "private DefaultMethodInvoker      methodInvoker;", "modifier": "private", "type": "DefaultMethodInvoker", "declarator": "methodInvoker", "var_name": "methodInvoker"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/method/DefaultMethodInvokerTest.java"}, "test_case": {"identifier": "invokesMethodWithNullEntityParameterWhenMessageBodyReaderIsNotAvailableAndBothContentTypeAndContentLengthAreNotSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invokesMethodWithNullEntityParameterWhenMessageBodyReaderIsNotAvailableAndBothContentTypeAndContentLengthAreNotSet() throws Exception {\n        when(applicationContext.getContainerRequest().getMediaType()).thenReturn(null);\n        when(applicationContext.getProviders()\n                               .getMessageBodyReader((Class)entityParameter.getParameterClass(),\n                                                     entityParameter.getGenericType(),\n                                                     entityParameter.getAnnotations(),\n                                                     applicationContext.getContainerRequest().getMediaType()))\n                .thenReturn(null);\n        when(resourceMethod.getMethodParameters()).thenReturn(newArrayList(entityParameter));\n\n        MultivaluedMap<String, String> headers = new MultivaluedHashMap<>();\n        headers.putSingle(CONTENT_LENGTH, \"0\");\n        when(applicationContext.getContainerRequest().getRequestHeaders()).thenReturn(headers);\n\n        Object invocationResult = methodInvoker.invokeMethod(new EchoResource(), resourceMethod, applicationContext);\n\n        assertEquals(null, invocationResult);\n    }", "signature": "void invokesMethodWithNullEntityParameterWhenMessageBodyReaderIsNotAvailableAndBothContentTypeAndContentLengthAreNotSet()", "full_signature": "@Test public void invokesMethodWithNullEntityParameterWhenMessageBodyReaderIsNotAvailableAndBothContentTypeAndContentLengthAreNotSet()", "class_method_signature": "DefaultMethodInvokerTest.invokesMethodWithNullEntityParameterWhenMessageBodyReaderIsNotAvailableAndBothContentTypeAndContentLengthAreNotSet()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getMediaType", "getContainerRequest", "thenReturn", "when", "getMessageBodyReader", "getProviders", "getParameterClass", "getGenericType", "getAnnotations", "getMediaType", "getContainerRequest", "thenReturn", "when", "getMethodParameters", "newArrayList", "putSingle", "thenReturn", "when", "getRequestHeaders", "getContainerRequest", "invokeMethod", "assertEquals"]}, "focal_class": {"identifier": "DefaultMethodInvoker", "superclass": "", "interfaces": "implements MethodInvoker", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(DefaultMethodInvoker.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(DefaultMethodInvoker.class)", "var_name": "LOG"}, {"original_string": "private final ParameterResolverFactory parameterResolverFactory;", "modifier": "private final", "type": "ParameterResolverFactory", "declarator": "parameterResolverFactory", "var_name": "parameterResolverFactory"}], "methods": [{"identifier": "DefaultMethodInvoker", "parameters": "(ParameterResolverFactory parameterResolverFactory)", "modifiers": "public", "return": "", "signature": " DefaultMethodInvoker(ParameterResolverFactory parameterResolverFactory)", "full_signature": "public  DefaultMethodInvoker(ParameterResolverFactory parameterResolverFactory)", "class_method_signature": "DefaultMethodInvoker.DefaultMethodInvoker(ParameterResolverFactory parameterResolverFactory)", "testcase": false, "constructor": true}, {"identifier": "invokeMethod", "parameters": "(Object resource, GenericResourceMethod methodResource, ApplicationContext context)", "modifiers": "@Override public final", "return": "Object", "signature": "Object invokeMethod(Object resource, GenericResourceMethod methodResource, ApplicationContext context)", "full_signature": "@Override public final Object invokeMethod(Object resource, GenericResourceMethod methodResource, ApplicationContext context)", "class_method_signature": "DefaultMethodInvoker.invokeMethod(Object resource, GenericResourceMethod methodResource, ApplicationContext context)", "testcase": false, "constructor": false}, {"identifier": "makeMethodParameters", "parameters": "(GenericResourceMethod resourceMethod, ApplicationContext context)", "modifiers": "@SuppressWarnings({\"unchecked\"}) private", "return": "Object[]", "signature": "Object[] makeMethodParameters(GenericResourceMethod resourceMethod, ApplicationContext context)", "full_signature": "@SuppressWarnings({\"unchecked\"}) private Object[] makeMethodParameters(GenericResourceMethod resourceMethod, ApplicationContext context)", "class_method_signature": "DefaultMethodInvoker.makeMethodParameters(GenericResourceMethod resourceMethod, ApplicationContext context)", "testcase": false, "constructor": false}, {"identifier": "beforeInvokeMethod", "parameters": "(Object resource, GenericResourceMethod methodResource, Object[] params, ApplicationContext context)", "modifiers": "protected", "return": "void", "signature": "void beforeInvokeMethod(Object resource, GenericResourceMethod methodResource, Object[] params, ApplicationContext context)", "full_signature": "protected void beforeInvokeMethod(Object resource, GenericResourceMethod methodResource, Object[] params, ApplicationContext context)", "class_method_signature": "DefaultMethodInvoker.beforeInvokeMethod(Object resource, GenericResourceMethod methodResource, Object[] params, ApplicationContext context)", "testcase": false, "constructor": false}, {"identifier": "invokeMethod", "parameters": "(Object resource, GenericResourceMethod methodResource, Object[] params, ApplicationContext context)", "modifiers": "public", "return": "Object", "signature": "Object invokeMethod(Object resource, GenericResourceMethod methodResource, Object[] params, ApplicationContext context)", "full_signature": "public Object invokeMethod(Object resource, GenericResourceMethod methodResource, Object[] params, ApplicationContext context)", "class_method_signature": "DefaultMethodInvoker.invokeMethod(Object resource, GenericResourceMethod methodResource, Object[] params, ApplicationContext context)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/method/DefaultMethodInvoker.java"}, "focal_method": {"identifier": "invokeMethod", "parameters": "(Object resource, GenericResourceMethod methodResource, ApplicationContext context)", "modifiers": "@Override public final", "return": "Object", "body": "@Override\n    public final Object invokeMethod(Object resource, GenericResourceMethod methodResource, ApplicationContext context) {\n        Object[] params = makeMethodParameters(methodResource, context);\n        beforeInvokeMethod(resource, methodResource, params, context);\n        return invokeMethod(resource, methodResource, params, context);\n    }", "signature": "Object invokeMethod(Object resource, GenericResourceMethod methodResource, ApplicationContext context)", "full_signature": "@Override public final Object invokeMethod(Object resource, GenericResourceMethod methodResource, ApplicationContext context)", "class_method_signature": "DefaultMethodInvoker.invokeMethod(Object resource, GenericResourceMethod methodResource, ApplicationContext context)", "testcase": false, "constructor": false, "invocations": ["makeMethodParameters", "beforeInvokeMethod", "invokeMethod"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}