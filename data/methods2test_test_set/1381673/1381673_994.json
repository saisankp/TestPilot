{"test_class": {"identifier": "BetaNodeTest", "superclass": "", "interfaces": "", "fields": [], "file": "drools-core/src/test/java/org/drools/core/reteoo/BetaNodeTest.java"}, "test_case": {"identifier": "testEqualsObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEqualsObject() {\n        final LeftTupleSource ts = new MockTupleSource( 1 );\n        final ObjectSource os = new MockObjectSource( 2 );\n\n        InternalKnowledgeBase kBase = (InternalKnowledgeBase) KnowledgeBaseFactory.newKnowledgeBase();\n        BuildContext buildContext = new BuildContext( kBase );\n        \n        final BetaNode j1 = new JoinNode( 1,\n                                          ts,\n                                          os,\n                                          EmptyBetaConstraints.getInstance(),\n                                          buildContext );\n        final BetaNode j2 = new JoinNode( 2,\n                                          ts,\n                                          os,\n                                          EmptyBetaConstraints.getInstance(),\n                                          buildContext );\n        final BetaNode n1 = new NotNode( 3,\n                                         ts,\n                                         os,\n                                         EmptyBetaConstraints.getInstance(),\n                                         buildContext );\n        final BetaNode n2 = new NotNode( 4,\n                                         ts,\n                                         os,\n                                         EmptyBetaConstraints.getInstance(),\n                                         buildContext );\n\n        assertEquals( j1,\n                      j1 );\n        assertEquals( j2,\n                      j2 );\n        assertEquals( j1,\n                      j2 );\n        assertEquals( n1,\n                      n1 );\n        assertEquals( n2,\n                      n2 );\n        assertEquals( n1,\n                      n2 );\n\n        assertFalse( j1.equals( n1 ) );\n        assertFalse( j1.equals( n2 ) );\n        assertFalse( n1.equals( j1 ) );\n        assertFalse( n1.equals( j2 ) );\n    }", "signature": "void testEqualsObject()", "full_signature": "@Test public void testEqualsObject()", "class_method_signature": "BetaNodeTest.testEqualsObject()", "testcase": true, "constructor": false, "invocations": ["newKnowledgeBase", "getInstance", "getInstance", "getInstance", "getInstance", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals"]}, "focal_class": {"identifier": "BetaNode", "superclass": "extends LeftTupleSource", "interfaces": "implements\n        LeftTupleSinkNode,\n        ObjectSinkNode,\n        RightTupleSink,\n        MemoryFactory", "fields": [{"original_string": "protected static final Logger log = LoggerFactory.getLogger(BetaNode.class);", "modifier": "protected static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(BetaNode.class)", "var_name": "log"}, {"original_string": "protected static final boolean isLogTraceEnabled = log.isTraceEnabled();", "modifier": "protected static final", "type": "boolean", "declarator": "isLogTraceEnabled = log.isTraceEnabled()", "var_name": "isLogTraceEnabled"}, {"original_string": "protected ObjectSource rightInput;", "modifier": "protected", "type": "ObjectSource", "declarator": "rightInput", "var_name": "rightInput"}, {"original_string": "protected BetaConstraints constraints;", "modifier": "protected", "type": "BetaConstraints", "declarator": "constraints", "var_name": "constraints"}, {"original_string": "private LeftTupleSinkNode previousTupleSinkNode;", "modifier": "private", "type": "LeftTupleSinkNode", "declarator": "previousTupleSinkNode", "var_name": "previousTupleSinkNode"}, {"original_string": "private LeftTupleSinkNode nextTupleSinkNode;", "modifier": "private", "type": "LeftTupleSinkNode", "declarator": "nextTupleSinkNode", "var_name": "nextTupleSinkNode"}, {"original_string": "private ObjectSinkNode previousObjectSinkNode;", "modifier": "private", "type": "ObjectSinkNode", "declarator": "previousObjectSinkNode", "var_name": "previousObjectSinkNode"}, {"original_string": "private ObjectSinkNode nextObjectSinkNode;", "modifier": "private", "type": "ObjectSinkNode", "declarator": "nextObjectSinkNode", "var_name": "nextObjectSinkNode"}, {"original_string": "protected boolean objectMemory = true;", "modifier": "protected", "type": "boolean", "declarator": "objectMemory = true", "var_name": "objectMemory"}, {"original_string": "protected boolean tupleMemoryEnabled;", "modifier": "protected", "type": "boolean", "declarator": "tupleMemoryEnabled", "var_name": "tupleMemoryEnabled"}, {"original_string": "protected boolean indexedUnificationJoin;", "modifier": "protected", "type": "boolean", "declarator": "indexedUnificationJoin", "var_name": "indexedUnificationJoin"}, {"original_string": "private BitMask rightDeclaredMask = EmptyBitMask.get();", "modifier": "private", "type": "BitMask", "declarator": "rightDeclaredMask = EmptyBitMask.get()", "var_name": "rightDeclaredMask"}, {"original_string": "private BitMask rightInferredMask = EmptyBitMask.get();", "modifier": "private", "type": "BitMask", "declarator": "rightInferredMask = EmptyBitMask.get()", "var_name": "rightInferredMask"}, {"original_string": "private BitMask rightNegativeMask = EmptyBitMask.get();", "modifier": "private", "type": "BitMask", "declarator": "rightNegativeMask = EmptyBitMask.get()", "var_name": "rightNegativeMask"}, {"original_string": "private Collection<String> leftListenedProperties;", "modifier": "private", "type": "Collection<String>", "declarator": "leftListenedProperties", "var_name": "leftListenedProperties"}, {"original_string": "private Collection<String> rightListenedProperties;", "modifier": "private", "type": "Collection<String>", "declarator": "rightListenedProperties", "var_name": "rightListenedProperties"}, {"original_string": "private transient ObjectTypeNode.Id rightInputOtnId = ObjectTypeNode.DEFAULT_ID;", "modifier": "private transient", "type": "ObjectTypeNode.Id", "declarator": "rightInputOtnId = ObjectTypeNode.DEFAULT_ID", "var_name": "rightInputOtnId"}, {"original_string": "private boolean rightInputIsRiaNode;", "modifier": "private", "type": "boolean", "declarator": "rightInputIsRiaNode", "var_name": "rightInputIsRiaNode"}, {"original_string": "private transient ObjectTypeNode objectTypeNode;", "modifier": "private transient", "type": "ObjectTypeNode", "declarator": "objectTypeNode", "var_name": "objectTypeNode"}, {"original_string": "private boolean rightInputIsPassive;", "modifier": "private", "type": "boolean", "declarator": "rightInputIsPassive", "var_name": "rightInputIsPassive"}], "methods": [{"identifier": "BetaNode", "parameters": "()", "modifiers": "public", "return": "", "signature": " BetaNode()", "full_signature": "public  BetaNode()", "class_method_signature": "BetaNode.BetaNode()", "testcase": false, "constructor": true}, {"identifier": "BetaNode", "parameters": "(final int id,\n             final LeftTupleSource leftInput,\n             final ObjectSource rightInput,\n             final BetaConstraints constraints,\n             final BuildContext context)", "modifiers": "protected", "return": "", "signature": " BetaNode(final int id,\n             final LeftTupleSource leftInput,\n             final ObjectSource rightInput,\n             final BetaConstraints constraints,\n             final BuildContext context)", "full_signature": "protected  BetaNode(final int id,\n             final LeftTupleSource leftInput,\n             final ObjectSource rightInput,\n             final BetaConstraints constraints,\n             final BuildContext context)", "class_method_signature": "BetaNode.BetaNode(final int id,\n             final LeftTupleSource leftInput,\n             final ObjectSource rightInput,\n             final BetaConstraints constraints,\n             final BuildContext context)", "testcase": false, "constructor": true}, {"identifier": "getObjectTypeNode", "parameters": "(BuildContext context)", "modifiers": "private", "return": "ObjectTypeNode", "signature": "ObjectTypeNode getObjectTypeNode(BuildContext context)", "full_signature": "private ObjectTypeNode getObjectTypeNode(BuildContext context)", "class_method_signature": "BetaNode.getObjectTypeNode(BuildContext context)", "testcase": false, "constructor": false}, {"identifier": "initDeclaredMask", "parameters": "(BuildContext context,\n                                    LeftTupleSource leftInput)", "modifiers": "@Override protected", "return": "void", "signature": "void initDeclaredMask(BuildContext context,\n                                    LeftTupleSource leftInput)", "full_signature": "@Override protected void initDeclaredMask(BuildContext context,\n                                    LeftTupleSource leftInput)", "class_method_signature": "BetaNode.initDeclaredMask(BuildContext context,\n                                    LeftTupleSource leftInput)", "testcase": false, "constructor": false}, {"identifier": "setPartitionId", "parameters": "(BuildContext context, RuleBasePartitionId partitionId )", "modifiers": "@Override public", "return": "void", "signature": "void setPartitionId(BuildContext context, RuleBasePartitionId partitionId )", "full_signature": "@Override public void setPartitionId(BuildContext context, RuleBasePartitionId partitionId )", "class_method_signature": "BetaNode.setPartitionId(BuildContext context, RuleBasePartitionId partitionId )", "testcase": false, "constructor": false}, {"identifier": "setLeftListenedProperties", "parameters": "(Collection<String> leftListenedProperties)", "modifiers": "@Override protected", "return": "void", "signature": "void setLeftListenedProperties(Collection<String> leftListenedProperties)", "full_signature": "@Override protected void setLeftListenedProperties(Collection<String> leftListenedProperties)", "class_method_signature": "BetaNode.setLeftListenedProperties(Collection<String> leftListenedProperties)", "testcase": false, "constructor": false}, {"identifier": "initInferredMask", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void initInferredMask()", "full_signature": "public void initInferredMask()", "class_method_signature": "BetaNode.initInferredMask()", "testcase": false, "constructor": false}, {"identifier": "initInferredMask", "parameters": "(LeftTupleSource leftInput)", "modifiers": "@Override protected", "return": "void", "signature": "void initInferredMask(LeftTupleSource leftInput)", "full_signature": "@Override protected void initInferredMask(LeftTupleSource leftInput)", "class_method_signature": "BetaNode.initInferredMask(LeftTupleSource leftInput)", "testcase": false, "constructor": false}, {"identifier": "unwrapRightInput", "parameters": "()", "modifiers": "public", "return": "ObjectSource", "signature": "ObjectSource unwrapRightInput()", "full_signature": "public ObjectSource unwrapRightInput()", "class_method_signature": "BetaNode.unwrapRightInput()", "testcase": false, "constructor": false}, {"identifier": "readExternal", "parameters": "(ObjectInput in)", "modifiers": "public", "return": "void", "signature": "void readExternal(ObjectInput in)", "full_signature": "public void readExternal(ObjectInput in)", "class_method_signature": "BetaNode.readExternal(ObjectInput in)", "testcase": false, "constructor": false}, {"identifier": "writeExternal", "parameters": "(ObjectOutput out)", "modifiers": "public", "return": "void", "signature": "void writeExternal(ObjectOutput out)", "full_signature": "public void writeExternal(ObjectOutput out)", "class_method_signature": "BetaNode.writeExternal(ObjectOutput out)", "testcase": false, "constructor": false}, {"identifier": "setUnificationJoin", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setUnificationJoin()", "full_signature": "private void setUnificationJoin()", "class_method_signature": "BetaNode.setUnificationJoin()", "testcase": false, "constructor": false}, {"identifier": "assertObject", "parameters": "( final InternalFactHandle factHandle,\n                              final PropagationContext pctx,\n                              final InternalWorkingMemory wm )", "modifiers": "public", "return": "void", "signature": "void assertObject( final InternalFactHandle factHandle,\n                              final PropagationContext pctx,\n                              final InternalWorkingMemory wm )", "full_signature": "public void assertObject( final InternalFactHandle factHandle,\n                              final PropagationContext pctx,\n                              final InternalWorkingMemory wm )", "class_method_signature": "BetaNode.assertObject( final InternalFactHandle factHandle,\n                              final PropagationContext pctx,\n                              final InternalWorkingMemory wm )", "testcase": false, "constructor": false}, {"identifier": "modifyObject", "parameters": "(InternalFactHandle factHandle, ModifyPreviousTuples modifyPreviousTuples, PropagationContext context, InternalWorkingMemory wm)", "modifiers": "public", "return": "void", "signature": "void modifyObject(InternalFactHandle factHandle, ModifyPreviousTuples modifyPreviousTuples, PropagationContext context, InternalWorkingMemory wm)", "full_signature": "public void modifyObject(InternalFactHandle factHandle, ModifyPreviousTuples modifyPreviousTuples, PropagationContext context, InternalWorkingMemory wm)", "class_method_signature": "BetaNode.modifyObject(InternalFactHandle factHandle, ModifyPreviousTuples modifyPreviousTuples, PropagationContext context, InternalWorkingMemory wm)", "testcase": false, "constructor": false}, {"identifier": "doDeleteRightTuple", "parameters": "(final RightTuple rightTuple,\n                                   final InternalWorkingMemory wm,\n                                   final BetaMemory memory)", "modifiers": "public", "return": "void", "signature": "void doDeleteRightTuple(final RightTuple rightTuple,\n                                   final InternalWorkingMemory wm,\n                                   final BetaMemory memory)", "full_signature": "public void doDeleteRightTuple(final RightTuple rightTuple,\n                                   final InternalWorkingMemory wm,\n                                   final BetaMemory memory)", "class_method_signature": "BetaNode.doDeleteRightTuple(final RightTuple rightTuple,\n                                   final InternalWorkingMemory wm,\n                                   final BetaMemory memory)", "testcase": false, "constructor": false}, {"identifier": "doUpdateRightTuple", "parameters": "(final RightTuple rightTuple,\n                                    final InternalWorkingMemory wm,\n                                    final BetaMemory memory)", "modifiers": "public", "return": "void", "signature": "void doUpdateRightTuple(final RightTuple rightTuple,\n                                    final InternalWorkingMemory wm,\n                                    final BetaMemory memory)", "full_signature": "public void doUpdateRightTuple(final RightTuple rightTuple,\n                                    final InternalWorkingMemory wm,\n                                    final BetaMemory memory)", "class_method_signature": "BetaNode.doUpdateRightTuple(final RightTuple rightTuple,\n                                    final InternalWorkingMemory wm,\n                                    final BetaMemory memory)", "testcase": false, "constructor": false}, {"identifier": "isRightInputIsRiaNode", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRightInputIsRiaNode()", "full_signature": "public boolean isRightInputIsRiaNode()", "class_method_signature": "BetaNode.isRightInputIsRiaNode()", "testcase": false, "constructor": false}, {"identifier": "isRightInputPassive", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRightInputPassive()", "full_signature": "public boolean isRightInputPassive()", "class_method_signature": "BetaNode.isRightInputPassive()", "testcase": false, "constructor": false}, {"identifier": "getRightInput", "parameters": "()", "modifiers": "public", "return": "ObjectSource", "signature": "ObjectSource getRightInput()", "full_signature": "public ObjectSource getRightInput()", "class_method_signature": "BetaNode.getRightInput()", "testcase": false, "constructor": false}, {"identifier": "setRightInput", "parameters": "( ObjectSource rightInput )", "modifiers": "public", "return": "void", "signature": "void setRightInput( ObjectSource rightInput )", "full_signature": "public void setRightInput( ObjectSource rightInput )", "class_method_signature": "BetaNode.setRightInput( ObjectSource rightInput )", "testcase": false, "constructor": false}, {"identifier": "getRightIterator", "parameters": "( TupleMemory memory )", "modifiers": "public", "return": "FastIterator", "signature": "FastIterator getRightIterator( TupleMemory memory )", "full_signature": "public FastIterator getRightIterator( TupleMemory memory )", "class_method_signature": "BetaNode.getRightIterator( TupleMemory memory )", "testcase": false, "constructor": false}, {"identifier": "getRightIterator", "parameters": "(TupleMemory memory, RightTuple rightTuple)", "modifiers": "public", "return": "FastIterator", "signature": "FastIterator getRightIterator(TupleMemory memory, RightTuple rightTuple)", "full_signature": "public FastIterator getRightIterator(TupleMemory memory, RightTuple rightTuple)", "class_method_signature": "BetaNode.getRightIterator(TupleMemory memory, RightTuple rightTuple)", "testcase": false, "constructor": false}, {"identifier": "getLeftIterator", "parameters": "(TupleMemory memory)", "modifiers": "public", "return": "FastIterator", "signature": "FastIterator getLeftIterator(TupleMemory memory)", "full_signature": "public FastIterator getLeftIterator(TupleMemory memory)", "class_method_signature": "BetaNode.getLeftIterator(TupleMemory memory)", "testcase": false, "constructor": false}, {"identifier": "getFirstRightTuple", "parameters": "(final Tuple leftTuple,\n                                         final TupleMemory memory,\n                                         final InternalFactHandle factHandle,\n                                         final FastIterator it)", "modifiers": "public", "return": "RightTuple", "signature": "RightTuple getFirstRightTuple(final Tuple leftTuple,\n                                         final TupleMemory memory,\n                                         final InternalFactHandle factHandle,\n                                         final FastIterator it)", "full_signature": "public RightTuple getFirstRightTuple(final Tuple leftTuple,\n                                         final TupleMemory memory,\n                                         final InternalFactHandle factHandle,\n                                         final FastIterator it)", "class_method_signature": "BetaNode.getFirstRightTuple(final Tuple leftTuple,\n                                         final TupleMemory memory,\n                                         final InternalFactHandle factHandle,\n                                         final FastIterator it)", "testcase": false, "constructor": false}, {"identifier": "getFirstLeftTuple", "parameters": "(final RightTuple rightTuple,\n                                       final TupleMemory memory,\n                                       final FastIterator it)", "modifiers": "public", "return": "LeftTuple", "signature": "LeftTuple getFirstLeftTuple(final RightTuple rightTuple,\n                                       final TupleMemory memory,\n                                       final FastIterator it)", "full_signature": "public LeftTuple getFirstLeftTuple(final RightTuple rightTuple,\n                                       final TupleMemory memory,\n                                       final FastIterator it)", "class_method_signature": "BetaNode.getFirstLeftTuple(final RightTuple rightTuple,\n                                       final TupleMemory memory,\n                                       final FastIterator it)", "testcase": false, "constructor": false}, {"identifier": "getFirstTuple", "parameters": "(TupleMemory memory, FastIterator it)", "modifiers": "public static", "return": "Tuple", "signature": "Tuple getFirstTuple(TupleMemory memory, FastIterator it)", "full_signature": "public static Tuple getFirstTuple(TupleMemory memory, FastIterator it)", "class_method_signature": "BetaNode.getFirstTuple(TupleMemory memory, FastIterator it)", "testcase": false, "constructor": false}, {"identifier": "isIndexedUnificationJoin", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isIndexedUnificationJoin()", "full_signature": "public boolean isIndexedUnificationJoin()", "class_method_signature": "BetaNode.isIndexedUnificationJoin()", "testcase": false, "constructor": false}, {"identifier": "getConstraints", "parameters": "()", "modifiers": "public", "return": "BetaNodeFieldConstraint[]", "signature": "BetaNodeFieldConstraint[] getConstraints()", "full_signature": "public BetaNodeFieldConstraint[] getConstraints()", "class_method_signature": "BetaNode.getConstraints()", "testcase": false, "constructor": false}, {"identifier": "getRawConstraints", "parameters": "()", "modifiers": "public", "return": "BetaConstraints", "signature": "BetaConstraints getRawConstraints()", "full_signature": "public BetaConstraints getRawConstraints()", "class_method_signature": "BetaNode.getRawConstraints()", "testcase": false, "constructor": false}, {"identifier": "setConstraints", "parameters": "(BetaConstraints constraints)", "modifiers": "private", "return": "void", "signature": "void setConstraints(BetaConstraints constraints)", "full_signature": "private void setConstraints(BetaConstraints constraints)", "class_method_signature": "BetaNode.setConstraints(BetaConstraints constraints)", "testcase": false, "constructor": false}, {"identifier": "networkUpdated", "parameters": "(UpdateContext updateContext)", "modifiers": "public", "return": "void", "signature": "void networkUpdated(UpdateContext updateContext)", "full_signature": "public void networkUpdated(UpdateContext updateContext)", "class_method_signature": "BetaNode.networkUpdated(UpdateContext updateContext)", "testcase": false, "constructor": false}, {"identifier": "getRules", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getRules()", "full_signature": "public List<String> getRules()", "class_method_signature": "BetaNode.getRules()", "testcase": false, "constructor": false}, {"identifier": "getObjectTypeNode", "parameters": "()", "modifiers": "@Override public", "return": "ObjectTypeNode", "signature": "ObjectTypeNode getObjectTypeNode()", "full_signature": "@Override public ObjectTypeNode getObjectTypeNode()", "class_method_signature": "BetaNode.getObjectTypeNode()", "testcase": false, "constructor": false}, {"identifier": "attach", "parameters": "(BuildContext context)", "modifiers": "public", "return": "void", "signature": "void attach(BuildContext context)", "full_signature": "public void attach(BuildContext context)", "class_method_signature": "BetaNode.attach(BuildContext context)", "testcase": false, "constructor": false}, {"identifier": "byPassModifyToBetaNode", "parameters": "(final InternalFactHandle factHandle,\n                                        final ModifyPreviousTuples modifyPreviousTuples,\n                                        final PropagationContext context,\n                                        final InternalWorkingMemory workingMemory)", "modifiers": "public", "return": "void", "signature": "void byPassModifyToBetaNode(final InternalFactHandle factHandle,\n                                        final ModifyPreviousTuples modifyPreviousTuples,\n                                        final PropagationContext context,\n                                        final InternalWorkingMemory workingMemory)", "full_signature": "public void byPassModifyToBetaNode(final InternalFactHandle factHandle,\n                                        final ModifyPreviousTuples modifyPreviousTuples,\n                                        final PropagationContext context,\n                                        final InternalWorkingMemory workingMemory)", "class_method_signature": "BetaNode.byPassModifyToBetaNode(final InternalFactHandle factHandle,\n                                        final ModifyPreviousTuples modifyPreviousTuples,\n                                        final PropagationContext context,\n                                        final InternalWorkingMemory workingMemory)", "testcase": false, "constructor": false}, {"identifier": "getBetaMemory", "parameters": "(BetaNode node, InternalWorkingMemory wm)", "modifiers": "public static", "return": "BetaMemory", "signature": "BetaMemory getBetaMemory(BetaNode node, InternalWorkingMemory wm)", "full_signature": "public static BetaMemory getBetaMemory(BetaNode node, InternalWorkingMemory wm)", "class_method_signature": "BetaNode.getBetaMemory(BetaNode node, InternalWorkingMemory wm)", "testcase": false, "constructor": false}, {"identifier": "isObjectMemoryEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isObjectMemoryEnabled()", "full_signature": "public boolean isObjectMemoryEnabled()", "class_method_signature": "BetaNode.isObjectMemoryEnabled()", "testcase": false, "constructor": false}, {"identifier": "isLeftTupleMemoryEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isLeftTupleMemoryEnabled()", "full_signature": "public boolean isLeftTupleMemoryEnabled()", "class_method_signature": "BetaNode.isLeftTupleMemoryEnabled()", "testcase": false, "constructor": false}, {"identifier": "setLeftTupleMemoryEnabled", "parameters": "(boolean tupleMemoryEnabled)", "modifiers": "public", "return": "void", "signature": "void setLeftTupleMemoryEnabled(boolean tupleMemoryEnabled)", "full_signature": "public void setLeftTupleMemoryEnabled(boolean tupleMemoryEnabled)", "class_method_signature": "BetaNode.setLeftTupleMemoryEnabled(boolean tupleMemoryEnabled)", "testcase": false, "constructor": false}, {"identifier": "createMemory", "parameters": "(RuleBaseConfiguration config, InternalWorkingMemory wm)", "modifiers": "public", "return": "Memory", "signature": "Memory createMemory(RuleBaseConfiguration config, InternalWorkingMemory wm)", "full_signature": "public Memory createMemory(RuleBaseConfiguration config, InternalWorkingMemory wm)", "class_method_signature": "BetaNode.createMemory(RuleBaseConfiguration config, InternalWorkingMemory wm)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "BetaNode.toString()", "testcase": false, "constructor": false}, {"identifier": "dumpMemory", "parameters": "(final InternalWorkingMemory workingMemory)", "modifiers": "public", "return": "void", "signature": "void dumpMemory(final InternalWorkingMemory workingMemory)", "full_signature": "public void dumpMemory(final InternalWorkingMemory workingMemory)", "class_method_signature": "BetaNode.dumpMemory(final InternalWorkingMemory workingMemory)", "testcase": false, "constructor": false}, {"identifier": "calculateHashCode", "parameters": "()", "modifiers": "protected", "return": "int", "signature": "int calculateHashCode()", "full_signature": "protected int calculateHashCode()", "class_method_signature": "BetaNode.calculateHashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object object)", "full_signature": "@Override public boolean equals(Object object)", "class_method_signature": "BetaNode.equals(Object object)", "testcase": false, "constructor": false}, {"identifier": "getNextLeftTupleSinkNode", "parameters": "()", "modifiers": "public", "return": "LeftTupleSinkNode", "signature": "LeftTupleSinkNode getNextLeftTupleSinkNode()", "full_signature": "public LeftTupleSinkNode getNextLeftTupleSinkNode()", "class_method_signature": "BetaNode.getNextLeftTupleSinkNode()", "testcase": false, "constructor": false}, {"identifier": "setNextLeftTupleSinkNode", "parameters": "(final LeftTupleSinkNode next)", "modifiers": "public", "return": "void", "signature": "void setNextLeftTupleSinkNode(final LeftTupleSinkNode next)", "full_signature": "public void setNextLeftTupleSinkNode(final LeftTupleSinkNode next)", "class_method_signature": "BetaNode.setNextLeftTupleSinkNode(final LeftTupleSinkNode next)", "testcase": false, "constructor": false}, {"identifier": "getPreviousLeftTupleSinkNode", "parameters": "()", "modifiers": "public", "return": "LeftTupleSinkNode", "signature": "LeftTupleSinkNode getPreviousLeftTupleSinkNode()", "full_signature": "public LeftTupleSinkNode getPreviousLeftTupleSinkNode()", "class_method_signature": "BetaNode.getPreviousLeftTupleSinkNode()", "testcase": false, "constructor": false}, {"identifier": "setPreviousLeftTupleSinkNode", "parameters": "(final LeftTupleSinkNode previous)", "modifiers": "public", "return": "void", "signature": "void setPreviousLeftTupleSinkNode(final LeftTupleSinkNode previous)", "full_signature": "public void setPreviousLeftTupleSinkNode(final LeftTupleSinkNode previous)", "class_method_signature": "BetaNode.setPreviousLeftTupleSinkNode(final LeftTupleSinkNode previous)", "testcase": false, "constructor": false}, {"identifier": "getNextObjectSinkNode", "parameters": "()", "modifiers": "public", "return": "ObjectSinkNode", "signature": "ObjectSinkNode getNextObjectSinkNode()", "full_signature": "public ObjectSinkNode getNextObjectSinkNode()", "class_method_signature": "BetaNode.getNextObjectSinkNode()", "testcase": false, "constructor": false}, {"identifier": "setNextObjectSinkNode", "parameters": "(final ObjectSinkNode next)", "modifiers": "public", "return": "void", "signature": "void setNextObjectSinkNode(final ObjectSinkNode next)", "full_signature": "public void setNextObjectSinkNode(final ObjectSinkNode next)", "class_method_signature": "BetaNode.setNextObjectSinkNode(final ObjectSinkNode next)", "testcase": false, "constructor": false}, {"identifier": "getPreviousObjectSinkNode", "parameters": "()", "modifiers": "public", "return": "ObjectSinkNode", "signature": "ObjectSinkNode getPreviousObjectSinkNode()", "full_signature": "public ObjectSinkNode getPreviousObjectSinkNode()", "class_method_signature": "BetaNode.getPreviousObjectSinkNode()", "testcase": false, "constructor": false}, {"identifier": "setPreviousObjectSinkNode", "parameters": "(final ObjectSinkNode previous)", "modifiers": "public", "return": "void", "signature": "void setPreviousObjectSinkNode(final ObjectSinkNode previous)", "full_signature": "public void setPreviousObjectSinkNode(final ObjectSinkNode previous)", "class_method_signature": "BetaNode.setPreviousObjectSinkNode(final ObjectSinkNode previous)", "testcase": false, "constructor": false}, {"identifier": "createRightTuple", "parameters": "(InternalFactHandle handle,\n                                       RightTupleSink sink,\n                                       PropagationContext context)", "modifiers": "public", "return": "RightTuple", "signature": "RightTuple createRightTuple(InternalFactHandle handle,\n                                       RightTupleSink sink,\n                                       PropagationContext context)", "full_signature": "public RightTuple createRightTuple(InternalFactHandle handle,\n                                       RightTupleSink sink,\n                                       PropagationContext context)", "class_method_signature": "BetaNode.createRightTuple(InternalFactHandle handle,\n                                       RightTupleSink sink,\n                                       PropagationContext context)", "testcase": false, "constructor": false}, {"identifier": "getBetaMemoryFromRightInput", "parameters": "( final BetaNode betaNode, final InternalWorkingMemory workingMemory )", "modifiers": "public static", "return": "BetaMemory", "signature": "BetaMemory getBetaMemoryFromRightInput( final BetaNode betaNode, final InternalWorkingMemory workingMemory )", "full_signature": "public static BetaMemory getBetaMemoryFromRightInput( final BetaNode betaNode, final InternalWorkingMemory workingMemory )", "class_method_signature": "BetaNode.getBetaMemoryFromRightInput( final BetaNode betaNode, final InternalWorkingMemory workingMemory )", "testcase": false, "constructor": false}, {"identifier": "getRightDeclaredMask", "parameters": "()", "modifiers": "public", "return": "BitMask", "signature": "BitMask getRightDeclaredMask()", "full_signature": "public BitMask getRightDeclaredMask()", "class_method_signature": "BetaNode.getRightDeclaredMask()", "testcase": false, "constructor": false}, {"identifier": "setRightDeclaredMask", "parameters": "(BitMask rightDeclaredMask)", "modifiers": "public", "return": "void", "signature": "void setRightDeclaredMask(BitMask rightDeclaredMask)", "full_signature": "public void setRightDeclaredMask(BitMask rightDeclaredMask)", "class_method_signature": "BetaNode.setRightDeclaredMask(BitMask rightDeclaredMask)", "testcase": false, "constructor": false}, {"identifier": "getRightInferredMask", "parameters": "()", "modifiers": "public", "return": "BitMask", "signature": "BitMask getRightInferredMask()", "full_signature": "public BitMask getRightInferredMask()", "class_method_signature": "BetaNode.getRightInferredMask()", "testcase": false, "constructor": false}, {"identifier": "getRightNegativeMask", "parameters": "()", "modifiers": "public", "return": "BitMask", "signature": "BitMask getRightNegativeMask()", "full_signature": "public BitMask getRightNegativeMask()", "class_method_signature": "BetaNode.getRightNegativeMask()", "testcase": false, "constructor": false}, {"identifier": "getRightInputOtnId", "parameters": "()", "modifiers": "public", "return": "ObjectTypeNode.Id", "signature": "ObjectTypeNode.Id getRightInputOtnId()", "full_signature": "public ObjectTypeNode.Id getRightInputOtnId()", "class_method_signature": "BetaNode.getRightInputOtnId()", "testcase": false, "constructor": false}, {"identifier": "setRightInputOtnId", "parameters": "(ObjectTypeNode.Id rightInputOtnId)", "modifiers": "public", "return": "void", "signature": "void setRightInputOtnId(ObjectTypeNode.Id rightInputOtnId)", "full_signature": "public void setRightInputOtnId(ObjectTypeNode.Id rightInputOtnId)", "class_method_signature": "BetaNode.setRightInputOtnId(ObjectTypeNode.Id rightInputOtnId)", "testcase": false, "constructor": false}], "file": "drools-core/src/main/java/org/drools/core/reteoo/BetaNode.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object object) {\n        if (this == object) {\n            return true;\n        }\n\n        if ( object == null || !(object instanceof BetaNode) || this.hashCode() != object.hashCode() ) {\n            return false;\n        }\n\n        BetaNode other = (BetaNode) object;\n        return this.getClass() == other.getClass() &&\n               this.constraints.equals( other.constraints ) &&\n               this.rightInputIsPassive == other.rightInputIsPassive &&\n               areNullSafeEquals(this.leftListenedProperties, other.leftListenedProperties) &&\n               areNullSafeEquals(this.rightListenedProperties, other.rightListenedProperties) &&\n               this.leftInput.getId() == other.leftInput.getId() &&\n               this.rightInput.getId() == other.rightInput.getId();\n    }", "signature": "boolean equals(Object object)", "full_signature": "@Override public boolean equals(Object object)", "class_method_signature": "BetaNode.equals(Object object)", "testcase": false, "constructor": false, "invocations": ["hashCode", "hashCode", "getClass", "getClass", "equals", "areNullSafeEquals", "areNullSafeEquals", "getId", "getId", "getId", "getId"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}