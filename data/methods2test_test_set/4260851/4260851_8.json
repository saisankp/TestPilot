{"test_class": {"identifier": "DateSequenceValueGeneratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "DbSetup-core/src/test/java/com/ninja_squad/dbsetup/generator/DateSequenceValueGeneratorTest.java"}, "test_case": {"identifier": "startsAtToday", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void startsAtToday() {\n        ZonedDateTime date = ValueGenerators.dateSequence().nextValue();\n        assertEquals(LocalDate.now().atStartOfDay(ZoneId.systemDefault()), date);\n    }", "signature": "void startsAtToday()", "full_signature": "@Test public void startsAtToday()", "class_method_signature": "DateSequenceValueGeneratorTest.startsAtToday()", "testcase": true, "constructor": false, "invocations": ["nextValue", "dateSequence", "assertEquals", "atStartOfDay", "now", "systemDefault"]}, "focal_class": {"identifier": "DateSequenceValueGenerator", "superclass": "", "interfaces": "implements ValueGenerator<ZonedDateTime>", "fields": [{"original_string": "private static final int MIN_NUMBER_OF_CHARS_FOR_TIMESTAMP = 19;", "modifier": "private static final", "type": "int", "declarator": "MIN_NUMBER_OF_CHARS_FOR_TIMESTAMP = 19", "var_name": "MIN_NUMBER_OF_CHARS_FOR_TIMESTAMP"}, {"original_string": "private ZonedDateTime next;", "modifier": "private", "type": "ZonedDateTime", "declarator": "next", "var_name": "next"}, {"original_string": "private int increment;", "modifier": "private", "type": "int", "declarator": "increment", "var_name": "increment"}, {"original_string": "private TemporalUnit unit;", "modifier": "private", "type": "TemporalUnit", "declarator": "unit", "var_name": "unit"}], "methods": [{"identifier": "DateSequenceValueGenerator", "parameters": "()", "modifiers": "", "return": "", "signature": " DateSequenceValueGenerator()", "full_signature": "  DateSequenceValueGenerator()", "class_method_signature": "DateSequenceValueGenerator.DateSequenceValueGenerator()", "testcase": false, "constructor": true}, {"identifier": "DateSequenceValueGenerator", "parameters": "(ZonedDateTime next, int increment, TemporalUnit unit)", "modifiers": "private", "return": "", "signature": " DateSequenceValueGenerator(ZonedDateTime next, int increment, TemporalUnit unit)", "full_signature": "private  DateSequenceValueGenerator(ZonedDateTime next, int increment, TemporalUnit unit)", "class_method_signature": "DateSequenceValueGenerator.DateSequenceValueGenerator(ZonedDateTime next, int increment, TemporalUnit unit)", "testcase": false, "constructor": true}, {"identifier": "startingAt", "parameters": "(@Nonnull Date startDate, @Nonnull TimeZone timeZone)", "modifiers": "@Deprecated public", "return": "DateSequenceValueGenerator", "signature": "DateSequenceValueGenerator startingAt(@Nonnull Date startDate, @Nonnull TimeZone timeZone)", "full_signature": "@Deprecated public DateSequenceValueGenerator startingAt(@Nonnull Date startDate, @Nonnull TimeZone timeZone)", "class_method_signature": "DateSequenceValueGenerator.startingAt(@Nonnull Date startDate, @Nonnull TimeZone timeZone)", "testcase": false, "constructor": false}, {"identifier": "startingAt", "parameters": "(@Nonnull Date startDate)", "modifiers": "@Deprecated public", "return": "DateSequenceValueGenerator", "signature": "DateSequenceValueGenerator startingAt(@Nonnull Date startDate)", "full_signature": "@Deprecated public DateSequenceValueGenerator startingAt(@Nonnull Date startDate)", "class_method_signature": "DateSequenceValueGenerator.startingAt(@Nonnull Date startDate)", "testcase": false, "constructor": false}, {"identifier": "startingAt", "parameters": "(@Nonnull Calendar startDate)", "modifiers": "@Deprecated public", "return": "DateSequenceValueGenerator", "signature": "DateSequenceValueGenerator startingAt(@Nonnull Calendar startDate)", "full_signature": "@Deprecated public DateSequenceValueGenerator startingAt(@Nonnull Calendar startDate)", "class_method_signature": "DateSequenceValueGenerator.startingAt(@Nonnull Calendar startDate)", "testcase": false, "constructor": false}, {"identifier": "startingAt", "parameters": "(@Nonnull String startDate)", "modifiers": "public", "return": "DateSequenceValueGenerator", "signature": "DateSequenceValueGenerator startingAt(@Nonnull String startDate)", "full_signature": "public DateSequenceValueGenerator startingAt(@Nonnull String startDate)", "class_method_signature": "DateSequenceValueGenerator.startingAt(@Nonnull String startDate)", "testcase": false, "constructor": false}, {"identifier": "startingAt", "parameters": "(@Nonnull LocalDate startDate)", "modifiers": "public", "return": "DateSequenceValueGenerator", "signature": "DateSequenceValueGenerator startingAt(@Nonnull LocalDate startDate)", "full_signature": "public DateSequenceValueGenerator startingAt(@Nonnull LocalDate startDate)", "class_method_signature": "DateSequenceValueGenerator.startingAt(@Nonnull LocalDate startDate)", "testcase": false, "constructor": false}, {"identifier": "startingAt", "parameters": "(@Nonnull LocalDateTime startDate)", "modifiers": "public", "return": "DateSequenceValueGenerator", "signature": "DateSequenceValueGenerator startingAt(@Nonnull LocalDateTime startDate)", "full_signature": "public DateSequenceValueGenerator startingAt(@Nonnull LocalDateTime startDate)", "class_method_signature": "DateSequenceValueGenerator.startingAt(@Nonnull LocalDateTime startDate)", "testcase": false, "constructor": false}, {"identifier": "startingAt", "parameters": "(@Nonnull ZonedDateTime startDate)", "modifiers": "public", "return": "DateSequenceValueGenerator", "signature": "DateSequenceValueGenerator startingAt(@Nonnull ZonedDateTime startDate)", "full_signature": "public DateSequenceValueGenerator startingAt(@Nonnull ZonedDateTime startDate)", "class_method_signature": "DateSequenceValueGenerator.startingAt(@Nonnull ZonedDateTime startDate)", "testcase": false, "constructor": false}, {"identifier": "incrementingBy", "parameters": "(int increment, @Nonnull CalendarField unit)", "modifiers": "@Deprecated public", "return": "DateSequenceValueGenerator", "signature": "DateSequenceValueGenerator incrementingBy(int increment, @Nonnull CalendarField unit)", "full_signature": "@Deprecated public DateSequenceValueGenerator incrementingBy(int increment, @Nonnull CalendarField unit)", "class_method_signature": "DateSequenceValueGenerator.incrementingBy(int increment, @Nonnull CalendarField unit)", "testcase": false, "constructor": false}, {"identifier": "incrementingBy", "parameters": "(int increment, @Nonnull TemporalUnit unit)", "modifiers": "public", "return": "DateSequenceValueGenerator", "signature": "DateSequenceValueGenerator incrementingBy(int increment, @Nonnull TemporalUnit unit)", "full_signature": "public DateSequenceValueGenerator incrementingBy(int increment, @Nonnull TemporalUnit unit)", "class_method_signature": "DateSequenceValueGenerator.incrementingBy(int increment, @Nonnull TemporalUnit unit)", "testcase": false, "constructor": false}, {"identifier": "nextValue", "parameters": "()", "modifiers": "@Override public", "return": "ZonedDateTime", "signature": "ZonedDateTime nextValue()", "full_signature": "@Override public ZonedDateTime nextValue()", "class_method_signature": "DateSequenceValueGenerator.nextValue()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DateSequenceValueGenerator.toString()", "testcase": false, "constructor": false}], "file": "DbSetup-core/src/main/java/com/ninja_squad/dbsetup/generator/DateSequenceValueGenerator.java"}, "focal_method": {"identifier": "nextValue", "parameters": "()", "modifiers": "@Override public", "return": "ZonedDateTime", "body": "@Override\n    public ZonedDateTime nextValue() {\n        ZonedDateTime result = next;\n        next = next.plus(increment, unit);\n        return result;\n    }", "signature": "ZonedDateTime nextValue()", "full_signature": "@Override public ZonedDateTime nextValue()", "class_method_signature": "DateSequenceValueGenerator.nextValue()", "testcase": false, "constructor": false, "invocations": ["plus"]}, "repository": {"repo_id": 4260851, "url": "https://github.com/Ninja-Squad/DbSetup", "language": "Java", "is_fork": false, "fork_count": 30, "stargazer_count": 183, "size": 1379, "license": "licensed"}}