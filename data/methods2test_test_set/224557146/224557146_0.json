{"test_class": {"identifier": "BiddingResponseTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BiddingResponse br1 = new BiddingResponse();", "modifier": "private", "type": "BiddingResponse", "declarator": "br1 = new BiddingResponse()", "var_name": "br1"}, {"original_string": "private BiddingResponse br2 = new BiddingResponse();", "modifier": "private", "type": "BiddingResponse", "declarator": "br2 = new BiddingResponse()", "var_name": "br2"}], "file": "hibid/src/test/java/mtg/opensource/hibid/data/BiddingResponseTest.java"}, "test_case": {"identifier": "testCompareTo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCompareTo() {\n        assertTrue(br1.compareTo(br2) < 0);\n    }", "signature": "void testCompareTo()", "full_signature": "@Test public void testCompareTo()", "class_method_signature": "BiddingResponseTest.testCompareTo()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "compareTo"]}, "focal_class": {"identifier": "BiddingResponse", "superclass": "", "interfaces": "implements Comparable<BiddingResponse>", "fields": [{"original_string": "private Class bidderClass;", "modifier": "private", "type": "Class", "declarator": "bidderClass", "var_name": "bidderClass"}, {"original_string": "private double biddingPriceUSD;", "modifier": "private", "type": "double", "declarator": "biddingPriceUSD", "var_name": "biddingPriceUSD"}, {"original_string": "private Object payload;", "modifier": "private", "type": "Object", "declarator": "payload", "var_name": "payload"}, {"original_string": "private Bidder bidder;", "modifier": "private", "type": "Bidder", "declarator": "bidder", "var_name": "bidder"}, {"original_string": "private BidRequestInfo bidRequestInfo;", "modifier": "private", "type": "BidRequestInfo", "declarator": "bidRequestInfo", "var_name": "bidRequestInfo"}, {"original_string": "private String errorMessage;", "modifier": "private", "type": "String", "declarator": "errorMessage", "var_name": "errorMessage"}], "methods": [{"identifier": "BiddingResponse", "parameters": "()", "modifiers": "public", "return": "", "signature": " BiddingResponse()", "full_signature": "public  BiddingResponse()", "class_method_signature": "BiddingResponse.BiddingResponse()", "testcase": false, "constructor": true}, {"identifier": "BiddingResponse", "parameters": "(Class bidderClass, double biddingPriceUSD, Object payload,\n\t\t\t\t\t\t   Bidder bidder, BidRequestInfo bidRequestInfo)", "modifiers": "public", "return": "", "signature": " BiddingResponse(Class bidderClass, double biddingPriceUSD, Object payload,\n\t\t\t\t\t\t   Bidder bidder, BidRequestInfo bidRequestInfo)", "full_signature": "public  BiddingResponse(Class bidderClass, double biddingPriceUSD, Object payload,\n\t\t\t\t\t\t   Bidder bidder, BidRequestInfo bidRequestInfo)", "class_method_signature": "BiddingResponse.BiddingResponse(Class bidderClass, double biddingPriceUSD, Object payload,\n\t\t\t\t\t\t   Bidder bidder, BidRequestInfo bidRequestInfo)", "testcase": false, "constructor": true}, {"identifier": "BiddingResponse", "parameters": "(Class bidderClass, String errorMessage, Bidder bidder, BidRequestInfo bidRequestInfo)", "modifiers": "public", "return": "", "signature": " BiddingResponse(Class bidderClass, String errorMessage, Bidder bidder, BidRequestInfo bidRequestInfo)", "full_signature": "public  BiddingResponse(Class bidderClass, String errorMessage, Bidder bidder, BidRequestInfo bidRequestInfo)", "class_method_signature": "BiddingResponse.BiddingResponse(Class bidderClass, String errorMessage, Bidder bidder, BidRequestInfo bidRequestInfo)", "testcase": false, "constructor": true}, {"identifier": "getBidderClass", "parameters": "()", "modifiers": "public", "return": "Class", "signature": "Class getBidderClass()", "full_signature": "public Class getBidderClass()", "class_method_signature": "BiddingResponse.getBidderClass()", "testcase": false, "constructor": false}, {"identifier": "setBidderClass", "parameters": "(Class bidderClass)", "modifiers": "public", "return": "void", "signature": "void setBidderClass(Class bidderClass)", "full_signature": "public void setBidderClass(Class bidderClass)", "class_method_signature": "BiddingResponse.setBidderClass(Class bidderClass)", "testcase": false, "constructor": false}, {"identifier": "getBiddingPriceUSD", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getBiddingPriceUSD()", "full_signature": "public double getBiddingPriceUSD()", "class_method_signature": "BiddingResponse.getBiddingPriceUSD()", "testcase": false, "constructor": false}, {"identifier": "setBiddingPriceUSD", "parameters": "(double biddingPriceUSD)", "modifiers": "public", "return": "void", "signature": "void setBiddingPriceUSD(double biddingPriceUSD)", "full_signature": "public void setBiddingPriceUSD(double biddingPriceUSD)", "class_method_signature": "BiddingResponse.setBiddingPriceUSD(double biddingPriceUSD)", "testcase": false, "constructor": false}, {"identifier": "getPayload", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object getPayload()", "full_signature": "public Object getPayload()", "class_method_signature": "BiddingResponse.getPayload()", "testcase": false, "constructor": false}, {"identifier": "setPayload", "parameters": "(Object payload)", "modifiers": "public", "return": "void", "signature": "void setPayload(Object payload)", "full_signature": "public void setPayload(Object payload)", "class_method_signature": "BiddingResponse.setPayload(Object payload)", "testcase": false, "constructor": false}, {"identifier": "getBidder", "parameters": "()", "modifiers": "public", "return": "Bidder", "signature": "Bidder getBidder()", "full_signature": "public Bidder getBidder()", "class_method_signature": "BiddingResponse.getBidder()", "testcase": false, "constructor": false}, {"identifier": "setBidder", "parameters": "(Bidder bidder)", "modifiers": "public", "return": "void", "signature": "void setBidder(Bidder bidder)", "full_signature": "public void setBidder(Bidder bidder)", "class_method_signature": "BiddingResponse.setBidder(Bidder bidder)", "testcase": false, "constructor": false}, {"identifier": "getErrorMessage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getErrorMessage()", "full_signature": "public String getErrorMessage()", "class_method_signature": "BiddingResponse.getErrorMessage()", "testcase": false, "constructor": false}, {"identifier": "setErrorMessage", "parameters": "(String errorMessage)", "modifiers": "public", "return": "void", "signature": "void setErrorMessage(String errorMessage)", "full_signature": "public void setErrorMessage(String errorMessage)", "class_method_signature": "BiddingResponse.setErrorMessage(String errorMessage)", "testcase": false, "constructor": false}, {"identifier": "getBidRequestInfo", "parameters": "()", "modifiers": "public", "return": "BidRequestInfo", "signature": "BidRequestInfo getBidRequestInfo()", "full_signature": "public BidRequestInfo getBidRequestInfo()", "class_method_signature": "BiddingResponse.getBidRequestInfo()", "testcase": false, "constructor": false}, {"identifier": "setBidRequestInfo", "parameters": "(BidRequestInfo bidRequestInfo)", "modifiers": "public", "return": "void", "signature": "void setBidRequestInfo(BidRequestInfo bidRequestInfo)", "full_signature": "public void setBidRequestInfo(BidRequestInfo bidRequestInfo)", "class_method_signature": "BiddingResponse.setBidRequestInfo(BidRequestInfo bidRequestInfo)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(BiddingResponse other)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(BiddingResponse other)", "full_signature": "@Override public int compareTo(BiddingResponse other)", "class_method_signature": "BiddingResponse.compareTo(BiddingResponse other)", "testcase": false, "constructor": false}], "file": "hibid/src/main/java/mtg/opensource/hibid/data/BiddingResponse.java"}, "focal_method": {"identifier": "compareTo", "parameters": "(BiddingResponse other)", "modifiers": "@Override public", "return": "int", "body": "@Override\n\tpublic int compareTo(BiddingResponse other) {\n\t\tif (this.biddingPriceUSD > other.getBiddingPriceUSD()) {\n\t\t\treturn -1;\n\t\t} else if (this.biddingPriceUSD == other.getBiddingPriceUSD()) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}", "signature": "int compareTo(BiddingResponse other)", "full_signature": "@Override public int compareTo(BiddingResponse other)", "class_method_signature": "BiddingResponse.compareTo(BiddingResponse other)", "testcase": false, "constructor": false, "invocations": ["getBiddingPriceUSD", "getBiddingPriceUSD"]}, "repository": {"repo_id": 224557146, "url": "https://github.com/Mintegral-official/HiBid-Android", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 2545, "license": "licensed"}}