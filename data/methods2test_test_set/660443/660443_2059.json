{"test_class": {"identifier": "PCCompoundXMLReaderTest", "superclass": "extends SimpleChemObjectReaderTest", "interfaces": "", "fields": [{"original_string": "private static ILoggingTool logger = LoggingToolFactory.createLoggingTool(PCCompoundXMLReaderTest.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(PCCompoundXMLReaderTest.class)", "var_name": "logger"}], "file": "storage/io/src/test/java/org/openscience/cdk/io/PCCompoundXMLReaderTest.java"}, "test_case": {"identifier": "testAccepts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAccepts() throws Exception {\n        PCCompoundXMLReader reader = new PCCompoundXMLReader();\n        Assert.assertTrue(reader.accepts(AtomContainer.class));\n    }", "signature": "void testAccepts()", "full_signature": "@Test public void testAccepts()", "class_method_signature": "PCCompoundXMLReaderTest.testAccepts()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "accepts"]}, "focal_class": {"identifier": "PCCompoundXMLReader", "superclass": "extends DefaultChemObjectReader", "interfaces": "", "fields": [{"original_string": "private Reader             input;", "modifier": "private", "type": "Reader", "declarator": "input", "var_name": "input"}, {"original_string": "private XMLStreamReader    parser;", "modifier": "private", "type": "XMLStreamReader", "declarator": "parser", "var_name": "parser"}, {"original_string": "private PubChemXMLHelper   parserHelper;", "modifier": "private", "type": "PubChemXMLHelper", "declarator": "parserHelper", "var_name": "parserHelper"}, {"original_string": "private IChemObjectBuilder builder;", "modifier": "private", "type": "IChemObjectBuilder", "declarator": "builder", "var_name": "builder"}, {"original_string": "IAtomContainer             molecule = null;", "modifier": "", "type": "IAtomContainer", "declarator": "molecule = null", "var_name": "molecule"}], "methods": [{"identifier": "PCCompoundXMLReader", "parameters": "(Reader input)", "modifiers": "public", "return": "", "signature": " PCCompoundXMLReader(Reader input)", "full_signature": "public  PCCompoundXMLReader(Reader input)", "class_method_signature": "PCCompoundXMLReader.PCCompoundXMLReader(Reader input)", "testcase": false, "constructor": true}, {"identifier": "PCCompoundXMLReader", "parameters": "(InputStream input)", "modifiers": "public", "return": "", "signature": " PCCompoundXMLReader(InputStream input)", "full_signature": "public  PCCompoundXMLReader(InputStream input)", "class_method_signature": "PCCompoundXMLReader.PCCompoundXMLReader(InputStream input)", "testcase": false, "constructor": true}, {"identifier": "PCCompoundXMLReader", "parameters": "()", "modifiers": "public", "return": "", "signature": " PCCompoundXMLReader()", "full_signature": "public  PCCompoundXMLReader()", "class_method_signature": "PCCompoundXMLReader.PCCompoundXMLReader()", "testcase": false, "constructor": true}, {"identifier": "getFormat", "parameters": "()", "modifiers": "@Override public", "return": "IResourceFormat", "signature": "IResourceFormat getFormat()", "full_signature": "@Override public IResourceFormat getFormat()", "class_method_signature": "PCCompoundXMLReader.getFormat()", "testcase": false, "constructor": false}, {"identifier": "setReader", "parameters": "(Reader input)", "modifiers": "@Override public", "return": "void", "signature": "void setReader(Reader input)", "full_signature": "@Override public void setReader(Reader input)", "class_method_signature": "PCCompoundXMLReader.setReader(Reader input)", "testcase": false, "constructor": false}, {"identifier": "setReader", "parameters": "(InputStream input)", "modifiers": "@Override public", "return": "void", "signature": "void setReader(InputStream input)", "full_signature": "@Override public void setReader(InputStream input)", "class_method_signature": "PCCompoundXMLReader.setReader(InputStream input)", "testcase": false, "constructor": false}, {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "PCCompoundXMLReader.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(T object)", "modifiers": "@Override public", "return": "T", "signature": "T read(T object)", "full_signature": "@Override public T read(T object)", "class_method_signature": "PCCompoundXMLReader.read(T object)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "PCCompoundXMLReader.close()", "testcase": false, "constructor": false}, {"identifier": "readMolecule", "parameters": "()", "modifiers": "private", "return": "IAtomContainer", "signature": "IAtomContainer readMolecule()", "full_signature": "private IAtomContainer readMolecule()", "class_method_signature": "PCCompoundXMLReader.readMolecule()", "testcase": false, "constructor": false}], "file": "storage/io/src/main/java/org/openscience/cdk/io/PCCompoundXMLReader.java"}, "focal_method": {"identifier": "accepts", "parameters": "(Class<? extends IChemObject> classObject)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean accepts(Class<? extends IChemObject> classObject) {\n        return IAtomContainer.class.isAssignableFrom(classObject);\n    }", "signature": "boolean accepts(Class<? extends IChemObject> classObject)", "full_signature": "@Override public boolean accepts(Class<? extends IChemObject> classObject)", "class_method_signature": "PCCompoundXMLReader.accepts(Class<? extends IChemObject> classObject)", "testcase": false, "constructor": false, "invocations": ["isAssignableFrom"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}