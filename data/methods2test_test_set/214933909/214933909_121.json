{"test_class": {"identifier": "TableEntityServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private TableEntityService tableEntityService;", "modifier": "@Mock\n    private", "type": "TableEntityService", "declarator": "tableEntityService", "var_name": "tableEntityService"}, {"original_string": "private LoginUser user = LoginUser.builder().id(1L).build();", "modifier": "private", "type": "LoginUser", "declarator": "user = LoginUser.builder().id(1L).build()", "var_name": "user"}, {"original_string": "private TaskTable taskTable = TaskTable.builder().id(1L).table_names(\"name\").build();", "modifier": "private", "type": "TaskTable", "declarator": "taskTable = TaskTable.builder().id(1L).table_names(\"name\").build()", "var_name": "taskTable"}, {"original_string": "private Errors errors = new BeanPropertyBindingResult(taskTable, \"taskTable\", true, 256);", "modifier": "private", "type": "Errors", "declarator": "errors = new BeanPropertyBindingResult(taskTable, \"taskTable\", true, 256)", "var_name": "errors"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/service/TableEntityServiceTest.java"}, "test_case": {"identifier": "insertTasktest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void insertTasktest() throws SQLException {\n        Assert.assertTrue(tableEntityService.insertTask(taskTable) == 1);\n    }", "signature": "void insertTasktest()", "full_signature": "@Test public void insertTasktest()", "class_method_signature": "TableEntityServiceTest.insertTasktest()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "insertTask"]}, "focal_class": {"identifier": "TableEntityService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private Message message;", "modifier": "@Autowired\n    private", "type": "Message", "declarator": "message", "var_name": "message"}, {"original_string": "@Autowired\n    private TableEntityDao tableEntityDao;", "modifier": "@Autowired\n    private", "type": "TableEntityDao", "declarator": "tableEntityDao", "var_name": "tableEntityDao"}, {"original_string": "@Autowired\n    private PermissionService permissionService;", "modifier": "@Autowired\n    private", "type": "PermissionService", "declarator": "permissionService", "var_name": "permissionService"}], "methods": [{"identifier": "validatePermision", "parameters": "(LoginUser user, TaskTable taskTable, Errors errors)", "modifiers": "public", "return": "ValidatorChain", "signature": "ValidatorChain validatePermision(LoginUser user, TaskTable taskTable, Errors errors)", "full_signature": "public ValidatorChain validatePermision(LoginUser user, TaskTable taskTable, Errors errors)", "class_method_signature": "TableEntityService.validatePermision(LoginUser user, TaskTable taskTable, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "validatePermision", "parameters": "(Long projectId, Long userId)", "modifiers": "private", "return": "boolean", "signature": "boolean validatePermision(Long projectId, Long userId)", "full_signature": "private boolean validatePermision(Long projectId, Long userId)", "class_method_signature": "TableEntityService.validatePermision(Long projectId, Long userId)", "testcase": false, "constructor": false}, {"identifier": "findTableEntityPageList", "parameters": "(Paging<TaskTable> paging)", "modifiers": "public", "return": "ListResult<TaskTableView>", "signature": "ListResult<TaskTableView> findTableEntityPageList(Paging<TaskTable> paging)", "full_signature": "public ListResult<TaskTableView> findTableEntityPageList(Paging<TaskTable> paging)", "class_method_signature": "TableEntityService.findTableEntityPageList(Paging<TaskTable> paging)", "testcase": false, "constructor": false}, {"identifier": "insertTask", "parameters": "(TaskTable task)", "modifiers": "public", "return": "Long", "signature": "Long insertTask(TaskTable task)", "full_signature": "public Long insertTask(TaskTable task)", "class_method_signature": "TableEntityService.insertTask(TaskTable task)", "testcase": false, "constructor": false}, {"identifier": "addTaskTableList", "parameters": "(LoginUser user, List<TaskTable> list)", "modifiers": "public", "return": "ServiceResult<String>", "signature": "ServiceResult<String> addTaskTableList(LoginUser user, List<TaskTable> list)", "full_signature": "public ServiceResult<String> addTaskTableList(LoginUser user, List<TaskTable> list)", "class_method_signature": "TableEntityService.addTaskTableList(LoginUser user, List<TaskTable> list)", "testcase": false, "constructor": false}, {"identifier": "initTaskTable", "parameters": "(TaskTable task)", "modifiers": "private", "return": "void", "signature": "void initTaskTable(TaskTable task)", "full_signature": "private void initTaskTable(TaskTable task)", "class_method_signature": "TableEntityService.initTaskTable(TaskTable task)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/service/TableEntityService.java"}, "focal_method": {"identifier": "insertTask", "parameters": "(TaskTable task)", "modifiers": "public", "return": "Long", "body": "public Long insertTask(TaskTable task) throws SQLException {\n        this.initTaskTable(task);\n        return tableEntityDao.insertTask(task);\n    }", "signature": "Long insertTask(TaskTable task)", "full_signature": "public Long insertTask(TaskTable task)", "class_method_signature": "TableEntityService.insertTask(TaskTable task)", "testcase": false, "constructor": false, "invocations": ["initTaskTable", "insertTask"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}