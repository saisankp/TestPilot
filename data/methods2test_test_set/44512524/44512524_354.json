{"test_class": {"identifier": "OneTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int ANY_INT_ONE = 1;", "modifier": "private static final", "type": "int", "declarator": "ANY_INT_ONE = 1", "var_name": "ANY_INT_ONE"}, {"original_string": "private static final int ANY_INT_TWO = 1;", "modifier": "private static final", "type": "int", "declarator": "ANY_INT_TWO = 1", "var_name": "ANY_INT_TWO"}, {"original_string": "private static final One one = new One();", "modifier": "private static final", "type": "One", "declarator": "one = new One()", "var_name": "one"}], "file": "storm/storm-benchmark/src/test/java/storm/benchmark/lib/operation/OneTest.java"}, "test_case": {"identifier": "testInit", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testInit() throws Exception {\n    TridentTuple tuple = mock(TridentTuple.class);\n    assertThat(one.init(tuple)).isEqualTo(1);\n  }", "signature": "void testInit()", "full_signature": "@Test public void testInit()", "class_method_signature": "OneTest.testInit()", "testcase": true, "constructor": false, "invocations": ["mock", "isEqualTo", "assertThat", "init"]}, "focal_class": {"identifier": "One", "superclass": "", "interfaces": "implements CombinerAggregator<Integer>", "fields": [], "methods": [{"identifier": "init", "parameters": "(TridentTuple tuple)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer init(TridentTuple tuple)", "full_signature": "@Override public Integer init(TridentTuple tuple)", "class_method_signature": "One.init(TridentTuple tuple)", "testcase": false, "constructor": false}, {"identifier": "combine", "parameters": "(Integer val1, Integer val2)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer combine(Integer val1, Integer val2)", "full_signature": "@Override public Integer combine(Integer val1, Integer val2)", "class_method_signature": "One.combine(Integer val1, Integer val2)", "testcase": false, "constructor": false}, {"identifier": "zero", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer zero()", "full_signature": "@Override public Integer zero()", "class_method_signature": "One.zero()", "testcase": false, "constructor": false}], "file": "storm/storm-benchmark/src/main/java/storm/benchmark/lib/operation/One.java"}, "focal_method": {"identifier": "init", "parameters": "(TridentTuple tuple)", "modifiers": "@Override public", "return": "Integer", "body": "@Override\n  public Integer init(TridentTuple tuple) {\n    return 1;\n  }", "signature": "Integer init(TridentTuple tuple)", "full_signature": "@Override public Integer init(TridentTuple tuple)", "class_method_signature": "One.init(TridentTuple tuple)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}