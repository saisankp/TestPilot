{"test_class": {"identifier": "QuorumPeerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private int electionAlg = 3;", "modifier": "private", "type": "int", "declarator": "electionAlg = 3", "var_name": "electionAlg"}, {"original_string": "private int tickTime = 2000;", "modifier": "private", "type": "int", "declarator": "tickTime = 2000", "var_name": "tickTime"}, {"original_string": "private int initLimit = 3;", "modifier": "private", "type": "int", "declarator": "initLimit = 3", "var_name": "initLimit"}, {"original_string": "private int syncLimit = 3;", "modifier": "private", "type": "int", "declarator": "syncLimit = 3", "var_name": "syncLimit"}], "file": "zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumPeerTest.java"}, "test_case": {"identifier": "testQuorumPeerListendOnSpecifiedClientIP", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testQuorumPeerListendOnSpecifiedClientIP() throws IOException {\n        long myId = 1;\n        File dataDir = ClientBase.createTmpDir();\n        int clientPort = PortAssignment.unique();\n        Map<Long, QuorumServer> peersView = new HashMap<Long, QuorumServer>();\n        InetAddress clientIP = InetAddress.getLoopbackAddress();\n\n        peersView.put(Long.valueOf(myId),\n                new QuorumServer(myId, new InetSocketAddress(clientIP, PortAssignment.unique()),\n                        new InetSocketAddress(clientIP, PortAssignment.unique()),\n                        new InetSocketAddress(clientIP, clientPort), LearnerType.PARTICIPANT));\n\n        /**\n         * QuorumPeer constructor without QuorumVerifier\n         */\n        QuorumPeer peer1 = new QuorumPeer(peersView, dataDir, dataDir, clientPort, electionAlg, myId, tickTime,\n                initLimit, syncLimit);\n        String hostString1 = peer1.cnxnFactory.getLocalAddress().getHostString();\n        assertEquals(clientIP.getHostAddress(), hostString1);\n\n        // cleanup\n        peer1.shutdown();\n\n        /**\n         * QuorumPeer constructor with QuorumVerifier\n         */\n        peersView.clear();\n        clientPort = PortAssignment.unique();\n        peersView.put(Long.valueOf(myId),\n                new QuorumServer(myId, new InetSocketAddress(clientIP, PortAssignment.unique()),\n                        new InetSocketAddress(clientIP, PortAssignment.unique()),\n                        new InetSocketAddress(clientIP, clientPort), LearnerType.PARTICIPANT));\n        QuorumPeer peer2 = new QuorumPeer(peersView, dataDir, dataDir, clientPort, electionAlg, myId, tickTime,\n                initLimit, syncLimit);\n        String hostString2 = peer2.cnxnFactory.getLocalAddress().getHostString();\n        assertEquals(clientIP.getHostAddress(), hostString2);\n        // cleanup\n        peer2.shutdown();\n    }", "signature": "void testQuorumPeerListendOnSpecifiedClientIP()", "full_signature": "@Test public void testQuorumPeerListendOnSpecifiedClientIP()", "class_method_signature": "QuorumPeerTest.testQuorumPeerListendOnSpecifiedClientIP()", "testcase": true, "constructor": false, "invocations": ["createTmpDir", "unique", "getLoopbackAddress", "put", "valueOf", "unique", "unique", "getHostString", "getLocalAddress", "assertEquals", "getHostAddress", "shutdown", "clear", "unique", "put", "valueOf", "unique", "unique", "getHostString", "getLocalAddress", "assertEquals", "getHostAddress", "shutdown"]}, "focal_class": {"identifier": "QuorumPeer", "superclass": "extends ZooKeeperThread", "interfaces": "implements QuorumStats.Provider", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(QuorumPeer.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(QuorumPeer.class)", "var_name": "LOG"}, {"original_string": "private QuorumBean jmxQuorumBean;", "modifier": "private", "type": "QuorumBean", "declarator": "jmxQuorumBean", "var_name": "jmxQuorumBean"}, {"original_string": "LocalPeerBean jmxLocalPeerBean;", "modifier": "", "type": "LocalPeerBean", "declarator": "jmxLocalPeerBean", "var_name": "jmxLocalPeerBean"}, {"original_string": "private Map<Long, RemotePeerBean> jmxRemotePeerBean;", "modifier": "private", "type": "Map<Long, RemotePeerBean>", "declarator": "jmxRemotePeerBean", "var_name": "jmxRemotePeerBean"}, {"original_string": "LeaderElectionBean jmxLeaderElectionBean;", "modifier": "", "type": "LeaderElectionBean", "declarator": "jmxLeaderElectionBean", "var_name": "jmxLeaderElectionBean"}, {"original_string": "private AtomicReference<QuorumCnxManager> qcmRef = new AtomicReference<>();", "modifier": "private", "type": "AtomicReference<QuorumCnxManager>", "declarator": "qcmRef = new AtomicReference<>()", "var_name": "qcmRef"}, {"original_string": "QuorumAuthServer authServer;", "modifier": "", "type": "QuorumAuthServer", "declarator": "authServer", "var_name": "authServer"}, {"original_string": "QuorumAuthLearner authLearner;", "modifier": "", "type": "QuorumAuthLearner", "declarator": "authLearner", "var_name": "authLearner"}, {"original_string": "private ZKDatabase zkDb;", "modifier": "private", "type": "ZKDatabase", "declarator": "zkDb", "var_name": "zkDb"}, {"original_string": "static final long OBSERVER_ID = Long.MAX_VALUE;", "modifier": "static final", "type": "long", "declarator": "OBSERVER_ID = Long.MAX_VALUE", "var_name": "OBSERVER_ID"}, {"original_string": "public long start_fle, end_fle;", "modifier": "public", "type": "long", "declarator": "start_fle", "var_name": "start_fle"}, {"original_string": "public static final String FLE_TIME_UNIT = \"MS\";", "modifier": "public static final", "type": "String", "declarator": "FLE_TIME_UNIT = \"MS\"", "var_name": "FLE_TIME_UNIT"}, {"original_string": "private LearnerType learnerType = LearnerType.PARTICIPANT;", "modifier": "private", "type": "LearnerType", "declarator": "learnerType = LearnerType.PARTICIPANT", "var_name": "learnerType"}, {"original_string": "private String configFilename = null;", "modifier": "private", "type": "String", "declarator": "configFilename = null", "var_name": "configFilename"}, {"original_string": "private QuorumVerifier quorumVerifier;", "modifier": "private", "type": "QuorumVerifier", "declarator": "quorumVerifier", "var_name": "quorumVerifier"}, {"original_string": "private QuorumVerifier lastSeenQuorumVerifier = null;", "modifier": "private", "type": "QuorumVerifier", "declarator": "lastSeenQuorumVerifier = null", "var_name": "lastSeenQuorumVerifier"}, {"original_string": "final Object QV_LOCK = new Object();", "modifier": "final", "type": "Object", "declarator": "QV_LOCK = new Object()", "var_name": "QV_LOCK"}, {"original_string": "private long myid;", "modifier": "private", "type": "long", "declarator": "myid", "var_name": "myid"}, {"original_string": "private boolean sslQuorum;", "modifier": "private", "type": "boolean", "declarator": "sslQuorum", "var_name": "sslQuorum"}, {"original_string": "private boolean shouldUsePortUnification;", "modifier": "private", "type": "boolean", "declarator": "shouldUsePortUnification", "var_name": "shouldUsePortUnification"}, {"original_string": "private final QuorumX509Util x509Util;", "modifier": "private final", "type": "QuorumX509Util", "declarator": "x509Util", "var_name": "x509Util"}, {"original_string": "volatile private Vote currentVote;", "modifier": "volatile private", "type": "Vote", "declarator": "currentVote", "var_name": "currentVote"}, {"original_string": "private volatile boolean running = true;", "modifier": "private volatile", "type": "boolean", "declarator": "running = true", "var_name": "running"}, {"original_string": "protected int tickTime;", "modifier": "protected", "type": "int", "declarator": "tickTime", "var_name": "tickTime"}, {"original_string": "protected boolean localSessionsEnabled = false;", "modifier": "protected", "type": "boolean", "declarator": "localSessionsEnabled = false", "var_name": "localSessionsEnabled"}, {"original_string": "protected boolean localSessionsUpgradingEnabled = true;", "modifier": "protected", "type": "boolean", "declarator": "localSessionsUpgradingEnabled = true", "var_name": "localSessionsUpgradingEnabled"}, {"original_string": "protected int minSessionTimeout = -1;", "modifier": "protected", "type": "int", "declarator": "minSessionTimeout = -1", "var_name": "minSessionTimeout"}, {"original_string": "protected int maxSessionTimeout = -1;", "modifier": "protected", "type": "int", "declarator": "maxSessionTimeout = -1", "var_name": "maxSessionTimeout"}, {"original_string": "protected int initLimit;", "modifier": "protected", "type": "int", "declarator": "initLimit", "var_name": "initLimit"}, {"original_string": "protected int syncLimit;", "modifier": "protected", "type": "int", "declarator": "syncLimit", "var_name": "syncLimit"}, {"original_string": "protected boolean syncEnabled = true;", "modifier": "protected", "type": "boolean", "declarator": "syncEnabled = true", "var_name": "syncEnabled"}, {"original_string": "protected AtomicInteger tick = new AtomicInteger();", "modifier": "protected", "type": "AtomicInteger", "declarator": "tick = new AtomicInteger()", "var_name": "tick"}, {"original_string": "protected boolean quorumListenOnAllIPs = false;", "modifier": "protected", "type": "boolean", "declarator": "quorumListenOnAllIPs = false", "var_name": "quorumListenOnAllIPs"}, {"original_string": "private long electionTimeTaken = -1;", "modifier": "private", "type": "long", "declarator": "electionTimeTaken = -1", "var_name": "electionTimeTaken"}, {"original_string": "protected boolean quorumSaslEnableAuth;", "modifier": "protected", "type": "boolean", "declarator": "quorumSaslEnableAuth", "var_name": "quorumSaslEnableAuth"}, {"original_string": "protected boolean quorumServerSaslAuthRequired;", "modifier": "protected", "type": "boolean", "declarator": "quorumServerSaslAuthRequired", "var_name": "quorumServerSaslAuthRequired"}, {"original_string": "protected boolean quorumLearnerSaslAuthRequired;", "modifier": "protected", "type": "boolean", "declarator": "quorumLearnerSaslAuthRequired", "var_name": "quorumLearnerSaslAuthRequired"}, {"original_string": "protected String quorumServicePrincipal;", "modifier": "protected", "type": "String", "declarator": "quorumServicePrincipal", "var_name": "quorumServicePrincipal"}, {"original_string": "protected String quorumLearnerLoginContext;", "modifier": "protected", "type": "String", "declarator": "quorumLearnerLoginContext", "var_name": "quorumLearnerLoginContext"}, {"original_string": "protected String quorumServerLoginContext;", "modifier": "protected", "type": "String", "declarator": "quorumServerLoginContext", "var_name": "quorumServerLoginContext"}, {"original_string": "private static final int QUORUM_CNXN_THREADS_SIZE_DEFAULT_VALUE = 20;", "modifier": "private static final", "type": "int", "declarator": "QUORUM_CNXN_THREADS_SIZE_DEFAULT_VALUE = 20", "var_name": "QUORUM_CNXN_THREADS_SIZE_DEFAULT_VALUE"}, {"original_string": "protected int quorumCnxnThreadsSize = QUORUM_CNXN_THREADS_SIZE_DEFAULT_VALUE;", "modifier": "protected", "type": "int", "declarator": "quorumCnxnThreadsSize = QUORUM_CNXN_THREADS_SIZE_DEFAULT_VALUE", "var_name": "quorumCnxnThreadsSize"}, {"original_string": "private ServerState state = ServerState.LOOKING;", "modifier": "private", "type": "ServerState", "declarator": "state = ServerState.LOOKING", "var_name": "state"}, {"original_string": "private boolean reconfigFlag = false;", "modifier": "private", "type": "boolean", "declarator": "reconfigFlag = false", "var_name": "reconfigFlag"}, {"original_string": "DatagramSocket udpSocket;", "modifier": "", "type": "DatagramSocket", "declarator": "udpSocket", "var_name": "udpSocket"}, {"original_string": "private final AtomicReference<AddressTuple> myAddrs = new AtomicReference<>();", "modifier": "private final", "type": "AtomicReference<AddressTuple>", "declarator": "myAddrs = new AtomicReference<>()", "var_name": "myAddrs"}, {"original_string": "private int electionType;", "modifier": "private", "type": "int", "declarator": "electionType", "var_name": "electionType"}, {"original_string": "Election electionAlg;", "modifier": "", "type": "Election", "declarator": "electionAlg", "var_name": "electionAlg"}, {"original_string": "ServerCnxnFactory cnxnFactory;", "modifier": "", "type": "ServerCnxnFactory", "declarator": "cnxnFactory", "var_name": "cnxnFactory"}, {"original_string": "ServerCnxnFactory secureCnxnFactory;", "modifier": "", "type": "ServerCnxnFactory", "declarator": "secureCnxnFactory", "var_name": "secureCnxnFactory"}, {"original_string": "private FileTxnSnapLog logFactory = null;", "modifier": "private", "type": "FileTxnSnapLog", "declarator": "logFactory = null", "var_name": "logFactory"}, {"original_string": "private final QuorumStats quorumStats;", "modifier": "private final", "type": "QuorumStats", "declarator": "quorumStats", "var_name": "quorumStats"}, {"original_string": "AdminServer adminServer;", "modifier": "", "type": "AdminServer", "declarator": "adminServer", "var_name": "adminServer"}, {"original_string": "ResponderThread responder;", "modifier": "", "type": "ResponderThread", "declarator": "responder", "var_name": "responder"}, {"original_string": "public Follower follower;", "modifier": "public", "type": "Follower", "declarator": "follower", "var_name": "follower"}, {"original_string": "public Leader leader;", "modifier": "public", "type": "Leader", "declarator": "leader", "var_name": "leader"}, {"original_string": "public Observer observer;", "modifier": "public", "type": "Observer", "declarator": "observer", "var_name": "observer"}, {"original_string": "boolean shuttingDownLE = false;", "modifier": "", "type": "boolean", "declarator": "shuttingDownLE = false", "var_name": "shuttingDownLE"}, {"original_string": "public static final String SYNC_ENABLED = \"zookeeper.observer.syncEnabled\";", "modifier": "public static final", "type": "String", "declarator": "SYNC_ENABLED = \"zookeeper.observer.syncEnabled\"", "var_name": "SYNC_ENABLED"}, {"original_string": "private long acceptedEpoch = -1;", "modifier": "private", "type": "long", "declarator": "acceptedEpoch = -1", "var_name": "acceptedEpoch"}, {"original_string": "private long currentEpoch = -1;", "modifier": "private", "type": "long", "declarator": "currentEpoch = -1", "var_name": "currentEpoch"}, {"original_string": "public static final String CURRENT_EPOCH_FILENAME = \"currentEpoch\";", "modifier": "public static final", "type": "String", "declarator": "CURRENT_EPOCH_FILENAME = \"currentEpoch\"", "var_name": "CURRENT_EPOCH_FILENAME"}, {"original_string": "public static final String ACCEPTED_EPOCH_FILENAME = \"acceptedEpoch\";", "modifier": "public static final", "type": "String", "declarator": "ACCEPTED_EPOCH_FILENAME = \"acceptedEpoch\"", "var_name": "ACCEPTED_EPOCH_FILENAME"}], "methods": [{"identifier": "getLearnerType", "parameters": "()", "modifiers": "public", "return": "LearnerType", "signature": "LearnerType getLearnerType()", "full_signature": "public LearnerType getLearnerType()", "class_method_signature": "QuorumPeer.getLearnerType()", "testcase": false, "constructor": false}, {"identifier": "setLearnerType", "parameters": "(LearnerType p)", "modifiers": "public", "return": "void", "signature": "void setLearnerType(LearnerType p)", "full_signature": "public void setLearnerType(LearnerType p)", "class_method_signature": "QuorumPeer.setLearnerType(LearnerType p)", "testcase": false, "constructor": false}, {"identifier": "setConfigFileName", "parameters": "(String s)", "modifiers": "protected synchronized", "return": "void", "signature": "void setConfigFileName(String s)", "full_signature": "protected synchronized void setConfigFileName(String s)", "class_method_signature": "QuorumPeer.setConfigFileName(String s)", "testcase": false, "constructor": false}, {"identifier": "getQuorumSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getQuorumSize()", "full_signature": "public int getQuorumSize()", "class_method_signature": "QuorumPeer.getQuorumSize()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getId()", "full_signature": "public long getId()", "class_method_signature": "QuorumPeer.getId()", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(long id)", "modifiers": "", "return": "void", "signature": "void setId(long id)", "full_signature": " void setId(long id)", "class_method_signature": "QuorumPeer.setId(long id)", "testcase": false, "constructor": false}, {"identifier": "isSslQuorum", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSslQuorum()", "full_signature": "public boolean isSslQuorum()", "class_method_signature": "QuorumPeer.isSslQuorum()", "testcase": false, "constructor": false}, {"identifier": "shouldUsePortUnification", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean shouldUsePortUnification()", "full_signature": "public boolean shouldUsePortUnification()", "class_method_signature": "QuorumPeer.shouldUsePortUnification()", "testcase": false, "constructor": false}, {"identifier": "getX509Util", "parameters": "()", "modifiers": "", "return": "QuorumX509Util", "signature": "QuorumX509Util getX509Util()", "full_signature": " QuorumX509Util getX509Util()", "class_method_signature": "QuorumPeer.getX509Util()", "testcase": false, "constructor": false}, {"identifier": "getCurrentVote", "parameters": "()", "modifiers": "public synchronized", "return": "Vote", "signature": "Vote getCurrentVote()", "full_signature": "public synchronized Vote getCurrentVote()", "class_method_signature": "QuorumPeer.getCurrentVote()", "testcase": false, "constructor": false}, {"identifier": "setCurrentVote", "parameters": "(Vote v)", "modifiers": "public synchronized", "return": "void", "signature": "void setCurrentVote(Vote v)", "full_signature": "public synchronized void setCurrentVote(Vote v)", "class_method_signature": "QuorumPeer.setCurrentVote(Vote v)", "testcase": false, "constructor": false}, {"identifier": "setPeerState", "parameters": "(ServerState newState)", "modifiers": "public synchronized", "return": "void", "signature": "void setPeerState(ServerState newState)", "full_signature": "public synchronized void setPeerState(ServerState newState)", "class_method_signature": "QuorumPeer.setPeerState(ServerState newState)", "testcase": false, "constructor": false}, {"identifier": "reconfigFlagSet", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void reconfigFlagSet()", "full_signature": "public synchronized void reconfigFlagSet()", "class_method_signature": "QuorumPeer.reconfigFlagSet()", "testcase": false, "constructor": false}, {"identifier": "reconfigFlagClear", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void reconfigFlagClear()", "full_signature": "public synchronized void reconfigFlagClear()", "class_method_signature": "QuorumPeer.reconfigFlagClear()", "testcase": false, "constructor": false}, {"identifier": "isReconfigStateChange", "parameters": "()", "modifiers": "public synchronized", "return": "boolean", "signature": "boolean isReconfigStateChange()", "full_signature": "public synchronized boolean isReconfigStateChange()", "class_method_signature": "QuorumPeer.isReconfigStateChange()", "testcase": false, "constructor": false}, {"identifier": "getPeerState", "parameters": "()", "modifiers": "public synchronized", "return": "ServerState", "signature": "ServerState getPeerState()", "full_signature": "public synchronized ServerState getPeerState()", "class_method_signature": "QuorumPeer.getPeerState()", "testcase": false, "constructor": false}, {"identifier": "recreateSocketAddresses", "parameters": "(long id)", "modifiers": "public", "return": "void", "signature": "void recreateSocketAddresses(long id)", "full_signature": "public void recreateSocketAddresses(long id)", "class_method_signature": "QuorumPeer.recreateSocketAddresses(long id)", "testcase": false, "constructor": false}, {"identifier": "getAddrs", "parameters": "()", "modifiers": "private", "return": "AddressTuple", "signature": "AddressTuple getAddrs()", "full_signature": "private AddressTuple getAddrs()", "class_method_signature": "QuorumPeer.getAddrs()", "testcase": false, "constructor": false}, {"identifier": "getQuorumAddress", "parameters": "()", "modifiers": "public", "return": "InetSocketAddress", "signature": "InetSocketAddress getQuorumAddress()", "full_signature": "public InetSocketAddress getQuorumAddress()", "class_method_signature": "QuorumPeer.getQuorumAddress()", "testcase": false, "constructor": false}, {"identifier": "getElectionAddress", "parameters": "()", "modifiers": "public", "return": "InetSocketAddress", "signature": "InetSocketAddress getElectionAddress()", "full_signature": "public InetSocketAddress getElectionAddress()", "class_method_signature": "QuorumPeer.getElectionAddress()", "testcase": false, "constructor": false}, {"identifier": "getClientAddress", "parameters": "()", "modifiers": "public", "return": "InetSocketAddress", "signature": "InetSocketAddress getClientAddress()", "full_signature": "public InetSocketAddress getClientAddress()", "class_method_signature": "QuorumPeer.getClientAddress()", "testcase": false, "constructor": false}, {"identifier": "setAddrs", "parameters": "(InetSocketAddress quorumAddr, InetSocketAddress electionAddr, InetSocketAddress clientAddr)", "modifiers": "private", "return": "void", "signature": "void setAddrs(InetSocketAddress quorumAddr, InetSocketAddress electionAddr, InetSocketAddress clientAddr)", "full_signature": "private void setAddrs(InetSocketAddress quorumAddr, InetSocketAddress electionAddr, InetSocketAddress clientAddr)", "class_method_signature": "QuorumPeer.setAddrs(InetSocketAddress quorumAddr, InetSocketAddress electionAddr, InetSocketAddress clientAddr)", "testcase": false, "constructor": false}, {"identifier": "testingQuorumPeer", "parameters": "()", "modifiers": "public static", "return": "QuorumPeer", "signature": "QuorumPeer testingQuorumPeer()", "full_signature": "public static QuorumPeer testingQuorumPeer()", "class_method_signature": "QuorumPeer.testingQuorumPeer()", "testcase": false, "constructor": false}, {"identifier": "QuorumPeer", "parameters": "()", "modifiers": "public", "return": "", "signature": " QuorumPeer()", "full_signature": "public  QuorumPeer()", "class_method_signature": "QuorumPeer.QuorumPeer()", "testcase": false, "constructor": true}, {"identifier": "QuorumPeer", "parameters": "(Map<Long, QuorumServer> quorumPeers, File dataDir,\n            File dataLogDir, int electionType,\n            long myid, int tickTime, int initLimit, int syncLimit,\n            ServerCnxnFactory cnxnFactory)", "modifiers": "public", "return": "", "signature": " QuorumPeer(Map<Long, QuorumServer> quorumPeers, File dataDir,\n            File dataLogDir, int electionType,\n            long myid, int tickTime, int initLimit, int syncLimit,\n            ServerCnxnFactory cnxnFactory)", "full_signature": "public  QuorumPeer(Map<Long, QuorumServer> quorumPeers, File dataDir,\n            File dataLogDir, int electionType,\n            long myid, int tickTime, int initLimit, int syncLimit,\n            ServerCnxnFactory cnxnFactory)", "class_method_signature": "QuorumPeer.QuorumPeer(Map<Long, QuorumServer> quorumPeers, File dataDir,\n            File dataLogDir, int electionType,\n            long myid, int tickTime, int initLimit, int syncLimit,\n            ServerCnxnFactory cnxnFactory)", "testcase": false, "constructor": true}, {"identifier": "QuorumPeer", "parameters": "(Map<Long, QuorumServer> quorumPeers, File dataDir,\n            File dataLogDir, int electionType,\n            long myid, int tickTime, int initLimit, int syncLimit,\n            boolean quorumListenOnAllIPs,\n            ServerCnxnFactory cnxnFactory,\n            QuorumVerifier quorumConfig)", "modifiers": "public", "return": "", "signature": " QuorumPeer(Map<Long, QuorumServer> quorumPeers, File dataDir,\n            File dataLogDir, int electionType,\n            long myid, int tickTime, int initLimit, int syncLimit,\n            boolean quorumListenOnAllIPs,\n            ServerCnxnFactory cnxnFactory,\n            QuorumVerifier quorumConfig)", "full_signature": "public  QuorumPeer(Map<Long, QuorumServer> quorumPeers, File dataDir,\n            File dataLogDir, int electionType,\n            long myid, int tickTime, int initLimit, int syncLimit,\n            boolean quorumListenOnAllIPs,\n            ServerCnxnFactory cnxnFactory,\n            QuorumVerifier quorumConfig)", "class_method_signature": "QuorumPeer.QuorumPeer(Map<Long, QuorumServer> quorumPeers, File dataDir,\n            File dataLogDir, int electionType,\n            long myid, int tickTime, int initLimit, int syncLimit,\n            boolean quorumListenOnAllIPs,\n            ServerCnxnFactory cnxnFactory,\n            QuorumVerifier quorumConfig)", "testcase": false, "constructor": true}, {"identifier": "initialize", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void initialize()", "full_signature": "public void initialize()", "class_method_signature": "QuorumPeer.initialize()", "testcase": false, "constructor": false}, {"identifier": "quorumStats", "parameters": "()", "modifiers": "", "return": "QuorumStats", "signature": "QuorumStats quorumStats()", "full_signature": " QuorumStats quorumStats()", "class_method_signature": "QuorumPeer.quorumStats()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public synchronized", "return": "void", "signature": "void start()", "full_signature": "@Override public synchronized void start()", "class_method_signature": "QuorumPeer.start()", "testcase": false, "constructor": false}, {"identifier": "loadDataBase", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void loadDataBase()", "full_signature": "private void loadDataBase()", "class_method_signature": "QuorumPeer.loadDataBase()", "testcase": false, "constructor": false}, {"identifier": "stopLeaderElection", "parameters": "()", "modifiers": "synchronized public", "return": "void", "signature": "void stopLeaderElection()", "full_signature": "synchronized public void stopLeaderElection()", "class_method_signature": "QuorumPeer.stopLeaderElection()", "testcase": false, "constructor": false}, {"identifier": "startLeaderElection", "parameters": "()", "modifiers": "synchronized public", "return": "void", "signature": "void startLeaderElection()", "full_signature": "synchronized public void startLeaderElection()", "class_method_signature": "QuorumPeer.startLeaderElection()", "testcase": false, "constructor": false}, {"identifier": "countParticipants", "parameters": "(Map<Long,QuorumServer> peers)", "modifiers": "protected static", "return": "int", "signature": "int countParticipants(Map<Long,QuorumServer> peers)", "full_signature": "protected static int countParticipants(Map<Long,QuorumServer> peers)", "class_method_signature": "QuorumPeer.countParticipants(Map<Long,QuorumServer> peers)", "testcase": false, "constructor": false}, {"identifier": "QuorumPeer", "parameters": "(Map<Long,QuorumServer> quorumPeers, File snapDir,\n            File logDir, int clientPort, int electionAlg,\n            long myid, int tickTime, int initLimit, int syncLimit)", "modifiers": "public", "return": "", "signature": " QuorumPeer(Map<Long,QuorumServer> quorumPeers, File snapDir,\n            File logDir, int clientPort, int electionAlg,\n            long myid, int tickTime, int initLimit, int syncLimit)", "full_signature": "public  QuorumPeer(Map<Long,QuorumServer> quorumPeers, File snapDir,\n            File logDir, int clientPort, int electionAlg,\n            long myid, int tickTime, int initLimit, int syncLimit)", "class_method_signature": "QuorumPeer.QuorumPeer(Map<Long,QuorumServer> quorumPeers, File snapDir,\n            File logDir, int clientPort, int electionAlg,\n            long myid, int tickTime, int initLimit, int syncLimit)", "testcase": false, "constructor": true}, {"identifier": "QuorumPeer", "parameters": "(Map<Long,QuorumServer> quorumPeers, File snapDir,\n            File logDir, int clientPort, int electionAlg,\n            long myid, int tickTime, int initLimit, int syncLimit,\n            QuorumVerifier quorumConfig)", "modifiers": "public", "return": "", "signature": " QuorumPeer(Map<Long,QuorumServer> quorumPeers, File snapDir,\n            File logDir, int clientPort, int electionAlg,\n            long myid, int tickTime, int initLimit, int syncLimit,\n            QuorumVerifier quorumConfig)", "full_signature": "public  QuorumPeer(Map<Long,QuorumServer> quorumPeers, File snapDir,\n            File logDir, int clientPort, int electionAlg,\n            long myid, int tickTime, int initLimit, int syncLimit,\n            QuorumVerifier quorumConfig)", "class_method_signature": "QuorumPeer.QuorumPeer(Map<Long,QuorumServer> quorumPeers, File snapDir,\n            File logDir, int clientPort, int electionAlg,\n            long myid, int tickTime, int initLimit, int syncLimit,\n            QuorumVerifier quorumConfig)", "testcase": false, "constructor": true}, {"identifier": "getClientAddress", "parameters": "(Map<Long, QuorumServer> quorumPeers, long myid, int clientPort)", "modifiers": "private static", "return": "InetSocketAddress", "signature": "InetSocketAddress getClientAddress(Map<Long, QuorumServer> quorumPeers, long myid, int clientPort)", "full_signature": "private static InetSocketAddress getClientAddress(Map<Long, QuorumServer> quorumPeers, long myid, int clientPort)", "class_method_signature": "QuorumPeer.getClientAddress(Map<Long, QuorumServer> quorumPeers, long myid, int clientPort)", "testcase": false, "constructor": false}, {"identifier": "getLastLoggedZxid", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLastLoggedZxid()", "full_signature": "public long getLastLoggedZxid()", "class_method_signature": "QuorumPeer.getLastLoggedZxid()", "testcase": false, "constructor": false}, {"identifier": "makeFollower", "parameters": "(FileTxnSnapLog logFactory)", "modifiers": "protected", "return": "Follower", "signature": "Follower makeFollower(FileTxnSnapLog logFactory)", "full_signature": "protected Follower makeFollower(FileTxnSnapLog logFactory)", "class_method_signature": "QuorumPeer.makeFollower(FileTxnSnapLog logFactory)", "testcase": false, "constructor": false}, {"identifier": "makeLeader", "parameters": "(FileTxnSnapLog logFactory)", "modifiers": "protected", "return": "Leader", "signature": "Leader makeLeader(FileTxnSnapLog logFactory)", "full_signature": "protected Leader makeLeader(FileTxnSnapLog logFactory)", "class_method_signature": "QuorumPeer.makeLeader(FileTxnSnapLog logFactory)", "testcase": false, "constructor": false}, {"identifier": "makeObserver", "parameters": "(FileTxnSnapLog logFactory)", "modifiers": "protected", "return": "Observer", "signature": "Observer makeObserver(FileTxnSnapLog logFactory)", "full_signature": "protected Observer makeObserver(FileTxnSnapLog logFactory)", "class_method_signature": "QuorumPeer.makeObserver(FileTxnSnapLog logFactory)", "testcase": false, "constructor": false}, {"identifier": "createElectionAlgorithm", "parameters": "(int electionAlgorithm)", "modifiers": "@SuppressWarnings(\"deprecation\") protected", "return": "Election", "signature": "Election createElectionAlgorithm(int electionAlgorithm)", "full_signature": "@SuppressWarnings(\"deprecation\") protected Election createElectionAlgorithm(int electionAlgorithm)", "class_method_signature": "QuorumPeer.createElectionAlgorithm(int electionAlgorithm)", "testcase": false, "constructor": false}, {"identifier": "makeLEStrategy", "parameters": "()", "modifiers": "@SuppressWarnings(\"deprecation\") protected", "return": "Election", "signature": "Election makeLEStrategy()", "full_signature": "@SuppressWarnings(\"deprecation\") protected Election makeLEStrategy()", "class_method_signature": "QuorumPeer.makeLEStrategy()", "testcase": false, "constructor": false}, {"identifier": "setLeader", "parameters": "(Leader newLeader)", "modifiers": "synchronized protected", "return": "void", "signature": "void setLeader(Leader newLeader)", "full_signature": "synchronized protected void setLeader(Leader newLeader)", "class_method_signature": "QuorumPeer.setLeader(Leader newLeader)", "testcase": false, "constructor": false}, {"identifier": "setFollower", "parameters": "(Follower newFollower)", "modifiers": "synchronized protected", "return": "void", "signature": "void setFollower(Follower newFollower)", "full_signature": "synchronized protected void setFollower(Follower newFollower)", "class_method_signature": "QuorumPeer.setFollower(Follower newFollower)", "testcase": false, "constructor": false}, {"identifier": "setObserver", "parameters": "(Observer newObserver)", "modifiers": "synchronized protected", "return": "void", "signature": "void setObserver(Observer newObserver)", "full_signature": "synchronized protected void setObserver(Observer newObserver)", "class_method_signature": "QuorumPeer.setObserver(Observer newObserver)", "testcase": false, "constructor": false}, {"identifier": "getActiveServer", "parameters": "()", "modifiers": "synchronized public", "return": "ZooKeeperServer", "signature": "ZooKeeperServer getActiveServer()", "full_signature": "synchronized public ZooKeeperServer getActiveServer()", "class_method_signature": "QuorumPeer.getActiveServer()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "QuorumPeer.run()", "testcase": false, "constructor": false}, {"identifier": "updateServerState", "parameters": "()", "modifiers": "private synchronized", "return": "void", "signature": "void updateServerState()", "full_signature": "private synchronized void updateServerState()", "class_method_signature": "QuorumPeer.updateServerState()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void shutdown()", "full_signature": "public void shutdown()", "class_method_signature": "QuorumPeer.shutdown()", "testcase": false, "constructor": false}, {"identifier": "getView", "parameters": "()", "modifiers": "public", "return": "Map<Long,QuorumPeer.QuorumServer>", "signature": "Map<Long,QuorumPeer.QuorumServer> getView()", "full_signature": "public Map<Long,QuorumPeer.QuorumServer> getView()", "class_method_signature": "QuorumPeer.getView()", "testcase": false, "constructor": false}, {"identifier": "getVotingView", "parameters": "()", "modifiers": "public", "return": "Map<Long,QuorumPeer.QuorumServer>", "signature": "Map<Long,QuorumPeer.QuorumServer> getVotingView()", "full_signature": "public Map<Long,QuorumPeer.QuorumServer> getVotingView()", "class_method_signature": "QuorumPeer.getVotingView()", "testcase": false, "constructor": false}, {"identifier": "getObservingView", "parameters": "()", "modifiers": "public", "return": "Map<Long,QuorumPeer.QuorumServer>", "signature": "Map<Long,QuorumPeer.QuorumServer> getObservingView()", "full_signature": "public Map<Long,QuorumPeer.QuorumServer> getObservingView()", "class_method_signature": "QuorumPeer.getObservingView()", "testcase": false, "constructor": false}, {"identifier": "getCurrentAndNextConfigVoters", "parameters": "()", "modifiers": "public synchronized", "return": "Set<Long>", "signature": "Set<Long> getCurrentAndNextConfigVoters()", "full_signature": "public synchronized Set<Long> getCurrentAndNextConfigVoters()", "class_method_signature": "QuorumPeer.getCurrentAndNextConfigVoters()", "testcase": false, "constructor": false}, {"identifier": "viewContains", "parameters": "(Long sid)", "modifiers": "public", "return": "boolean", "signature": "boolean viewContains(Long sid)", "full_signature": "public boolean viewContains(Long sid)", "class_method_signature": "QuorumPeer.viewContains(Long sid)", "testcase": false, "constructor": false}, {"identifier": "getQuorumPeers", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getQuorumPeers()", "full_signature": "public String[] getQuorumPeers()", "class_method_signature": "QuorumPeer.getQuorumPeers()", "testcase": false, "constructor": false}, {"identifier": "getServerState", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getServerState()", "full_signature": "public String getServerState()", "class_method_signature": "QuorumPeer.getServerState()", "testcase": false, "constructor": false}, {"identifier": "setMyid", "parameters": "(long myid)", "modifiers": "public", "return": "void", "signature": "void setMyid(long myid)", "full_signature": "public void setMyid(long myid)", "class_method_signature": "QuorumPeer.setMyid(long myid)", "testcase": false, "constructor": false}, {"identifier": "getTickTime", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTickTime()", "full_signature": "public int getTickTime()", "class_method_signature": "QuorumPeer.getTickTime()", "testcase": false, "constructor": false}, {"identifier": "setTickTime", "parameters": "(int tickTime)", "modifiers": "public", "return": "void", "signature": "void setTickTime(int tickTime)", "full_signature": "public void setTickTime(int tickTime)", "class_method_signature": "QuorumPeer.setTickTime(int tickTime)", "testcase": false, "constructor": false}, {"identifier": "getMaxClientCnxnsPerHost", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxClientCnxnsPerHost()", "full_signature": "public int getMaxClientCnxnsPerHost()", "class_method_signature": "QuorumPeer.getMaxClientCnxnsPerHost()", "testcase": false, "constructor": false}, {"identifier": "areLocalSessionsEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean areLocalSessionsEnabled()", "full_signature": "public boolean areLocalSessionsEnabled()", "class_method_signature": "QuorumPeer.areLocalSessionsEnabled()", "testcase": false, "constructor": false}, {"identifier": "enableLocalSessions", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void enableLocalSessions(boolean flag)", "full_signature": "public void enableLocalSessions(boolean flag)", "class_method_signature": "QuorumPeer.enableLocalSessions(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "isLocalSessionsUpgradingEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isLocalSessionsUpgradingEnabled()", "full_signature": "public boolean isLocalSessionsUpgradingEnabled()", "class_method_signature": "QuorumPeer.isLocalSessionsUpgradingEnabled()", "testcase": false, "constructor": false}, {"identifier": "enableLocalSessionsUpgrading", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void enableLocalSessionsUpgrading(boolean flag)", "full_signature": "public void enableLocalSessionsUpgrading(boolean flag)", "class_method_signature": "QuorumPeer.enableLocalSessionsUpgrading(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "getMinSessionTimeout", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMinSessionTimeout()", "full_signature": "public int getMinSessionTimeout()", "class_method_signature": "QuorumPeer.getMinSessionTimeout()", "testcase": false, "constructor": false}, {"identifier": "setMinSessionTimeout", "parameters": "(int min)", "modifiers": "public", "return": "void", "signature": "void setMinSessionTimeout(int min)", "full_signature": "public void setMinSessionTimeout(int min)", "class_method_signature": "QuorumPeer.setMinSessionTimeout(int min)", "testcase": false, "constructor": false}, {"identifier": "getMaxSessionTimeout", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxSessionTimeout()", "full_signature": "public int getMaxSessionTimeout()", "class_method_signature": "QuorumPeer.getMaxSessionTimeout()", "testcase": false, "constructor": false}, {"identifier": "setMaxSessionTimeout", "parameters": "(int max)", "modifiers": "public", "return": "void", "signature": "void setMaxSessionTimeout(int max)", "full_signature": "public void setMaxSessionTimeout(int max)", "class_method_signature": "QuorumPeer.setMaxSessionTimeout(int max)", "testcase": false, "constructor": false}, {"identifier": "getInitLimit", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getInitLimit()", "full_signature": "public int getInitLimit()", "class_method_signature": "QuorumPeer.getInitLimit()", "testcase": false, "constructor": false}, {"identifier": "setInitLimit", "parameters": "(int initLimit)", "modifiers": "public", "return": "void", "signature": "void setInitLimit(int initLimit)", "full_signature": "public void setInitLimit(int initLimit)", "class_method_signature": "QuorumPeer.setInitLimit(int initLimit)", "testcase": false, "constructor": false}, {"identifier": "getTick", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTick()", "full_signature": "public int getTick()", "class_method_signature": "QuorumPeer.getTick()", "testcase": false, "constructor": false}, {"identifier": "configFromString", "parameters": "(String s)", "modifiers": "public", "return": "QuorumVerifier", "signature": "QuorumVerifier configFromString(String s)", "full_signature": "public QuorumVerifier configFromString(String s)", "class_method_signature": "QuorumPeer.configFromString(String s)", "testcase": false, "constructor": false}, {"identifier": "getQuorumVerifier", "parameters": "()", "modifiers": "public", "return": "QuorumVerifier", "signature": "QuorumVerifier getQuorumVerifier()", "full_signature": "public QuorumVerifier getQuorumVerifier()", "class_method_signature": "QuorumPeer.getQuorumVerifier()", "testcase": false, "constructor": false}, {"identifier": "getLastSeenQuorumVerifier", "parameters": "()", "modifiers": "public", "return": "QuorumVerifier", "signature": "QuorumVerifier getLastSeenQuorumVerifier()", "full_signature": "public QuorumVerifier getLastSeenQuorumVerifier()", "class_method_signature": "QuorumPeer.getLastSeenQuorumVerifier()", "testcase": false, "constructor": false}, {"identifier": "restartLeaderElection", "parameters": "(QuorumVerifier qvOLD, QuorumVerifier qvNEW)", "modifiers": "public synchronized", "return": "void", "signature": "void restartLeaderElection(QuorumVerifier qvOLD, QuorumVerifier qvNEW)", "full_signature": "public synchronized void restartLeaderElection(QuorumVerifier qvOLD, QuorumVerifier qvNEW)", "class_method_signature": "QuorumPeer.restartLeaderElection(QuorumVerifier qvOLD, QuorumVerifier qvNEW)", "testcase": false, "constructor": false}, {"identifier": "getNextDynamicConfigFilename", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getNextDynamicConfigFilename()", "full_signature": "public String getNextDynamicConfigFilename()", "class_method_signature": "QuorumPeer.getNextDynamicConfigFilename()", "testcase": false, "constructor": false}, {"identifier": "connectNewPeers", "parameters": "(QuorumCnxManager qcm)", "modifiers": "private", "return": "void", "signature": "void connectNewPeers(QuorumCnxManager qcm)", "full_signature": "private void connectNewPeers(QuorumCnxManager qcm)", "class_method_signature": "QuorumPeer.connectNewPeers(QuorumCnxManager qcm)", "testcase": false, "constructor": false}, {"identifier": "setLastSeenQuorumVerifier", "parameters": "(QuorumVerifier qv, boolean writeToDisk)", "modifiers": "public", "return": "void", "signature": "void setLastSeenQuorumVerifier(QuorumVerifier qv, boolean writeToDisk)", "full_signature": "public void setLastSeenQuorumVerifier(QuorumVerifier qv, boolean writeToDisk)", "class_method_signature": "QuorumPeer.setLastSeenQuorumVerifier(QuorumVerifier qv, boolean writeToDisk)", "testcase": false, "constructor": false}, {"identifier": "setQuorumVerifier", "parameters": "(QuorumVerifier qv, boolean writeToDisk)", "modifiers": "public", "return": "QuorumVerifier", "signature": "QuorumVerifier setQuorumVerifier(QuorumVerifier qv, boolean writeToDisk)", "full_signature": "public QuorumVerifier setQuorumVerifier(QuorumVerifier qv, boolean writeToDisk)", "class_method_signature": "QuorumPeer.setQuorumVerifier(QuorumVerifier qv, boolean writeToDisk)", "testcase": false, "constructor": false}, {"identifier": "makeDynamicConfigFilename", "parameters": "(long version)", "modifiers": "private", "return": "String", "signature": "String makeDynamicConfigFilename(long version)", "full_signature": "private String makeDynamicConfigFilename(long version)", "class_method_signature": "QuorumPeer.makeDynamicConfigFilename(long version)", "testcase": false, "constructor": false}, {"identifier": "needEraseClientInfoFromStaticConfig", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean needEraseClientInfoFromStaticConfig()", "full_signature": "private boolean needEraseClientInfoFromStaticConfig()", "class_method_signature": "QuorumPeer.needEraseClientInfoFromStaticConfig()", "testcase": false, "constructor": false}, {"identifier": "getElectionAlg", "parameters": "()", "modifiers": "public", "return": "Election", "signature": "Election getElectionAlg()", "full_signature": "public Election getElectionAlg()", "class_method_signature": "QuorumPeer.getElectionAlg()", "testcase": false, "constructor": false}, {"identifier": "getSyncLimit", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSyncLimit()", "full_signature": "public int getSyncLimit()", "class_method_signature": "QuorumPeer.getSyncLimit()", "testcase": false, "constructor": false}, {"identifier": "setSyncLimit", "parameters": "(int syncLimit)", "modifiers": "public", "return": "void", "signature": "void setSyncLimit(int syncLimit)", "full_signature": "public void setSyncLimit(int syncLimit)", "class_method_signature": "QuorumPeer.setSyncLimit(int syncLimit)", "testcase": false, "constructor": false}, {"identifier": "getSyncEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getSyncEnabled()", "full_signature": "public boolean getSyncEnabled()", "class_method_signature": "QuorumPeer.getSyncEnabled()", "testcase": false, "constructor": false}, {"identifier": "setSyncEnabled", "parameters": "(boolean syncEnabled)", "modifiers": "public", "return": "void", "signature": "void setSyncEnabled(boolean syncEnabled)", "full_signature": "public void setSyncEnabled(boolean syncEnabled)", "class_method_signature": "QuorumPeer.setSyncEnabled(boolean syncEnabled)", "testcase": false, "constructor": false}, {"identifier": "getElectionType", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getElectionType()", "full_signature": "public int getElectionType()", "class_method_signature": "QuorumPeer.getElectionType()", "testcase": false, "constructor": false}, {"identifier": "setElectionType", "parameters": "(int electionType)", "modifiers": "public", "return": "void", "signature": "void setElectionType(int electionType)", "full_signature": "public void setElectionType(int electionType)", "class_method_signature": "QuorumPeer.setElectionType(int electionType)", "testcase": false, "constructor": false}, {"identifier": "getQuorumListenOnAllIPs", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getQuorumListenOnAllIPs()", "full_signature": "public boolean getQuorumListenOnAllIPs()", "class_method_signature": "QuorumPeer.getQuorumListenOnAllIPs()", "testcase": false, "constructor": false}, {"identifier": "setQuorumListenOnAllIPs", "parameters": "(boolean quorumListenOnAllIPs)", "modifiers": "public", "return": "void", "signature": "void setQuorumListenOnAllIPs(boolean quorumListenOnAllIPs)", "full_signature": "public void setQuorumListenOnAllIPs(boolean quorumListenOnAllIPs)", "class_method_signature": "QuorumPeer.setQuorumListenOnAllIPs(boolean quorumListenOnAllIPs)", "testcase": false, "constructor": false}, {"identifier": "setCnxnFactory", "parameters": "(ServerCnxnFactory cnxnFactory)", "modifiers": "public", "return": "void", "signature": "void setCnxnFactory(ServerCnxnFactory cnxnFactory)", "full_signature": "public void setCnxnFactory(ServerCnxnFactory cnxnFactory)", "class_method_signature": "QuorumPeer.setCnxnFactory(ServerCnxnFactory cnxnFactory)", "testcase": false, "constructor": false}, {"identifier": "setSecureCnxnFactory", "parameters": "(ServerCnxnFactory secureCnxnFactory)", "modifiers": "public", "return": "void", "signature": "void setSecureCnxnFactory(ServerCnxnFactory secureCnxnFactory)", "full_signature": "public void setSecureCnxnFactory(ServerCnxnFactory secureCnxnFactory)", "class_method_signature": "QuorumPeer.setSecureCnxnFactory(ServerCnxnFactory secureCnxnFactory)", "testcase": false, "constructor": false}, {"identifier": "setSslQuorum", "parameters": "(boolean sslQuorum)", "modifiers": "public", "return": "void", "signature": "void setSslQuorum(boolean sslQuorum)", "full_signature": "public void setSslQuorum(boolean sslQuorum)", "class_method_signature": "QuorumPeer.setSslQuorum(boolean sslQuorum)", "testcase": false, "constructor": false}, {"identifier": "setUsePortUnification", "parameters": "(boolean shouldUsePortUnification)", "modifiers": "public", "return": "void", "signature": "void setUsePortUnification(boolean shouldUsePortUnification)", "full_signature": "public void setUsePortUnification(boolean shouldUsePortUnification)", "class_method_signature": "QuorumPeer.setUsePortUnification(boolean shouldUsePortUnification)", "testcase": false, "constructor": false}, {"identifier": "startServerCnxnFactory", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void startServerCnxnFactory()", "full_signature": "private void startServerCnxnFactory()", "class_method_signature": "QuorumPeer.startServerCnxnFactory()", "testcase": false, "constructor": false}, {"identifier": "shutdownServerCnxnFactory", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void shutdownServerCnxnFactory()", "full_signature": "private void shutdownServerCnxnFactory()", "class_method_signature": "QuorumPeer.shutdownServerCnxnFactory()", "testcase": false, "constructor": false}, {"identifier": "setZooKeeperServer", "parameters": "(ZooKeeperServer zks)", "modifiers": "public", "return": "void", "signature": "void setZooKeeperServer(ZooKeeperServer zks)", "full_signature": "public void setZooKeeperServer(ZooKeeperServer zks)", "class_method_signature": "QuorumPeer.setZooKeeperServer(ZooKeeperServer zks)", "testcase": false, "constructor": false}, {"identifier": "closeAllConnections", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void closeAllConnections()", "full_signature": "public void closeAllConnections()", "class_method_signature": "QuorumPeer.closeAllConnections()", "testcase": false, "constructor": false}, {"identifier": "getClientPort", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getClientPort()", "full_signature": "public int getClientPort()", "class_method_signature": "QuorumPeer.getClientPort()", "testcase": false, "constructor": false}, {"identifier": "setTxnFactory", "parameters": "(FileTxnSnapLog factory)", "modifiers": "public", "return": "void", "signature": "void setTxnFactory(FileTxnSnapLog factory)", "full_signature": "public void setTxnFactory(FileTxnSnapLog factory)", "class_method_signature": "QuorumPeer.setTxnFactory(FileTxnSnapLog factory)", "testcase": false, "constructor": false}, {"identifier": "getTxnFactory", "parameters": "()", "modifiers": "public", "return": "FileTxnSnapLog", "signature": "FileTxnSnapLog getTxnFactory()", "full_signature": "public FileTxnSnapLog getTxnFactory()", "class_method_signature": "QuorumPeer.getTxnFactory()", "testcase": false, "constructor": false}, {"identifier": "setZKDatabase", "parameters": "(ZKDatabase database)", "modifiers": "public", "return": "void", "signature": "void setZKDatabase(ZKDatabase database)", "full_signature": "public void setZKDatabase(ZKDatabase database)", "class_method_signature": "QuorumPeer.setZKDatabase(ZKDatabase database)", "testcase": false, "constructor": false}, {"identifier": "getZkDb", "parameters": "()", "modifiers": "protected", "return": "ZKDatabase", "signature": "ZKDatabase getZkDb()", "full_signature": "protected ZKDatabase getZkDb()", "class_method_signature": "QuorumPeer.getZkDb()", "testcase": false, "constructor": false}, {"identifier": "initConfigInZKDatabase", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void initConfigInZKDatabase()", "full_signature": "public synchronized void initConfigInZKDatabase()", "class_method_signature": "QuorumPeer.initConfigInZKDatabase()", "testcase": false, "constructor": false}, {"identifier": "isRunning", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRunning()", "full_signature": "public boolean isRunning()", "class_method_signature": "QuorumPeer.isRunning()", "testcase": false, "constructor": false}, {"identifier": "getQuorumCnxManager", "parameters": "()", "modifiers": "public", "return": "QuorumCnxManager", "signature": "QuorumCnxManager getQuorumCnxManager()", "full_signature": "public QuorumCnxManager getQuorumCnxManager()", "class_method_signature": "QuorumPeer.getQuorumCnxManager()", "testcase": false, "constructor": false}, {"identifier": "readLongFromFile", "parameters": "(String name)", "modifiers": "private", "return": "long", "signature": "long readLongFromFile(String name)", "full_signature": "private long readLongFromFile(String name)", "class_method_signature": "QuorumPeer.readLongFromFile(String name)", "testcase": false, "constructor": false}, {"identifier": "writeLongToFile", "parameters": "(String name, final long value)", "modifiers": "private", "return": "void", "signature": "void writeLongToFile(String name, final long value)", "full_signature": "private void writeLongToFile(String name, final long value)", "class_method_signature": "QuorumPeer.writeLongToFile(String name, final long value)", "testcase": false, "constructor": false}, {"identifier": "getCurrentEpoch", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getCurrentEpoch()", "full_signature": "public long getCurrentEpoch()", "class_method_signature": "QuorumPeer.getCurrentEpoch()", "testcase": false, "constructor": false}, {"identifier": "getAcceptedEpoch", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getAcceptedEpoch()", "full_signature": "public long getAcceptedEpoch()", "class_method_signature": "QuorumPeer.getAcceptedEpoch()", "testcase": false, "constructor": false}, {"identifier": "setCurrentEpoch", "parameters": "(long e)", "modifiers": "public", "return": "void", "signature": "void setCurrentEpoch(long e)", "full_signature": "public void setCurrentEpoch(long e)", "class_method_signature": "QuorumPeer.setCurrentEpoch(long e)", "testcase": false, "constructor": false}, {"identifier": "setAcceptedEpoch", "parameters": "(long e)", "modifiers": "public", "return": "void", "signature": "void setAcceptedEpoch(long e)", "full_signature": "public void setAcceptedEpoch(long e)", "class_method_signature": "QuorumPeer.setAcceptedEpoch(long e)", "testcase": false, "constructor": false}, {"identifier": "processReconfig", "parameters": "(QuorumVerifier qv, Long suggestedLeaderId, Long zxid, boolean restartLE)", "modifiers": "public", "return": "boolean", "signature": "boolean processReconfig(QuorumVerifier qv, Long suggestedLeaderId, Long zxid, boolean restartLE)", "full_signature": "public boolean processReconfig(QuorumVerifier qv, Long suggestedLeaderId, Long zxid, boolean restartLE)", "class_method_signature": "QuorumPeer.processReconfig(QuorumVerifier qv, Long suggestedLeaderId, Long zxid, boolean restartLE)", "testcase": false, "constructor": false}, {"identifier": "updateRemotePeerMXBeans", "parameters": "(Map<Long, QuorumServer> newMembers)", "modifiers": "private", "return": "void", "signature": "void updateRemotePeerMXBeans(Map<Long, QuorumServer> newMembers)", "full_signature": "private void updateRemotePeerMXBeans(Map<Long, QuorumServer> newMembers)", "class_method_signature": "QuorumPeer.updateRemotePeerMXBeans(Map<Long, QuorumServer> newMembers)", "testcase": false, "constructor": false}, {"identifier": "updateLearnerType", "parameters": "(QuorumVerifier newQV)", "modifiers": "private", "return": "boolean", "signature": "boolean updateLearnerType(QuorumVerifier newQV)", "full_signature": "private boolean updateLearnerType(QuorumVerifier newQV)", "class_method_signature": "QuorumPeer.updateLearnerType(QuorumVerifier newQV)", "testcase": false, "constructor": false}, {"identifier": "updateVote", "parameters": "(long designatedLeader, long zxid)", "modifiers": "private", "return": "boolean", "signature": "boolean updateVote(long designatedLeader, long zxid)", "full_signature": "private boolean updateVote(long designatedLeader, long zxid)", "class_method_signature": "QuorumPeer.updateVote(long designatedLeader, long zxid)", "testcase": false, "constructor": false}, {"identifier": "updateElectionVote", "parameters": "(long newEpoch)", "modifiers": "protected", "return": "void", "signature": "void updateElectionVote(long newEpoch)", "full_signature": "protected void updateElectionVote(long newEpoch)", "class_method_signature": "QuorumPeer.updateElectionVote(long newEpoch)", "testcase": false, "constructor": false}, {"identifier": "updateThreadName", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updateThreadName()", "full_signature": "private void updateThreadName()", "class_method_signature": "QuorumPeer.updateThreadName()", "testcase": false, "constructor": false}, {"identifier": "setElectionTimeTaken", "parameters": "(long electionTimeTaken)", "modifiers": "", "return": "void", "signature": "void setElectionTimeTaken(long electionTimeTaken)", "full_signature": " void setElectionTimeTaken(long electionTimeTaken)", "class_method_signature": "QuorumPeer.setElectionTimeTaken(long electionTimeTaken)", "testcase": false, "constructor": false}, {"identifier": "getElectionTimeTaken", "parameters": "()", "modifiers": "", "return": "long", "signature": "long getElectionTimeTaken()", "full_signature": " long getElectionTimeTaken()", "class_method_signature": "QuorumPeer.getElectionTimeTaken()", "testcase": false, "constructor": false}, {"identifier": "setQuorumServerSaslRequired", "parameters": "(boolean serverSaslRequired)", "modifiers": "", "return": "void", "signature": "void setQuorumServerSaslRequired(boolean serverSaslRequired)", "full_signature": " void setQuorumServerSaslRequired(boolean serverSaslRequired)", "class_method_signature": "QuorumPeer.setQuorumServerSaslRequired(boolean serverSaslRequired)", "testcase": false, "constructor": false}, {"identifier": "setQuorumLearnerSaslRequired", "parameters": "(boolean learnerSaslRequired)", "modifiers": "", "return": "void", "signature": "void setQuorumLearnerSaslRequired(boolean learnerSaslRequired)", "full_signature": " void setQuorumLearnerSaslRequired(boolean learnerSaslRequired)", "class_method_signature": "QuorumPeer.setQuorumLearnerSaslRequired(boolean learnerSaslRequired)", "testcase": false, "constructor": false}, {"identifier": "setQuorumSaslEnabled", "parameters": "(boolean enableAuth)", "modifiers": "", "return": "void", "signature": "void setQuorumSaslEnabled(boolean enableAuth)", "full_signature": " void setQuorumSaslEnabled(boolean enableAuth)", "class_method_signature": "QuorumPeer.setQuorumSaslEnabled(boolean enableAuth)", "testcase": false, "constructor": false}, {"identifier": "setQuorumServicePrincipal", "parameters": "(String servicePrincipal)", "modifiers": "", "return": "void", "signature": "void setQuorumServicePrincipal(String servicePrincipal)", "full_signature": " void setQuorumServicePrincipal(String servicePrincipal)", "class_method_signature": "QuorumPeer.setQuorumServicePrincipal(String servicePrincipal)", "testcase": false, "constructor": false}, {"identifier": "setQuorumLearnerLoginContext", "parameters": "(String learnerContext)", "modifiers": "", "return": "void", "signature": "void setQuorumLearnerLoginContext(String learnerContext)", "full_signature": " void setQuorumLearnerLoginContext(String learnerContext)", "class_method_signature": "QuorumPeer.setQuorumLearnerLoginContext(String learnerContext)", "testcase": false, "constructor": false}, {"identifier": "setQuorumServerLoginContext", "parameters": "(String serverContext)", "modifiers": "", "return": "void", "signature": "void setQuorumServerLoginContext(String serverContext)", "full_signature": " void setQuorumServerLoginContext(String serverContext)", "class_method_signature": "QuorumPeer.setQuorumServerLoginContext(String serverContext)", "testcase": false, "constructor": false}, {"identifier": "setQuorumCnxnThreadsSize", "parameters": "(int qCnxnThreadsSize)", "modifiers": "", "return": "void", "signature": "void setQuorumCnxnThreadsSize(int qCnxnThreadsSize)", "full_signature": " void setQuorumCnxnThreadsSize(int qCnxnThreadsSize)", "class_method_signature": "QuorumPeer.setQuorumCnxnThreadsSize(int qCnxnThreadsSize)", "testcase": false, "constructor": false}, {"identifier": "isQuorumSaslAuthEnabled", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isQuorumSaslAuthEnabled()", "full_signature": " boolean isQuorumSaslAuthEnabled()", "class_method_signature": "QuorumPeer.isQuorumSaslAuthEnabled()", "testcase": false, "constructor": false}, {"identifier": "isQuorumServerSaslAuthRequired", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isQuorumServerSaslAuthRequired()", "full_signature": "private boolean isQuorumServerSaslAuthRequired()", "class_method_signature": "QuorumPeer.isQuorumServerSaslAuthRequired()", "testcase": false, "constructor": false}, {"identifier": "isQuorumLearnerSaslAuthRequired", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isQuorumLearnerSaslAuthRequired()", "full_signature": "private boolean isQuorumLearnerSaslAuthRequired()", "class_method_signature": "QuorumPeer.isQuorumLearnerSaslAuthRequired()", "testcase": false, "constructor": false}, {"identifier": "createCnxnManager", "parameters": "()", "modifiers": "public", "return": "QuorumCnxManager", "signature": "QuorumCnxManager createCnxnManager()", "full_signature": "public QuorumCnxManager createCnxnManager()", "class_method_signature": "QuorumPeer.createCnxnManager()", "testcase": false, "constructor": false}, {"identifier": "isLeader", "parameters": "(long id)", "modifiers": "", "return": "boolean", "signature": "boolean isLeader(long id)", "full_signature": " boolean isLeader(long id)", "class_method_signature": "QuorumPeer.isLeader(long id)", "testcase": false, "constructor": false}], "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java"}, "focal_method": {"identifier": "shutdown", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void shutdown() {\n        running = false;\n        x509Util.close();\n        if (leader != null) {\n            leader.shutdown(\"quorum Peer shutdown\");\n        }\n        if (follower != null) {\n            follower.shutdown();\n        }\n        shutdownServerCnxnFactory();\n        if(udpSocket != null) {\n            udpSocket.close();\n        }\n\n        try {\n            adminServer.shutdown();\n        } catch (AdminServerException e) {\n            LOG.warn(\"Problem stopping AdminServer\", e);\n        }\n\n        if(getElectionAlg() != null){\n            this.interrupt();\n            getElectionAlg().shutdown();\n        }\n        try {\n            zkDb.close();\n        } catch (IOException ie) {\n            LOG.warn(\"Error closing logs \", ie);\n        }\n    }", "signature": "void shutdown()", "full_signature": "public void shutdown()", "class_method_signature": "QuorumPeer.shutdown()", "testcase": false, "constructor": false, "invocations": ["close", "shutdown", "shutdown", "shutdownServerCnxnFactory", "close", "shutdown", "warn", "getElectionAlg", "interrupt", "shutdown", "getElectionAlg", "close", "warn"]}, "repository": {"repo_id": 230430206, "url": "https://github.com/boomblog/zookeeper-vip2", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 10, "size": 3105, "license": "licensed"}}