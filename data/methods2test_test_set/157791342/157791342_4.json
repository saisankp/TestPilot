{"test_class": {"identifier": "MailServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate MailService mailService;", "modifier": "@Autowired\n\tprivate", "type": "MailService", "declarator": "mailService", "var_name": "mailService"}], "file": "spring-boot-2.x_mail/src/test/java/cn/lijunkui/mail/MailServiceTest.java"}, "test_case": {"identifier": "sendSimpleMail", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void sendSimpleMail() {\n\t\tmailService.sendSimpleMail(\"******@qq.com\", \"\u8fd9\u662f\u4e00\u4e2a\u6d4b\u8bd5\u90ae\u4ef6\", \"\u8fd9\u662f\u4e00\u4e2a\u6d4b\u8bd5\u90ae\u4ef6\");\n\t}", "signature": "void sendSimpleMail()", "full_signature": "@Test public void sendSimpleMail()", "class_method_signature": "MailServiceTest.sendSimpleMail()", "testcase": true, "constructor": false, "invocations": ["sendSimpleMail"]}, "focal_class": {"identifier": "MailService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(this.getClass());", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(this.getClass())", "var_name": "logger"}, {"original_string": "@Autowired\n\tprivate JavaMailSender sender;", "modifier": "@Autowired\n\tprivate", "type": "JavaMailSender", "declarator": "sender", "var_name": "sender"}, {"original_string": "@Value(\"${spring.mail.username}\")\n\tprivate String formMail;", "modifier": "@Value(\"${spring.mail.username}\")\n\tprivate", "type": "String", "declarator": "formMail", "var_name": "formMail"}], "methods": [{"identifier": "sendSimpleMail", "parameters": "(String toMail,String subject,String content)", "modifiers": "public", "return": "void", "signature": "void sendSimpleMail(String toMail,String subject,String content)", "full_signature": "public void sendSimpleMail(String toMail,String subject,String content)", "class_method_signature": "MailService.sendSimpleMail(String toMail,String subject,String content)", "testcase": false, "constructor": false}, {"identifier": "sendHtmlMail", "parameters": "(String toMail,String subject,String content)", "modifiers": "public", "return": "void", "signature": "void sendHtmlMail(String toMail,String subject,String content)", "full_signature": "public void sendHtmlMail(String toMail,String subject,String content)", "class_method_signature": "MailService.sendHtmlMail(String toMail,String subject,String content)", "testcase": false, "constructor": false}, {"identifier": "sendInlineResourceMail", "parameters": "(String toMail,String subject,String content,List<InlineResource> resourceist)", "modifiers": "public", "return": "void", "signature": "void sendInlineResourceMail(String toMail,String subject,String content,List<InlineResource> resourceist)", "full_signature": "public void sendInlineResourceMail(String toMail,String subject,String content,List<InlineResource> resourceist)", "class_method_signature": "MailService.sendInlineResourceMail(String toMail,String subject,String content,List<InlineResource> resourceist)", "testcase": false, "constructor": false}, {"identifier": "sendInlineResourceMailForGroupSending", "parameters": "(String[] toMail,String subject,String content,List<InlineResource> resourceist)", "modifiers": "public", "return": "void", "signature": "void sendInlineResourceMailForGroupSending(String[] toMail,String subject,String content,List<InlineResource> resourceist)", "full_signature": "public void sendInlineResourceMailForGroupSending(String[] toMail,String subject,String content,List<InlineResource> resourceist)", "class_method_signature": "MailService.sendInlineResourceMailForGroupSending(String[] toMail,String subject,String content,List<InlineResource> resourceist)", "testcase": false, "constructor": false}, {"identifier": "sendAttachmentsMail", "parameters": "(String toMail,String subject,String content,String filePath)", "modifiers": "public", "return": "void", "signature": "void sendAttachmentsMail(String toMail,String subject,String content,String filePath)", "full_signature": "public void sendAttachmentsMail(String toMail,String subject,String content,String filePath)", "class_method_signature": "MailService.sendAttachmentsMail(String toMail,String subject,String content,String filePath)", "testcase": false, "constructor": false}], "file": "spring-boot-2.x_mail/src/main/java/cn/lijunkui/mail/MailService.java"}, "focal_method": {"identifier": "sendSimpleMail", "parameters": "(String toMail,String subject,String content)", "modifiers": "public", "return": "void", "body": "public void sendSimpleMail(String toMail,String subject,String content) {\n\t\tSimpleMailMessage simpleMailMessage = new SimpleMailMessage();\n\t\tsimpleMailMessage.setFrom(formMail);\n\t\tsimpleMailMessage.setTo(toMail);\n\t\tsimpleMailMessage.setSubject(subject);\n\t\tsimpleMailMessage.setText(content);\n\t\ttry {\n\t\t\tsender.send(simpleMailMessage);\n\t\t\tlogger.info(\"\u53d1\u9001\u7ed9\"+toMail+\"\u7b80\u5355\u90ae\u4ef6\u5df2\u7ecf\u53d1\u9001\u3002 subject\uff1a\"+subject);\n\t\t} catch (Exception e) {\n            logger.info(\"\u53d1\u9001\u7ed9\"+toMail+\"send mail error subject\uff1a\"+subject);\n            e.printStackTrace();\n\t\t}\n\t}", "signature": "void sendSimpleMail(String toMail,String subject,String content)", "full_signature": "public void sendSimpleMail(String toMail,String subject,String content)", "class_method_signature": "MailService.sendSimpleMail(String toMail,String subject,String content)", "testcase": false, "constructor": false, "invocations": ["setFrom", "setTo", "setSubject", "setText", "send", "info", "info", "printStackTrace"]}, "repository": {"repo_id": 157791342, "url": "https://github.com/zhuoqianmingyue/springbootexamples", "language": "Java", "is_fork": false, "fork_count": 83, "stargazer_count": 140, "size": 1587, "license": "licensed"}}