{"test_class": {"identifier": "BboxAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BboxAdapter bboxAdapter;", "modifier": "private", "type": "BboxAdapter", "declarator": "bboxAdapter", "var_name": "bboxAdapter"}], "file": "coastal-hazards-portal/src/test/java/gov/usgs/cida/coastalhazards/gson/adapter/BboxAdapterTest.java"}, "test_case": {"identifier": "deserializeTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void deserializeTest() {\n        JsonArray json = new JsonArray();\n        json.add(new JsonPrimitive(12.3));\n        json.add(new JsonPrimitive(-4.56));\n        json.add(new JsonPrimitive(78.9));\n        json.add(new JsonPrimitive(8.76));\n        Bbox deserialized = bboxAdapter.deserialize(json, Bbox.class, null);\n        assertThat(deserialized.getBbox(), is(equalTo(\"BOX(12.300000 -4.560000, 78.900000 8.760000)\")));\n    }", "signature": "void deserializeTest()", "full_signature": "@Test public void deserializeTest()", "class_method_signature": "BboxAdapterTest.deserializeTest()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "deserialize", "assertThat", "getBbox", "is", "equalTo"]}, "focal_class": {"identifier": "BboxAdapter", "superclass": "", "interfaces": "implements JsonSerializer<Bbox>, JsonDeserializer<Bbox>", "fields": [], "methods": [{"identifier": "serialize", "parameters": "(Bbox src, Type typeOfSrc, JsonSerializationContext context)", "modifiers": "@Override public", "return": "JsonElement", "signature": "JsonElement serialize(Bbox src, Type typeOfSrc, JsonSerializationContext context)", "full_signature": "@Override public JsonElement serialize(Bbox src, Type typeOfSrc, JsonSerializationContext context)", "class_method_signature": "BboxAdapter.serialize(Bbox src, Type typeOfSrc, JsonSerializationContext context)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(JsonElement json, Type typeOfT, JsonDeserializationContext context)", "modifiers": "@Override public", "return": "Bbox", "signature": "Bbox deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)", "full_signature": "@Override public Bbox deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)", "class_method_signature": "BboxAdapter.deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)", "testcase": false, "constructor": false}], "file": "coastal-hazards-portal/src/main/java/gov/usgs/cida/coastalhazards/gson/adapter/BboxAdapter.java"}, "focal_method": {"identifier": "deserialize", "parameters": "(JsonElement json, Type typeOfT, JsonDeserializationContext context)", "modifiers": "@Override public", "return": "Bbox", "body": "@Override\n\tpublic Bbox deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n\t\tBbox bbox = new Bbox();\n\t\tif (json instanceof JsonArray) {\n\t\t\tJsonArray array = (JsonArray) json;\n\t\t\tif (array.size() == 4) {\n\t\t\t\tdouble minX = array.get(0).getAsDouble();\n\t\t\t\tdouble minY = array.get(1).getAsDouble();\n\t\t\t\tdouble maxX = array.get(2).getAsDouble();\n\t\t\t\tdouble maxY = array.get(3).getAsDouble();\n\t\t\t\tbbox.setBbox(minX, minY, maxX, maxY);\n\t\t\t} else if (array.size() == 0) {\n\t\t\t\tbbox.setBbox(null);\n\t\t\t} else {\n\t\t\t\tthrow new JsonParseException(\"Bbox must be of format [minX,minY,maxX,maxY]\");\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new JsonParseException(\"Bbox must be JSON array\");\n\t\t}\n\t\treturn bbox;\n\t}", "signature": "Bbox deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)", "full_signature": "@Override public Bbox deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)", "class_method_signature": "BboxAdapter.deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)", "testcase": false, "constructor": false, "invocations": ["size", "getAsDouble", "get", "getAsDouble", "get", "getAsDouble", "get", "getAsDouble", "get", "setBbox", "size", "setBbox"]}, "repository": {"repo_id": 6888625, "url": "https://github.com/USGS-CIDA/coastal-hazards", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 5, "size": 37212, "license": "licensed"}}