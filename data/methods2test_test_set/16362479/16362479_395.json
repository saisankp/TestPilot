{"test_class": {"identifier": "DirectTransactionCommitCohortTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PERSISTENCE_ID = \"per-1\";", "modifier": "private static final", "type": "String", "declarator": "PERSISTENCE_ID = \"per-1\"", "var_name": "PERSISTENCE_ID"}, {"original_string": "@Mock\n    private AbstractClientHistory history;", "modifier": "@Mock\n    private", "type": "AbstractClientHistory", "declarator": "history", "var_name": "history"}, {"original_string": "private ActorSystem system;", "modifier": "private", "type": "ActorSystem", "declarator": "system", "var_name": "system"}, {"original_string": "private TransactionTester<?> transaction;", "modifier": "private", "type": "TransactionTester<?>", "declarator": "transaction", "var_name": "transaction"}, {"original_string": "private DirectTransactionCommitCohort cohort;", "modifier": "private", "type": "DirectTransactionCommitCohort", "declarator": "cohort", "var_name": "cohort"}], "file": "opendaylight/md-sal/sal-distributed-datastore/src/test/java/org/opendaylight/controller/cluster/databroker/actors/dds/DirectTransactionCommitCohortTest.java"}, "test_case": {"identifier": "testAbort", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAbort() throws Exception {\n        final ListenableFuture<Void> abort = cohort.abort();\n        verify(history).onTransactionComplete(transaction.getTransaction().getIdentifier());\n        assertNull(getWithTimeout(abort));\n    }", "signature": "void testAbort()", "full_signature": "@Test public void testAbort()", "class_method_signature": "DirectTransactionCommitCohortTest.testAbort()", "testcase": true, "constructor": false, "invocations": ["abort", "onTransactionComplete", "verify", "getIdentifier", "getTransaction", "assertNull", "getWithTimeout"]}, "focal_class": {"identifier": "DirectTransactionCommitCohort", "superclass": "extends AbstractTransactionCommitCohort", "interfaces": "", "fields": [{"original_string": "private final AbstractProxyTransaction proxy;", "modifier": "private final", "type": "AbstractProxyTransaction", "declarator": "proxy", "var_name": "proxy"}], "methods": [{"identifier": "DirectTransactionCommitCohort", "parameters": "(final AbstractClientHistory parent, final TransactionIdentifier txId,\n        final AbstractProxyTransaction proxy)", "modifiers": "", "return": "", "signature": " DirectTransactionCommitCohort(final AbstractClientHistory parent, final TransactionIdentifier txId,\n        final AbstractProxyTransaction proxy)", "full_signature": "  DirectTransactionCommitCohort(final AbstractClientHistory parent, final TransactionIdentifier txId,\n        final AbstractProxyTransaction proxy)", "class_method_signature": "DirectTransactionCommitCohort.DirectTransactionCommitCohort(final AbstractClientHistory parent, final TransactionIdentifier txId,\n        final AbstractProxyTransaction proxy)", "testcase": false, "constructor": true}, {"identifier": "canCommit", "parameters": "()", "modifiers": "@Override public", "return": "ListenableFuture<Boolean>", "signature": "ListenableFuture<Boolean> canCommit()", "full_signature": "@Override public ListenableFuture<Boolean> canCommit()", "class_method_signature": "DirectTransactionCommitCohort.canCommit()", "testcase": false, "constructor": false}, {"identifier": "preCommit", "parameters": "()", "modifiers": "@Override public", "return": "ListenableFuture<Void>", "signature": "ListenableFuture<Void> preCommit()", "full_signature": "@Override public ListenableFuture<Void> preCommit()", "class_method_signature": "DirectTransactionCommitCohort.preCommit()", "testcase": false, "constructor": false}, {"identifier": "abort", "parameters": "()", "modifiers": "@Override public", "return": "ListenableFuture<Void>", "signature": "ListenableFuture<Void> abort()", "full_signature": "@Override public ListenableFuture<Void> abort()", "class_method_signature": "DirectTransactionCommitCohort.abort()", "testcase": false, "constructor": false}, {"identifier": "commit", "parameters": "()", "modifiers": "@Override public", "return": "ListenableFuture<Void>", "signature": "ListenableFuture<Void> commit()", "full_signature": "@Override public ListenableFuture<Void> commit()", "class_method_signature": "DirectTransactionCommitCohort.commit()", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/databroker/actors/dds/DirectTransactionCommitCohort.java"}, "focal_method": {"identifier": "abort", "parameters": "()", "modifiers": "@Override public", "return": "ListenableFuture<Void>", "body": "@Override\n    public ListenableFuture<Void> abort() {\n        complete();\n        return VOID_FUTURE;\n    }", "signature": "ListenableFuture<Void> abort()", "full_signature": "@Override public ListenableFuture<Void> abort()", "class_method_signature": "DirectTransactionCommitCohort.abort()", "testcase": false, "constructor": false, "invocations": ["complete"]}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}