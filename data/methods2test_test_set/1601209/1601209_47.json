{"test_class": {"identifier": "PagedListTest", "superclass": "", "interfaces": "", "fields": [], "file": "unirest/src/test/java/kong/unirest/PagedListTest.java"}, "test_case": {"identifier": "canProcessFailed", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void canProcessFailed() {\n        PagedList<String> list = new PagedList<>();\n        list.addAll(asList(\n                mkRequest(\"foo\"),\n                mkRequest(null),\n                mkRequest(\"baz\")\n        ));\n\n        final List<String> processed = new ArrayList<>();\n        list.ifFailure(e -> processed.add(e.getBody()));\n        assertEquals(null, processed.get(0));\n    }", "signature": "void canProcessFailed()", "full_signature": "@Test public void canProcessFailed()", "class_method_signature": "PagedListTest.canProcessFailed()", "testcase": true, "constructor": false, "invocations": ["addAll", "asList", "mkRequest", "mkRequest", "mkRequest", "ifFailure", "add", "getBody", "assertEquals", "get"]}, "focal_class": {"identifier": "PagedList", "superclass": "extends ArrayList<HttpResponse<T>>", "interfaces": "", "fields": [], "methods": [{"identifier": "getBodies", "parameters": "()", "modifiers": "public", "return": "List<T>", "signature": "List<T> getBodies()", "full_signature": "public List<T> getBodies()", "class_method_signature": "PagedList.getBodies()", "testcase": false, "constructor": false}, {"identifier": "ifSuccess", "parameters": "(Consumer<HttpResponse<T>> consumer)", "modifiers": "public", "return": "PagedList<T>", "signature": "PagedList<T> ifSuccess(Consumer<HttpResponse<T>> consumer)", "full_signature": "public PagedList<T> ifSuccess(Consumer<HttpResponse<T>> consumer)", "class_method_signature": "PagedList.ifSuccess(Consumer<HttpResponse<T>> consumer)", "testcase": false, "constructor": false}, {"identifier": "ifFailure", "parameters": "(Consumer<HttpResponse<T>> consumer)", "modifiers": "public", "return": "PagedList<T>", "signature": "PagedList<T> ifFailure(Consumer<HttpResponse<T>> consumer)", "full_signature": "public PagedList<T> ifFailure(Consumer<HttpResponse<T>> consumer)", "class_method_signature": "PagedList.ifFailure(Consumer<HttpResponse<T>> consumer)", "testcase": false, "constructor": false}], "file": "unirest/src/main/java/kong/unirest/PagedList.java"}, "focal_method": {"identifier": "ifFailure", "parameters": "(Consumer<HttpResponse<T>> consumer)", "modifiers": "public", "return": "PagedList<T>", "body": "public PagedList<T> ifFailure(Consumer<HttpResponse<T>> consumer) {\n        stream().filter(r -> !r.isSuccess()).forEach(consumer);\n        return this;\n    }", "signature": "PagedList<T> ifFailure(Consumer<HttpResponse<T>> consumer)", "full_signature": "public PagedList<T> ifFailure(Consumer<HttpResponse<T>> consumer)", "class_method_signature": "PagedList.ifFailure(Consumer<HttpResponse<T>> consumer)", "testcase": false, "constructor": false, "invocations": ["forEach", "filter", "stream", "isSuccess"]}, "repository": {"repo_id": 1601209, "url": "https://github.com/Kong/unirest-java", "stars": 1855, "created": "4/11/2011 9:19:53 PM +00:00", "updates": "2020-01-25T12:07:58+00:00", "fork": "False", "license": "licensed"}}