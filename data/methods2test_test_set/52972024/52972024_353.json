{"test_class": {"identifier": "ImmutableReceiverChainTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [], "file": "CoreFeatures/MessageProcessing/ReceiverChain/src/test/java/info/smart_tools/smartactors/message_processing/receiver_chain/ImmutableReceiverChainTest.java"}, "test_case": {"identifier": "Should_provideCollectionOfUniqueExceptionalChains", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_provideCollectionOfUniqueExceptionalChains()\n            throws Exception {\n        IReceiverChain exceptional1 = mock(IReceiverChain.class), exceptional2 = mock(IReceiverChain.class);\n        IFieldName chainFN = IOC.resolve(Keys.getOrAdd(\"info.smart_tools.smartactors.iobject.ifield_name.IFieldName\"), \"chain\");\n        IObject eobj1 = mock(IObject.class), eobj2 = mock(IObject.class), eobj3 = mock(IObject.class);\n        when(eobj1.getValue(eq(chainFN))).thenReturn(exceptional1);\n        when(eobj2.getValue(eq(chainFN))).thenReturn(exceptional2);\n        when(eobj3.getValue(eq(chainFN))).thenReturn(exceptional1);\n\n        Map<Class<? extends Throwable>, IObject> eMap = new HashMap<>();\n        eMap.put(Exception.class, eobj1);\n        eMap.put(NullPointerException.class, eobj2);\n        eMap.put(RuntimeException.class, eobj3);\n\n        IReceiverChain chain = new ImmutableReceiverChain(\"theChain\", mock(IObject.class), new IMessageReceiver[0], new IObject[0], eMap);\n\n        Collection<IReceiverChain> eColl = chain.getExceptionalChains();\n\n        assertEquals(new HashSet<>(Arrays.asList(exceptional1, exceptional2)), eColl);\n    }", "signature": "void Should_provideCollectionOfUniqueExceptionalChains()", "full_signature": "@Test public void Should_provideCollectionOfUniqueExceptionalChains()", "class_method_signature": "ImmutableReceiverChainTest.Should_provideCollectionOfUniqueExceptionalChains()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "resolve", "getOrAdd", "mock", "mock", "mock", "thenReturn", "when", "getValue", "eq", "thenReturn", "when", "getValue", "eq", "thenReturn", "when", "getValue", "eq", "put", "put", "put", "mock", "getExceptionalChains", "assertEquals", "asList"]}, "focal_class": {"identifier": "ImmutableReceiverChain", "superclass": "", "interfaces": "implements IReceiverChain, IDumpable", "fields": [{"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final IMessageReceiver[] receivers;", "modifier": "private final", "type": "IMessageReceiver[]", "declarator": "receivers", "var_name": "receivers"}, {"original_string": "private final IObject[] arguments;", "modifier": "private final", "type": "IObject[]", "declarator": "arguments", "var_name": "arguments"}, {"original_string": "private final Map<Class<? extends Throwable>, IObject> exceptionalChains;", "modifier": "private final", "type": "Map<Class<? extends Throwable>, IObject>", "declarator": "exceptionalChains", "var_name": "exceptionalChains"}, {"original_string": "private final IObject description;", "modifier": "private final", "type": "IObject", "declarator": "description", "var_name": "description"}, {"original_string": "private final Set<IReceiverChain> allExceptionalChains;", "modifier": "private final", "type": "Set<IReceiverChain>", "declarator": "allExceptionalChains", "var_name": "allExceptionalChains"}], "methods": [{"identifier": "ImmutableReceiverChain", "parameters": "(final String name, final IObject chainDescription, final IMessageReceiver[] receivers, final IObject[] arguments,\n                                  final Map<Class<? extends Throwable>, IObject> exceptionalChainsAndEnv)", "modifiers": "public", "return": "", "signature": " ImmutableReceiverChain(final String name, final IObject chainDescription, final IMessageReceiver[] receivers, final IObject[] arguments,\n                                  final Map<Class<? extends Throwable>, IObject> exceptionalChainsAndEnv)", "full_signature": "public  ImmutableReceiverChain(final String name, final IObject chainDescription, final IMessageReceiver[] receivers, final IObject[] arguments,\n                                  final Map<Class<? extends Throwable>, IObject> exceptionalChainsAndEnv)", "class_method_signature": "ImmutableReceiverChain.ImmutableReceiverChain(final String name, final IObject chainDescription, final IMessageReceiver[] receivers, final IObject[] arguments,\n                                  final Map<Class<? extends Throwable>, IObject> exceptionalChainsAndEnv)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "(final int index)", "modifiers": "@Override public", "return": "IMessageReceiver", "signature": "IMessageReceiver get(final int index)", "full_signature": "@Override public IMessageReceiver get(final int index)", "class_method_signature": "ImmutableReceiverChain.get(final int index)", "testcase": false, "constructor": false}, {"identifier": "getArguments", "parameters": "(final int index)", "modifiers": "@Override public", "return": "IObject", "signature": "IObject getArguments(final int index)", "full_signature": "@Override public IObject getArguments(final int index)", "class_method_signature": "ImmutableReceiverChain.getArguments(final int index)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "ImmutableReceiverChain.getName()", "testcase": false, "constructor": false}, {"identifier": "getExceptionalChainAndEnvironments", "parameters": "(final Throwable exception)", "modifiers": "@Override public", "return": "IObject", "signature": "IObject getExceptionalChainAndEnvironments(final Throwable exception)", "full_signature": "@Override public IObject getExceptionalChainAndEnvironments(final Throwable exception)", "class_method_signature": "ImmutableReceiverChain.getExceptionalChainAndEnvironments(final Throwable exception)", "testcase": false, "constructor": false}, {"identifier": "getChainDescription", "parameters": "()", "modifiers": "@Override public", "return": "IObject", "signature": "IObject getChainDescription()", "full_signature": "@Override public IObject getChainDescription()", "class_method_signature": "ImmutableReceiverChain.getChainDescription()", "testcase": false, "constructor": false}, {"identifier": "getExceptionalChains", "parameters": "()", "modifiers": "@Override public", "return": "Collection<IReceiverChain>", "signature": "Collection<IReceiverChain> getExceptionalChains()", "full_signature": "@Override public Collection<IReceiverChain> getExceptionalChains()", "class_method_signature": "ImmutableReceiverChain.getExceptionalChains()", "testcase": false, "constructor": false}, {"identifier": "dump", "parameters": "(final IObject options)", "modifiers": "@Override public", "return": "IObject", "signature": "IObject dump(final IObject options)", "full_signature": "@Override public IObject dump(final IObject options)", "class_method_signature": "ImmutableReceiverChain.dump(final IObject options)", "testcase": false, "constructor": false}], "file": "CoreFeatures/MessageProcessing/ReceiverChain/src/main/java/info/smart_tools/smartactors/message_processing/receiver_chain/ImmutableReceiverChain.java"}, "focal_method": {"identifier": "getExceptionalChains", "parameters": "()", "modifiers": "@Override public", "return": "Collection<IReceiverChain>", "body": "@Override\n    public Collection<IReceiverChain> getExceptionalChains() {\n        return allExceptionalChains;\n    }", "signature": "Collection<IReceiverChain> getExceptionalChains()", "full_signature": "@Override public Collection<IReceiverChain> getExceptionalChains()", "class_method_signature": "ImmutableReceiverChain.getExceptionalChains()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}