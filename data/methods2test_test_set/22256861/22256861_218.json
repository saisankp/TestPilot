{"test_class": {"identifier": "XPathHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static XPathHelper xPathHelper;", "modifier": "private static", "type": "XPathHelper", "declarator": "xPathHelper", "var_name": "xPathHelper"}, {"original_string": "private static Document xmlDoc;", "modifier": "private static", "type": "Document", "declarator": "xmlDoc", "var_name": "xmlDoc"}], "file": "s3tbx-sentinel3-reader/src/test/java/org/esa/s3tbx/dataio/util/XPathHelperTest.java"}, "test_case": {"identifier": "testGetNode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetNode() throws Exception {\n        Node node = xPathHelper.getNode(\"/xml/secondTag/valueTag\", xmlDoc);\n        assertEquals(\"C\", node.getTextContent());\n\n    }", "signature": "void testGetNode()", "full_signature": "@Test public void testGetNode()", "class_method_signature": "XPathHelperTest.testGetNode()", "testcase": true, "constructor": false, "invocations": ["getNode", "assertEquals", "getTextContent"]}, "focal_class": {"identifier": "XPathHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private XPath xPath;", "modifier": "private", "type": "XPath", "declarator": "xPath", "var_name": "xPath"}], "methods": [{"identifier": "XPathHelper", "parameters": "(XPath xPath)", "modifiers": "public", "return": "", "signature": " XPathHelper(XPath xPath)", "full_signature": "public  XPathHelper(XPath xPath)", "class_method_signature": "XPathHelper.XPathHelper(XPath xPath)", "testcase": false, "constructor": true}, {"identifier": "getString", "parameters": "(String pathExpr, Node node)", "modifiers": "public", "return": "String", "signature": "String getString(String pathExpr, Node node)", "full_signature": "public String getString(String pathExpr, Node node)", "class_method_signature": "XPathHelper.getString(String pathExpr, Node node)", "testcase": false, "constructor": false}, {"identifier": "getNodeList", "parameters": "(String pathExpr, Node node)", "modifiers": "public", "return": "NodeList", "signature": "NodeList getNodeList(String pathExpr, Node node)", "full_signature": "public NodeList getNodeList(String pathExpr, Node node)", "class_method_signature": "XPathHelper.getNodeList(String pathExpr, Node node)", "testcase": false, "constructor": false}, {"identifier": "getNode", "parameters": "(String pathExpr, Node node)", "modifiers": "public", "return": "Node", "signature": "Node getNode(String pathExpr, Node node)", "full_signature": "public Node getNode(String pathExpr, Node node)", "class_method_signature": "XPathHelper.getNode(String pathExpr, Node node)", "testcase": false, "constructor": false}], "file": "s3tbx-sentinel3-reader/src/main/java/org/esa/s3tbx/dataio/util/XPathHelper.java"}, "focal_method": {"identifier": "getNode", "parameters": "(String pathExpr, Node node)", "modifiers": "public", "return": "Node", "body": "public Node getNode(String pathExpr, Node node) {\n        try {\n            return (Node) xPath.evaluate(pathExpr, node, XPathConstants.NODE);\n        } catch (XPathExpressionException e) {\n            throw new IllegalArgumentException(\"XPpath '\" + pathExpr + \"' invalid.\", e);\n        }\n\n    }", "signature": "Node getNode(String pathExpr, Node node)", "full_signature": "public Node getNode(String pathExpr, Node node)", "class_method_signature": "XPathHelper.getNode(String pathExpr, Node node)", "testcase": false, "constructor": false, "invocations": ["evaluate"]}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}