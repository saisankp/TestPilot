{"test_class": {"identifier": "URLResourceResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private URLResourceResolver loader;", "modifier": "private", "type": "URLResourceResolver", "declarator": "loader", "var_name": "loader"}], "file": "link-move/src/test/java/com/nhl/link/move/resource/URLResourceResolverTest.java"}, "test_case": {"identifier": "testGetXmlSource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetXmlSource() throws IOException {\n\n\t\ttry (Reader r = loader.reader(\"dummy.xml\")) {\n\n\t\t\tassertNotNull(r);\n\n\t\t\tchar[] buffer = new char[100];\n\t\t\tint read = r.read(buffer, 0, buffer.length);\n\t\t\tassertEquals(\"<dummy/>\", new String(buffer, 0, read));\n\t\t}\n\t}", "signature": "void testGetXmlSource()", "full_signature": "@Test public void testGetXmlSource()", "class_method_signature": "URLResourceResolverTest.testGetXmlSource()", "testcase": true, "constructor": false, "invocations": ["reader", "assertNotNull", "read", "assertEquals"]}, "focal_class": {"identifier": "URLResourceResolver", "superclass": "", "interfaces": "implements ResourceResolver", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(URLResourceResolver.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(URLResourceResolver.class)", "var_name": "LOGGER"}, {"original_string": "private final URL baseUrl;", "modifier": "private final", "type": "URL", "declarator": "baseUrl", "var_name": "baseUrl"}], "methods": [{"identifier": "URLResourceResolver", "parameters": "(URL baseUrl)", "modifiers": "public", "return": "", "signature": " URLResourceResolver(URL baseUrl)", "full_signature": "public  URLResourceResolver(URL baseUrl)", "class_method_signature": "URLResourceResolver.URLResourceResolver(URL baseUrl)", "testcase": false, "constructor": true}, {"identifier": "reader", "parameters": "(String name)", "modifiers": "@Override public", "return": "Reader", "signature": "Reader reader(String name)", "full_signature": "@Override public Reader reader(String name)", "class_method_signature": "URLResourceResolver.reader(String name)", "testcase": false, "constructor": false}], "file": "link-move/src/main/java/com/nhl/link/move/resource/URLResourceResolver.java"}, "focal_method": {"identifier": "reader", "parameters": "(String name)", "modifiers": "@Override public", "return": "Reader", "body": "@Override\n    public Reader reader(String name) {\n\n        URL modelUrl;\n        try {\n            modelUrl = new URL(baseUrl, name);\n        } catch (MalformedURLException e) {\n            throw new LmRuntimeException(\"Error building source URL\", e);\n        }\n\n        LOGGER.info(\"Will extract XML from {}\", modelUrl);\n\n        try {\n            return new InputStreamReader(modelUrl.openStream(), StandardCharsets.UTF_8);\n        } catch (IOException e) {\n            throw new LmRuntimeException(\"Error reading extractor config XML from URL \" + modelUrl, e);\n        }\n    }", "signature": "Reader reader(String name)", "full_signature": "@Override public Reader reader(String name)", "class_method_signature": "URLResourceResolver.reader(String name)", "testcase": false, "constructor": false, "invocations": ["info", "openStream"]}, "repository": {"repo_id": 22876447, "url": "https://github.com/nhl/link-move", "stars": 25, "created": "8/12/2014 12:27:10 PM +00:00", "updates": "2019-12-01T17:30:35+00:00", "fork": "False", "license": "licensed"}}