{"test_class": {"identifier": "ETagFilterTest", "superclass": "", "interfaces": "", "fields": [], "file": "containers/jetty/src/test/java/com/yahoo/athenz/container/filter/ETagFilterTest.java"}, "test_case": {"identifier": "testFilterContainerETagSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFilterContainerETagSet() {\n        \n        ContainerResponseContext containerResponse = getContext(\"etag\");\n        \n        ETagFilter eTagFilter = new ETagFilter();\n        eTagFilter.filter(null, containerResponse);\n        EntityTag eTag = (EntityTag) containerResponse.getHeaders().getFirst(HttpHeaders.ETAG);\n        assertNotNull(eTag);\n        assertEquals(eTag.getValue(), \"etag\");\n    }", "signature": "void testFilterContainerETagSet()", "full_signature": "@Test public void testFilterContainerETagSet()", "class_method_signature": "ETagFilterTest.testFilterContainerETagSet()", "testcase": true, "constructor": false, "invocations": ["getContext", "filter", "getFirst", "getHeaders", "assertNotNull", "assertEquals", "getValue"]}, "focal_class": {"identifier": "ETagFilter", "superclass": "", "interfaces": "implements ContainerResponseFilter", "fields": [{"original_string": "@Context private javax.servlet.http.HttpServletResponse servletResponse;", "modifier": "@Context private", "type": "javax.servlet.http.HttpServletResponse", "declarator": "servletResponse", "var_name": "servletResponse"}], "methods": [{"identifier": "filter", "parameters": "(ContainerRequestContext request, ContainerResponseContext response)", "modifiers": "@Override public", "return": "void", "signature": "void filter(ContainerRequestContext request, ContainerResponseContext response)", "full_signature": "@Override public void filter(ContainerRequestContext request, ContainerResponseContext response)", "class_method_signature": "ETagFilter.filter(ContainerRequestContext request, ContainerResponseContext response)", "testcase": false, "constructor": false}, {"identifier": "removeLeadingAndTrailingQuotes", "parameters": "(String value)", "modifiers": "", "return": "String", "signature": "String removeLeadingAndTrailingQuotes(String value)", "full_signature": " String removeLeadingAndTrailingQuotes(String value)", "class_method_signature": "ETagFilter.removeLeadingAndTrailingQuotes(String value)", "testcase": false, "constructor": false}], "file": "containers/jetty/src/main/java/com/yahoo/athenz/container/filter/ETagFilter.java"}, "focal_method": {"identifier": "filter", "parameters": "(ContainerRequestContext request, ContainerResponseContext response)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void filter(ContainerRequestContext request, ContainerResponseContext response) {\n        \n        // if our response object has a string ETag header value we're going\n        // to replace it with its corresponding EntityTag object since the\n        // the jersey GZIPResponse handler expects that object. \n        \n        // We could be either setting the in the container response (this is when\n        // we're returning not-modified response since we're creating the container\n        // response directly) or in the servlet response (this is where we're just\n        // returning our data set with the header included). \n        \n        // So we'll check in the container response first and if we don't have \n        // anything there we'll check in the servlet response. If we find the \n        // header in the servlet response, we're going to remove it and set a new\n        // entity tag object in the container response\n        \n        String etagStr = null;\n        if (response.getHeaders().containsKey(HttpHeaders.ETAG)) {\n            etagStr = (String) response.getHeaders().getFirst(HttpHeaders.ETAG);\n        }\n        if (etagStr == null && servletResponse != null) {\n            etagStr = servletResponse.getHeader(HttpHeaders.ETAG);\n            if (etagStr != null) {\n                servletResponse.setHeader(HttpHeaders.ETAG, null);\n            }\n        }\n        if (etagStr != null) {\n            etagStr = removeLeadingAndTrailingQuotes(etagStr);\n            response.getHeaders().putSingle(\"ETag\", new EntityTag(etagStr));\n        }\n    }", "signature": "void filter(ContainerRequestContext request, ContainerResponseContext response)", "full_signature": "@Override public void filter(ContainerRequestContext request, ContainerResponseContext response)", "class_method_signature": "ETagFilter.filter(ContainerRequestContext request, ContainerResponseContext response)", "testcase": false, "constructor": false, "invocations": ["containsKey", "getHeaders", "getFirst", "getHeaders", "getHeader", "setHeader", "removeLeadingAndTrailingQuotes", "putSingle", "getHeaders"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}