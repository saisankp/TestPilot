{"test_class": {"identifier": "StormTupleTest", "superclass": "extends AbstractTest", "interfaces": "", "fields": [{"original_string": "private static final String fieldName = \"fieldName\";", "modifier": "private static final", "type": "String", "declarator": "fieldName = \"fieldName\"", "var_name": "fieldName"}, {"original_string": "private static final String fieldNamePojo = \"member\";", "modifier": "private static final", "type": "String", "declarator": "fieldNamePojo = \"member\"", "var_name": "fieldNamePojo"}, {"original_string": "private int arity, index;", "modifier": "private", "type": "int", "declarator": "arity", "var_name": "arity"}], "file": "flink-contrib/flink-storm/src/test/java/org/apache/flink/storm/wrappers/StormTupleTest.java"}, "test_case": {"identifier": "testIntegerTuple", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testIntegerTuple() {\n\t\tfinal Integer data = this.r.nextInt();\n\n\t\tfinal int index = this.r.nextInt(5);\n\t\tfinal Tuple flinkTuple = new Tuple5<Object, Object, Object, Object, Object>();\n\t\tflinkTuple.setField(data, index);\n\n\t\tfinal StormTuple<Tuple> tuple = new StormTuple<Tuple>(flinkTuple, null, -1, null, null,\n\t\t\t\tnull);\n\t\tAssert.assertEquals(flinkTuple.getField(index), tuple.getInteger(index));\n\t}", "signature": "void testIntegerTuple()", "full_signature": "@Test public void testIntegerTuple()", "class_method_signature": "StormTupleTest.testIntegerTuple()", "testcase": true, "constructor": false, "invocations": ["nextInt", "nextInt", "setField", "assertEquals", "getField", "getInteger"]}, "focal_class": {"identifier": "StormTuple", "superclass": "", "interfaces": "implements backtype.storm.tuple.Tuple", "fields": [{"original_string": "private final Values stormTuple;", "modifier": "private final", "type": "Values", "declarator": "stormTuple", "var_name": "stormTuple"}, {"original_string": "private final Fields schema;", "modifier": "private final", "type": "Fields", "declarator": "schema", "var_name": "schema"}, {"original_string": "private final int producerTaskId;", "modifier": "private final", "type": "int", "declarator": "producerTaskId", "var_name": "producerTaskId"}, {"original_string": "private final String producerStreamId;", "modifier": "private final", "type": "String", "declarator": "producerStreamId", "var_name": "producerStreamId"}, {"original_string": "private final String producerComponentId;", "modifier": "private final", "type": "String", "declarator": "producerComponentId", "var_name": "producerComponentId"}, {"original_string": "private final MessageId messageId;", "modifier": "private final", "type": "MessageId", "declarator": "messageId", "var_name": "messageId"}], "methods": [{"identifier": "StormTuple", "parameters": "(final IN flinkTuple, final Fields schema, final int producerTaskId, final String producerStreamId, final String producerComponentId, final MessageId messageId)", "modifiers": "public", "return": "", "signature": " StormTuple(final IN flinkTuple, final Fields schema, final int producerTaskId, final String producerStreamId, final String producerComponentId, final MessageId messageId)", "full_signature": "public  StormTuple(final IN flinkTuple, final Fields schema, final int producerTaskId, final String producerStreamId, final String producerComponentId, final MessageId messageId)", "class_method_signature": "StormTuple.StormTuple(final IN flinkTuple, final Fields schema, final int producerTaskId, final String producerStreamId, final String producerComponentId, final MessageId messageId)", "testcase": false, "constructor": true}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "StormTuple.size()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final String field)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(final String field)", "full_signature": "@Override public boolean contains(final String field)", "class_method_signature": "StormTuple.contains(final String field)", "testcase": false, "constructor": false}, {"identifier": "getFields", "parameters": "()", "modifiers": "@Override public", "return": "Fields", "signature": "Fields getFields()", "full_signature": "@Override public Fields getFields()", "class_method_signature": "StormTuple.getFields()", "testcase": false, "constructor": false}, {"identifier": "fieldIndex", "parameters": "(final String field)", "modifiers": "@Override public", "return": "int", "signature": "int fieldIndex(final String field)", "full_signature": "@Override public int fieldIndex(final String field)", "class_method_signature": "StormTuple.fieldIndex(final String field)", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(final Fields selector)", "modifiers": "@Override public", "return": "List<Object>", "signature": "List<Object> select(final Fields selector)", "full_signature": "@Override public List<Object> select(final Fields selector)", "class_method_signature": "StormTuple.select(final Fields selector)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(final int i)", "modifiers": "@Override public", "return": "Object", "signature": "Object getValue(final int i)", "full_signature": "@Override public Object getValue(final int i)", "class_method_signature": "StormTuple.getValue(final int i)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(final int i)", "modifiers": "@Override public", "return": "String", "signature": "String getString(final int i)", "full_signature": "@Override public String getString(final int i)", "class_method_signature": "StormTuple.getString(final int i)", "testcase": false, "constructor": false}, {"identifier": "getInteger", "parameters": "(final int i)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getInteger(final int i)", "full_signature": "@Override public Integer getInteger(final int i)", "class_method_signature": "StormTuple.getInteger(final int i)", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(final int i)", "modifiers": "@Override public", "return": "Long", "signature": "Long getLong(final int i)", "full_signature": "@Override public Long getLong(final int i)", "class_method_signature": "StormTuple.getLong(final int i)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(final int i)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean getBoolean(final int i)", "full_signature": "@Override public Boolean getBoolean(final int i)", "class_method_signature": "StormTuple.getBoolean(final int i)", "testcase": false, "constructor": false}, {"identifier": "getShort", "parameters": "(final int i)", "modifiers": "@Override public", "return": "Short", "signature": "Short getShort(final int i)", "full_signature": "@Override public Short getShort(final int i)", "class_method_signature": "StormTuple.getShort(final int i)", "testcase": false, "constructor": false}, {"identifier": "getByte", "parameters": "(final int i)", "modifiers": "@Override public", "return": "Byte", "signature": "Byte getByte(final int i)", "full_signature": "@Override public Byte getByte(final int i)", "class_method_signature": "StormTuple.getByte(final int i)", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "(final int i)", "modifiers": "@Override public", "return": "Double", "signature": "Double getDouble(final int i)", "full_signature": "@Override public Double getDouble(final int i)", "class_method_signature": "StormTuple.getDouble(final int i)", "testcase": false, "constructor": false}, {"identifier": "getFloat", "parameters": "(final int i)", "modifiers": "@Override public", "return": "Float", "signature": "Float getFloat(final int i)", "full_signature": "@Override public Float getFloat(final int i)", "class_method_signature": "StormTuple.getFloat(final int i)", "testcase": false, "constructor": false}, {"identifier": "getBinary", "parameters": "(final int i)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] getBinary(final int i)", "full_signature": "@Override public byte[] getBinary(final int i)", "class_method_signature": "StormTuple.getBinary(final int i)", "testcase": false, "constructor": false}, {"identifier": "getPublicMemberField", "parameters": "(final String field)", "modifiers": "private", "return": "Field", "signature": "Field getPublicMemberField(final String field)", "full_signature": "private Field getPublicMemberField(final String field)", "class_method_signature": "StormTuple.getPublicMemberField(final String field)", "testcase": false, "constructor": false}, {"identifier": "getGetterMethod", "parameters": "(final String field)", "modifiers": "private", "return": "Method", "signature": "Method getGetterMethod(final String field)", "full_signature": "private Method getGetterMethod(final String field)", "class_method_signature": "StormTuple.getGetterMethod(final String field)", "testcase": false, "constructor": false}, {"identifier": "getValueByPublicMember", "parameters": "(final String field)", "modifiers": "private", "return": "Object", "signature": "Object getValueByPublicMember(final String field)", "full_signature": "private Object getValueByPublicMember(final String field)", "class_method_signature": "StormTuple.getValueByPublicMember(final String field)", "testcase": false, "constructor": false}, {"identifier": "getValueByGetter", "parameters": "(final String field)", "modifiers": "private", "return": "Object", "signature": "Object getValueByGetter(final String field)", "full_signature": "private Object getValueByGetter(final String field)", "class_method_signature": "StormTuple.getValueByGetter(final String field)", "testcase": false, "constructor": false}, {"identifier": "getValueByName", "parameters": "(final String field)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "T", "signature": "T getValueByName(final String field)", "full_signature": "@SuppressWarnings(\"unchecked\") public T getValueByName(final String field)", "class_method_signature": "StormTuple.getValueByName(final String field)", "testcase": false, "constructor": false}, {"identifier": "getValueByField", "parameters": "(final String field)", "modifiers": "@Override public", "return": "Object", "signature": "Object getValueByField(final String field)", "full_signature": "@Override public Object getValueByField(final String field)", "class_method_signature": "StormTuple.getValueByField(final String field)", "testcase": false, "constructor": false}, {"identifier": "getStringByField", "parameters": "(final String field)", "modifiers": "@Override public", "return": "String", "signature": "String getStringByField(final String field)", "full_signature": "@Override public String getStringByField(final String field)", "class_method_signature": "StormTuple.getStringByField(final String field)", "testcase": false, "constructor": false}, {"identifier": "getIntegerByField", "parameters": "(final String field)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getIntegerByField(final String field)", "full_signature": "@Override public Integer getIntegerByField(final String field)", "class_method_signature": "StormTuple.getIntegerByField(final String field)", "testcase": false, "constructor": false}, {"identifier": "getLongByField", "parameters": "(final String field)", "modifiers": "@Override public", "return": "Long", "signature": "Long getLongByField(final String field)", "full_signature": "@Override public Long getLongByField(final String field)", "class_method_signature": "StormTuple.getLongByField(final String field)", "testcase": false, "constructor": false}, {"identifier": "getBooleanByField", "parameters": "(final String field)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean getBooleanByField(final String field)", "full_signature": "@Override public Boolean getBooleanByField(final String field)", "class_method_signature": "StormTuple.getBooleanByField(final String field)", "testcase": false, "constructor": false}, {"identifier": "getShortByField", "parameters": "(final String field)", "modifiers": "@Override public", "return": "Short", "signature": "Short getShortByField(final String field)", "full_signature": "@Override public Short getShortByField(final String field)", "class_method_signature": "StormTuple.getShortByField(final String field)", "testcase": false, "constructor": false}, {"identifier": "getByteByField", "parameters": "(final String field)", "modifiers": "@Override public", "return": "Byte", "signature": "Byte getByteByField(final String field)", "full_signature": "@Override public Byte getByteByField(final String field)", "class_method_signature": "StormTuple.getByteByField(final String field)", "testcase": false, "constructor": false}, {"identifier": "getDoubleByField", "parameters": "(final String field)", "modifiers": "@Override public", "return": "Double", "signature": "Double getDoubleByField(final String field)", "full_signature": "@Override public Double getDoubleByField(final String field)", "class_method_signature": "StormTuple.getDoubleByField(final String field)", "testcase": false, "constructor": false}, {"identifier": "getFloatByField", "parameters": "(final String field)", "modifiers": "@Override public", "return": "Float", "signature": "Float getFloatByField(final String field)", "full_signature": "@Override public Float getFloatByField(final String field)", "class_method_signature": "StormTuple.getFloatByField(final String field)", "testcase": false, "constructor": false}, {"identifier": "getBinaryByField", "parameters": "(final String field)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] getBinaryByField(final String field)", "full_signature": "@Override public byte[] getBinaryByField(final String field)", "class_method_signature": "StormTuple.getBinaryByField(final String field)", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "()", "modifiers": "@Override public", "return": "List<Object>", "signature": "List<Object> getValues()", "full_signature": "@Override public List<Object> getValues()", "class_method_signature": "StormTuple.getValues()", "testcase": false, "constructor": false}, {"identifier": "getSourceGlobalStreamid", "parameters": "()", "modifiers": "@Override public", "return": "GlobalStreamId", "signature": "GlobalStreamId getSourceGlobalStreamid()", "full_signature": "@Override public GlobalStreamId getSourceGlobalStreamid()", "class_method_signature": "StormTuple.getSourceGlobalStreamid()", "testcase": false, "constructor": false}, {"identifier": "getSourceComponent", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSourceComponent()", "full_signature": "@Override public String getSourceComponent()", "class_method_signature": "StormTuple.getSourceComponent()", "testcase": false, "constructor": false}, {"identifier": "getSourceTask", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSourceTask()", "full_signature": "@Override public int getSourceTask()", "class_method_signature": "StormTuple.getSourceTask()", "testcase": false, "constructor": false}, {"identifier": "getSourceStreamId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSourceStreamId()", "full_signature": "@Override public String getSourceStreamId()", "class_method_signature": "StormTuple.getSourceStreamId()", "testcase": false, "constructor": false}, {"identifier": "getMessageId", "parameters": "()", "modifiers": "@Override public", "return": "MessageId", "signature": "MessageId getMessageId()", "full_signature": "@Override public MessageId getMessageId()", "class_method_signature": "StormTuple.getMessageId()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "StormTuple.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@SuppressWarnings(\"rawtypes\") @Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@SuppressWarnings(\"rawtypes\") @Override public boolean equals(Object obj)", "class_method_signature": "StormTuple.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "StormTuple.toString()", "testcase": false, "constructor": false}], "file": "flink-contrib/flink-storm/src/main/java/org/apache/flink/storm/wrappers/StormTuple.java"}, "focal_method": {"identifier": "getInteger", "parameters": "(final int i)", "modifiers": "@Override public", "return": "Integer", "body": "@Override\n\tpublic Integer getInteger(final int i) {\n\t\treturn (Integer) this.stormTuple.get(i);\n\t}", "signature": "Integer getInteger(final int i)", "full_signature": "@Override public Integer getInteger(final int i)", "class_method_signature": "StormTuple.getInteger(final int i)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}