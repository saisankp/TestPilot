{"test_class": {"identifier": "UserControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private UserService userService;", "modifier": "@Mock\n    private", "type": "UserService", "declarator": "userService", "var_name": "userService"}, {"original_string": "@Mock\n    private UserGroupService userGroupService;", "modifier": "@Mock\n    private", "type": "UserGroupService", "declarator": "userGroupService", "var_name": "userGroupService"}, {"original_string": "@Mock\n    private CurrentUserService currentUserService;", "modifier": "@Mock\n    private", "type": "CurrentUserService", "declarator": "currentUserService", "var_name": "currentUserService"}, {"original_string": "@InjectMocks\n    private UserController userController;", "modifier": "@InjectMocks\n    private", "type": "UserController", "declarator": "userController", "var_name": "userController"}, {"original_string": "private UserGroup userGroup1;", "modifier": "private", "type": "UserGroup", "declarator": "userGroup1", "var_name": "userGroup1"}, {"original_string": "private UserGroup userGroup2;", "modifier": "private", "type": "UserGroup", "declarator": "userGroup2", "var_name": "userGroup2"}, {"original_string": "private User currentUser;", "modifier": "private", "type": "User", "declarator": "currentUser", "var_name": "currentUser"}, {"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private User parsedUser;", "modifier": "private", "type": "User", "declarator": "parsedUser", "var_name": "parsedUser"}, {"original_string": "@Rule\n    public MockitoRule rule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "rule = MockitoJUnit.rule()", "var_name": "rule"}], "file": "dhis-2/dhis-web/dhis-web-api/src/test/java/org/hisp/dhis/webapi/controller/user/UserControllerTest.java"}, "test_case": {"identifier": "updateUserGroups", "parameters": "()", "modifiers": "@Test @SuppressWarnings( \"unchecked\" ) public", "return": "void", "body": "@Test\n    @SuppressWarnings( \"unchecked\" )\n    public void updateUserGroups()\n    {\n        Mockito.when( userService.getUser( \"def2\" ) ).thenReturn( user );\n\n        final TypeReport typeReport = new TypeReport( User.class );\n        typeReport.getStats().incUpdated();\n        final ImportReport importReport = new ImportReport();\n        importReport.setStatus( Status.OK );\n        importReport.addTypeReport( typeReport );\n        if ( importReport.getStatus() == Status.OK && importReport.getStats().getUpdated() == 1 )\n        {\n            userController.updateUserGroups( \"def2\", parsedUser, currentUser );\n        }\n\n        Mockito.verifyNoInteractions( currentUserService );\n        Mockito.verify( userGroupService ).updateUserGroups( Mockito.same( user ),\n            (Collection<String>) argThat( Matchers.containsInAnyOrder( \"abc1\", \"abc2\" ) ),\n            Mockito.same( currentUser ) );\n    }", "signature": "void updateUserGroups()", "full_signature": "@Test @SuppressWarnings( \"unchecked\" ) public void updateUserGroups()", "class_method_signature": "UserControllerTest.updateUserGroups()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getUser", "incUpdated", "getStats", "setStatus", "addTypeReport", "getStatus", "getUpdated", "getStats", "updateUserGroups", "verifyNoInteractions", "updateUserGroups", "verify", "same", "argThat", "containsInAnyOrder", "same"]}, "focal_class": {"identifier": "UserController", "superclass": "extends AbstractCrudController<User>", "interfaces": "", "fields": [{"original_string": "public static final String INVITE_PATH = \"/invite\";", "modifier": "public static final", "type": "String", "declarator": "INVITE_PATH = \"/invite\"", "var_name": "INVITE_PATH"}, {"original_string": "public static final String BULK_INVITE_PATH = \"/invites\";", "modifier": "public static final", "type": "String", "declarator": "BULK_INVITE_PATH = \"/invites\"", "var_name": "BULK_INVITE_PATH"}, {"original_string": "private static final String KEY_USERNAME = \"username\";", "modifier": "private static final", "type": "String", "declarator": "KEY_USERNAME = \"username\"", "var_name": "KEY_USERNAME"}, {"original_string": "private static final String KEY_PASSWORD = \"password\";", "modifier": "private static final", "type": "String", "declarator": "KEY_PASSWORD = \"password\"", "var_name": "KEY_PASSWORD"}, {"original_string": "@Autowired\n    private UserService userService;", "modifier": "@Autowired\n    private", "type": "UserService", "declarator": "userService", "var_name": "userService"}, {"original_string": "@Autowired\n    private UserGroupService userGroupService;", "modifier": "@Autowired\n    private", "type": "UserGroupService", "declarator": "userGroupService", "var_name": "userGroupService"}, {"original_string": "@Autowired\n    private SecurityService securityService;", "modifier": "@Autowired\n    private", "type": "SecurityService", "declarator": "securityService", "var_name": "securityService"}, {"original_string": "@Autowired\n    private OrganisationUnitService organisationUnitService;", "modifier": "@Autowired\n    private", "type": "OrganisationUnitService", "declarator": "organisationUnitService", "var_name": "organisationUnitService"}, {"original_string": "@Autowired\n    private UserSettingService userSettingService;", "modifier": "@Autowired\n    private", "type": "UserSettingService", "declarator": "userSettingService", "var_name": "userSettingService"}], "methods": [{"identifier": "getEntityList", "parameters": "( WebMetadata metadata, WebOptions options, List<String> filters,\n        List<Order> orders )", "modifiers": "@Override @SuppressWarnings( \"unchecked\" ) protected", "return": "List<User>", "signature": "List<User> getEntityList( WebMetadata metadata, WebOptions options, List<String> filters,\n        List<Order> orders )", "full_signature": "@Override @SuppressWarnings( \"unchecked\" ) protected List<User> getEntityList( WebMetadata metadata, WebOptions options, List<String> filters,\n        List<Order> orders )", "class_method_signature": "UserController.getEntityList( WebMetadata metadata, WebOptions options, List<String> filters,\n        List<Order> orders )", "testcase": false, "constructor": false}, {"identifier": "getEntity", "parameters": "( String uid, WebOptions options )", "modifiers": "@Override protected", "return": "List<User>", "signature": "List<User> getEntity( String uid, WebOptions options )", "full_signature": "@Override protected List<User> getEntity( String uid, WebOptions options )", "class_method_signature": "UserController.getEntity( String uid, WebOptions options )", "testcase": false, "constructor": false}, {"identifier": "postXmlObject", "parameters": "( HttpServletRequest request, HttpServletResponse response )", "modifiers": "@Override @RequestMapping( method = RequestMethod.POST, consumes = { \"application/xml\", \"text/xml\" } ) public", "return": "void", "signature": "void postXmlObject( HttpServletRequest request, HttpServletResponse response )", "full_signature": "@Override @RequestMapping( method = RequestMethod.POST, consumes = { \"application/xml\", \"text/xml\" } ) public void postXmlObject( HttpServletRequest request, HttpServletResponse response )", "class_method_signature": "UserController.postXmlObject( HttpServletRequest request, HttpServletResponse response )", "testcase": false, "constructor": false}, {"identifier": "postJsonObject", "parameters": "( HttpServletRequest request, HttpServletResponse response )", "modifiers": "@Override @RequestMapping( method = RequestMethod.POST, consumes = \"application/json\" ) public", "return": "void", "signature": "void postJsonObject( HttpServletRequest request, HttpServletResponse response )", "full_signature": "@Override @RequestMapping( method = RequestMethod.POST, consumes = \"application/json\" ) public void postJsonObject( HttpServletRequest request, HttpServletResponse response )", "class_method_signature": "UserController.postJsonObject( HttpServletRequest request, HttpServletResponse response )", "testcase": false, "constructor": false}, {"identifier": "postJsonInvite", "parameters": "( HttpServletRequest request, HttpServletResponse response )", "modifiers": "@RequestMapping( value = INVITE_PATH, method = RequestMethod.POST, consumes = \"application/json\" ) public", "return": "void", "signature": "void postJsonInvite( HttpServletRequest request, HttpServletResponse response )", "full_signature": "@RequestMapping( value = INVITE_PATH, method = RequestMethod.POST, consumes = \"application/json\" ) public void postJsonInvite( HttpServletRequest request, HttpServletResponse response )", "class_method_signature": "UserController.postJsonInvite( HttpServletRequest request, HttpServletResponse response )", "testcase": false, "constructor": false}, {"identifier": "postJsonInvites", "parameters": "( HttpServletRequest request, HttpServletResponse response )", "modifiers": "@RequestMapping( value = BULK_INVITE_PATH, method = RequestMethod.POST, consumes = \"application/json\" ) @ResponseStatus( HttpStatus.NO_CONTENT ) public", "return": "void", "signature": "void postJsonInvites( HttpServletRequest request, HttpServletResponse response )", "full_signature": "@RequestMapping( value = BULK_INVITE_PATH, method = RequestMethod.POST, consumes = \"application/json\" ) @ResponseStatus( HttpStatus.NO_CONTENT ) public void postJsonInvites( HttpServletRequest request, HttpServletResponse response )", "class_method_signature": "UserController.postJsonInvites( HttpServletRequest request, HttpServletResponse response )", "testcase": false, "constructor": false}, {"identifier": "postXmlInvite", "parameters": "( HttpServletRequest request, HttpServletResponse response )", "modifiers": "@RequestMapping( value = INVITE_PATH, method = RequestMethod.POST, consumes = { \"application/xml\", \"text/xml\" } ) public", "return": "void", "signature": "void postXmlInvite( HttpServletRequest request, HttpServletResponse response )", "full_signature": "@RequestMapping( value = INVITE_PATH, method = RequestMethod.POST, consumes = { \"application/xml\", \"text/xml\" } ) public void postXmlInvite( HttpServletRequest request, HttpServletResponse response )", "class_method_signature": "UserController.postXmlInvite( HttpServletRequest request, HttpServletResponse response )", "testcase": false, "constructor": false}, {"identifier": "postXmlInvites", "parameters": "( HttpServletRequest request, HttpServletResponse response )", "modifiers": "@RequestMapping( value = BULK_INVITE_PATH, method = RequestMethod.POST, consumes = { \"application/xml\", \"text/xml\" } ) @ResponseStatus( HttpStatus.NO_CONTENT ) public", "return": "void", "signature": "void postXmlInvites( HttpServletRequest request, HttpServletResponse response )", "full_signature": "@RequestMapping( value = BULK_INVITE_PATH, method = RequestMethod.POST, consumes = { \"application/xml\", \"text/xml\" } ) @ResponseStatus( HttpStatus.NO_CONTENT ) public void postXmlInvites( HttpServletRequest request, HttpServletResponse response )", "class_method_signature": "UserController.postXmlInvites( HttpServletRequest request, HttpServletResponse response )", "testcase": false, "constructor": false}, {"identifier": "resendInvite", "parameters": "( @PathVariable String id, HttpServletRequest request )", "modifiers": "@RequestMapping( value = \"/{id}\" + INVITE_PATH, method = RequestMethod.POST ) @ResponseStatus( HttpStatus.NO_CONTENT ) public", "return": "void", "signature": "void resendInvite( @PathVariable String id, HttpServletRequest request )", "full_signature": "@RequestMapping( value = \"/{id}\" + INVITE_PATH, method = RequestMethod.POST ) @ResponseStatus( HttpStatus.NO_CONTENT ) public void resendInvite( @PathVariable String id, HttpServletRequest request )", "class_method_signature": "UserController.resendInvite( @PathVariable String id, HttpServletRequest request )", "testcase": false, "constructor": false}, {"identifier": "replicateUser", "parameters": "( @PathVariable String uid,\n        HttpServletRequest request, HttpServletResponse response )", "modifiers": "@SuppressWarnings( \"unchecked\" ) @PreAuthorize( \"hasRole('ALL') or hasRole('F_REPLICATE_USER')\" ) @RequestMapping( value = \"/{uid}/replica\", method = RequestMethod.POST ) public", "return": "void", "signature": "void replicateUser( @PathVariable String uid,\n        HttpServletRequest request, HttpServletResponse response )", "full_signature": "@SuppressWarnings( \"unchecked\" ) @PreAuthorize( \"hasRole('ALL') or hasRole('F_REPLICATE_USER')\" ) @RequestMapping( value = \"/{uid}/replica\", method = RequestMethod.POST ) public void replicateUser( @PathVariable String uid,\n        HttpServletRequest request, HttpServletResponse response )", "class_method_signature": "UserController.replicateUser( @PathVariable String uid,\n        HttpServletRequest request, HttpServletResponse response )", "testcase": false, "constructor": false}, {"identifier": "enableUser", "parameters": "( @PathVariable(\"uid\") String uid )", "modifiers": "@RequestMapping(value = \"/{uid}/enabled\", method = RequestMethod.POST) @ResponseStatus(value = HttpStatus.NO_CONTENT) public", "return": "void", "signature": "void enableUser( @PathVariable(\"uid\") String uid )", "full_signature": "@RequestMapping(value = \"/{uid}/enabled\", method = RequestMethod.POST) @ResponseStatus(value = HttpStatus.NO_CONTENT) public void enableUser( @PathVariable(\"uid\") String uid )", "class_method_signature": "UserController.enableUser( @PathVariable(\"uid\") String uid )", "testcase": false, "constructor": false}, {"identifier": "disableUser", "parameters": "( @PathVariable(\"uid\") String uid )", "modifiers": "@RequestMapping(value = \"/{uid}/disabled\", method = RequestMethod.POST) @ResponseStatus(value = HttpStatus.NO_CONTENT) public", "return": "void", "signature": "void disableUser( @PathVariable(\"uid\") String uid )", "full_signature": "@RequestMapping(value = \"/{uid}/disabled\", method = RequestMethod.POST) @ResponseStatus(value = HttpStatus.NO_CONTENT) public void disableUser( @PathVariable(\"uid\") String uid )", "class_method_signature": "UserController.disableUser( @PathVariable(\"uid\") String uid )", "testcase": false, "constructor": false}, {"identifier": "putXmlObject", "parameters": "( @PathVariable( \"uid\" ) String pvUid, HttpServletRequest request, HttpServletResponse response )", "modifiers": "@Override @RequestMapping( value = \"/{uid}\", method = RequestMethod.PUT, consumes = { \"application/xml\", \"text/xml\" } ) public", "return": "void", "signature": "void putXmlObject( @PathVariable( \"uid\" ) String pvUid, HttpServletRequest request, HttpServletResponse response )", "full_signature": "@Override @RequestMapping( value = \"/{uid}\", method = RequestMethod.PUT, consumes = { \"application/xml\", \"text/xml\" } ) public void putXmlObject( @PathVariable( \"uid\" ) String pvUid, HttpServletRequest request, HttpServletResponse response )", "class_method_signature": "UserController.putXmlObject( @PathVariable( \"uid\" ) String pvUid, HttpServletRequest request, HttpServletResponse response )", "testcase": false, "constructor": false}, {"identifier": "putJsonObject", "parameters": "( @PathVariable( \"uid\" ) String pvUid, HttpServletRequest request, HttpServletResponse response )", "modifiers": "@Override @RequestMapping( value = \"/{uid}\", method = RequestMethod.PUT, consumes = \"application/json\" ) public", "return": "void", "signature": "void putJsonObject( @PathVariable( \"uid\" ) String pvUid, HttpServletRequest request, HttpServletResponse response )", "full_signature": "@Override @RequestMapping( value = \"/{uid}\", method = RequestMethod.PUT, consumes = \"application/json\" ) public void putJsonObject( @PathVariable( \"uid\" ) String pvUid, HttpServletRequest request, HttpServletResponse response )", "class_method_signature": "UserController.putJsonObject( @PathVariable( \"uid\" ) String pvUid, HttpServletRequest request, HttpServletResponse response )", "testcase": false, "constructor": false}, {"identifier": "updateUser", "parameters": "( String userUid, User parsedUserObject )", "modifiers": "protected", "return": "ImportReport", "signature": "ImportReport updateUser( String userUid, User parsedUserObject )", "full_signature": "protected ImportReport updateUser( String userUid, User parsedUserObject )", "class_method_signature": "UserController.updateUser( String userUid, User parsedUserObject )", "testcase": false, "constructor": false}, {"identifier": "updateUserGroups", "parameters": "( String pvUid, User parsed, User currentUser )", "modifiers": "protected", "return": "void", "signature": "void updateUserGroups( String pvUid, User parsed, User currentUser )", "full_signature": "protected void updateUserGroups( String pvUid, User parsed, User currentUser )", "class_method_signature": "UserController.updateUserGroups( String pvUid, User parsed, User currentUser )", "testcase": false, "constructor": false}, {"identifier": "prePatchEntity", "parameters": "( User entity )", "modifiers": "@Override protected", "return": "void", "signature": "void prePatchEntity( User entity )", "full_signature": "@Override protected void prePatchEntity( User entity )", "class_method_signature": "UserController.prePatchEntity( User entity )", "testcase": false, "constructor": false}, {"identifier": "postPatchEntity", "parameters": "( User entity )", "modifiers": "@Override protected", "return": "void", "signature": "void postPatchEntity( User entity )", "full_signature": "@Override protected void postPatchEntity( User entity )", "class_method_signature": "UserController.postPatchEntity( User entity )", "testcase": false, "constructor": false}, {"identifier": "preDeleteEntity", "parameters": "( User entity )", "modifiers": "@Override protected", "return": "void", "signature": "void preDeleteEntity( User entity )", "full_signature": "@Override protected void preDeleteEntity( User entity )", "class_method_signature": "UserController.preDeleteEntity( User entity )", "testcase": false, "constructor": false}, {"identifier": "validateCreateUser", "parameters": "( User user, User currentUser )", "modifiers": "private", "return": "boolean", "signature": "boolean validateCreateUser( User user, User currentUser )", "full_signature": "private boolean validateCreateUser( User user, User currentUser )", "class_method_signature": "UserController.validateCreateUser( User user, User currentUser )", "testcase": false, "constructor": false}, {"identifier": "createUser", "parameters": "( User user, User currentUser )", "modifiers": "private", "return": "ImportReport", "signature": "ImportReport createUser( User user, User currentUser )", "full_signature": "private ImportReport createUser( User user, User currentUser )", "class_method_signature": "UserController.createUser( User user, User currentUser )", "testcase": false, "constructor": false}, {"identifier": "validateInviteUser", "parameters": "( User user, User currentUser )", "modifiers": "private", "return": "boolean", "signature": "boolean validateInviteUser( User user, User currentUser )", "full_signature": "private boolean validateInviteUser( User user, User currentUser )", "class_method_signature": "UserController.validateInviteUser( User user, User currentUser )", "testcase": false, "constructor": false}, {"identifier": "inviteUser", "parameters": "( User user, User currentUser, HttpServletRequest request )", "modifiers": "private", "return": "ObjectReport", "signature": "ObjectReport inviteUser( User user, User currentUser, HttpServletRequest request )", "full_signature": "private ObjectReport inviteUser( User user, User currentUser, HttpServletRequest request )", "class_method_signature": "UserController.inviteUser( User user, User currentUser, HttpServletRequest request )", "testcase": false, "constructor": false}, {"identifier": "getObjectReport", "parameters": "( ImportReport importReport )", "modifiers": "private", "return": "ObjectReport", "signature": "ObjectReport getObjectReport( ImportReport importReport )", "full_signature": "private ObjectReport getObjectReport( ImportReport importReport )", "class_method_signature": "UserController.getObjectReport( ImportReport importReport )", "testcase": false, "constructor": false}, {"identifier": "copyAttributeValues", "parameters": "( User userReplica )", "modifiers": "private", "return": "void", "signature": "void copyAttributeValues( User userReplica )", "full_signature": "private void copyAttributeValues( User userReplica )", "class_method_signature": "UserController.copyAttributeValues( User userReplica )", "testcase": false, "constructor": false}, {"identifier": "mergeLastLoginAttribute", "parameters": "( User source, User target )", "modifiers": "private", "return": "User", "signature": "User mergeLastLoginAttribute( User source, User target )", "full_signature": "private User mergeLastLoginAttribute( User source, User target )", "class_method_signature": "UserController.mergeLastLoginAttribute( User source, User target )", "testcase": false, "constructor": false}, {"identifier": "setDisabled", "parameters": "( String uid, boolean disable )", "modifiers": "private", "return": "void", "signature": "void setDisabled( String uid, boolean disable )", "full_signature": "private void setDisabled( String uid, boolean disable )", "class_method_signature": "UserController.setDisabled( String uid, boolean disable )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/user/UserController.java"}, "focal_method": {"identifier": "updateUserGroups", "parameters": "( String pvUid, User parsed, User currentUser )", "modifiers": "protected", "return": "void", "body": "protected void updateUserGroups( String pvUid, User parsed, User currentUser )\n    {\n        User user = userService.getUser( pvUid );\n\n        // current user may have been changed and detached and must become managed again\n        // TODO: what is this doing? I don't understand how this is possible.\n        if ( currentUser != null && currentUser.getId() == user.getId() )\n        {\n            currentUser = currentUserService.getCurrentUser();\n        }\n\n        userGroupService.updateUserGroups( user, IdentifiableObjectUtils.getUids( parsed.getGroups() ), currentUser );\n    }", "signature": "void updateUserGroups( String pvUid, User parsed, User currentUser )", "full_signature": "protected void updateUserGroups( String pvUid, User parsed, User currentUser )", "class_method_signature": "UserController.updateUserGroups( String pvUid, User parsed, User currentUser )", "testcase": false, "constructor": false, "invocations": ["getUser", "getId", "getId", "getCurrentUser", "updateUserGroups", "getUids", "getGroups"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}