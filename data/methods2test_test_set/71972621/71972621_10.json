{"test_class": {"identifier": "ComponentResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static IComponentService service = mock(ComponentService.class);", "modifier": "private static", "type": "IComponentService", "declarator": "service = mock(ComponentService.class)", "var_name": "service"}, {"original_string": "private static JarScanner scanner = mock(JarScanner.class);", "modifier": "private static", "type": "JarScanner", "declarator": "scanner = mock(JarScanner.class)", "var_name": "scanner"}, {"original_string": "private static ComponentDomain component;", "modifier": "private static", "type": "ComponentDomain", "declarator": "component", "var_name": "component"}, {"original_string": "private static ComponentResource resource;", "modifier": "private static", "type": "ComponentResource", "declarator": "resource", "var_name": "resource"}], "file": "fabric-manager/src/test/java/com/olacabs/fabric/manager/resource/ComponentResourceTest.java"}, "test_case": {"identifier": "testGetByVersion", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetByVersion() {\n        doReturn(component).when(service).get(2);\n\n        final Response response = resource.get(2);\n        Assert.assertEquals(response.getStatus(), 200);\n        Assert.assertEquals(response.getEntity(), component);\n    }", "signature": "void testGetByVersion()", "full_signature": "@Test public void testGetByVersion()", "class_method_signature": "ComponentResourceTest.testGetByVersion()", "testcase": true, "constructor": false, "invocations": ["get", "when", "doReturn", "get", "assertEquals", "getStatus", "assertEquals", "getEntity"]}, "focal_class": {"identifier": "ComponentResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final IComponentService service;", "modifier": "private final", "type": "IComponentService", "declarator": "service", "var_name": "service"}, {"original_string": "private final String artifactoryPath;", "modifier": "private final", "type": "String", "declarator": "artifactoryPath", "var_name": "artifactoryPath"}, {"original_string": "private final JarScanner scanner;", "modifier": "private final", "type": "JarScanner", "declarator": "scanner", "var_name": "scanner"}], "methods": [{"identifier": "save", "parameters": "(@NotNull @Valid final ComponentDomain component)", "modifiers": "@POST @Consumes(MediaType.APPLICATION_JSON) @Timed @UnitOfWork @UserRequired @ApiOperation(value = \"Save computation\", response = ComponentDomain.class) public", "return": "Response", "signature": "Response save(@NotNull @Valid final ComponentDomain component)", "full_signature": "@POST @Consumes(MediaType.APPLICATION_JSON) @Timed @UnitOfWork @UserRequired @ApiOperation(value = \"Save computation\", response = ComponentDomain.class) public Response save(@NotNull @Valid final ComponentDomain component)", "class_method_signature": "ComponentResource.save(@NotNull @Valid final ComponentDomain component)", "testcase": false, "constructor": false}, {"identifier": "getAllGroupedByVersion", "parameters": "(@QueryParam(\"namespace\") final String namespace,\n            @QueryParam(\"name\") final String name)", "modifiers": "@GET @Path(\"/versions\") @Timed @UnitOfWork(transactional = false) @ApiOperation(value = \"Get all computation grouped by version\", response = ComponentDomain.class) public", "return": "Response", "signature": "Response getAllGroupedByVersion(@QueryParam(\"namespace\") final String namespace,\n            @QueryParam(\"name\") final String name)", "full_signature": "@GET @Path(\"/versions\") @Timed @UnitOfWork(transactional = false) @ApiOperation(value = \"Get all computation grouped by version\", response = ComponentDomain.class) public Response getAllGroupedByVersion(@QueryParam(\"namespace\") final String namespace,\n            @QueryParam(\"name\") final String name)", "class_method_signature": "ComponentResource.getAllGroupedByVersion(@QueryParam(\"namespace\") final String namespace,\n            @QueryParam(\"name\") final String name)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(@PathParam(\"namespace\") final String namespace, @PathParam(\"name\") final String name,\n            @PathParam(\"version\") final String version)", "modifiers": "@GET @Path(\"/{namespace}/{name}/{version}\") @Timed @UnitOfWork(transactional = false) @ApiOperation(value = \"Get component based on namespace, name and version\", response = ComponentDomain.class) public", "return": "Response", "signature": "Response get(@PathParam(\"namespace\") final String namespace, @PathParam(\"name\") final String name,\n            @PathParam(\"version\") final String version)", "full_signature": "@GET @Path(\"/{namespace}/{name}/{version}\") @Timed @UnitOfWork(transactional = false) @ApiOperation(value = \"Get component based on namespace, name and version\", response = ComponentDomain.class) public Response get(@PathParam(\"namespace\") final String namespace, @PathParam(\"name\") final String name,\n            @PathParam(\"version\") final String version)", "class_method_signature": "ComponentResource.get(@PathParam(\"namespace\") final String namespace, @PathParam(\"name\") final String name,\n            @PathParam(\"version\") final String version)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(@QueryParam(\"namespace\") final String namespace, @QueryParam(\"name\") final String name,\n            @QueryParam(\"version\") final String version)", "modifiers": "@GET @Timed @UnitOfWork(transactional = false) @ApiOperation(value = \"Searches component based on param\", response = Set.class) public", "return": "Response", "signature": "Response search(@QueryParam(\"namespace\") final String namespace, @QueryParam(\"name\") final String name,\n            @QueryParam(\"version\") final String version)", "full_signature": "@GET @Timed @UnitOfWork(transactional = false) @ApiOperation(value = \"Searches component based on param\", response = Set.class) public Response search(@QueryParam(\"namespace\") final String namespace, @QueryParam(\"name\") final String name,\n            @QueryParam(\"version\") final String version)", "class_method_signature": "ComponentResource.search(@QueryParam(\"namespace\") final String namespace, @QueryParam(\"name\") final String name,\n            @QueryParam(\"version\") final String version)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(@PathParam(\"id\") final int internalId)", "modifiers": "@GET @Path(\"/{id}\") @UnitOfWork(transactional = false) @ApiOperation(value = \"Get component by id\", response = ComponentDomain.class) public", "return": "Response", "signature": "Response get(@PathParam(\"id\") final int internalId)", "full_signature": "@GET @Path(\"/{id}\") @UnitOfWork(transactional = false) @ApiOperation(value = \"Get component by id\", response = ComponentDomain.class) public Response get(@PathParam(\"id\") final int internalId)", "class_method_signature": "ComponentResource.get(@PathParam(\"id\") final int internalId)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(@Context final UriInfo uriinfo, @QueryParam(\"url\") final String url)", "modifiers": "@POST @Consumes(MediaType.APPLICATION_JSON) @Path(\"/register\") @Timed @UnitOfWork @UserRequired @ApiOperation(value = \"Registers a processor/source jar from url\", response = List.class) public", "return": "Response", "signature": "Response register(@Context final UriInfo uriinfo, @QueryParam(\"url\") final String url)", "full_signature": "@POST @Consumes(MediaType.APPLICATION_JSON) @Path(\"/register\") @Timed @UnitOfWork @UserRequired @ApiOperation(value = \"Registers a processor/source jar from url\", response = List.class) public Response register(@Context final UriInfo uriinfo, @QueryParam(\"url\") final String url)", "class_method_signature": "ComponentResource.register(@Context final UriInfo uriinfo, @QueryParam(\"url\") final String url)", "testcase": false, "constructor": false}, {"identifier": "registerFromArtifactory", "parameters": "(@Context UriInfo uriinfo,\n            @NotNull final ArtifactoryRegistrationRequest request)", "modifiers": "@UserRequired @POST @Consumes(MediaType.APPLICATION_JSON) @Path(\"/artifact\") @Timed @UnitOfWork @ApiOperation(value = \"Registers a processor/source jar from artifactory\", response = List.class) public", "return": "Response", "signature": "Response registerFromArtifactory(@Context UriInfo uriinfo,\n            @NotNull final ArtifactoryRegistrationRequest request)", "full_signature": "@UserRequired @POST @Consumes(MediaType.APPLICATION_JSON) @Path(\"/artifact\") @Timed @UnitOfWork @ApiOperation(value = \"Registers a processor/source jar from artifactory\", response = List.class) public Response registerFromArtifactory(@Context UriInfo uriinfo,\n            @NotNull final ArtifactoryRegistrationRequest request)", "class_method_signature": "ComponentResource.registerFromArtifactory(@Context UriInfo uriinfo,\n            @NotNull final ArtifactoryRegistrationRequest request)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(final ComponentMetadata metadata)", "modifiers": "private", "return": "ComponentDomain", "signature": "ComponentDomain transform(final ComponentMetadata metadata)", "full_signature": "private ComponentDomain transform(final ComponentMetadata metadata)", "class_method_signature": "ComponentResource.transform(final ComponentMetadata metadata)", "testcase": false, "constructor": false}], "file": "fabric-manager/src/main/java/com/olacabs/fabric/manager/resource/ComponentResource.java"}, "focal_method": {"identifier": "get", "parameters": "(@PathParam(\"namespace\") final String namespace, @PathParam(\"name\") final String name,\n            @PathParam(\"version\") final String version)", "modifiers": "@GET @Path(\"/{namespace}/{name}/{version}\") @Timed @UnitOfWork(transactional = false) @ApiOperation(value = \"Get component based on namespace, name and version\", response = ComponentDomain.class) public", "return": "Response", "body": "@GET\n    @Path(\"/{namespace}/{name}/{version}\")\n    @Timed\n    @UnitOfWork(transactional = false)\n    @ApiOperation(value = \"Get component based on namespace, name and version\", response = ComponentDomain.class)\n    public Response get(@PathParam(\"namespace\") final String namespace, @PathParam(\"name\") final String name,\n            @PathParam(\"version\") final String version) {\n        final Set<ComponentDomain> components = service.search(namespace, name, version);\n        if (components.isEmpty()) {\n            throw new NotFoundException(String.format(\"Component with namespace: %s, name: %s, version: %s not found\",\n                    namespace, name, version));\n        }\n        return Response.ok().entity(components.iterator().next()).build();\n    }", "signature": "Response get(@PathParam(\"namespace\") final String namespace, @PathParam(\"name\") final String name,\n            @PathParam(\"version\") final String version)", "full_signature": "@GET @Path(\"/{namespace}/{name}/{version}\") @Timed @UnitOfWork(transactional = false) @ApiOperation(value = \"Get component based on namespace, name and version\", response = ComponentDomain.class) public Response get(@PathParam(\"namespace\") final String namespace, @PathParam(\"name\") final String name,\n            @PathParam(\"version\") final String version)", "class_method_signature": "ComponentResource.get(@PathParam(\"namespace\") final String namespace, @PathParam(\"name\") final String name,\n            @PathParam(\"version\") final String version)", "testcase": false, "constructor": false, "invocations": ["search", "isEmpty", "format", "build", "entity", "ok", "next", "iterator"]}, "repository": {"repo_id": 71972621, "url": "https://github.com/olacabs/fabric", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 43, "size": 234, "license": "licensed"}}