{"test_class": {"identifier": "HerdProcessEngineConfiguratorTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    HerdProcessEngineConfigurator herdProcessEngineConfigurator;", "modifier": "@Autowired", "type": "HerdProcessEngineConfigurator", "declarator": "herdProcessEngineConfigurator", "var_name": "herdProcessEngineConfigurator"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/activiti/HerdProcessEngineConfiguratorTest.java"}, "test_case": {"identifier": "testNoStringAndLongStringType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNoStringAndLongStringType() throws Exception\n    {\n        SpringProcessEngineConfiguration configuration = new SpringProcessEngineConfiguration();\n        configuration.setVariableTypes(new DefaultVariableTypes());\n        \n        herdProcessEngineConfigurator.configure(configuration);\n        VariableType type = configuration.getVariableTypes().findVariableType(StringUtils.repeat(\"a\", 2000));\n        assertEquals(StringType.class, type.getClass());\n        \n        type = configuration.getVariableTypes().findVariableType(StringUtils.repeat(\"a\", 2001));\n        assertEquals(LongStringType.class, type.getClass());\n    }", "signature": "void testNoStringAndLongStringType()", "full_signature": "@Test public void testNoStringAndLongStringType()", "class_method_signature": "HerdProcessEngineConfiguratorTest.testNoStringAndLongStringType()", "testcase": true, "constructor": false, "invocations": ["setVariableTypes", "configure", "findVariableType", "getVariableTypes", "repeat", "assertEquals", "getClass", "findVariableType", "getVariableTypes", "repeat", "assertEquals", "getClass"]}, "focal_class": {"identifier": "HerdProcessEngineConfigurator", "superclass": "", "interfaces": "implements ProcessEngineConfigurator", "fields": [], "methods": [{"identifier": "beforeInit", "parameters": "(ProcessEngineConfigurationImpl configuration)", "modifiers": "@Override public", "return": "void", "signature": "void beforeInit(ProcessEngineConfigurationImpl configuration)", "full_signature": "@Override public void beforeInit(ProcessEngineConfigurationImpl configuration)", "class_method_signature": "HerdProcessEngineConfigurator.beforeInit(ProcessEngineConfigurationImpl configuration)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(ProcessEngineConfigurationImpl processEngineConfiguration)", "modifiers": "@Override public", "return": "void", "signature": "void configure(ProcessEngineConfigurationImpl processEngineConfiguration)", "full_signature": "@Override public void configure(ProcessEngineConfigurationImpl processEngineConfiguration)", "class_method_signature": "HerdProcessEngineConfigurator.configure(ProcessEngineConfigurationImpl processEngineConfiguration)", "testcase": false, "constructor": false}, {"identifier": "getPriority", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getPriority()", "full_signature": "@Override public int getPriority()", "class_method_signature": "HerdProcessEngineConfigurator.getPriority()", "testcase": false, "constructor": false}, {"identifier": "replaceVariableType", "parameters": "(VariableTypes variableTypes, VariableType variableTypeToReplace, int indexToInsert)", "modifiers": "private", "return": "int", "signature": "int replaceVariableType(VariableTypes variableTypes, VariableType variableTypeToReplace, int indexToInsert)", "full_signature": "private int replaceVariableType(VariableTypes variableTypes, VariableType variableTypeToReplace, int indexToInsert)", "class_method_signature": "HerdProcessEngineConfigurator.replaceVariableType(VariableTypes variableTypes, VariableType variableTypeToReplace, int indexToInsert)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/activiti/HerdProcessEngineConfigurator.java"}, "focal_method": {"identifier": "configure", "parameters": "(ProcessEngineConfigurationImpl processEngineConfiguration)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void configure(ProcessEngineConfigurationImpl processEngineConfiguration)\n    {\n        // There is an issue when using Activiti with Oracle. When workflow variables have a length greater then 2000 and smaller than 4001,\n        // Activiti tries to store that as a String column, but the Oracle database column length (ACT_RU_VARIABLE.TEXT_, ACT_HI_VARINST.TEXT_) is 2000.\n        // Since Activiti uses NVARCHAR as the column type which requires 2 bytes for every character, the maximum size Oracle allows for the column is\n        // 2000 (i.e. 4000 bytes).\n\n        // Replace the StringType and LongType to store greater than 2000 length variables as blob.\n        VariableTypes variableTypes = processEngineConfiguration.getVariableTypes();\n\n        VariableType stringType = new StringType(2000);\n        int indexToInsert = replaceVariableType(variableTypes, stringType, 0);\n\n        VariableType longStringType = new LongStringType(2001);\n        replaceVariableType(variableTypes, longStringType, ++indexToInsert);\n    }", "signature": "void configure(ProcessEngineConfigurationImpl processEngineConfiguration)", "full_signature": "@Override public void configure(ProcessEngineConfigurationImpl processEngineConfiguration)", "class_method_signature": "HerdProcessEngineConfigurator.configure(ProcessEngineConfigurationImpl processEngineConfiguration)", "testcase": false, "constructor": false, "invocations": ["getVariableTypes", "replaceVariableType", "replaceVariableType"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}