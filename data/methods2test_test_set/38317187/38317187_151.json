{"test_class": {"identifier": "DataProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int PAGE_SIZE = 10;", "modifier": "private static final", "type": "int", "declarator": "PAGE_SIZE = 10", "var_name": "PAGE_SIZE"}, {"original_string": "private static final int[] EVEN = new int[]{0, 2, 4, 6, 8};", "modifier": "private static final", "type": "int[]", "declarator": "EVEN = new int[]{0, 2, 4, 6, 8}", "var_name": "EVEN"}, {"original_string": "private static final int[] BY_THREE = new int[]{0, 3, 6, 9};", "modifier": "private static final", "type": "int[]", "declarator": "BY_THREE = new int[]{0, 3, 6, 9}", "var_name": "BY_THREE"}, {"original_string": "private static final int[] COMBINED = new int[]{0, 6};", "modifier": "private static final", "type": "int[]", "declarator": "COMBINED = new int[]{0, 6}", "var_name": "COMBINED"}, {"original_string": "private static final Function<Integer, String> IDENTIFIER = String::valueOf;", "modifier": "private static final", "type": "Function<Integer, String>", "declarator": "IDENTIFIER = String::valueOf", "var_name": "IDENTIFIER"}, {"original_string": "private static final Filter<Integer> DIVISIBLE = (number, filter) -> number % parseInt(filter) == 0;", "modifier": "private static final", "type": "Filter<Integer>", "declarator": "DIVISIBLE = (number, filter) -> number % parseInt(filter) == 0", "var_name": "DIVISIBLE"}, {"original_string": "private DataProvider<Integer> single;", "modifier": "private", "type": "DataProvider<Integer>", "declarator": "single", "var_name": "single"}, {"original_string": "private DataProvider<Integer> multi;", "modifier": "private", "type": "DataProvider<Integer>", "declarator": "multi", "var_name": "multi"}, {"original_string": "private Display<Integer> display;", "modifier": "private", "type": "Display<Integer>", "declarator": "display", "var_name": "display"}, {"original_string": "private SelectHandler<Integer> selectHandler;", "modifier": "private", "type": "SelectHandler<Integer>", "declarator": "selectHandler", "var_name": "selectHandler"}], "file": "ballroom/src/test/java/org/jboss/hal/ballroom/dataprovider/DataProviderTest.java"}, "test_case": {"identifier": "setPageSize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setPageSize() throws Exception {\n        int[] items = items(PAGE_SIZE);\n        single.update(asList(items));\n        assertVisibleFilteredAll(single, items(PAGE_SIZE), items, items);\n        verify(display).showItems(itemsMatcher(items(PAGE_SIZE)), eq(new PageInfo(PAGE_SIZE, 0, PAGE_SIZE, PAGE_SIZE)));\n\n        single.setPageSize(6);\n        assertVisibleFilteredAll(single, items(6), items, items);\n        verify(display).showItems(itemsMatcher(items(6)), eq(new PageInfo(6, 0, 6, PAGE_SIZE)));\n    }", "signature": "void setPageSize()", "full_signature": "@Test public void setPageSize()", "class_method_signature": "DataProviderTest.setPageSize()", "testcase": true, "constructor": false, "invocations": ["items", "update", "asList", "assertVisibleFilteredAll", "items", "showItems", "verify", "itemsMatcher", "items", "eq", "setPageSize", "assertVisibleFilteredAll", "items", "showItems", "verify", "itemsMatcher", "items", "eq"]}, "focal_class": {"identifier": "DataProvider", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Function<T, String> identifier;", "modifier": "private final", "type": "Function<T, String>", "declarator": "identifier", "var_name": "identifier"}, {"original_string": "private final PageInfo pageInfo;", "modifier": "private final", "type": "PageInfo", "declarator": "pageInfo", "var_name": "pageInfo"}, {"original_string": "private final SelectionInfo<T> selectionInfo;", "modifier": "private final", "type": "SelectionInfo<T>", "declarator": "selectionInfo", "var_name": "selectionInfo"}, {"original_string": "private final Map<String, T> allItems;", "modifier": "private final", "type": "Map<String, T>", "declarator": "allItems", "var_name": "allItems"}, {"original_string": "private final Map<String, FilterValue<T>> filterValues;", "modifier": "private final", "type": "Map<String, FilterValue<T>>", "declarator": "filterValues", "var_name": "filterValues"}, {"original_string": "private final List<Display<T>> displays;", "modifier": "private final", "type": "List<Display<T>>", "declarator": "displays", "var_name": "displays"}, {"original_string": "private List<SelectHandler<T>> selectHandler;", "modifier": "private", "type": "List<SelectHandler<T>>", "declarator": "selectHandler", "var_name": "selectHandler"}, {"original_string": "private Map<String, T> filteredItems;", "modifier": "private", "type": "Map<String, T>", "declarator": "filteredItems", "var_name": "filteredItems"}, {"original_string": "private Map<String, T> visibleItems;", "modifier": "private", "type": "Map<String, T>", "declarator": "visibleItems", "var_name": "visibleItems"}, {"original_string": "private Comparator<T> comparator;", "modifier": "private", "type": "Comparator<T>", "declarator": "comparator", "var_name": "comparator"}], "methods": [{"identifier": "DataProvider", "parameters": "(Function<T, String> identifier, boolean multiSelect)", "modifiers": "public", "return": "", "signature": " DataProvider(Function<T, String> identifier, boolean multiSelect)", "full_signature": "public  DataProvider(Function<T, String> identifier, boolean multiSelect)", "class_method_signature": "DataProvider.DataProvider(Function<T, String> identifier, boolean multiSelect)", "testcase": false, "constructor": true}, {"identifier": "DataProvider", "parameters": "(Function<T, String> identifier, boolean multiSelect, int pageSize)", "modifiers": "", "return": "", "signature": " DataProvider(Function<T, String> identifier, boolean multiSelect, int pageSize)", "full_signature": "  DataProvider(Function<T, String> identifier, boolean multiSelect, int pageSize)", "class_method_signature": "DataProvider.DataProvider(Function<T, String> identifier, boolean multiSelect, int pageSize)", "testcase": false, "constructor": true}, {"identifier": "update", "parameters": "(Iterable<T> items)", "modifiers": "public", "return": "void", "signature": "void update(Iterable<T> items)", "full_signature": "public void update(Iterable<T> items)", "class_method_signature": "DataProvider.update(Iterable<T> items)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(T item)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(T item)", "full_signature": "public boolean contains(T item)", "class_method_signature": "DataProvider.contains(T item)", "testcase": false, "constructor": false}, {"identifier": "isVisible", "parameters": "(T item)", "modifiers": "public", "return": "boolean", "signature": "boolean isVisible(T item)", "full_signature": "public boolean isVisible(T item)", "class_method_signature": "DataProvider.isVisible(T item)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "(T item)", "modifiers": "public", "return": "String", "signature": "String getId(T item)", "full_signature": "public String getId(T item)", "class_method_signature": "DataProvider.getId(T item)", "testcase": false, "constructor": false}, {"identifier": "getAllItems", "parameters": "()", "modifiers": "public", "return": "Iterable<T>", "signature": "Iterable<T> getAllItems()", "full_signature": "public Iterable<T> getAllItems()", "class_method_signature": "DataProvider.getAllItems()", "testcase": false, "constructor": false}, {"identifier": "getFilteredItems", "parameters": "()", "modifiers": "public", "return": "Iterable<T>", "signature": "Iterable<T> getFilteredItems()", "full_signature": "public Iterable<T> getFilteredItems()", "class_method_signature": "DataProvider.getFilteredItems()", "testcase": false, "constructor": false}, {"identifier": "getVisibleItems", "parameters": "()", "modifiers": "public", "return": "Iterable<T>", "signature": "Iterable<T> getVisibleItems()", "full_signature": "public Iterable<T> getVisibleItems()", "class_method_signature": "DataProvider.getVisibleItems()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void reset()", "full_signature": "private void reset()", "class_method_signature": "DataProvider.reset()", "testcase": false, "constructor": false}, {"identifier": "applyFilterSortAndPaging", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void applyFilterSortAndPaging()", "full_signature": "private void applyFilterSortAndPaging()", "class_method_signature": "DataProvider.applyFilterSortAndPaging()", "testcase": false, "constructor": false}, {"identifier": "toLinkedMap", "parameters": "(Function<? super T, ? extends String> keyMapper,\n            Function<? super T, ? extends T> valueMapper)", "modifiers": "private", "return": "Collector<T, ?, Map<String, T>>", "signature": "Collector<T, ?, Map<String, T>> toLinkedMap(Function<? super T, ? extends String> keyMapper,\n            Function<? super T, ? extends T> valueMapper)", "full_signature": "private Collector<T, ?, Map<String, T>> toLinkedMap(Function<? super T, ? extends String> keyMapper,\n            Function<? super T, ? extends T> valueMapper)", "class_method_signature": "DataProvider.toLinkedMap(Function<? super T, ? extends String> keyMapper,\n            Function<? super T, ? extends T> valueMapper)", "testcase": false, "constructor": false}, {"identifier": "onSelect", "parameters": "(SelectHandler<T> selectHandler)", "modifiers": "public", "return": "void", "signature": "void onSelect(SelectHandler<T> selectHandler)", "full_signature": "public void onSelect(SelectHandler<T> selectHandler)", "class_method_signature": "DataProvider.onSelect(SelectHandler<T> selectHandler)", "testcase": false, "constructor": false}, {"identifier": "selectAll", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void selectAll()", "full_signature": "public void selectAll()", "class_method_signature": "DataProvider.selectAll()", "testcase": false, "constructor": false}, {"identifier": "selectVisible", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void selectVisible()", "full_signature": "public void selectVisible()", "class_method_signature": "DataProvider.selectVisible()", "testcase": false, "constructor": false}, {"identifier": "clearAllSelection", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearAllSelection()", "full_signature": "public void clearAllSelection()", "class_method_signature": "DataProvider.clearAllSelection()", "testcase": false, "constructor": false}, {"identifier": "clearVisibleSelection", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearVisibleSelection()", "full_signature": "public void clearVisibleSelection()", "class_method_signature": "DataProvider.clearVisibleSelection()", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(T item, boolean select)", "modifiers": "public", "return": "void", "signature": "void select(T item, boolean select)", "full_signature": "public void select(T item, boolean select)", "class_method_signature": "DataProvider.select(T item, boolean select)", "testcase": false, "constructor": false}, {"identifier": "getSelectionInfo", "parameters": "()", "modifiers": "public", "return": "SelectionInfo<T>", "signature": "SelectionInfo<T> getSelectionInfo()", "full_signature": "public SelectionInfo<T> getSelectionInfo()", "class_method_signature": "DataProvider.getSelectionInfo()", "testcase": false, "constructor": false}, {"identifier": "selectInternal", "parameters": "(String id, T item, boolean select)", "modifiers": "private", "return": "void", "signature": "void selectInternal(String id, T item, boolean select)", "full_signature": "private void selectInternal(String id, T item, boolean select)", "class_method_signature": "DataProvider.selectInternal(String id, T item, boolean select)", "testcase": false, "constructor": false}, {"identifier": "fireSelection", "parameters": "(T item)", "modifiers": "private", "return": "void", "signature": "void fireSelection(T item)", "full_signature": "private void fireSelection(T item)", "class_method_signature": "DataProvider.fireSelection(T item)", "testcase": false, "constructor": false}, {"identifier": "addFilter", "parameters": "(String name, FilterValue<T> filter)", "modifiers": "public", "return": "void", "signature": "void addFilter(String name, FilterValue<T> filter)", "full_signature": "public void addFilter(String name, FilterValue<T> filter)", "class_method_signature": "DataProvider.addFilter(String name, FilterValue<T> filter)", "testcase": false, "constructor": false}, {"identifier": "removeFilter", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void removeFilter(String name)", "full_signature": "public void removeFilter(String name)", "class_method_signature": "DataProvider.removeFilter(String name)", "testcase": false, "constructor": false}, {"identifier": "clearFilters", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearFilters()", "full_signature": "public void clearFilters()", "class_method_signature": "DataProvider.clearFilters()", "testcase": false, "constructor": false}, {"identifier": "getFilter", "parameters": "(String name)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "FilterValue<T>", "signature": "FilterValue<T> getFilter(String name)", "full_signature": "@SuppressWarnings(\"unchecked\") public FilterValue<T> getFilter(String name)", "class_method_signature": "DataProvider.getFilter(String name)", "testcase": false, "constructor": false}, {"identifier": "hasFilters", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasFilters()", "full_signature": "public boolean hasFilters()", "class_method_signature": "DataProvider.hasFilters()", "testcase": false, "constructor": false}, {"identifier": "setComparator", "parameters": "(Comparator<T> comparator)", "modifiers": "public", "return": "void", "signature": "void setComparator(Comparator<T> comparator)", "full_signature": "public void setComparator(Comparator<T> comparator)", "class_method_signature": "DataProvider.setComparator(Comparator<T> comparator)", "testcase": false, "constructor": false}, {"identifier": "getComparator", "parameters": "()", "modifiers": "public", "return": "Comparator<T>", "signature": "Comparator<T> getComparator()", "full_signature": "public Comparator<T> getComparator()", "class_method_signature": "DataProvider.getComparator()", "testcase": false, "constructor": false}, {"identifier": "setPageSize", "parameters": "(int pageSize)", "modifiers": "public", "return": "void", "signature": "void setPageSize(int pageSize)", "full_signature": "public void setPageSize(int pageSize)", "class_method_signature": "DataProvider.setPageSize(int pageSize)", "testcase": false, "constructor": false}, {"identifier": "gotoFirstPage", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void gotoFirstPage()", "full_signature": "public void gotoFirstPage()", "class_method_signature": "DataProvider.gotoFirstPage()", "testcase": false, "constructor": false}, {"identifier": "gotoPreviousPage", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void gotoPreviousPage()", "full_signature": "public void gotoPreviousPage()", "class_method_signature": "DataProvider.gotoPreviousPage()", "testcase": false, "constructor": false}, {"identifier": "gotoNextPage", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void gotoNextPage()", "full_signature": "public void gotoNextPage()", "class_method_signature": "DataProvider.gotoNextPage()", "testcase": false, "constructor": false}, {"identifier": "gotoLastPage", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void gotoLastPage()", "full_signature": "public void gotoLastPage()", "class_method_signature": "DataProvider.gotoLastPage()", "testcase": false, "constructor": false}, {"identifier": "gotoPage", "parameters": "(int page)", "modifiers": "public", "return": "void", "signature": "void gotoPage(int page)", "full_signature": "public void gotoPage(int page)", "class_method_signature": "DataProvider.gotoPage(int page)", "testcase": false, "constructor": false}, {"identifier": "getPageInfo", "parameters": "()", "modifiers": "public", "return": "PageInfo", "signature": "PageInfo getPageInfo()", "full_signature": "public PageInfo getPageInfo()", "class_method_signature": "DataProvider.getPageInfo()", "testcase": false, "constructor": false}, {"identifier": "paged", "parameters": "(List<T> values)", "modifiers": "private", "return": "List<T>", "signature": "List<T> paged(List<T> values)", "full_signature": "private List<T> paged(List<T> values)", "class_method_signature": "DataProvider.paged(List<T> values)", "testcase": false, "constructor": false}, {"identifier": "addDisplay", "parameters": "(Display<T> display)", "modifiers": "public", "return": "void", "signature": "void addDisplay(Display<T> display)", "full_signature": "public void addDisplay(Display<T> display)", "class_method_signature": "DataProvider.addDisplay(Display<T> display)", "testcase": false, "constructor": false}, {"identifier": "showItems", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void showItems()", "full_signature": "private void showItems()", "class_method_signature": "DataProvider.showItems()", "testcase": false, "constructor": false}, {"identifier": "updateSelection", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updateSelection()", "full_signature": "private void updateSelection()", "class_method_signature": "DataProvider.updateSelection()", "testcase": false, "constructor": false}], "file": "ballroom/src/main/java/org/jboss/hal/ballroom/dataprovider/DataProvider.java"}, "focal_method": {"identifier": "setPageSize", "parameters": "(int pageSize)", "modifiers": "public", "return": "void", "body": "public void setPageSize(int pageSize) {\n        int oldPageSize = pageInfo.getPageSize();\n        pageInfo.setPageSize(pageSize);\n        if (oldPageSize != pageInfo.getPageSize()) {\n            applyFilterSortAndPaging();\n            showItems();\n            updateSelection();\n        }\n    }", "signature": "void setPageSize(int pageSize)", "full_signature": "public void setPageSize(int pageSize)", "class_method_signature": "DataProvider.setPageSize(int pageSize)", "testcase": false, "constructor": false, "invocations": ["getPageSize", "setPageSize", "getPageSize", "applyFilterSortAndPaging", "showItems", "updateSelection"]}, "repository": {"repo_id": 38317187, "url": "https://github.com/hal/console", "stars": 34, "created": "6/30/2015 3:26:19 PM +00:00", "updates": "2020-01-26T16:25:43+00:00", "fork": "False", "license": "licensed"}}