{"test_class": {"identifier": "TrigonometricSeriesTest", "superclass": "", "interfaces": "", "fields": [], "file": "jtstoolkit/src/test/java/ec/tstoolkit/data/TrigonometricSeriesTest.java"}, "test_case": {"identifier": "testRegular", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRegular() {\n        TrigonometricSeries regular = TrigonometricSeries.regular(12);\n        Matrix matrix = regular.matrix(60);\n        //System.out.println(matrix);\n    }", "signature": "void testRegular()", "full_signature": "@Test public void testRegular()", "class_method_signature": "TrigonometricSeriesTest.testRegular()", "testcase": true, "constructor": false, "invocations": ["regular", "matrix"]}, "focal_class": {"identifier": "TrigonometricSeries", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final double[] w;", "modifier": "private final", "type": "double[]", "declarator": "w", "var_name": "w"}], "methods": [{"identifier": "regular", "parameters": "(int periodicity)", "modifiers": "public static", "return": "TrigonometricSeries", "signature": "TrigonometricSeries regular(int periodicity)", "full_signature": "public static TrigonometricSeries regular(int periodicity)", "class_method_signature": "TrigonometricSeries.regular(int periodicity)", "testcase": false, "constructor": false}, {"identifier": "regular", "parameters": "(int periodicity, int[] seasfreq)", "modifiers": "public static", "return": "TrigonometricSeries", "signature": "TrigonometricSeries regular(int periodicity, int[] seasfreq)", "full_signature": "public static TrigonometricSeries regular(int periodicity, int[] seasfreq)", "class_method_signature": "TrigonometricSeries.regular(int periodicity, int[] seasfreq)", "testcase": false, "constructor": false}, {"identifier": "all", "parameters": "(double periodicity, int nfreq)", "modifiers": "public static", "return": "TrigonometricSeries", "signature": "TrigonometricSeries all(double periodicity, int nfreq)", "full_signature": "public static TrigonometricSeries all(double periodicity, int nfreq)", "class_method_signature": "TrigonometricSeries.all(double periodicity, int nfreq)", "testcase": false, "constructor": false}, {"identifier": "TrigonometricSeries", "parameters": "(double[] freq)", "modifiers": "public", "return": "", "signature": " TrigonometricSeries(double[] freq)", "full_signature": "public  TrigonometricSeries(double[] freq)", "class_method_signature": "TrigonometricSeries.TrigonometricSeries(double[] freq)", "testcase": false, "constructor": true}, {"identifier": "matrix", "parameters": "(int len)", "modifiers": "public", "return": "Matrix", "signature": "Matrix matrix(int len)", "full_signature": "public Matrix matrix(int len)", "class_method_signature": "TrigonometricSeries.matrix(int len)", "testcase": false, "constructor": false}, {"identifier": "matrix", "parameters": "(int start, int len)", "modifiers": "public", "return": "Matrix", "signature": "Matrix matrix(int start, int len)", "full_signature": "public Matrix matrix(int start, int len)", "class_method_signature": "TrigonometricSeries.matrix(int start, int len)", "testcase": false, "constructor": false}], "file": "jtstoolkit/src/main/java/ec/tstoolkit/data/TrigonometricSeries.java"}, "focal_method": {"identifier": "regular", "parameters": "(int periodicity)", "modifiers": "public static", "return": "TrigonometricSeries", "body": "public static TrigonometricSeries regular(int periodicity) {\n        int n = periodicity / 2;\n        double[] freq = new double[n];\n        double f = 2.0 / periodicity;\n        for (int i = 1; i <= n; ++i) {\n            freq[i - 1] = f * i;\n        }\n        return new TrigonometricSeries(freq);\n    }", "signature": "TrigonometricSeries regular(int periodicity)", "full_signature": "public static TrigonometricSeries regular(int periodicity)", "class_method_signature": "TrigonometricSeries.regular(int periodicity)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}