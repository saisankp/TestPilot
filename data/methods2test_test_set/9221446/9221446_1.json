{"test_class": {"identifier": "TestAbstractWrapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static StorageManager sm;", "modifier": "private static", "type": "StorageManager", "declarator": "sm", "var_name": "sm"}], "file": "modules/x-gsn/src/main/java/org/openiot/gsn/wrappers/TestAbstractWrapper.java"}, "test_case": {"identifier": "testSendToWrapper1", "parameters": "()", "modifiers": "@Test (expected=OperationNotSupportedException.class) public", "return": "void", "body": "@Test (expected=OperationNotSupportedException.class)\n\tpublic void testSendToWrapper1() throws OperationNotSupportedException {\n\t\tSystemTime systemTimeWrapper = new SystemTime();\n\t\tsystemTimeWrapper.sendToWrapper(\"bla\");\n\t}", "signature": "void testSendToWrapper1()", "full_signature": "@Test (expected=OperationNotSupportedException.class) public void testSendToWrapper1()", "class_method_signature": "TestAbstractWrapper.testSendToWrapper1()", "testcase": true, "constructor": false, "invocations": ["sendToWrapper"]}, "focal_class": {"identifier": "AbstractWrapper", "superclass": "extends Thread", "interfaces": "", "fields": [{"original_string": "private final static transient Logger logger = Logger\n\t\t\t.getLogger(AbstractWrapper.class);", "modifier": "private final static transient", "type": "Logger", "declarator": "logger = Logger\n\t\t\t.getLogger(AbstractWrapper.class)", "var_name": "logger"}, {"original_string": "protected final List<StreamSource> listeners = Collections\n\t\t\t.synchronizedList(new ArrayList<StreamSource>());", "modifier": "protected final", "type": "List<StreamSource>", "declarator": "listeners = Collections\n\t\t\t.synchronizedList(new ArrayList<StreamSource>())", "var_name": "listeners"}, {"original_string": "private AddressBean activeAddressBean;", "modifier": "private", "type": "AddressBean", "declarator": "activeAddressBean", "var_name": "activeAddressBean"}, {"original_string": "private boolean isActive = true;", "modifier": "private", "type": "boolean", "declarator": "isActive = true", "var_name": "isActive"}, {"original_string": "private SlidingHandler tupleBasedSlidingHandler;", "modifier": "private", "type": "SlidingHandler", "declarator": "tupleBasedSlidingHandler", "var_name": "tupleBasedSlidingHandler"}, {"original_string": "private SlidingHandler timeBasedSlidingHandler;", "modifier": "private", "type": "SlidingHandler", "declarator": "timeBasedSlidingHandler", "var_name": "timeBasedSlidingHandler"}, {"original_string": "private HashMap<Class, SlidingHandler> slidingHandlers = new HashMap<Class, SlidingHandler>();", "modifier": "private", "type": "HashMap<Class, SlidingHandler>", "declarator": "slidingHandlers = new HashMap<Class, SlidingHandler>()", "var_name": "slidingHandlers"}, {"original_string": "private boolean usingRemoteTimestamp = false;", "modifier": "private", "type": "boolean", "declarator": "usingRemoteTimestamp = false", "var_name": "usingRemoteTimestamp"}, {"original_string": "private Long lastInOrderTimestamp;", "modifier": "private", "type": "Long", "declarator": "lastInOrderTimestamp", "var_name": "lastInOrderTimestamp"}, {"original_string": "public static final int GARBAGE_COLLECT_AFTER_SPECIFIED_NO_OF_ELEMENTS = 2;", "modifier": "public static final", "type": "int", "declarator": "GARBAGE_COLLECT_AFTER_SPECIFIED_NO_OF_ELEMENTS = 2", "var_name": "GARBAGE_COLLECT_AFTER_SPECIFIED_NO_OF_ELEMENTS"}, {"original_string": "private long noOfCallsToPostSE = 0;", "modifier": "private", "type": "long", "declarator": "noOfCallsToPostSE = 0", "var_name": "noOfCallsToPostSE"}, {"original_string": "private final transient int aliasCode = Main.getWindowStorage().tableNameGenerator();", "modifier": "private final transient", "type": "int", "declarator": "aliasCode = Main.getWindowStorage().tableNameGenerator()", "var_name": "aliasCode"}, {"original_string": "private final CharSequence aliasCodeS = Main.getWindowStorage().tableNameGeneratorInString(aliasCode);", "modifier": "private final", "type": "CharSequence", "declarator": "aliasCodeS = Main.getWindowStorage().tableNameGeneratorInString(aliasCode)", "var_name": "aliasCodeS"}, {"original_string": "public static final String TIME_FIELD = \"timed\";", "modifier": "public static final", "type": "String", "declarator": "TIME_FIELD = \"timed\"", "var_name": "TIME_FIELD"}], "methods": [{"identifier": "addListener", "parameters": "(StreamSource ss)", "modifiers": "public", "return": "void", "signature": "void addListener(StreamSource ss)", "full_signature": "public void addListener(StreamSource ss)", "class_method_signature": "AbstractWrapper.addListener(StreamSource ss)", "testcase": false, "constructor": false}, {"identifier": "addSlidingHandler", "parameters": "(SlidingHandler slidingHandler)", "modifiers": "public", "return": "void", "signature": "void addSlidingHandler(SlidingHandler slidingHandler)", "full_signature": "public void addSlidingHandler(SlidingHandler slidingHandler)", "class_method_signature": "AbstractWrapper.addSlidingHandler(SlidingHandler slidingHandler)", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(StreamSource ss)", "modifiers": "public", "return": "void", "signature": "void removeListener(StreamSource ss)", "full_signature": "public void removeListener(StreamSource ss)", "class_method_signature": "AbstractWrapper.removeListener(StreamSource ss)", "testcase": false, "constructor": false}, {"identifier": "getListeners", "parameters": "()", "modifiers": "public", "return": "List<StreamSource>", "signature": "List<StreamSource> getListeners()", "full_signature": "public List<StreamSource> getListeners()", "class_method_signature": "AbstractWrapper.getListeners()", "testcase": false, "constructor": false}, {"identifier": "sendToWrapper", "parameters": "(String action, String[] paramNames,\n\t\t\tObject[] paramValues)", "modifiers": "public", "return": "boolean", "signature": "boolean sendToWrapper(String action, String[] paramNames,\n\t\t\tObject[] paramValues)", "full_signature": "public boolean sendToWrapper(String action, String[] paramNames,\n\t\t\tObject[] paramValues)", "class_method_signature": "AbstractWrapper.sendToWrapper(String action, String[] paramNames,\n\t\t\tObject[] paramValues)", "testcase": false, "constructor": false}, {"identifier": "getActiveAddressBean", "parameters": "()", "modifiers": "public final", "return": "AddressBean", "signature": "AddressBean getActiveAddressBean()", "full_signature": "public final AddressBean getActiveAddressBean()", "class_method_signature": "AbstractWrapper.getActiveAddressBean()", "testcase": false, "constructor": false}, {"identifier": "setActiveAddressBean", "parameters": "(AddressBean newVal)", "modifiers": "public", "return": "void", "signature": "void setActiveAddressBean(AddressBean newVal)", "full_signature": "public void setActiveAddressBean(AddressBean newVal)", "class_method_signature": "AbstractWrapper.setActiveAddressBean(AddressBean newVal)", "testcase": false, "constructor": false}, {"identifier": "getDBAlias", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDBAlias()", "full_signature": "public int getDBAlias()", "class_method_signature": "AbstractWrapper.getDBAlias()", "testcase": false, "constructor": false}, {"identifier": "getDBAliasInStr", "parameters": "()", "modifiers": "public", "return": "CharSequence", "signature": "CharSequence getDBAliasInStr()", "full_signature": "public CharSequence getDBAliasInStr()", "class_method_signature": "AbstractWrapper.getDBAliasInStr()", "testcase": false, "constructor": false}, {"identifier": "getOutputFormat", "parameters": "()", "modifiers": "public abstract", "return": "DataField[]", "signature": "DataField[] getOutputFormat()", "full_signature": "public abstract DataField[] getOutputFormat()", "class_method_signature": "AbstractWrapper.getOutputFormat()", "testcase": false, "constructor": false}, {"identifier": "isActive", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isActive()", "full_signature": "public boolean isActive()", "class_method_signature": "AbstractWrapper.isActive()", "testcase": false, "constructor": false}, {"identifier": "postStreamElement", "parameters": "(Serializable... values)", "modifiers": "protected", "return": "void", "signature": "void postStreamElement(Serializable... values)", "full_signature": "protected void postStreamElement(Serializable... values)", "class_method_signature": "AbstractWrapper.postStreamElement(Serializable... values)", "testcase": false, "constructor": false}, {"identifier": "postStreamElement", "parameters": "(long timestamp, Serializable[] values)", "modifiers": "protected", "return": "void", "signature": "void postStreamElement(long timestamp, Serializable[] values)", "full_signature": "protected void postStreamElement(long timestamp, Serializable[] values)", "class_method_signature": "AbstractWrapper.postStreamElement(long timestamp, Serializable[] values)", "testcase": false, "constructor": false}, {"identifier": "postStreamElement", "parameters": "(StreamElement streamElement)", "modifiers": "protected", "return": "Boolean", "signature": "Boolean postStreamElement(StreamElement streamElement)", "full_signature": "protected Boolean postStreamElement(StreamElement streamElement)", "class_method_signature": "AbstractWrapper.postStreamElement(StreamElement streamElement)", "testcase": false, "constructor": false}, {"identifier": "insertIntoWrapperTable", "parameters": "(StreamElement se)", "modifiers": "public", "return": "boolean", "signature": "boolean insertIntoWrapperTable(StreamElement se)", "full_signature": "public boolean insertIntoWrapperTable(StreamElement se)", "class_method_signature": "AbstractWrapper.insertIntoWrapperTable(StreamElement se)", "testcase": false, "constructor": false}, {"identifier": "isOutOfOrder", "parameters": "(StreamElement se)", "modifiers": "public", "return": "boolean", "signature": "boolean isOutOfOrder(StreamElement se)", "full_signature": "public boolean isOutOfOrder(StreamElement se)", "class_method_signature": "AbstractWrapper.isOutOfOrder(StreamElement se)", "testcase": false, "constructor": false}, {"identifier": "sendToWrapper", "parameters": "(Object dataItem)", "modifiers": "public", "return": "boolean", "signature": "boolean sendToWrapper(Object dataItem)", "full_signature": "public boolean sendToWrapper(Object dataItem)", "class_method_signature": "AbstractWrapper.sendToWrapper(Object dataItem)", "testcase": false, "constructor": false}, {"identifier": "getUselessWindow", "parameters": "()", "modifiers": "public", "return": "StringBuilder", "signature": "StringBuilder getUselessWindow()", "full_signature": "public StringBuilder getUselessWindow()", "class_method_signature": "AbstractWrapper.getUselessWindow()", "testcase": false, "constructor": false}, {"identifier": "removeUselessValues", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int removeUselessValues()", "full_signature": "public int removeUselessValues()", "class_method_signature": "AbstractWrapper.removeUselessValues()", "testcase": false, "constructor": false}, {"identifier": "releaseResources", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void releaseResources()", "full_signature": "public void releaseResources()", "class_method_signature": "AbstractWrapper.releaseResources()", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "()", "modifiers": "public abstract", "return": "boolean", "signature": "boolean initialize()", "full_signature": "public abstract boolean initialize()", "class_method_signature": "AbstractWrapper.initialize()", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "public abstract", "return": "void", "signature": "void dispose()", "full_signature": "public abstract void dispose()", "class_method_signature": "AbstractWrapper.dispose()", "testcase": false, "constructor": false}, {"identifier": "getWrapperName", "parameters": "()", "modifiers": "public abstract", "return": "String", "signature": "String getWrapperName()", "full_signature": "public abstract String getWrapperName()", "class_method_signature": "AbstractWrapper.getWrapperName()", "testcase": false, "constructor": false}, {"identifier": "isUsingRemoteTimestamp", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean isUsingRemoteTimestamp()", "full_signature": "protected boolean isUsingRemoteTimestamp()", "class_method_signature": "AbstractWrapper.isUsingRemoteTimestamp()", "testcase": false, "constructor": false}, {"identifier": "setUsingRemoteTimestamp", "parameters": "(boolean usingRemoteTimestamp)", "modifiers": "protected", "return": "void", "signature": "void setUsingRemoteTimestamp(boolean usingRemoteTimestamp)", "full_signature": "protected void setUsingRemoteTimestamp(boolean usingRemoteTimestamp)", "class_method_signature": "AbstractWrapper.setUsingRemoteTimestamp(boolean usingRemoteTimestamp)", "testcase": false, "constructor": false}, {"identifier": "isTimeStampUnique", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTimeStampUnique()", "full_signature": "public boolean isTimeStampUnique()", "class_method_signature": "AbstractWrapper.isTimeStampUnique()", "testcase": false, "constructor": false}, {"identifier": "manualDataInsertion", "parameters": "(StreamElement se)", "modifiers": "public", "return": "boolean", "signature": "boolean manualDataInsertion(StreamElement se)", "full_signature": "public boolean manualDataInsertion(StreamElement se)", "class_method_signature": "AbstractWrapper.manualDataInsertion(StreamElement se)", "testcase": false, "constructor": false}], "file": "modules/x-gsn/src/main/java/org/openiot/gsn/wrappers/AbstractWrapper.java"}, "focal_method": {"identifier": "sendToWrapper", "parameters": "(String action, String[] paramNames,\n\t\t\tObject[] paramValues)", "modifiers": "public", "return": "boolean", "body": "public boolean sendToWrapper(String action, String[] paramNames,\n\t\t\tObject[] paramValues) throws OperationNotSupportedException {\n\t\tthrow new OperationNotSupportedException(\n\t\t\t\t\"This wrapper doesn't support sending data back to the source.\");\n\t}", "signature": "boolean sendToWrapper(String action, String[] paramNames,\n\t\t\tObject[] paramValues)", "full_signature": "public boolean sendToWrapper(String action, String[] paramNames,\n\t\t\tObject[] paramValues)", "class_method_signature": "AbstractWrapper.sendToWrapper(String action, String[] paramNames,\n\t\t\tObject[] paramValues)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9221446, "url": "https://github.com/OpenIotOrg/openiot", "language": "Java", "is_fork": false, "fork_count": 201, "stargazer_count": 417, "size": 101270, "license": "licensed"}}