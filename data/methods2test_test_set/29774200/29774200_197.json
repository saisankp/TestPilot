{"test_class": {"identifier": "TestQualityMeasureTest", "superclass": "", "interfaces": "", "fields": [], "file": "component/core/src/test/java/fr/norad/visuwall/api/domain/quality/TestQualityMeasureTest.java"}, "test_case": {"identifier": "should_be_equal_when_having_1_value", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_be_equal_when_having_1_value() {\n        QualityMeasure qm1 = new QualityMeasure();\n        qm1.setName(\"name\");\n\n        QualityMeasure qm2 = new QualityMeasure();\n        qm2.setName(\"name\");\n\n        assertEquals(qm1, qm2);\n    }", "signature": "void should_be_equal_when_having_1_value()", "full_signature": "@Test public void should_be_equal_when_having_1_value()", "class_method_signature": "TestQualityMeasureTest.should_be_equal_when_having_1_value()", "testcase": true, "constructor": false, "invocations": ["setName", "setName", "assertEquals"]}, "focal_class": {"identifier": "QualityMeasure", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private Double value;", "modifier": "private", "type": "Double", "declarator": "value", "var_name": "value"}, {"original_string": "private String formattedValue;", "modifier": "private", "type": "String", "declarator": "formattedValue", "var_name": "formattedValue"}, {"original_string": "private String key;", "modifier": "private", "type": "String", "declarator": "key", "var_name": "key"}], "methods": [{"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "Double", "signature": "Double getValue()", "full_signature": "public Double getValue()", "class_method_signature": "QualityMeasure.getValue()", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(Double value)", "modifiers": "public", "return": "void", "signature": "void setValue(Double value)", "full_signature": "public void setValue(Double value)", "class_method_signature": "QualityMeasure.setValue(Double value)", "testcase": false, "constructor": false}, {"identifier": "getFormattedValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFormattedValue()", "full_signature": "public String getFormattedValue()", "class_method_signature": "QualityMeasure.getFormattedValue()", "testcase": false, "constructor": false}, {"identifier": "setFormattedValue", "parameters": "(String formattedValue)", "modifiers": "public", "return": "void", "signature": "void setFormattedValue(String formattedValue)", "full_signature": "public void setFormattedValue(String formattedValue)", "class_method_signature": "QualityMeasure.setFormattedValue(String formattedValue)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "QualityMeasure.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void setName(String name)", "full_signature": "public void setName(String name)", "class_method_signature": "QualityMeasure.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "setKey", "parameters": "(String key)", "modifiers": "public", "return": "void", "signature": "void setKey(String key)", "full_signature": "public void setKey(String key)", "class_method_signature": "QualityMeasure.setKey(String key)", "testcase": false, "constructor": false}, {"identifier": "getKey", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getKey()", "full_signature": "public String getKey()", "class_method_signature": "QualityMeasure.getKey()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "QualityMeasure.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "QualityMeasure.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "QualityMeasure.toString()", "testcase": false, "constructor": false}], "file": "component/core/src/main/java/fr/norad/visuwall/api/domain/quality/QualityMeasure.java"}, "focal_method": {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "void", "body": "public void setName(String name) {\n        this.name = name;\n    }", "signature": "void setName(String name)", "full_signature": "public void setName(String name)", "class_method_signature": "QualityMeasure.setName(String name)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 29774200, "url": "https://github.com/n0rad/visuwall", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 19747, "license": "licensed"}}