{"test_class": {"identifier": "TagRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private TagRestController tagRestController;", "modifier": "@InjectMocks\n    private", "type": "TagRestController", "declarator": "tagRestController", "var_name": "tagRestController"}, {"original_string": "@Mock\n    private TagService tagService;", "modifier": "@Mock\n    private", "type": "TagService", "declarator": "tagService", "var_name": "tagService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/TagRestControllerTest.java"}, "test_case": {"identifier": "testSearchTags", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSearchTags()\n    {\n        TagSearchResponse tagSearchResponse = new TagSearchResponse(Arrays.asList(\n            new Tag(NO_ID, new TagKey(TAG_TYPE, TAG_CODE_3), TAG_DISPLAY_NAME_2, TAG_SEARCH_SCORE_MULTIPLIER_3, TAG_DESCRIPTION_3, NO_USER_ID, NO_USER_ID,\n                NO_UPDATED_TIME, new TagKey(TAG_TYPE, TAG_CODE), TAG_HAS_NO_CHILDREN),\n            new Tag(NO_ID, new TagKey(TAG_TYPE, TAG_CODE_2), TAG_DISPLAY_NAME_3, TAG_SEARCH_SCORE_MULTIPLIER_2, TAG_DESCRIPTION_2, NO_USER_ID, NO_USER_ID,\n                NO_UPDATED_TIME, new TagKey(TAG_TYPE, TAG_CODE), TAG_HAS_NO_CHILDREN)));\n\n        Set<String> searchFields = Sets.newHashSet(TagServiceImpl.DISPLAY_NAME_FIELD, TagServiceImpl.DESCRIPTION_FIELD, TagServiceImpl.PARENT_TAG_KEY_FIELD,\n            TagServiceImpl.HAS_CHILDREN_FIELD);\n        TagSearchRequest tagSearchRequest =\n            new TagSearchRequest(Arrays.asList(new TagSearchFilter(Arrays.asList(new TagSearchKey(TAG_TYPE, TAG_CODE, NO_IS_PARENT_TAG_NULL_FLAG)))));\n\n        when(tagService.searchTags(tagSearchRequest, searchFields)).thenReturn(tagSearchResponse);\n\n        // Search the tags.\n        TagSearchResponse resultTagSearchResponse = tagRestController.searchTags(tagSearchRequest, searchFields);\n\n        // Verify the external calls.\n        verify(tagService).searchTags(tagSearchRequest, searchFields);\n        verifyNoMoreInteractions(tagService);\n\n        // Validate the returned object.\n        assertEquals(tagSearchResponse, resultTagSearchResponse);\n    }", "signature": "void testSearchTags()", "full_signature": "@Test public void testSearchTags()", "class_method_signature": "TagRestControllerTest.testSearchTags()", "testcase": true, "constructor": false, "invocations": ["asList", "newHashSet", "asList", "asList", "thenReturn", "when", "searchTags", "searchTags", "searchTags", "verify", "verifyNoMoreInteractions", "assertEquals"]}, "focal_class": {"identifier": "TagRestController", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final static String TAGS_URI_PREFIX = \"/tags\";", "modifier": "public final static", "type": "String", "declarator": "TAGS_URI_PREFIX = \"/tags\"", "var_name": "TAGS_URI_PREFIX"}, {"original_string": "@Autowired\n    private TagService tagService;", "modifier": "@Autowired\n    private", "type": "TagService", "declarator": "tagService", "var_name": "tagService"}], "methods": [{"identifier": "createTag", "parameters": "(@RequestBody TagCreateRequest tagCreateRequest)", "modifiers": "@RequestMapping(value = TAGS_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_TAGS_POST) public", "return": "Tag", "signature": "Tag createTag(@RequestBody TagCreateRequest tagCreateRequest)", "full_signature": "@RequestMapping(value = TAGS_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_TAGS_POST) public Tag createTag(@RequestBody TagCreateRequest tagCreateRequest)", "class_method_signature": "TagRestController.createTag(@RequestBody TagCreateRequest tagCreateRequest)", "testcase": false, "constructor": false}, {"identifier": "deleteTag", "parameters": "(@PathVariable(\"tagTypeCode\") String tagTypeCode, @PathVariable(\"tagCode\") String tagCode)", "modifiers": "@RequestMapping(value = TAGS_URI_PREFIX + \"/tagTypes/{tagTypeCode}/tagCodes/{tagCode}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_TAGS_DELETE) public", "return": "Tag", "signature": "Tag deleteTag(@PathVariable(\"tagTypeCode\") String tagTypeCode, @PathVariable(\"tagCode\") String tagCode)", "full_signature": "@RequestMapping(value = TAGS_URI_PREFIX + \"/tagTypes/{tagTypeCode}/tagCodes/{tagCode}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_TAGS_DELETE) public Tag deleteTag(@PathVariable(\"tagTypeCode\") String tagTypeCode, @PathVariable(\"tagCode\") String tagCode)", "class_method_signature": "TagRestController.deleteTag(@PathVariable(\"tagTypeCode\") String tagTypeCode, @PathVariable(\"tagCode\") String tagCode)", "testcase": false, "constructor": false}, {"identifier": "getTag", "parameters": "(@PathVariable(\"tagTypeCode\") String tagTypeCode, @PathVariable(\"tagCode\") String tagCode)", "modifiers": "@RequestMapping(value = TAGS_URI_PREFIX + \"/tagTypes/{tagTypeCode}/tagCodes/{tagCode}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_TAGS_GET) public", "return": "Tag", "signature": "Tag getTag(@PathVariable(\"tagTypeCode\") String tagTypeCode, @PathVariable(\"tagCode\") String tagCode)", "full_signature": "@RequestMapping(value = TAGS_URI_PREFIX + \"/tagTypes/{tagTypeCode}/tagCodes/{tagCode}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_TAGS_GET) public Tag getTag(@PathVariable(\"tagTypeCode\") String tagTypeCode, @PathVariable(\"tagCode\") String tagCode)", "class_method_signature": "TagRestController.getTag(@PathVariable(\"tagTypeCode\") String tagTypeCode, @PathVariable(\"tagCode\") String tagCode)", "testcase": false, "constructor": false}, {"identifier": "getTags", "parameters": "(@PathVariable(\"tagTypeCode\") String tagTypeCode, @RequestParam(value = \"tagCode\", required = false) String tagCode)", "modifiers": "@RequestMapping(value = TAGS_URI_PREFIX + \"/tagTypes/{tagTypeCode}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_TAGS_ALL_GET) public", "return": "TagListResponse", "signature": "TagListResponse getTags(@PathVariable(\"tagTypeCode\") String tagTypeCode, @RequestParam(value = \"tagCode\", required = false) String tagCode)", "full_signature": "@RequestMapping(value = TAGS_URI_PREFIX + \"/tagTypes/{tagTypeCode}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_TAGS_ALL_GET) public TagListResponse getTags(@PathVariable(\"tagTypeCode\") String tagTypeCode, @RequestParam(value = \"tagCode\", required = false) String tagCode)", "class_method_signature": "TagRestController.getTags(@PathVariable(\"tagTypeCode\") String tagTypeCode, @RequestParam(value = \"tagCode\", required = false) String tagCode)", "testcase": false, "constructor": false}, {"identifier": "searchTags", "parameters": "(@RequestBody TagSearchRequest request,\n        @RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields)", "modifiers": "@RequestMapping(value = TAGS_URI_PREFIX + \"/search\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_TAGS_SEARCH_POST) public", "return": "TagSearchResponse", "signature": "TagSearchResponse searchTags(@RequestBody TagSearchRequest request,\n        @RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields)", "full_signature": "@RequestMapping(value = TAGS_URI_PREFIX + \"/search\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_TAGS_SEARCH_POST) public TagSearchResponse searchTags(@RequestBody TagSearchRequest request,\n        @RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields)", "class_method_signature": "TagRestController.searchTags(@RequestBody TagSearchRequest request,\n        @RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields)", "testcase": false, "constructor": false}, {"identifier": "updateTag", "parameters": "(@PathVariable(\"tagTypeCode\") String tagTypeCode, @PathVariable(\"tagCode\") String tagCode,\n        @RequestBody TagUpdateRequest tagUpdateRequest)", "modifiers": "@RequestMapping(value = TAGS_URI_PREFIX + \"/tagTypes/{tagTypeCode}/tagCodes/{tagCode}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_TAGS_PUT) public", "return": "Tag", "signature": "Tag updateTag(@PathVariable(\"tagTypeCode\") String tagTypeCode, @PathVariable(\"tagCode\") String tagCode,\n        @RequestBody TagUpdateRequest tagUpdateRequest)", "full_signature": "@RequestMapping(value = TAGS_URI_PREFIX + \"/tagTypes/{tagTypeCode}/tagCodes/{tagCode}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_TAGS_PUT) public Tag updateTag(@PathVariable(\"tagTypeCode\") String tagTypeCode, @PathVariable(\"tagCode\") String tagCode,\n        @RequestBody TagUpdateRequest tagUpdateRequest)", "class_method_signature": "TagRestController.updateTag(@PathVariable(\"tagTypeCode\") String tagTypeCode, @PathVariable(\"tagCode\") String tagCode,\n        @RequestBody TagUpdateRequest tagUpdateRequest)", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/TagRestController.java"}, "focal_method": {"identifier": "searchTags", "parameters": "(@RequestBody TagSearchRequest request,\n        @RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields)", "modifiers": "@RequestMapping(value = TAGS_URI_PREFIX + \"/search\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_TAGS_SEARCH_POST) public", "return": "TagSearchResponse", "body": "@RequestMapping(value = TAGS_URI_PREFIX + \"/search\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"})\n    @Secured(SecurityFunctions.FN_TAGS_SEARCH_POST)\n    public TagSearchResponse searchTags(@RequestBody TagSearchRequest request,\n        @RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields)\n    {\n        return tagService.searchTags(request, fields);\n    }", "signature": "TagSearchResponse searchTags(@RequestBody TagSearchRequest request,\n        @RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields)", "full_signature": "@RequestMapping(value = TAGS_URI_PREFIX + \"/search\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_TAGS_SEARCH_POST) public TagSearchResponse searchTags(@RequestBody TagSearchRequest request,\n        @RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields)", "class_method_signature": "TagRestController.searchTags(@RequestBody TagSearchRequest request,\n        @RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields)", "testcase": false, "constructor": false, "invocations": ["searchTags"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}