{"test_class": {"identifier": "MwLocalDumpFileTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "MockDirectoryManager dm;", "modifier": "", "type": "MockDirectoryManager", "declarator": "dm", "var_name": "dm"}, {"original_string": "Path dmPath;", "modifier": "", "type": "Path", "declarator": "dmPath", "var_name": "dmPath"}], "file": "wdtk-dumpfiles/src/test/java/org/wikidata/wdtk/dumpfiles/MwLocalDumpFileTest.java"}, "test_case": {"identifier": "testUnavailableReader", "parameters": "()", "modifiers": "@Test(expected = IOException.class) public", "return": "void", "body": "@Test(expected = IOException.class)\n\tpublic void testUnavailableReader() throws IOException {\n\t\tMwLocalDumpFile df = new MwLocalDumpFile(\n\t\t\t\t\"/testdump-20150512.json.gz\");\n\t\tdf.getDumpFileReader();\n\t}", "signature": "void testUnavailableReader()", "full_signature": "@Test(expected = IOException.class) public void testUnavailableReader()", "class_method_signature": "MwLocalDumpFileTest.testUnavailableReader()", "testcase": true, "constructor": false, "invocations": ["getDumpFileReader"]}, "focal_class": {"identifier": "MwLocalDumpFile", "superclass": "", "interfaces": "implements MwDumpFile", "fields": [{"original_string": "static final Logger logger = LoggerFactory.getLogger(MwLocalDumpFile.class);", "modifier": "static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(MwLocalDumpFile.class)", "var_name": "logger"}, {"original_string": "final String dateStamp;", "modifier": "final", "type": "String", "declarator": "dateStamp", "var_name": "dateStamp"}, {"original_string": "final String projectName;", "modifier": "final", "type": "String", "declarator": "projectName", "var_name": "projectName"}, {"original_string": "final String dumpFileName;", "modifier": "final", "type": "String", "declarator": "dumpFileName", "var_name": "dumpFileName"}, {"original_string": "final Path dumpFilePath;", "modifier": "final", "type": "Path", "declarator": "dumpFilePath", "var_name": "dumpFilePath"}, {"original_string": "final DumpContentType dumpContentType;", "modifier": "final", "type": "DumpContentType", "declarator": "dumpContentType", "var_name": "dumpContentType"}, {"original_string": "DirectoryManager directoryManager;", "modifier": "", "type": "DirectoryManager", "declarator": "directoryManager", "var_name": "directoryManager"}, {"original_string": "final boolean isAvailable;", "modifier": "final", "type": "boolean", "declarator": "isAvailable", "var_name": "isAvailable"}, {"original_string": "static final Map<DumpContentType, CompressionType> COMPRESSION_TYPE = new HashMap<>();", "modifier": "static final", "type": "Map<DumpContentType, CompressionType>", "declarator": "COMPRESSION_TYPE = new HashMap<>()", "var_name": "COMPRESSION_TYPE"}], "methods": [{"identifier": "MwLocalDumpFile", "parameters": "(String filepath)", "modifiers": "public", "return": "", "signature": " MwLocalDumpFile(String filepath)", "full_signature": "public  MwLocalDumpFile(String filepath)", "class_method_signature": "MwLocalDumpFile.MwLocalDumpFile(String filepath)", "testcase": false, "constructor": true}, {"identifier": "MwLocalDumpFile", "parameters": "(String filePath, DumpContentType dumpContentType,\n\t\t\tString dateStamp, String projectName)", "modifiers": "public", "return": "", "signature": " MwLocalDumpFile(String filePath, DumpContentType dumpContentType,\n\t\t\tString dateStamp, String projectName)", "full_signature": "public  MwLocalDumpFile(String filePath, DumpContentType dumpContentType,\n\t\t\tString dateStamp, String projectName)", "class_method_signature": "MwLocalDumpFile.MwLocalDumpFile(String filePath, DumpContentType dumpContentType,\n\t\t\tString dateStamp, String projectName)", "testcase": false, "constructor": true}, {"identifier": "getPath", "parameters": "()", "modifiers": "public", "return": "Path", "signature": "Path getPath()", "full_signature": "public Path getPath()", "class_method_signature": "MwLocalDumpFile.getPath()", "testcase": false, "constructor": false}, {"identifier": "isAvailable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAvailable()", "full_signature": "@Override public boolean isAvailable()", "class_method_signature": "MwLocalDumpFile.isAvailable()", "testcase": false, "constructor": false}, {"identifier": "getProjectName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getProjectName()", "full_signature": "@Override public String getProjectName()", "class_method_signature": "MwLocalDumpFile.getProjectName()", "testcase": false, "constructor": false}, {"identifier": "getDateStamp", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDateStamp()", "full_signature": "@Override public String getDateStamp()", "class_method_signature": "MwLocalDumpFile.getDateStamp()", "testcase": false, "constructor": false}, {"identifier": "getDumpContentType", "parameters": "()", "modifiers": "@Override public", "return": "DumpContentType", "signature": "DumpContentType getDumpContentType()", "full_signature": "@Override public DumpContentType getDumpContentType()", "class_method_signature": "MwLocalDumpFile.getDumpContentType()", "testcase": false, "constructor": false}, {"identifier": "getDumpFileStream", "parameters": "()", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getDumpFileStream()", "full_signature": "@Override public InputStream getDumpFileStream()", "class_method_signature": "MwLocalDumpFile.getDumpFileStream()", "testcase": false, "constructor": false}, {"identifier": "getDumpFileReader", "parameters": "()", "modifiers": "@Override public", "return": "BufferedReader", "signature": "BufferedReader getDumpFileReader()", "full_signature": "@Override public BufferedReader getDumpFileReader()", "class_method_signature": "MwLocalDumpFile.getDumpFileReader()", "testcase": false, "constructor": false}, {"identifier": "prepareDumpFile", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void prepareDumpFile()", "full_signature": "@Override public void prepareDumpFile()", "class_method_signature": "MwLocalDumpFile.prepareDumpFile()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "MwLocalDumpFile.toString()", "testcase": false, "constructor": false}, {"identifier": "guessDumpContentType", "parameters": "(String fileName)", "modifiers": "private static", "return": "DumpContentType", "signature": "DumpContentType guessDumpContentType(String fileName)", "full_signature": "private static DumpContentType guessDumpContentType(String fileName)", "class_method_signature": "MwLocalDumpFile.guessDumpContentType(String fileName)", "testcase": false, "constructor": false}, {"identifier": "guessDumpDate", "parameters": "(String fileName)", "modifiers": "private static", "return": "String", "signature": "String guessDumpDate(String fileName)", "full_signature": "private static String guessDumpDate(String fileName)", "class_method_signature": "MwLocalDumpFile.guessDumpDate(String fileName)", "testcase": false, "constructor": false}], "file": "wdtk-dumpfiles/src/main/java/org/wikidata/wdtk/dumpfiles/MwLocalDumpFile.java"}, "focal_method": {"identifier": "getDumpFileReader", "parameters": "()", "modifiers": "@Override public", "return": "BufferedReader", "body": "@Override\n\tpublic BufferedReader getDumpFileReader() throws IOException {\n\t\treturn new BufferedReader(new InputStreamReader(getDumpFileStream(),\n\t\t\t\tStandardCharsets.UTF_8));\n\t}", "signature": "BufferedReader getDumpFileReader()", "full_signature": "@Override public BufferedReader getDumpFileReader()", "class_method_signature": "MwLocalDumpFile.getDumpFileReader()", "testcase": false, "constructor": false, "invocations": ["getDumpFileStream"]}, "repository": {"repo_id": 16144428, "url": "https://github.com/Wikidata/Wikidata-Toolkit", "language": "Java", "is_fork": false, "fork_count": 80, "stargazer_count": 264, "size": 11241, "license": "licensed"}}