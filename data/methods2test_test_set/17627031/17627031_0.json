{"test_class": {"identifier": "TiffProfileExifIFDTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String GOOD_FLASHPIX_VERSION = \"0100\";", "modifier": "private static final", "type": "String", "declarator": "GOOD_FLASHPIX_VERSION = \"0100\"", "var_name": "GOOD_FLASHPIX_VERSION"}, {"original_string": "private static final String BAD_FLASHPIX_VERSION = \"0010\";", "modifier": "private static final", "type": "String", "declarator": "BAD_FLASHPIX_VERSION = \"0010\"", "var_name": "BAD_FLASHPIX_VERSION"}, {"original_string": "private static final String GOOD_EXIF_VERSION = \"0200\";", "modifier": "private static final", "type": "String", "declarator": "GOOD_EXIF_VERSION = \"0200\"", "var_name": "GOOD_EXIF_VERSION"}, {"original_string": "private static final String GOOD_EXIF_VERSION2 = \"0221\";", "modifier": "private static final", "type": "String", "declarator": "GOOD_EXIF_VERSION2 = \"0221\"", "var_name": "GOOD_EXIF_VERSION2"}, {"original_string": "private static final String BAD_EXIF_VERSION = \"0101\";", "modifier": "private static final", "type": "String", "declarator": "BAD_EXIF_VERSION = \"0101\"", "var_name": "BAD_EXIF_VERSION"}, {"original_string": "private static final int GOOD_COLORSPACE = 65535;", "modifier": "private static final", "type": "int", "declarator": "GOOD_COLORSPACE = 65535", "var_name": "GOOD_COLORSPACE"}, {"original_string": "private static final int BAD_COLORSPACE = 3;", "modifier": "private static final", "type": "int", "declarator": "BAD_COLORSPACE = 3", "var_name": "BAD_COLORSPACE"}, {"original_string": "private TiffProfileExifIFD profile;", "modifier": "private", "type": "TiffProfileExifIFD", "declarator": "profile", "var_name": "profile"}], "file": "jhove-modules/tiff-hul/src/test/java/edu/harvard/hul/ois/jhove/module/tiff/TiffProfileExifIFDTest.java"}, "test_case": {"identifier": "testSatisfiesThisProfileKO", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSatisfiesThisProfileKO() {\n\t\tExifIFD ifd = new ExifIFD(0, null, null, true);\n\n\t\tifd._colorSpace = GOOD_COLORSPACE;\n\t\tifd._exifVersion = BAD_EXIF_VERSION;\n\t\tifd._flashpixVersion = GOOD_FLASHPIX_VERSION;\n\t\tassertFalse(profile.satisfiesThisProfile(ifd));\n\n\t\tifd._colorSpace = GOOD_COLORSPACE;\n\t\tifd._exifVersion = GOOD_EXIF_VERSION;\n\t\tifd._flashpixVersion = BAD_FLASHPIX_VERSION;\n\t\tassertFalse(profile.satisfiesThisProfile(ifd));\n\n\t\tifd._colorSpace = BAD_COLORSPACE;\n\t\tifd._exifVersion = GOOD_EXIF_VERSION;\n\t\tifd._flashpixVersion = GOOD_FLASHPIX_VERSION;\n\t\tassertFalse(profile.satisfiesThisProfile(ifd));\n\t}", "signature": "void testSatisfiesThisProfileKO()", "full_signature": "@Test public void testSatisfiesThisProfileKO()", "class_method_signature": "TiffProfileExifIFDTest.testSatisfiesThisProfileKO()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "satisfiesThisProfile", "assertFalse", "satisfiesThisProfile", "assertFalse", "satisfiesThisProfile"]}, "focal_class": {"identifier": "TiffProfileExifIFD", "superclass": "extends TiffProfile", "interfaces": "", "fields": [{"original_string": "private static final String[] ACCEPTED_EXIF_VERSIONS = { \"0200\", \"0210\",\n\t\t\t\"0220\", \"0221\", \"0230\" };", "modifier": "private static final", "type": "String[]", "declarator": "ACCEPTED_EXIF_VERSIONS = { \"0200\", \"0210\",\n\t\t\t\"0220\", \"0221\", \"0230\" }", "var_name": "ACCEPTED_EXIF_VERSIONS"}, {"original_string": "private int _majVersion;", "modifier": "private", "type": "int", "declarator": "_majVersion", "var_name": "_majVersion"}, {"original_string": "private int _minVersion;", "modifier": "private", "type": "int", "declarator": "_minVersion", "var_name": "_minVersion"}], "methods": [{"identifier": "TiffProfileExifIFD", "parameters": "()", "modifiers": "public", "return": "", "signature": " TiffProfileExifIFD()", "full_signature": "public  TiffProfileExifIFD()", "class_method_signature": "TiffProfileExifIFD.TiffProfileExifIFD()", "testcase": false, "constructor": true}, {"identifier": "satisfiesThisProfile", "parameters": "(IFD ifd)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean satisfiesThisProfile(IFD ifd)", "full_signature": "@Override public boolean satisfiesThisProfile(IFD ifd)", "class_method_signature": "TiffProfileExifIFD.satisfiesThisProfile(IFD ifd)", "testcase": false, "constructor": false}, {"identifier": "getMajorVersion", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMajorVersion()", "full_signature": "public int getMajorVersion()", "class_method_signature": "TiffProfileExifIFD.getMajorVersion()", "testcase": false, "constructor": false}, {"identifier": "getMinorVersion", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMinorVersion()", "full_signature": "public int getMinorVersion()", "class_method_signature": "TiffProfileExifIFD.getMinorVersion()", "testcase": false, "constructor": false}], "file": "jhove-modules/tiff-hul/src/main/java/edu/harvard/hul/ois/jhove/module/tiff/TiffProfileExifIFD.java"}, "focal_method": {"identifier": "satisfiesThisProfile", "parameters": "(IFD ifd)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean satisfiesThisProfile (IFD ifd) \n    {\n        if (!(ifd instanceof ExifIFD)) {\n            return false;\n        }\n        ExifIFD eifd = (ExifIFD) ifd;\n        String version = eifd.getExifVersion ();\n        for (String acceptedVersion : ACCEPTED_EXIF_VERSIONS) {\n        \tif (acceptedVersion.equals (version)) {\n                _majVersion = Integer.parseInt(version.substring(0, 2));\n                _minVersion = Integer.parseInt(version.substring(2, 4));\n                break;\n        \t}\n        }\n        if (_majVersion == -1) {\n            // Other versions aren't accepted\n            return false;\n        }\n        \n        if (!(\"0100\".equals(eifd.getFlashpixVersion ()))) {\n            return false;\n        }\n        int colspc = eifd.getColorspace ();\n        return !(colspc != 1 && colspc != 65535);\n    }", "signature": "boolean satisfiesThisProfile(IFD ifd)", "full_signature": "@Override public boolean satisfiesThisProfile(IFD ifd)", "class_method_signature": "TiffProfileExifIFD.satisfiesThisProfile(IFD ifd)", "testcase": false, "constructor": false, "invocations": ["getExifVersion", "equals", "parseInt", "substring", "parseInt", "substring", "equals", "getFlashpixVersion", "getColorspace"]}, "repository": {"repo_id": 17627031, "url": "https://github.com/openpreserve/jhove", "stars": 91, "created": "3/11/2014 10:47:10 AM +00:00", "updates": "2020-01-24T19:19:11+00:00", "fork": "False", "license": "licensed"}}