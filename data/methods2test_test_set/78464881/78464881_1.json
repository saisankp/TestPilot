{"test_class": {"identifier": "SolaceJmsAutoCloudConfigurationTest", "superclass": "extends SolaceJmsAutoConfigurationTestBase", "interfaces": "", "fields": [{"original_string": "private static String CF_CLOUD_APP_ENV = \"VCAP_APPLICATION={}\";", "modifier": "private static", "type": "String", "declarator": "CF_CLOUD_APP_ENV = \"VCAP_APPLICATION={}\"", "var_name": "CF_CLOUD_APP_ENV"}, {"original_string": "private static String CF_VCAP_SERVICES_OTHER = \"VCAP_SERVICES={ otherService: [ { id: '1' } , { id: '2' } ]}\";", "modifier": "private static", "type": "String", "declarator": "CF_VCAP_SERVICES_OTHER = \"VCAP_SERVICES={ otherService: [ { id: '1' } , { id: '2' } ]}\"", "var_name": "CF_VCAP_SERVICES_OTHER"}, {"original_string": "@Parameter(0) public String beanClassName;", "modifier": "@Parameter(0) public", "type": "String", "declarator": "beanClassName", "var_name": "beanClassName"}, {"original_string": "@Parameter(1) public Class<T> beanClass;", "modifier": "@Parameter(1) public", "type": "Class<T>", "declarator": "beanClass", "var_name": "beanClass"}], "file": "solace-jms-spring-boot-autoconfigure/src/test/java/com/solace/spring/boot/autoconfigure/SolaceJmsAutoCloudConfigurationTest.java"}, "test_case": {"identifier": "isCloudConfiguredByUserProvidedServices", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n        public void isCloudConfiguredByUserProvidedServices() {\n\n                makeCloudEnv();\n\n                String JSONString = addOneUserProvidedSolaceService(\"VCAP_SERVICES\");\n                String CF_VCAP_SERVICES = \"VCAP_SERVICES={ \\\"user-provided\\\": [\" + JSONString + \"] }\";\n\n                load(CF_CLOUD_APP_ENV, CF_VCAP_SERVICES);\n\n                Environment env = context.getEnvironment();\n\n                String VCAP_APPLICATION = env.getProperty(\"VCAP_APPLICATION\");\n                assertNotNull(VCAP_APPLICATION);\n                assertEquals(\"{}\", VCAP_APPLICATION);\n\n                String VCAP_SERVICES = env.getProperty(\"VCAP_SERVICES\");\n                assertNotNull(VCAP_SERVICES);\n                assertTrue(VCAP_SERVICES.contains(\"solace-pubsub\"));\n\n                validateBackwardsCompatibility();\n\n                T bean = this.context.getBean(beanClass);\n                assertNotNull(bean);\n\n                if (beanClass.equals(SpringSolJmsConnectionFactoryCloudFactory.class)) {\n                    SpringSolJmsConnectionFactoryCloudFactory springSolConnectionFactoryCloudFactory = (SpringSolJmsConnectionFactoryCloudFactory) bean;\n                    assertNotNull(springSolConnectionFactoryCloudFactory.getSolConnectionFactory());\n                    List<SolaceServiceCredentials> availableServices = springSolConnectionFactoryCloudFactory\n                            .getSolaceServiceCredentials();\n                    assertNotNull(availableServices);\n                    assertEquals(1, availableServices.size());\n                }\n        }", "signature": "void isCloudConfiguredByUserProvidedServices()", "full_signature": "@Test public void isCloudConfiguredByUserProvidedServices()", "class_method_signature": "SolaceJmsAutoCloudConfigurationTest.isCloudConfiguredByUserProvidedServices()", "testcase": true, "constructor": false, "invocations": ["makeCloudEnv", "addOneUserProvidedSolaceService", "load", "getEnvironment", "getProperty", "assertNotNull", "assertEquals", "getProperty", "assertNotNull", "assertTrue", "contains", "validateBackwardsCompatibility", "getBean", "assertNotNull", "equals", "assertNotNull", "getSolConnectionFactory", "getSolaceServiceCredentials", "assertNotNull", "assertEquals", "size"]}, "focal_class": {"identifier": "SolaceJmsAutoCloudConfiguration", "superclass": "extends SolaceJmsAutoConfigurationBase", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(SolaceJmsAutoCloudConfiguration.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(SolaceJmsAutoCloudConfiguration.class)", "var_name": "logger"}, {"original_string": "private CloudFactory cloudFactory = new CloudFactory();", "modifier": "private", "type": "CloudFactory", "declarator": "cloudFactory = new CloudFactory()", "var_name": "cloudFactory"}], "methods": [{"identifier": "SolaceJmsAutoCloudConfiguration", "parameters": "(SolaceJmsProperties properties)", "modifiers": "@Autowired public", "return": "", "signature": " SolaceJmsAutoCloudConfiguration(SolaceJmsProperties properties)", "full_signature": "@Autowired public  SolaceJmsAutoCloudConfiguration(SolaceJmsProperties properties)", "class_method_signature": "SolaceJmsAutoCloudConfiguration.SolaceJmsAutoCloudConfiguration(SolaceJmsProperties properties)", "testcase": false, "constructor": true}, {"identifier": "findFirstSolaceServiceCredentialsImpl", "parameters": "()", "modifiers": "@Override", "return": "SolaceServiceCredentials", "signature": "SolaceServiceCredentials findFirstSolaceServiceCredentialsImpl()", "full_signature": "@Override SolaceServiceCredentials findFirstSolaceServiceCredentialsImpl()", "class_method_signature": "SolaceJmsAutoCloudConfiguration.findFirstSolaceServiceCredentialsImpl()", "testcase": false, "constructor": false}, {"identifier": "findFirstSolaceMessagingInfo", "parameters": "()", "modifiers": "@Deprecated @Bean @Primary public", "return": "SolaceMessagingInfo", "signature": "SolaceMessagingInfo findFirstSolaceMessagingInfo()", "full_signature": "@Deprecated @Bean @Primary public SolaceMessagingInfo findFirstSolaceMessagingInfo()", "class_method_signature": "SolaceJmsAutoCloudConfiguration.findFirstSolaceMessagingInfo()", "testcase": false, "constructor": false}, {"identifier": "getSolaceServiceCredentials", "parameters": "()", "modifiers": "@Override public", "return": "List<SolaceServiceCredentials>", "signature": "List<SolaceServiceCredentials> getSolaceServiceCredentials()", "full_signature": "@Override public List<SolaceServiceCredentials> getSolaceServiceCredentials()", "class_method_signature": "SolaceJmsAutoCloudConfiguration.getSolaceServiceCredentials()", "testcase": false, "constructor": false}, {"identifier": "getSolaceMessagingInfos", "parameters": "()", "modifiers": "@Deprecated @Override public", "return": "List<SolaceMessagingInfo>", "signature": "List<SolaceMessagingInfo> getSolaceMessagingInfos()", "full_signature": "@Deprecated @Override public List<SolaceMessagingInfo> getSolaceMessagingInfos()", "class_method_signature": "SolaceJmsAutoCloudConfiguration.getSolaceMessagingInfos()", "testcase": false, "constructor": false}], "file": "solace-jms-spring-boot-autoconfigure/src/main/java/com/solace/spring/boot/autoconfigure/SolaceJmsAutoCloudConfiguration.java"}, "focal_method": {"identifier": "getSolaceServiceCredentials", "parameters": "()", "modifiers": "@Override public", "return": "List<SolaceServiceCredentials>", "body": "@Override\n\tpublic List<SolaceServiceCredentials> getSolaceServiceCredentials() {\n\t\treturn new ArrayList<SolaceServiceCredentials>(getSolaceMessagingInfos());\n\t}", "signature": "List<SolaceServiceCredentials> getSolaceServiceCredentials()", "full_signature": "@Override public List<SolaceServiceCredentials> getSolaceServiceCredentials()", "class_method_signature": "SolaceJmsAutoCloudConfiguration.getSolaceServiceCredentials()", "testcase": false, "constructor": false, "invocations": ["getSolaceMessagingInfos"]}, "repository": {"repo_id": 78464881, "url": "https://github.com/SolaceProducts/solace-jms-spring-boot", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 13, "size": 156, "license": "licensed"}}