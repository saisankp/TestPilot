{"test_class": {"identifier": "GlobStringsMatcherTest", "superclass": "", "interfaces": "", "fields": [], "file": "libs/java/auth_core/src/test/java/com/yahoo/athenz/auth/util/GlobStringsMatcherTest.java"}, "test_case": {"identifier": "testGlobStringMatcher", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGlobStringMatcher() {\n        String globStrings =\n                \"aaa.bbb.ccc.ddd, \"\n                + \"???.ddd, \"\n                + \"*.bbb.*.ddd, \"\n                + \"aaa.??, \";\n\n        String systemProperty = \"athenz.zts.notification_cert_fail_ignored_services_list\";\n        System.setProperty(systemProperty, globStrings);\n        GlobStringsMatcher globStringsMatcher = new GlobStringsMatcher(systemProperty);\n\n        assertTrue(globStringsMatcher.isMatch(\"aaa.bbb.ccc.ddd\"));\n        assertTrue(globStringsMatcher.isMatch(\"ccc.ddd\"));\n        assertTrue(globStringsMatcher.isMatch(\"aaa.yy\"));\n        assertTrue(globStringsMatcher.isMatch(\"1.2.bbb.444.555.ddd\"));\n\n        assertFalse(globStringsMatcher.isMatch(\"1.2.3.ddd\"));\n        assertFalse(globStringsMatcher.isMatch(\"ddd\"));\n        assertFalse(globStringsMatcher.isMatch(\"ccc\"));\n        assertFalse(globStringsMatcher.isMatch(\"bbb\"));\n        assertFalse(globStringsMatcher.isMatch(\"bbb.ccc\"));\n        assertFalse(globStringsMatcher.isMatch(\"1.2.ddd.3\"));\n        assertFalse(globStringsMatcher.isMatch(\"something.else\"));\n\n        System.clearProperty(systemProperty);\n    }", "signature": "void testGlobStringMatcher()", "full_signature": "@Test public void testGlobStringMatcher()", "class_method_signature": "GlobStringsMatcherTest.testGlobStringMatcher()", "testcase": true, "constructor": false, "invocations": ["setProperty", "assertTrue", "isMatch", "assertTrue", "isMatch", "assertTrue", "isMatch", "assertTrue", "isMatch", "assertFalse", "isMatch", "assertFalse", "isMatch", "assertFalse", "isMatch", "assertFalse", "isMatch", "assertFalse", "isMatch", "assertFalse", "isMatch", "assertFalse", "isMatch", "clearProperty"]}, "focal_class": {"identifier": "GlobStringsMatcher", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(GlobStringsMatcher.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(GlobStringsMatcher.class)", "var_name": "LOGGER"}, {"original_string": "private final List<String> patterns;", "modifier": "private final", "type": "List<String>", "declarator": "patterns", "var_name": "patterns"}], "methods": [{"identifier": "GlobStringsMatcher", "parameters": "(String systemProperty)", "modifiers": "public", "return": "", "signature": " GlobStringsMatcher(String systemProperty)", "full_signature": "public  GlobStringsMatcher(String systemProperty)", "class_method_signature": "GlobStringsMatcher.GlobStringsMatcher(String systemProperty)", "testcase": false, "constructor": true}, {"identifier": "isEmptyPatternsList", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmptyPatternsList()", "full_signature": "public boolean isEmptyPatternsList()", "class_method_signature": "GlobStringsMatcher.isEmptyPatternsList()", "testcase": false, "constructor": false}, {"identifier": "isMatch", "parameters": "(String value)", "modifiers": "public", "return": "boolean", "signature": "boolean isMatch(String value)", "full_signature": "public boolean isMatch(String value)", "class_method_signature": "GlobStringsMatcher.isMatch(String value)", "testcase": false, "constructor": false}], "file": "libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/GlobStringsMatcher.java"}, "focal_method": {"identifier": "isMatch", "parameters": "(String value)", "modifiers": "public", "return": "boolean", "body": "public boolean isMatch(String value) {\n        return patterns.stream().anyMatch(pattern -> value.matches(pattern));\n    }", "signature": "boolean isMatch(String value)", "full_signature": "public boolean isMatch(String value)", "class_method_signature": "GlobStringsMatcher.isMatch(String value)", "testcase": false, "constructor": false, "invocations": ["anyMatch", "stream", "matches"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}