{"test_class": {"identifier": "TestItem", "superclass": "", "interfaces": "", "fields": [], "file": "org.jvoicexml.xml/src/test/java/org/jvoicexml/xml/srgs/TestItem.java"}, "test_case": {"identifier": "testGetMaxRepeat", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetMaxRepeat() throws Exception {\n        final SrgsXmlDocument document = new SrgsXmlDocument();\n        final Grammar grammar = document.getGrammar();\n        grammar.setRoot(\"test\");\n        final Rule rule = grammar.appendChild(Rule.class);\n        rule.setId(\"test\");\n        final OneOf politeOneOf = rule.appendChild(OneOf.class);\n        final Item item = politeOneOf.appendChild(Item.class);\n        Assert.assertEquals(1, item.getMaxRepeat());\n        item.setOptional();\n        Assert.assertEquals(1, item.getMaxRepeat());\n        final int repeat = 6;\n        item.setRepeat(repeat);\n        Assert.assertEquals(repeat, item.getMaxRepeat());\n        final int min = 4;\n        final int max = 7;\n        item.setRepeat(min, max);\n        Assert.assertEquals(max, item.getMaxRepeat());\n        final int min2 = 4;\n        final int max2 = -1;\n        item.setRepeat(min2, max2);\n        Assert.assertEquals(max2, item.getMaxRepeat());\n    }", "signature": "void testGetMaxRepeat()", "full_signature": "@Test public void testGetMaxRepeat()", "class_method_signature": "TestItem.testGetMaxRepeat()", "testcase": true, "constructor": false, "invocations": ["getGrammar", "setRoot", "appendChild", "setId", "appendChild", "appendChild", "assertEquals", "getMaxRepeat", "setOptional", "assertEquals", "getMaxRepeat", "setRepeat", "assertEquals", "getMaxRepeat", "setRepeat", "assertEquals", "getMaxRepeat", "setRepeat", "assertEquals", "getMaxRepeat"]}, "focal_class": {"identifier": "Item", "superclass": "extends AbstractSrgsNode", "interfaces": "implements VoiceXmlNode", "fields": [{"original_string": "public static final String TAG_NAME = \"item\";", "modifier": "public static final", "type": "String", "declarator": "TAG_NAME = \"item\"", "var_name": "TAG_NAME"}, {"original_string": "public static final String ATTRIBUTE_REPEAT = \"repeat\";", "modifier": "public static final", "type": "String", "declarator": "ATTRIBUTE_REPEAT = \"repeat\"", "var_name": "ATTRIBUTE_REPEAT"}, {"original_string": "public static final String ATTRIBUTE_REPEAT_PROB = \"repeatProb\";", "modifier": "public static final", "type": "String", "declarator": "ATTRIBUTE_REPEAT_PROB = \"repeatProb\"", "var_name": "ATTRIBUTE_REPEAT_PROB"}, {"original_string": "public static final String ATTRIBUTE_WEIGHT = \"weight\";", "modifier": "public static final", "type": "String", "declarator": "ATTRIBUTE_WEIGHT = \"weight\"", "var_name": "ATTRIBUTE_WEIGHT"}, {"original_string": "public static final String ATTRIBUTE_XML_LANG = \"xml:lang\";", "modifier": "public static final", "type": "String", "declarator": "ATTRIBUTE_XML_LANG = \"xml:lang\"", "var_name": "ATTRIBUTE_XML_LANG"}, {"original_string": "protected static final ArrayList<String> ATTRIBUTE_NAMES;", "modifier": "protected static final", "type": "ArrayList<String>", "declarator": "ATTRIBUTE_NAMES", "var_name": "ATTRIBUTE_NAMES"}, {"original_string": "private static final Set<String> CHILD_TAGS;", "modifier": "private static final", "type": "Set<String>", "declarator": "CHILD_TAGS", "var_name": "CHILD_TAGS"}], "methods": [{"identifier": "Item", "parameters": "()", "modifiers": "public", "return": "", "signature": " Item()", "full_signature": "public  Item()", "class_method_signature": "Item.Item()", "testcase": false, "constructor": true}, {"identifier": "Item", "parameters": "(final Node node)", "modifiers": "", "return": "", "signature": " Item(final Node node)", "full_signature": "  Item(final Node node)", "class_method_signature": "Item.Item(final Node node)", "testcase": false, "constructor": true}, {"identifier": "Item", "parameters": "(final Node n,\n            final XmlNodeFactory<? extends XmlNode> factory)", "modifiers": "private", "return": "", "signature": " Item(final Node n,\n            final XmlNodeFactory<? extends XmlNode> factory)", "full_signature": "private  Item(final Node n,\n            final XmlNodeFactory<? extends XmlNode> factory)", "class_method_signature": "Item.Item(final Node n,\n            final XmlNodeFactory<? extends XmlNode> factory)", "testcase": false, "constructor": true}, {"identifier": "getTagName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTagName()", "full_signature": "public String getTagName()", "class_method_signature": "Item.getTagName()", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(final Node n,\n            final XmlNodeFactory<? extends XmlNode> factory)", "modifiers": "public", "return": "XmlNode", "signature": "XmlNode newInstance(final Node n,\n            final XmlNodeFactory<? extends XmlNode> factory)", "full_signature": "public XmlNode newInstance(final Node n,\n            final XmlNodeFactory<? extends XmlNode> factory)", "class_method_signature": "Item.newInstance(final Node n,\n            final XmlNodeFactory<? extends XmlNode> factory)", "testcase": false, "constructor": false}, {"identifier": "getRepeat", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRepeat()", "full_signature": "public String getRepeat()", "class_method_signature": "Item.getRepeat()", "testcase": false, "constructor": false}, {"identifier": "getMinRepeat", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMinRepeat()", "full_signature": "public int getMinRepeat()", "class_method_signature": "Item.getMinRepeat()", "testcase": false, "constructor": false}, {"identifier": "getMaxRepeat", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxRepeat()", "full_signature": "public int getMaxRepeat()", "class_method_signature": "Item.getMaxRepeat()", "testcase": false, "constructor": false}, {"identifier": "setRepeat", "parameters": "(final int repeat)", "modifiers": "public", "return": "void", "signature": "void setRepeat(final int repeat)", "full_signature": "public void setRepeat(final int repeat)", "class_method_signature": "Item.setRepeat(final int repeat)", "testcase": false, "constructor": false}, {"identifier": "setRepeat", "parameters": "(final int min, final int max)", "modifiers": "public", "return": "void", "signature": "void setRepeat(final int min, final int max)", "full_signature": "public void setRepeat(final int min, final int max)", "class_method_signature": "Item.setRepeat(final int min, final int max)", "testcase": false, "constructor": false}, {"identifier": "setRepeat", "parameters": "(final String repeat)", "modifiers": "public", "return": "void", "signature": "void setRepeat(final String repeat)", "full_signature": "public void setRepeat(final String repeat)", "class_method_signature": "Item.setRepeat(final String repeat)", "testcase": false, "constructor": false}, {"identifier": "setOptional", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void setOptional()", "full_signature": "public void setOptional()", "class_method_signature": "Item.setOptional()", "testcase": false, "constructor": false}, {"identifier": "isOptional", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isOptional()", "full_signature": "public boolean isOptional()", "class_method_signature": "Item.isOptional()", "testcase": false, "constructor": false}, {"identifier": "getRepeatProb", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRepeatProb()", "full_signature": "public String getRepeatProb()", "class_method_signature": "Item.getRepeatProb()", "testcase": false, "constructor": false}, {"identifier": "setRepeatProb", "parameters": "(final String repeatProb)", "modifiers": "public", "return": "void", "signature": "void setRepeatProb(final String repeatProb)", "full_signature": "public void setRepeatProb(final String repeatProb)", "class_method_signature": "Item.setRepeatProb(final String repeatProb)", "testcase": false, "constructor": false}, {"identifier": "getWeight", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getWeight()", "full_signature": "public String getWeight()", "class_method_signature": "Item.getWeight()", "testcase": false, "constructor": false}, {"identifier": "setWeight", "parameters": "(final String weight)", "modifiers": "public", "return": "void", "signature": "void setWeight(final String weight)", "full_signature": "public void setWeight(final String weight)", "class_method_signature": "Item.setWeight(final String weight)", "testcase": false, "constructor": false}, {"identifier": "getXmlLang", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getXmlLang()", "full_signature": "public String getXmlLang()", "class_method_signature": "Item.getXmlLang()", "testcase": false, "constructor": false}, {"identifier": "getXmlLangObject", "parameters": "()", "modifiers": "public", "return": "Locale", "signature": "Locale getXmlLangObject()", "full_signature": "public Locale getXmlLangObject()", "class_method_signature": "Item.getXmlLangObject()", "testcase": false, "constructor": false}, {"identifier": "setXmlLang", "parameters": "(final String xmlLang)", "modifiers": "public", "return": "void", "signature": "void setXmlLang(final String xmlLang)", "full_signature": "public void setXmlLang(final String xmlLang)", "class_method_signature": "Item.setXmlLang(final String xmlLang)", "testcase": false, "constructor": false}, {"identifier": "setXmlLang", "parameters": "(final Locale locale)", "modifiers": "public", "return": "void", "signature": "void setXmlLang(final Locale locale)", "full_signature": "public void setXmlLang(final Locale locale)", "class_method_signature": "Item.setXmlLang(final Locale locale)", "testcase": false, "constructor": false}, {"identifier": "addText", "parameters": "(final String text)", "modifiers": "public", "return": "Text", "signature": "Text addText(final String text)", "full_signature": "public Text addText(final String text)", "class_method_signature": "Item.addText(final String text)", "testcase": false, "constructor": false}, {"identifier": "canContainChild", "parameters": "(final String tagName)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean canContainChild(final String tagName)", "full_signature": "@Override protected boolean canContainChild(final String tagName)", "class_method_signature": "Item.canContainChild(final String tagName)", "testcase": false, "constructor": false}, {"identifier": "getAttributeNames", "parameters": "()", "modifiers": "@Override public", "return": "Collection<String>", "signature": "Collection<String> getAttributeNames()", "full_signature": "@Override public Collection<String> getAttributeNames()", "class_method_signature": "Item.getAttributeNames()", "testcase": false, "constructor": false}], "file": "org.jvoicexml.xml/src/main/java/org/jvoicexml/xml/srgs/Item.java"}, "focal_method": {"identifier": "getMaxRepeat", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int getMaxRepeat() {\n        final String repeat = getRepeat();\n        if (repeat == null) {\n            return 1;\n        }\n        final int pos = repeat.indexOf('-');\n        if (pos < 0) {\n            return Integer.parseInt(repeat);\n        } else if (pos == repeat.length()) {\n            return -1;\n        }\n        final String max = repeat.substring(pos + 1);\n        if (max.trim().length() == 0) {\n            return -1;\n        }\n        return Integer.parseInt(max);\n    }", "signature": "int getMaxRepeat()", "full_signature": "public int getMaxRepeat()", "class_method_signature": "Item.getMaxRepeat()", "testcase": false, "constructor": false, "invocations": ["getRepeat", "indexOf", "parseInt", "length", "substring", "length", "trim", "parseInt"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}