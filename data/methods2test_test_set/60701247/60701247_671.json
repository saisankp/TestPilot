{"test_class": {"identifier": "MemoryProfilerStageTest", "superclass": "extends MemoryProfilerTestBase", "interfaces": "", "fields": [{"original_string": "@NotNull private final ByteBuffer FAKE_ALLOC_BUFFER = AllocationsParserTest.putAllocationInfo(\n    new String[0], new String[0], new String[0], new int[0][], new short[0][][]\n  );", "modifier": "@NotNull private final", "type": "ByteBuffer", "declarator": "FAKE_ALLOC_BUFFER = AllocationsParserTest.putAllocationInfo(\n    new String[0], new String[0], new String[0], new int[0][], new short[0][][]\n  )", "var_name": "FAKE_ALLOC_BUFFER"}, {"original_string": "@NotNull private final FakeMemoryService myService = new FakeMemoryService();", "modifier": "@NotNull private final", "type": "FakeMemoryService", "declarator": "myService = new FakeMemoryService()", "var_name": "myService"}, {"original_string": "@NotNull private final FakeTransportService myTransportService = new FakeTransportService(myTimer);", "modifier": "@NotNull private final", "type": "FakeTransportService", "declarator": "myTransportService = new FakeTransportService(myTimer)", "var_name": "myTransportService"}, {"original_string": "@Rule\n  public FakeGrpcChannel myGrpcChannel =\n    new FakeGrpcChannel(\"MemoryProfilerStageTestChannel\", myService, myTransportService, new FakeProfilerService(myTimer),\n                        new FakeCpuService(), new FakeEventService(), FakeNetworkService.newBuilder().build());", "modifier": "@Rule\n  public", "type": "FakeGrpcChannel", "declarator": "myGrpcChannel =\n    new FakeGrpcChannel(\"MemoryProfilerStageTestChannel\", myService, myTransportService, new FakeProfilerService(myTimer),\n                        new FakeCpuService(), new FakeEventService(), FakeNetworkService.newBuilder().build())", "var_name": "myGrpcChannel"}, {"original_string": "private final boolean myUnifiedPipeline;", "modifier": "private final", "type": "boolean", "declarator": "myUnifiedPipeline", "var_name": "myUnifiedPipeline"}], "file": "profilers/testSrc/com/android/tools/profilers/memory/MemoryProfilerStageTest.java"}, "test_case": {"identifier": "testRequestHeapDump", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRequestHeapDump() {\n    // Bypass the load mechanism in HeapDumpCaptureObject.\n    myMockLoader.setReturnImmediateFuture(true);\n    // Test the no-action cases\n    MemoryProfilerTestUtils.heapDumpHelper(myStage, myUnifiedPipeline, myTransportService, myService, -1, -1,\n                                           Memory.HeapDumpStatus.Status.FAILURE_UNKNOWN);\n    assertThat(myStage.getSelectedCapture()).isNull();\n    assertThat(myStage.getProfilerMode()).isEqualTo(ProfilerMode.NORMAL);\n\n    MemoryProfilerTestUtils.heapDumpHelper(myStage, myUnifiedPipeline, myTransportService, myService, -1, -1,\n                                           Memory.HeapDumpStatus.Status.IN_PROGRESS);\n    assertThat(myStage.getSelectedCapture()).isNull();\n    assertThat(myStage.getProfilerMode()).isEqualTo(ProfilerMode.NORMAL);\n\n    MemoryProfilerTestUtils.heapDumpHelper(myStage, myUnifiedPipeline, myTransportService, myService, -1, -1,\n                                           Memory.HeapDumpStatus.Status.UNSPECIFIED);\n    assertThat(myStage.getSelectedCapture()).isNull();\n    assertThat(myStage.getProfilerMode()).isEqualTo(ProfilerMode.NORMAL);\n\n    // TODO need to add a mock heap dump here to test the success path\n  }", "signature": "void testRequestHeapDump()", "full_signature": "@Test public void testRequestHeapDump()", "class_method_signature": "MemoryProfilerStageTest.testRequestHeapDump()", "testcase": true, "constructor": false, "invocations": ["setReturnImmediateFuture", "heapDumpHelper", "isNull", "assertThat", "getSelectedCapture", "isEqualTo", "assertThat", "getProfilerMode", "heapDumpHelper", "isNull", "assertThat", "getSelectedCapture", "isEqualTo", "assertThat", "getProfilerMode", "heapDumpHelper", "isNull", "assertThat", "getSelectedCapture", "isEqualTo", "assertThat", "getProfilerMode"]}, "focal_class": {"identifier": "MemoryProfilerStage", "superclass": "extends StreamingStage", "interfaces": "implements CodeNavigator.Listener", "fields": [{"original_string": "private static final String HAS_USED_MEMORY_CAPTURE = \"memory.used.capture\";", "modifier": "private static final", "type": "String", "declarator": "HAS_USED_MEMORY_CAPTURE = \"memory.used.capture\"", "var_name": "HAS_USED_MEMORY_CAPTURE"}, {"original_string": "public static final String LIVE_ALLOCATION_SAMPLING_PREF = \"memory.live.allocation.mode\";", "modifier": "public static final", "type": "String", "declarator": "LIVE_ALLOCATION_SAMPLING_PREF = \"memory.live.allocation.mode\"", "var_name": "LIVE_ALLOCATION_SAMPLING_PREF"}, {"original_string": "public static final LiveAllocationSamplingMode DEFAULT_LIVE_ALLOCATION_SAMPLING_MODE = LiveAllocationSamplingMode.SAMPLED;", "modifier": "public static final", "type": "LiveAllocationSamplingMode", "declarator": "DEFAULT_LIVE_ALLOCATION_SAMPLING_MODE = LiveAllocationSamplingMode.SAMPLED", "var_name": "DEFAULT_LIVE_ALLOCATION_SAMPLING_MODE"}, {"original_string": "static final BaseAxisFormatter MEMORY_AXIS_FORMATTER = new MemoryAxisFormatter(1, 5, 5);", "modifier": "static final", "type": "BaseAxisFormatter", "declarator": "MEMORY_AXIS_FORMATTER = new MemoryAxisFormatter(1, 5, 5)", "var_name": "MEMORY_AXIS_FORMATTER"}, {"original_string": "static final BaseAxisFormatter OBJECT_COUNT_AXIS_FORMATTER = new SingleUnitAxisFormatter(1, 5, 5, \"\");", "modifier": "static final", "type": "BaseAxisFormatter", "declarator": "OBJECT_COUNT_AXIS_FORMATTER = new SingleUnitAxisFormatter(1, 5, 5, \"\")", "var_name": "OBJECT_COUNT_AXIS_FORMATTER"}, {"original_string": "private static final long INVALID_START_TIME = -1;", "modifier": "private static final", "type": "long", "declarator": "INVALID_START_TIME = -1", "var_name": "INVALID_START_TIME"}, {"original_string": "public static final int MEMORY_HPROF_SAFE_FACTOR =\n    Math.max(1, Math.min(Integer.getInteger(\"profiler.memory.hprof.safeFactor\", 10), 1000));", "modifier": "public static final", "type": "int", "declarator": "MEMORY_HPROF_SAFE_FACTOR =\n    Math.max(1, Math.min(Integer.getInteger(\"profiler.memory.hprof.safeFactor\", 10), 1000))", "var_name": "MEMORY_HPROF_SAFE_FACTOR"}, {"original_string": "private final DetailedMemoryUsage myDetailedMemoryUsage;", "modifier": "private final", "type": "DetailedMemoryUsage", "declarator": "myDetailedMemoryUsage", "var_name": "myDetailedMemoryUsage"}, {"original_string": "private final ClampedAxisComponentModel myMemoryAxis;", "modifier": "private final", "type": "ClampedAxisComponentModel", "declarator": "myMemoryAxis", "var_name": "myMemoryAxis"}, {"original_string": "private final ClampedAxisComponentModel myObjectsAxis;", "modifier": "private final", "type": "ClampedAxisComponentModel", "declarator": "myObjectsAxis", "var_name": "myObjectsAxis"}, {"original_string": "private final MemoryStageLegends myLegends;", "modifier": "private final", "type": "MemoryStageLegends", "declarator": "myLegends", "var_name": "myLegends"}, {"original_string": "private final MemoryStageLegends myTooltipLegends;", "modifier": "private final", "type": "MemoryStageLegends", "declarator": "myTooltipLegends", "var_name": "myTooltipLegends"}, {"original_string": "private final EaseOutModel myInstructionsEaseOutModel;", "modifier": "private final", "type": "EaseOutModel", "declarator": "myInstructionsEaseOutModel", "var_name": "myInstructionsEaseOutModel"}, {"original_string": "private final boolean myIsMemoryCaptureOnly;", "modifier": "private final", "type": "boolean", "declarator": "myIsMemoryCaptureOnly", "var_name": "myIsMemoryCaptureOnly"}, {"original_string": "@NotNull\n  private final Common.Session mySessionData;", "modifier": "@NotNull\n  private final", "type": "Common.Session", "declarator": "mySessionData", "var_name": "mySessionData"}, {"original_string": "private DurationDataModel<GcDurationData> myGcStatsModel;", "modifier": "private", "type": "DurationDataModel<GcDurationData>", "declarator": "myGcStatsModel", "var_name": "myGcStatsModel"}, {"original_string": "@NotNull\n  private AspectModel<MemoryProfilerAspect> myAspect = new AspectModel<>();", "modifier": "@NotNull\n  private", "type": "AspectModel<MemoryProfilerAspect>", "declarator": "myAspect = new AspectModel<>()", "var_name": "myAspect"}, {"original_string": "@NotNull private FilterHandler myFilterHandler;", "modifier": "@NotNull private", "type": "FilterHandler", "declarator": "myFilterHandler", "var_name": "myFilterHandler"}, {"original_string": "@Nullable private Filter myLastFilter;", "modifier": "@Nullable private", "type": "Filter", "declarator": "myLastFilter", "var_name": "myLastFilter"}, {"original_string": "private final MemoryServiceBlockingStub myClient;", "modifier": "private final", "type": "MemoryServiceBlockingStub", "declarator": "myClient", "var_name": "myClient"}, {"original_string": "private final DurationDataModel<CaptureDurationData<CaptureObject>> myHeapDumpDurations;", "modifier": "private final", "type": "DurationDataModel<CaptureDurationData<CaptureObject>>", "declarator": "myHeapDumpDurations", "var_name": "myHeapDumpDurations"}, {"original_string": "private final DurationDataModel<CaptureDurationData<CaptureObject>> myAllocationDurations;", "modifier": "private final", "type": "DurationDataModel<CaptureDurationData<CaptureObject>>", "declarator": "myAllocationDurations", "var_name": "myAllocationDurations"}, {"original_string": "private final CaptureObjectLoader myLoader;", "modifier": "private final", "type": "CaptureObjectLoader", "declarator": "myLoader", "var_name": "myLoader"}, {"original_string": "private final MemoryProfilerSelection mySelection;", "modifier": "private final", "type": "MemoryProfilerSelection", "declarator": "mySelection", "var_name": "mySelection"}, {"original_string": "private final MemoryProfilerConfiguration myConfiguration;", "modifier": "private final", "type": "MemoryProfilerConfiguration", "declarator": "myConfiguration", "var_name": "myConfiguration"}, {"original_string": "private final EventMonitor myEventMonitor;", "modifier": "private final", "type": "EventMonitor", "declarator": "myEventMonitor", "var_name": "myEventMonitor"}, {"original_string": "private final RangeSelectionModel myRangeSelectionModel;", "modifier": "private final", "type": "RangeSelectionModel", "declarator": "myRangeSelectionModel", "var_name": "myRangeSelectionModel"}, {"original_string": "private final StackTraceModel myAllocationStackTraceModel;", "modifier": "private final", "type": "StackTraceModel", "declarator": "myAllocationStackTraceModel", "var_name": "myAllocationStackTraceModel"}, {"original_string": "private final StackTraceModel myDeallocationStackTraceModel;", "modifier": "private final", "type": "StackTraceModel", "declarator": "myDeallocationStackTraceModel", "var_name": "myDeallocationStackTraceModel"}, {"original_string": "private boolean myTrackingAllocations;", "modifier": "private", "type": "boolean", "declarator": "myTrackingAllocations", "var_name": "myTrackingAllocations"}, {"original_string": "private boolean myUpdateCaptureOnSelection = true;", "modifier": "private", "type": "boolean", "declarator": "myUpdateCaptureOnSelection = true", "var_name": "myUpdateCaptureOnSelection"}, {"original_string": "private final CaptureElapsedTimeUpdatable myCaptureElapsedTimeUpdatable = new CaptureElapsedTimeUpdatable();", "modifier": "private final", "type": "CaptureElapsedTimeUpdatable", "declarator": "myCaptureElapsedTimeUpdatable = new CaptureElapsedTimeUpdatable()", "var_name": "myCaptureElapsedTimeUpdatable"}, {"original_string": "private long myPendingCaptureStartTime = INVALID_START_TIME;", "modifier": "private", "type": "long", "declarator": "myPendingCaptureStartTime = INVALID_START_TIME", "var_name": "myPendingCaptureStartTime"}, {"original_string": "private long myPendingLegacyAllocationStartTimeNs = INVALID_START_TIME;", "modifier": "private", "type": "long", "declarator": "myPendingLegacyAllocationStartTimeNs = INVALID_START_TIME", "var_name": "myPendingLegacyAllocationStartTimeNs"}, {"original_string": "@NotNull private final AllocationSamplingRateDataSeries myAllocationSamplingRateDataSeries;", "modifier": "@NotNull private final", "type": "AllocationSamplingRateDataSeries", "declarator": "myAllocationSamplingRateDataSeries", "var_name": "myAllocationSamplingRateDataSeries"}, {"original_string": "@NotNull private final DurationDataModel<AllocationSamplingRateDurationData> myAllocationSamplingRateDurations;", "modifier": "@NotNull private final", "type": "DurationDataModel<AllocationSamplingRateDurationData>", "declarator": "myAllocationSamplingRateDurations", "var_name": "myAllocationSamplingRateDurations"}, {"original_string": "@NotNull private final AllocationSamplingRateUpdatable myAllocationSamplingRateUpdatable;", "modifier": "@NotNull private final", "type": "AllocationSamplingRateUpdatable", "declarator": "myAllocationSamplingRateUpdatable", "var_name": "myAllocationSamplingRateUpdatable"}, {"original_string": "@NotNull private LiveAllocationSamplingMode myLiveAllocationSamplingMode;", "modifier": "@NotNull private", "type": "LiveAllocationSamplingMode", "declarator": "myLiveAllocationSamplingMode", "var_name": "myLiveAllocationSamplingMode"}], "methods": [{"identifier": "getLogger", "parameters": "()", "modifiers": "private static", "return": "Logger", "signature": "Logger getLogger()", "full_signature": "private static Logger getLogger()", "class_method_signature": "MemoryProfilerStage.getLogger()", "testcase": false, "constructor": false}, {"identifier": "MemoryProfilerStage", "parameters": "(@NotNull StudioProfilers profilers)", "modifiers": "public", "return": "", "signature": " MemoryProfilerStage(@NotNull StudioProfilers profilers)", "full_signature": "public  MemoryProfilerStage(@NotNull StudioProfilers profilers)", "class_method_signature": "MemoryProfilerStage.MemoryProfilerStage(@NotNull StudioProfilers profilers)", "testcase": false, "constructor": true}, {"identifier": "MemoryProfilerStage", "parameters": "(@NotNull StudioProfilers profilers, @NotNull CaptureObjectLoader loader)", "modifiers": "@VisibleForTesting public", "return": "", "signature": " MemoryProfilerStage(@NotNull StudioProfilers profilers, @NotNull CaptureObjectLoader loader)", "full_signature": "@VisibleForTesting public  MemoryProfilerStage(@NotNull StudioProfilers profilers, @NotNull CaptureObjectLoader loader)", "class_method_signature": "MemoryProfilerStage.MemoryProfilerStage(@NotNull StudioProfilers profilers, @NotNull CaptureObjectLoader loader)", "testcase": false, "constructor": true}, {"identifier": "hasUserUsedMemoryCapture", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasUserUsedMemoryCapture()", "full_signature": "public boolean hasUserUsedMemoryCapture()", "class_method_signature": "MemoryProfilerStage.hasUserUsedMemoryCapture()", "testcase": false, "constructor": false}, {"identifier": "getDetailedMemoryUsage", "parameters": "()", "modifiers": "public", "return": "DetailedMemoryUsage", "signature": "DetailedMemoryUsage getDetailedMemoryUsage()", "full_signature": "public DetailedMemoryUsage getDetailedMemoryUsage()", "class_method_signature": "MemoryProfilerStage.getDetailedMemoryUsage()", "testcase": false, "constructor": false}, {"identifier": "enter", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void enter()", "full_signature": "@Override public void enter()", "class_method_signature": "MemoryProfilerStage.enter()", "testcase": false, "constructor": false}, {"identifier": "exit", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void exit()", "full_signature": "@Override public void exit()", "class_method_signature": "MemoryProfilerStage.exit()", "testcase": false, "constructor": false}, {"identifier": "getRangeSelectionModel", "parameters": "()", "modifiers": "@NotNull public", "return": "RangeSelectionModel", "signature": "RangeSelectionModel getRangeSelectionModel()", "full_signature": "@NotNull public RangeSelectionModel getRangeSelectionModel()", "class_method_signature": "MemoryProfilerStage.getRangeSelectionModel()", "testcase": false, "constructor": false}, {"identifier": "getAllocationStackTraceModel", "parameters": "()", "modifiers": "@NotNull public", "return": "StackTraceModel", "signature": "StackTraceModel getAllocationStackTraceModel()", "full_signature": "@NotNull public StackTraceModel getAllocationStackTraceModel()", "class_method_signature": "MemoryProfilerStage.getAllocationStackTraceModel()", "testcase": false, "constructor": false}, {"identifier": "getDeallocationStackTraceModel", "parameters": "()", "modifiers": "@NotNull public", "return": "StackTraceModel", "signature": "StackTraceModel getDeallocationStackTraceModel()", "full_signature": "@NotNull public StackTraceModel getDeallocationStackTraceModel()", "class_method_signature": "MemoryProfilerStage.getDeallocationStackTraceModel()", "testcase": false, "constructor": false}, {"identifier": "selectCaptureFromSelectionRange", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void selectCaptureFromSelectionRange()", "full_signature": "private void selectCaptureFromSelectionRange()", "class_method_signature": "MemoryProfilerStage.selectCaptureFromSelectionRange()", "testcase": false, "constructor": false}, {"identifier": "enableSelectLatestCapture", "parameters": "(boolean enable, @Nullable Executor loadJoiner)", "modifiers": "public", "return": "void", "signature": "void enableSelectLatestCapture(boolean enable, @Nullable Executor loadJoiner)", "full_signature": "public void enableSelectLatestCapture(boolean enable, @Nullable Executor loadJoiner)", "class_method_signature": "MemoryProfilerStage.enableSelectLatestCapture(boolean enable, @Nullable Executor loadJoiner)", "testcase": false, "constructor": false}, {"identifier": "isMemoryCaptureOnly", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isMemoryCaptureOnly()", "full_signature": "public boolean isMemoryCaptureOnly()", "class_method_signature": "MemoryProfilerStage.isMemoryCaptureOnly()", "testcase": false, "constructor": false}, {"identifier": "queryAndSelectCaptureObject", "parameters": "(@NotNull Executor loadJoiner)", "modifiers": "private", "return": "void", "signature": "void queryAndSelectCaptureObject(@NotNull Executor loadJoiner)", "full_signature": "private void queryAndSelectCaptureObject(@NotNull Executor loadJoiner)", "class_method_signature": "MemoryProfilerStage.queryAndSelectCaptureObject(@NotNull Executor loadJoiner)", "testcase": false, "constructor": false}, {"identifier": "setPendingCaptureStartTime", "parameters": "(long pendingCaptureStartTime)", "modifiers": "public", "return": "void", "signature": "void setPendingCaptureStartTime(long pendingCaptureStartTime)", "full_signature": "public void setPendingCaptureStartTime(long pendingCaptureStartTime)", "class_method_signature": "MemoryProfilerStage.setPendingCaptureStartTime(long pendingCaptureStartTime)", "testcase": false, "constructor": false}, {"identifier": "getAspect", "parameters": "()", "modifiers": "@NotNull public", "return": "AspectModel<MemoryProfilerAspect>", "signature": "AspectModel<MemoryProfilerAspect> getAspect()", "full_signature": "@NotNull public AspectModel<MemoryProfilerAspect> getAspect()", "class_method_signature": "MemoryProfilerStage.getAspect()", "testcase": false, "constructor": false}, {"identifier": "requestHeapDump", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void requestHeapDump()", "full_signature": "public void requestHeapDump()", "class_method_signature": "MemoryProfilerStage.requestHeapDump()", "testcase": false, "constructor": false}, {"identifier": "handleHeapDumpStart", "parameters": "(@NotNull Memory.HeapDumpStatus status)", "modifiers": "private", "return": "void", "signature": "void handleHeapDumpStart(@NotNull Memory.HeapDumpStatus status)", "full_signature": "private void handleHeapDumpStart(@NotNull Memory.HeapDumpStatus status)", "class_method_signature": "MemoryProfilerStage.handleHeapDumpStart(@NotNull Memory.HeapDumpStatus status)", "testcase": false, "constructor": false}, {"identifier": "forceGarbageCollection", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void forceGarbageCollection()", "full_signature": "public void forceGarbageCollection()", "class_method_signature": "MemoryProfilerStage.forceGarbageCollection()", "testcase": false, "constructor": false}, {"identifier": "getHeapDumpSampleDurations", "parameters": "()", "modifiers": "public", "return": "DurationDataModel<CaptureDurationData<CaptureObject>>", "signature": "DurationDataModel<CaptureDurationData<CaptureObject>> getHeapDumpSampleDurations()", "full_signature": "public DurationDataModel<CaptureDurationData<CaptureObject>> getHeapDumpSampleDurations()", "class_method_signature": "MemoryProfilerStage.getHeapDumpSampleDurations()", "testcase": false, "constructor": false}, {"identifier": "trackAllocations", "parameters": "(boolean enable)", "modifiers": "public", "return": "void", "signature": "void trackAllocations(boolean enable)", "full_signature": "public void trackAllocations(boolean enable)", "class_method_signature": "MemoryProfilerStage.trackAllocations(boolean enable)", "testcase": false, "constructor": false}, {"identifier": "isTrackingAllocations", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTrackingAllocations()", "full_signature": "public boolean isTrackingAllocations()", "class_method_signature": "MemoryProfilerStage.isTrackingAllocations()", "testcase": false, "constructor": false}, {"identifier": "getAllocationTrackingElapsedTimeNs", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getAllocationTrackingElapsedTimeNs()", "full_signature": "public long getAllocationTrackingElapsedTimeNs()", "class_method_signature": "MemoryProfilerStage.getAllocationTrackingElapsedTimeNs()", "testcase": false, "constructor": false}, {"identifier": "getIntersectingCaptureDuration", "parameters": "(@NotNull Range range)", "modifiers": "@Nullable public", "return": "CaptureDurationData<? extends CaptureObject>", "signature": "CaptureDurationData<? extends CaptureObject> getIntersectingCaptureDuration(@NotNull Range range)", "full_signature": "@Nullable public CaptureDurationData<? extends CaptureObject> getIntersectingCaptureDuration(@NotNull Range range)", "class_method_signature": "MemoryProfilerStage.getIntersectingCaptureDuration(@NotNull Range range)", "testcase": false, "constructor": false}, {"identifier": "useLiveAllocationTracking", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean useLiveAllocationTracking()", "full_signature": "public boolean useLiveAllocationTracking()", "class_method_signature": "MemoryProfilerStage.useLiveAllocationTracking()", "testcase": false, "constructor": false}, {"identifier": "getAllocationInfosDurations", "parameters": "()", "modifiers": "@NotNull public", "return": "DurationDataModel<CaptureDurationData<CaptureObject>>", "signature": "DurationDataModel<CaptureDurationData<CaptureObject>> getAllocationInfosDurations()", "full_signature": "@NotNull public DurationDataModel<CaptureDurationData<CaptureObject>> getAllocationInfosDurations()", "class_method_signature": "MemoryProfilerStage.getAllocationInfosDurations()", "testcase": false, "constructor": false}, {"identifier": "selectFieldObjectPath", "parameters": "(@NotNull List<FieldObject> fieldObjectPath)", "modifiers": "public", "return": "void", "signature": "void selectFieldObjectPath(@NotNull List<FieldObject> fieldObjectPath)", "full_signature": "public void selectFieldObjectPath(@NotNull List<FieldObject> fieldObjectPath)", "class_method_signature": "MemoryProfilerStage.selectFieldObjectPath(@NotNull List<FieldObject> fieldObjectPath)", "testcase": false, "constructor": false}, {"identifier": "getSelectedFieldObjectPath", "parameters": "()", "modifiers": "@NotNull public", "return": "List<FieldObject>", "signature": "List<FieldObject> getSelectedFieldObjectPath()", "full_signature": "@NotNull public List<FieldObject> getSelectedFieldObjectPath()", "class_method_signature": "MemoryProfilerStage.getSelectedFieldObjectPath()", "testcase": false, "constructor": false}, {"identifier": "selectInstanceObject", "parameters": "(@Nullable InstanceObject instanceObject)", "modifiers": "public", "return": "void", "signature": "void selectInstanceObject(@Nullable InstanceObject instanceObject)", "full_signature": "public void selectInstanceObject(@Nullable InstanceObject instanceObject)", "class_method_signature": "MemoryProfilerStage.selectInstanceObject(@Nullable InstanceObject instanceObject)", "testcase": false, "constructor": false}, {"identifier": "getSelectedInstanceObject", "parameters": "()", "modifiers": "@Nullable public", "return": "InstanceObject", "signature": "InstanceObject getSelectedInstanceObject()", "full_signature": "@Nullable public InstanceObject getSelectedInstanceObject()", "class_method_signature": "MemoryProfilerStage.getSelectedInstanceObject()", "testcase": false, "constructor": false}, {"identifier": "selectClassSet", "parameters": "(@Nullable ClassSet classSet)", "modifiers": "public", "return": "void", "signature": "void selectClassSet(@Nullable ClassSet classSet)", "full_signature": "public void selectClassSet(@Nullable ClassSet classSet)", "class_method_signature": "MemoryProfilerStage.selectClassSet(@Nullable ClassSet classSet)", "testcase": false, "constructor": false}, {"identifier": "getSelectedClassSet", "parameters": "()", "modifiers": "@Nullable public", "return": "ClassSet", "signature": "ClassSet getSelectedClassSet()", "full_signature": "@Nullable public ClassSet getSelectedClassSet()", "class_method_signature": "MemoryProfilerStage.getSelectedClassSet()", "testcase": false, "constructor": false}, {"identifier": "refreshSelectedHeap", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void refreshSelectedHeap()", "full_signature": "public void refreshSelectedHeap()", "class_method_signature": "MemoryProfilerStage.refreshSelectedHeap()", "testcase": false, "constructor": false}, {"identifier": "selectHeapSet", "parameters": "(@Nullable HeapSet heapSet)", "modifiers": "public", "return": "void", "signature": "void selectHeapSet(@Nullable HeapSet heapSet)", "full_signature": "public void selectHeapSet(@Nullable HeapSet heapSet)", "class_method_signature": "MemoryProfilerStage.selectHeapSet(@Nullable HeapSet heapSet)", "testcase": false, "constructor": false}, {"identifier": "getSelectedHeapSet", "parameters": "()", "modifiers": "@Nullable public", "return": "HeapSet", "signature": "HeapSet getSelectedHeapSet()", "full_signature": "@Nullable public HeapSet getSelectedHeapSet()", "class_method_signature": "MemoryProfilerStage.getSelectedHeapSet()", "testcase": false, "constructor": false}, {"identifier": "selectCaptureFilter", "parameters": "(@NotNull Filter filter)", "modifiers": "private", "return": "void", "signature": "void selectCaptureFilter(@NotNull Filter filter)", "full_signature": "private void selectCaptureFilter(@NotNull Filter filter)", "class_method_signature": "MemoryProfilerStage.selectCaptureFilter(@NotNull Filter filter)", "testcase": false, "constructor": false}, {"identifier": "trackFilterUsage", "parameters": "(@NotNull Filter filter)", "modifiers": "private", "return": "void", "signature": "void trackFilterUsage(@NotNull Filter filter)", "full_signature": "private void trackFilterUsage(@NotNull Filter filter)", "class_method_signature": "MemoryProfilerStage.trackFilterUsage(@NotNull Filter filter)", "testcase": false, "constructor": false}, {"identifier": "getFilterHandler", "parameters": "()", "modifiers": "@NotNull public", "return": "FilterHandler", "signature": "FilterHandler getFilterHandler()", "full_signature": "@NotNull public FilterHandler getFilterHandler()", "class_method_signature": "MemoryProfilerStage.getFilterHandler()", "testcase": false, "constructor": false}, {"identifier": "selectCaptureDuration", "parameters": "(@Nullable CaptureDurationData<? extends CaptureObject> durationData,\n                             @Nullable Executor joiner)", "modifiers": "@VisibleForTesting", "return": "void", "signature": "void selectCaptureDuration(@Nullable CaptureDurationData<? extends CaptureObject> durationData,\n                             @Nullable Executor joiner)", "full_signature": "@VisibleForTesting void selectCaptureDuration(@Nullable CaptureDurationData<? extends CaptureObject> durationData,\n                             @Nullable Executor joiner)", "class_method_signature": "MemoryProfilerStage.selectCaptureDuration(@Nullable CaptureDurationData<? extends CaptureObject> durationData,\n                             @Nullable Executor joiner)", "testcase": false, "constructor": false}, {"identifier": "getAllocationSamplingRateDurations", "parameters": "()", "modifiers": "@NotNull", "return": "DurationDataModel<AllocationSamplingRateDurationData>", "signature": "DurationDataModel<AllocationSamplingRateDurationData> getAllocationSamplingRateDurations()", "full_signature": "@NotNull DurationDataModel<AllocationSamplingRateDurationData> getAllocationSamplingRateDurations()", "class_method_signature": "MemoryProfilerStage.getAllocationSamplingRateDurations()", "testcase": false, "constructor": false}, {"identifier": "getSupportedLiveAllocationSamplingMode", "parameters": "()", "modifiers": "@NotNull public", "return": "List<LiveAllocationSamplingMode>", "signature": "List<LiveAllocationSamplingMode> getSupportedLiveAllocationSamplingMode()", "full_signature": "@NotNull public List<LiveAllocationSamplingMode> getSupportedLiveAllocationSamplingMode()", "class_method_signature": "MemoryProfilerStage.getSupportedLiveAllocationSamplingMode()", "testcase": false, "constructor": false}, {"identifier": "getLiveAllocationSamplingMode", "parameters": "()", "modifiers": "@NotNull public", "return": "LiveAllocationSamplingMode", "signature": "LiveAllocationSamplingMode getLiveAllocationSamplingMode()", "full_signature": "@NotNull public LiveAllocationSamplingMode getLiveAllocationSamplingMode()", "class_method_signature": "MemoryProfilerStage.getLiveAllocationSamplingMode()", "testcase": false, "constructor": false}, {"identifier": "requestLiveAllocationSamplingModeUpdate", "parameters": "(@NotNull LiveAllocationSamplingMode mode)", "modifiers": "public", "return": "void", "signature": "void requestLiveAllocationSamplingModeUpdate(@NotNull LiveAllocationSamplingMode mode)", "full_signature": "public void requestLiveAllocationSamplingModeUpdate(@NotNull LiveAllocationSamplingMode mode)", "class_method_signature": "MemoryProfilerStage.requestLiveAllocationSamplingModeUpdate(@NotNull LiveAllocationSamplingMode mode)", "testcase": false, "constructor": false}, {"identifier": "setLiveAllocationSamplingModelInternal", "parameters": "(@NotNull LiveAllocationSamplingMode mode)", "modifiers": "private", "return": "void", "signature": "void setLiveAllocationSamplingModelInternal(@NotNull LiveAllocationSamplingMode mode)", "full_signature": "private void setLiveAllocationSamplingModelInternal(@NotNull LiveAllocationSamplingMode mode)", "class_method_signature": "MemoryProfilerStage.setLiveAllocationSamplingModelInternal(@NotNull LiveAllocationSamplingMode mode)", "testcase": false, "constructor": false}, {"identifier": "updateAllocationTrackingStatus", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updateAllocationTrackingStatus()", "full_signature": "private void updateAllocationTrackingStatus()", "class_method_signature": "MemoryProfilerStage.updateAllocationTrackingStatus()", "testcase": false, "constructor": false}, {"identifier": "getSelectedCapture", "parameters": "()", "modifiers": "@Nullable public", "return": "CaptureObject", "signature": "CaptureObject getSelectedCapture()", "full_signature": "@Nullable public CaptureObject getSelectedCapture()", "class_method_signature": "MemoryProfilerStage.getSelectedCapture()", "testcase": false, "constructor": false}, {"identifier": "getConfiguration", "parameters": "()", "modifiers": "@NotNull public", "return": "MemoryProfilerConfiguration", "signature": "MemoryProfilerConfiguration getConfiguration()", "full_signature": "@NotNull public MemoryProfilerConfiguration getConfiguration()", "class_method_signature": "MemoryProfilerStage.getConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getMemoryAxis", "parameters": "()", "modifiers": "public", "return": "AxisComponentModel", "signature": "AxisComponentModel getMemoryAxis()", "full_signature": "public AxisComponentModel getMemoryAxis()", "class_method_signature": "MemoryProfilerStage.getMemoryAxis()", "testcase": false, "constructor": false}, {"identifier": "getObjectsAxis", "parameters": "()", "modifiers": "public", "return": "AxisComponentModel", "signature": "AxisComponentModel getObjectsAxis()", "full_signature": "public AxisComponentModel getObjectsAxis()", "class_method_signature": "MemoryProfilerStage.getObjectsAxis()", "testcase": false, "constructor": false}, {"identifier": "getLegends", "parameters": "()", "modifiers": "public", "return": "MemoryStageLegends", "signature": "MemoryStageLegends getLegends()", "full_signature": "public MemoryStageLegends getLegends()", "class_method_signature": "MemoryProfilerStage.getLegends()", "testcase": false, "constructor": false}, {"identifier": "getTooltipLegends", "parameters": "()", "modifiers": "public", "return": "MemoryStageLegends", "signature": "MemoryStageLegends getTooltipLegends()", "full_signature": "public MemoryStageLegends getTooltipLegends()", "class_method_signature": "MemoryProfilerStage.getTooltipLegends()", "testcase": false, "constructor": false}, {"identifier": "getInstructionsEaseOutModel", "parameters": "()", "modifiers": "@NotNull public", "return": "EaseOutModel", "signature": "EaseOutModel getInstructionsEaseOutModel()", "full_signature": "@NotNull public EaseOutModel getInstructionsEaseOutModel()", "class_method_signature": "MemoryProfilerStage.getInstructionsEaseOutModel()", "testcase": false, "constructor": false}, {"identifier": "getEventMonitor", "parameters": "()", "modifiers": "public", "return": "EventMonitor", "signature": "EventMonitor getEventMonitor()", "full_signature": "public EventMonitor getEventMonitor()", "class_method_signature": "MemoryProfilerStage.getEventMonitor()", "testcase": false, "constructor": false}, {"identifier": "getGcStatsModel", "parameters": "()", "modifiers": "@NotNull public", "return": "DurationDataModel<GcDurationData>", "signature": "DurationDataModel<GcDurationData> getGcStatsModel()", "full_signature": "@NotNull public DurationDataModel<GcDurationData> getGcStatsModel()", "class_method_signature": "MemoryProfilerStage.getGcStatsModel()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "MemoryProfilerStage.getName()", "testcase": false, "constructor": false}, {"identifier": "onNavigated", "parameters": "(@NotNull CodeLocation location)", "modifiers": "@Override public", "return": "void", "signature": "void onNavigated(@NotNull CodeLocation location)", "full_signature": "@Override public void onNavigated(@NotNull CodeLocation location)", "class_method_signature": "MemoryProfilerStage.onNavigated(@NotNull CodeLocation location)", "testcase": false, "constructor": false}, {"identifier": "canSafelyLoadHprof", "parameters": "(long fileSize)", "modifiers": "public static", "return": "boolean", "signature": "boolean canSafelyLoadHprof(long fileSize)", "full_signature": "public static boolean canSafelyLoadHprof(long fileSize)", "class_method_signature": "MemoryProfilerStage.canSafelyLoadHprof(long fileSize)", "testcase": false, "constructor": false}], "file": "profilers/src/com/android/tools/profilers/memory/MemoryProfilerStage.java"}, "focal_method": {"identifier": "requestHeapDump", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void requestHeapDump() {\n    if (getStudioProfilers().getIdeServices().getFeatureConfig().isUnifiedPipelineEnabled()) {\n      assert getStudioProfilers().getProcess() != null;\n      Commands.Command dumpCommand = Commands.Command.newBuilder()\n        .setStreamId(mySessionData.getStreamId())\n        .setPid(mySessionData.getPid())\n        .setType(Commands.Command.CommandType.HEAP_DUMP)\n        .build();\n      Transport.ExecuteResponse response = getStudioProfilers().getClient().getTransportClient().execute(\n        Transport.ExecuteRequest.newBuilder().setCommand(dumpCommand).build());\n      TransportEventListener statusListener = new TransportEventListener(Common.Event.Kind.MEMORY_HEAP_DUMP_STATUS,\n                                                                         getStudioProfilers().getIdeServices().getMainExecutor(),\n                                                                         event -> event.getCommandId() == response.getCommandId(),\n                                                                         () -> mySessionData.getStreamId(),\n                                                                         () -> mySessionData.getPid(),\n                                                                         event -> {\n                                                                           handleHeapDumpStart(event.getMemoryHeapdumpStatus().getStatus());\n                                                                           // unregisters the listener.\n                                                                           return true;\n                                                                         });\n      getStudioProfilers().getTransportPoller().registerListener(statusListener);\n    }\n    else {\n      TriggerHeapDumpResponse response = myClient.triggerHeapDump(TriggerHeapDumpRequest.newBuilder().setSession(mySessionData).build());\n      handleHeapDumpStart(response.getStatus());\n    }\n\n    getTimeline().setStreaming(true);\n    getStudioProfilers().getIdeServices().getTemporaryProfilerPreferences().setBoolean(HAS_USED_MEMORY_CAPTURE, true);\n    myInstructionsEaseOutModel.setCurrentPercentage(1);\n  }", "signature": "void requestHeapDump()", "full_signature": "public void requestHeapDump()", "class_method_signature": "MemoryProfilerStage.requestHeapDump()", "testcase": false, "constructor": false, "invocations": ["isUnifiedPipelineEnabled", "getFeatureConfig", "getIdeServices", "getStudioProfilers", "getProcess", "getStudioProfilers", "build", "setType", "setPid", "setStreamId", "newBuilder", "getStreamId", "getPid", "execute", "getTransportClient", "getClient", "getStudioProfilers", "build", "setCommand", "newBuilder", "getMainExecutor", "getIdeServices", "getStudioProfilers", "getCommandId", "getCommandId", "getStreamId", "getPid", "handleHeapDumpStart", "getStatus", "getMemoryHeapdumpStatus", "registerListener", "getTransportPoller", "getStudioProfilers", "triggerHeapDump", "build", "setSession", "newBuilder", "handleHeapDumpStart", "getStatus", "setStreaming", "getTimeline", "setBoolean", "getTemporaryProfilerPreferences", "getIdeServices", "getStudioProfilers", "setCurrentPercentage"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}