{"test_class": {"identifier": "TestServiceWrapperChain", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ServiceWrapperChain impl;", "modifier": "private", "type": "ServiceWrapperChain", "declarator": "impl", "var_name": "impl"}], "file": "jrugged-core/src/test/java/org/fishwife/jrugged/TestServiceWrapperChain.java"}, "test_case": {"identifier": "callableWithOneWrapperRunsThroughWrapper", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void callableWithOneWrapperRunsThroughWrapper() throws Exception {\n        final Object out = new Object();\n        Callable<Object> c = new Callable<Object>() {\n            public Object call() throws Exception {\n                return null;\n            }\n        };\n        ServiceWrapper wrapper = createMock(ServiceWrapper.class);\n        impl = new ServiceWrapperChain(Arrays.asList(wrapper));\n\n        expect(wrapper.invoke(c)).andReturn(out);\n        replay(wrapper);\n        Object result = impl.invoke(c);\n        verify(wrapper);\n        assertSame(out, result);\n    }", "signature": "void callableWithOneWrapperRunsThroughWrapper()", "full_signature": "@Test public void callableWithOneWrapperRunsThroughWrapper()", "class_method_signature": "TestServiceWrapperChain.callableWithOneWrapperRunsThroughWrapper()", "testcase": true, "constructor": false, "invocations": ["createMock", "asList", "andReturn", "expect", "invoke", "replay", "invoke", "verify", "assertSame"]}, "focal_class": {"identifier": "ServiceWrapperChain", "superclass": "", "interfaces": "implements ServiceWrapper", "fields": [{"original_string": "private List<ServiceWrapper> wrappers;", "modifier": "private", "type": "List<ServiceWrapper>", "declarator": "wrappers", "var_name": "wrappers"}], "methods": [{"identifier": "ServiceWrapperChain", "parameters": "(Collection<ServiceWrapper> wrappers)", "modifiers": "public", "return": "", "signature": " ServiceWrapperChain(Collection<ServiceWrapper> wrappers)", "full_signature": "public  ServiceWrapperChain(Collection<ServiceWrapper> wrappers)", "class_method_signature": "ServiceWrapperChain.ServiceWrapperChain(Collection<ServiceWrapper> wrappers)", "testcase": false, "constructor": true}, {"identifier": "wrap", "parameters": "(final Callable<T> c, final ServiceWrapper wrapper)", "modifiers": "private", "return": "Callable<T>", "signature": "Callable<T> wrap(final Callable<T> c, final ServiceWrapper wrapper)", "full_signature": "private Callable<T> wrap(final Callable<T> c, final ServiceWrapper wrapper)", "class_method_signature": "ServiceWrapperChain.wrap(final Callable<T> c, final ServiceWrapper wrapper)", "testcase": false, "constructor": false}, {"identifier": "wrap", "parameters": "(final Runnable r, final ServiceWrapper wrapper)", "modifiers": "private", "return": "Runnable", "signature": "Runnable wrap(final Runnable r, final ServiceWrapper wrapper)", "full_signature": "private Runnable wrap(final Runnable r, final ServiceWrapper wrapper)", "class_method_signature": "ServiceWrapperChain.wrap(final Runnable r, final ServiceWrapper wrapper)", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(Callable<T> c)", "modifiers": "public", "return": "T", "signature": "T invoke(Callable<T> c)", "full_signature": "public T invoke(Callable<T> c)", "class_method_signature": "ServiceWrapperChain.invoke(Callable<T> c)", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(Runnable r)", "modifiers": "public", "return": "void", "signature": "void invoke(Runnable r)", "full_signature": "public void invoke(Runnable r)", "class_method_signature": "ServiceWrapperChain.invoke(Runnable r)", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(Runnable r, T result)", "modifiers": "public", "return": "T", "signature": "T invoke(Runnable r, T result)", "full_signature": "public T invoke(Runnable r, T result)", "class_method_signature": "ServiceWrapperChain.invoke(Runnable r, T result)", "testcase": false, "constructor": false}], "file": "jrugged-core/src/main/java/org/fishwife/jrugged/ServiceWrapperChain.java"}, "focal_method": {"identifier": "invoke", "parameters": "(Callable<T> c)", "modifiers": "public", "return": "T", "body": "public <T> T invoke(Callable<T> c) throws Exception {\n        for(ServiceWrapper wrapper : wrappers) {\n            c = wrap(c, wrapper);\n        }\n        return c.call();\n    }", "signature": "T invoke(Callable<T> c)", "full_signature": "public T invoke(Callable<T> c)", "class_method_signature": "ServiceWrapperChain.invoke(Callable<T> c)", "testcase": false, "constructor": false, "invocations": ["wrap", "call"]}, "repository": {"repo_id": 6602723, "url": "https://github.com/Comcast/jrugged", "language": "Java", "is_fork": false, "fork_count": 90, "stargazer_count": 236, "size": 1302, "license": "licensed"}}