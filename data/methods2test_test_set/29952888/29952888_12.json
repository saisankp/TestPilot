{"test_class": {"identifier": "ObjectifyRecordFormatterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final QueryFilterOperator ANY_OPERATOR = QueryFilterOperator.GREATER_THAN;", "modifier": "public static final", "type": "QueryFilterOperator", "declarator": "ANY_OPERATOR = QueryFilterOperator.GREATER_THAN", "var_name": "ANY_OPERATOR"}, {"original_string": "@Inject\n    ObjectifyRecordFormatter formatter;", "modifier": "@Inject", "type": "ObjectifyRecordFormatter", "declarator": "formatter", "var_name": "formatter"}], "file": "gae-studio/gae-studio-client/src/test/java/com/arcbees/gaestudio/client/formatters/ObjectifyRecordFormatterTest.java"}, "test_case": {"identifier": "formatRecord_filterValueContainsUnicodeReplacementCharacter_replacementCharacterIsEscaped", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void formatRecord_filterValueContainsUnicodeReplacementCharacter_replacementCharacterIsEscaped() {\n        // given\n        QueryRecordDto queryRecordDto = getQueryRecordDto();\n        QueryFilterDto queryFilterDto = getQueryFilterDto(\"theValue\" + '\\ufffd');\n        queryRecordDto.getQuery().getFilters().add(queryFilterDto);\n\n        // when\n        String formatted = formatter.formatRecord(queryRecordDto);\n\n        // then\n        assertNotEquals(\"Formatted query still contains unicode character\",\n                \"query().filter(\\\"null >\\\", theValue\ufffd)\", formatted);\n        assertEquals(\"Formatted query does not contain escaped unicode character\",\n                \"query().filter(\\\"null >\\\", theValue\\\\ufffd)\", formatted);\n    }", "signature": "void formatRecord_filterValueContainsUnicodeReplacementCharacter_replacementCharacterIsEscaped()", "full_signature": "@Test public void formatRecord_filterValueContainsUnicodeReplacementCharacter_replacementCharacterIsEscaped()", "class_method_signature": "ObjectifyRecordFormatterTest.formatRecord_filterValueContainsUnicodeReplacementCharacter_replacementCharacterIsEscaped()", "testcase": true, "constructor": false, "invocations": ["getQueryRecordDto", "getQueryFilterDto", "add", "getFilters", "getQuery", "formatRecord", "assertNotEquals", "assertEquals"]}, "focal_class": {"identifier": "ObjectifyRecordFormatter", "superclass": "extends AbstractRecordFormatter", "interfaces": "", "fields": [{"original_string": "private static final HashMap<QueryFilterOperator, String> FILTER_OP_SYMBOLS =\n            new HashMap<QueryFilterOperator, String>();", "modifier": "private static final", "type": "HashMap<QueryFilterOperator, String>", "declarator": "FILTER_OP_SYMBOLS =\n            new HashMap<QueryFilterOperator, String>()", "var_name": "FILTER_OP_SYMBOLS"}], "methods": [{"identifier": "formatRecord", "parameters": "(DeleteRecordDto record)", "modifiers": "@Override public", "return": "String", "signature": "String formatRecord(DeleteRecordDto record)", "full_signature": "@Override public String formatRecord(DeleteRecordDto record)", "class_method_signature": "ObjectifyRecordFormatter.formatRecord(DeleteRecordDto record)", "testcase": false, "constructor": false}, {"identifier": "formatRecord", "parameters": "(GetRecordDto record)", "modifiers": "@Override public", "return": "String", "signature": "String formatRecord(GetRecordDto record)", "full_signature": "@Override public String formatRecord(GetRecordDto record)", "class_method_signature": "ObjectifyRecordFormatter.formatRecord(GetRecordDto record)", "testcase": false, "constructor": false}, {"identifier": "formatRecord", "parameters": "(PutRecordDto record)", "modifiers": "@Override public", "return": "String", "signature": "String formatRecord(PutRecordDto record)", "full_signature": "@Override public String formatRecord(PutRecordDto record)", "class_method_signature": "ObjectifyRecordFormatter.formatRecord(PutRecordDto record)", "testcase": false, "constructor": false}, {"identifier": "formatRecord", "parameters": "(QueryRecordDto record)", "modifiers": "@Override public", "return": "String", "signature": "String formatRecord(QueryRecordDto record)", "full_signature": "@Override public String formatRecord(QueryRecordDto record)", "class_method_signature": "ObjectifyRecordFormatter.formatRecord(QueryRecordDto record)", "testcase": false, "constructor": false}, {"identifier": "operatorToString", "parameters": "(QueryFilterOperator operator)", "modifiers": "private", "return": "String", "signature": "String operatorToString(QueryFilterOperator operator)", "full_signature": "private String operatorToString(QueryFilterOperator operator)", "class_method_signature": "ObjectifyRecordFormatter.operatorToString(QueryFilterOperator operator)", "testcase": false, "constructor": false}], "file": "gae-studio/gae-studio-client/src/main/java/com/arcbees/gaestudio/client/formatters/ObjectifyRecordFormatter.java"}, "focal_method": {"identifier": "formatRecord", "parameters": "(DeleteRecordDto record)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String formatRecord(DeleteRecordDto record) {\n        return \"Delete record formatting not implemented yet\";\n    }", "signature": "String formatRecord(DeleteRecordDto record)", "full_signature": "@Override public String formatRecord(DeleteRecordDto record)", "class_method_signature": "ObjectifyRecordFormatter.formatRecord(DeleteRecordDto record)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 29952888, "url": "https://github.com/ArcBees/gae-studio", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 21, "size": 11408, "license": "licensed"}}