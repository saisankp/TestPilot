{"test_class": {"identifier": "JobTemplateTest", "superclass": "extends AbstractLinkedInApiTest", "interfaces": "", "fields": [], "file": "spring-social-linkedin/src/test/java/org/springframework/social/linkedin/api/impl/JobTemplateTest.java"}, "test_case": {"identifier": "getSuggestions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getSuggestions() {\n\t\tmockServer.expect(requestTo(JobTemplate.SUGGESTED_URL\n\t\t\t\t.replaceFirst(\"\\\\{\\\\&start\\\\}\", \"start=0\")\n\t\t\t\t.replaceFirst(\"\\\\{\\\\&count\\\\}\", \"&count=10\") + \"&oauth2_access_token=ACCESS_TOKEN\")).andExpect(method(GET))\n\t\t\t.andRespond(withSuccess(new ClassPathResource(\"job_suggestions.json\", getClass()), MediaType.APPLICATION_JSON));\n\t\t\n\t\tList<Job> jobs = linkedIn.jobOperations().getSuggestions(0, 10).getJobs();\n\t\t\n\t\tassertEquals(10, jobs.size());\n\t\tJob j = jobs.get(6);\n\t\tassertEquals(true, j.isActive());\n\t\tassertEquals(139355, j.getCompany().getId());\n\t\tassertEquals(\"Allen Recruitment Consulting\", j.getCompany().getName());\n\t\tassertEquals(\"5404\", j.getCustomerJobCode());\n\t\tassertEquals(2755, j.getDescription().length());\n\t\tassertEquals(400, j.getDescriptionSnippet().length());\n\t\tassertLinkedInDate(j.getExpirationDate(), 2012, 2, 6);\n\t\tassertEquals(new Date(1328549338000l), j.getExpirationTimestamp());\n\t\tassertEquals(2160963, j.getId());\n\t\tassertProfile(j.getJobPoster(), \"U1Gll9nr47\", \"Director, Allen Recruitment Consulting - Recruitment\", \"Louise\", \"Allen (Louise@AllenRec.com)\",null, \"\");\n\t\tassertEquals(\"Dublin\", j.getLocationDescription());\n\t\tassertLinkedInDate(j.getPostingDate(), 2011, 11, 8);\n\t\tassertEquals(new Date(1320773338000l), j.getPostingTimestamp());\n\t\tassertEquals(\"60 - 70K or 350-400/day (EURO)\", j.getSalary());\n\t\tassertEquals(\"https://www.linkedin.com/jobs?viewJob=&jobId=2160963&trk=api*a151944*s160233*\", j.getSiteJobUrl());\n\t\tassertEquals(494, j.getSkillsAndExperience().length());\n\t\t\n\t\tJobPosition p = j.getPosition();\n\t\tassertEquals(\"4\", p.getExperienceLevel().getCode());\n\t\tassertEquals(\"Mid-Senior level\", p.getExperienceLevel().getName());\n\t\tassertEquals(\"4\", p.getIndustries().get(0).getCode());\n\t\tassertEquals(\"Computer Software\", p.getIndustries().get(0).getName());\n\t\tassertEquals(\"it\", p.getJobFunctions().get(0).getCode());\n\t\tassertEquals(\"Information Technology\", p.getJobFunctions().get(0).getName());\n\t\tassertEquals(\"F\", p.getJobType().getCode());\n\t\tassertEquals(\"Full-time\", p.getJobType().getName());\n\t\tassertEquals(\"ie\", p.getLocation().getCountry());\n\t\tassertEquals(\"Ireland\", p.getLocation().getName());\n\t\tassertEquals(\"Java Developer - GWT (Perm or Contract) \\u2013 Dublin, Ireland\", p.getTitle());\n\t}", "signature": "void getSuggestions()", "full_signature": "@Test public void getSuggestions()", "class_method_signature": "JobTemplateTest.getSuggestions()", "testcase": true, "constructor": false, "invocations": ["andRespond", "andExpect", "expect", "requestTo", "replaceFirst", "replaceFirst", "method", "withSuccess", "getClass", "getJobs", "getSuggestions", "jobOperations", "assertEquals", "size", "get", "assertEquals", "isActive", "assertEquals", "getId", "getCompany", "assertEquals", "getName", "getCompany", "assertEquals", "getCustomerJobCode", "assertEquals", "length", "getDescription", "assertEquals", "length", "getDescriptionSnippet", "assertLinkedInDate", "getExpirationDate", "assertEquals", "getExpirationTimestamp", "assertEquals", "getId", "assertProfile", "getJobPoster", "assertEquals", "getLocationDescription", "assertLinkedInDate", "getPostingDate", "assertEquals", "getPostingTimestamp", "assertEquals", "getSalary", "assertEquals", "getSiteJobUrl", "assertEquals", "length", "getSkillsAndExperience", "getPosition", "assertEquals", "getCode", "getExperienceLevel", "assertEquals", "getName", "getExperienceLevel", "assertEquals", "getCode", "get", "getIndustries", "assertEquals", "getName", "get", "getIndustries", "assertEquals", "getCode", "get", "getJobFunctions", "assertEquals", "getName", "get", "getJobFunctions", "assertEquals", "getCode", "getJobType", "assertEquals", "getName", "getJobType", "assertEquals", "getCountry", "getLocation", "assertEquals", "getName", "getLocation", "assertEquals", "getTitle"]}, "focal_class": {"identifier": "JobTemplate", "superclass": "extends AbstractTemplate", "interfaces": "implements JobOperations", "fields": [{"original_string": "private final RestOperations restOperations;", "modifier": "private final", "type": "RestOperations", "declarator": "restOperations", "var_name": "restOperations"}, {"original_string": "private final ObjectMapper objectMapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}, {"original_string": "public static final String BASE_URL = \"https://api.linkedin.com/v1/\";", "modifier": "public static final", "type": "String", "declarator": "BASE_URL = \"https://api.linkedin.com/v1/\"", "var_name": "BASE_URL"}, {"original_string": "public static final String FIELDS = \"(id,customer-job-code,active,posting-date,expiration-date,posting-timestamp,expiration-timestamp,company:(id,name),position:(title,location,job-functions,industries,job-type,experience-level),skills-and-experience,description-snippet,description,salary,job-poster:(id,first-name,last-name,headline),referral-bonus,site-job-url,location-description)\";", "modifier": "public static final", "type": "String", "declarator": "FIELDS = \"(id,customer-job-code,active,posting-date,expiration-date,posting-timestamp,expiration-timestamp,company:(id,name),position:(title,location,job-functions,industries,job-type,experience-level),skills-and-experience,description-snippet,description,salary,job-poster:(id,first-name,last-name,headline),referral-bonus,site-job-url,location-description)\"", "var_name": "FIELDS"}, {"original_string": "public static final String SEARCH_FIELDS = \"(jobs:\" + FIELDS + \")\";", "modifier": "public static final", "type": "String", "declarator": "SEARCH_FIELDS = \"(jobs:\" + FIELDS + \")\"", "var_name": "SEARCH_FIELDS"}, {"original_string": "public static final String SEARCH_URL = BASE_URL + \"job-search:\" + SEARCH_FIELDS + \"?{&keywords}{&company-name}{&job-title}{&country-code}{&postal-code}{&distance}{&start}{&count}{&sort}\";", "modifier": "public static final", "type": "String", "declarator": "SEARCH_URL = BASE_URL + \"job-search:\" + SEARCH_FIELDS + \"?{&keywords}{&company-name}{&job-title}{&country-code}{&postal-code}{&distance}{&start}{&count}{&sort}\"", "var_name": "SEARCH_URL"}, {"original_string": "public static final String JOB_URL = BASE_URL + \"jobs/{id}:\" + FIELDS;", "modifier": "public static final", "type": "String", "declarator": "JOB_URL = BASE_URL + \"jobs/{id}:\" + FIELDS", "var_name": "JOB_URL"}, {"original_string": "public static final String BOOKMARK_URL = BASE_URL + \"people/~/job-bookmarks\";", "modifier": "public static final", "type": "String", "declarator": "BOOKMARK_URL = BASE_URL + \"people/~/job-bookmarks\"", "var_name": "BOOKMARK_URL"}, {"original_string": "public static final String BOOKMARKS_URL = BOOKMARK_URL + \"?{&start}{&count}\";", "modifier": "public static final", "type": "String", "declarator": "BOOKMARKS_URL = BOOKMARK_URL + \"?{&start}{&count}\"", "var_name": "BOOKMARKS_URL"}, {"original_string": "public static final String UNBOOKMARK_URL = BASE_URL + \"people/~/job-bookmarks/{job-id}\";", "modifier": "public static final", "type": "String", "declarator": "UNBOOKMARK_URL = BASE_URL + \"people/~/job-bookmarks/{job-id}\"", "var_name": "UNBOOKMARK_URL"}, {"original_string": "public static final String SUGGESTED_URL = BASE_URL + \"people/~/suggestions/job-suggestions:\" + SEARCH_FIELDS + \"?{&start}{&count}\";", "modifier": "public static final", "type": "String", "declarator": "SUGGESTED_URL = BASE_URL + \"people/~/suggestions/job-suggestions:\" + SEARCH_FIELDS + \"?{&start}{&count}\"", "var_name": "SUGGESTED_URL"}], "methods": [{"identifier": "JobTemplate", "parameters": "(RestOperations restOperations, ObjectMapper objectMapper )", "modifiers": "public", "return": "", "signature": " JobTemplate(RestOperations restOperations, ObjectMapper objectMapper )", "full_signature": "public  JobTemplate(RestOperations restOperations, ObjectMapper objectMapper )", "class_method_signature": "JobTemplate.JobTemplate(RestOperations restOperations, ObjectMapper objectMapper )", "testcase": false, "constructor": true}, {"identifier": "searchJobs", "parameters": "(JobSearchParameters parameters)", "modifiers": "public", "return": "Jobs", "signature": "Jobs searchJobs(JobSearchParameters parameters)", "full_signature": "public Jobs searchJobs(JobSearchParameters parameters)", "class_method_signature": "JobTemplate.searchJobs(JobSearchParameters parameters)", "testcase": false, "constructor": false}, {"identifier": "getJob", "parameters": "(int id)", "modifiers": "public", "return": "Job", "signature": "Job getJob(int id)", "full_signature": "public Job getJob(int id)", "class_method_signature": "JobTemplate.getJob(int id)", "testcase": false, "constructor": false}, {"identifier": "bookmarkJob", "parameters": "(int id)", "modifiers": "public", "return": "void", "signature": "void bookmarkJob(int id)", "full_signature": "public void bookmarkJob(int id)", "class_method_signature": "JobTemplate.bookmarkJob(int id)", "testcase": false, "constructor": false}, {"identifier": "unbookmarkJob", "parameters": "(int id)", "modifiers": "public", "return": "void", "signature": "void unbookmarkJob(int id)", "full_signature": "public void unbookmarkJob(int id)", "class_method_signature": "JobTemplate.unbookmarkJob(int id)", "testcase": false, "constructor": false}, {"identifier": "getSuggestions", "parameters": "(int start, int count)", "modifiers": "public", "return": "Jobs", "signature": "Jobs getSuggestions(int start, int count)", "full_signature": "public Jobs getSuggestions(int start, int count)", "class_method_signature": "JobTemplate.getSuggestions(int start, int count)", "testcase": false, "constructor": false}, {"identifier": "getBookmarks", "parameters": "(int start, int count)", "modifiers": "public", "return": "JobBookmarks", "signature": "JobBookmarks getBookmarks(int start, int count)", "full_signature": "public JobBookmarks getBookmarks(int start, int count)", "class_method_signature": "JobTemplate.getBookmarks(int start, int count)", "testcase": false, "constructor": false}], "file": "spring-social-linkedin/src/main/java/org/springframework/social/linkedin/api/impl/JobTemplate.java"}, "focal_method": {"identifier": "getSuggestions", "parameters": "(int start, int count)", "modifiers": "public", "return": "Jobs", "body": "public Jobs getSuggestions(int start, int count) {\n\t\tJsonNode node =  restOperations.getForObject(expand(SUGGESTED_URL, new Object[] {start,count}, false), JsonNode.class);\n\t\t\n\t\ttry {\n\t\t\treturn objectMapper.reader(new TypeReference<Jobs>(){}).readValue(node.path(\"jobs\"));\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}", "signature": "Jobs getSuggestions(int start, int count)", "full_signature": "public Jobs getSuggestions(int start, int count)", "class_method_signature": "JobTemplate.getSuggestions(int start, int count)", "testcase": false, "constructor": false, "invocations": ["getForObject", "expand", "readValue", "reader", "path"]}, "repository": {"repo_id": 1767898, "url": "https://github.com/spring-projects/spring-social-linkedin", "language": "Java", "is_fork": false, "fork_count": 66, "stargazer_count": 71, "size": 12391, "license": "licensed"}}