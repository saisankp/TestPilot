{"test_class": {"identifier": "IReBlogEsServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private IReBlogEsService service;", "modifier": "@Autowired\n    private", "type": "IReBlogEsService", "declarator": "service", "var_name": "service"}], "file": "re/src/test/java/cn/rootelement/es/service/impl/IReBlogEsServiceImplTest.java"}, "test_case": {"identifier": "query", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void query() {\n        Page<ReBlog> query = service.query(\"git\", new PageDTO(1, 10));\n        query.forEach(System.out::println);\n    }", "signature": "void query()", "full_signature": "@Test void query()", "class_method_signature": "IReBlogEsServiceImplTest.query()", "testcase": true, "constructor": false, "invocations": ["query", "forEach"]}, "focal_class": {"identifier": "IReBlogEsServiceImpl", "superclass": "", "interfaces": "implements IReBlogEsService", "fields": [{"original_string": "private IReBlogEsRepository repository;", "modifier": "private", "type": "IReBlogEsRepository", "declarator": "repository", "var_name": "repository"}], "methods": [{"identifier": "IReBlogEsServiceImpl", "parameters": "(IReBlogEsRepository repository)", "modifiers": "public", "return": "", "signature": " IReBlogEsServiceImpl(IReBlogEsRepository repository)", "full_signature": "public  IReBlogEsServiceImpl(IReBlogEsRepository repository)", "class_method_signature": "IReBlogEsServiceImpl.IReBlogEsServiceImpl(IReBlogEsRepository repository)", "testcase": false, "constructor": true}, {"identifier": "save", "parameters": "(ReBlog reBlog)", "modifiers": "@Override public", "return": "ReBlog", "signature": "ReBlog save(ReBlog reBlog)", "full_signature": "@Override public ReBlog save(ReBlog reBlog)", "class_method_signature": "IReBlogEsServiceImpl.save(ReBlog reBlog)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(ReBlog reBlog)", "modifiers": "@Override public", "return": "void", "signature": "void delete(ReBlog reBlog)", "full_signature": "@Override public void delete(ReBlog reBlog)", "class_method_signature": "IReBlogEsServiceImpl.delete(ReBlog reBlog)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<ReBlog>", "signature": "Iterable<ReBlog> getAll()", "full_signature": "@Override public Iterable<ReBlog> getAll()", "class_method_signature": "IReBlogEsServiceImpl.getAll()", "testcase": false, "constructor": false}, {"identifier": "count", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long count()", "full_signature": "@Override public long count()", "class_method_signature": "IReBlogEsServiceImpl.count()", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(String condition, PageDTO pageDTO)", "modifiers": "@Override public", "return": "Page<ReBlog>", "signature": "Page<ReBlog> query(String condition, PageDTO pageDTO)", "full_signature": "@Override public Page<ReBlog> query(String condition, PageDTO pageDTO)", "class_method_signature": "IReBlogEsServiceImpl.query(String condition, PageDTO pageDTO)", "testcase": false, "constructor": false}, {"identifier": "deleteAll", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void deleteAll()", "full_signature": "@Override public void deleteAll()", "class_method_signature": "IReBlogEsServiceImpl.deleteAll()", "testcase": false, "constructor": false}], "file": "re/src/main/java/cn/rootelement/es/service/impl/IReBlogEsServiceImpl.java"}, "focal_method": {"identifier": "query", "parameters": "(String condition, PageDTO pageDTO)", "modifiers": "@Override public", "return": "Page<ReBlog>", "body": "@Override\n    public Page<ReBlog> query(String condition, PageDTO pageDTO) {\n        SearchQuery searchQuery = new NativeSearchQueryBuilder()\n                .withQuery(QueryBuilders.multiMatchQuery(condition, \"title\", \"author\", \"contentMarkdown\", \"summary\"))\n                .withPageable(PageRequest.of(pageDTO.getPage() - 1, pageDTO.getCount()))\n                .build();\n        return repository.search(searchQuery);\n    }", "signature": "Page<ReBlog> query(String condition, PageDTO pageDTO)", "full_signature": "@Override public Page<ReBlog> query(String condition, PageDTO pageDTO)", "class_method_signature": "IReBlogEsServiceImpl.query(String condition, PageDTO pageDTO)", "testcase": false, "constructor": false, "invocations": ["build", "withPageable", "withQuery", "multiMatchQuery", "of", "getPage", "getCount", "search"]}, "repository": {"repo_id": 195232251, "url": "https://github.com/ljtnono/re", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 68910, "license": "licensed"}}