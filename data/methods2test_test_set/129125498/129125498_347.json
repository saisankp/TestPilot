{"test_class": {"identifier": "MetricProfileControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Spy\n    @InjectMocks\n    private MetricProfileController controllerUnderTest;", "modifier": "@Spy\n    @InjectMocks\n    private", "type": "MetricProfileController", "declarator": "controllerUnderTest", "var_name": "controllerUnderTest"}, {"original_string": "@Mock\n    private MetricProfileRepository metricProfileRepo;", "modifier": "@Mock\n    private", "type": "MetricProfileRepository", "declarator": "metricProfileRepo", "var_name": "metricProfileRepo"}, {"original_string": "private Expression expression;", "modifier": "private", "type": "Expression", "declarator": "expression", "var_name": "expression"}], "file": "modelservice/src/test/java/com/expedia/adaptivealerting/modelservice/web/MetricProfileControllerTest.java"}, "test_case": {"identifier": "testCreateMetricProfile_notNull", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testCreateMetricProfile_notNull() throws IOException {\n        controllerUnderTest.createMetricProfile(new CreateMetricProfilingRequest());\n    }", "signature": "void testCreateMetricProfile_notNull()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testCreateMetricProfile_notNull()", "class_method_signature": "MetricProfileControllerTest.testCreateMetricProfile_notNull()", "testcase": true, "constructor": false, "invocations": ["createMetricProfile"]}, "focal_class": {"identifier": "MetricProfileController", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private MetricProfileRepository metricProfilingRepo;", "modifier": "@Autowired\n    private", "type": "MetricProfileRepository", "declarator": "metricProfilingRepo", "var_name": "metricProfilingRepo"}], "methods": [{"identifier": "createMetricProfile", "parameters": "(@RequestBody CreateMetricProfilingRequest request)", "modifiers": "@PostMapping @ResponseStatus(HttpStatus.CREATED) public", "return": "String", "signature": "String createMetricProfile(@RequestBody CreateMetricProfilingRequest request)", "full_signature": "@PostMapping @ResponseStatus(HttpStatus.CREATED) public String createMetricProfile(@RequestBody CreateMetricProfilingRequest request)", "class_method_signature": "MetricProfileController.createMetricProfile(@RequestBody CreateMetricProfilingRequest request)", "testcase": false, "constructor": false}, {"identifier": "updateMetricProfile", "parameters": "(@RequestParam String id, @RequestParam Boolean isStationary)", "modifiers": "@PutMapping @ResponseStatus(HttpStatus.OK) public", "return": "void", "signature": "void updateMetricProfile(@RequestParam String id, @RequestParam Boolean isStationary)", "full_signature": "@PutMapping @ResponseStatus(HttpStatus.OK) public void updateMetricProfile(@RequestParam String id, @RequestParam Boolean isStationary)", "class_method_signature": "MetricProfileController.updateMetricProfile(@RequestParam String id, @RequestParam Boolean isStationary)", "testcase": false, "constructor": false}, {"identifier": "profilingExists", "parameters": "(@RequestBody Map<String, String> tags)", "modifiers": "@PostMapping @RequestMapping(value = \"/search/findByTags\") public", "return": "Boolean", "signature": "Boolean profilingExists(@RequestBody Map<String, String> tags)", "full_signature": "@PostMapping @RequestMapping(value = \"/search/findByTags\") public Boolean profilingExists(@RequestBody Map<String, String> tags)", "class_method_signature": "MetricProfileController.profilingExists(@RequestBody Map<String, String> tags)", "testcase": false, "constructor": false}], "file": "modelservice/src/main/java/com/expedia/adaptivealerting/modelservice/web/MetricProfileController.java"}, "focal_method": {"identifier": "createMetricProfile", "parameters": "(@RequestBody CreateMetricProfilingRequest request)", "modifiers": "@PostMapping @ResponseStatus(HttpStatus.CREATED) public", "return": "String", "body": "@PostMapping\n    @ResponseStatus(HttpStatus.CREATED)\n    public String createMetricProfile(@RequestBody CreateMetricProfilingRequest request) {\n        request.validate();\n        return metricProfilingRepo.createMetricProfile(request);\n    }", "signature": "String createMetricProfile(@RequestBody CreateMetricProfilingRequest request)", "full_signature": "@PostMapping @ResponseStatus(HttpStatus.CREATED) public String createMetricProfile(@RequestBody CreateMetricProfilingRequest request)", "class_method_signature": "MetricProfileController.createMetricProfile(@RequestBody CreateMetricProfilingRequest request)", "testcase": false, "constructor": false, "invocations": ["validate", "createMetricProfile"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}