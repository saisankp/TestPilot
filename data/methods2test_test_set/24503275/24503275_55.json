{"test_class": {"identifier": "CompactEncoderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static byte T = 16;", "modifier": "private final static", "type": "byte", "declarator": "T = 16", "var_name": "T"}], "file": "ethereumj-core/src/test/java/org/ethereum/util/CompactEncoderTest.java"}, "test_case": {"identifier": "testCompactHexEncode_2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCompactHexEncode_2() {\n        byte[] test = \"verb\".getBytes();\n        byte[] result = new byte[] {  7, 6, 6, 5, 7, 2, 6, 2, T };\n        assertArrayEquals(result, CompactEncoder.binToNibbles(test));\n    }", "signature": "void testCompactHexEncode_2()", "full_signature": "@Test public void testCompactHexEncode_2()", "class_method_signature": "CompactEncoderTest.testCompactHexEncode_2()", "testcase": true, "constructor": false, "invocations": ["getBytes", "assertArrayEquals", "binToNibbles"]}, "focal_class": {"identifier": "CompactEncoder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static byte TERMINATOR = 16;", "modifier": "private final static", "type": "byte", "declarator": "TERMINATOR = 16", "var_name": "TERMINATOR"}, {"original_string": "private final static Map<Character, Byte> hexMap = new HashMap<>();", "modifier": "private final static", "type": "Map<Character, Byte>", "declarator": "hexMap = new HashMap<>()", "var_name": "hexMap"}], "methods": [{"identifier": "packNibbles", "parameters": "(byte[] nibbles)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] packNibbles(byte[] nibbles)", "full_signature": "public static byte[] packNibbles(byte[] nibbles)", "class_method_signature": "CompactEncoder.packNibbles(byte[] nibbles)", "testcase": false, "constructor": false}, {"identifier": "unpackToNibbles", "parameters": "(byte[] str)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] unpackToNibbles(byte[] str)", "full_signature": "public static byte[] unpackToNibbles(byte[] str)", "class_method_signature": "CompactEncoder.unpackToNibbles(byte[] str)", "testcase": false, "constructor": false}, {"identifier": "binToNibbles", "parameters": "(byte[] str)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] binToNibbles(byte[] str)", "full_signature": "public static byte[] binToNibbles(byte[] str)", "class_method_signature": "CompactEncoder.binToNibbles(byte[] str)", "testcase": false, "constructor": false}, {"identifier": "binToNibblesNoTerminator", "parameters": "(byte[] str)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] binToNibblesNoTerminator(byte[] str)", "full_signature": "public static byte[] binToNibblesNoTerminator(byte[] str)", "class_method_signature": "CompactEncoder.binToNibblesNoTerminator(byte[] str)", "testcase": false, "constructor": false}], "file": "ethereumj-core/src/main/java/org/ethereum/util/CompactEncoder.java"}, "focal_method": {"identifier": "binToNibbles", "parameters": "(byte[] str)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] binToNibbles(byte[] str) {\n\t\tbyte[] hexEncoded = encode(str);\n\t\tByteBuffer slice = ByteBuffer.allocate(hexEncoded.length + 1);\n\t\tfor (byte b : hexEncoded) {\n\t\t\tslice.put(hexMap.get((char)b));\n\t\t}\n\t\tslice.put(TERMINATOR);\n\t\treturn slice.array();\n\t}", "signature": "byte[] binToNibbles(byte[] str)", "full_signature": "public static byte[] binToNibbles(byte[] str)", "class_method_signature": "CompactEncoder.binToNibbles(byte[] str)", "testcase": false, "constructor": false, "invocations": ["encode", "allocate", "put", "get", "put", "array"]}, "repository": {"repo_id": 24503275, "url": "https://github.com/ethereumj/ethereumj", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 27, "size": 13884, "license": "licensed"}}