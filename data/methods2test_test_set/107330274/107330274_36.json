{"test_class": {"identifier": "NumberSequenceTest", "superclass": "", "interfaces": "", "fields": [], "file": "titus-common/src/test/java/com/netflix/titus/common/util/NumberSequenceTest.java"}, "test_case": {"identifier": "testStep", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStep() {\n        checkSequence(tryParse(\"1,2,3,4,5\").step(2), asList(1L, 3L, 5L), false);\n        checkSequence(tryParse(\"1..5\").step(2), asList(1L, 3L), false);\n        checkSequence(tryParse(\"1,2,3,4..7,12..14\").step(2), asList(1L, 3L, 5L, 12L), false);\n        checkSequence(tryParse(\"1,2,3,4..7,12..14\").skip(2).step(2), asList(3L, 5L, 12L), false);\n    }", "signature": "void testStep()", "full_signature": "@Test public void testStep()", "class_method_signature": "NumberSequenceTest.testStep()", "testcase": true, "constructor": false, "invocations": ["checkSequence", "step", "tryParse", "asList", "checkSequence", "step", "tryParse", "asList", "checkSequence", "step", "tryParse", "asList", "checkSequence", "step", "skip", "tryParse", "asList"]}, "focal_class": {"identifier": "NumberSequence", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern PART_RE = Pattern.compile(\"(\\\\d+)(..(\\\\d+)?)?\");", "modifier": "private static final", "type": "Pattern", "declarator": "PART_RE = Pattern.compile(\"(\\\\d+)(..(\\\\d+)?)?\")", "var_name": "PART_RE"}, {"original_string": "private static final NumberSequence EMPTY_SEQUENCE = new EmptySequence();", "modifier": "private static final", "type": "NumberSequence", "declarator": "EMPTY_SEQUENCE = new EmptySequence()", "var_name": "EMPTY_SEQUENCE"}], "methods": [{"identifier": "getCount", "parameters": "()", "modifiers": "public abstract", "return": "long", "signature": "long getCount()", "full_signature": "public abstract long getCount()", "class_method_signature": "NumberSequence.getCount()", "testcase": false, "constructor": false}, {"identifier": "getIterator", "parameters": "()", "modifiers": "public abstract", "return": "Iterator<Long>", "signature": "Iterator<Long> getIterator()", "full_signature": "public abstract Iterator<Long> getIterator()", "class_method_signature": "NumberSequence.getIterator()", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(long number)", "modifiers": "public abstract", "return": "boolean", "signature": "boolean matches(long number)", "full_signature": "public abstract boolean matches(long number)", "class_method_signature": "NumberSequence.matches(long number)", "testcase": false, "constructor": false}, {"identifier": "skip", "parameters": "(long skipCount)", "modifiers": "public abstract", "return": "NumberSequence", "signature": "NumberSequence skip(long skipCount)", "full_signature": "public abstract NumberSequence skip(long skipCount)", "class_method_signature": "NumberSequence.skip(long skipCount)", "testcase": false, "constructor": false}, {"identifier": "step", "parameters": "(long step)", "modifiers": "public abstract", "return": "NumberSequence", "signature": "NumberSequence step(long step)", "full_signature": "public abstract NumberSequence step(long step)", "class_method_signature": "NumberSequence.step(long step)", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(long from)", "modifiers": "public static", "return": "NumberSequence", "signature": "NumberSequence from(long from)", "full_signature": "public static NumberSequence from(long from)", "class_method_signature": "NumberSequence.from(long from)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String value)", "modifiers": "public static", "return": "Either<NumberSequence, String>", "signature": "Either<NumberSequence, String> parse(String value)", "full_signature": "public static Either<NumberSequence, String> parse(String value)", "class_method_signature": "NumberSequence.parse(String value)", "testcase": false, "constructor": false}], "file": "titus-common/src/main/java/com/netflix/titus/common/util/NumberSequence.java"}, "focal_method": {"identifier": "step", "parameters": "(long step)", "modifiers": "public abstract", "return": "NumberSequence", "body": "public abstract NumberSequence step(long step);", "signature": "NumberSequence step(long step)", "full_signature": "public abstract NumberSequence step(long step)", "class_method_signature": "NumberSequence.step(long step)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}