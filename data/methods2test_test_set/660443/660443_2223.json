{"test_class": {"identifier": "AminoAcidsTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "storage/pdb/src/test/java/org/openscience/cdk/templates/AminoAcidsTest.java"}, "test_case": {"identifier": "testCreateBondMatrix", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateBondMatrix() {\n        int[][] bonds = AminoAcids.aaBondInfo();\n        Assert.assertNotNull(bonds);\n    }", "signature": "void testCreateBondMatrix()", "full_signature": "@Test public void testCreateBondMatrix()", "class_method_signature": "AminoAcidsTest.testCreateBondMatrix()", "testcase": true, "constructor": false, "invocations": ["aaBondInfo", "assertNotNull"]}, "focal_class": {"identifier": "AminoAcids", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ILoggingTool LOGGER = LoggingToolFactory.createLoggingTool(AminoAcids.class);", "modifier": "private static final", "type": "ILoggingTool", "declarator": "LOGGER = LoggingToolFactory.createLoggingTool(AminoAcids.class)", "var_name": "LOGGER"}, {"original_string": "private static AminoAcid[] aminoAcids         = null;", "modifier": "private static", "type": "AminoAcid[]", "declarator": "aminoAcids         = null", "var_name": "aminoAcids"}, {"original_string": "public final static String RESIDUE_NAME       = \"residueName\";", "modifier": "public final static", "type": "String", "declarator": "RESIDUE_NAME       = \"residueName\"", "var_name": "RESIDUE_NAME"}, {"original_string": "public final static String RESIDUE_NAME_SHORT = \"residueNameShort\";", "modifier": "public final static", "type": "String", "declarator": "RESIDUE_NAME_SHORT = \"residueNameShort\"", "var_name": "RESIDUE_NAME_SHORT"}, {"original_string": "public final static String NO_ATOMS           = \"noOfAtoms\";", "modifier": "public final static", "type": "String", "declarator": "NO_ATOMS           = \"noOfAtoms\"", "var_name": "NO_ATOMS"}, {"original_string": "public final static String NO_BONDS           = \"noOfBonds\";", "modifier": "public final static", "type": "String", "declarator": "NO_BONDS           = \"noOfBonds\"", "var_name": "NO_BONDS"}, {"original_string": "public final static String ID                 = \"id\";", "modifier": "public final static", "type": "String", "declarator": "ID                 = \"id\"", "var_name": "ID"}], "methods": [{"identifier": "aaBondInfo", "parameters": "()", "modifiers": "public static", "return": "int[][]", "signature": "int[][] aaBondInfo()", "full_signature": "public static int[][] aaBondInfo()", "class_method_signature": "AminoAcids.aaBondInfo()", "testcase": false, "constructor": false}, {"identifier": "createAAs", "parameters": "()", "modifiers": "public synchronized static", "return": "AminoAcid[]", "signature": "AminoAcid[] createAAs()", "full_signature": "public synchronized static AminoAcid[] createAAs()", "class_method_signature": "AminoAcids.createAAs()", "testcase": false, "constructor": false}, {"identifier": "getHashMapBySingleCharCode", "parameters": "()", "modifiers": "public static", "return": "Map<String, IAminoAcid>", "signature": "Map<String, IAminoAcid> getHashMapBySingleCharCode()", "full_signature": "public static Map<String, IAminoAcid> getHashMapBySingleCharCode()", "class_method_signature": "AminoAcids.getHashMapBySingleCharCode()", "testcase": false, "constructor": false}, {"identifier": "getHashMapByThreeLetterCode", "parameters": "()", "modifiers": "public static", "return": "Map<String, IAminoAcid>", "signature": "Map<String, IAminoAcid> getHashMapByThreeLetterCode()", "full_signature": "public static Map<String, IAminoAcid> getHashMapByThreeLetterCode()", "class_method_signature": "AminoAcids.getHashMapByThreeLetterCode()", "testcase": false, "constructor": false}, {"identifier": "convertThreeLetterCodeToOneLetterCode", "parameters": "(String threeLetterCode)", "modifiers": "public static", "return": "String", "signature": "String convertThreeLetterCodeToOneLetterCode(String threeLetterCode)", "full_signature": "public static String convertThreeLetterCodeToOneLetterCode(String threeLetterCode)", "class_method_signature": "AminoAcids.convertThreeLetterCodeToOneLetterCode(String threeLetterCode)", "testcase": false, "constructor": false}, {"identifier": "convertOneLetterCodeToThreeLetterCode", "parameters": "(String oneLetterCode)", "modifiers": "public static", "return": "String", "signature": "String convertOneLetterCodeToThreeLetterCode(String oneLetterCode)", "full_signature": "public static String convertOneLetterCodeToThreeLetterCode(String oneLetterCode)", "class_method_signature": "AminoAcids.convertOneLetterCodeToThreeLetterCode(String oneLetterCode)", "testcase": false, "constructor": false}], "file": "storage/pdb/src/main/java/org/openscience/cdk/templates/AminoAcids.java"}, "focal_method": {"identifier": "aaBondInfo", "parameters": "()", "modifiers": "public static", "return": "int[][]", "body": "public static int[][] aaBondInfo() {\n\n        if (aminoAcids == null) {\n            createAAs();\n        }\n\n        int[][] info = new int[153][4];\n\n        int counter = 0;\n        int total = 0;\n        for (int aa = 0; aa < aminoAcids.length; aa++) {\n            AminoAcid acid = aminoAcids[aa];\n\n            LOGGER.debug(\"#bonds for \", acid.getProperty(RESIDUE_NAME).toString(), \" = \" + acid.getBondCount());\n            total += acid.getBondCount();\n            LOGGER.debug(\"total #bonds: \", total);\n\n            Iterator<IBond> bonds = acid.bonds().iterator();\n            while (bonds.hasNext()) {\n                IBond bond = (IBond) bonds.next();\n                info[counter][0] = counter;\n                info[counter][1] = acid.indexOf(bond.getBegin());\n                info[counter][2] = acid.indexOf(bond.getEnd());\n                info[counter][3] = bond.getOrder().numeric();\n                counter++;\n            }\n        }\n\n        if (counter > 153) {\n            LOGGER.error(\"Error while creating AA info! Bond count is too large: \", counter);\n            return null;\n        }\n\n        return info;\n    }", "signature": "int[][] aaBondInfo()", "full_signature": "public static int[][] aaBondInfo()", "class_method_signature": "AminoAcids.aaBondInfo()", "testcase": false, "constructor": false, "invocations": ["createAAs", "debug", "toString", "getProperty", "getBondCount", "getBondCount", "debug", "iterator", "bonds", "hasNext", "next", "indexOf", "getBegin", "indexOf", "getEnd", "numeric", "getOrder", "error"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}