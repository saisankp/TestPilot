{"test_class": {"identifier": "UserRestTest", "superclass": "extends MobiRestTestNg", "interfaces": "", "fields": [{"original_string": "private UserRest rest;", "modifier": "private", "type": "UserRest", "declarator": "rest", "var_name": "rest"}, {"original_string": "private ValueFactory vf;", "modifier": "private", "type": "ValueFactory", "declarator": "vf", "var_name": "vf"}, {"original_string": "private ModelFactory mf;", "modifier": "private", "type": "ModelFactory", "declarator": "mf", "var_name": "mf"}, {"original_string": "private OrmFactory<User> userFactory;", "modifier": "private", "type": "OrmFactory<User>", "declarator": "userFactory", "var_name": "userFactory"}, {"original_string": "private OrmFactory<Group> groupFactory;", "modifier": "private", "type": "OrmFactory<Group>", "declarator": "groupFactory", "var_name": "groupFactory"}, {"original_string": "private OrmFactory<Role> roleFactory;", "modifier": "private", "type": "OrmFactory<Role>", "declarator": "roleFactory", "var_name": "roleFactory"}, {"original_string": "private OrmFactory<Thing> thingFactory;", "modifier": "private", "type": "OrmFactory<Thing>", "declarator": "thingFactory", "var_name": "thingFactory"}, {"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private Group group;", "modifier": "private", "type": "Group", "declarator": "group", "var_name": "group"}, {"original_string": "private Role role;", "modifier": "private", "type": "Role", "declarator": "role", "var_name": "role"}, {"original_string": "private Thing email;", "modifier": "private", "type": "Thing", "declarator": "email", "var_name": "email"}, {"original_string": "private Set<User> users;", "modifier": "private", "type": "Set<User>", "declarator": "users", "var_name": "users"}, {"original_string": "private Set<Group> groups;", "modifier": "private", "type": "Set<Group>", "declarator": "groups", "var_name": "groups"}, {"original_string": "private Set<Role> roles;", "modifier": "private", "type": "Set<Role>", "declarator": "roles", "var_name": "roles"}, {"original_string": "private static final String ENGINE_NAME = \"com.mobi.jaas.engines.RdfEngine\";", "modifier": "private static final", "type": "String", "declarator": "ENGINE_NAME = \"com.mobi.jaas.engines.RdfEngine\"", "var_name": "ENGINE_NAME"}, {"original_string": "@Mock\n    private EngineManager engineManager;", "modifier": "@Mock\n    private", "type": "EngineManager", "declarator": "engineManager", "var_name": "engineManager"}, {"original_string": "@Mock\n    private RdfEngine rdfEngine;", "modifier": "@Mock\n    private", "type": "RdfEngine", "declarator": "rdfEngine", "var_name": "rdfEngine"}, {"original_string": "@Mock\n    private SesameTransformer transformer;", "modifier": "@Mock\n    private", "type": "SesameTransformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "@Mock\n    private UserFactory userFactoryMock;", "modifier": "@Mock\n    private", "type": "UserFactory", "declarator": "userFactoryMock", "var_name": "userFactoryMock"}, {"original_string": "@Mock\n    private User adminUserMock;", "modifier": "@Mock\n    private", "type": "User", "declarator": "adminUserMock", "var_name": "adminUserMock"}], "file": "com.mobi.jaas.rest/src/test/java/com/mobi/jaas/rest/UserRestTest.java"}, "test_case": {"identifier": "removeUserRoleTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void removeUserRoleTest() {\n        Response response = target().path(\"users/\" + UsernameTestFilter.USERNAME + \"/roles\").queryParam(\"role\", \"testRole\")\n                .request().delete();\n        assertEquals(response.getStatus(), 200);\n        verify(engineManager).retrieveUser(UsernameTestFilter.USERNAME);\n        ArgumentCaptor<User> captor = ArgumentCaptor.forClass(User.class);\n        verify(engineManager).updateUser(captor.capture());\n        User updatedUser = captor.getValue();\n        assertEquals(user.getResource(), updatedUser.getResource());\n        assertEquals(0, updatedUser.getHasUserRole_resource().size());\n    }", "signature": "void removeUserRoleTest()", "full_signature": "@Test public void removeUserRoleTest()", "class_method_signature": "UserRestTest.removeUserRoleTest()", "testcase": true, "constructor": false, "invocations": ["delete", "request", "queryParam", "path", "target", "assertEquals", "getStatus", "retrieveUser", "verify", "forClass", "updateUser", "verify", "capture", "getValue", "assertEquals", "getResource", "getResource", "assertEquals", "size", "getHasUserRole_resource"]}, "focal_class": {"identifier": "UserRest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EngineManager engineManager;", "modifier": "private", "type": "EngineManager", "declarator": "engineManager", "var_name": "engineManager"}, {"original_string": "private ValueFactory vf;", "modifier": "private", "type": "ValueFactory", "declarator": "vf", "var_name": "vf"}, {"original_string": "private UserFactory userFactory;", "modifier": "private", "type": "UserFactory", "declarator": "userFactory", "var_name": "userFactory"}, {"original_string": "private SesameTransformer transformer;", "modifier": "private", "type": "SesameTransformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "private Engine rdfEngine;", "modifier": "private", "type": "Engine", "declarator": "rdfEngine", "var_name": "rdfEngine"}, {"original_string": "private final Logger logger = LoggerFactory.getLogger(UserRest.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(UserRest.class)", "var_name": "logger"}, {"original_string": "static final String ADMIN_USER_IRI = \"http://mobi.com/users/d033e22ae348aeb5660fc2140aec35850c4da997\";", "modifier": "static final", "type": "String", "declarator": "ADMIN_USER_IRI = \"http://mobi.com/users/d033e22ae348aeb5660fc2140aec35850c4da997\"", "var_name": "ADMIN_USER_IRI"}], "methods": [{"identifier": "setEngineManager", "parameters": "(EngineManager engineManager)", "modifiers": "@Reference", "return": "void", "signature": "void setEngineManager(EngineManager engineManager)", "full_signature": "@Reference void setEngineManager(EngineManager engineManager)", "class_method_signature": "UserRest.setEngineManager(EngineManager engineManager)", "testcase": false, "constructor": false}, {"identifier": "setValueFactory", "parameters": "(ValueFactory vf)", "modifiers": "@Reference", "return": "void", "signature": "void setValueFactory(ValueFactory vf)", "full_signature": "@Reference void setValueFactory(ValueFactory vf)", "class_method_signature": "UserRest.setValueFactory(ValueFactory vf)", "testcase": false, "constructor": false}, {"identifier": "setUserFactory", "parameters": "(UserFactory userFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setUserFactory(UserFactory userFactory)", "full_signature": "@Reference void setUserFactory(UserFactory userFactory)", "class_method_signature": "UserRest.setUserFactory(UserFactory userFactory)", "testcase": false, "constructor": false}, {"identifier": "setTransformer", "parameters": "(SesameTransformer transformer)", "modifiers": "@Reference", "return": "void", "signature": "void setTransformer(SesameTransformer transformer)", "full_signature": "@Reference void setTransformer(SesameTransformer transformer)", "class_method_signature": "UserRest.setTransformer(SesameTransformer transformer)", "testcase": false, "constructor": false}, {"identifier": "setRdfEngine", "parameters": "(Engine engine)", "modifiers": "@Reference(target = \"(engineName=RdfEngine)\")", "return": "void", "signature": "void setRdfEngine(Engine engine)", "full_signature": "@Reference(target = \"(engineName=RdfEngine)\") void setRdfEngine(Engine engine)", "class_method_signature": "UserRest.setRdfEngine(Engine engine)", "testcase": false, "constructor": false}, {"identifier": "getUsers", "parameters": "()", "modifiers": "@GET @RolesAllowed(\"user\") @Produces(MediaType.APPLICATION_JSON) @ApiOperation(\"Get all Mobi Users\") public", "return": "Response", "signature": "Response getUsers()", "full_signature": "@GET @RolesAllowed(\"user\") @Produces(MediaType.APPLICATION_JSON) @ApiOperation(\"Get all Mobi Users\") public Response getUsers()", "class_method_signature": "UserRest.getUsers()", "testcase": false, "constructor": false}, {"identifier": "createUser", "parameters": "(@FormDataParam(\"username\") String username,\n                        @FormDataParam(\"password\") String password,\n                        @FormDataParam(\"roles\") List<FormDataBodyPart> roles,\n                        @FormDataParam(\"firstName\") String firstName,\n                        @FormDataParam(\"lastName\") String lastName,\n                        @FormDataParam(\"email\") String email)", "modifiers": "@POST @RolesAllowed(\"admin\") @ApiOperation(\"Create a Mobi User account\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) public", "return": "Response", "signature": "Response createUser(@FormDataParam(\"username\") String username,\n                        @FormDataParam(\"password\") String password,\n                        @FormDataParam(\"roles\") List<FormDataBodyPart> roles,\n                        @FormDataParam(\"firstName\") String firstName,\n                        @FormDataParam(\"lastName\") String lastName,\n                        @FormDataParam(\"email\") String email)", "full_signature": "@POST @RolesAllowed(\"admin\") @ApiOperation(\"Create a Mobi User account\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) public Response createUser(@FormDataParam(\"username\") String username,\n                        @FormDataParam(\"password\") String password,\n                        @FormDataParam(\"roles\") List<FormDataBodyPart> roles,\n                        @FormDataParam(\"firstName\") String firstName,\n                        @FormDataParam(\"lastName\") String lastName,\n                        @FormDataParam(\"email\") String email)", "class_method_signature": "UserRest.createUser(@FormDataParam(\"username\") String username,\n                        @FormDataParam(\"password\") String password,\n                        @FormDataParam(\"roles\") List<FormDataBodyPart> roles,\n                        @FormDataParam(\"firstName\") String firstName,\n                        @FormDataParam(\"lastName\") String lastName,\n                        @FormDataParam(\"email\") String email)", "testcase": false, "constructor": false}, {"identifier": "getUser", "parameters": "(@PathParam(\"username\") String username)", "modifiers": "@GET @Path(\"{username}\") @RolesAllowed(\"user\") @Produces(MediaType.APPLICATION_JSON) @ApiOperation(\"Get a single Mobi User\") public", "return": "Response", "signature": "Response getUser(@PathParam(\"username\") String username)", "full_signature": "@GET @Path(\"{username}\") @RolesAllowed(\"user\") @Produces(MediaType.APPLICATION_JSON) @ApiOperation(\"Get a single Mobi User\") public Response getUser(@PathParam(\"username\") String username)", "class_method_signature": "UserRest.getUser(@PathParam(\"username\") String username)", "testcase": false, "constructor": false}, {"identifier": "updateUser", "parameters": "(@Context ContainerRequestContext context,\n                        @PathParam(\"username\") String username,\n                        String newUserStr)", "modifiers": "@PUT @Path(\"{username}\") @RolesAllowed(\"user\") @ApiOperation(\"Update a Mobi user's information\") @Consumes(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response updateUser(@Context ContainerRequestContext context,\n                        @PathParam(\"username\") String username,\n                        String newUserStr)", "full_signature": "@PUT @Path(\"{username}\") @RolesAllowed(\"user\") @ApiOperation(\"Update a Mobi user's information\") @Consumes(MediaType.APPLICATION_JSON) public Response updateUser(@Context ContainerRequestContext context,\n                        @PathParam(\"username\") String username,\n                        String newUserStr)", "class_method_signature": "UserRest.updateUser(@Context ContainerRequestContext context,\n                        @PathParam(\"username\") String username,\n                        String newUserStr)", "testcase": false, "constructor": false}, {"identifier": "changePassword", "parameters": "(@Context ContainerRequestContext context,\n                            @PathParam(\"username\") String username,\n                            @QueryParam(\"currentPassword\") String currentPassword,\n                            @QueryParam(\"newPassword\") String newPassword)", "modifiers": "@POST @Path(\"{username}/password\") @RolesAllowed(\"user\") @ApiOperation(\"Changes a Mobi User's password if it is the User making the request\") public", "return": "Response", "signature": "Response changePassword(@Context ContainerRequestContext context,\n                            @PathParam(\"username\") String username,\n                            @QueryParam(\"currentPassword\") String currentPassword,\n                            @QueryParam(\"newPassword\") String newPassword)", "full_signature": "@POST @Path(\"{username}/password\") @RolesAllowed(\"user\") @ApiOperation(\"Changes a Mobi User's password if it is the User making the request\") public Response changePassword(@Context ContainerRequestContext context,\n                            @PathParam(\"username\") String username,\n                            @QueryParam(\"currentPassword\") String currentPassword,\n                            @QueryParam(\"newPassword\") String newPassword)", "class_method_signature": "UserRest.changePassword(@Context ContainerRequestContext context,\n                            @PathParam(\"username\") String username,\n                            @QueryParam(\"currentPassword\") String currentPassword,\n                            @QueryParam(\"newPassword\") String newPassword)", "testcase": false, "constructor": false}, {"identifier": "resetPassword", "parameters": "(@Context ContainerRequestContext context,\n                           @PathParam(\"username\") String username,\n                           @QueryParam(\"newPassword\") String newPassword)", "modifiers": "@PUT @Path(\"{username}/password\") @RolesAllowed(\"admin\") @ApiOperation(\"Resets a Mobi User's password if User making request is the admin\") public", "return": "Response", "signature": "Response resetPassword(@Context ContainerRequestContext context,\n                           @PathParam(\"username\") String username,\n                           @QueryParam(\"newPassword\") String newPassword)", "full_signature": "@PUT @Path(\"{username}/password\") @RolesAllowed(\"admin\") @ApiOperation(\"Resets a Mobi User's password if User making request is the admin\") public Response resetPassword(@Context ContainerRequestContext context,\n                           @PathParam(\"username\") String username,\n                           @QueryParam(\"newPassword\") String newPassword)", "class_method_signature": "UserRest.resetPassword(@Context ContainerRequestContext context,\n                           @PathParam(\"username\") String username,\n                           @QueryParam(\"newPassword\") String newPassword)", "testcase": false, "constructor": false}, {"identifier": "deleteUser", "parameters": "(@Context ContainerRequestContext context,\n                        @PathParam(\"username\") String username)", "modifiers": "@DELETE @Path(\"{username}\") @RolesAllowed(\"user\") @ApiOperation(\"Remove a Mobi user's account\") public", "return": "Response", "signature": "Response deleteUser(@Context ContainerRequestContext context,\n                        @PathParam(\"username\") String username)", "full_signature": "@DELETE @Path(\"{username}\") @RolesAllowed(\"user\") @ApiOperation(\"Remove a Mobi user's account\") public Response deleteUser(@Context ContainerRequestContext context,\n                        @PathParam(\"username\") String username)", "class_method_signature": "UserRest.deleteUser(@Context ContainerRequestContext context,\n                        @PathParam(\"username\") String username)", "testcase": false, "constructor": false}, {"identifier": "getUserRoles", "parameters": "(@PathParam(\"username\") String username,\n                          @DefaultValue(\"false\") @QueryParam(\"includeGroups\") boolean includeGroups)", "modifiers": "@GET @Path(\"{username}/roles\") @RolesAllowed(\"user\") @Produces(MediaType.APPLICATION_JSON) @ApiOperation(\"List roles of a Mobi User\") public", "return": "Response", "signature": "Response getUserRoles(@PathParam(\"username\") String username,\n                          @DefaultValue(\"false\") @QueryParam(\"includeGroups\") boolean includeGroups)", "full_signature": "@GET @Path(\"{username}/roles\") @RolesAllowed(\"user\") @Produces(MediaType.APPLICATION_JSON) @ApiOperation(\"List roles of a Mobi User\") public Response getUserRoles(@PathParam(\"username\") String username,\n                          @DefaultValue(\"false\") @QueryParam(\"includeGroups\") boolean includeGroups)", "class_method_signature": "UserRest.getUserRoles(@PathParam(\"username\") String username,\n                          @DefaultValue(\"false\") @QueryParam(\"includeGroups\") boolean includeGroups)", "testcase": false, "constructor": false}, {"identifier": "addUserRoles", "parameters": "(@PathParam(\"username\") String username, @QueryParam(\"roles\") List<String> roles)", "modifiers": "@PUT @Path(\"{username}/roles\") @RolesAllowed(\"admin\") @ApiOperation(\"Add roles to a Mobi User\") public", "return": "Response", "signature": "Response addUserRoles(@PathParam(\"username\") String username, @QueryParam(\"roles\") List<String> roles)", "full_signature": "@PUT @Path(\"{username}/roles\") @RolesAllowed(\"admin\") @ApiOperation(\"Add roles to a Mobi User\") public Response addUserRoles(@PathParam(\"username\") String username, @QueryParam(\"roles\") List<String> roles)", "class_method_signature": "UserRest.addUserRoles(@PathParam(\"username\") String username, @QueryParam(\"roles\") List<String> roles)", "testcase": false, "constructor": false}, {"identifier": "removeUserRole", "parameters": "(@PathParam(\"username\") String username, @QueryParam(\"role\") String role)", "modifiers": "@DELETE @Path(\"{username}/roles\") @RolesAllowed(\"admin\") @ApiOperation(\"Remove role from a Mobi User\") public", "return": "Response", "signature": "Response removeUserRole(@PathParam(\"username\") String username, @QueryParam(\"role\") String role)", "full_signature": "@DELETE @Path(\"{username}/roles\") @RolesAllowed(\"admin\") @ApiOperation(\"Remove role from a Mobi User\") public Response removeUserRole(@PathParam(\"username\") String username, @QueryParam(\"role\") String role)", "class_method_signature": "UserRest.removeUserRole(@PathParam(\"username\") String username, @QueryParam(\"role\") String role)", "testcase": false, "constructor": false}, {"identifier": "listUserGroups", "parameters": "(@PathParam(\"username\") String username)", "modifiers": "@GET @Path(\"{username}/groups\") @RolesAllowed(\"user\") @Produces(MediaType.APPLICATION_JSON) @ApiOperation(\"List groups of a Mobi User\") public", "return": "Response", "signature": "Response listUserGroups(@PathParam(\"username\") String username)", "full_signature": "@GET @Path(\"{username}/groups\") @RolesAllowed(\"user\") @Produces(MediaType.APPLICATION_JSON) @ApiOperation(\"List groups of a Mobi User\") public Response listUserGroups(@PathParam(\"username\") String username)", "class_method_signature": "UserRest.listUserGroups(@PathParam(\"username\") String username)", "testcase": false, "constructor": false}, {"identifier": "addUserGroup", "parameters": "(@PathParam(\"username\") String username, @QueryParam(\"group\") String groupTitle)", "modifiers": "@PUT @Path(\"{username}/groups\") @RolesAllowed(\"admin\") @ApiOperation(\"Add a Mobi user to a group\") public", "return": "Response", "signature": "Response addUserGroup(@PathParam(\"username\") String username, @QueryParam(\"group\") String groupTitle)", "full_signature": "@PUT @Path(\"{username}/groups\") @RolesAllowed(\"admin\") @ApiOperation(\"Add a Mobi user to a group\") public Response addUserGroup(@PathParam(\"username\") String username, @QueryParam(\"group\") String groupTitle)", "class_method_signature": "UserRest.addUserGroup(@PathParam(\"username\") String username, @QueryParam(\"group\") String groupTitle)", "testcase": false, "constructor": false}, {"identifier": "removeUserGroup", "parameters": "(@PathParam(\"username\") String username, @QueryParam(\"group\") String groupTitle)", "modifiers": "@DELETE @Path(\"{username}/groups\") @RolesAllowed(\"admin\") @ApiOperation(\"Remove a Mobi User from a group\") public", "return": "Response", "signature": "Response removeUserGroup(@PathParam(\"username\") String username, @QueryParam(\"group\") String groupTitle)", "full_signature": "@DELETE @Path(\"{username}/groups\") @RolesAllowed(\"admin\") @ApiOperation(\"Remove a Mobi User from a group\") public Response removeUserGroup(@PathParam(\"username\") String username, @QueryParam(\"group\") String groupTitle)", "class_method_signature": "UserRest.removeUserGroup(@PathParam(\"username\") String username, @QueryParam(\"group\") String groupTitle)", "testcase": false, "constructor": false}, {"identifier": "getUsername", "parameters": "(@QueryParam(\"iri\") String userIri)", "modifiers": "@GET @Path(\"username\") @RolesAllowed(\"user\") @Produces(MediaType.TEXT_PLAIN) @ApiOperation(\"Retrieve a username based on the passed User IRI\") public", "return": "Response", "signature": "Response getUsername(@QueryParam(\"iri\") String userIri)", "full_signature": "@GET @Path(\"username\") @RolesAllowed(\"user\") @Produces(MediaType.TEXT_PLAIN) @ApiOperation(\"Retrieve a username based on the passed User IRI\") public Response getUsername(@QueryParam(\"iri\") String userIri)", "class_method_signature": "UserRest.getUsername(@QueryParam(\"iri\") String userIri)", "testcase": false, "constructor": false}, {"identifier": "isAuthorizedUser", "parameters": "(ContainerRequestContext context, String username)", "modifiers": "private", "return": "void", "signature": "void isAuthorizedUser(ContainerRequestContext context, String username)", "full_signature": "private void isAuthorizedUser(ContainerRequestContext context, String username)", "class_method_signature": "UserRest.isAuthorizedUser(ContainerRequestContext context, String username)", "testcase": false, "constructor": false}, {"identifier": "isAdminUser", "parameters": "(String username)", "modifiers": "private", "return": "boolean", "signature": "boolean isAdminUser(String username)", "full_signature": "private boolean isAdminUser(String username)", "class_method_signature": "UserRest.isAdminUser(String username)", "testcase": false, "constructor": false}, {"identifier": "checkCurrentUser", "parameters": "(String username, String currentUsername)", "modifiers": "private", "return": "void", "signature": "void checkCurrentUser(String username, String currentUsername)", "full_signature": "private void checkCurrentUser(String username, String currentUsername)", "class_method_signature": "UserRest.checkCurrentUser(String username, String currentUsername)", "testcase": false, "constructor": false}, {"identifier": "changePassword", "parameters": "(String username, String newPassword)", "modifiers": "private", "return": "Response", "signature": "Response changePassword(String username, String newPassword)", "full_signature": "private Response changePassword(String username, String newPassword)", "class_method_signature": "UserRest.changePassword(String username, String newPassword)", "testcase": false, "constructor": false}], "file": "com.mobi.jaas.rest/src/main/java/com/mobi/jaas/rest/UserRest.java"}, "focal_method": {"identifier": "removeUserRole", "parameters": "(@PathParam(\"username\") String username, @QueryParam(\"role\") String role)", "modifiers": "@DELETE @Path(\"{username}/roles\") @RolesAllowed(\"admin\") @ApiOperation(\"Remove role from a Mobi User\") public", "return": "Response", "body": "@DELETE\n    @Path(\"{username}/roles\")\n    @RolesAllowed(\"admin\")\n    @ApiOperation(\"Remove role from a Mobi User\")\n    public Response removeUserRole(@PathParam(\"username\") String username, @QueryParam(\"role\") String role) {\n        if (StringUtils.isEmpty(username) || role == null) {\n            throw ErrorUtils.sendError(\"Both username and role must be provided\", Response.Status.BAD_REQUEST);\n        }\n        try {\n            User savedUser = engineManager.retrieveUser(username).orElseThrow(() ->\n                    ErrorUtils.sendError(\"User \" + username + \" not found\", Response.Status.BAD_REQUEST));\n            Role roleObj = engineManager.getRole(role).orElseThrow(() ->\n                    ErrorUtils.sendError(\"Role \" + role + \" not found\", Response.Status.BAD_REQUEST));\n            savedUser.removeHasUserRole(roleObj);\n            engineManager.updateUser(savedUser);\n            logger.info(\"Role \" + role + \" removed from user \" + username);\n            return Response.ok().build();\n        } catch (IllegalArgumentException ex) {\n            throw ErrorUtils.sendError(ex.getMessage(), Response.Status.BAD_REQUEST);\n        }\n    }", "signature": "Response removeUserRole(@PathParam(\"username\") String username, @QueryParam(\"role\") String role)", "full_signature": "@DELETE @Path(\"{username}/roles\") @RolesAllowed(\"admin\") @ApiOperation(\"Remove role from a Mobi User\") public Response removeUserRole(@PathParam(\"username\") String username, @QueryParam(\"role\") String role)", "class_method_signature": "UserRest.removeUserRole(@PathParam(\"username\") String username, @QueryParam(\"role\") String role)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "sendError", "orElseThrow", "retrieveUser", "sendError", "orElseThrow", "getRole", "sendError", "removeHasUserRole", "updateUser", "info", "build", "ok", "sendError", "getMessage"]}, "repository": {"repo_id": 62253355, "url": "https://github.com/inovexcorp/mobi", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 30, "size": 54070, "license": "licensed"}}