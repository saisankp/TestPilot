{"test_class": {"identifier": "FreebaseHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/edu/tuberlin/dima/textmining/jedi/core/freebase/FreebaseHelperTest.java"}, "test_case": {"identifier": "testReplacedTopic", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testReplacedTopic() throws Exception {\n\t\tFreebaseHelper  freebaseHelper = new FreebaseHelper();\n\n\t\tfinal FreebaseHelper.Entity nameForID = freebaseHelper.getNameForID(\"/m/07mt8q3\");\n\n\t\tSystem.out.println(nameForID);\n\n\t}", "signature": "void testReplacedTopic()", "full_signature": "@Test public void testReplacedTopic()", "class_method_signature": "FreebaseHelperTest.testReplacedTopic()", "testcase": true, "constructor": false, "invocations": ["getNameForID", "println"]}, "focal_class": {"identifier": "FreebaseHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String FREEBASE_TOPIC_ENDPOINT = \"https://www.googleapis.com/freebase/v1/topic{id}?filter=/common/topic/description&filter=/type/object/guid&filter=/type/object/type&filter=/type/object/name&filter=/common/topic/alias&key=AIzaSyCyloa8DMxhKvBVdqdk_Drf900rAeeA7QA\";", "modifier": "private static final", "type": "String", "declarator": "FREEBASE_TOPIC_ENDPOINT = \"https://www.googleapis.com/freebase/v1/topic{id}?filter=/common/topic/description&filter=/type/object/guid&filter=/type/object/type&filter=/type/object/name&filter=/common/topic/alias&key=AIzaSyCyloa8DMxhKvBVdqdk_Drf900rAeeA7QA\"", "var_name": "FREEBASE_TOPIC_ENDPOINT"}, {"original_string": "private static final String FREEBASE_SEARCH_API = \"https://www.googleapis.com/freebase/v1/search?limit=1&scoring=entity&query={id}&prefixed=true&output=(%2Fcommon%2Ftopic%2Fdescription+type+name+%2Fcommon%2Ftopic%2Falias)&lang=en&indent=true&key=AIzaSyCyloa8DMxhKvBVdqdk_Drf900rAeeA7QA\";", "modifier": "private static final", "type": "String", "declarator": "FREEBASE_SEARCH_API = \"https://www.googleapis.com/freebase/v1/search?limit=1&scoring=entity&query={id}&prefixed=true&output=(%2Fcommon%2Ftopic%2Fdescription+type+name+%2Fcommon%2Ftopic%2Falias)&lang=en&indent=true&key=AIzaSyCyloa8DMxhKvBVdqdk_Drf900rAeeA7QA\"", "var_name": "FREEBASE_SEARCH_API"}, {"original_string": "private static final String FREEBASE_MQL_ENDPOINT = \"https://www.googleapis.com/freebase/v1/mqlread/?lang=%2Flang%2Fen&query=%5B%7B%20%22id%22%3A%20%22{id}%22%2C%20%22%2Fdataworld%2Fgardening_hint%2Freplaced_by%22%3A%20%5B%7B%22mid%22%3A%20null%20%7D%5D%20%7D%5D%0A%0A%0A&key=AIzaSyCyloa8DMxhKvBVdqdk_Drf900rAeeA7QA\";", "modifier": "private static final", "type": "String", "declarator": "FREEBASE_MQL_ENDPOINT = \"https://www.googleapis.com/freebase/v1/mqlread/?lang=%2Flang%2Fen&query=%5B%7B%20%22id%22%3A%20%22{id}%22%2C%20%22%2Fdataworld%2Fgardening_hint%2Freplaced_by%22%3A%20%5B%7B%22mid%22%3A%20null%20%7D%5D%20%7D%5D%0A%0A%0A&key=AIzaSyCyloa8DMxhKvBVdqdk_Drf900rAeeA7QA\"", "var_name": "FREEBASE_MQL_ENDPOINT"}, {"original_string": "private static final String FREEBASE_MQL_ENDPOINT_SUBRELATION_RELATION = \"https://www.googleapis.com/freebase/v1/mqlread/?lang=%2Flang%2Fen&query=%5B%7B%20%22mid%22%3A%20%22{id1}%22%2C%20%22{REL1}%22%3A%20%5B%7B%22{REL2}%22%3A%20%7B%22mid%22%3A%20%22{id2}%22%7D%7D%5D%7D%5D%0A%0A&key=AIzaSyCyloa8DMxhKvBVdqdk_Drf900rAeeA7QA\";", "modifier": "private static final", "type": "String", "declarator": "FREEBASE_MQL_ENDPOINT_SUBRELATION_RELATION = \"https://www.googleapis.com/freebase/v1/mqlread/?lang=%2Flang%2Fen&query=%5B%7B%20%22mid%22%3A%20%22{id1}%22%2C%20%22{REL1}%22%3A%20%5B%7B%22{REL2}%22%3A%20%7B%22mid%22%3A%20%22{id2}%22%7D%7D%5D%7D%5D%0A%0A&key=AIzaSyCyloa8DMxhKvBVdqdk_Drf900rAeeA7QA\"", "var_name": "FREEBASE_MQL_ENDPOINT_SUBRELATION_RELATION"}, {"original_string": "private static final String FREEBASE_MQL_ENDPOINT_RELATION = \"https://www.googleapis.com/freebase/v1/mqlread/?lang=%2Flang%2Fen&query=%5B%7B%20%22mid%22%3A%20%22{id1}%22%2C%20%22{REL1}%22%3A%20%5B%7B%22mid%22%3A%20%22{id2}%22%7D%5D%7D%5D%0A%0A&key=AIzaSyCyloa8DMxhKvBVdqdk_Drf900rAeeA7QA\";", "modifier": "private static final", "type": "String", "declarator": "FREEBASE_MQL_ENDPOINT_RELATION = \"https://www.googleapis.com/freebase/v1/mqlread/?lang=%2Flang%2Fen&query=%5B%7B%20%22mid%22%3A%20%22{id1}%22%2C%20%22{REL1}%22%3A%20%5B%7B%22mid%22%3A%20%22{id2}%22%7D%5D%7D%5D%0A%0A&key=AIzaSyCyloa8DMxhKvBVdqdk_Drf900rAeeA7QA\"", "var_name": "FREEBASE_MQL_ENDPOINT_RELATION"}, {"original_string": "private static final String FREEBASE_INVERSE_RELATION = \"https://www.googleapis.com/freebase/v1/topic{id}?filter=/type/property/reverse_property&key=AIzaSyCyloa8DMxhKvBVdqdk_Drf900rAeeA7QA\";", "modifier": "private static final", "type": "String", "declarator": "FREEBASE_INVERSE_RELATION = \"https://www.googleapis.com/freebase/v1/topic{id}?filter=/type/property/reverse_property&key=AIzaSyCyloa8DMxhKvBVdqdk_Drf900rAeeA7QA\"", "var_name": "FREEBASE_INVERSE_RELATION"}, {"original_string": "private static final ObjectMapper MAPPER = new ObjectMapper();", "modifier": "private static final", "type": "ObjectMapper", "declarator": "MAPPER = new ObjectMapper()", "var_name": "MAPPER"}, {"original_string": "private static final JsonFactory jfactory = new JsonFactory();", "modifier": "private static final", "type": "JsonFactory", "declarator": "jfactory = new JsonFactory()", "var_name": "jfactory"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(FreebaseHelper.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(FreebaseHelper.class)", "var_name": "LOG"}], "methods": [{"identifier": "getURL", "parameters": "(String metaURL)", "modifiers": "private", "return": "JsonNode", "signature": "JsonNode getURL(String metaURL)", "full_signature": "private JsonNode getURL(String metaURL)", "class_method_signature": "FreebaseHelper.getURL(String metaURL)", "testcase": false, "constructor": false}, {"identifier": "transformOldToNewId", "parameters": "(String old)", "modifiers": "public static", "return": "String", "signature": "String transformOldToNewId(String old)", "full_signature": "public static String transformOldToNewId(String old)", "class_method_signature": "FreebaseHelper.transformOldToNewId(String old)", "testcase": false, "constructor": false}, {"identifier": "transformNewToOldId", "parameters": "(String newId)", "modifiers": "public static", "return": "String", "signature": "String transformNewToOldId(String newId)", "full_signature": "public static String transformNewToOldId(String newId)", "class_method_signature": "FreebaseHelper.transformNewToOldId(String newId)", "testcase": false, "constructor": false}, {"identifier": "getNameForID", "parameters": "(String id)", "modifiers": "public", "return": "Entity", "signature": "Entity getNameForID(String id)", "full_signature": "public Entity getNameForID(String id)", "class_method_signature": "FreebaseHelper.getNameForID(String id)", "testcase": false, "constructor": false}, {"identifier": "getNameForIDs", "parameters": "(String id)", "modifiers": "public", "return": "Entity", "signature": "Entity getNameForIDs(String id)", "full_signature": "public Entity getNameForIDs(String id)", "class_method_signature": "FreebaseHelper.getNameForIDs(String id)", "testcase": false, "constructor": false}, {"identifier": "checkIfCompoundRelationHolds", "parameters": "(String id1, String id2, String[] relation)", "modifiers": "public", "return": "boolean", "signature": "boolean checkIfCompoundRelationHolds(String id1, String id2, String[] relation)", "full_signature": "public boolean checkIfCompoundRelationHolds(String id1, String id2, String[] relation)", "class_method_signature": "FreebaseHelper.checkIfCompoundRelationHolds(String id1, String id2, String[] relation)", "testcase": false, "constructor": false}, {"identifier": "getInverseRelation", "parameters": "(String relation)", "modifiers": "private", "return": "String", "signature": "String getInverseRelation(String relation)", "full_signature": "private String getInverseRelation(String relation)", "class_method_signature": "FreebaseHelper.getInverseRelation(String relation)", "testcase": false, "constructor": false}, {"identifier": "getFreebaseTopicForID", "parameters": "(String freebaseID)", "modifiers": "private", "return": "JsonNode", "signature": "JsonNode getFreebaseTopicForID(String freebaseID)", "full_signature": "private JsonNode getFreebaseTopicForID(String freebaseID)", "class_method_signature": "FreebaseHelper.getFreebaseTopicForID(String freebaseID)", "testcase": false, "constructor": false}, {"identifier": "getTypesForRelationFromFreebase", "parameters": "(String r)", "modifiers": "public", "return": "FreebaseRelation", "signature": "FreebaseRelation getTypesForRelationFromFreebase(String r)", "full_signature": "public FreebaseRelation getTypesForRelationFromFreebase(String r)", "class_method_signature": "FreebaseHelper.getTypesForRelationFromFreebase(String r)", "testcase": false, "constructor": false}, {"identifier": "readAllInverseRelations", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void readAllInverseRelations()", "full_signature": "public void readAllInverseRelations()", "class_method_signature": "FreebaseHelper.readAllInverseRelations()", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "FreebaseHelper.main(String[] args)", "testcase": false, "constructor": false}], "file": "core/src/main/java/edu/tuberlin/dima/textmining/jedi/core/freebase/FreebaseHelper.java"}, "focal_method": {"identifier": "getNameForID", "parameters": "(String id)", "modifiers": "public", "return": "Entity", "body": "public Entity getNameForID(String id) throws IOException {\n\t\tString trimmedID = id.replaceAll(\"\\\\.\", \"/\");\n\t\tif (!trimmedID.startsWith(\"/\")) {\n\t\t\ttrimmedID = \"/\" + trimmedID;\n\t\t}\n\t\tString metaURL = FREEBASE_SEARCH_API.replace(\"{id}\", trimmedID);\n\n\t\tJsonNode jsonNode = getURL(metaURL);\n\n\t\tLOG.trace(metaURL);\n\n\t\tif (jsonNode.get(\"result\").size() < 1) {\n\t\t\tLOG.error(\"No results for mid {}\", id);\n\t\t\treturn null;\n\t\t}\n\n\t\tJsonNode result = jsonNode.get(\"result\").get(0);\n\n\t\tString name = result.has(\"name\") ? result.get(\"name\").asText() : \"\";\n\n\t\tEntity person = new Entity(id, name);\n\n\t\tfinal JsonNode output = result.get(\"output\");\n\n\t\tif (output.has(\"type\")) {\n\t\t\tfinal JsonNode types = output.get(\"type\").get(\"/type/object/type\");\n\t\t\tperson.types = Lists.newArrayList(Iterables.transform(types, new Function<JsonNode, String>() {\n\t\t\t\t@Nullable\n\t\t\t\t@Override\n\t\t\t\tpublic String apply(@Nullable JsonNode type) {\n\t\t\t\t\treturn type.get(\"id\").asText();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tif (output.has(\"/common/topic/alias\")) {\n\t\t\tfinal JsonNode alias = output.get(\"/common/topic/alias\").get(\"/common/topic/alias\");\n\t\t\tif (alias != null) {\n\t\t\t\tperson.alias = Lists.newArrayList(Iterables.transform(alias, new Function<JsonNode, String>() {\n\t\t\t\t\t@Nullable\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic String apply(@Nullable JsonNode alias) {\n\t\t\t\t\t\treturn alias.asText();\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\n\t\treturn person;\n\t}", "signature": "Entity getNameForID(String id)", "full_signature": "public Entity getNameForID(String id)", "class_method_signature": "FreebaseHelper.getNameForID(String id)", "testcase": false, "constructor": false, "invocations": ["replaceAll", "startsWith", "replace", "getURL", "trace", "size", "get", "error", "get", "get", "has", "asText", "get", "get", "has", "get", "get", "newArrayList", "transform", "asText", "get", "has", "get", "get", "newArrayList", "transform", "asText"]}, "repository": {"repo_id": 25884252, "url": "https://github.com/jkirsch/jedi", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 759, "license": "licensed"}}