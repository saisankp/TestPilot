{"test_class": {"identifier": "MobiusExtrasTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final BiFunction<String, Integer, String> BEGINNER_UPDATE =\n      (model, event) -> model + event;", "modifier": "private static final", "type": "BiFunction<String, Integer, String>", "declarator": "BEGINNER_UPDATE =\n      (model, event) -> model + event", "var_name": "BEGINNER_UPDATE"}, {"original_string": "private static final String MY_MODEL = \"start\";", "modifier": "private static final", "type": "String", "declarator": "MY_MODEL = \"start\"", "var_name": "MY_MODEL"}], "file": "mobius-extras/src/test/java/com/spotify/mobius/extras/MobiusExtrasTest.java"}, "test_case": {"identifier": "shouldInstantiateBeginnerWithMinimumParams", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldInstantiateBeginnerWithMinimumParams() throws Exception {\n    MobiusLoop<String, Integer, ?> loop =\n        MobiusExtras.beginnerLoop(BEGINNER_UPDATE).startFrom(MY_MODEL);\n\n    loop.dispatchEvent(8);\n\n    await().atMost(Duration.ofSeconds(1)).until(loop::getMostRecentModel, is(\"start8\"));\n  }", "signature": "void shouldInstantiateBeginnerWithMinimumParams()", "full_signature": "@Test public void shouldInstantiateBeginnerWithMinimumParams()", "class_method_signature": "MobiusExtrasTest.shouldInstantiateBeginnerWithMinimumParams()", "testcase": true, "constructor": false, "invocations": ["startFrom", "beginnerLoop", "dispatchEvent", "until", "atMost", "await", "ofSeconds", "is"]}, "focal_class": {"identifier": "MobiusExtras", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Connectable<?, ?> NOOP_CONNECTABLE =\n      output ->\n          new Connection<Object>() {\n            @Override\n            public void accept(Object value) {\n              // Do nothing.\n            }\n\n            @Override\n            public void dispose() {\n              // Do nothing.\n            }\n          };", "modifier": "private static final", "type": "Connectable<?, ?>", "declarator": "NOOP_CONNECTABLE =\n      output ->\n          new Connection<Object>() {\n            @Override\n            public void accept(Object value) {\n              // Do nothing.\n            }\n\n            @Override\n            public void dispose() {\n              // Do nothing.\n            }\n          }", "var_name": "NOOP_CONNECTABLE"}], "methods": [{"identifier": "MobiusExtras", "parameters": "()", "modifiers": "private", "return": "", "signature": " MobiusExtras()", "full_signature": "private  MobiusExtras()", "class_method_signature": "MobiusExtras.MobiusExtras()", "testcase": false, "constructor": true}, {"identifier": "beginnerLoop", "parameters": "(final BiFunction<M, E, M> update)", "modifiers": "@Nonnull public static", "return": "MobiusLoop.Builder<M, E, ?>", "signature": "MobiusLoop.Builder<M, E, ?> beginnerLoop(final BiFunction<M, E, M> update)", "full_signature": "@Nonnull public static MobiusLoop.Builder<M, E, ?> beginnerLoop(final BiFunction<M, E, M> update)", "class_method_signature": "MobiusExtras.beginnerLoop(final BiFunction<M, E, M> update)", "testcase": false, "constructor": false}], "file": "mobius-extras/src/main/java/com/spotify/mobius/extras/MobiusExtras.java"}, "focal_method": {"identifier": "beginnerLoop", "parameters": "(final BiFunction<M, E, M> update)", "modifiers": "@Nonnull public static", "return": "MobiusLoop.Builder<M, E, ?>", "body": "@Nonnull\n  public static <M, E> MobiusLoop.Builder<M, E, ?> beginnerLoop(final BiFunction<M, E, M> update) {\n    //noinspection unchecked\n    return loop(\n        new Update<M, E, Object>() {\n          @Nonnull\n          @Override\n          public Next<M, Object> update(M model, E event) {\n            return Next.next(update.apply(model, event));\n          }\n        },\n        (Connectable<Object, E>) NOOP_CONNECTABLE);\n  }", "signature": "MobiusLoop.Builder<M, E, ?> beginnerLoop(final BiFunction<M, E, M> update)", "full_signature": "@Nonnull public static MobiusLoop.Builder<M, E, ?> beginnerLoop(final BiFunction<M, E, M> update)", "class_method_signature": "MobiusExtras.beginnerLoop(final BiFunction<M, E, M> update)", "testcase": false, "constructor": false, "invocations": ["loop", "next", "apply"]}, "repository": {"repo_id": 118132535, "url": "https://github.com/spotify/mobius", "stars": 663, "created": "1/19/2018 2:07:51 PM +00:00", "updates": "2020-01-27T22:05:43+00:00", "fork": "False", "license": "licensed"}}