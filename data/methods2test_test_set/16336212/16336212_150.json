{"test_class": {"identifier": "GrpcCommonTest", "superclass": "", "interfaces": "", "fields": [], "file": "central/src/test/java/org/glowroot/central/GrpcCommonTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test() {\n        assertThat(GrpcCommon.convertFromV09AgentRollupId(\"a/b/c\")).isEqualTo(\"a::b::c::\");\n        assertThat(GrpcCommon.convertFromV09AgentRollupId(\"  a/b/c  \")).isEqualTo(\"a::b::c::\");\n        assertThat(GrpcCommon.convertFromV09AgentRollupId(\"a /  b/c\")).isEqualTo(\"a::b::c::\");\n        assertThat(GrpcCommon.convertFromV09AgentRollupId(\"a/  b  /c\")).isEqualTo(\"a::b::c::\");\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "GrpcCommonTest.test()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "convertFromV09AgentRollupId", "isEqualTo", "assertThat", "convertFromV09AgentRollupId", "isEqualTo", "assertThat", "convertFromV09AgentRollupId", "isEqualTo", "assertThat", "convertFromV09AgentRollupId"]}, "focal_class": {"identifier": "GrpcCommon", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(GrpcCommon.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(GrpcCommon.class)", "var_name": "logger"}, {"original_string": "private final V09AgentRollupDao v09AgentRollupDao;", "modifier": "private final", "type": "V09AgentRollupDao", "declarator": "v09AgentRollupDao", "var_name": "v09AgentRollupDao"}], "methods": [{"identifier": "GrpcCommon", "parameters": "(V09AgentRollupDao v09AgentRollupDao)", "modifiers": "", "return": "", "signature": " GrpcCommon(V09AgentRollupDao v09AgentRollupDao)", "full_signature": "  GrpcCommon(V09AgentRollupDao v09AgentRollupDao)", "class_method_signature": "GrpcCommon.GrpcCommon(V09AgentRollupDao v09AgentRollupDao)", "testcase": false, "constructor": true}, {"identifier": "getAgentIdForLogging", "parameters": "(String agentId, boolean postV09)", "modifiers": "", "return": "String", "signature": "String getAgentIdForLogging(String agentId, boolean postV09)", "full_signature": " String getAgentIdForLogging(String agentId, boolean postV09)", "class_method_signature": "GrpcCommon.getAgentIdForLogging(String agentId, boolean postV09)", "testcase": false, "constructor": false}, {"identifier": "getAgentId", "parameters": "(String agentId, boolean postV09)", "modifiers": "", "return": "String", "signature": "String getAgentId(String agentId, boolean postV09)", "full_signature": " String getAgentId(String agentId, boolean postV09)", "class_method_signature": "GrpcCommon.getAgentId(String agentId, boolean postV09)", "testcase": false, "constructor": false}, {"identifier": "convertFromV09AgentRollupId", "parameters": "(String v09AgentRollupId)", "modifiers": "static", "return": "String", "signature": "String convertFromV09AgentRollupId(String v09AgentRollupId)", "full_signature": "static String convertFromV09AgentRollupId(String v09AgentRollupId)", "class_method_signature": "GrpcCommon.convertFromV09AgentRollupId(String v09AgentRollupId)", "testcase": false, "constructor": false}], "file": "central/src/main/java/org/glowroot/central/GrpcCommon.java"}, "focal_method": {"identifier": "convertFromV09AgentRollupId", "parameters": "(String v09AgentRollupId)", "modifiers": "static", "return": "String", "body": "static String convertFromV09AgentRollupId(String v09AgentRollupId) {\n        // old agent rollup id supported spaces around separator\n        return v09AgentRollupId.replaceAll(\" */ *\", \"::\").trim() + \"::\";\n    }", "signature": "String convertFromV09AgentRollupId(String v09AgentRollupId)", "full_signature": "static String convertFromV09AgentRollupId(String v09AgentRollupId)", "class_method_signature": "GrpcCommon.convertFromV09AgentRollupId(String v09AgentRollupId)", "testcase": false, "constructor": false, "invocations": ["trim", "replaceAll"]}, "repository": {"repo_id": 16336212, "url": "https://github.com/glowroot/glowroot", "stars": 736, "created": "1/29/2014 5:25:58 AM +00:00", "updates": "2020-01-24T11:13:42+00:00", "fork": "False", "license": "licensed"}}