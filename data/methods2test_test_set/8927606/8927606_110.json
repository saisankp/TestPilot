{"test_class": {"identifier": "MultipartHttpSenderTest", "superclass": "extends HttpSenderTestBase<MultipartHttpSender>", "interfaces": "", "fields": [], "file": "core/src/test/java/nl/nn/adapterframework/http/MultipartHttpSenderTest.java"}, "test_case": {"identifier": "simpleMockedMultipartHttp3", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void simpleMockedMultipartHttp3() throws Throwable {\n\t\tMultipartHttpSender sender = getSender();\n\t\tMessage input = new Message(\"<xml>input</xml>\");\n\n\t\ttry {\n\t\t\tIPipeLineSession pls = new PipeLineSessionBase(session);\n\n\t\t\tString xmlMultipart = \"<parts><part name=\\\"dummy\\\" \"\n\t\t\t\t\t+ \"value=\\\"{json:true}\\\" size=\\\"72833\\\" \"\n\t\t\t\t\t+ \"mimeType=\\\"application/json\\\"/></parts>\";\n\t\t\tpls.put(\"multipartXml\", xmlMultipart);\n\t\t\tpls.put(\"part_file\", new ByteArrayInputStream(\"<dummy xml file/>\".getBytes()));\n\n\t\t\tsender.setMultipartXmlSessionKey(\"multipartXml\");\n\n\t\t\tsender.configure();\n\t\t\tsender.open();\n\n\t\t\tString result = sender.sendMessage(input, pls).asString();\n\t\t\tassertEquals(getFile(\"simpleMockedMultipartHttp3.txt\"), result.trim());\n\t\t} catch (SenderException e) {\n\t\t\tthrow e.getCause();\n\t\t} finally {\n\t\t\tif (sender != null) {\n\t\t\t\tsender.close();\n\t\t\t}\n\t\t}\n\t}", "signature": "void simpleMockedMultipartHttp3()", "full_signature": "@Test public void simpleMockedMultipartHttp3()", "class_method_signature": "MultipartHttpSenderTest.simpleMockedMultipartHttp3()", "testcase": true, "constructor": false, "invocations": ["getSender", "put", "put", "getBytes", "setMultipartXmlSessionKey", "configure", "open", "asString", "sendMessage", "assertEquals", "getFile", "trim", "getCause", "close"]}, "focal_class": {"identifier": "MultipartHttpSender", "superclass": "extends HttpSender", "interfaces": "", "fields": [], "methods": [{"identifier": "configure", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void configure()", "full_signature": "@Override public void configure()", "class_method_signature": "MultipartHttpSender.configure()", "testcase": false, "constructor": false}, {"identifier": "elementToFormBodyPart", "parameters": "(Element element, IPipeLineSession session)", "modifiers": "@Override protected", "return": "FormBodyPart", "signature": "FormBodyPart elementToFormBodyPart(Element element, IPipeLineSession session)", "full_signature": "@Override protected FormBodyPart elementToFormBodyPart(Element element, IPipeLineSession session)", "class_method_signature": "MultipartHttpSender.elementToFormBodyPart(Element element, IPipeLineSession session)", "testcase": false, "constructor": false}, {"identifier": "extractResult", "parameters": "(HttpResponseHandler responseHandler, IPipeLineSession session)", "modifiers": "@Override protected", "return": "Message", "signature": "Message extractResult(HttpResponseHandler responseHandler, IPipeLineSession session)", "full_signature": "@Override protected Message extractResult(HttpResponseHandler responseHandler, IPipeLineSession session)", "class_method_signature": "MultipartHttpSender.extractResult(HttpResponseHandler responseHandler, IPipeLineSession session)", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/http/MultipartHttpSender.java"}, "focal_method": {"identifier": "configure", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void configure() throws ConfigurationException {\n\t\tsetMethodType(\"POST\");\n\t\tsetInputMessageParam(\"message\");\n\t\tsetParamsInUrl(false);\n\t\tsetMultipart(true);\n\n\t\tsuper.configure();\n\t}", "signature": "void configure()", "full_signature": "@Override public void configure()", "class_method_signature": "MultipartHttpSender.configure()", "testcase": false, "constructor": false, "invocations": ["setMethodType", "setInputMessageParam", "setParamsInUrl", "setMultipart", "configure"]}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}