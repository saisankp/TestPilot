{"test_class": {"identifier": "KiePMMLScorecardModelCharacteristicASTFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SOURCE_SAMPLE = \"ScorecardSample.pmml\";", "modifier": "private static final", "type": "String", "declarator": "SOURCE_SAMPLE = \"ScorecardSample.pmml\"", "var_name": "SOURCE_SAMPLE"}, {"original_string": "private final String fieldName = \"age\";", "modifier": "private final", "type": "String", "declarator": "fieldName = \"age\"", "var_name": "fieldName"}, {"original_string": "private PMML samplePmml;", "modifier": "private", "type": "PMML", "declarator": "samplePmml", "var_name": "samplePmml"}, {"original_string": "private Scorecard scorecardModel;", "modifier": "private", "type": "Scorecard", "declarator": "scorecardModel", "var_name": "scorecardModel"}, {"original_string": "private DataDictionary dataDictionary;", "modifier": "private", "type": "DataDictionary", "declarator": "dataDictionary", "var_name": "dataDictionary"}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-compiler/src/test/java/org/kie/pmml/models/drools/scorecard/compiler/factories/KiePMMLScorecardModelCharacteristicASTFactoryTest.java"}, "test_case": {"identifier": "declareRulesFromCharacteristics", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void declareRulesFromCharacteristics() {\n        Characteristics characteristics = scorecardModel.getCharacteristics();\n        String parentPath = \"_will\";\n        List<KiePMMLDroolsRule> retrieved = getKiePMMLScorecardModelCharacteristicASTFactory()\n                .declareRulesFromCharacteristics(characteristics, parentPath, null);\n        final List<Characteristic> characteristicList = characteristics.getCharacteristics();\n        List<Attribute> attributes = new ArrayList<>();\n        AtomicInteger counter = new AtomicInteger(0);\n        for (int i = 0; i < characteristicList.size(); i++) {\n            Characteristic characteristic = characteristicList.get(i);\n            attributes.addAll(characteristic.getAttributes());\n            for (int j = 0; j < characteristic.getAttributes().size(); j++) {\n                Attribute attribute = characteristic.getAttributes().get(j);\n                KiePMMLDroolsRule rule = retrieved.get(counter.incrementAndGet());\n                int expectedOperatorValuesSize = 1;\n                Integer expectedAndConstraints = null;\n                Integer expectedInConstraints = null;\n                BOOLEAN_OPERATOR expectedOperator = BOOLEAN_OPERATOR.AND;\n                if (attribute.getPredicate() instanceof SimplePredicate) {\n                    expectedAndConstraints = 1;\n                }\n                if (attribute.getPredicate() instanceof CompoundPredicate) {\n                    expectedOperatorValuesSize = ((CompoundPredicate) attribute.getPredicate()).getPredicates().size();\n                    expectedAndConstraints = 1;\n                }\n                if (attribute.getPredicate() instanceof SimpleSetPredicate) {\n                    expectedInConstraints = 1;\n                }\n                boolean isLastCharacteristic = (i == characteristicList.size() - 1);\n                String statusToSet = isLastCharacteristic ? DONE : String.format(PATH_PATTERN, parentPath, characteristicList.get(i + 1).getName());\n                commonValidateRule(rule,\n                                   attribute,\n                                   statusToSet,\n                                   parentPath + \"_\" + characteristic.getName(),\n                                   j,\n                                   isLastCharacteristic,\n                                   expectedAndConstraints,\n                                   expectedInConstraints,\n                                   expectedOperator,\n                                   null,\n                                   expectedOperatorValuesSize);\n            }\n        }\n        assertEquals(attributes.size() + 1, retrieved.size());\n    }", "signature": "void declareRulesFromCharacteristics()", "full_signature": "@Test public void declareRulesFromCharacteristics()", "class_method_signature": "KiePMMLScorecardModelCharacteristicASTFactoryTest.declareRulesFromCharacteristics()", "testcase": true, "constructor": false, "invocations": ["getCharacteristics", "declareRulesFromCharacteristics", "getKiePMMLScorecardModelCharacteristicASTFactory", "getCharacteristics", "size", "get", "addAll", "getAttributes", "size", "getAttributes", "get", "getAttributes", "get", "incrementAndGet", "getPredicate", "getPredicate", "size", "getPredicates", "getPredicate", "getPredicate", "size", "format", "getName", "get", "commonValidateRule", "getName", "assertEquals", "size", "size"]}, "focal_class": {"identifier": "KiePMMLScorecardModelCharacteristicASTFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(KiePMMLScorecardModelCharacteristicASTFactory.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(KiePMMLScorecardModelCharacteristicASTFactory.class.getName())", "var_name": "logger"}, {"original_string": "private final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap;", "modifier": "private final", "type": "Map<String, KiePMMLOriginalTypeGeneratedType>", "declarator": "fieldTypeMap", "var_name": "fieldTypeMap"}, {"original_string": "private final List<KiePMMLOutputField> outputFields;", "modifier": "private final", "type": "List<KiePMMLOutputField>", "declarator": "outputFields", "var_name": "outputFields"}, {"original_string": "private final DATA_TYPE targetType;", "modifier": "private final", "type": "DATA_TYPE", "declarator": "targetType", "var_name": "targetType"}, {"original_string": "private boolean useReasonCodes = false;", "modifier": "private", "type": "boolean", "declarator": "useReasonCodes = false", "var_name": "useReasonCodes"}, {"original_string": "private Number baselineScore;", "modifier": "private", "type": "Number", "declarator": "baselineScore", "var_name": "baselineScore"}, {"original_string": "private REASONCODE_ALGORITHM reasonCodeAlgorithm;", "modifier": "private", "type": "REASONCODE_ALGORITHM", "declarator": "reasonCodeAlgorithm", "var_name": "reasonCodeAlgorithm"}], "methods": [{"identifier": "KiePMMLScorecardModelCharacteristicASTFactory", "parameters": "(final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final List<KiePMMLOutputField> outputFields, final DATA_TYPE targetType)", "modifiers": "private", "return": "", "signature": " KiePMMLScorecardModelCharacteristicASTFactory(final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final List<KiePMMLOutputField> outputFields, final DATA_TYPE targetType)", "full_signature": "private  KiePMMLScorecardModelCharacteristicASTFactory(final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final List<KiePMMLOutputField> outputFields, final DATA_TYPE targetType)", "class_method_signature": "KiePMMLScorecardModelCharacteristicASTFactory.KiePMMLScorecardModelCharacteristicASTFactory(final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final List<KiePMMLOutputField> outputFields, final DATA_TYPE targetType)", "testcase": false, "constructor": true}, {"identifier": "factory", "parameters": "(final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final List<KiePMMLOutputField> outputFields, final DATA_TYPE targetType)", "modifiers": "public static", "return": "KiePMMLScorecardModelCharacteristicASTFactory", "signature": "KiePMMLScorecardModelCharacteristicASTFactory factory(final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final List<KiePMMLOutputField> outputFields, final DATA_TYPE targetType)", "full_signature": "public static KiePMMLScorecardModelCharacteristicASTFactory factory(final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final List<KiePMMLOutputField> outputFields, final DATA_TYPE targetType)", "class_method_signature": "KiePMMLScorecardModelCharacteristicASTFactory.factory(final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final List<KiePMMLOutputField> outputFields, final DATA_TYPE targetType)", "testcase": false, "constructor": false}, {"identifier": "withReasonCodes", "parameters": "(Number baselineScore, REASONCODE_ALGORITHM reasonCodeAlgorithm)", "modifiers": "public", "return": "KiePMMLScorecardModelCharacteristicASTFactory", "signature": "KiePMMLScorecardModelCharacteristicASTFactory withReasonCodes(Number baselineScore, REASONCODE_ALGORITHM reasonCodeAlgorithm)", "full_signature": "public KiePMMLScorecardModelCharacteristicASTFactory withReasonCodes(Number baselineScore, REASONCODE_ALGORITHM reasonCodeAlgorithm)", "class_method_signature": "KiePMMLScorecardModelCharacteristicASTFactory.withReasonCodes(Number baselineScore, REASONCODE_ALGORITHM reasonCodeAlgorithm)", "testcase": false, "constructor": false}, {"identifier": "declareRulesFromCharacteristics", "parameters": "(final Characteristics characteristics, final String parentPath, Number initialScore)", "modifiers": "public", "return": "List<KiePMMLDroolsRule>", "signature": "List<KiePMMLDroolsRule> declareRulesFromCharacteristics(final Characteristics characteristics, final String parentPath, Number initialScore)", "full_signature": "public List<KiePMMLDroolsRule> declareRulesFromCharacteristics(final Characteristics characteristics, final String parentPath, Number initialScore)", "class_method_signature": "KiePMMLScorecardModelCharacteristicASTFactory.declareRulesFromCharacteristics(final Characteristics characteristics, final String parentPath, Number initialScore)", "testcase": false, "constructor": false}, {"identifier": "declareRuleFromCharacteristic", "parameters": "(final Characteristic characteristic, final String parentPath,\n                                                 final List<KiePMMLDroolsRule> rules,\n                                                 final String statusToSet,\n                                                 final boolean isLastCharacteristic)", "modifiers": "protected", "return": "void", "signature": "void declareRuleFromCharacteristic(final Characteristic characteristic, final String parentPath,\n                                                 final List<KiePMMLDroolsRule> rules,\n                                                 final String statusToSet,\n                                                 final boolean isLastCharacteristic)", "full_signature": "protected void declareRuleFromCharacteristic(final Characteristic characteristic, final String parentPath,\n                                                 final List<KiePMMLDroolsRule> rules,\n                                                 final String statusToSet,\n                                                 final boolean isLastCharacteristic)", "class_method_signature": "KiePMMLScorecardModelCharacteristicASTFactory.declareRuleFromCharacteristic(final Characteristic characteristic, final String parentPath,\n                                                 final List<KiePMMLDroolsRule> rules,\n                                                 final String statusToSet,\n                                                 final boolean isLastCharacteristic)", "testcase": false, "constructor": false}, {"identifier": "declareRuleFromAttribute", "parameters": "(final Attribute attribute, final String parentPath,\n                                            final int attributeIndex,\n                                            final List<KiePMMLDroolsRule> rules,\n                                            final String statusToSet,\n                                            final String characteristicReasonCode,\n                                            final Number characteristicBaselineScore,\n                                            final boolean isLastCharacteristic)", "modifiers": "protected", "return": "void", "signature": "void declareRuleFromAttribute(final Attribute attribute, final String parentPath,\n                                            final int attributeIndex,\n                                            final List<KiePMMLDroolsRule> rules,\n                                            final String statusToSet,\n                                            final String characteristicReasonCode,\n                                            final Number characteristicBaselineScore,\n                                            final boolean isLastCharacteristic)", "full_signature": "protected void declareRuleFromAttribute(final Attribute attribute, final String parentPath,\n                                            final int attributeIndex,\n                                            final List<KiePMMLDroolsRule> rules,\n                                            final String statusToSet,\n                                            final String characteristicReasonCode,\n                                            final Number characteristicBaselineScore,\n                                            final boolean isLastCharacteristic)", "class_method_signature": "KiePMMLScorecardModelCharacteristicASTFactory.declareRuleFromAttribute(final Attribute attribute, final String parentPath,\n                                            final int attributeIndex,\n                                            final List<KiePMMLDroolsRule> rules,\n                                            final String statusToSet,\n                                            final String characteristicReasonCode,\n                                            final Number characteristicBaselineScore,\n                                            final boolean isLastCharacteristic)", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLReasonCodeAndValue", "parameters": "(final Attribute attribute,\n                                                                     final String characteristicReasonCode,\n                                                                     final Number characteristicBaselineScore)", "modifiers": "protected", "return": "KiePMMLReasonCodeAndValue", "signature": "KiePMMLReasonCodeAndValue getKiePMMLReasonCodeAndValue(final Attribute attribute,\n                                                                     final String characteristicReasonCode,\n                                                                     final Number characteristicBaselineScore)", "full_signature": "protected KiePMMLReasonCodeAndValue getKiePMMLReasonCodeAndValue(final Attribute attribute,\n                                                                     final String characteristicReasonCode,\n                                                                     final Number characteristicBaselineScore)", "class_method_signature": "KiePMMLScorecardModelCharacteristicASTFactory.getKiePMMLReasonCodeAndValue(final Attribute attribute,\n                                                                     final String characteristicReasonCode,\n                                                                     final Number characteristicBaselineScore)", "testcase": false, "constructor": false}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-compiler/src/main/java/org/kie/pmml/models/drools/scorecard/compiler/factories/KiePMMLScorecardModelCharacteristicASTFactory.java"}, "focal_method": {"identifier": "declareRulesFromCharacteristics", "parameters": "(final Characteristics characteristics, final String parentPath, Number initialScore)", "modifiers": "public", "return": "List<KiePMMLDroolsRule>", "body": "public List<KiePMMLDroolsRule> declareRulesFromCharacteristics(final Characteristics characteristics, final String parentPath, Number initialScore) {\n        logger.trace(\"declareRulesFromCharacteristics {} {} {}\", characteristics, parentPath, initialScore);\n        final List<KiePMMLDroolsRule> toReturn = new ArrayList<>();\n        final List<Characteristic> characteristicList = characteristics.getCharacteristics();\n        for (int i = 0; i < characteristicList.size(); i++) {\n            final Characteristic characteristic = characteristicList.get(i);\n            if (i == 0) {\n                String statusConstraint = StringUtils.isEmpty(parentPath) ? KiePMMLAbstractModelASTFactory.STATUS_NULL : String.format(KiePMMLAbstractModelASTFactory.STATUS_PATTERN, parentPath);\n                String currentRule = String.format(PATH_PATTERN, parentPath, characteristic.getName());\n                KiePMMLDroolsRule.Builder builder = KiePMMLDroolsRule.builder(currentRule, currentRule, null)\n                        .withStatusConstraint(statusConstraint);\n                if (initialScore != null) {\n                    builder = builder.withAccumulation(initialScore);\n                }\n                toReturn.add(builder.build());\n            }\n            boolean isLastCharacteristic = (i == characteristicList.size() - 1);\n            String statusToSet = isLastCharacteristic ? DONE : String.format(PATH_PATTERN, parentPath, characteristicList.get(i + 1).getName());\n            declareRuleFromCharacteristic(characteristic, parentPath, toReturn, statusToSet, isLastCharacteristic);\n        }\n        return toReturn;\n    }", "signature": "List<KiePMMLDroolsRule> declareRulesFromCharacteristics(final Characteristics characteristics, final String parentPath, Number initialScore)", "full_signature": "public List<KiePMMLDroolsRule> declareRulesFromCharacteristics(final Characteristics characteristics, final String parentPath, Number initialScore)", "class_method_signature": "KiePMMLScorecardModelCharacteristicASTFactory.declareRulesFromCharacteristics(final Characteristics characteristics, final String parentPath, Number initialScore)", "testcase": false, "constructor": false, "invocations": ["trace", "getCharacteristics", "size", "get", "isEmpty", "format", "format", "getName", "withStatusConstraint", "builder", "withAccumulation", "add", "build", "size", "format", "getName", "get", "declareRuleFromCharacteristic"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}