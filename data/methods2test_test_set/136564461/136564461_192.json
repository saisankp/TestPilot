{"test_class": {"identifier": "ByteUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/util/ByteUtilsTest.java"}, "test_case": {"identifier": "failure_PaddingZeroArray_larger_than_specified_length", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void failure_PaddingZeroArray_larger_than_specified_length() {\n        byte[] input = new byte[10];\n\n        ByteUtils.paddingZeroOnHead(input, 8);\n    }", "signature": "void failure_PaddingZeroArray_larger_than_specified_length()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void failure_PaddingZeroArray_larger_than_specified_length()", "class_method_signature": "ByteUtilsTest.failure_PaddingZeroArray_larger_than_specified_length()", "testcase": true, "constructor": false, "invocations": ["paddingZeroOnHead"]}, "focal_class": {"identifier": "ByteUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "split", "parameters": "(byte[] input, int firstLength)", "modifiers": "public static", "return": "byte[][]", "signature": "byte[][] split(byte[] input, int firstLength)", "full_signature": "public static byte[][] split(byte[] input, int firstLength)", "class_method_signature": "ByteUtils.split(byte[] input, int firstLength)", "testcase": false, "constructor": false}, {"identifier": "reverse", "parameters": "(byte[] input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] reverse(byte[] input)", "full_signature": "public static byte[] reverse(byte[] input)", "class_method_signature": "ByteUtils.reverse(byte[] input)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(byte[] value1, byte[] value2)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] join(byte[] value1, byte[] value2)", "full_signature": "public static byte[] join(byte[] value1, byte[] value2)", "class_method_signature": "ByteUtils.join(byte[] value1, byte[] value2)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] join(byte[]... inputs)", "full_signature": "public static byte[] join(byte[]... inputs)", "class_method_signature": "ByteUtils.join(byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "paddingZeroOnHead", "parameters": "(byte[] input, int byteLength)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] paddingZeroOnHead(byte[] input, int byteLength)", "full_signature": "public static byte[] paddingZeroOnHead(byte[] input, int byteLength)", "class_method_signature": "ByteUtils.paddingZeroOnHead(byte[] input, int byteLength)", "testcase": false, "constructor": false}, {"identifier": "paddingZeroOnTail", "parameters": "(byte[] input, int byteLength)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] paddingZeroOnTail(byte[] input, int byteLength)", "full_signature": "public static byte[] paddingZeroOnTail(byte[] input, int byteLength)", "class_method_signature": "ByteUtils.paddingZeroOnTail(byte[] input, int byteLength)", "testcase": false, "constructor": false}, {"identifier": "readBit", "parameters": "(byte value, int position)", "modifiers": "public static", "return": "int", "signature": "int readBit(byte value, int position)", "full_signature": "public static int readBit(byte value, int position)", "class_method_signature": "ByteUtils.readBit(byte value, int position)", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/util/ByteUtils.java"}, "focal_method": {"identifier": "paddingZeroOnHead", "parameters": "(byte[] input, int byteLength)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] paddingZeroOnHead(byte[] input, int byteLength) {\n        if (input.length > byteLength) {\n            throw new IllegalArgumentException(\"input byte array must have length which is less than byteLength you want to be.\");\n        }\n        byte[] padding = new byte[byteLength - input.length];\n        return join(padding, input);\n    }", "signature": "byte[] paddingZeroOnHead(byte[] input, int byteLength)", "full_signature": "public static byte[] paddingZeroOnHead(byte[] input, int byteLength)", "class_method_signature": "ByteUtils.paddingZeroOnHead(byte[] input, int byteLength)", "testcase": false, "constructor": false, "invocations": ["join"]}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}