{"test_class": {"identifier": "TestKinectRecognitionResult", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final float MAX_CONFIDENCE_DIFF = 0.0001f;", "modifier": "private static final", "type": "float", "declarator": "MAX_CONFIDENCE_DIFF = 0.0001f", "var_name": "MAX_CONFIDENCE_DIFF"}], "file": "org.jvoicexml.implementation.kinect/src/test/java/org/jvoicexml/implementation/kinect/TestKinectRecognitionResult.java"}, "test_case": {"identifier": "testIsAccepted", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsAccepted() throws Exception {\n        final SmlInterpretationExtractor extractor = readSml(\"sml-simple.xml\");\n        final KinectRecognitionResult result =\n                new KinectRecognitionResult(extractor);\n        Assert.assertTrue(result.isAccepted());\n        \n    }", "signature": "void testIsAccepted()", "full_signature": "@Test public void testIsAccepted()", "class_method_signature": "TestKinectRecognitionResult.testIsAccepted()", "testcase": true, "constructor": false, "invocations": ["readSml", "assertTrue", "isAccepted"]}, "focal_class": {"identifier": "KinectRecognitionResult", "superclass": "", "interfaces": "implements org.jvoicexml.RecognitionResult", "fields": [{"original_string": "private final SmlInterpretationExtractor extractor;", "modifier": "private final", "type": "SmlInterpretationExtractor", "declarator": "extractor", "var_name": "extractor"}, {"original_string": "private String mark;", "modifier": "private", "type": "String", "declarator": "mark", "var_name": "mark"}], "methods": [{"identifier": "KinectRecognitionResult", "parameters": "(\n            final SmlInterpretationExtractor smlextrator)", "modifiers": "public", "return": "", "signature": " KinectRecognitionResult(\n            final SmlInterpretationExtractor smlextrator)", "full_signature": "public  KinectRecognitionResult(\n            final SmlInterpretationExtractor smlextrator)", "class_method_signature": "KinectRecognitionResult.KinectRecognitionResult(\n            final SmlInterpretationExtractor smlextrator)", "testcase": false, "constructor": true}, {"identifier": "getSemanticInterpretation", "parameters": "(final DataModel model)", "modifiers": "@Override public", "return": "Object", "signature": "Object getSemanticInterpretation(final DataModel model)", "full_signature": "@Override public Object getSemanticInterpretation(final DataModel model)", "class_method_signature": "KinectRecognitionResult.getSemanticInterpretation(final DataModel model)", "testcase": false, "constructor": false}, {"identifier": "getUtterance", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getUtterance()", "full_signature": "@Override public String getUtterance()", "class_method_signature": "KinectRecognitionResult.getUtterance()", "testcase": false, "constructor": false}, {"identifier": "getWords", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getWords()", "full_signature": "@Override public String[] getWords()", "class_method_signature": "KinectRecognitionResult.getWords()", "testcase": false, "constructor": false}, {"identifier": "getConfidence", "parameters": "()", "modifiers": "@Override public", "return": "float", "signature": "float getConfidence()", "full_signature": "@Override public float getConfidence()", "class_method_signature": "KinectRecognitionResult.getConfidence()", "testcase": false, "constructor": false}, {"identifier": "getWordsConfidence", "parameters": "()", "modifiers": "@Override public", "return": "float[]", "signature": "float[] getWordsConfidence()", "full_signature": "@Override public float[] getWordsConfidence()", "class_method_signature": "KinectRecognitionResult.getWordsConfidence()", "testcase": false, "constructor": false}, {"identifier": "getMode", "parameters": "()", "modifiers": "@Override public", "return": "ModeType", "signature": "ModeType getMode()", "full_signature": "@Override public ModeType getMode()", "class_method_signature": "KinectRecognitionResult.getMode()", "testcase": false, "constructor": false}, {"identifier": "isAccepted", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAccepted()", "full_signature": "@Override public boolean isAccepted()", "class_method_signature": "KinectRecognitionResult.isAccepted()", "testcase": false, "constructor": false}, {"identifier": "setMark", "parameters": "(String value)", "modifiers": "@Override public", "return": "void", "signature": "void setMark(String value)", "full_signature": "@Override public void setMark(String value)", "class_method_signature": "KinectRecognitionResult.setMark(String value)", "testcase": false, "constructor": false}, {"identifier": "getMark", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getMark()", "full_signature": "@Override public String getMark()", "class_method_signature": "KinectRecognitionResult.getMark()", "testcase": false, "constructor": false}], "file": "org.jvoicexml.implementation.kinect/src/main/java/org/jvoicexml/implementation/kinect/KinectRecognitionResult.java"}, "focal_method": {"identifier": "isAccepted", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isAccepted() {\n        final String utterance = getUtterance();\n        if (utterance == null) {\n            return false;\n        }\n        // Check if there is only garbage recognized\n        return !utterance.equals(\"...\");\n    }", "signature": "boolean isAccepted()", "full_signature": "@Override public boolean isAccepted()", "class_method_signature": "KinectRecognitionResult.isAccepted()", "testcase": false, "constructor": false, "invocations": ["getUtterance", "equals"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}