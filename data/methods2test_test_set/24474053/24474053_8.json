{"test_class": {"identifier": "NGramExtractorTest", "superclass": "", "interfaces": "", "fields": [], "file": "extra/src/test/java/org/wikimedia/search/extra/regex/ngram/NGramExtractorTest.java"}, "test_case": {"identifier": "simple", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void simple() {\n        NGramExtractor gram = new NGramExtractor(3, 4, 10000, 100, new KeywordAnalyzer());\n        Automaton automaton = new RegExp(\"hero of legend\").toAutomaton();\n        assertEquals(\n                new And<>(leaves(\"her\", \"ero\", \"ro \", \"o o\", \" of\",\n                        \"of \", \"f l\", \" le\", \"leg\", \"ege\", \"gen\", \"end\")),\n                gram.extract(automaton));\n        automaton = new RegExp(\"\").toAutomaton();\n        assertEquals(True.<String> instance(), gram.extract(automaton));\n        automaton = new RegExp(\".*\").toAutomaton();\n        assertEquals(True.<String> instance(), gram.extract(automaton));\n        automaton = new RegExp(\"he\").toAutomaton();\n        assertEquals(True.<String> instance(), gram.extract(automaton));\n        automaton = new RegExp(\"her\").toAutomaton();\n        assertEquals(new Leaf<>(\"her\"), gram.extract(automaton));\n    }", "signature": "void simple()", "full_signature": "@Test public void simple()", "class_method_signature": "NGramExtractorTest.simple()", "testcase": true, "constructor": false, "invocations": ["toAutomaton", "assertEquals", "leaves", "extract", "toAutomaton", "assertEquals", "instance", "extract", "toAutomaton", "assertEquals", "instance", "extract", "toAutomaton", "assertEquals", "instance", "extract", "toAutomaton", "assertEquals", "extract"]}, "focal_class": {"identifier": "NGramExtractor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final int gramSize;", "modifier": "private final", "type": "int", "declarator": "gramSize", "var_name": "gramSize"}, {"original_string": "private final int maxExpand;", "modifier": "private final", "type": "int", "declarator": "maxExpand", "var_name": "maxExpand"}, {"original_string": "private final int maxStatesTraced;", "modifier": "private final", "type": "int", "declarator": "maxStatesTraced", "var_name": "maxStatesTraced"}, {"original_string": "private final int maxNgrams;", "modifier": "private final", "type": "int", "declarator": "maxNgrams", "var_name": "maxNgrams"}, {"original_string": "private final Analyzer ngramAnalyzer;", "modifier": "private final", "type": "Analyzer", "declarator": "ngramAnalyzer", "var_name": "ngramAnalyzer"}], "methods": [{"identifier": "NGramExtractor", "parameters": "(int gramSize, int maxExpand, int maxStatesTraced, int maxNgrams, Analyzer ngramAnalyzer)", "modifiers": "public", "return": "", "signature": " NGramExtractor(int gramSize, int maxExpand, int maxStatesTraced, int maxNgrams, Analyzer ngramAnalyzer)", "full_signature": "public  NGramExtractor(int gramSize, int maxExpand, int maxStatesTraced, int maxNgrams, Analyzer ngramAnalyzer)", "class_method_signature": "NGramExtractor.NGramExtractor(int gramSize, int maxExpand, int maxStatesTraced, int maxNgrams, Analyzer ngramAnalyzer)", "testcase": false, "constructor": true}, {"identifier": "extract", "parameters": "(Automaton automaton)", "modifiers": "public", "return": "Expression<String>", "signature": "Expression<String> extract(Automaton automaton)", "full_signature": "public Expression<String> extract(Automaton automaton)", "class_method_signature": "NGramExtractor.extract(Automaton automaton)", "testcase": false, "constructor": false}], "file": "extra/src/main/java/org/wikimedia/search/extra/regex/ngram/NGramExtractor.java"}, "focal_method": {"identifier": "extract", "parameters": "(Automaton automaton)", "modifiers": "public", "return": "Expression<String>", "body": "public Expression<String> extract(Automaton automaton) {\n        if (automaton.isAccept(0)) {\n            return True.instance();\n        }\n        return new NGramAutomaton(automaton, gramSize, maxExpand, maxStatesTraced, maxNgrams, ngramAnalyzer).expression().simplify();\n    }", "signature": "Expression<String> extract(Automaton automaton)", "full_signature": "public Expression<String> extract(Automaton automaton)", "class_method_signature": "NGramExtractor.extract(Automaton automaton)", "testcase": false, "constructor": false, "invocations": ["isAccept", "instance", "simplify", "expression"]}, "repository": {"repo_id": 24474053, "url": "https://github.com/wikimedia/search-extra", "stars": 37, "created": "9/25/2014 8:26:03 PM +00:00", "updates": "2019-12-06T15:10:34+00:00", "fork": "False", "license": "licensed"}}