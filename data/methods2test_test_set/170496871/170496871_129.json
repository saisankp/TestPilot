{"test_class": {"identifier": "VectorGeneratorsFamilyTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/ml/src/test/java/org/apache/ignite/ml/util/generators/primitives/vector/VectorGeneratorsFamilyTest.java"}, "test_case": {"identifier": "testMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMap() {\n        VectorGeneratorsFamily family = new VectorGeneratorsFamily.Builder()\n            .add(() -> VectorUtils.of(1., 2.))\n            .map(g -> g.move(VectorUtils.of(1, -1)))\n            .build(0L);\n\n        assertArrayEquals(new double[] {2., 1.}, family.get().asArray(), 1e-7);\n    }", "signature": "void testMap()", "full_signature": "@Test public void testMap()", "class_method_signature": "VectorGeneratorsFamilyTest.testMap()", "testcase": true, "constructor": false, "invocations": ["build", "map", "add", "of", "move", "of", "assertArrayEquals", "asArray", "get"]}, "focal_class": {"identifier": "VectorGeneratorsFamily", "superclass": "", "interfaces": "implements VectorGenerator", "fields": [{"original_string": "private final List<VectorGenerator> family;", "modifier": "private final", "type": "List<VectorGenerator>", "declarator": "family", "var_name": "family"}, {"original_string": "private final DiscreteRandomProducer selector;", "modifier": "private final", "type": "DiscreteRandomProducer", "declarator": "selector", "var_name": "selector"}], "methods": [{"identifier": "VectorGeneratorsFamily", "parameters": "(List<VectorGenerator> family, DiscreteRandomProducer selector)", "modifiers": "private", "return": "", "signature": " VectorGeneratorsFamily(List<VectorGenerator> family, DiscreteRandomProducer selector)", "full_signature": "private  VectorGeneratorsFamily(List<VectorGenerator> family, DiscreteRandomProducer selector)", "class_method_signature": "VectorGeneratorsFamily.VectorGeneratorsFamily(List<VectorGenerator> family, DiscreteRandomProducer selector)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "()", "modifiers": "@Override public", "return": "Vector", "signature": "Vector get()", "full_signature": "@Override public Vector get()", "class_method_signature": "VectorGeneratorsFamily.get()", "testcase": false, "constructor": false}, {"identifier": "getWithId", "parameters": "()", "modifiers": "public", "return": "VectorWithDistributionId", "signature": "VectorWithDistributionId getWithId()", "full_signature": "public VectorWithDistributionId getWithId()", "class_method_signature": "VectorGeneratorsFamily.getWithId()", "testcase": false, "constructor": false}, {"identifier": "asDataStream", "parameters": "()", "modifiers": "@Override public", "return": "DataStreamGenerator", "signature": "DataStreamGenerator asDataStream()", "full_signature": "@Override public DataStreamGenerator asDataStream()", "class_method_signature": "VectorGeneratorsFamily.asDataStream()", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/util/generators/primitives/vector/VectorGeneratorsFamily.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "@Override public", "return": "Vector", "body": "@Override public Vector get() {\n        return family.get(selector.getInt()).get();\n    }", "signature": "Vector get()", "full_signature": "@Override public Vector get()", "class_method_signature": "VectorGeneratorsFamily.get()", "testcase": false, "constructor": false, "invocations": ["get", "get", "getInt"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}