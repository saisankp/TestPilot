{"test_class": {"identifier": "TestFlumeConfiguration", "superclass": "", "interfaces": "", "fields": [], "file": "flume-ng-configuration/src/test/java/org/apache/flume/conf/TestFlumeConfiguration.java"}, "test_case": {"identifier": "testFLUME1743", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testFLUME1743() {\n    Properties properties = new Properties();\n    properties.put(\"agent1.channels\", \"ch0\");\n    properties.put(\"agent1.channels.ch0.type\", \"memory\");\n\n    properties.put(\"agent1.sources\", \"src0\");\n    properties.put(\"agent1.sources.src0.type\", \"multiport_syslogtcp\");\n    properties.put(\"agent1.sources.src0.channels\", \"ch0\");\n    properties.put(\"agent1.sources.src0.host\", \"localhost\");\n    properties.put(\"agent1.sources.src0.ports\", \"10001 10002 10003\");\n    properties.put(\"agent1.sources.src0.portHeader\", \"port\");\n\n    properties.put(\"agent1.sinks\", \"sink0\");\n    properties.put(\"agent1.sinks.sink0.type\", \"null\");\n    properties.put(\"agent1.sinks.sink0.channel\", \"ch0\");\n\n    properties.put(\"agent1.configfilters\", \"f1\");\n    properties.put(\"agent1.configfilters.f1.type\", \"env\");\n\n    FlumeConfiguration conf = new FlumeConfiguration(properties);\n    AgentConfiguration agentConfiguration = conf.getConfigurationFor(\"agent1\");\n    Assert.assertEquals(String.valueOf(agentConfiguration.getSourceSet()), 1,\n        agentConfiguration.getSourceSet().size());\n    Assert.assertEquals(String.valueOf(agentConfiguration.getChannelSet()), 1,\n        agentConfiguration.getChannelSet().size());\n    Assert.assertEquals(String.valueOf(agentConfiguration.getSinkSet()), 1,\n        agentConfiguration.getSinkSet().size());\n    Assert.assertTrue(agentConfiguration.getSourceSet().contains(\"src0\"));\n    Assert.assertTrue(agentConfiguration.getChannelSet().contains(\"ch0\"));\n    Assert.assertTrue(agentConfiguration.getSinkSet().contains(\"sink0\"));\n    Assert.assertTrue(agentConfiguration.getConfigFilterSet().contains(\"f1\"));\n  }", "signature": "void testFLUME1743()", "full_signature": "@Test public void testFLUME1743()", "class_method_signature": "TestFlumeConfiguration.testFLUME1743()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "put", "put", "put", "put", "put", "put", "put", "put", "put", "getConfigurationFor", "assertEquals", "valueOf", "getSourceSet", "size", "getSourceSet", "assertEquals", "valueOf", "getChannelSet", "size", "getChannelSet", "assertEquals", "valueOf", "getSinkSet", "size", "getSinkSet", "assertTrue", "contains", "getSourceSet", "assertTrue", "contains", "getChannelSet", "assertTrue", "contains", "getSinkSet", "assertTrue", "contains", "getConfigFilterSet"]}, "focal_class": {"identifier": "FlumeConfiguration", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(FlumeConfiguration.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(FlumeConfiguration.class)", "var_name": "LOGGER"}, {"original_string": "private final Map<String, AgentConfiguration> agentConfigMap;", "modifier": "private final", "type": "Map<String, AgentConfiguration>", "declarator": "agentConfigMap", "var_name": "agentConfigMap"}, {"original_string": "private final LinkedList<FlumeConfigurationError> errors;", "modifier": "private final", "type": "LinkedList<FlumeConfigurationError>", "declarator": "errors", "var_name": "errors"}, {"original_string": "public static final String NEWLINE = System.getProperty(\"line.separator\", \"\\n\");", "modifier": "public static final", "type": "String", "declarator": "NEWLINE = System.getProperty(\"line.separator\", \"\\n\")", "var_name": "NEWLINE"}, {"original_string": "public static final String INDENTSTEP = \"  \";", "modifier": "public static final", "type": "String", "declarator": "INDENTSTEP = \"  \"", "var_name": "INDENTSTEP"}], "methods": [{"identifier": "FlumeConfiguration", "parameters": "(Properties properties)", "modifiers": "@Deprecated public", "return": "", "signature": " FlumeConfiguration(Properties properties)", "full_signature": "@Deprecated public  FlumeConfiguration(Properties properties)", "class_method_signature": "FlumeConfiguration.FlumeConfiguration(Properties properties)", "testcase": false, "constructor": true}, {"identifier": "FlumeConfiguration", "parameters": "(Map<String, String> properties)", "modifiers": "public", "return": "", "signature": " FlumeConfiguration(Map<String, String> properties)", "full_signature": "public  FlumeConfiguration(Map<String, String> properties)", "class_method_signature": "FlumeConfiguration.FlumeConfiguration(Map<String, String> properties)", "testcase": false, "constructor": true}, {"identifier": "getConfigurationErrors", "parameters": "()", "modifiers": "public", "return": "List<FlumeConfigurationError>", "signature": "List<FlumeConfigurationError> getConfigurationErrors()", "full_signature": "public List<FlumeConfigurationError> getConfigurationErrors()", "class_method_signature": "FlumeConfiguration.getConfigurationErrors()", "testcase": false, "constructor": false}, {"identifier": "getConfigurationFor", "parameters": "(String hostname)", "modifiers": "public", "return": "AgentConfiguration", "signature": "AgentConfiguration getConfigurationFor(String hostname)", "full_signature": "public AgentConfiguration getConfigurationFor(String hostname)", "class_method_signature": "FlumeConfiguration.getConfigurationFor(String hostname)", "testcase": false, "constructor": false}, {"identifier": "validateConfiguration", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void validateConfiguration()", "full_signature": "private void validateConfiguration()", "class_method_signature": "FlumeConfiguration.validateConfiguration()", "testcase": false, "constructor": false}, {"identifier": "addRawProperty", "parameters": "(String rawName, String rawValue)", "modifiers": "private", "return": "boolean", "signature": "boolean addRawProperty(String rawName, String rawValue)", "full_signature": "private boolean addRawProperty(String rawName, String rawValue)", "class_method_signature": "FlumeConfiguration.addRawProperty(String rawName, String rawValue)", "testcase": false, "constructor": false}, {"identifier": "addError", "parameters": "(\n      String component, FlumeConfigurationErrorType errorType, ErrorOrWarning level\n  )", "modifiers": "private", "return": "void", "signature": "void addError(\n      String component, FlumeConfigurationErrorType errorType, ErrorOrWarning level\n  )", "full_signature": "private void addError(\n      String component, FlumeConfigurationErrorType errorType, ErrorOrWarning level\n  )", "class_method_signature": "FlumeConfiguration.addError(\n      String component, FlumeConfigurationErrorType errorType, ErrorOrWarning level\n  )", "testcase": false, "constructor": false}], "file": "flume-ng-configuration/src/main/java/org/apache/flume/conf/FlumeConfiguration.java"}, "focal_method": {"identifier": "getConfigurationFor", "parameters": "(String hostname)", "modifiers": "public", "return": "AgentConfiguration", "body": "public AgentConfiguration getConfigurationFor(String hostname) {\n    return agentConfigMap.get(hostname);\n  }", "signature": "AgentConfiguration getConfigurationFor(String hostname)", "full_signature": "public AgentConfiguration getConfigurationFor(String hostname)", "class_method_signature": "FlumeConfiguration.getConfigurationFor(String hostname)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}