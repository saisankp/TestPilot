{"test_class": {"identifier": "ServiceContextManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/api/src/test/java/org/apache/tamaya/spi/ServiceContextManagerTest.java"}, "test_case": {"identifier": "setRequiresNonNullParameter", "parameters": "()", "modifiers": "@Test(expected = NullPointerException.class) public", "return": "void", "body": "@Test(expected = NullPointerException.class)\n    public void setRequiresNonNullParameter() {\n        ServiceContextManager.set(null);\n    }", "signature": "void setRequiresNonNullParameter()", "full_signature": "@Test(expected = NullPointerException.class) public void setRequiresNonNullParameter()", "class_method_signature": "ServiceContextManagerTest.setRequiresNonNullParameter()", "testcase": true, "constructor": false, "invocations": ["set"]}, "focal_class": {"identifier": "ServiceContextManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(ServiceContextManager.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(ServiceContextManager.class.getName())", "var_name": "LOG"}, {"original_string": "private static final Map<ClassLoader, ServiceContext> SERVICE_CONTEXTS = new ConcurrentHashMap<>();", "modifier": "private static final", "type": "Map<ClassLoader, ServiceContext>", "declarator": "SERVICE_CONTEXTS = new ConcurrentHashMap<>()", "var_name": "SERVICE_CONTEXTS"}], "methods": [{"identifier": "ServiceContextManager", "parameters": "()", "modifiers": "private", "return": "", "signature": " ServiceContextManager()", "full_signature": "private  ServiceContextManager()", "class_method_signature": "ServiceContextManager.ServiceContextManager()", "testcase": false, "constructor": true}, {"identifier": "loadDefaultServiceProvider", "parameters": "(ClassLoader classLoader)", "modifiers": "private static", "return": "ServiceContext", "signature": "ServiceContext loadDefaultServiceProvider(ClassLoader classLoader)", "full_signature": "private static ServiceContext loadDefaultServiceProvider(ClassLoader classLoader)", "class_method_signature": "ServiceContextManager.loadDefaultServiceProvider(ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(ServiceContext serviceContext)", "modifiers": "public static", "return": "ServiceContext", "signature": "ServiceContext set(ServiceContext serviceContext)", "full_signature": "public static ServiceContext set(ServiceContext serviceContext)", "class_method_signature": "ServiceContextManager.set(ServiceContext serviceContext)", "testcase": false, "constructor": false}, {"identifier": "setToStaticClassLoader", "parameters": "(ServiceContext serviceContext)", "modifiers": "public static", "return": "ServiceContext", "signature": "ServiceContext setToStaticClassLoader(ServiceContext serviceContext)", "full_signature": "public static ServiceContext setToStaticClassLoader(ServiceContext serviceContext)", "class_method_signature": "ServiceContextManager.setToStaticClassLoader(ServiceContext serviceContext)", "testcase": false, "constructor": false}, {"identifier": "setWithClassLoader", "parameters": "(ServiceContext serviceContext, ClassLoader cl)", "modifiers": "private static", "return": "ServiceContext", "signature": "ServiceContext setWithClassLoader(ServiceContext serviceContext, ClassLoader cl)", "full_signature": "private static ServiceContext setWithClassLoader(ServiceContext serviceContext, ClassLoader cl)", "class_method_signature": "ServiceContextManager.setWithClassLoader(ServiceContext serviceContext, ClassLoader cl)", "testcase": false, "constructor": false}, {"identifier": "getServiceContext", "parameters": "(ClassLoader classLoader)", "modifiers": "public static", "return": "ServiceContext", "signature": "ServiceContext getServiceContext(ClassLoader classLoader)", "full_signature": "public static ServiceContext getServiceContext(ClassLoader classLoader)", "class_method_signature": "ServiceContextManager.getServiceContext(ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "getServiceContext", "parameters": "()", "modifiers": "public static", "return": "ServiceContext", "signature": "ServiceContext getServiceContext()", "full_signature": "public static ServiceContext getServiceContext()", "class_method_signature": "ServiceContextManager.getServiceContext()", "testcase": false, "constructor": false}, {"identifier": "getDefaultClassLoader", "parameters": "()", "modifiers": "public static", "return": "ClassLoader", "signature": "ClassLoader getDefaultClassLoader()", "full_signature": "public static ClassLoader getDefaultClassLoader()", "class_method_signature": "ServiceContextManager.getDefaultClassLoader()", "testcase": false, "constructor": false}], "file": "code/api/src/main/java/org/apache/tamaya/spi/ServiceContextManager.java"}, "focal_method": {"identifier": "set", "parameters": "(ServiceContext serviceContext)", "modifiers": "public static", "return": "ServiceContext", "body": "public static ServiceContext set(ServiceContext serviceContext) {\n        Objects.requireNonNull(serviceContext);\n        return setWithClassLoader(serviceContext, serviceContext.getClassLoader());\n    }", "signature": "ServiceContext set(ServiceContext serviceContext)", "full_signature": "public static ServiceContext set(ServiceContext serviceContext)", "class_method_signature": "ServiceContextManager.set(ServiceContext serviceContext)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "setWithClassLoader", "getClassLoader"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}