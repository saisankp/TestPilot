{"test_class": {"identifier": "ConformerContainerTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [{"original_string": "private IAtomContainer   base;", "modifier": "private", "type": "IAtomContainer", "declarator": "base", "var_name": "base"}, {"original_string": "private IAtomContainer[] confs;", "modifier": "private", "type": "IAtomContainer[]", "declarator": "confs", "var_name": "confs"}, {"original_string": "private static int       natom  = 10;", "modifier": "private static", "type": "int", "declarator": "natom  = 10", "var_name": "natom"}, {"original_string": "private static int       nconfs = 20;", "modifier": "private static", "type": "int", "declarator": "nconfs = 20", "var_name": "nconfs"}, {"original_string": "private static Random    rnd    = new Random();", "modifier": "private static", "type": "Random", "declarator": "rnd    = new Random()", "var_name": "rnd"}], "file": "base/data/src/test/java/org/openscience/cdk/ConformerContainerTest.java"}, "test_case": {"identifier": "testConformerContainer_IAtomContainer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConformerContainer_IAtomContainer() {\n        ConformerContainer container = new ConformerContainer(base);\n        Assert.assertNotNull(container);\n        Assert.assertEquals(1, container.size());\n    }", "signature": "void testConformerContainer_IAtomContainer()", "full_signature": "@Test public void testConformerContainer_IAtomContainer()", "class_method_signature": "ConformerContainerTest.testConformerContainer_IAtomContainer()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "assertEquals", "size"]}, "focal_class": {"identifier": "ConformerContainer", "superclass": "", "interfaces": "implements List<IAtomContainer>", "fields": [{"original_string": "private IAtomContainer  atomContainer = null;", "modifier": "private", "type": "IAtomContainer", "declarator": "atomContainer = null", "var_name": "atomContainer"}, {"original_string": "private String          title         = null;", "modifier": "private", "type": "String", "declarator": "title         = null", "var_name": "title"}, {"original_string": "private List<Point3d[]> coordinates;", "modifier": "private", "type": "List<Point3d[]>", "declarator": "coordinates", "var_name": "coordinates"}], "methods": [{"identifier": "getCoordinateList", "parameters": "(IAtomContainer atomContainer)", "modifiers": "private", "return": "Point3d[]", "signature": "Point3d[] getCoordinateList(IAtomContainer atomContainer)", "full_signature": "private Point3d[] getCoordinateList(IAtomContainer atomContainer)", "class_method_signature": "ConformerContainer.getCoordinateList(IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "ConformerContainer", "parameters": "()", "modifiers": "public", "return": "", "signature": " ConformerContainer()", "full_signature": "public  ConformerContainer()", "class_method_signature": "ConformerContainer.ConformerContainer()", "testcase": false, "constructor": true}, {"identifier": "ConformerContainer", "parameters": "(IAtomContainer atomContainer)", "modifiers": "public", "return": "", "signature": " ConformerContainer(IAtomContainer atomContainer)", "full_signature": "public  ConformerContainer(IAtomContainer atomContainer)", "class_method_signature": "ConformerContainer.ConformerContainer(IAtomContainer atomContainer)", "testcase": false, "constructor": true}, {"identifier": "ConformerContainer", "parameters": "(IAtomContainer[] atomContainers)", "modifiers": "public", "return": "", "signature": " ConformerContainer(IAtomContainer[] atomContainers)", "full_signature": "public  ConformerContainer(IAtomContainer[] atomContainers)", "class_method_signature": "ConformerContainer.ConformerContainer(IAtomContainer[] atomContainers)", "testcase": false, "constructor": true}, {"identifier": "getTitle", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTitle()", "full_signature": "public String getTitle()", "class_method_signature": "ConformerContainer.getTitle()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "ConformerContainer.size()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "ConformerContainer.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(Object o)", "full_signature": "@Override public boolean contains(Object o)", "class_method_signature": "ConformerContainer.contains(Object o)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<IAtomContainer>", "signature": "Iterator<IAtomContainer> iterator()", "full_signature": "@Override public Iterator<IAtomContainer> iterator()", "class_method_signature": "ConformerContainer.iterator()", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "()", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] toArray()", "full_signature": "@Override public Object[] toArray()", "class_method_signature": "ConformerContainer.toArray()", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "(IAtomContainer[] ts)", "modifiers": "@Override public", "return": "IAtomContainer[]", "signature": "IAtomContainer[] toArray(IAtomContainer[] ts)", "full_signature": "@Override public IAtomContainer[] toArray(IAtomContainer[] ts)", "class_method_signature": "ConformerContainer.toArray(IAtomContainer[] ts)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(IAtomContainer atomContainer)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean add(IAtomContainer atomContainer)", "full_signature": "@Override public boolean add(IAtomContainer atomContainer)", "class_method_signature": "ConformerContainer.add(IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean remove(Object o)", "full_signature": "@Override public boolean remove(Object o)", "class_method_signature": "ConformerContainer.remove(Object o)", "testcase": false, "constructor": false}, {"identifier": "containsAll", "parameters": "(Collection<?> objects)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsAll(Collection<?> objects)", "full_signature": "@Override public boolean containsAll(Collection<?> objects)", "class_method_signature": "ConformerContainer.containsAll(Collection<?> objects)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(Collection<? extends IAtomContainer> atomContainers)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addAll(Collection<? extends IAtomContainer> atomContainers)", "full_signature": "@Override public boolean addAll(Collection<? extends IAtomContainer> atomContainers)", "class_method_signature": "ConformerContainer.addAll(Collection<? extends IAtomContainer> atomContainers)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(int i, Collection<? extends IAtomContainer> iAtomContainers)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addAll(int i, Collection<? extends IAtomContainer> iAtomContainers)", "full_signature": "@Override public boolean addAll(int i, Collection<? extends IAtomContainer> iAtomContainers)", "class_method_signature": "ConformerContainer.addAll(int i, Collection<? extends IAtomContainer> iAtomContainers)", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "(Collection<?> objects)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeAll(Collection<?> objects)", "full_signature": "@Override public boolean removeAll(Collection<?> objects)", "class_method_signature": "ConformerContainer.removeAll(Collection<?> objects)", "testcase": false, "constructor": false}, {"identifier": "retainAll", "parameters": "(Collection<?> objects)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean retainAll(Collection<?> objects)", "full_signature": "@Override public boolean retainAll(Collection<?> objects)", "class_method_signature": "ConformerContainer.retainAll(Collection<?> objects)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "ConformerContainer.clear()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int i)", "modifiers": "@Override public", "return": "IAtomContainer", "signature": "IAtomContainer get(int i)", "full_signature": "@Override public IAtomContainer get(int i)", "class_method_signature": "ConformerContainer.get(int i)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int i, IAtomContainer atomContainer)", "modifiers": "@Override public", "return": "IAtomContainer", "signature": "IAtomContainer set(int i, IAtomContainer atomContainer)", "full_signature": "@Override public IAtomContainer set(int i, IAtomContainer atomContainer)", "class_method_signature": "ConformerContainer.set(int i, IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(int i, IAtomContainer atomContainer)", "modifiers": "@Override public", "return": "void", "signature": "void add(int i, IAtomContainer atomContainer)", "full_signature": "@Override public void add(int i, IAtomContainer atomContainer)", "class_method_signature": "ConformerContainer.add(int i, IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(int i)", "modifiers": "@Override public", "return": "IAtomContainer", "signature": "IAtomContainer remove(int i)", "full_signature": "@Override public IAtomContainer remove(int i)", "class_method_signature": "ConformerContainer.remove(int i)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(Object o)", "modifiers": "@Override public", "return": "int", "signature": "int indexOf(Object o)", "full_signature": "@Override public int indexOf(Object o)", "class_method_signature": "ConformerContainer.indexOf(Object o)", "testcase": false, "constructor": false}, {"identifier": "lastIndexOf", "parameters": "(Object o)", "modifiers": "@Override public", "return": "int", "signature": "int lastIndexOf(Object o)", "full_signature": "@Override public int lastIndexOf(Object o)", "class_method_signature": "ConformerContainer.lastIndexOf(Object o)", "testcase": false, "constructor": false}, {"identifier": "listIterator", "parameters": "()", "modifiers": "@Override public", "return": "ListIterator<IAtomContainer>", "signature": "ListIterator<IAtomContainer> listIterator()", "full_signature": "@Override public ListIterator<IAtomContainer> listIterator()", "class_method_signature": "ConformerContainer.listIterator()", "testcase": false, "constructor": false}, {"identifier": "listIterator", "parameters": "(int i)", "modifiers": "@Override public", "return": "ListIterator<IAtomContainer>", "signature": "ListIterator<IAtomContainer> listIterator(int i)", "full_signature": "@Override public ListIterator<IAtomContainer> listIterator(int i)", "class_method_signature": "ConformerContainer.listIterator(int i)", "testcase": false, "constructor": false}, {"identifier": "subList", "parameters": "(int i, int i1)", "modifiers": "@Override public", "return": "List<IAtomContainer>", "signature": "List<IAtomContainer> subList(int i, int i1)", "full_signature": "@Override public List<IAtomContainer> subList(int i, int i1)", "class_method_signature": "ConformerContainer.subList(int i, int i1)", "testcase": false, "constructor": false}], "file": "base/data/src/main/java/org/openscience/cdk/ConformerContainer.java"}, "focal_method": {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int size() {\n        return coordinates.size();\n    }", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "ConformerContainer.size()", "testcase": false, "constructor": false, "invocations": ["size"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}