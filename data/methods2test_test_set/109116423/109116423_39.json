{"test_class": {"identifier": "PartnerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ACTION_PARTNER_CUSTOMIZATION =\n            \"com.android.setupwizard.action.PARTNER_CUSTOMIZATION\";", "modifier": "private static final", "type": "String", "declarator": "ACTION_PARTNER_CUSTOMIZATION =\n            \"com.android.setupwizard.action.PARTNER_CUSTOMIZATION\"", "var_name": "ACTION_PARTNER_CUSTOMIZATION"}, {"original_string": "private Context mContext;", "modifier": "private", "type": "Context", "declarator": "mContext", "var_name": "mContext"}, {"original_string": "private Resources mPartnerResources;", "modifier": "private", "type": "Resources", "declarator": "mPartnerResources", "var_name": "mPartnerResources"}, {"original_string": "private TestPackageManager mPackageManager;", "modifier": "private", "type": "TestPackageManager", "declarator": "mPackageManager", "var_name": "mPackageManager"}], "file": "com/android/setupwizardlib/util/PartnerTest.java"}, "test_case": {"identifier": "testLoadPartner", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLoadPartner() {\n        mPackageManager.addResolveInfoForIntent(\n                new Intent(ACTION_PARTNER_CUSTOMIZATION),\n                Arrays.asList(\n                        createResolveInfo(\"foo.bar\", false, true),\n                        createResolveInfo(\"test.partner.package\", true, true))\n        );\n\n        Partner partner = Partner.get(mContext);\n        assertNotNull(\"Partner should not be null\", partner);\n    }", "signature": "void testLoadPartner()", "full_signature": "@Test public void testLoadPartner()", "class_method_signature": "PartnerTest.testLoadPartner()", "testcase": true, "constructor": false, "invocations": ["addResolveInfoForIntent", "asList", "createResolveInfo", "createResolveInfo", "get", "assertNotNull"]}, "focal_class": {"identifier": "Partner", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TAG = \"(SUW) Partner\";", "modifier": "private static final", "type": "String", "declarator": "TAG = \"(SUW) Partner\"", "var_name": "TAG"}, {"original_string": "private static final String ACTION_PARTNER_CUSTOMIZATION =\n            \"com.android.setupwizard.action.PARTNER_CUSTOMIZATION\";", "modifier": "private static final", "type": "String", "declarator": "ACTION_PARTNER_CUSTOMIZATION =\n            \"com.android.setupwizard.action.PARTNER_CUSTOMIZATION\"", "var_name": "ACTION_PARTNER_CUSTOMIZATION"}, {"original_string": "private static boolean sSearched = false;", "modifier": "private static", "type": "boolean", "declarator": "sSearched = false", "var_name": "sSearched"}, {"original_string": "private static Partner sPartner;", "modifier": "private static", "type": "Partner", "declarator": "sPartner", "var_name": "sPartner"}, {"original_string": "private final String mPackageName;", "modifier": "private final", "type": "String", "declarator": "mPackageName", "var_name": "mPackageName"}, {"original_string": "private final Resources mResources;", "modifier": "private final", "type": "Resources", "declarator": "mResources", "var_name": "mResources"}], "methods": [{"identifier": "getDrawable", "parameters": "(Context context, int id)", "modifiers": "public static", "return": "Drawable", "signature": "Drawable getDrawable(Context context, int id)", "full_signature": "public static Drawable getDrawable(Context context, int id)", "class_method_signature": "Partner.getDrawable(Context context, int id)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(Context context, int id)", "modifiers": "public static", "return": "String", "signature": "String getString(Context context, int id)", "full_signature": "public static String getString(Context context, int id)", "class_method_signature": "Partner.getString(Context context, int id)", "testcase": false, "constructor": false}, {"identifier": "getResourceEntry", "parameters": "(Context context, int id)", "modifiers": "public static", "return": "ResourceEntry", "signature": "ResourceEntry getResourceEntry(Context context, int id)", "full_signature": "public static ResourceEntry getResourceEntry(Context context, int id)", "class_method_signature": "Partner.getResourceEntry(Context context, int id)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Context context)", "modifiers": "public static synchronized", "return": "Partner", "signature": "Partner get(Context context)", "full_signature": "public static synchronized Partner get(Context context)", "class_method_signature": "Partner.get(Context context)", "testcase": false, "constructor": false}, {"identifier": "resetForTesting", "parameters": "()", "modifiers": "@VisibleForTesting public static synchronized", "return": "void", "signature": "void resetForTesting()", "full_signature": "@VisibleForTesting public static synchronized void resetForTesting()", "class_method_signature": "Partner.resetForTesting()", "testcase": false, "constructor": false}, {"identifier": "Partner", "parameters": "(String packageName, Resources res)", "modifiers": "private", "return": "", "signature": " Partner(String packageName, Resources res)", "full_signature": "private  Partner(String packageName, Resources res)", "class_method_signature": "Partner.Partner(String packageName, Resources res)", "testcase": false, "constructor": true}, {"identifier": "getPackageName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPackageName()", "full_signature": "public String getPackageName()", "class_method_signature": "Partner.getPackageName()", "testcase": false, "constructor": false}, {"identifier": "getResources", "parameters": "()", "modifiers": "public", "return": "Resources", "signature": "Resources getResources()", "full_signature": "public Resources getResources()", "class_method_signature": "Partner.getResources()", "testcase": false, "constructor": false}, {"identifier": "getIdentifier", "parameters": "(String name, String defType)", "modifiers": "public", "return": "int", "signature": "int getIdentifier(String name, String defType)", "full_signature": "public int getIdentifier(String name, String defType)", "class_method_signature": "Partner.getIdentifier(String name, String defType)", "testcase": false, "constructor": false}], "file": "com/android/setupwizardlib/util/Partner.java"}, "focal_method": {"identifier": "get", "parameters": "(Context context)", "modifiers": "public static synchronized", "return": "Partner", "body": "public static synchronized Partner get(Context context) {\n        if (!sSearched) {\n            PackageManager pm = context.getPackageManager();\n            final Intent intent = new Intent(ACTION_PARTNER_CUSTOMIZATION);\n            List<ResolveInfo> receivers;\n            if (VERSION.SDK_INT >= VERSION_CODES.N) {\n                receivers = pm.queryBroadcastReceivers(\n                        intent,\n                        PackageManager.MATCH_SYSTEM_ONLY\n                                | PackageManager.MATCH_DIRECT_BOOT_AWARE\n                                | PackageManager.MATCH_DIRECT_BOOT_UNAWARE);\n            } else {\n                // On versions before N, direct boot doesn't exist. And the MATCH_SYSTEM_ONLY flag\n                // doesn't exist so we filter for system apps in code below.\n                receivers = pm.queryBroadcastReceivers(intent, 0);\n            }\n\n            for (ResolveInfo info : receivers) {\n                if (info.activityInfo == null) {\n                    continue;\n                }\n                final ApplicationInfo appInfo = info.activityInfo.applicationInfo;\n                if ((appInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0) {\n                    try {\n                        final Resources res = pm.getResourcesForApplication(appInfo);\n                        sPartner = new Partner(appInfo.packageName, res);\n                        break;\n                    } catch (NameNotFoundException e) {\n                        Log.w(TAG, \"Failed to find resources for \" + appInfo.packageName);\n                    }\n                }\n            }\n            sSearched = true;\n        }\n        return sPartner;\n    }", "signature": "Partner get(Context context)", "full_signature": "public static synchronized Partner get(Context context)", "class_method_signature": "Partner.get(Context context)", "testcase": false, "constructor": false, "invocations": ["getPackageManager", "queryBroadcastReceivers", "queryBroadcastReceivers", "getResourcesForApplication", "w"]}, "repository": {"repo_id": 109116423, "url": "https://github.com/AndroidSDKSources/android-sdk-sources-for-api-level-26", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 29147, "license": "licensed"}}