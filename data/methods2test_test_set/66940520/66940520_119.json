{"test_class": {"identifier": "DefaultCompleteDataSetRegistrationExchangeServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private CompleteDataSetRegistrationExchangeStore cdsrStore;", "modifier": "@Mock\n    private", "type": "CompleteDataSetRegistrationExchangeStore", "declarator": "cdsrStore", "var_name": "cdsrStore"}, {"original_string": "@Mock\n    private IdentifiableObjectManager idObjManager;", "modifier": "@Mock\n    private", "type": "IdentifiableObjectManager", "declarator": "idObjManager", "var_name": "idObjManager"}, {"original_string": "@Mock\n    private OrganisationUnitService orgUnitService;", "modifier": "@Mock\n    private", "type": "OrganisationUnitService", "declarator": "orgUnitService", "var_name": "orgUnitService"}, {"original_string": "@Mock\n    private Notifier notifier;", "modifier": "@Mock\n    private", "type": "Notifier", "declarator": "notifier", "var_name": "notifier"}, {"original_string": "@Mock\n    private I18nManager i18nManager;", "modifier": "@Mock\n    private", "type": "I18nManager", "declarator": "i18nManager", "var_name": "i18nManager"}, {"original_string": "@Mock\n    private BatchHandlerFactory batchHandlerFactory;", "modifier": "@Mock\n    private", "type": "BatchHandlerFactory", "declarator": "batchHandlerFactory", "var_name": "batchHandlerFactory"}, {"original_string": "@Mock\n    private SystemSettingManager systemSettingManager;", "modifier": "@Mock\n    private", "type": "SystemSettingManager", "declarator": "systemSettingManager", "var_name": "systemSettingManager"}, {"original_string": "@Mock\n    private CategoryService categoryService;", "modifier": "@Mock\n    private", "type": "CategoryService", "declarator": "categoryService", "var_name": "categoryService"}, {"original_string": "@Mock\n    private PeriodService periodService;", "modifier": "@Mock\n    private", "type": "PeriodService", "declarator": "periodService", "var_name": "periodService"}, {"original_string": "@Mock\n    private CurrentUserService currentUserService;", "modifier": "@Mock\n    private", "type": "CurrentUserService", "declarator": "currentUserService", "var_name": "currentUserService"}, {"original_string": "@Mock\n    private CompleteDataSetRegistrationService registrationService;", "modifier": "@Mock\n    private", "type": "CompleteDataSetRegistrationService", "declarator": "registrationService", "var_name": "registrationService"}, {"original_string": "@Mock\n    private DataSetNotificationEventPublisher notificationPublisher;", "modifier": "@Mock\n    private", "type": "DataSetNotificationEventPublisher", "declarator": "notificationPublisher", "var_name": "notificationPublisher"}, {"original_string": "@Mock\n    private MessageService messageService;", "modifier": "@Mock\n    private", "type": "MessageService", "declarator": "messageService", "var_name": "messageService"}, {"original_string": "@Mock\n    private I18n i18n;", "modifier": "@Mock\n    private", "type": "I18n", "declarator": "i18n", "var_name": "i18n"}, {"original_string": "@Mock\n    private BatchHandler<CompleteDataSetRegistration> batchHandler;", "modifier": "@Mock\n    private", "type": "BatchHandler<CompleteDataSetRegistration>", "declarator": "batchHandler", "var_name": "batchHandler"}, {"original_string": "@Mock\n    private MetadataCaches metaDataCaches;", "modifier": "@Mock\n    private", "type": "MetadataCaches", "declarator": "metaDataCaches", "var_name": "metaDataCaches"}, {"original_string": "@Mock\n    private CachingMap<String, DataSet> datasetCache;", "modifier": "@Mock\n    private", "type": "CachingMap<String, DataSet>", "declarator": "datasetCache", "var_name": "datasetCache"}, {"original_string": "@Mock\n    private CachingMap<String, Period> periodCache;", "modifier": "@Mock\n    private", "type": "CachingMap<String, Period>", "declarator": "periodCache", "var_name": "periodCache"}, {"original_string": "@Mock\n    private CachingMap<String, OrganisationUnit> orgUnitCache;", "modifier": "@Mock\n    private", "type": "CachingMap<String, OrganisationUnit>", "declarator": "orgUnitCache", "var_name": "orgUnitCache"}, {"original_string": "@Mock\n    private CachingMap<String, Boolean> orgUnitInHierarchyCache;", "modifier": "@Mock\n    private", "type": "CachingMap<String, Boolean>", "declarator": "orgUnitInHierarchyCache", "var_name": "orgUnitInHierarchyCache"}, {"original_string": "@Mock\n    private CachingMap<String, Boolean> attrOptComboOrgUnitCache;", "modifier": "@Mock\n    private", "type": "CachingMap<String, Boolean>", "declarator": "attrOptComboOrgUnitCache", "var_name": "attrOptComboOrgUnitCache"}, {"original_string": "private CachingMap<String, CategoryOptionCombo> aocCache;", "modifier": "private", "type": "CachingMap<String, CategoryOptionCombo>", "declarator": "aocCache", "var_name": "aocCache"}, {"original_string": "@Mock\n    private Environment environment;", "modifier": "@Mock\n    private", "type": "Environment", "declarator": "environment", "var_name": "environment"}, {"original_string": "@Mock\n    private AclService aclService;", "modifier": "@Mock\n    private", "type": "AclService", "declarator": "aclService", "var_name": "aclService"}, {"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private DefaultCompleteDataSetRegistrationExchangeService subject;", "modifier": "private", "type": "DefaultCompleteDataSetRegistrationExchangeService", "declarator": "subject", "var_name": "subject"}, {"original_string": "@Rule\n    public MockitoRule mockitoRule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = MockitoJUnit.rule()", "var_name": "mockitoRule"}, {"original_string": "@Rule\n    public ExpectedException exception = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "exception = ExpectedException.none()", "var_name": "exception"}, {"original_string": "private CategoryOptionCombo DEFAULT_COC;", "modifier": "private", "type": "CategoryOptionCombo", "declarator": "DEFAULT_COC", "var_name": "DEFAULT_COC"}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/test/java/org/hisp/dhis/dxf2/dataset/DefaultCompleteDataSetRegistrationExchangeServiceTest.java"}, "test_case": {"identifier": "testValidateAssertMissingDataSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateAssertMissingDataSet()\n    {\n        DhisConvenienceTest.assertIllegalQueryEx( exception, ErrorCode.E2013 );\n\n        ExportParams params = new ExportParams()\n            .setOrganisationUnits( Sets.newHashSet( new OrganisationUnit() ) )\n            .setPeriods( Sets.newHashSet( new Period() ) );\n\n        subject.validate( params );\n    }", "signature": "void testValidateAssertMissingDataSet()", "full_signature": "@Test public void testValidateAssertMissingDataSet()", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeServiceTest.testValidateAssertMissingDataSet()", "testcase": true, "constructor": false, "invocations": ["assertIllegalQueryEx", "setPeriods", "setOrganisationUnits", "newHashSet", "newHashSet", "validate"]}, "focal_class": {"identifier": "DefaultCompleteDataSetRegistrationExchangeService", "superclass": "", "interfaces": "implements CompleteDataSetRegistrationExchangeService", "fields": [{"original_string": "private static final int CACHE_MISS_THRESHOLD = 500;", "modifier": "private static final", "type": "int", "declarator": "CACHE_MISS_THRESHOLD = 500", "var_name": "CACHE_MISS_THRESHOLD"}, {"original_string": "private static final Set<IdScheme> EXPORT_ID_SCHEMES = ImmutableSet.of( IdScheme.UID, IdScheme.NAME, IdScheme.CODE );", "modifier": "private static final", "type": "Set<IdScheme>", "declarator": "EXPORT_ID_SCHEMES = ImmutableSet.of( IdScheme.UID, IdScheme.NAME, IdScheme.CODE )", "var_name": "EXPORT_ID_SCHEMES"}, {"original_string": "private final CompleteDataSetRegistrationExchangeStore cdsrStore;", "modifier": "private final", "type": "CompleteDataSetRegistrationExchangeStore", "declarator": "cdsrStore", "var_name": "cdsrStore"}, {"original_string": "private final IdentifiableObjectManager idObjManager;", "modifier": "private final", "type": "IdentifiableObjectManager", "declarator": "idObjManager", "var_name": "idObjManager"}, {"original_string": "private final OrganisationUnitService orgUnitService;", "modifier": "private final", "type": "OrganisationUnitService", "declarator": "orgUnitService", "var_name": "orgUnitService"}, {"original_string": "private final Notifier notifier;", "modifier": "private final", "type": "Notifier", "declarator": "notifier", "var_name": "notifier"}, {"original_string": "private final I18nManager i18nManager;", "modifier": "private final", "type": "I18nManager", "declarator": "i18nManager", "var_name": "i18nManager"}, {"original_string": "private final BatchHandlerFactory batchHandlerFactory;", "modifier": "private final", "type": "BatchHandlerFactory", "declarator": "batchHandlerFactory", "var_name": "batchHandlerFactory"}, {"original_string": "private final SystemSettingManager systemSettingManager;", "modifier": "private final", "type": "SystemSettingManager", "declarator": "systemSettingManager", "var_name": "systemSettingManager"}, {"original_string": "private final CategoryService categoryService;", "modifier": "private final", "type": "CategoryService", "declarator": "categoryService", "var_name": "categoryService"}, {"original_string": "private final PeriodService periodService;", "modifier": "private final", "type": "PeriodService", "declarator": "periodService", "var_name": "periodService"}, {"original_string": "private final CurrentUserService currentUserService;", "modifier": "private final", "type": "CurrentUserService", "declarator": "currentUserService", "var_name": "currentUserService"}, {"original_string": "private final CompleteDataSetRegistrationService registrationService;", "modifier": "private final", "type": "CompleteDataSetRegistrationService", "declarator": "registrationService", "var_name": "registrationService"}, {"original_string": "private final InputUtils inputUtils;", "modifier": "private final", "type": "InputUtils", "declarator": "inputUtils", "var_name": "inputUtils"}, {"original_string": "private final AggregateAccessManager accessManager;", "modifier": "private final", "type": "AggregateAccessManager", "declarator": "accessManager", "var_name": "accessManager"}, {"original_string": "private final DataSetNotificationEventPublisher notificationPublisher;", "modifier": "private final", "type": "DataSetNotificationEventPublisher", "declarator": "notificationPublisher", "var_name": "notificationPublisher"}, {"original_string": "private final MessageService messageService;", "modifier": "private final", "type": "MessageService", "declarator": "messageService", "var_name": "messageService"}, {"original_string": "private final ObjectMapper jsonMapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "jsonMapper", "var_name": "jsonMapper"}], "methods": [{"identifier": "DefaultCompleteDataSetRegistrationExchangeService", "parameters": "(\n        CompleteDataSetRegistrationExchangeStore cdsrStore,\n        IdentifiableObjectManager idObjManager,\n        OrganisationUnitService orgUnitService,\n        Notifier notifier,\n        I18nManager i18nManager,\n        BatchHandlerFactory batchHandlerFactory,\n        SystemSettingManager systemSettingManager,\n        CategoryService categoryService,\n        PeriodService periodService,\n        CurrentUserService currentUserService,\n        CompleteDataSetRegistrationService registrationService,\n        InputUtils inputUtils,\n        AggregateAccessManager accessManager,\n        DataSetNotificationEventPublisher notificationPublisher,\n        MessageService messageService,\n        ObjectMapper jsonMapper )", "modifiers": "public", "return": "", "signature": " DefaultCompleteDataSetRegistrationExchangeService(\n        CompleteDataSetRegistrationExchangeStore cdsrStore,\n        IdentifiableObjectManager idObjManager,\n        OrganisationUnitService orgUnitService,\n        Notifier notifier,\n        I18nManager i18nManager,\n        BatchHandlerFactory batchHandlerFactory,\n        SystemSettingManager systemSettingManager,\n        CategoryService categoryService,\n        PeriodService periodService,\n        CurrentUserService currentUserService,\n        CompleteDataSetRegistrationService registrationService,\n        InputUtils inputUtils,\n        AggregateAccessManager accessManager,\n        DataSetNotificationEventPublisher notificationPublisher,\n        MessageService messageService,\n        ObjectMapper jsonMapper )", "full_signature": "public  DefaultCompleteDataSetRegistrationExchangeService(\n        CompleteDataSetRegistrationExchangeStore cdsrStore,\n        IdentifiableObjectManager idObjManager,\n        OrganisationUnitService orgUnitService,\n        Notifier notifier,\n        I18nManager i18nManager,\n        BatchHandlerFactory batchHandlerFactory,\n        SystemSettingManager systemSettingManager,\n        CategoryService categoryService,\n        PeriodService periodService,\n        CurrentUserService currentUserService,\n        CompleteDataSetRegistrationService registrationService,\n        InputUtils inputUtils,\n        AggregateAccessManager accessManager,\n        DataSetNotificationEventPublisher notificationPublisher,\n        MessageService messageService,\n        ObjectMapper jsonMapper )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.DefaultCompleteDataSetRegistrationExchangeService(\n        CompleteDataSetRegistrationExchangeStore cdsrStore,\n        IdentifiableObjectManager idObjManager,\n        OrganisationUnitService orgUnitService,\n        Notifier notifier,\n        I18nManager i18nManager,\n        BatchHandlerFactory batchHandlerFactory,\n        SystemSettingManager systemSettingManager,\n        CategoryService categoryService,\n        PeriodService periodService,\n        CurrentUserService currentUserService,\n        CompleteDataSetRegistrationService registrationService,\n        InputUtils inputUtils,\n        AggregateAccessManager accessManager,\n        DataSetNotificationEventPublisher notificationPublisher,\n        MessageService messageService,\n        ObjectMapper jsonMapper )", "testcase": false, "constructor": true}, {"identifier": "paramsFromUrl", "parameters": "( Set<String> dataSets, Set<String> orgUnits, Set<String> orgUnitGroups,\n        Set<String> periods, Date startDate, Date endDate, boolean includeChildren, Date created,\n        String createdDuration, Integer limit, IdSchemes idSchemes )", "modifiers": "@Override public", "return": "ExportParams", "signature": "ExportParams paramsFromUrl( Set<String> dataSets, Set<String> orgUnits, Set<String> orgUnitGroups,\n        Set<String> periods, Date startDate, Date endDate, boolean includeChildren, Date created,\n        String createdDuration, Integer limit, IdSchemes idSchemes )", "full_signature": "@Override public ExportParams paramsFromUrl( Set<String> dataSets, Set<String> orgUnits, Set<String> orgUnitGroups,\n        Set<String> periods, Date startDate, Date endDate, boolean includeChildren, Date created,\n        String createdDuration, Integer limit, IdSchemes idSchemes )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.paramsFromUrl( Set<String> dataSets, Set<String> orgUnits, Set<String> orgUnitGroups,\n        Set<String> periods, Date startDate, Date endDate, boolean includeChildren, Date created,\n        String createdDuration, Integer limit, IdSchemes idSchemes )", "testcase": false, "constructor": false}, {"identifier": "writeCompleteDataSetRegistrationsXml", "parameters": "( ExportParams params, OutputStream out )", "modifiers": "@Override public", "return": "void", "signature": "void writeCompleteDataSetRegistrationsXml( ExportParams params, OutputStream out )", "full_signature": "@Override public void writeCompleteDataSetRegistrationsXml( ExportParams params, OutputStream out )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.writeCompleteDataSetRegistrationsXml( ExportParams params, OutputStream out )", "testcase": false, "constructor": false}, {"identifier": "writeCompleteDataSetRegistrationsJson", "parameters": "( ExportParams params, OutputStream out )", "modifiers": "@Override public", "return": "void", "signature": "void writeCompleteDataSetRegistrationsJson( ExportParams params, OutputStream out )", "full_signature": "@Override public void writeCompleteDataSetRegistrationsJson( ExportParams params, OutputStream out )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.writeCompleteDataSetRegistrationsJson( ExportParams params, OutputStream out )", "testcase": false, "constructor": false}, {"identifier": "writeCompleteDataSetRegistrationsJson", "parameters": "( Date lastUpdated, OutputStream outputStream,\n        IdSchemes idSchemes )", "modifiers": "@Override public", "return": "void", "signature": "void writeCompleteDataSetRegistrationsJson( Date lastUpdated, OutputStream outputStream,\n        IdSchemes idSchemes )", "full_signature": "@Override public void writeCompleteDataSetRegistrationsJson( Date lastUpdated, OutputStream outputStream,\n        IdSchemes idSchemes )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.writeCompleteDataSetRegistrationsJson( Date lastUpdated, OutputStream outputStream,\n        IdSchemes idSchemes )", "testcase": false, "constructor": false}, {"identifier": "saveCompleteDataSetRegistrationsXml", "parameters": "( InputStream in, ImportOptions importOptions )", "modifiers": "@Override public", "return": "ImportSummary", "signature": "ImportSummary saveCompleteDataSetRegistrationsXml( InputStream in, ImportOptions importOptions )", "full_signature": "@Override public ImportSummary saveCompleteDataSetRegistrationsXml( InputStream in, ImportOptions importOptions )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.saveCompleteDataSetRegistrationsXml( InputStream in, ImportOptions importOptions )", "testcase": false, "constructor": false}, {"identifier": "saveCompleteDataSetRegistrationsXml", "parameters": "( InputStream in, ImportOptions importOptions, JobConfiguration jobId )", "modifiers": "@Override public", "return": "ImportSummary", "signature": "ImportSummary saveCompleteDataSetRegistrationsXml( InputStream in, ImportOptions importOptions, JobConfiguration jobId )", "full_signature": "@Override public ImportSummary saveCompleteDataSetRegistrationsXml( InputStream in, ImportOptions importOptions, JobConfiguration jobId )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.saveCompleteDataSetRegistrationsXml( InputStream in, ImportOptions importOptions, JobConfiguration jobId )", "testcase": false, "constructor": false}, {"identifier": "saveCompleteDataSetRegistrationsJson", "parameters": "( InputStream in, ImportOptions importOptions )", "modifiers": "@Override public", "return": "ImportSummary", "signature": "ImportSummary saveCompleteDataSetRegistrationsJson( InputStream in, ImportOptions importOptions )", "full_signature": "@Override public ImportSummary saveCompleteDataSetRegistrationsJson( InputStream in, ImportOptions importOptions )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.saveCompleteDataSetRegistrationsJson( InputStream in, ImportOptions importOptions )", "testcase": false, "constructor": false}, {"identifier": "saveCompleteDataSetRegistrationsJson", "parameters": "( InputStream in, ImportOptions importOptions, JobConfiguration jobId )", "modifiers": "@Override public", "return": "ImportSummary", "signature": "ImportSummary saveCompleteDataSetRegistrationsJson( InputStream in, ImportOptions importOptions, JobConfiguration jobId )", "full_signature": "@Override public ImportSummary saveCompleteDataSetRegistrationsJson( InputStream in, ImportOptions importOptions, JobConfiguration jobId )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.saveCompleteDataSetRegistrationsJson( InputStream in, ImportOptions importOptions, JobConfiguration jobId )", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "( ExportParams params )", "modifiers": "public", "return": "void", "signature": "void validate( ExportParams params )", "full_signature": "public void validate( ExportParams params )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.validate( ExportParams params )", "testcase": false, "constructor": false}, {"identifier": "limitToValidIdSchemes", "parameters": "( ExportParams params )", "modifiers": "private static", "return": "void", "signature": "void limitToValidIdSchemes( ExportParams params )", "full_signature": "private static void limitToValidIdSchemes( ExportParams params )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.limitToValidIdSchemes( ExportParams params )", "testcase": false, "constructor": false}, {"identifier": "decideAccess", "parameters": "( ExportParams params )", "modifiers": "private", "return": "void", "signature": "void decideAccess( ExportParams params )", "full_signature": "private void decideAccess( ExportParams params )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.decideAccess( ExportParams params )", "testcase": false, "constructor": false}, {"identifier": "handleImportError", "parameters": "( JobConfiguration jobId, Throwable ex )", "modifiers": "private", "return": "ImportSummary", "signature": "ImportSummary handleImportError( JobConfiguration jobId, Throwable ex )", "full_signature": "private ImportSummary handleImportError( JobConfiguration jobId, Throwable ex )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.handleImportError( JobConfiguration jobId, Throwable ex )", "testcase": false, "constructor": false}, {"identifier": "saveCompleteDataSetRegistrations", "parameters": "( ImportOptions importOptions, JobConfiguration id,\n        CompleteDataSetRegistrations completeRegistrations )", "modifiers": "private", "return": "ImportSummary", "signature": "ImportSummary saveCompleteDataSetRegistrations( ImportOptions importOptions, JobConfiguration id,\n        CompleteDataSetRegistrations completeRegistrations )", "full_signature": "private ImportSummary saveCompleteDataSetRegistrations( ImportOptions importOptions, JobConfiguration id,\n        CompleteDataSetRegistrations completeRegistrations )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.saveCompleteDataSetRegistrations( ImportOptions importOptions, JobConfiguration id,\n        CompleteDataSetRegistrations completeRegistrations )", "testcase": false, "constructor": false}, {"identifier": "batchImport", "parameters": "( CompleteDataSetRegistrations completeRegistrations, ImportConfig config,\n        ImportSummary summary, MetadataCallables mdCallables, MetadataCaches mdCaches )", "modifiers": "private", "return": "int", "signature": "int batchImport( CompleteDataSetRegistrations completeRegistrations, ImportConfig config,\n        ImportSummary summary, MetadataCallables mdCallables, MetadataCaches mdCaches )", "full_signature": "private int batchImport( CompleteDataSetRegistrations completeRegistrations, ImportConfig config,\n        ImportSummary summary, MetadataCallables mdCallables, MetadataCaches mdCaches )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.batchImport( CompleteDataSetRegistrations completeRegistrations, ImportConfig config,\n        ImportSummary summary, MetadataCallables mdCallables, MetadataCaches mdCaches )", "testcase": false, "constructor": false}, {"identifier": "finalizeSummary", "parameters": "( ImportSummary summary, int totalCount, int importCount, int updateCount,\n        int deleteCount )", "modifiers": "private static", "return": "void", "signature": "void finalizeSummary( ImportSummary summary, int totalCount, int importCount, int updateCount,\n        int deleteCount )", "full_signature": "private static void finalizeSummary( ImportSummary summary, int totalCount, int importCount, int updateCount,\n        int deleteCount )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.finalizeSummary( ImportSummary summary, int totalCount, int importCount, int updateCount,\n        int deleteCount )", "testcase": false, "constructor": false}, {"identifier": "createCompleteDataSetRegistration", "parameters": "(\n        org.hisp.dhis.dxf2.dataset.CompleteDataSetRegistration cdsr, MetadataProperties mdProps, Date now,\n        String storedBy )", "modifiers": "private static", "return": "CompleteDataSetRegistration", "signature": "CompleteDataSetRegistration createCompleteDataSetRegistration(\n        org.hisp.dhis.dxf2.dataset.CompleteDataSetRegistration cdsr, MetadataProperties mdProps, Date now,\n        String storedBy )", "full_signature": "private static CompleteDataSetRegistration createCompleteDataSetRegistration(\n        org.hisp.dhis.dxf2.dataset.CompleteDataSetRegistration cdsr, MetadataProperties mdProps, Date now,\n        String storedBy )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.createCompleteDataSetRegistration(\n        org.hisp.dhis.dxf2.dataset.CompleteDataSetRegistration cdsr, MetadataProperties mdProps, Date now,\n        String storedBy )", "testcase": false, "constructor": false}, {"identifier": "validateDataAccess", "parameters": "( User user, MetadataProperties metaDataProperties )", "modifiers": "private", "return": "List<String>", "signature": "List<String> validateDataAccess( User user, MetadataProperties metaDataProperties )", "full_signature": "private List<String> validateDataAccess( User user, MetadataProperties metaDataProperties )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.validateDataAccess( User user, MetadataProperties metaDataProperties )", "testcase": false, "constructor": false}, {"identifier": "validateOrgUnitInUserHierarchy", "parameters": "( MetadataCaches mdCaches, MetadataProperties mdProps,\n        final Set<OrganisationUnit> userOrgUnits, String currentUsername )", "modifiers": "private static", "return": "void", "signature": "void validateOrgUnitInUserHierarchy( MetadataCaches mdCaches, MetadataProperties mdProps,\n        final Set<OrganisationUnit> userOrgUnits, String currentUsername )", "full_signature": "private static void validateOrgUnitInUserHierarchy( MetadataCaches mdCaches, MetadataProperties mdProps,\n        final Set<OrganisationUnit> userOrgUnits, String currentUsername )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.validateOrgUnitInUserHierarchy( MetadataCaches mdCaches, MetadataProperties mdProps,\n        final Set<OrganisationUnit> userOrgUnits, String currentUsername )", "testcase": false, "constructor": false}, {"identifier": "sendNotifications", "parameters": "( ImportConfig config, CompleteDataSetRegistration registration )", "modifiers": "private", "return": "void", "signature": "void sendNotifications( ImportConfig config, CompleteDataSetRegistration registration )", "full_signature": "private void sendNotifications( ImportConfig config, CompleteDataSetRegistration registration )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.sendNotifications( ImportConfig config, CompleteDataSetRegistration registration )", "testcase": false, "constructor": false}, {"identifier": "validateAttrOptCombo", "parameters": "( MetadataProperties mdProps, MetadataCaches mdCaches, ImportConfig config )", "modifiers": "private", "return": "void", "signature": "void validateAttrOptCombo( MetadataProperties mdProps, MetadataCaches mdCaches, ImportConfig config )", "full_signature": "private void validateAttrOptCombo( MetadataProperties mdProps, MetadataCaches mdCaches, ImportConfig config )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.validateAttrOptCombo( MetadataProperties mdProps, MetadataCaches mdCaches, ImportConfig config )", "testcase": false, "constructor": false}, {"identifier": "validateStoredBy", "parameters": "( String storedBy, I18n i18n )", "modifiers": "private static", "return": "void", "signature": "void validateStoredBy( String storedBy, I18n i18n )", "full_signature": "private static void validateStoredBy( String storedBy, I18n i18n )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.validateStoredBy( String storedBy, I18n i18n )", "testcase": false, "constructor": false}, {"identifier": "validateAocMatchesDataSetCc", "parameters": "( MetadataProperties mdProps )", "modifiers": "private static", "return": "void", "signature": "void validateAocMatchesDataSetCc( MetadataProperties mdProps )", "full_signature": "private static void validateAocMatchesDataSetCc( MetadataProperties mdProps )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.validateAocMatchesDataSetCc( MetadataProperties mdProps )", "testcase": false, "constructor": false}, {"identifier": "validateHasMatchingPeriodTypes", "parameters": "( MetadataProperties props )", "modifiers": "private static", "return": "void", "signature": "void validateHasMatchingPeriodTypes( MetadataProperties props )", "full_signature": "private static void validateHasMatchingPeriodTypes( MetadataProperties props )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.validateHasMatchingPeriodTypes( MetadataProperties props )", "testcase": false, "constructor": false}, {"identifier": "validateDataSetIsAssignedToOrgUnit", "parameters": "( MetadataProperties props )", "modifiers": "private static", "return": "void", "signature": "void validateDataSetIsAssignedToOrgUnit( MetadataProperties props )", "full_signature": "private static void validateDataSetIsAssignedToOrgUnit( MetadataProperties props )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.validateDataSetIsAssignedToOrgUnit( MetadataProperties props )", "testcase": false, "constructor": false}, {"identifier": "heatCaches", "parameters": "( MetadataCaches caches, ImportConfig config )", "modifiers": "private", "return": "void", "signature": "void heatCaches( MetadataCaches caches, ImportConfig config )", "full_signature": "private void heatCaches( MetadataCaches caches, ImportConfig config )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.heatCaches( MetadataCaches caches, ImportConfig config )", "testcase": false, "constructor": false}, {"identifier": "initMetaDataProperties", "parameters": "(\n        org.hisp.dhis.dxf2.dataset.CompleteDataSetRegistration cdsr, MetadataCallables callables, MetadataCaches cache )", "modifiers": "private", "return": "MetadataProperties", "signature": "MetadataProperties initMetaDataProperties(\n        org.hisp.dhis.dxf2.dataset.CompleteDataSetRegistration cdsr, MetadataCallables callables, MetadataCaches cache )", "full_signature": "private MetadataProperties initMetaDataProperties(\n        org.hisp.dhis.dxf2.dataset.CompleteDataSetRegistration cdsr, MetadataCallables callables, MetadataCaches cache )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.initMetaDataProperties(\n        org.hisp.dhis.dxf2.dataset.CompleteDataSetRegistration cdsr, MetadataCallables callables, MetadataCaches cache )", "testcase": false, "constructor": false}, {"identifier": "exceedsThreshold", "parameters": "( CachingMap<?, ?> cachingMap )", "modifiers": "private static", "return": "boolean", "signature": "boolean exceedsThreshold( CachingMap<?, ?> cachingMap )", "full_signature": "private static boolean exceedsThreshold( CachingMap<?, ?> cachingMap )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.exceedsThreshold( CachingMap<?, ?> cachingMap )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/dataset/DefaultCompleteDataSetRegistrationExchangeService.java"}, "focal_method": {"identifier": "validate", "parameters": "( ExportParams params )", "modifiers": "public", "return": "void", "body": "public void validate( ExportParams params )\n        throws IllegalQueryException\n    {\n        ErrorMessage error = null;\n\n        if ( params == null )\n        {\n            throw new IllegalQueryException( ErrorCode.E2000 );\n        }\n\n        if ( params.getDataSets().isEmpty() )\n        {\n            error = new ErrorMessage( ErrorCode.E2013 );\n        }\n\n        if ( !params.hasPeriods() && !params.hasStartEndDate() && !params.hasCreated() && !params.hasCreatedDuration() )\n        {\n            error = new ErrorMessage( ErrorCode.E2002 );\n        }\n\n        if ( params.hasPeriods() && params.hasStartEndDate() )\n        {\n            error = new ErrorMessage( ErrorCode.E2003 );\n        }\n\n        if ( params.hasStartEndDate() && params.getStartDate().after( params.getEndDate() ) )\n        {\n            error = new ErrorMessage( ErrorCode.E2004 );\n        }\n\n        if ( params.hasCreatedDuration() && DateUtils.getDuration( params.getCreatedDuration() ) == null )\n        {\n            error = new ErrorMessage( ErrorCode.E2005 );\n        }\n\n        if ( !params.hasOrganisationUnits() && !params.hasOrganisationUnitGroups() )\n        {\n            error = new ErrorMessage( ErrorCode.E2006 );\n        }\n\n        if ( params.isIncludeChildren() && params.hasOrganisationUnitGroups() )\n        {\n            error = new ErrorMessage( ErrorCode.E2007 );\n        }\n\n        if ( params.isIncludeChildren() && !params.hasOrganisationUnits() )\n        {\n            error = new ErrorMessage( ErrorCode.E2008 );\n        }\n\n        if ( params.hasLimit() && params.getLimit() < 0 )\n        {\n            error = new ErrorMessage( ErrorCode.E2009 );\n        }\n\n        if ( error != null )\n        {\n            log.warn( String.format( \"Complete data set registration validation failed, code: '%s', message: '%s'\",\n                error.getErrorCode(), error.getMessage() ) );\n\n            throw new IllegalQueryException( error );\n        }\n\n        limitToValidIdSchemes( params );\n    }", "signature": "void validate( ExportParams params )", "full_signature": "public void validate( ExportParams params )", "class_method_signature": "DefaultCompleteDataSetRegistrationExchangeService.validate( ExportParams params )", "testcase": false, "constructor": false, "invocations": ["isEmpty", "getDataSets", "hasPeriods", "hasStartEndDate", "hasCreated", "hasCreatedDuration", "hasPeriods", "hasStartEndDate", "hasStartEndDate", "after", "getStartDate", "getEndDate", "hasCreatedDuration", "getDuration", "getCreatedDuration", "hasOrganisationUnits", "hasOrganisationUnitGroups", "isIncludeChildren", "hasOrganisationUnitGroups", "isIncludeChildren", "hasOrganisationUnits", "hasLimit", "getLimit", "warn", "format", "getErrorCode", "getMessage", "limitToValidIdSchemes"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}