{"test_class": {"identifier": "DrawMarginTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final double ErrorTolerance = .000001;", "modifier": "private static final", "type": "double", "declarator": "ErrorTolerance = .000001", "var_name": "ErrorTolerance"}], "file": "jskill/src/test/java/jskills/trueskill/DrawMarginTest.java"}, "test_case": {"identifier": "GetDrawMarginFromDrawProbabilityTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void GetDrawMarginFromDrawProbabilityTest() {\n        double beta = 25.0 / 6.0;\n        // The expected values were compared against Ralf Herbrich's implementation in F#\n        AssertDrawMargin(0.10, beta, 0.74046637542690541);\n        AssertDrawMargin(0.25, beta, 1.87760059883033);\n        AssertDrawMargin(0.33, beta, 2.5111010132487492);\n    }", "signature": "void GetDrawMarginFromDrawProbabilityTest()", "full_signature": "@Test public void GetDrawMarginFromDrawProbabilityTest()", "class_method_signature": "DrawMarginTest.GetDrawMarginFromDrawProbabilityTest()", "testcase": true, "constructor": false, "invocations": ["AssertDrawMargin", "AssertDrawMargin", "AssertDrawMargin"]}, "focal_class": {"identifier": "DrawMargin", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "GetDrawMarginFromDrawProbability", "parameters": "(double drawProbability, double beta)", "modifiers": "public static", "return": "double", "signature": "double GetDrawMarginFromDrawProbability(double drawProbability, double beta)", "full_signature": "public static double GetDrawMarginFromDrawProbability(double drawProbability, double beta)", "class_method_signature": "DrawMargin.GetDrawMarginFromDrawProbability(double drawProbability, double beta)", "testcase": false, "constructor": false}], "file": "jskill/src/main/java/jskills/trueskill/DrawMargin.java"}, "focal_method": {"identifier": "GetDrawMarginFromDrawProbability", "parameters": "(double drawProbability, double beta)", "modifiers": "public static", "return": "double", "body": "public static double GetDrawMarginFromDrawProbability(double drawProbability, double beta) {\n\n        /*\n         * Derived from TrueSkill technical report (MSR-TR-2006-80), page 6\n         *\n         * draw probability = 2 * CDF(margin/(sqrt(n1+n2)*beta)) -1\n         * implies\n         * margin = inversecdf((draw probability + 1)/2) * sqrt(n1+n2) * beta\n         * where n1 and n2 are the number of players on each team\n         */\n        return inverseCumulativeTo(.5 * (drawProbability + 1), 0, 1) * Math.sqrt(1 + 1) * beta;\n    }", "signature": "double GetDrawMarginFromDrawProbability(double drawProbability, double beta)", "full_signature": "public static double GetDrawMarginFromDrawProbability(double drawProbability, double beta)", "class_method_signature": "DrawMargin.GetDrawMarginFromDrawProbability(double drawProbability, double beta)", "testcase": false, "constructor": false, "invocations": ["inverseCumulativeTo", "sqrt"]}, "repository": {"repo_id": 69645155, "url": "https://github.com/VoxelGamesLib/VoxelGamesLib", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 15, "size": 15703, "license": "licensed"}}