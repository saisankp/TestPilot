{"test_class": {"identifier": "DefaultTypeFaceProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ASSET_PATH = \"defaultPath\";", "modifier": "private static final", "type": "String", "declarator": "ASSET_PATH = \"defaultPath\"", "var_name": "ASSET_PATH"}, {"original_string": "@Mock\n    Context mMockContext;", "modifier": "@Mock", "type": "Context", "declarator": "mMockContext", "var_name": "mMockContext"}, {"original_string": "@Mock\n    Resources mMockedResources;", "modifier": "@Mock", "type": "Resources", "declarator": "mMockedResources", "var_name": "mMockedResources"}, {"original_string": "@Mock\n    Typeface mMockedTypeFace;", "modifier": "@Mock", "type": "Typeface", "declarator": "mMockedTypeFace", "var_name": "mMockedTypeFace"}, {"original_string": "@Mock\n    AssetManager mMockedAssetManager;", "modifier": "@Mock", "type": "AssetManager", "declarator": "mMockedAssetManager", "var_name": "mMockedAssetManager"}, {"original_string": "ITypeFaceProvider mTypeFaceProvider;", "modifier": "", "type": "ITypeFaceProvider", "declarator": "mTypeFaceProvider", "var_name": "mTypeFaceProvider"}], "file": "coachmarks/src/test/java/com/myntra/coachmarks/providers/DefaultTypeFaceProviderTest.java"}, "test_case": {"identifier": "getTypeFaceFromAssetsFailTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getTypeFaceFromAssetsFailTest() throws Exception {\n        PowerMockito.mockStatic(Typeface.class);\n        PowerMockito.mockStatic(Log.class);\n        when(mMockContext.getAssets()).thenReturn(mMockedAssetManager);\n        when(Typeface.createFromAsset(mMockedAssetManager, ASSET_PATH)).thenThrow(new RuntimeException());\n        when(Log.e(anyString(), anyString())).thenReturn(1);\n\n        Typeface typeface = mTypeFaceProvider.getTypeFaceFromAssets(ASSET_PATH);\n        PowerMockito.verifyStatic(times(2));\n        assert (typeface == null);\n        PowerMockito.verifyNoMoreInteractions();\n    }", "signature": "void getTypeFaceFromAssetsFailTest()", "full_signature": "@Test public void getTypeFaceFromAssetsFailTest()", "class_method_signature": "DefaultTypeFaceProviderTest.getTypeFaceFromAssetsFailTest()", "testcase": true, "constructor": false, "invocations": ["mockStatic", "mockStatic", "thenReturn", "when", "getAssets", "thenThrow", "when", "createFromAsset", "thenReturn", "when", "e", "anyString", "anyString", "getTypeFaceFromAssets", "verifyStatic", "times", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "DefaultTypeFaceProvider", "superclass": "", "interfaces": "implements ITypeFaceProvider", "fields": [{"original_string": "private final Context mContext;", "modifier": "private final", "type": "Context", "declarator": "mContext", "var_name": "mContext"}], "methods": [{"identifier": "DefaultTypeFaceProvider", "parameters": "(final Context context)", "modifiers": "public", "return": "", "signature": " DefaultTypeFaceProvider(final Context context)", "full_signature": "public  DefaultTypeFaceProvider(final Context context)", "class_method_signature": "DefaultTypeFaceProvider.DefaultTypeFaceProvider(final Context context)", "testcase": false, "constructor": true}, {"identifier": "getTypeFaceFromAssets", "parameters": "(final String fontFilePath)", "modifiers": "@Override @Nullable public", "return": "Typeface", "signature": "Typeface getTypeFaceFromAssets(final String fontFilePath)", "full_signature": "@Override @Nullable public Typeface getTypeFaceFromAssets(final String fontFilePath)", "class_method_signature": "DefaultTypeFaceProvider.getTypeFaceFromAssets(final String fontFilePath)", "testcase": false, "constructor": false}], "file": "coachmarks/src/main/java/com/myntra/coachmarks/providers/DefaultTypeFaceProvider.java"}, "focal_method": {"identifier": "getTypeFaceFromAssets", "parameters": "(final String fontFilePath)", "modifiers": "@Override @Nullable public", "return": "Typeface", "body": "@Override\n    @Nullable\n    public Typeface getTypeFaceFromAssets(final String fontFilePath) {\n        try {\n            return Typeface.createFromAsset(mContext.getAssets(), fontFilePath);\n        } catch (RuntimeException e) {\n            Log.e(DefaultTypeFaceProvider.class.getName(), e.getMessage());\n        }\n        return null;\n    }", "signature": "Typeface getTypeFaceFromAssets(final String fontFilePath)", "full_signature": "@Override @Nullable public Typeface getTypeFaceFromAssets(final String fontFilePath)", "class_method_signature": "DefaultTypeFaceProvider.getTypeFaceFromAssets(final String fontFilePath)", "testcase": false, "constructor": false, "invocations": ["createFromAsset", "getAssets", "e", "getName", "getMessage"]}, "repository": {"repo_id": 84286382, "url": "https://github.com/myntra/CoachMarks", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 28, "size": 18753, "license": "licensed"}}