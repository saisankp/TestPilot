{"test_class": {"identifier": "ReflectionUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "gollum-common/src/test/java/org/gollum/common/util/ReflectionUtilsTest.java"}, "test_case": {"identifier": "newInstance", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void newInstance() throws Exception {\n        A a = ReflectionUtils.newInstance(A.class);\n        assertNotNull(a);\n        B b = ReflectionUtils.newInstance(B.class);\n        assertNotNull(b);\n        C c = ReflectionUtils.newInstance(C.class);\n        assertNotNull(c);\n        b.setB(a);\n        assertEquals(b.getB(), a);\n    }", "signature": "void newInstance()", "full_signature": "@Test public void newInstance()", "class_method_signature": "ReflectionUtilsTest.newInstance()", "testcase": true, "constructor": false, "invocations": ["newInstance", "assertNotNull", "newInstance", "assertNotNull", "newInstance", "assertNotNull", "setB", "assertEquals", "getB"]}, "focal_class": {"identifier": "ReflectionUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "newInstance", "parameters": "(Class<T> type)", "modifiers": "public static", "return": "T", "signature": "T newInstance(Class<T> type)", "full_signature": "public static T newInstance(Class<T> type)", "class_method_signature": "ReflectionUtils.newInstance(Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "getActualType", "parameters": "(Class<?> type)", "modifiers": "public static", "return": "Class<T>", "signature": "Class<T> getActualType(Class<?> type)", "full_signature": "public static Class<T> getActualType(Class<?> type)", "class_method_signature": "ReflectionUtils.getActualType(Class<?> type)", "testcase": false, "constructor": false}, {"identifier": "getActualType", "parameters": "(Class<?> type, int index)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "Class<T>", "signature": "Class<T> getActualType(Class<?> type, int index)", "full_signature": "@SuppressWarnings(\"unchecked\") public static Class<T> getActualType(Class<?> type, int index)", "class_method_signature": "ReflectionUtils.getActualType(Class<?> type, int index)", "testcase": false, "constructor": false}], "file": "gollum-common/src/main/java/org/gollum/common/util/ReflectionUtils.java"}, "focal_method": {"identifier": "newInstance", "parameters": "(Class<T> type)", "modifiers": "public static", "return": "T", "body": "public static <T> T newInstance(Class<T> type) throws ReflectiveOperationException {\n        Constructor<T> constructor = type.getDeclaredConstructor(new Class<?>[]{});\n        constructor.setAccessible(true);\n        return constructor.newInstance(new Object[]{});\n    }", "signature": "T newInstance(Class<T> type)", "full_signature": "public static T newInstance(Class<T> type)", "class_method_signature": "ReflectionUtils.newInstance(Class<T> type)", "testcase": false, "constructor": false, "invocations": ["getDeclaredConstructor", "setAccessible", "newInstance"]}, "repository": {"repo_id": 115379439, "url": "https://github.com/hziee514/gollum", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 7, "size": 224, "license": "licensed"}}