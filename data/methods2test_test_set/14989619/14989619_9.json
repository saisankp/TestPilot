{"test_class": {"identifier": "JsonApiRelationshipTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final URI testLocation = URI.create(\"http://www.test.com\");", "modifier": "private final", "type": "URI", "declarator": "testLocation = URI.create(\"http://www.test.com\")", "var_name": "testLocation"}, {"original_string": "private final URI anotherLocation = URI.create(\"http://www.test.org\");", "modifier": "private final", "type": "URI", "declarator": "anotherLocation = URI.create(\"http://www.test.org\")", "var_name": "anotherLocation"}, {"original_string": "private final Dummy dummy1 = new Dummy(\"1\");", "modifier": "private final", "type": "Dummy", "declarator": "dummy1 = new Dummy(\"1\")", "var_name": "dummy1"}, {"original_string": "private final Dummy dummy2 = new Dummy(\"2\");", "modifier": "private final", "type": "Dummy", "declarator": "dummy2 = new Dummy(\"2\")", "var_name": "dummy2"}, {"original_string": "private final AnotherDummyClass anotherDummyClass = new AnotherDummyClass(\"2\");", "modifier": "private final", "type": "AnotherDummyClass", "declarator": "anotherDummyClass = new AnotherDummyClass(\"2\")", "var_name": "anotherDummyClass"}, {"original_string": "private final List<JsonApiIdentifiable> relatedList = Arrays.asList(dummy1, anotherDummyClass);", "modifier": "private final", "type": "List<JsonApiIdentifiable>", "declarator": "relatedList = Arrays.asList(dummy1, anotherDummyClass)", "var_name": "relatedList"}], "file": "server/src/test/java/org/jvalue/ods/rest/v2/jsonapi/response/JsonApiRelationshipTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testEquals() {\n\t\tList<JsonApiIdentifiable> anotherList = Arrays.asList(dummy1, dummy2);\n\n\t\tJsonApiRelationship result1 = new JsonApiRelationship(relatedList, testLocation);\n\t\tJsonApiRelationship result2 = new JsonApiRelationship(relatedList, testLocation);\n\t\tJsonApiRelationship result3 = new JsonApiRelationship(relatedList, anotherLocation);\n\t\tJsonApiRelationship result4 = new JsonApiRelationship(anotherList, testLocation);\n\n\t\tAssert.assertTrue(result1.equals(result2));\n\t\tAssert.assertFalse(result1.equals(result3));\n\t\tAssert.assertFalse(result1.equals(result4));\n\t\tAssert.assertFalse(result3.equals(result4));\n\t}", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "JsonApiRelationshipTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["asList", "assertTrue", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals"]}, "focal_class": {"identifier": "JsonApiRelationship", "superclass": "", "interfaces": "", "fields": [{"original_string": "@JsonFormat(with = JsonFormat.Feature.WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED)\n\tprivate final List<JsonApiIdentifiable> data = new LinkedList<>();", "modifier": "@JsonFormat(with = JsonFormat.Feature.WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED)\n\tprivate final", "type": "List<JsonApiIdentifiable>", "declarator": "data = new LinkedList<>()", "var_name": "data"}, {"original_string": "private final Map<String, URI> links = new HashMap<>();", "modifier": "private final", "type": "Map<String, URI>", "declarator": "links = new HashMap<>()", "var_name": "links"}], "methods": [{"identifier": "JsonApiRelationship", "parameters": "(JsonApiIdentifiable entity, URI location)", "modifiers": "", "return": "", "signature": " JsonApiRelationship(JsonApiIdentifiable entity, URI location)", "full_signature": "  JsonApiRelationship(JsonApiIdentifiable entity, URI location)", "class_method_signature": "JsonApiRelationship.JsonApiRelationship(JsonApiIdentifiable entity, URI location)", "testcase": false, "constructor": true}, {"identifier": "JsonApiRelationship", "parameters": "(Collection<? extends JsonApiIdentifiable> entityCollection, URI location)", "modifiers": "", "return": "", "signature": " JsonApiRelationship(Collection<? extends JsonApiIdentifiable> entityCollection, URI location)", "full_signature": "  JsonApiRelationship(Collection<? extends JsonApiIdentifiable> entityCollection, URI location)", "class_method_signature": "JsonApiRelationship.JsonApiRelationship(Collection<? extends JsonApiIdentifiable> entityCollection, URI location)", "testcase": false, "constructor": true}, {"identifier": "getData", "parameters": "()", "modifiers": "public", "return": "List<JsonApiIdentifiable>", "signature": "List<JsonApiIdentifiable> getData()", "full_signature": "public List<JsonApiIdentifiable> getData()", "class_method_signature": "JsonApiRelationship.getData()", "testcase": false, "constructor": false}, {"identifier": "getLinks", "parameters": "()", "modifiers": "public", "return": "Map<String, URI>", "signature": "Map<String, URI> getLinks()", "full_signature": "public Map<String, URI> getLinks()", "class_method_signature": "JsonApiRelationship.getLinks()", "testcase": false, "constructor": false}, {"identifier": "containsEntity", "parameters": "(JsonApiIdentifiable entity)", "modifiers": "", "return": "boolean", "signature": "boolean containsEntity(JsonApiIdentifiable entity)", "full_signature": " boolean containsEntity(JsonApiIdentifiable entity)", "class_method_signature": "JsonApiRelationship.containsEntity(JsonApiIdentifiable entity)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "JsonApiRelationship.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "JsonApiRelationship.hashCode()", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/jvalue/ods/rest/v2/jsonapi/response/JsonApiRelationship.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean equals(Object o) {\n\t\tif (this == o) return true;\n\t\tif (o == null || getClass() != o.getClass()) return false;\n\t\tJsonApiRelationship that = (JsonApiRelationship) o;\n\t\treturn Objects.equals(data, that.data) &&\n\t\t\tObjects.equals(links, that.links);\n\t}", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "JsonApiRelationship.equals(Object o)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "equals", "equals"]}, "repository": {"repo_id": 14989619, "url": "https://github.com/jvalue/open-data-service-v1", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 4525, "license": "licensed"}}