{"test_class": {"identifier": "LicenseNameWithTextUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "backend/src/src-licenseinfo/src/test/java/org/eclipse/sw360/licenseinfo/util/LicenseNameWithTextUtilsTest.java"}, "test_case": {"identifier": "testIsEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsEmpty() {\n        Assert.assertTrue(LicenseNameWithTextUtils.isEmpty(createLicense(null, null, null)));\n        Assert.assertTrue(LicenseNameWithTextUtils.isEmpty(createLicense(\"\", null, null)));\n        Assert.assertTrue(LicenseNameWithTextUtils.isEmpty(createLicense(null, \"\", null)));\n        Assert.assertTrue(LicenseNameWithTextUtils.isEmpty(createLicense(null, null, \"\")));\n        Assert.assertTrue(LicenseNameWithTextUtils.isEmpty(createLicense(\"\", \"\", \"\")));\n        Assert.assertTrue(LicenseNameWithTextUtils.isEmpty(createLicense(\"   \", \"\\n\", \"\\t\")));\n\n        Assert.assertFalse(LicenseNameWithTextUtils.isEmpty(createLicense(\"name\", null, null)));\n        Assert.assertFalse(LicenseNameWithTextUtils.isEmpty(createLicense(null, \"text\", null)));\n        Assert.assertFalse(LicenseNameWithTextUtils.isEmpty(createLicense(null, null, \"acks\")));\n    }", "signature": "void testIsEmpty()", "full_signature": "@Test public void testIsEmpty()", "class_method_signature": "LicenseNameWithTextUtilsTest.testIsEmpty()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isEmpty", "createLicense", "assertTrue", "isEmpty", "createLicense", "assertTrue", "isEmpty", "createLicense", "assertTrue", "isEmpty", "createLicense", "assertTrue", "isEmpty", "createLicense", "assertTrue", "isEmpty", "createLicense", "assertFalse", "isEmpty", "createLicense", "assertFalse", "isEmpty", "createLicense", "assertFalse", "isEmpty", "createLicense"]}, "focal_class": {"identifier": "LicenseNameWithTextUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "sanitize", "parameters": "(LicenseNameWithText licenseNameWithText)", "modifiers": "public static", "return": "LicenseNameWithText", "signature": "LicenseNameWithText sanitize(LicenseNameWithText licenseNameWithText)", "full_signature": "public static LicenseNameWithText sanitize(LicenseNameWithText licenseNameWithText)", "class_method_signature": "LicenseNameWithTextUtils.sanitize(LicenseNameWithText licenseNameWithText)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(LicenseNameWithText licenseNameWithText)", "modifiers": "public static", "return": "boolean", "signature": "boolean isEmpty(LicenseNameWithText licenseNameWithText)", "full_signature": "public static boolean isEmpty(LicenseNameWithText licenseNameWithText)", "class_method_signature": "LicenseNameWithTextUtils.isEmpty(LicenseNameWithText licenseNameWithText)", "testcase": false, "constructor": false}, {"identifier": "licenseNameWithTextEquals", "parameters": "(LicenseNameWithText lnwt1, LicenseNameWithText lnwt2)", "modifiers": "public static", "return": "boolean", "signature": "boolean licenseNameWithTextEquals(LicenseNameWithText lnwt1, LicenseNameWithText lnwt2)", "full_signature": "public static boolean licenseNameWithTextEquals(LicenseNameWithText lnwt1, LicenseNameWithText lnwt2)", "class_method_signature": "LicenseNameWithTextUtils.licenseNameWithTextEquals(LicenseNameWithText lnwt1, LicenseNameWithText lnwt2)", "testcase": false, "constructor": false}], "file": "backend/src/src-licenseinfo/src/main/java/org/eclipse/sw360/licenseinfo/util/LicenseNameWithTextUtils.java"}, "focal_method": {"identifier": "isEmpty", "parameters": "(LicenseNameWithText licenseNameWithText)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isEmpty(LicenseNameWithText licenseNameWithText) {\n        // @formatter:off\n        return isNullOrEmpty(nullToEmpty(licenseNameWithText.getLicenseName()).trim())\n                && isNullOrEmpty(nullToEmpty(licenseNameWithText.getLicenseText()).trim())\n                && isNullOrEmpty(nullToEmpty(licenseNameWithText.getAcknowledgements()).trim());\n        // @formatter:on\n    }", "signature": "boolean isEmpty(LicenseNameWithText licenseNameWithText)", "full_signature": "public static boolean isEmpty(LicenseNameWithText licenseNameWithText)", "class_method_signature": "LicenseNameWithTextUtils.isEmpty(LicenseNameWithText licenseNameWithText)", "testcase": false, "constructor": false, "invocations": ["isNullOrEmpty", "trim", "nullToEmpty", "getLicenseName", "isNullOrEmpty", "trim", "nullToEmpty", "getLicenseText", "isNullOrEmpty", "trim", "nullToEmpty", "getAcknowledgements"]}, "repository": {"repo_id": 43326581, "url": "https://github.com/sw360/sw360portal", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 31, "size": 8770, "license": "licensed"}}