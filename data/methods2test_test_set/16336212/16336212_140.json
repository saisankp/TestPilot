{"test_class": {"identifier": "RollupServiceTest", "superclass": "", "interfaces": "", "fields": [], "file": "central/src/test/java/org/glowroot/central/RollupServiceTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test() {\n        assertThat(RollupService.millisUntilNextRollup(15000)).isEqualTo(55000);\n        assertThat(RollupService.millisUntilNextRollup(30000)).isEqualTo(40000);\n        assertThat(RollupService.millisUntilNextRollup(45000)).isEqualTo(25000);\n        assertThat(RollupService.millisUntilNextRollup(60000)).isEqualTo(10000);\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "RollupServiceTest.test()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "millisUntilNextRollup", "isEqualTo", "assertThat", "millisUntilNextRollup", "isEqualTo", "assertThat", "millisUntilNextRollup", "isEqualTo", "assertThat", "millisUntilNextRollup"]}, "focal_class": {"identifier": "RollupService", "superclass": "", "interfaces": "implements Runnable", "fields": [{"original_string": "private static final int MIN_WORKER_THREADS = 1;", "modifier": "private static final", "type": "int", "declarator": "MIN_WORKER_THREADS = 1", "var_name": "MIN_WORKER_THREADS"}, {"original_string": "private static final int MAX_WORKER_THREADS = 4;", "modifier": "private static final", "type": "int", "declarator": "MAX_WORKER_THREADS = 4", "var_name": "MAX_WORKER_THREADS"}, {"original_string": "private static final int INITIAL_WORKER_THREADS = 2;", "modifier": "private static final", "type": "int", "declarator": "INITIAL_WORKER_THREADS = 2", "var_name": "INITIAL_WORKER_THREADS"}, {"original_string": "private static final Logger logger = LoggerFactory.getLogger(RollupService.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(RollupService.class)", "var_name": "logger"}, {"original_string": "private final ActiveAgentDao activeAgentDao;", "modifier": "private final", "type": "ActiveAgentDao", "declarator": "activeAgentDao", "var_name": "activeAgentDao"}, {"original_string": "private final AggregateDao aggregateDao;", "modifier": "private final", "type": "AggregateDao", "declarator": "aggregateDao", "var_name": "aggregateDao"}, {"original_string": "private final GaugeValueDao gaugeValueDao;", "modifier": "private final", "type": "GaugeValueDao", "declarator": "gaugeValueDao", "var_name": "gaugeValueDao"}, {"original_string": "private final SyntheticResultDao syntheticResultDao;", "modifier": "private final", "type": "SyntheticResultDao", "declarator": "syntheticResultDao", "var_name": "syntheticResultDao"}, {"original_string": "private final CentralAlertingService centralAlertingService;", "modifier": "private final", "type": "CentralAlertingService", "declarator": "centralAlertingService", "var_name": "centralAlertingService"}, {"original_string": "private final Clock clock;", "modifier": "private final", "type": "Clock", "declarator": "clock", "var_name": "clock"}, {"original_string": "private final ExecutorService mainLoopExecutor;", "modifier": "private final", "type": "ExecutorService", "declarator": "mainLoopExecutor", "var_name": "mainLoopExecutor"}, {"original_string": "private volatile boolean closed;", "modifier": "private volatile", "type": "boolean", "declarator": "closed", "var_name": "closed"}], "methods": [{"identifier": "RollupService", "parameters": "(ActiveAgentDao activeAgentDao, AggregateDao aggregateDao,\n            GaugeValueDao gaugeValueDao, SyntheticResultDao syntheticResultDao,\n            CentralAlertingService centralAlertingService, Clock clock)", "modifiers": "", "return": "", "signature": " RollupService(ActiveAgentDao activeAgentDao, AggregateDao aggregateDao,\n            GaugeValueDao gaugeValueDao, SyntheticResultDao syntheticResultDao,\n            CentralAlertingService centralAlertingService, Clock clock)", "full_signature": "  RollupService(ActiveAgentDao activeAgentDao, AggregateDao aggregateDao,\n            GaugeValueDao gaugeValueDao, SyntheticResultDao syntheticResultDao,\n            CentralAlertingService centralAlertingService, Clock clock)", "class_method_signature": "RollupService.RollupService(ActiveAgentDao activeAgentDao, AggregateDao aggregateDao,\n            GaugeValueDao gaugeValueDao, SyntheticResultDao syntheticResultDao,\n            CentralAlertingService centralAlertingService, Clock clock)", "testcase": false, "constructor": true}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "RollupService.run()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "", "return": "void", "signature": "void close()", "full_signature": " void close()", "class_method_signature": "RollupService.close()", "testcase": false, "constructor": false}, {"identifier": "runInternal", "parameters": "(List<AgentRollup> agentRollups,\n            ListeningExecutorService workerExecutor)", "modifiers": "@Instrumentation.Transaction(transactionType = \"Background\", transactionName = \"Outer rollup loop\", traceHeadline = \"Outer rollup loop\", timer = \"outer rollup loop\") private", "return": "void", "signature": "void runInternal(List<AgentRollup> agentRollups,\n            ListeningExecutorService workerExecutor)", "full_signature": "@Instrumentation.Transaction(transactionType = \"Background\", transactionName = \"Outer rollup loop\", traceHeadline = \"Outer rollup loop\", timer = \"outer rollup loop\") private void runInternal(List<AgentRollup> agentRollups,\n            ListeningExecutorService workerExecutor)", "class_method_signature": "RollupService.runInternal(List<AgentRollup> agentRollups,\n            ListeningExecutorService workerExecutor)", "testcase": false, "constructor": false}, {"identifier": "rollupAggregates", "parameters": "(AgentRollup agentRollup,\n            ListeningExecutorService workerExecutor)", "modifiers": "private", "return": "List<Future<?>>", "signature": "List<Future<?>> rollupAggregates(AgentRollup agentRollup,\n            ListeningExecutorService workerExecutor)", "full_signature": "private List<Future<?>> rollupAggregates(AgentRollup agentRollup,\n            ListeningExecutorService workerExecutor)", "class_method_signature": "RollupService.rollupAggregates(AgentRollup agentRollup,\n            ListeningExecutorService workerExecutor)", "testcase": false, "constructor": false}, {"identifier": "rollupGauges", "parameters": "(AgentRollup agentRollup,\n            ListeningExecutorService workerExecutor)", "modifiers": "private", "return": "ListenableFuture<?>", "signature": "ListenableFuture<?> rollupGauges(AgentRollup agentRollup,\n            ListeningExecutorService workerExecutor)", "full_signature": "private ListenableFuture<?> rollupGauges(AgentRollup agentRollup,\n            ListeningExecutorService workerExecutor)", "class_method_signature": "RollupService.rollupGauges(AgentRollup agentRollup,\n            ListeningExecutorService workerExecutor)", "testcase": false, "constructor": false}, {"identifier": "rollupSyntheticMonitors", "parameters": "(AgentRollup agentRollup,\n            ListeningExecutorService workerExecutor)", "modifiers": "private", "return": "List<Future<?>>", "signature": "List<Future<?>> rollupSyntheticMonitors(AgentRollup agentRollup,\n            ListeningExecutorService workerExecutor)", "full_signature": "private List<Future<?>> rollupSyntheticMonitors(AgentRollup agentRollup,\n            ListeningExecutorService workerExecutor)", "class_method_signature": "RollupService.rollupSyntheticMonitors(AgentRollup agentRollup,\n            ListeningExecutorService workerExecutor)", "testcase": false, "constructor": false}, {"identifier": "checkAggregateAndGaugeAndHeartbeatAlertsAsync", "parameters": "(AgentRollup agentRollup,\n            ListeningExecutorService workerExecutor)", "modifiers": "private", "return": "List<Future<?>>", "signature": "List<Future<?>> checkAggregateAndGaugeAndHeartbeatAlertsAsync(AgentRollup agentRollup,\n            ListeningExecutorService workerExecutor)", "full_signature": "private List<Future<?>> checkAggregateAndGaugeAndHeartbeatAlertsAsync(AgentRollup agentRollup,\n            ListeningExecutorService workerExecutor)", "class_method_signature": "RollupService.checkAggregateAndGaugeAndHeartbeatAlertsAsync(AgentRollup agentRollup,\n            ListeningExecutorService workerExecutor)", "testcase": false, "constructor": false}, {"identifier": "newWorkerExecutor", "parameters": "(int numWorkerThreads)", "modifiers": "private static", "return": "ListeningExecutorService", "signature": "ListeningExecutorService newWorkerExecutor(int numWorkerThreads)", "full_signature": "private static ListeningExecutorService newWorkerExecutor(int numWorkerThreads)", "class_method_signature": "RollupService.newWorkerExecutor(int numWorkerThreads)", "testcase": false, "constructor": false}, {"identifier": "shuffle", "parameters": "(List<T> agentRollups)", "modifiers": "private static", "return": "List<T>", "signature": "List<T> shuffle(List<T> agentRollups)", "full_signature": "private static List<T> shuffle(List<T> agentRollups)", "class_method_signature": "RollupService.shuffle(List<T> agentRollups)", "testcase": false, "constructor": false}, {"identifier": "count", "parameters": "(List<AgentRollup> agentRollups)", "modifiers": "private static", "return": "int", "signature": "int count(List<AgentRollup> agentRollups)", "full_signature": "private static int count(List<AgentRollup> agentRollups)", "class_method_signature": "RollupService.count(List<AgentRollup> agentRollups)", "testcase": false, "constructor": false}, {"identifier": "millisUntilNextRollup", "parameters": "(long currentTimeMillis)", "modifiers": "@VisibleForTesting static", "return": "long", "signature": "long millisUntilNextRollup(long currentTimeMillis)", "full_signature": "@VisibleForTesting static long millisUntilNextRollup(long currentTimeMillis)", "class_method_signature": "RollupService.millisUntilNextRollup(long currentTimeMillis)", "testcase": false, "constructor": false}, {"identifier": "castInitialized", "parameters": "(/*@UnderInitialization*/ T obj)", "modifiers": "@SuppressWarnings(\"return.type.incompatible\") private static", "return": "T", "signature": "T castInitialized(/*@UnderInitialization*/ T obj)", "full_signature": "@SuppressWarnings(\"return.type.incompatible\") private static T castInitialized(/*@UnderInitialization*/ T obj)", "class_method_signature": "RollupService.castInitialized(/*@UnderInitialization*/ T obj)", "testcase": false, "constructor": false}], "file": "central/src/main/java/org/glowroot/central/RollupService.java"}, "focal_method": {"identifier": "millisUntilNextRollup", "parameters": "(long currentTimeMillis)", "modifiers": "@VisibleForTesting static", "return": "long", "body": "@VisibleForTesting\n    static long millisUntilNextRollup(long currentTimeMillis) {\n        return 60000 - (currentTimeMillis - 10000) % 60000;\n    }", "signature": "long millisUntilNextRollup(long currentTimeMillis)", "full_signature": "@VisibleForTesting static long millisUntilNextRollup(long currentTimeMillis)", "class_method_signature": "RollupService.millisUntilNextRollup(long currentTimeMillis)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 16336212, "url": "https://github.com/glowroot/glowroot", "stars": 736, "created": "1/29/2014 5:25:58 AM +00:00", "updates": "2020-01-24T11:13:42+00:00", "fork": "False", "license": "licensed"}}