{"test_class": {"identifier": "CryptoAppTest", "superclass": "extends CryptoAppTestBase", "interfaces": "", "fields": [], "file": "dbfit-java/core/src/test/java/dbfit/util/crypto/CryptoAppTest.java"}, "test_case": {"identifier": "encryptPasswordTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void encryptPasswordTest() throws Exception {\n        when(mockedKS.keyStoreExists()).thenReturn(true);\n        String password = \"Demo Password CLI\";\n\n        execApp(password);\n\n        verify(mockedCryptoService).encrypt(password);\n    }", "signature": "void encryptPasswordTest()", "full_signature": "@Test public void encryptPasswordTest()", "class_method_signature": "CryptoAppTest.encryptPasswordTest()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "keyStoreExists", "execApp", "encrypt", "verify"]}, "focal_class": {"identifier": "CryptoApp", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int EXIT_SUCCESS = 0;", "modifier": "public static final", "type": "int", "declarator": "EXIT_SUCCESS = 0", "var_name": "EXIT_SUCCESS"}, {"original_string": "public static final int EXIT_INVALID_COMMAND = 1;", "modifier": "public static final", "type": "int", "declarator": "EXIT_INVALID_COMMAND = 1", "var_name": "EXIT_INVALID_COMMAND"}, {"original_string": "public static final int EXIT_COMMAND_FAILED = 2;", "modifier": "public static final", "type": "int", "declarator": "EXIT_COMMAND_FAILED = 2", "var_name": "EXIT_COMMAND_FAILED"}, {"original_string": "private CryptoKeyStoreFactory ksFactory;", "modifier": "private", "type": "CryptoKeyStoreFactory", "declarator": "ksFactory", "var_name": "ksFactory"}, {"original_string": "private CryptoServiceFactory cryptoServiceFactory;", "modifier": "private", "type": "CryptoServiceFactory", "declarator": "cryptoServiceFactory", "var_name": "cryptoServiceFactory"}, {"original_string": "private PrintStream out = System.out;", "modifier": "private", "type": "PrintStream", "declarator": "out = System.out", "var_name": "out"}], "methods": [{"identifier": "CryptoApp", "parameters": "(\n            CryptoKeyStoreFactory ksFactory, CryptoServiceFactory csFactory)", "modifiers": "public", "return": "", "signature": " CryptoApp(\n            CryptoKeyStoreFactory ksFactory, CryptoServiceFactory csFactory)", "full_signature": "public  CryptoApp(\n            CryptoKeyStoreFactory ksFactory, CryptoServiceFactory csFactory)", "class_method_signature": "CryptoApp.CryptoApp(\n            CryptoKeyStoreFactory ksFactory, CryptoServiceFactory csFactory)", "testcase": false, "constructor": true}, {"identifier": "CryptoApp", "parameters": "()", "modifiers": "public", "return": "", "signature": " CryptoApp()", "full_signature": "public  CryptoApp()", "class_method_signature": "CryptoApp.CryptoApp()", "testcase": false, "constructor": true}, {"identifier": "updateStatus", "parameters": "(String msg)", "modifiers": "private", "return": "void", "signature": "void updateStatus(String msg)", "full_signature": "private void updateStatus(String msg)", "class_method_signature": "CryptoApp.updateStatus(String msg)", "testcase": false, "constructor": false}, {"identifier": "createKeyStore", "parameters": "(CryptoKeyStore ks)", "modifiers": "private", "return": "int", "signature": "int createKeyStore(CryptoKeyStore ks)", "full_signature": "private int createKeyStore(CryptoKeyStore ks)", "class_method_signature": "CryptoApp.createKeyStore(CryptoKeyStore ks)", "testcase": false, "constructor": false}, {"identifier": "encryptPassword", "parameters": "(final String password, final CryptoKeyStore ks)", "modifiers": "private", "return": "int", "signature": "int encryptPassword(final String password, final CryptoKeyStore ks)", "full_signature": "private int encryptPassword(final String password, final CryptoKeyStore ks)", "class_method_signature": "CryptoApp.encryptPassword(final String password, final CryptoKeyStore ks)", "testcase": false, "constructor": false}, {"identifier": "encryptPassword", "parameters": "(final String password, final String path)", "modifiers": "private", "return": "int", "signature": "int encryptPassword(final String password, final String path)", "full_signature": "private int encryptPassword(final String password, final String path)", "class_method_signature": "CryptoApp.encryptPassword(final String password, final String path)", "testcase": false, "constructor": false}, {"identifier": "encryptPassword", "parameters": "(final String password)", "modifiers": "private", "return": "int", "signature": "int encryptPassword(final String password)", "full_signature": "private int encryptPassword(final String password)", "class_method_signature": "CryptoApp.encryptPassword(final String password)", "testcase": false, "constructor": false}, {"identifier": "showUsage", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void showUsage()", "full_signature": "private void showUsage()", "class_method_signature": "CryptoApp.showUsage()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(String[] args)", "modifiers": "public", "return": "int", "signature": "int execute(String[] args)", "full_signature": "public int execute(String[] args)", "class_method_signature": "CryptoApp.execute(String[] args)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "CryptoApp.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "getCryptoService", "parameters": "(final CryptoKeyStore ks)", "modifiers": "private", "return": "CryptoService", "signature": "CryptoService getCryptoService(final CryptoKeyStore ks)", "full_signature": "private CryptoService getCryptoService(final CryptoKeyStore ks)", "class_method_signature": "CryptoApp.getCryptoService(final CryptoKeyStore ks)", "testcase": false, "constructor": false}], "file": "dbfit-java/core/src/main/java/dbfit/util/crypto/CryptoApp.java"}, "focal_method": {"identifier": "encryptPassword", "parameters": "(final String password, final CryptoKeyStore ks)", "modifiers": "private", "return": "int", "body": "private int encryptPassword(final String password, final CryptoKeyStore ks)\n                                                    throws Exception {\n        if (!ks.keyStoreExists()) {\n            createKeyStore(ks);\n        }\n        updateStatus(\"Using KeyStore: \" + ks.getKeyStoreFile());\n\n        String encPwd = getCryptoService(ks).encrypt(password);\n        updateStatus(\"Encrypted Password:\\nENC(\" + encPwd + \")\");\n\n        return EXIT_SUCCESS;\n    }", "signature": "int encryptPassword(final String password, final CryptoKeyStore ks)", "full_signature": "private int encryptPassword(final String password, final CryptoKeyStore ks)", "class_method_signature": "CryptoApp.encryptPassword(final String password, final CryptoKeyStore ks)", "testcase": false, "constructor": false, "invocations": ["keyStoreExists", "createKeyStore", "updateStatus", "getKeyStoreFile", "encrypt", "getCryptoService", "updateStatus"]}, "repository": {"repo_id": 7283919, "url": "https://github.com/dbfit/dbfit", "language": "Java", "is_fork": false, "fork_count": 83, "stargazer_count": 181, "size": 6978, "license": "licensed"}}