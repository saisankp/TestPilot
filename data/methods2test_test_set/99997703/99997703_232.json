{"test_class": {"identifier": "EnumTrieCreatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "OcavaCore/src/test/java/com/ocadotechnology/utils/EnumTrieCreatorTest.java"}, "test_case": {"identifier": "onlyLeafNodesCreatedForSimpleEnum", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void onlyLeafNodesCreatedForSimpleEnum() {\n        TrieNode<Enum<?>> simpleTrie = EnumTrieCreator.create(SimpleEnum.class);\n        assertThat(simpleTrie).isInstanceOf(Branch.class);\n\n        Map<String, ? extends TrieNode<?>> branches = ((Branch<?>) simpleTrie).branches;\n        assertThat(branches).hasSize(2);\n        assertThat(branches.values()).allMatch(n -> n instanceof TrieNode.Leaf);\n        assertThat(branches.get(\"YES\")).isEqualTo(new Leaf<>(SimpleEnum.YES));\n        assertThat(branches.get(\"NO\")).isEqualTo(new Leaf<>(SimpleEnum.NO));\n    }", "signature": "void onlyLeafNodesCreatedForSimpleEnum()", "full_signature": "@Test void onlyLeafNodesCreatedForSimpleEnum()", "class_method_signature": "EnumTrieCreatorTest.onlyLeafNodesCreatedForSimpleEnum()", "testcase": true, "constructor": false, "invocations": ["create", "isInstanceOf", "assertThat", "hasSize", "assertThat", "allMatch", "assertThat", "values", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get"]}, "focal_class": {"identifier": "EnumTrieCreator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "EnumTrieCreator", "parameters": "()", "modifiers": "private", "return": "", "signature": " EnumTrieCreator()", "full_signature": "private  EnumTrieCreator()", "class_method_signature": "EnumTrieCreator.EnumTrieCreator()", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(Class<? extends Enum<?>> firstClass)", "modifiers": "public static", "return": "TrieNode<Enum<?>>", "signature": "TrieNode<Enum<?>> create(Class<? extends Enum<?>> firstClass)", "full_signature": "public static TrieNode<Enum<?>> create(Class<? extends Enum<?>> firstClass)", "class_method_signature": "EnumTrieCreator.create(Class<? extends Enum<?>> firstClass)", "testcase": false, "constructor": false}, {"identifier": "generateNodes", "parameters": "(Class<? extends Enum<?>> cls)", "modifiers": "@SuppressWarnings(\"unchecked\") // We do check that the class is an enum class before casting private static", "return": "Map<String, TrieNode<Enum<?>>>", "signature": "Map<String, TrieNode<Enum<?>>> generateNodes(Class<? extends Enum<?>> cls)", "full_signature": "@SuppressWarnings(\"unchecked\") // We do check that the class is an enum class before casting private static Map<String, TrieNode<Enum<?>>> generateNodes(Class<? extends Enum<?>> cls)", "class_method_signature": "EnumTrieCreator.generateNodes(Class<? extends Enum<?>> cls)", "testcase": false, "constructor": false}], "file": "OcavaCore/src/main/java/com/ocadotechnology/utils/EnumTrieCreator.java"}, "focal_method": {"identifier": "create", "parameters": "(Class<? extends Enum<?>> firstClass)", "modifiers": "public static", "return": "TrieNode<Enum<?>>", "body": "public static TrieNode<Enum<?>> create(Class<? extends Enum<?>> firstClass) {\n        return new Branch<>(firstClass.getSimpleName(), generateNodes(firstClass));\n    }", "signature": "TrieNode<Enum<?>> create(Class<? extends Enum<?>> firstClass)", "full_signature": "public static TrieNode<Enum<?>> create(Class<? extends Enum<?>> firstClass)", "class_method_signature": "EnumTrieCreator.create(Class<? extends Enum<?>> firstClass)", "testcase": false, "constructor": false, "invocations": ["getSimpleName", "generateNodes"]}, "repository": {"repo_id": 99997703, "url": "https://github.com/ocadotechnology/Ocava", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 16, "size": 1137, "license": "licensed"}}