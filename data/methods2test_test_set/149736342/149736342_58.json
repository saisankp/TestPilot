{"test_class": {"identifier": "FunctionEncoderTest", "superclass": "", "interfaces": "", "fields": [], "file": "abi/src/test/java/org/web3j/abi/FunctionEncoderTest.java"}, "test_case": {"identifier": "testFunctionSimpleEncode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFunctionSimpleEncode() {\n        Function function = new Function(\n                \"baz\",\n                Arrays.<Type>asList(new Uint32(BigInteger.valueOf(69)), new Bool(true)),\n                Collections.<TypeReference<?>>emptyList()\n        );\n\n        assertThat(FunctionEncoder.encode(function),\n                is(\"0xcdcd77c0\"\n                        + \"0000000000000000000000000000000000000000000000000000000000000045\"\n                        + \"0000000000000000000000000000000000000000000000000000000000000001\"\n                ));\n    }", "signature": "void testFunctionSimpleEncode()", "full_signature": "@Test public void testFunctionSimpleEncode()", "class_method_signature": "FunctionEncoderTest.testFunctionSimpleEncode()", "testcase": true, "constructor": false, "invocations": ["asList", "valueOf", "emptyList", "assertThat", "encode", "is"]}, "focal_class": {"identifier": "FunctionEncoder", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "FunctionEncoder", "parameters": "()", "modifiers": "private", "return": "", "signature": " FunctionEncoder()", "full_signature": "private  FunctionEncoder()", "class_method_signature": "FunctionEncoder.FunctionEncoder()", "testcase": false, "constructor": true}, {"identifier": "encode", "parameters": "(Function function)", "modifiers": "public static", "return": "String", "signature": "String encode(Function function)", "full_signature": "public static String encode(Function function)", "class_method_signature": "FunctionEncoder.encode(Function function)", "testcase": false, "constructor": false}, {"identifier": "encodeConstructor", "parameters": "(List<Type> parameters)", "modifiers": "public static", "return": "String", "signature": "String encodeConstructor(List<Type> parameters)", "full_signature": "public static String encodeConstructor(List<Type> parameters)", "class_method_signature": "FunctionEncoder.encodeConstructor(List<Type> parameters)", "testcase": false, "constructor": false}, {"identifier": "encodeParameters", "parameters": "(List<Type> parameters, StringBuilder result)", "modifiers": "private static", "return": "String", "signature": "String encodeParameters(List<Type> parameters, StringBuilder result)", "full_signature": "private static String encodeParameters(List<Type> parameters, StringBuilder result)", "class_method_signature": "FunctionEncoder.encodeParameters(List<Type> parameters, StringBuilder result)", "testcase": false, "constructor": false}, {"identifier": "getLength", "parameters": "(List<Type> parameters)", "modifiers": "private static", "return": "int", "signature": "int getLength(List<Type> parameters)", "full_signature": "private static int getLength(List<Type> parameters)", "class_method_signature": "FunctionEncoder.getLength(List<Type> parameters)", "testcase": false, "constructor": false}, {"identifier": "buildMethodSignature", "parameters": "(String methodName, List<Type> parameters)", "modifiers": "static", "return": "String", "signature": "String buildMethodSignature(String methodName, List<Type> parameters)", "full_signature": "static String buildMethodSignature(String methodName, List<Type> parameters)", "class_method_signature": "FunctionEncoder.buildMethodSignature(String methodName, List<Type> parameters)", "testcase": false, "constructor": false}, {"identifier": "buildMethodId", "parameters": "(String methodSignature)", "modifiers": "static", "return": "String", "signature": "String buildMethodId(String methodSignature)", "full_signature": "static String buildMethodId(String methodSignature)", "class_method_signature": "FunctionEncoder.buildMethodId(String methodSignature)", "testcase": false, "constructor": false}], "file": "abi/src/main/java/org/web3j/abi/FunctionEncoder.java"}, "focal_method": {"identifier": "encode", "parameters": "(Function function)", "modifiers": "public static", "return": "String", "body": "public static String encode(Function function) {\n        List<Type> parameters = function.getInputParameters();\n\n        String methodSignature = buildMethodSignature(function.getName(), parameters);\n        String methodId = buildMethodId(methodSignature);\n\n        StringBuilder result = new StringBuilder();\n        result.append(methodId);\n\n        return encodeParameters(parameters, result);\n    }", "signature": "String encode(Function function)", "full_signature": "public static String encode(Function function)", "class_method_signature": "FunctionEncoder.encode(Function function)", "testcase": false, "constructor": false, "invocations": ["getInputParameters", "buildMethodSignature", "getName", "buildMethodId", "append", "encodeParameters"]}, "repository": {"repo_id": 149736342, "url": "https://github.com/BrahmaOS/brahmaos-web3j", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 1779, "license": "licensed"}}