{"test_class": {"identifier": "NotAllowedValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private NotAllowedValidator victim = new NotAllowedValidator();", "modifier": "private", "type": "NotAllowedValidator", "declarator": "victim = new NotAllowedValidator()", "var_name": "victim"}, {"original_string": "private NotAllowed annotation;", "modifier": "private", "type": "NotAllowed", "declarator": "annotation", "var_name": "annotation"}], "file": "sejda-model/src/test/java/org/sejda/model/validation/validator/NotAllowedValidatorTest.java"}, "test_case": {"identifier": "testDisallow", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDisallow() {\n        assertFalse(victim.isValid(PredefinedSetOfPages.ALL_PAGES, null));\n    }", "signature": "void testDisallow()", "full_signature": "@Test public void testDisallow()", "class_method_signature": "NotAllowedValidatorTest.testDisallow()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isValid"]}, "focal_class": {"identifier": "NotAllowedValidator", "superclass": "", "interfaces": "implements ConstraintValidator<NotAllowed, PredefinedSetOfPages>", "fields": [{"original_string": "private PredefinedSetOfPages[] disallow;", "modifier": "private", "type": "PredefinedSetOfPages[]", "declarator": "disallow", "var_name": "disallow"}], "methods": [{"identifier": "initialize", "parameters": "(NotAllowed constraintAnnotation)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(NotAllowed constraintAnnotation)", "full_signature": "@Override public void initialize(NotAllowed constraintAnnotation)", "class_method_signature": "NotAllowedValidator.initialize(NotAllowed constraintAnnotation)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(PredefinedSetOfPages value, ConstraintValidatorContext context)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isValid(PredefinedSetOfPages value, ConstraintValidatorContext context)", "full_signature": "@Override public boolean isValid(PredefinedSetOfPages value, ConstraintValidatorContext context)", "class_method_signature": "NotAllowedValidator.isValid(PredefinedSetOfPages value, ConstraintValidatorContext context)", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/validation/validator/NotAllowedValidator.java"}, "focal_method": {"identifier": "isValid", "parameters": "(PredefinedSetOfPages value, ConstraintValidatorContext context)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isValid(PredefinedSetOfPages value, ConstraintValidatorContext context) {\n        if (value != null && disallow != null) {\n            return !Arrays.asList(disallow).contains(value);\n        }\n        return true;\n    }", "signature": "boolean isValid(PredefinedSetOfPages value, ConstraintValidatorContext context)", "full_signature": "@Override public boolean isValid(PredefinedSetOfPages value, ConstraintValidatorContext context)", "class_method_signature": "NotAllowedValidator.isValid(PredefinedSetOfPages value, ConstraintValidatorContext context)", "testcase": false, "constructor": false, "invocations": ["contains", "asList"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}