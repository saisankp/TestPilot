{"test_class": {"identifier": "EngineUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "smartparam-engine/src/test/java/org/smartparam/engine/util/EngineUtilTest.java"}, "test_case": {"identifier": "testSplit2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSplit2() {\n\n        // konfiguracja testu (key = string, value = oczekiwany wynik splitowania)\n        Map<String, String[]> casesMap = new LinkedHashMap<String, String[]>();\n        casesMap.put(\"A;B\", new String[]{\"A\", \"B\"});\n        casesMap.put(\"AA;BB\", new String[]{\"AA\", \"BB\"});\n        casesMap.put(\";B\", new String[]{\"\", \"B\"});\n        casesMap.put(\";BB\", new String[]{\"\", \"BB\"});\n        casesMap.put(\"A;\", new String[]{\"A\", \"\"});\n        casesMap.put(\"AA;\", new String[]{\"AA\", \"\"});\n        casesMap.put(\";\", new String[]{\"\", \"\"});\n        casesMap.put(\"\", new String[]{\"\", \"\"});\n\n        // sprawdzenie wynikow testu\n        for (Map.Entry<String, String[]> e : casesMap.entrySet()) {\n            String str = e.getKey();\n            String[] expected = e.getValue();\n            String[] result = EngineUtil.split2(str, ';');\n\n            assertEquals(2, result.length);\n            assertEquals(expected[0], result[0]);\n            assertEquals(expected[1], result[1]);\n        }\n\n        // przypadek szczegolny, argument rowny null\n        String[] tokens = EngineUtil.split2(null, ';');\n        assertEquals(\"\", tokens[0]);\n        assertEquals(\"\", tokens[1]);\n    }", "signature": "void testSplit2()", "full_signature": "@Test public void testSplit2()", "class_method_signature": "EngineUtilTest.testSplit2()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "put", "put", "put", "put", "entrySet", "getKey", "getValue", "split2", "assertEquals", "assertEquals", "assertEquals", "split2", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "EngineUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "EngineUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " EngineUtil()", "full_signature": "private  EngineUtil()", "class_method_signature": "EngineUtil.EngineUtil()", "testcase": false, "constructor": true}, {"identifier": "hasText", "parameters": "(String text)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasText(String text)", "full_signature": "public static boolean hasText(String text)", "class_method_signature": "EngineUtil.hasText(String text)", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(final String str, final char delim, final int maxTokens)", "modifiers": "public static", "return": "String[]", "signature": "String[] split(final String str, final char delim, final int maxTokens)", "full_signature": "public static String[] split(final String str, final char delim, final int maxTokens)", "class_method_signature": "EngineUtil.split(final String str, final char delim, final int maxTokens)", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(final String str, final char delim)", "modifiers": "public static", "return": "String[]", "signature": "String[] split(final String str, final char delim)", "full_signature": "public static String[] split(final String str, final char delim)", "class_method_signature": "EngineUtil.split(final String str, final char delim)", "testcase": false, "constructor": false}, {"identifier": "split2", "parameters": "(final String str, final char delim)", "modifiers": "public static", "return": "String[]", "signature": "String[] split2(final String str, final char delim)", "full_signature": "public static String[] split2(final String str, final char delim)", "class_method_signature": "EngineUtil.split2(final String str, final char delim)", "testcase": false, "constructor": false}, {"identifier": "trimAllWhitespace", "parameters": "(final String str)", "modifiers": "public static", "return": "String", "signature": "String trimAllWhitespace(final String str)", "full_signature": "public static String trimAllWhitespace(final String str)", "class_method_signature": "EngineUtil.trimAllWhitespace(final String str)", "testcase": false, "constructor": false}], "file": "smartparam-engine/src/main/java/org/smartparam/engine/util/EngineUtil.java"}, "focal_method": {"identifier": "split2", "parameters": "(final String str, final char delim)", "modifiers": "public static", "return": "String[]", "body": "public static String[] split2(final String str, final char delim) {\n        String[] result = {\"\", \"\"};\n        if (str != null) {\n            int ix = str.indexOf(delim);\n            if (ix >= 0) {\n                result[0] = str.substring(0, ix);\n                result[1] = str.substring(ix + 1);\n            } else {\n                result[0] = str;\n            }\n        }\n        return result;\n    }", "signature": "String[] split2(final String str, final char delim)", "full_signature": "public static String[] split2(final String str, final char delim)", "class_method_signature": "EngineUtil.split2(final String str, final char delim)", "testcase": false, "constructor": false, "invocations": ["indexOf", "substring", "substring"]}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}