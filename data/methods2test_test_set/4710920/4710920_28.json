{"test_class": {"identifier": "ListTelnetHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static TelnetHandler list = new ListTelnetHandler();", "modifier": "private static", "type": "TelnetHandler", "declarator": "list = new ListTelnetHandler()", "var_name": "list"}, {"original_string": "private Channel mockChannel;", "modifier": "private", "type": "Channel", "declarator": "mockChannel", "var_name": "mockChannel"}, {"original_string": "private final ServiceRepository repository = ApplicationModel.getServiceRepository();", "modifier": "private final", "type": "ServiceRepository", "declarator": "repository = ApplicationModel.getServiceRepository()", "var_name": "repository"}], "file": "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/legacy/ListTelnetHandlerTest.java"}, "test_case": {"identifier": "testListDefault", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testListDefault() throws RemotingException {\n        mockChannel = mock(Channel.class);\n        given(mockChannel.getAttribute(\"telnet.service\")).willReturn(DemoService.class.getName());\n\n        registerProvider(DemoService.class.getName(), new DemoServiceImpl(), DemoService.class);\n\n        String result = list.telnet(mockChannel, \"\");\n        assertTrue(result.startsWith(\"Use default service org.apache.dubbo.qos.legacy.service.DemoService.\\r\\n\" +\n                \"org.apache.dubbo.qos.legacy.service.DemoService (as provider):\\r\\n\"));\n        for (Method method : DemoService.class.getMethods()) {\n            assertTrue(result.contains(method.getName()));\n        }\n    }", "signature": "void testListDefault()", "full_signature": "@Test public void testListDefault()", "class_method_signature": "ListTelnetHandlerTest.testListDefault()", "testcase": true, "constructor": false, "invocations": ["mock", "willReturn", "given", "getAttribute", "getName", "registerProvider", "getName", "telnet", "assertTrue", "startsWith", "getMethods", "assertTrue", "contains", "getName"]}, "focal_class": {"identifier": "ListTelnetHandler", "superclass": "", "interfaces": "implements TelnetHandler", "fields": [{"original_string": "private ServiceRepository serviceRepository = ApplicationModel.getServiceRepository();", "modifier": "private", "type": "ServiceRepository", "declarator": "serviceRepository = ApplicationModel.getServiceRepository()", "var_name": "serviceRepository"}], "methods": [{"identifier": "telnet", "parameters": "(Channel channel, String message)", "modifiers": "@Override public", "return": "String", "signature": "String telnet(Channel channel, String message)", "full_signature": "@Override public String telnet(Channel channel, String message)", "class_method_signature": "ListTelnetHandler.telnet(Channel channel, String message)", "testcase": false, "constructor": false}, {"identifier": "printAllServices", "parameters": "(StringBuilder buf, boolean detail)", "modifiers": "private", "return": "void", "signature": "void printAllServices(StringBuilder buf, boolean detail)", "full_signature": "private void printAllServices(StringBuilder buf, boolean detail)", "class_method_signature": "ListTelnetHandler.printAllServices(StringBuilder buf, boolean detail)", "testcase": false, "constructor": false}, {"identifier": "printAllProvidedServices", "parameters": "(StringBuilder buf, boolean detail)", "modifiers": "private", "return": "void", "signature": "void printAllProvidedServices(StringBuilder buf, boolean detail)", "full_signature": "private void printAllProvidedServices(StringBuilder buf, boolean detail)", "class_method_signature": "ListTelnetHandler.printAllProvidedServices(StringBuilder buf, boolean detail)", "testcase": false, "constructor": false}, {"identifier": "printAllReferredServices", "parameters": "(StringBuilder buf, boolean detail)", "modifiers": "private", "return": "void", "signature": "void printAllReferredServices(StringBuilder buf, boolean detail)", "full_signature": "private void printAllReferredServices(StringBuilder buf, boolean detail)", "class_method_signature": "ListTelnetHandler.printAllReferredServices(StringBuilder buf, boolean detail)", "testcase": false, "constructor": false}, {"identifier": "printSpecifiedService", "parameters": "(String service, StringBuilder buf, boolean detail)", "modifiers": "private", "return": "void", "signature": "void printSpecifiedService(String service, StringBuilder buf, boolean detail)", "full_signature": "private void printSpecifiedService(String service, StringBuilder buf, boolean detail)", "class_method_signature": "ListTelnetHandler.printSpecifiedService(String service, StringBuilder buf, boolean detail)", "testcase": false, "constructor": false}, {"identifier": "printSpecifiedProvidedService", "parameters": "(String service, StringBuilder buf, boolean detail)", "modifiers": "private", "return": "void", "signature": "void printSpecifiedProvidedService(String service, StringBuilder buf, boolean detail)", "full_signature": "private void printSpecifiedProvidedService(String service, StringBuilder buf, boolean detail)", "class_method_signature": "ListTelnetHandler.printSpecifiedProvidedService(String service, StringBuilder buf, boolean detail)", "testcase": false, "constructor": false}, {"identifier": "printSpecifiedReferredService", "parameters": "(String service, StringBuilder buf, boolean detail)", "modifiers": "private", "return": "void", "signature": "void printSpecifiedReferredService(String service, StringBuilder buf, boolean detail)", "full_signature": "private void printSpecifiedReferredService(String service, StringBuilder buf, boolean detail)", "class_method_signature": "ListTelnetHandler.printSpecifiedReferredService(String service, StringBuilder buf, boolean detail)", "testcase": false, "constructor": false}, {"identifier": "printMethod", "parameters": "(Method method, StringBuilder buf, boolean detail)", "modifiers": "private", "return": "void", "signature": "void printMethod(Method method, StringBuilder buf, boolean detail)", "full_signature": "private void printMethod(Method method, StringBuilder buf, boolean detail)", "class_method_signature": "ListTelnetHandler.printMethod(Method method, StringBuilder buf, boolean detail)", "testcase": false, "constructor": false}, {"identifier": "isProviderMatched", "parameters": "(String service, ProviderModel provider)", "modifiers": "private", "return": "boolean", "signature": "boolean isProviderMatched(String service, ProviderModel provider)", "full_signature": "private boolean isProviderMatched(String service, ProviderModel provider)", "class_method_signature": "ListTelnetHandler.isProviderMatched(String service, ProviderModel provider)", "testcase": false, "constructor": false}, {"identifier": "isConsumerMatcher", "parameters": "(String service,ConsumerModel consumer)", "modifiers": "private", "return": "boolean", "signature": "boolean isConsumerMatcher(String service,ConsumerModel consumer)", "full_signature": "private boolean isConsumerMatcher(String service,ConsumerModel consumer)", "class_method_signature": "ListTelnetHandler.isConsumerMatcher(String service,ConsumerModel consumer)", "testcase": false, "constructor": false}], "file": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/legacy/ListTelnetHandler.java"}, "focal_method": {"identifier": "telnet", "parameters": "(Channel channel, String message)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String telnet(Channel channel, String message) {\n        StringBuilder buf = new StringBuilder();\n        String service = null;\n        boolean detail = false;\n        if (message.length() > 0) {\n            String[] parts = message.split(\"\\\\s+\");\n            for (String part : parts) {\n                if (\"-l\".equals(part)) {\n                    detail = true;\n                } else {\n                    if (!StringUtils.isEmpty(service)) {\n                        return \"Invalid parameter \" + part;\n                    }\n                    service = part;\n                }\n            }\n        } else {\n            service = (String) channel.getAttribute(ChangeTelnetHandler.SERVICE_KEY);\n            if (StringUtils.isNotEmpty(service)) {\n                buf.append(\"Use default service \").append(service).append(\".\\r\\n\");\n            }\n        }\n\n        if (StringUtils.isEmpty(service)) {\n            printAllServices(buf, detail);\n        } else {\n            printSpecifiedService(service, buf, detail);\n\n            if (buf.length() == 0) {\n                buf.append(\"No such service: \").append(service);\n            }\n        }\n        return buf.toString();\n    }", "signature": "String telnet(Channel channel, String message)", "full_signature": "@Override public String telnet(Channel channel, String message)", "class_method_signature": "ListTelnetHandler.telnet(Channel channel, String message)", "testcase": false, "constructor": false, "invocations": ["length", "split", "equals", "isEmpty", "getAttribute", "isNotEmpty", "append", "append", "append", "isEmpty", "printAllServices", "printSpecifiedService", "length", "append", "append", "toString"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}