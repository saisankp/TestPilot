{"test_class": {"identifier": "TestTinyTablesElement", "superclass": "", "interfaces": "", "fields": [], "file": "suite/tinytables/src/test/java/dk/alexandra/fresco/suite/tinytables/datatypes/TestTinyTablesElement.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testToString() {\n    TinyTablesElement e1 = TinyTablesElement.getInstance(false);\n    TinyTablesElement e2 = TinyTablesElement.getInstance(true);\n    assertThat(e1.toString(), is(\"TinyTablesElement[share=false]\"));\n    assertThat(e2.toString(), is(\"TinyTablesElement[share=true]\"));\n  }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "TestTinyTablesElement.testToString()", "testcase": true, "constructor": false, "invocations": ["getInstance", "getInstance", "assertThat", "toString", "is", "assertThat", "toString", "is"]}, "focal_class": {"identifier": "TinyTablesElement", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 6089268176798696542L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 6089268176798696542L", "var_name": "serialVersionUID"}, {"original_string": "private final boolean share;", "modifier": "private final", "type": "boolean", "declarator": "share", "var_name": "share"}, {"original_string": "private static final TinyTablesElement TRUE = new TinyTablesElement(true);", "modifier": "private static final", "type": "TinyTablesElement", "declarator": "TRUE = new TinyTablesElement(true)", "var_name": "TRUE"}, {"original_string": "private static final TinyTablesElement FALSE = new TinyTablesElement(false);", "modifier": "private static final", "type": "TinyTablesElement", "declarator": "FALSE = new TinyTablesElement(false)", "var_name": "FALSE"}], "methods": [{"identifier": "TinyTablesElement", "parameters": "(boolean share)", "modifiers": "private", "return": "", "signature": " TinyTablesElement(boolean share)", "full_signature": "private  TinyTablesElement(boolean share)", "class_method_signature": "TinyTablesElement.TinyTablesElement(boolean share)", "testcase": false, "constructor": true}, {"identifier": "getShare", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getShare()", "full_signature": "public boolean getShare()", "class_method_signature": "TinyTablesElement.getShare()", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(List<TinyTablesElement> allShares)", "modifiers": "public static", "return": "boolean", "signature": "boolean open(List<TinyTablesElement> allShares)", "full_signature": "public static boolean open(List<TinyTablesElement> allShares)", "class_method_signature": "TinyTablesElement.open(List<TinyTablesElement> allShares)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(TinyTablesElement b)", "modifiers": "public", "return": "TinyTablesElement", "signature": "TinyTablesElement add(TinyTablesElement b)", "full_signature": "public TinyTablesElement add(TinyTablesElement b)", "class_method_signature": "TinyTablesElement.add(TinyTablesElement b)", "testcase": false, "constructor": false}, {"identifier": "multiply", "parameters": "(boolean s)", "modifiers": "public", "return": "TinyTablesElement", "signature": "TinyTablesElement multiply(boolean s)", "full_signature": "public TinyTablesElement multiply(boolean s)", "class_method_signature": "TinyTablesElement.multiply(boolean s)", "testcase": false, "constructor": false}, {"identifier": "not", "parameters": "(int playerId)", "modifiers": "public", "return": "TinyTablesElement", "signature": "TinyTablesElement not(int playerId)", "full_signature": "public TinyTablesElement not(int playerId)", "class_method_signature": "TinyTablesElement.not(int playerId)", "testcase": false, "constructor": false}, {"identifier": "flip", "parameters": "()", "modifiers": "public", "return": "TinyTablesElement", "signature": "TinyTablesElement flip()", "full_signature": "public TinyTablesElement flip()", "class_method_signature": "TinyTablesElement.flip()", "testcase": false, "constructor": false}, {"identifier": "multiply", "parameters": "(TinyTablesElement other,\n      TinyTablesTriple triple)", "modifiers": "public", "return": "Pair<TinyTablesElement, TinyTablesElement>", "signature": "Pair<TinyTablesElement, TinyTablesElement> multiply(TinyTablesElement other,\n      TinyTablesTriple triple)", "full_signature": "public Pair<TinyTablesElement, TinyTablesElement> multiply(TinyTablesElement other,\n      TinyTablesTriple triple)", "class_method_signature": "TinyTablesElement.multiply(TinyTablesElement other,\n      TinyTablesTriple triple)", "testcase": false, "constructor": false}, {"identifier": "finalizeMultiplication", "parameters": "(boolean e, boolean d,\n      TinyTablesTriple triple, int playerId)", "modifiers": "public static", "return": "TinyTablesElement", "signature": "TinyTablesElement finalizeMultiplication(boolean e, boolean d,\n      TinyTablesTriple triple, int playerId)", "full_signature": "public static TinyTablesElement finalizeMultiplication(boolean e, boolean d,\n      TinyTablesTriple triple, int playerId)", "class_method_signature": "TinyTablesElement.finalizeMultiplication(boolean e, boolean d,\n      TinyTablesTriple triple, int playerId)", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "(boolean share)", "modifiers": "public static", "return": "TinyTablesElement", "signature": "TinyTablesElement getInstance(boolean share)", "full_signature": "public static TinyTablesElement getInstance(boolean share)", "class_method_signature": "TinyTablesElement.getInstance(boolean share)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TinyTablesElement.toString()", "testcase": false, "constructor": false}], "file": "suite/tinytables/src/main/java/dk/alexandra/fresco/suite/tinytables/datatypes/TinyTablesElement.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String toString() {\n    return \"TinyTablesElement[share=\" + this.share + \"]\";\n  }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TinyTablesElement.toString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}