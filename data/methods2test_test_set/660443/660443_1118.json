{"test_class": {"identifier": "ElementRuleTest", "superclass": "extends FormulaRuleTest", "interfaces": "", "fields": [{"original_string": "private static IChemObjectBuilder builder;", "modifier": "private static", "type": "IChemObjectBuilder", "declarator": "builder", "var_name": "builder"}], "file": "tool/formula/src/test/java/org/openscience/cdk/formula/rules/ElementRuleTest.java"}, "test_case": {"identifier": "testElementRule", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testElementRule() throws Exception {\n\n        IRule rule = new ElementRule();\n        Assert.assertNotNull(rule);\n\n    }", "signature": "void testElementRule()", "full_signature": "@Test public void testElementRule()", "class_method_signature": "ElementRuleTest.testElementRule()", "testcase": true, "constructor": false, "invocations": ["assertNotNull"]}, "focal_class": {"identifier": "ElementRule", "superclass": "", "interfaces": "implements IRule", "fields": [{"original_string": "private static ILoggingTool   logger = LoggingToolFactory.createLoggingTool(ElementRule.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(ElementRule.class)", "var_name": "logger"}, {"original_string": "private MolecularFormulaRange mfRange;", "modifier": "private", "type": "MolecularFormulaRange", "declarator": "mfRange", "var_name": "mfRange"}], "methods": [{"identifier": "ElementRule", "parameters": "()", "modifiers": "public", "return": "", "signature": " ElementRule()", "full_signature": "public  ElementRule()", "class_method_signature": "ElementRule.ElementRule()", "testcase": false, "constructor": true}, {"identifier": "setParameters", "parameters": "(Object[] params)", "modifiers": "@Override public", "return": "void", "signature": "void setParameters(Object[] params)", "full_signature": "@Override public void setParameters(Object[] params)", "class_method_signature": "ElementRule.setParameters(Object[] params)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] getParameters()", "full_signature": "@Override public Object[] getParameters()", "class_method_signature": "ElementRule.getParameters()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(IMolecularFormula formula)", "modifiers": "@Override public", "return": "double", "signature": "double validate(IMolecularFormula formula)", "full_signature": "@Override public double validate(IMolecularFormula formula)", "class_method_signature": "ElementRule.validate(IMolecularFormula formula)", "testcase": false, "constructor": false}, {"identifier": "ensureDefaultOccurElements", "parameters": "(IChemObjectBuilder builder)", "modifiers": "private", "return": "void", "signature": "void ensureDefaultOccurElements(IChemObjectBuilder builder)", "full_signature": "private void ensureDefaultOccurElements(IChemObjectBuilder builder)", "class_method_signature": "ElementRule.ensureDefaultOccurElements(IChemObjectBuilder builder)", "testcase": false, "constructor": false}], "file": "tool/formula/src/main/java/org/openscience/cdk/formula/rules/ElementRule.java"}, "focal_method": {"identifier": "ElementRule", "parameters": "()", "modifiers": "public", "return": "", "body": "public ElementRule() {}", "signature": " ElementRule()", "full_signature": "public  ElementRule()", "class_method_signature": "ElementRule.ElementRule()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}