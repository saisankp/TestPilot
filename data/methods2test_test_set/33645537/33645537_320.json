{"test_class": {"identifier": "ReturnChangeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ReturnChange returnChange;", "modifier": "private", "type": "ReturnChange", "declarator": "returnChange", "var_name": "returnChange"}], "file": "algs/src/test/java/com/github/pedrovgs/problem47/ReturnChangeTest.java"}, "test_case": {"identifier": "shouldReturnChangeUsingJustTheBiggestMoney", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void shouldReturnChangeUsingJustTheBiggestMoney() {\n    int[] moneys = { 5, 10, 15, 50 };\n\n    List<Integer> change = returnChange.calculate(moneys, 200);\n\n    int[] expectedChange = { 50, 50, 50, 50 };\n    assertChangeEqualsTo(expectedChange, change);\n  }", "signature": "void shouldReturnChangeUsingJustTheBiggestMoney()", "full_signature": "@Test public void shouldReturnChangeUsingJustTheBiggestMoney()", "class_method_signature": "ReturnChangeTest.shouldReturnChangeUsingJustTheBiggestMoney()", "testcase": true, "constructor": false, "invocations": ["calculate", "assertChangeEqualsTo"]}, "focal_class": {"identifier": "ReturnChange", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "calculate", "parameters": "(int[] moneys, int billAmount)", "modifiers": "public", "return": "List<Integer>", "signature": "List<Integer> calculate(int[] moneys, int billAmount)", "full_signature": "public List<Integer> calculate(int[] moneys, int billAmount)", "class_method_signature": "ReturnChange.calculate(int[] moneys, int billAmount)", "testcase": false, "constructor": false}, {"identifier": "validateInputData", "parameters": "(int[] moneys, int billAmount)", "modifiers": "private", "return": "void", "signature": "void validateInputData(int[] moneys, int billAmount)", "full_signature": "private void validateInputData(int[] moneys, int billAmount)", "class_method_signature": "ReturnChange.validateInputData(int[] moneys, int billAmount)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem47/ReturnChange.java"}, "focal_method": {"identifier": "calculate", "parameters": "(int[] moneys, int billAmount)", "modifiers": "public", "return": "List<Integer>", "body": "public List<Integer> calculate(int[] moneys, int billAmount) {\n    validateInputData(moneys, billAmount);\n\n    List<Integer> change = new LinkedList<Integer>();\n    while (billAmount > 0 && moneys.length > 0) {\n      for (int i = moneys.length - 1; i >= 0; i--) {\n        if (billAmount - moneys[i] >= 0) {\n          change.add(moneys[i]);\n          billAmount -= moneys[i];\n          break;\n        }\n      }\n    }\n    return change;\n  }", "signature": "List<Integer> calculate(int[] moneys, int billAmount)", "full_signature": "public List<Integer> calculate(int[] moneys, int billAmount)", "class_method_signature": "ReturnChange.calculate(int[] moneys, int billAmount)", "testcase": false, "constructor": false, "invocations": ["validateInputData", "add"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}