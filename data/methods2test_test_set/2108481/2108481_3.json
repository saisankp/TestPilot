{"test_class": {"identifier": "ProviderDiscoveryClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MockWebServer server;", "modifier": "private", "type": "MockWebServer", "declarator": "server", "var_name": "server"}], "file": "spring-security-oauth2/src/test/java/org/springframework/security/oauth2/client/discovery/ProviderDiscoveryClientTest.java"}, "test_case": {"identifier": "discoverWhenProviderSupportsDiscoveryThenReturnProviderConfiguration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void discoverWhenProviderSupportsDiscoveryThenReturnProviderConfiguration() throws Exception {\n\t\tthis.server.enqueue(new MockResponse().setHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE).setBody(\n\t\t\t\t\"\t{\\n\" +\n\t\t\t\t\"   \t\\\"issuer\\\": \\\"https://springsecurity.uaa.run.pivotal.io/oauth/token\\\",\\n\" +\n\t\t\t\t\"   \t\\\"authorization_endpoint\\\": \\\"https://springsecurity.login.run.pivotal.io/oauth/authorize\\\",\\n\" +\n\t\t\t\t\"   \t\\\"token_endpoint\\\": \\\"https://springsecurity.login.run.pivotal.io/oauth/token\\\",\\n\" +\n\t\t\t\t\"   \t\\\"userinfo_endpoint\\\": \\\"https://springsecurity.login.run.pivotal.io/userinfo\\\",\\n\" +\n\t\t\t\t\"   \t\\\"jwks_uri\\\": \\\"https://springsecurity.login.run.pivotal.io/token_keys\\\"\\n\" +\n\t\t\t\t\"\t}\\n\"));\n\n\t\tProviderDiscoveryClient client = new ProviderDiscoveryClient(this.server.url(\"\").toString());\n\t\tProviderConfiguration providerConfiguration = client.discover();\n\n\t\tassertNotNull(providerConfiguration);\n\t\tassertEquals(\"https://springsecurity.uaa.run.pivotal.io/oauth/token\", providerConfiguration.getIssuer().toString());\n\t\tassertEquals(\"https://springsecurity.login.run.pivotal.io/oauth/authorize\", providerConfiguration.getAuthorizationEndpoint().toString());\n\t\tassertEquals(\"https://springsecurity.login.run.pivotal.io/oauth/token\", providerConfiguration.getTokenEndpoint().toString());\n\t\tassertEquals(\"https://springsecurity.login.run.pivotal.io/userinfo\", providerConfiguration.getUserInfoEndpoint().toString());\n\t\tassertEquals(\"https://springsecurity.login.run.pivotal.io/token_keys\", providerConfiguration.getJwkSetUri().toString());\n\t}", "signature": "void discoverWhenProviderSupportsDiscoveryThenReturnProviderConfiguration()", "full_signature": "@Test public void discoverWhenProviderSupportsDiscoveryThenReturnProviderConfiguration()", "class_method_signature": "ProviderDiscoveryClientTest.discoverWhenProviderSupportsDiscoveryThenReturnProviderConfiguration()", "testcase": true, "constructor": false, "invocations": ["enqueue", "setBody", "setHeader", "toString", "url", "discover", "assertNotNull", "assertEquals", "toString", "getIssuer", "assertEquals", "toString", "getAuthorizationEndpoint", "assertEquals", "toString", "getTokenEndpoint", "assertEquals", "toString", "getUserInfoEndpoint", "assertEquals", "toString", "getJwkSetUri"]}, "focal_class": {"identifier": "ProviderDiscoveryClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PROVIDER_END_PATH = \"/.well-known/openid-configuration\";", "modifier": "private static final", "type": "String", "declarator": "PROVIDER_END_PATH = \"/.well-known/openid-configuration\"", "var_name": "PROVIDER_END_PATH"}, {"original_string": "private static final String ISSUER_ATTR_NAME = \"issuer\";", "modifier": "private static final", "type": "String", "declarator": "ISSUER_ATTR_NAME = \"issuer\"", "var_name": "ISSUER_ATTR_NAME"}, {"original_string": "private static final String AUTHORIZATION_ENDPOINT_ATTR_NAME = \"authorization_endpoint\";", "modifier": "private static final", "type": "String", "declarator": "AUTHORIZATION_ENDPOINT_ATTR_NAME = \"authorization_endpoint\"", "var_name": "AUTHORIZATION_ENDPOINT_ATTR_NAME"}, {"original_string": "private static final String TOKEN_ENDPOINT_ATTR_NAME = \"token_endpoint\";", "modifier": "private static final", "type": "String", "declarator": "TOKEN_ENDPOINT_ATTR_NAME = \"token_endpoint\"", "var_name": "TOKEN_ENDPOINT_ATTR_NAME"}, {"original_string": "private static final String USERINFO_ENDPOINT_ATTR_NAME = \"userinfo_endpoint\";", "modifier": "private static final", "type": "String", "declarator": "USERINFO_ENDPOINT_ATTR_NAME = \"userinfo_endpoint\"", "var_name": "USERINFO_ENDPOINT_ATTR_NAME"}, {"original_string": "private static final String JWK_SET_URI_ATTR_NAME = \"jwks_uri\";", "modifier": "private static final", "type": "String", "declarator": "JWK_SET_URI_ATTR_NAME = \"jwks_uri\"", "var_name": "JWK_SET_URI_ATTR_NAME"}, {"original_string": "private final RestTemplate restTemplate = new RestTemplate();", "modifier": "private final", "type": "RestTemplate", "declarator": "restTemplate = new RestTemplate()", "var_name": "restTemplate"}, {"original_string": "private final URI providerLocation;", "modifier": "private final", "type": "URI", "declarator": "providerLocation", "var_name": "providerLocation"}], "methods": [{"identifier": "ProviderDiscoveryClient", "parameters": "(String providerLocationUri)", "modifiers": "public", "return": "", "signature": " ProviderDiscoveryClient(String providerLocationUri)", "full_signature": "public  ProviderDiscoveryClient(String providerLocationUri)", "class_method_signature": "ProviderDiscoveryClient.ProviderDiscoveryClient(String providerLocationUri)", "testcase": false, "constructor": true}, {"identifier": "discover", "parameters": "()", "modifiers": "public", "return": "ProviderConfiguration", "signature": "ProviderConfiguration discover()", "full_signature": "public ProviderConfiguration discover()", "class_method_signature": "ProviderDiscoveryClient.discover()", "testcase": false, "constructor": false}], "file": "spring-security-oauth2/src/main/java/org/springframework/security/oauth2/client/discovery/ProviderDiscoveryClient.java"}, "focal_method": {"identifier": "discover", "parameters": "()", "modifiers": "public", "return": "ProviderConfiguration", "body": "public ProviderConfiguration discover() {\n\t\tMap responseAttributes = this.restTemplate.getForObject(this.providerLocation, Map.class);\n\n\t\tProviderConfiguration.Builder builder = new ProviderConfiguration.Builder();\n\n\t\tbuilder.issuer((String)responseAttributes.get(ISSUER_ATTR_NAME));\n\t\tbuilder.authorizationEndpoint((String)responseAttributes.get(AUTHORIZATION_ENDPOINT_ATTR_NAME));\n\t\tif (responseAttributes.containsKey(TOKEN_ENDPOINT_ATTR_NAME)) {\n\t\t\tbuilder.tokenEndpoint((String)responseAttributes.get(TOKEN_ENDPOINT_ATTR_NAME));\n\t\t}\n\t\tif (responseAttributes.containsKey(USERINFO_ENDPOINT_ATTR_NAME)) {\n\t\t\tbuilder.userInfoEndpoint((String)responseAttributes.get(USERINFO_ENDPOINT_ATTR_NAME));\n\t\t}\n\t\tif (responseAttributes.containsKey(JWK_SET_URI_ATTR_NAME)) {\n\t\t\tbuilder.jwkSetUri((String)responseAttributes.get(JWK_SET_URI_ATTR_NAME));\n\t\t}\n\n\t\treturn builder.build();\n\t}", "signature": "ProviderConfiguration discover()", "full_signature": "public ProviderConfiguration discover()", "class_method_signature": "ProviderDiscoveryClient.discover()", "testcase": false, "constructor": false, "invocations": ["getForObject", "issuer", "get", "authorizationEndpoint", "get", "containsKey", "tokenEndpoint", "get", "containsKey", "userInfoEndpoint", "get", "containsKey", "jwkSetUri", "get", "build"]}, "repository": {"repo_id": 2108481, "url": "https://github.com/spring-projects/spring-security-oauth", "language": "Java", "is_fork": false, "fork_count": 3777, "stargazer_count": 4150, "size": 7166, "license": "licensed"}}