{"test_class": {"identifier": "EmptyStrategyContainerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IStrategyContainer container;", "modifier": "private", "type": "IStrategyContainer", "declarator": "container", "var_name": "container"}], "file": "CoreFeatures/IOC/RecursiveStrategyContainer/src/test/java/info/smart_tools/smartactors/ioc/recursive_strategy_container/EmptyStrategyContainerTest.java"}, "test_case": {"identifier": "testRemove", "parameters": "()", "modifiers": "@Test(expected = StrategyContainerException.class) public", "return": "void", "body": "@Test(expected = StrategyContainerException.class)\n    public void testRemove() throws StrategyContainerException {\n        container.remove(new Object());\n    }", "signature": "void testRemove()", "full_signature": "@Test(expected = StrategyContainerException.class) public void testRemove()", "class_method_signature": "EmptyStrategyContainerTest.testRemove()", "testcase": true, "constructor": false, "invocations": ["remove"]}, "focal_class": {"identifier": "EmptyStrategyContainer", "superclass": "", "interfaces": "implements IStrategyContainer", "fields": [], "methods": [{"identifier": "resolve", "parameters": "(final Object key)", "modifiers": "@Override public", "return": "IResolveDependencyStrategy", "signature": "IResolveDependencyStrategy resolve(final Object key)", "full_signature": "@Override public IResolveDependencyStrategy resolve(final Object key)", "class_method_signature": "EmptyStrategyContainer.resolve(final Object key)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(final Object key, final IResolveDependencyStrategy strategy)", "modifiers": "@Override public", "return": "void", "signature": "void register(final Object key, final IResolveDependencyStrategy strategy)", "full_signature": "@Override public void register(final Object key, final IResolveDependencyStrategy strategy)", "class_method_signature": "EmptyStrategyContainer.register(final Object key, final IResolveDependencyStrategy strategy)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(final Object key)", "modifiers": "@Override public", "return": "void", "signature": "void remove(final Object key)", "full_signature": "@Override public void remove(final Object key)", "class_method_signature": "EmptyStrategyContainer.remove(final Object key)", "testcase": false, "constructor": false}], "file": "CoreFeatures/IOC/RecursiveStrategyContainer/src/main/java/info/smart_tools/smartactors/ioc/recursive_strategy_container/EmptyStrategyContainer.java"}, "focal_method": {"identifier": "remove", "parameters": "(final Object key)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void remove(final Object key) throws StrategyContainerException {\n        throw new StrategyContainerException(\n                String.format(\"Cannot remove the strategy for %s from EmptyStrategyContainer\", String.valueOf(key)));\n    }", "signature": "void remove(final Object key)", "full_signature": "@Override public void remove(final Object key)", "class_method_signature": "EmptyStrategyContainer.remove(final Object key)", "testcase": false, "constructor": false, "invocations": ["format", "valueOf"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}