{"test_class": {"identifier": "ModelStorateThinClientProcessorTest", "superclass": "extends GridCommonAbstractTest", "interfaces": "", "fields": [{"original_string": "private static final ClientConnectionContext connCtx = mock(ClientConnectionContext.class);", "modifier": "private static final", "type": "ClientConnectionContext", "declarator": "connCtx = mock(ClientConnectionContext.class)", "var_name": "connCtx"}, {"original_string": "private static final IgniteConfiguration conf = new IgniteConfiguration()\n        .setDiscoverySpi(new TcpDiscoverySpi()\n            .setIpFinder(new TcpDiscoveryVmIpFinder()\n                .setAddresses(Collections.singletonList(\"127.0.0.1:47500..47509\"))));", "modifier": "private static final", "type": "IgniteConfiguration", "declarator": "conf = new IgniteConfiguration()\n        .setDiscoverySpi(new TcpDiscoverySpi()\n            .setIpFinder(new TcpDiscoveryVmIpFinder()\n                .setAddresses(Collections.singletonList(\"127.0.0.1:47500..47509\"))))", "var_name": "conf"}, {"original_string": "private static final BinaryContext bctx = new BinaryContext(\n        BinaryNoopMetadataHandler.instance(),\n        conf,\n        new NullLogger()\n    );", "modifier": "private static final", "type": "BinaryContext", "declarator": "bctx = new BinaryContext(\n        BinaryNoopMetadataHandler.instance(),\n        conf,\n        new NullLogger()\n    )", "var_name": "bctx"}, {"original_string": "private static final byte[] file1 = new byte[] {0, 1, 2, 3, 4, 5};", "modifier": "private static final", "type": "byte[]", "declarator": "file1 = new byte[] {0, 1, 2, 3, 4, 5}", "var_name": "file1"}, {"original_string": "private static final String pathToFile1 = \"/a/b/file_1\";", "modifier": "private static final", "type": "String", "declarator": "pathToFile1 = \"/a/b/file_1\"", "var_name": "pathToFile1"}, {"original_string": "private Ignite ignite;", "modifier": "private", "type": "Ignite", "declarator": "ignite", "var_name": "ignite"}, {"original_string": "private ModelStorage ms;", "modifier": "private", "type": "ModelStorage", "declarator": "ms", "var_name": "ms"}, {"original_string": "private ModelStorateThinClientProcessor msp;", "modifier": "private", "type": "ModelStorateThinClientProcessor", "declarator": "msp", "var_name": "msp"}, {"original_string": "private IgniteCache<String, FileOrDirectory> cache;", "modifier": "private", "type": "IgniteCache<String, FileOrDirectory>", "declarator": "cache", "var_name": "cache"}], "file": "modules/ml/src/test/java/org/apache/ignite/ml/inference/storage/model/thinclient/ModelStorateThinClientProcessorTest.java"}, "test_case": {"identifier": "testReadFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReadFile() {\n        long reqId = 1;\n        BinaryRawWriterEx message = createMessage(reqId, ModelStorateThinClientProcessor.PROCESSOR_ID, ModelStorateThinClientProcessor.Method.READ_FILE);\n        message.writeString(pathToFile1);\n        ClientCustomQueryRequest req = new ClientCustomQueryRequest(toReader(message));\n        ClientResponse resp = req.process(connCtx);\n        assertArrayEquals(file1, ((FileRespose)resp).getData());\n\n        BinaryRawWriterEx out = createWriter();\n        resp.encode(connCtx, out);\n        byte[] result = out.out().arrayCopy();\n\n        BinaryRawWriterEx expectedOut = getExpectedMessageHeader(reqId);\n        expectedOut.writeByteArray(file1);\n\n        byte[] expected = expectedOut.out().arrayCopy();\n        assertArrayEquals(expected, result);\n    }", "signature": "void testReadFile()", "full_signature": "@Test public void testReadFile()", "class_method_signature": "ModelStorateThinClientProcessorTest.testReadFile()", "testcase": true, "constructor": false, "invocations": ["createMessage", "writeString", "toReader", "process", "assertArrayEquals", "getData", "createWriter", "encode", "arrayCopy", "out", "getExpectedMessageHeader", "writeByteArray", "arrayCopy", "out", "assertArrayEquals"]}, "focal_class": {"identifier": "ModelStorateThinClientProcessor", "superclass": "", "interfaces": "implements CustomQueryProcessor", "fields": [{"original_string": "public static final String PROCESSOR_ID = \"ML_MODEL_STORAGE\";", "modifier": "public static final", "type": "String", "declarator": "PROCESSOR_ID = \"ML_MODEL_STORAGE\"", "var_name": "PROCESSOR_ID"}, {"original_string": "private final ModelStorage modelStorage;", "modifier": "private final", "type": "ModelStorage", "declarator": "modelStorage", "var_name": "modelStorage"}], "methods": [{"identifier": "ModelStorateThinClientProcessor", "parameters": "(ModelStorage modelStorage)", "modifiers": "public", "return": "", "signature": " ModelStorateThinClientProcessor(ModelStorage modelStorage)", "full_signature": "public  ModelStorateThinClientProcessor(ModelStorage modelStorage)", "class_method_signature": "ModelStorateThinClientProcessor.ModelStorateThinClientProcessor(ModelStorage modelStorage)", "testcase": false, "constructor": true}, {"identifier": "call", "parameters": "(long requestId, byte methodId, BinaryRawReader reader)", "modifiers": "@Override public", "return": "ClientResponse", "signature": "ClientResponse call(long requestId, byte methodId, BinaryRawReader reader)", "full_signature": "@Override public ClientResponse call(long requestId, byte methodId, BinaryRawReader reader)", "class_method_signature": "ModelStorateThinClientProcessor.call(long requestId, byte methodId, BinaryRawReader reader)", "testcase": false, "constructor": false}, {"identifier": "writeFile", "parameters": "(long reqId, BinaryRawReader reader)", "modifiers": "private", "return": "ClientResponse", "signature": "ClientResponse writeFile(long reqId, BinaryRawReader reader)", "full_signature": "private ClientResponse writeFile(long reqId, BinaryRawReader reader)", "class_method_signature": "ModelStorateThinClientProcessor.writeFile(long reqId, BinaryRawReader reader)", "testcase": false, "constructor": false}, {"identifier": "readFile", "parameters": "(long reqId, BinaryRawReader reader)", "modifiers": "private", "return": "ClientResponse", "signature": "ClientResponse readFile(long reqId, BinaryRawReader reader)", "full_signature": "private ClientResponse readFile(long reqId, BinaryRawReader reader)", "class_method_signature": "ModelStorateThinClientProcessor.readFile(long reqId, BinaryRawReader reader)", "testcase": false, "constructor": false}, {"identifier": "moveFile", "parameters": "(long reqId, BinaryRawReader reader)", "modifiers": "private", "return": "ClientResponse", "signature": "ClientResponse moveFile(long reqId, BinaryRawReader reader)", "full_signature": "private ClientResponse moveFile(long reqId, BinaryRawReader reader)", "class_method_signature": "ModelStorateThinClientProcessor.moveFile(long reqId, BinaryRawReader reader)", "testcase": false, "constructor": false}, {"identifier": "getFileStat", "parameters": "(long reqId, BinaryRawReader reader)", "modifiers": "private", "return": "ClientResponse", "signature": "ClientResponse getFileStat(long reqId, BinaryRawReader reader)", "full_signature": "private ClientResponse getFileStat(long reqId, BinaryRawReader reader)", "class_method_signature": "ModelStorateThinClientProcessor.getFileStat(long reqId, BinaryRawReader reader)", "testcase": false, "constructor": false}, {"identifier": "isExists", "parameters": "(long reqId, BinaryRawReader reader)", "modifiers": "private", "return": "ClientResponse", "signature": "ClientResponse isExists(long reqId, BinaryRawReader reader)", "full_signature": "private ClientResponse isExists(long reqId, BinaryRawReader reader)", "class_method_signature": "ModelStorateThinClientProcessor.isExists(long reqId, BinaryRawReader reader)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(long reqId, BinaryRawReader reader)", "modifiers": "private", "return": "ClientResponse", "signature": "ClientResponse remove(long reqId, BinaryRawReader reader)", "full_signature": "private ClientResponse remove(long reqId, BinaryRawReader reader)", "class_method_signature": "ModelStorateThinClientProcessor.remove(long reqId, BinaryRawReader reader)", "testcase": false, "constructor": false}, {"identifier": "mkdir", "parameters": "(long reqId, BinaryRawReader reader)", "modifiers": "private", "return": "ClientResponse", "signature": "ClientResponse mkdir(long reqId, BinaryRawReader reader)", "full_signature": "private ClientResponse mkdir(long reqId, BinaryRawReader reader)", "class_method_signature": "ModelStorateThinClientProcessor.mkdir(long reqId, BinaryRawReader reader)", "testcase": false, "constructor": false}, {"identifier": "mkdirs", "parameters": "(long reqId, BinaryRawReader reader)", "modifiers": "private", "return": "ClientResponse", "signature": "ClientResponse mkdirs(long reqId, BinaryRawReader reader)", "full_signature": "private ClientResponse mkdirs(long reqId, BinaryRawReader reader)", "class_method_signature": "ModelStorateThinClientProcessor.mkdirs(long reqId, BinaryRawReader reader)", "testcase": false, "constructor": false}, {"identifier": "listFiles", "parameters": "(long reqId, BinaryRawReader reader)", "modifiers": "private", "return": "ClientResponse", "signature": "ClientResponse listFiles(long reqId, BinaryRawReader reader)", "full_signature": "private ClientResponse listFiles(long reqId, BinaryRawReader reader)", "class_method_signature": "ModelStorateThinClientProcessor.listFiles(long reqId, BinaryRawReader reader)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(long requestId, String msg)", "modifiers": "private", "return": "ClientResponse", "signature": "ClientResponse error(long requestId, String msg)", "full_signature": "private ClientResponse error(long requestId, String msg)", "class_method_signature": "ModelStorateThinClientProcessor.error(long requestId, String msg)", "testcase": false, "constructor": false}, {"identifier": "id", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String id()", "full_signature": "@Override public String id()", "class_method_signature": "ModelStorateThinClientProcessor.id()", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/inference/storage/model/thinclient/ModelStorateThinClientProcessor.java"}, "focal_method": {"identifier": "readFile", "parameters": "(long reqId, BinaryRawReader reader)", "modifiers": "private", "return": "ClientResponse", "body": "private ClientResponse readFile(long reqId, BinaryRawReader reader) {\n        String path = reader.readString();\n\n        return modelStorage.lockPaths(() -> {\n            if (!modelStorage.exists(path))\n                return error(reqId, \"File not found [path=\" + path + \"]\");\n\n            if (!modelStorage.isFile(path))\n                return error(reqId, \"File is not regular file [path\" + path + \"]\");\n\n            return new FileRespose(reqId, modelStorage.getFile(path));\n        }, path);\n    }", "signature": "ClientResponse readFile(long reqId, BinaryRawReader reader)", "full_signature": "private ClientResponse readFile(long reqId, BinaryRawReader reader)", "class_method_signature": "ModelStorateThinClientProcessor.readFile(long reqId, BinaryRawReader reader)", "testcase": false, "constructor": false, "invocations": ["readString", "lockPaths", "exists", "error", "isFile", "error", "getFile"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}