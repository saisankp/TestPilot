{"test_class": {"identifier": "PanicResponderActivityTest", "superclass": "extends FDroidProviderTest", "interfaces": "", "fields": [], "file": "app/src/testFull/java/org/fdroid/fdroid/panic/PanicResponderActivityTest.java"}, "test_case": {"identifier": "defaultRepos", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void defaultRepos() {\n        int defaultRepoCount = RepoProviderTest.getDefaultRepoCount(context);\n\n        List<Repo> defaultRepos = RepoProvider.Helper.all(context);\n        assertEquals(defaultRepos.size(), defaultRepoCount);\n\n        Repo gpRepo = RepoProvider.Helper.findByAddress(context, \"https://guardianproject.info/fdroid/repo\");\n        setEnabled(gpRepo, true);\n        assertEquals(2, RepoProvider.Helper.countEnabledRepos(context));\n\n        PanicResponderActivity.resetRepos(context);\n        assertEquals(1, RepoProvider.Helper.countEnabledRepos(context));\n        defaultRepos = RepoProvider.Helper.all(context);\n        assertEquals(defaultRepoCount, defaultRepos.size());\n\n        RepoProviderTest.insertRepo(\n                context,\n                \"https://mock-repo-1.example.com/fdroid/repo\",\n                \"Just a made up repo\",\n                \"ABCDEF1234567890\",\n                \"Mock Repo 1\"\n        );\n        defaultRepos = RepoProvider.Helper.all(context);\n        assertEquals(defaultRepoCount + 1, defaultRepos.size());\n        assertEquals(2, RepoProvider.Helper.countEnabledRepos(context));\n\n        PanicResponderActivity.resetRepos(context);\n        defaultRepos = RepoProvider.Helper.all(context);\n        assertEquals(defaultRepoCount, defaultRepos.size());\n        assertEquals(1, RepoProvider.Helper.countEnabledRepos(context));\n    }", "signature": "void defaultRepos()", "full_signature": "@Test public void defaultRepos()", "class_method_signature": "PanicResponderActivityTest.defaultRepos()", "testcase": true, "constructor": false, "invocations": ["getDefaultRepoCount", "all", "assertEquals", "size", "findByAddress", "setEnabled", "assertEquals", "countEnabledRepos", "resetRepos", "assertEquals", "countEnabledRepos", "all", "assertEquals", "size", "insertRepo", "all", "assertEquals", "size", "assertEquals", "countEnabledRepos", "resetRepos", "all", "assertEquals", "size", "assertEquals", "countEnabledRepos"]}, "focal_class": {"identifier": "PanicResponderActivity", "superclass": "extends AppCompatActivity", "interfaces": "", "fields": [{"original_string": "private static final String TAG = PanicResponderActivity.class.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "TAG = PanicResponderActivity.class.getSimpleName()", "var_name": "TAG"}], "methods": [{"identifier": "onCreate", "parameters": "(Bundle savedInstanceState)", "modifiers": "@Override public", "return": "void", "signature": "void onCreate(Bundle savedInstanceState)", "full_signature": "@Override public void onCreate(Bundle savedInstanceState)", "class_method_signature": "PanicResponderActivity.onCreate(Bundle savedInstanceState)", "testcase": false, "constructor": false}, {"identifier": "resetRepos", "parameters": "(Context context)", "modifiers": "static", "return": "void", "signature": "void resetRepos(Context context)", "full_signature": "static void resetRepos(Context context)", "class_method_signature": "PanicResponderActivity.resetRepos(Context context)", "testcase": false, "constructor": false}, {"identifier": "exitAndClear", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void exitAndClear()", "full_signature": "private void exitAndClear()", "class_method_signature": "PanicResponderActivity.exitAndClear()", "testcase": false, "constructor": false}], "file": "app/src/full/java/org/fdroid/fdroid/panic/PanicResponderActivity.java"}, "focal_method": {"identifier": "resetRepos", "parameters": "(Context context)", "modifiers": "static", "return": "void", "body": "static void resetRepos(Context context) {\n        HashSet<String> enabledAddresses = new HashSet<>();\n        HashSet<String> disabledAddresses = new HashSet<>();\n        String[] defaultReposItems = DBHelper.loadInitialRepos(context).toArray(new String[0]);\n        for (int i = 1; i < defaultReposItems.length; i += DBHelper.REPO_XML_ITEM_COUNT) {\n            if (\"1\".equals(defaultReposItems[i + 3])) {\n                enabledAddresses.add(defaultReposItems[i]);\n            } else {\n                disabledAddresses.add(defaultReposItems[i]);\n            }\n        }\n\n        List<Repo> repos = RepoProvider.Helper.all(context);\n        for (Repo repo : repos) {\n            ContentValues values = new ContentValues(1);\n            if (enabledAddresses.contains(repo.address)) {\n                values.put(Schema.RepoTable.Cols.IN_USE, true);\n                RepoProvider.Helper.update(context, repo, values);\n            } else if (disabledAddresses.contains(repo.address)) {\n                values.put(Schema.RepoTable.Cols.IN_USE, false);\n                RepoProvider.Helper.update(context, repo, values);\n            } else {\n                RepoProvider.Helper.remove(context, repo.getId());\n            }\n        }\n    }", "signature": "void resetRepos(Context context)", "full_signature": "static void resetRepos(Context context)", "class_method_signature": "PanicResponderActivity.resetRepos(Context context)", "testcase": false, "constructor": false, "invocations": ["toArray", "loadInitialRepos", "equals", "add", "add", "all", "contains", "put", "update", "contains", "put", "update", "remove", "getId"]}, "repository": {"repo_id": 22165604, "url": "https://github.com/f-droid/fdroidclient", "stars": 331, "created": "7/23/2014 5:46:02 PM +00:00", "updates": "2020-01-25T14:27:31+00:00", "fork": "False", "license": "licensed"}}