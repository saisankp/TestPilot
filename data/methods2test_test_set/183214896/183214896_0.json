{"test_class": {"identifier": "BaseAuthFilterTest", "superclass": "extends BaseWebappMockTest", "interfaces": "", "fields": [{"original_string": "private AuthFilter authFilter;", "modifier": "private", "type": "AuthFilter", "declarator": "authFilter", "var_name": "authFilter"}], "file": "modality-webapp-auth/src/test/java/com/republicate/modality/webapp/auth/BaseAuthFilterTest.java"}, "test_case": {"identifier": "getAuthentifiedUser", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getAuthentifiedUser() throws Exception\n    {\n        recordConfig();\n        expect(request.getRequestURI()).andAnswer(eval(\"/some-uri\"));\n        expect(request.getParameter(\"Good-Login\")).andAnswer(eval(\"Nestor\"));\n        replayAll();\n        authFilter = new AuthFilter();\n        authFilter.init(filterConfig);\n        authFilter.getAuthentifiedUser(request);\n    }", "signature": "void getAuthentifiedUser()", "full_signature": "@Test public void getAuthentifiedUser()", "class_method_signature": "BaseAuthFilterTest.getAuthentifiedUser()", "testcase": true, "constructor": false, "invocations": ["recordConfig", "andAnswer", "expect", "getRequestURI", "eval", "andAnswer", "expect", "getParameter", "eval", "replayAll", "init", "getAuthentifiedUser"]}, "focal_class": {"identifier": "BaseAuthFilter", "superclass": "extends ModalityFilter", "interfaces": "", "fields": [{"original_string": "protected static Logger logger = LoggerFactory.getLogger(\"auth\");", "modifier": "protected static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(\"auth\")", "var_name": "logger"}, {"original_string": "public static final String REALM = \"auth.realm\";", "modifier": "public static final", "type": "String", "declarator": "REALM = \"auth.realm\"", "var_name": "REALM"}, {"original_string": "public static final String PROTECTED_RESOURCES = \"auth.protected\";", "modifier": "public static final", "type": "String", "declarator": "PROTECTED_RESOURCES = \"auth.protected\"", "var_name": "PROTECTED_RESOURCES"}, {"original_string": "public static final String PUBLIC_RESOURCES = \"auth.public\";", "modifier": "public static final", "type": "String", "declarator": "PUBLIC_RESOURCES = \"auth.public\"", "var_name": "PUBLIC_RESOURCES"}, {"original_string": "private String realm = null;", "modifier": "private", "type": "String", "declarator": "realm = null", "var_name": "realm"}, {"original_string": "private Pattern protectedResources = null;", "modifier": "private", "type": "Pattern", "declarator": "protectedResources = null", "var_name": "protectedResources"}, {"original_string": "private Pattern publicResources = null;", "modifier": "private", "type": "Pattern", "declarator": "publicResources = null", "var_name": "publicResources"}], "methods": [{"identifier": "isProtectedURI", "parameters": "(String uri)", "modifiers": "protected", "return": "boolean", "signature": "boolean isProtectedURI(String uri)", "full_signature": "protected boolean isProtectedURI(String uri)", "class_method_signature": "BaseAuthFilter.isProtectedURI(String uri)", "testcase": false, "constructor": false}, {"identifier": "processPublicRequest", "parameters": "(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)", "modifiers": "protected", "return": "void", "signature": "void processPublicRequest(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)", "full_signature": "protected void processPublicRequest(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)", "class_method_signature": "BaseAuthFilter.processPublicRequest(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)", "testcase": false, "constructor": false}, {"identifier": "getAuthentifiedUser", "parameters": "(HttpServletRequest request)", "modifiers": "protected", "return": "USER", "signature": "USER getAuthentifiedUser(HttpServletRequest request)", "full_signature": "protected USER getAuthentifiedUser(HttpServletRequest request)", "class_method_signature": "BaseAuthFilter.getAuthentifiedUser(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(HttpServletRequest request)", "modifiers": "protected abstract", "return": "USER", "signature": "USER authenticate(HttpServletRequest request)", "full_signature": "protected abstract USER authenticate(HttpServletRequest request)", "class_method_signature": "BaseAuthFilter.authenticate(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "processProtectedRequest", "parameters": "(USER logged, HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)", "modifiers": "protected", "return": "void", "signature": "void processProtectedRequest(USER logged, HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)", "full_signature": "protected void processProtectedRequest(USER logged, HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)", "class_method_signature": "BaseAuthFilter.processProtectedRequest(USER logged, HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)", "testcase": false, "constructor": false}, {"identifier": "processForbiddenRequest", "parameters": "(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)", "modifiers": "protected", "return": "void", "signature": "void processForbiddenRequest(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)", "full_signature": "protected void processForbiddenRequest(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)", "class_method_signature": "BaseAuthFilter.processForbiddenRequest(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(FilterConfig filterConfig)", "modifiers": "@Override public", "return": "void", "signature": "void init(FilterConfig filterConfig)", "full_signature": "@Override public void init(FilterConfig filterConfig)", "class_method_signature": "BaseAuthFilter.init(FilterConfig filterConfig)", "testcase": false, "constructor": false}, {"identifier": "doFilter", "parameters": "(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)", "modifiers": "@Override public", "return": "void", "signature": "void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)", "full_signature": "@Override public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)", "class_method_signature": "BaseAuthFilter.doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void destroy()", "full_signature": "@Override public void destroy()", "class_method_signature": "BaseAuthFilter.destroy()", "testcase": false, "constructor": false}, {"identifier": "displayUser", "parameters": "(USER user)", "modifiers": "protected", "return": "String", "signature": "String displayUser(USER user)", "full_signature": "protected String displayUser(USER user)", "class_method_signature": "BaseAuthFilter.displayUser(USER user)", "testcase": false, "constructor": false}, {"identifier": "getRealm", "parameters": "()", "modifiers": "protected final", "return": "String", "signature": "String getRealm()", "full_signature": "protected final String getRealm()", "class_method_signature": "BaseAuthFilter.getRealm()", "testcase": false, "constructor": false}], "file": "modality-webapp-auth/src/main/java/com/republicate/modality/webapp/auth/BaseAuthFilter.java"}, "focal_method": {"identifier": "getAuthentifiedUser", "parameters": "(HttpServletRequest request)", "modifiers": "protected", "return": "USER", "body": "protected USER getAuthentifiedUser(HttpServletRequest request) throws ServletException\n    {\n        return authenticate(request);\n    }", "signature": "USER getAuthentifiedUser(HttpServletRequest request)", "full_signature": "protected USER getAuthentifiedUser(HttpServletRequest request)", "class_method_signature": "BaseAuthFilter.getAuthentifiedUser(HttpServletRequest request)", "testcase": false, "constructor": false, "invocations": ["authenticate"]}, "repository": {"repo_id": 183214896, "url": "https://github.com/arkanovicz/modality", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 9, "size": 945, "license": "licensed"}}