{"test_class": {"identifier": "DittoAuthorizationContextTypeTest", "superclass": "", "interfaces": "", "fields": [], "file": "model/base/src/test/java/org/eclipse/ditto/model/base/auth/DittoAuthorizationContextTypeTest.java"}, "test_case": {"identifier": "doesNotContainGivenLabel", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void doesNotContainGivenLabel() {\n        final AuthorizationContextType authorizationContextType = ImmutableAuthorizationContextType.of(\"abc\");\n\n        assertThat(DittoAuthorizationContextType.contains(authorizationContextType)).isFalse();\n    }", "signature": "void doesNotContainGivenLabel()", "full_signature": "@Test public void doesNotContainGivenLabel()", "class_method_signature": "DittoAuthorizationContextTypeTest.doesNotContainGivenLabel()", "testcase": true, "constructor": false, "invocations": ["of", "isFalse", "assertThat", "contains"]}, "focal_class": {"identifier": "DittoAuthorizationContextType", "superclass": "extends AuthorizationContextType", "interfaces": "", "fields": [{"original_string": "public static final DittoAuthorizationContextType PRE_AUTHENTICATED_HTTP =\n            new DittoAuthorizationContextType(\"pre-authenticated-http\");", "modifier": "public static final", "type": "DittoAuthorizationContextType", "declarator": "PRE_AUTHENTICATED_HTTP =\n            new DittoAuthorizationContextType(\"pre-authenticated-http\")", "var_name": "PRE_AUTHENTICATED_HTTP"}, {"original_string": "public static final DittoAuthorizationContextType PRE_AUTHENTICATED_CONNECTION =\n            new DittoAuthorizationContextType(\"pre-authenticated-connection\");", "modifier": "public static final", "type": "DittoAuthorizationContextType", "declarator": "PRE_AUTHENTICATED_CONNECTION =\n            new DittoAuthorizationContextType(\"pre-authenticated-connection\")", "var_name": "PRE_AUTHENTICATED_CONNECTION"}, {"original_string": "public static final DittoAuthorizationContextType JWT = new DittoAuthorizationContextType(\"jwt\");", "modifier": "public static final", "type": "DittoAuthorizationContextType", "declarator": "JWT = new DittoAuthorizationContextType(\"jwt\")", "var_name": "JWT"}, {"original_string": "public static final DittoAuthorizationContextType UNSPECIFIED = new DittoAuthorizationContextType(\"unspecified\");", "modifier": "public static final", "type": "DittoAuthorizationContextType", "declarator": "UNSPECIFIED = new DittoAuthorizationContextType(\"unspecified\")", "var_name": "UNSPECIFIED"}], "methods": [{"identifier": "DittoAuthorizationContextType", "parameters": "(final String type)", "modifiers": "private", "return": "", "signature": " DittoAuthorizationContextType(final String type)", "full_signature": "private  DittoAuthorizationContextType(final String type)", "class_method_signature": "DittoAuthorizationContextType.DittoAuthorizationContextType(final String type)", "testcase": false, "constructor": true}, {"identifier": "values", "parameters": "()", "modifiers": "public static", "return": "AuthorizationContextType[]", "signature": "AuthorizationContextType[] values()", "full_signature": "public static AuthorizationContextType[] values()", "class_method_signature": "DittoAuthorizationContextType.values()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(@Nullable final AuthorizationContextType authorizationContextType)", "modifiers": "public static", "return": "boolean", "signature": "boolean contains(@Nullable final AuthorizationContextType authorizationContextType)", "full_signature": "public static boolean contains(@Nullable final AuthorizationContextType authorizationContextType)", "class_method_signature": "DittoAuthorizationContextType.contains(@Nullable final AuthorizationContextType authorizationContextType)", "testcase": false, "constructor": false}], "file": "model/base/src/main/java/org/eclipse/ditto/model/base/auth/DittoAuthorizationContextType.java"}, "focal_method": {"identifier": "contains", "parameters": "(@Nullable final AuthorizationContextType authorizationContextType)", "modifiers": "public static", "return": "boolean", "body": "public static boolean contains(@Nullable final AuthorizationContextType authorizationContextType) {\n        if (null != authorizationContextType) {\n            for (final AuthorizationContextType dittoAuthorizationContextType : values()) {\n                if (dittoAuthorizationContextType.equals(authorizationContextType)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }", "signature": "boolean contains(@Nullable final AuthorizationContextType authorizationContextType)", "full_signature": "public static boolean contains(@Nullable final AuthorizationContextType authorizationContextType)", "class_method_signature": "DittoAuthorizationContextType.contains(@Nullable final AuthorizationContextType authorizationContextType)", "testcase": false, "constructor": false, "invocations": ["values", "equals"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}