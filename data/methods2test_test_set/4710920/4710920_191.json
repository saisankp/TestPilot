{"test_class": {"identifier": "TimeoutFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TimeoutFilter timeoutFilter = new TimeoutFilter();", "modifier": "private", "type": "TimeoutFilter", "declarator": "timeoutFilter = new TimeoutFilter()", "var_name": "timeoutFilter"}], "file": "dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/TimeoutFilterTest.java"}, "test_case": {"identifier": "testInvokeWithTimeout", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInvokeWithTimeout() throws Exception {\n        int timeout = 100;\n\n        URL url = URL.valueOf(\"test://test:11/test?accesslog=true&group=dubbo&version=1.1&timeout=\" + timeout);\n        Invoker invoker = new BlockMyInvoker(url, (timeout + 100));\n\n        Invocation invocation = Mockito.mock(Invocation.class);\n        when(invocation.getMethodName()).thenReturn(\"testInvokeWithTimeout\");\n\n        Result result = timeoutFilter.invoke(invoker, invocation);\n        Assertions.assertEquals(\"Dubbo\", result.getValue());\n\n    }", "signature": "void testInvokeWithTimeout()", "full_signature": "@Test public void testInvokeWithTimeout()", "class_method_signature": "TimeoutFilterTest.testInvokeWithTimeout()", "testcase": true, "constructor": false, "invocations": ["valueOf", "mock", "thenReturn", "when", "getMethodName", "invoke", "assertEquals", "getValue"]}, "focal_class": {"identifier": "TimeoutFilter", "superclass": "", "interfaces": "implements Filter, Filter.Listener", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(TimeoutFilter.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(TimeoutFilter.class)", "var_name": "logger"}], "methods": [{"identifier": "invoke", "parameters": "(Invoker<?> invoker, Invocation invocation)", "modifiers": "@Override public", "return": "Result", "signature": "Result invoke(Invoker<?> invoker, Invocation invocation)", "full_signature": "@Override public Result invoke(Invoker<?> invoker, Invocation invocation)", "class_method_signature": "TimeoutFilter.invoke(Invoker<?> invoker, Invocation invocation)", "testcase": false, "constructor": false}, {"identifier": "onResponse", "parameters": "(Result appResponse, Invoker<?> invoker, Invocation invocation)", "modifiers": "@Override public", "return": "void", "signature": "void onResponse(Result appResponse, Invoker<?> invoker, Invocation invocation)", "full_signature": "@Override public void onResponse(Result appResponse, Invoker<?> invoker, Invocation invocation)", "class_method_signature": "TimeoutFilter.onResponse(Result appResponse, Invoker<?> invoker, Invocation invocation)", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(Throwable t, Invoker<?> invoker, Invocation invocation)", "modifiers": "@Override public", "return": "void", "signature": "void onError(Throwable t, Invoker<?> invoker, Invocation invocation)", "full_signature": "@Override public void onError(Throwable t, Invoker<?> invoker, Invocation invocation)", "class_method_signature": "TimeoutFilter.onError(Throwable t, Invoker<?> invoker, Invocation invocation)", "testcase": false, "constructor": false}], "file": "dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/filter/TimeoutFilter.java"}, "focal_method": {"identifier": "invoke", "parameters": "(Invoker<?> invoker, Invocation invocation)", "modifiers": "@Override public", "return": "Result", "body": "@Override\n    public Result invoke(Invoker<?> invoker, Invocation invocation) throws RpcException {\n        return invoker.invoke(invocation);\n    }", "signature": "Result invoke(Invoker<?> invoker, Invocation invocation)", "full_signature": "@Override public Result invoke(Invoker<?> invoker, Invocation invocation)", "class_method_signature": "TimeoutFilter.invoke(Invoker<?> invoker, Invocation invocation)", "testcase": false, "constructor": false, "invocations": ["invoke"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}