{"test_class": {"identifier": "ProtobufUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "brpc-java-communication/src/test/java/com/baidu/brpc/utils/ProtobufUtilsTest.java"}, "test_case": {"identifier": "testGetMessageType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetMessageType() throws Exception {\n        Method method = EchoService.class.getMethod(\"echo\", Echo.EchoRequest.class);\n        ProtobufUtils.MessageType messageType = ProtobufUtils.getMessageType(method);\n        Assert.assertTrue(messageType == ProtobufUtils.MessageType.PROTOBUF);\n\n        Method method2 = com.baidu.brpc.protocol.jprotobuf.EchoService.class.getMethod(\"echo\", EchoRequest.class);\n        ProtobufUtils.MessageType messageType2 = ProtobufUtils.getMessageType(method2);\n        Assert.assertTrue(messageType2 == ProtobufUtils.MessageType.JPROTOBUF);\n    }", "signature": "void testGetMessageType()", "full_signature": "@Test public void testGetMessageType()", "class_method_signature": "ProtobufUtilsTest.testGetMessageType()", "testcase": true, "constructor": false, "invocations": ["getMethod", "getMessageType", "assertTrue", "getMethod", "getMessageType", "assertTrue"]}, "focal_class": {"identifier": "ProtobufUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getMessageType", "parameters": "(Method method)", "modifiers": "public static", "return": "MessageType", "signature": "MessageType getMessageType(Method method)", "full_signature": "public static MessageType getMessageType(Method method)", "class_method_signature": "ProtobufUtils.getMessageType(Method method)", "testcase": false, "constructor": false}, {"identifier": "parseFrom", "parameters": "(InputStream inputStream, Class clazz)", "modifiers": "public static", "return": "Message", "signature": "Message parseFrom(InputStream inputStream, Class clazz)", "full_signature": "public static Message parseFrom(InputStream inputStream, Class clazz)", "class_method_signature": "ProtobufUtils.parseFrom(InputStream inputStream, Class clazz)", "testcase": false, "constructor": false}, {"identifier": "parseFrom", "parameters": "(byte[] inputBytes, Class clazz)", "modifiers": "public static", "return": "Message", "signature": "Message parseFrom(byte[] inputBytes, Class clazz)", "full_signature": "public static Message parseFrom(byte[] inputBytes, Class clazz)", "class_method_signature": "ProtobufUtils.parseFrom(byte[] inputBytes, Class clazz)", "testcase": false, "constructor": false}, {"identifier": "parseFrom", "parameters": "(ByteBuf input, Message defaultInstance)", "modifiers": "public static", "return": "Message", "signature": "Message parseFrom(ByteBuf input, Message defaultInstance)", "full_signature": "public static Message parseFrom(ByteBuf input, Message defaultInstance)", "class_method_signature": "ProtobufUtils.parseFrom(ByteBuf input, Message defaultInstance)", "testcase": false, "constructor": false}, {"identifier": "parseFrom", "parameters": "(byte[] input, Message defaultInstance)", "modifiers": "public static", "return": "Message", "signature": "Message parseFrom(byte[] input, Message defaultInstance)", "full_signature": "public static Message parseFrom(byte[] input, Message defaultInstance)", "class_method_signature": "ProtobufUtils.parseFrom(byte[] input, Message defaultInstance)", "testcase": false, "constructor": false}, {"identifier": "parseFrom", "parameters": "(DynamicCompositeByteBuf input, Message defaultInstance)", "modifiers": "public static", "return": "Message", "signature": "Message parseFrom(DynamicCompositeByteBuf input, Message defaultInstance)", "full_signature": "public static Message parseFrom(DynamicCompositeByteBuf input, Message defaultInstance)", "class_method_signature": "ProtobufUtils.parseFrom(DynamicCompositeByteBuf input, Message defaultInstance)", "testcase": false, "constructor": false}], "file": "brpc-java-communication/src/main/java/com/baidu/brpc/utils/ProtobufUtils.java"}, "focal_method": {"identifier": "getMessageType", "parameters": "(Method method)", "modifiers": "public static", "return": "MessageType", "body": "public static MessageType getMessageType(Method method) {\n        Class<?>[] types = method.getParameterTypes();\n        Class returnType = method.getReturnType();\n        if (types.length < 0) {\n            throw new IllegalArgumentException(\"invalid rpc method params\");\n        }\n\n        if (types.length != 1) {\n            return MessageType.POJO;\n        }\n\n        Class<?> inputType = types[0];\n        if (Message.class.isAssignableFrom(inputType)\n                && Message.class.isAssignableFrom(returnType)) {\n            return MessageType.PROTOBUF;\n        }\n\n        ProtobufClass protobufClass = inputType.getAnnotation(ProtobufClass.class);\n        if (protobufClass != null) {\n            return MessageType.JPROTOBUF;\n        }\n\n        Field[] fields = inputType.getDeclaredFields();\n        for (Field field : fields) {\n            Protobuf protobuf = field.getAnnotation(Protobuf.class);\n            if (protobuf != null) {\n                return MessageType.JPROTOBUF;\n            }\n        }\n\n        return MessageType.POJO;\n    }", "signature": "MessageType getMessageType(Method method)", "full_signature": "public static MessageType getMessageType(Method method)", "class_method_signature": "ProtobufUtils.getMessageType(Method method)", "testcase": false, "constructor": false, "invocations": ["getParameterTypes", "getReturnType", "isAssignableFrom", "isAssignableFrom", "getAnnotation", "getDeclaredFields", "getAnnotation"]}, "repository": {"repo_id": 162548942, "url": "https://github.com/baidu/brpc-java", "language": "Java", "is_fork": false, "fork_count": 175, "stargazer_count": 551, "size": 3271, "license": "licensed"}}