{"test_class": {"identifier": "TimeSeriesTest", "superclass": "", "interfaces": "", "fields": [], "file": "machine-learning/machine-learning/src/test/java/org/openimaj/ml/timeseries/TimeSeriesTest.java"}, "test_case": {"identifier": "testDoubleTimeSeriesIterator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testDoubleTimeSeriesIterator() throws TimeSeriesSetException{\n\t\tDoubleTimeSeries ts = new DoubleTimeSeries();\n\t\tlong[] times = new long[]{1,2,5,9,10};\n\t\tdouble[] values = new double[]{1,2,5,9,10};\n\t\t\n\t\tts.set(times, values);\n//\t\tfor (IndependentPair<Long,Double> independentPair : ts) {\n//\t\t\tSystem.out.println(ts);\n//\t\t}\n\t}", "signature": "void testDoubleTimeSeriesIterator()", "full_signature": "@Test public void testDoubleTimeSeriesIterator()", "class_method_signature": "TimeSeriesTest.testDoubleTimeSeriesIterator()", "testcase": true, "constructor": false, "invocations": ["set"]}, "focal_class": {"identifier": "TimeSeries", "superclass": "", "interfaces": "implements\n\t\t\tIterable<IndependentPair<Long, SINGLE_TYPE>>", "fields": [], "methods": [{"identifier": "get", "parameters": "(long time)", "modifiers": "public", "return": "RETURNTYPE", "signature": "RETURNTYPE get(long time)", "full_signature": "public RETURNTYPE get(long time)", "class_method_signature": "TimeSeries.get(long time)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(long time, int nbefore, int nafter)", "modifiers": "public abstract", "return": "RETURNTYPE", "signature": "RETURNTYPE get(long time, int nbefore, int nafter)", "full_signature": "public abstract RETURNTYPE get(long time, int nbefore, int nafter)", "class_method_signature": "TimeSeries.get(long time, int nbefore, int nafter)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(long time, int nbefore, int nafter, RETURNTYPE output)", "modifiers": "public abstract", "return": "RETURNTYPE", "signature": "RETURNTYPE get(long time, int nbefore, int nafter, RETURNTYPE output)", "full_signature": "public abstract RETURNTYPE get(long time, int nbefore, int nafter, RETURNTYPE output)", "class_method_signature": "TimeSeries.get(long time, int nbefore, int nafter, RETURNTYPE output)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(long time, long threshbefore, long threshafter)", "modifiers": "public abstract", "return": "RETURNTYPE", "signature": "RETURNTYPE get(long time, long threshbefore, long threshafter)", "full_signature": "public abstract RETURNTYPE get(long time, long threshbefore, long threshafter)", "class_method_signature": "TimeSeries.get(long time, long threshbefore, long threshafter)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(long start, long end)", "modifiers": "public abstract", "return": "RETURNTYPE", "signature": "RETURNTYPE get(long start, long end)", "full_signature": "public abstract RETURNTYPE get(long start, long end)", "class_method_signature": "TimeSeries.get(long start, long end)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(long[] time, DATA data)", "modifiers": "public abstract", "return": "void", "signature": "void set(long[] time, DATA data)", "full_signature": "public abstract void set(long[] time, DATA data)", "class_method_signature": "TimeSeries.set(long[] time, DATA data)", "testcase": false, "constructor": false}, {"identifier": "getTimes", "parameters": "()", "modifiers": "public abstract", "return": "long[]", "signature": "long[] getTimes()", "full_signature": "public abstract long[] getTimes()", "class_method_signature": "TimeSeries.getTimes()", "testcase": false, "constructor": false}, {"identifier": "getData", "parameters": "()", "modifiers": "public abstract", "return": "DATA", "signature": "DATA getData()", "full_signature": "public abstract DATA getData()", "class_method_signature": "TimeSeries.getData()", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "()", "modifiers": "public abstract", "return": "RETURNTYPE", "signature": "RETURNTYPE newInstance()", "full_signature": "public abstract RETURNTYPE newInstance()", "class_method_signature": "TimeSeries.newInstance()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public abstract", "return": "int", "signature": "int size()", "full_signature": "public abstract int size()", "class_method_signature": "TimeSeries.size()", "testcase": false, "constructor": false}, {"identifier": "internalAssign", "parameters": "(RETURNTYPE interpolate)", "modifiers": "public abstract", "return": "void", "signature": "void internalAssign(RETURNTYPE interpolate)", "full_signature": "public abstract void internalAssign(RETURNTYPE interpolate)", "class_method_signature": "TimeSeries.internalAssign(RETURNTYPE interpolate)", "testcase": false, "constructor": false}, {"identifier": "internalAssign", "parameters": "(long[] times, DATA data)", "modifiers": "public", "return": "void", "signature": "void internalAssign(long[] times, DATA data)", "full_signature": "public void internalAssign(long[] times, DATA data)", "class_method_signature": "TimeSeries.internalAssign(long[] times, DATA data)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "RETURNTYPE", "signature": "RETURNTYPE copy()", "full_signature": "@SuppressWarnings(\"unchecked\") public RETURNTYPE copy()", "class_method_signature": "TimeSeries.copy()", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(TimeSeriesProcessor<DATA, SINGLE_TYPE, RETURNTYPE> tsp)", "modifiers": "public", "return": "RETURNTYPE", "signature": "RETURNTYPE process(TimeSeriesProcessor<DATA, SINGLE_TYPE, RETURNTYPE> tsp)", "full_signature": "public RETURNTYPE process(TimeSeriesProcessor<DATA, SINGLE_TYPE, RETURNTYPE> tsp)", "class_method_signature": "TimeSeries.process(TimeSeriesProcessor<DATA, SINGLE_TYPE, RETURNTYPE> tsp)", "testcase": false, "constructor": false}, {"identifier": "self", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "RETURNTYPE", "signature": "RETURNTYPE self()", "full_signature": "@SuppressWarnings(\"unchecked\") private RETURNTYPE self()", "class_method_signature": "TimeSeries.self()", "testcase": false, "constructor": false}, {"identifier": "processInplace", "parameters": "(TimeSeriesProcessor<DATA, SINGLE_TYPE, RETURNTYPE> tsp)", "modifiers": "public", "return": "RETURNTYPE", "signature": "RETURNTYPE processInplace(TimeSeriesProcessor<DATA, SINGLE_TYPE, RETURNTYPE> tsp)", "full_signature": "public RETURNTYPE processInplace(TimeSeriesProcessor<DATA, SINGLE_TYPE, RETURNTYPE> tsp)", "class_method_signature": "TimeSeries.processInplace(TimeSeriesProcessor<DATA, SINGLE_TYPE, RETURNTYPE> tsp)", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(\n\t\t\tTimeSeriesConverter<DATA, SINGLE_TYPE, RETURNTYPE, OUTDATA, OUTSING, OUTRET> converter)", "modifiers": "public", "return": "OUTRET", "signature": "OUTRET convert(\n\t\t\tTimeSeriesConverter<DATA, SINGLE_TYPE, RETURNTYPE, OUTDATA, OUTSING, OUTRET> converter)", "full_signature": "public OUTRET convert(\n\t\t\tTimeSeriesConverter<DATA, SINGLE_TYPE, RETURNTYPE, OUTDATA, OUTSING, OUTRET> converter)", "class_method_signature": "TimeSeries.convert(\n\t\t\tTimeSeriesConverter<DATA, SINGLE_TYPE, RETURNTYPE, OUTDATA, OUTSING, OUTRET> converter)", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(\n\t\t\tTimeSeriesConverter<DATA, SINGLE_TYPE, RETURNTYPE, OUTDATA, OUTSING, OUTRET> converter,\n\t\t\tTimeSeriesProcessor<OUTDATA, OUTSING, OUTRET> tsp)", "modifiers": "public", "return": "OUTRET", "signature": "OUTRET convert(\n\t\t\tTimeSeriesConverter<DATA, SINGLE_TYPE, RETURNTYPE, OUTDATA, OUTSING, OUTRET> converter,\n\t\t\tTimeSeriesProcessor<OUTDATA, OUTSING, OUTRET> tsp)", "full_signature": "public OUTRET convert(\n\t\t\tTimeSeriesConverter<DATA, SINGLE_TYPE, RETURNTYPE, OUTDATA, OUTSING, OUTRET> converter,\n\t\t\tTimeSeriesProcessor<OUTDATA, OUTSING, OUTRET> tsp)", "class_method_signature": "TimeSeries.convert(\n\t\t\tTimeSeriesConverter<DATA, SINGLE_TYPE, RETURNTYPE, OUTDATA, OUTSING, OUTRET> converter,\n\t\t\tTimeSeriesProcessor<OUTDATA, OUTSING, OUTRET> tsp)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public abstract", "return": "String", "signature": "String toString()", "full_signature": "@Override public abstract String toString()", "class_method_signature": "TimeSeries.toString()", "testcase": false, "constructor": false}], "file": "machine-learning/machine-learning/src/main/java/org/openimaj/ml/timeseries/TimeSeries.java"}, "focal_method": {"identifier": "set", "parameters": "(long[] time, DATA data)", "modifiers": "public abstract", "return": "void", "body": "public abstract void set(long[] time, DATA data) throws TimeSeriesSetException;", "signature": "void set(long[] time, DATA data)", "full_signature": "public abstract void set(long[] time, DATA data)", "class_method_signature": "TimeSeries.set(long[] time, DATA data)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4114800, "url": "https://github.com/sinjax/trendminer-java", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 10, "size": 209307, "license": "licensed"}}