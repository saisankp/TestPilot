{"test_class": {"identifier": "NacosRegistryHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "registry/registry-nacos/src/test/java/com/alipay/sofa/rpc/registry/nacos/NacosRegistryHelperTest.java"}, "test_case": {"identifier": "convertInstancesToProviders", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void convertInstancesToProviders() {\n        Instance instance = new Instance();\n        instance.setClusterName(NacosRegistryHelper.DEFAULT_CLUSTER);\n        instance.setIp(\"1.1.1.1\");\n        instance.setPort(12200);\n        instance.setServiceName(\"com.alipay.xxx.TestService\");\n\n        List<ProviderInfo> providerInfos = NacosRegistryHelper\n            .convertInstancesToProviders(Lists.newArrayList(instance));\n        assertNotNull(providerInfos);\n        assertEquals(1, providerInfos.size());\n\n        ProviderInfo providerInfo = providerInfos.get(0);\n        assertNotNull(providerInfo);\n        assertEquals(instance.getIp(), providerInfo.getHost());\n        assertEquals(instance.getPort(), providerInfo.getPort());\n\n        assertEquals(RpcConfigs.getStringValue(RpcOptions.DEFAULT_PROTOCOL), providerInfo.getProtocolType());\n\n        Map<String, String> metaData = Maps.newHashMap();\n        metaData.put(RpcConstants.CONFIG_KEY_PROTOCOL, RpcConstants.PROTOCOL_TYPE_REST);\n        instance.setMetadata(metaData);\n\n        providerInfos = NacosRegistryHelper.convertInstancesToProviders(Lists.newArrayList(instance));\n        providerInfo = providerInfos.get(0);\n        assertEquals(RpcConstants.PROTOCOL_TYPE_REST, providerInfo.getProtocolType());\n    }", "signature": "void convertInstancesToProviders()", "full_signature": "@Test public void convertInstancesToProviders()", "class_method_signature": "NacosRegistryHelperTest.convertInstancesToProviders()", "testcase": true, "constructor": false, "invocations": ["setClusterName", "setIp", "setPort", "setServiceName", "convertInstancesToProviders", "newArrayList", "assertNotNull", "assertEquals", "size", "get", "assertNotNull", "assertEquals", "getIp", "getHost", "assertEquals", "getPort", "getPort", "assertEquals", "getStringValue", "getProtocolType", "newHashMap", "put", "setMetadata", "convertInstancesToProviders", "newArrayList", "get", "assertEquals", "getProtocolType"]}, "focal_class": {"identifier": "NacosRegistryHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String DEFAULT_CLUSTER = \"default-cluster\";", "modifier": "static final", "type": "String", "declarator": "DEFAULT_CLUSTER = \"default-cluster\"", "var_name": "DEFAULT_CLUSTER"}], "methods": [{"identifier": "buildServiceName", "parameters": "(AbstractInterfaceConfig config, String protocol)", "modifiers": "static", "return": "String", "signature": "String buildServiceName(AbstractInterfaceConfig config, String protocol)", "full_signature": "static String buildServiceName(AbstractInterfaceConfig config, String protocol)", "class_method_signature": "NacosRegistryHelper.buildServiceName(AbstractInterfaceConfig config, String protocol)", "testcase": false, "constructor": false}, {"identifier": "convertProviderToInstances", "parameters": "(ProviderConfig providerConfig)", "modifiers": "static", "return": "List<Instance>", "signature": "List<Instance> convertProviderToInstances(ProviderConfig providerConfig)", "full_signature": "static List<Instance> convertProviderToInstances(ProviderConfig providerConfig)", "class_method_signature": "NacosRegistryHelper.convertProviderToInstances(ProviderConfig providerConfig)", "testcase": false, "constructor": false}, {"identifier": "convertInstancesToProviders", "parameters": "(List<Instance> allInstances)", "modifiers": "static", "return": "List<ProviderInfo>", "signature": "List<ProviderInfo> convertInstancesToProviders(List<Instance> allInstances)", "full_signature": "static List<ProviderInfo> convertInstancesToProviders(List<Instance> allInstances)", "class_method_signature": "NacosRegistryHelper.convertInstancesToProviders(List<Instance> allInstances)", "testcase": false, "constructor": false}, {"identifier": "convertInstanceToUrl", "parameters": "(Instance instance)", "modifiers": "private static", "return": "String", "signature": "String convertInstanceToUrl(Instance instance)", "full_signature": "private static String convertInstanceToUrl(Instance instance)", "class_method_signature": "NacosRegistryHelper.convertInstanceToUrl(Instance instance)", "testcase": false, "constructor": false}], "file": "registry/registry-nacos/src/main/java/com/alipay/sofa/rpc/registry/nacos/NacosRegistryHelper.java"}, "focal_method": {"identifier": "convertInstancesToProviders", "parameters": "(List<Instance> allInstances)", "modifiers": "static", "return": "List<ProviderInfo>", "body": "static List<ProviderInfo> convertInstancesToProviders(List<Instance> allInstances) {\n        List<ProviderInfo> providerInfos = new ArrayList<ProviderInfo>();\n        if (CommonUtils.isEmpty(allInstances)) {\n            return providerInfos;\n        }\n\n        for (Instance instance : allInstances) {\n            String url = convertInstanceToUrl(instance);\n            ProviderInfo providerInfo = ProviderHelper.toProviderInfo(url);\n            providerInfos.add(providerInfo);\n        }\n        return providerInfos;\n    }", "signature": "List<ProviderInfo> convertInstancesToProviders(List<Instance> allInstances)", "full_signature": "static List<ProviderInfo> convertInstancesToProviders(List<Instance> allInstances)", "class_method_signature": "NacosRegistryHelper.convertInstancesToProviders(List<Instance> allInstances)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "convertInstanceToUrl", "toProviderInfo", "add"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}