{"test_class": {"identifier": "EPersonTest", "superclass": "extends AbstractUnitTest", "interfaces": "", "fields": [{"original_string": "protected EPersonService ePersonService = EPersonServiceFactory.getInstance().getEPersonService();", "modifier": "protected", "type": "EPersonService", "declarator": "ePersonService = EPersonServiceFactory.getInstance().getEPersonService()", "var_name": "ePersonService"}, {"original_string": "private static final Logger log = Logger.getLogger(EPersonTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.getLogger(EPersonTest.class)", "var_name": "log"}], "file": "dspace-api/src/test/java/org/dspace/eperson/EPersonTest.java"}, "test_case": {"identifier": "testGetType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetType()\n            throws SQLException\n    {\n        System.out.println(\"getType\");\n        int expResult = Constants.EPERSON;\n        int result = eperson.getType();\n        assertEquals(\"Should return Constants.EPERSON\", expResult, result);\n    }", "signature": "void testGetType()", "full_signature": "@Test public void testGetType()", "class_method_signature": "EPersonTest.testGetType()", "testcase": true, "constructor": false, "invocations": ["println", "getType", "assertEquals"]}, "focal_class": {"identifier": "EPerson", "superclass": "extends DSpaceObject", "interfaces": "implements DSpaceObjectLegacySupport", "fields": [{"original_string": "@Column(name=\"eperson_id\", insertable = false, updatable = false)\n    private Integer legacyId;", "modifier": "@Column(name=\"eperson_id\", insertable = false, updatable = false)\n    private", "type": "Integer", "declarator": "legacyId", "var_name": "legacyId"}, {"original_string": "@Column(name=\"netid\", length = 64)\n    private String netid;", "modifier": "@Column(name=\"netid\", length = 64)\n    private", "type": "String", "declarator": "netid", "var_name": "netid"}, {"original_string": "@Column(name=\"last_active\")\n    @Temporal(TemporalType.TIMESTAMP)\n    private Date lastActive;", "modifier": "@Column(name=\"last_active\")\n    @Temporal(TemporalType.TIMESTAMP)\n    private", "type": "Date", "declarator": "lastActive", "var_name": "lastActive"}, {"original_string": "@Column(name=\"can_log_in\", nullable = true)\n    private Boolean canLogIn;", "modifier": "@Column(name=\"can_log_in\", nullable = true)\n    private", "type": "Boolean", "declarator": "canLogIn", "var_name": "canLogIn"}, {"original_string": "@Column(name=\"email\", unique=true, length = 64)\n    private String email;", "modifier": "@Column(name=\"email\", unique=true, length = 64)\n    private", "type": "String", "declarator": "email", "var_name": "email"}, {"original_string": "@Column(name=\"require_certificate\")\n    private boolean requireCertificate = false;", "modifier": "@Column(name=\"require_certificate\")\n    private", "type": "boolean", "declarator": "requireCertificate = false", "var_name": "requireCertificate"}, {"original_string": "@Column(name=\"self_registered\")\n    private boolean selfRegistered = false;", "modifier": "@Column(name=\"self_registered\")\n    private", "type": "boolean", "declarator": "selfRegistered = false", "var_name": "selfRegistered"}, {"original_string": "@Column(name=\"password\", length = 128)\n    private String password;", "modifier": "@Column(name=\"password\", length = 128)\n    private", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "@Column(name=\"salt\", length = 32)\n    private String salt;", "modifier": "@Column(name=\"salt\", length = 32)\n    private", "type": "String", "declarator": "salt", "var_name": "salt"}, {"original_string": "@Column(name=\"digest_algorithm\", length = 16)\n    private String digestAlgorithm;", "modifier": "@Column(name=\"digest_algorithm\", length = 16)\n    private", "type": "String", "declarator": "digestAlgorithm", "var_name": "digestAlgorithm"}, {"original_string": "@ManyToMany(fetch = FetchType.LAZY, mappedBy = \"epeople\")\n    private final List<Group> groups = new ArrayList<>();", "modifier": "@ManyToMany(fetch = FetchType.LAZY, mappedBy = \"epeople\")\n    private final", "type": "List<Group>", "declarator": "groups = new ArrayList<>()", "var_name": "groups"}, {"original_string": "public static final int EMAIL = 1;", "modifier": "public static final", "type": "int", "declarator": "EMAIL = 1", "var_name": "EMAIL"}, {"original_string": "public static final int LASTNAME = 2;", "modifier": "public static final", "type": "int", "declarator": "LASTNAME = 2", "var_name": "LASTNAME"}, {"original_string": "public static final int ID = 3;", "modifier": "public static final", "type": "int", "declarator": "ID = 3", "var_name": "ID"}, {"original_string": "public static final int NETID = 4;", "modifier": "public static final", "type": "int", "declarator": "NETID = 4", "var_name": "NETID"}, {"original_string": "public static final int LANGUAGE = 5;", "modifier": "public static final", "type": "int", "declarator": "LANGUAGE = 5", "var_name": "LANGUAGE"}, {"original_string": "@Transient\n    protected transient EPersonService ePersonService;", "modifier": "@Transient\n    protected transient", "type": "EPersonService", "declarator": "ePersonService", "var_name": "ePersonService"}], "methods": [{"identifier": "EPerson", "parameters": "()", "modifiers": "protected", "return": "", "signature": " EPerson()", "full_signature": "protected  EPerson()", "class_method_signature": "EPerson.EPerson()", "testcase": false, "constructor": true}, {"identifier": "getLegacyId", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getLegacyId()", "full_signature": "@Override public Integer getLegacyId()", "class_method_signature": "EPerson.getLegacyId()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "EPerson.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "EPerson.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getLanguage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLanguage()", "full_signature": "public String getLanguage()", "class_method_signature": "EPerson.getLanguage()", "testcase": false, "constructor": false}, {"identifier": "setLanguage", "parameters": "(Context context, String language)", "modifiers": "public", "return": "void", "signature": "void setLanguage(Context context, String language)", "full_signature": "public void setLanguage(Context context, String language)", "class_method_signature": "EPerson.setLanguage(Context context, String language)", "testcase": false, "constructor": false}, {"identifier": "getEmail", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEmail()", "full_signature": "public String getEmail()", "class_method_signature": "EPerson.getEmail()", "testcase": false, "constructor": false}, {"identifier": "setEmail", "parameters": "(String s)", "modifiers": "public", "return": "void", "signature": "void setEmail(String s)", "full_signature": "public void setEmail(String s)", "class_method_signature": "EPerson.setEmail(String s)", "testcase": false, "constructor": false}, {"identifier": "getNetid", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getNetid()", "full_signature": "public String getNetid()", "class_method_signature": "EPerson.getNetid()", "testcase": false, "constructor": false}, {"identifier": "setNetid", "parameters": "(String netid)", "modifiers": "public", "return": "void", "signature": "void setNetid(String netid)", "full_signature": "public void setNetid(String netid)", "class_method_signature": "EPerson.setNetid(String netid)", "testcase": false, "constructor": false}, {"identifier": "getFullName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFullName()", "full_signature": "public String getFullName()", "class_method_signature": "EPerson.getFullName()", "testcase": false, "constructor": false}, {"identifier": "getFirstName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFirstName()", "full_signature": "public String getFirstName()", "class_method_signature": "EPerson.getFirstName()", "testcase": false, "constructor": false}, {"identifier": "setFirstName", "parameters": "(Context context, String firstname)", "modifiers": "public", "return": "void", "signature": "void setFirstName(Context context, String firstname)", "full_signature": "public void setFirstName(Context context, String firstname)", "class_method_signature": "EPerson.setFirstName(Context context, String firstname)", "testcase": false, "constructor": false}, {"identifier": "getLastName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLastName()", "full_signature": "public String getLastName()", "class_method_signature": "EPerson.getLastName()", "testcase": false, "constructor": false}, {"identifier": "setLastName", "parameters": "(Context context, String lastname)", "modifiers": "public", "return": "void", "signature": "void setLastName(Context context, String lastname)", "full_signature": "public void setLastName(Context context, String lastname)", "class_method_signature": "EPerson.setLastName(Context context, String lastname)", "testcase": false, "constructor": false}, {"identifier": "setCanLogIn", "parameters": "(boolean login)", "modifiers": "public", "return": "void", "signature": "void setCanLogIn(boolean login)", "full_signature": "public void setCanLogIn(boolean login)", "class_method_signature": "EPerson.setCanLogIn(boolean login)", "testcase": false, "constructor": false}, {"identifier": "canLogIn", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean canLogIn()", "full_signature": "public boolean canLogIn()", "class_method_signature": "EPerson.canLogIn()", "testcase": false, "constructor": false}, {"identifier": "setRequireCertificate", "parameters": "(boolean isrequired)", "modifiers": "public", "return": "void", "signature": "void setRequireCertificate(boolean isrequired)", "full_signature": "public void setRequireCertificate(boolean isrequired)", "class_method_signature": "EPerson.setRequireCertificate(boolean isrequired)", "testcase": false, "constructor": false}, {"identifier": "getRequireCertificate", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getRequireCertificate()", "full_signature": "public boolean getRequireCertificate()", "class_method_signature": "EPerson.getRequireCertificate()", "testcase": false, "constructor": false}, {"identifier": "setSelfRegistered", "parameters": "(boolean sr)", "modifiers": "public", "return": "void", "signature": "void setSelfRegistered(boolean sr)", "full_signature": "public void setSelfRegistered(boolean sr)", "class_method_signature": "EPerson.setSelfRegistered(boolean sr)", "testcase": false, "constructor": false}, {"identifier": "getSelfRegistered", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getSelfRegistered()", "full_signature": "public boolean getSelfRegistered()", "class_method_signature": "EPerson.getSelfRegistered()", "testcase": false, "constructor": false}, {"identifier": "setLastActive", "parameters": "(Date when)", "modifiers": "public", "return": "void", "signature": "void setLastActive(Date when)", "full_signature": "public void setLastActive(Date when)", "class_method_signature": "EPerson.setLastActive(Date when)", "testcase": false, "constructor": false}, {"identifier": "getLastActive", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getLastActive()", "full_signature": "public Date getLastActive()", "class_method_signature": "EPerson.getLastActive()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getType()", "full_signature": "@Override public int getType()", "class_method_signature": "EPerson.getType()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "EPerson.getName()", "testcase": false, "constructor": false}, {"identifier": "getDigestAlgorithm", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getDigestAlgorithm()", "full_signature": " String getDigestAlgorithm()", "class_method_signature": "EPerson.getDigestAlgorithm()", "testcase": false, "constructor": false}, {"identifier": "setDigestAlgorithm", "parameters": "(String digestAlgorithm)", "modifiers": "", "return": "void", "signature": "void setDigestAlgorithm(String digestAlgorithm)", "full_signature": " void setDigestAlgorithm(String digestAlgorithm)", "class_method_signature": "EPerson.setDigestAlgorithm(String digestAlgorithm)", "testcase": false, "constructor": false}, {"identifier": "getSalt", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getSalt()", "full_signature": " String getSalt()", "class_method_signature": "EPerson.getSalt()", "testcase": false, "constructor": false}, {"identifier": "setSalt", "parameters": "(String salt)", "modifiers": "", "return": "void", "signature": "void setSalt(String salt)", "full_signature": " void setSalt(String salt)", "class_method_signature": "EPerson.setSalt(String salt)", "testcase": false, "constructor": false}, {"identifier": "getPassword", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getPassword()", "full_signature": " String getPassword()", "class_method_signature": "EPerson.getPassword()", "testcase": false, "constructor": false}, {"identifier": "setPassword", "parameters": "(String password)", "modifiers": "", "return": "void", "signature": "void setPassword(String password)", "full_signature": " void setPassword(String password)", "class_method_signature": "EPerson.setPassword(String password)", "testcase": false, "constructor": false}, {"identifier": "getGroups", "parameters": "()", "modifiers": "public", "return": "List<Group>", "signature": "List<Group> getGroups()", "full_signature": "public List<Group> getGroups()", "class_method_signature": "EPerson.getGroups()", "testcase": false, "constructor": false}, {"identifier": "getePersonService", "parameters": "()", "modifiers": "private", "return": "EPersonService", "signature": "EPersonService getePersonService()", "full_signature": "private EPersonService getePersonService()", "class_method_signature": "EPerson.getePersonService()", "testcase": false, "constructor": false}], "file": "dspace-api/src/main/java/org/dspace/eperson/EPerson.java"}, "focal_method": {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int getType()\n    {\n        return Constants.EPERSON;\n    }", "signature": "int getType()", "full_signature": "@Override public int getType()", "class_method_signature": "EPerson.getType()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 39038703, "url": "https://github.com/VTUL/vtechworks", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 112021, "license": "licensed"}}