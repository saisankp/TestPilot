{"test_class": {"identifier": "UploaderWebClientTest", "superclass": "extends AbstractUploaderTest", "interfaces": "", "fields": [], "file": "herd-code/herd-tools/herd-uploader/src/test/java/org/finra/herd/tools/uploader/UploaderWebClientTest.java"}, "test_case": {"identifier": "testGetBusinessObjectDataVersions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetBusinessObjectDataVersions() throws Exception\n    {\n        testGetBusinessObjectDataVersions(null, null, null, false);\n    }", "signature": "void testGetBusinessObjectDataVersions()", "full_signature": "@Test public void testGetBusinessObjectDataVersions()", "class_method_signature": "UploaderWebClientTest.testGetBusinessObjectDataVersions()", "testcase": true, "constructor": false, "invocations": ["testGetBusinessObjectDataVersions"]}, "focal_class": {"identifier": "UploaderWebClient", "superclass": "extends DataBridgeWebClient", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(UploaderWebClient.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(UploaderWebClient.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private JsonHelper jsonHelper;", "modifier": "@Autowired\n    private", "type": "JsonHelper", "declarator": "jsonHelper", "var_name": "jsonHelper"}], "methods": [{"identifier": "getBusinessObjectDataUploadCredential", "parameters": "(DataBridgeBaseManifestDto manifest, String storageName,\n        Integer businessObjectDataVersion, Boolean createNewVersion)", "modifiers": "public", "return": "BusinessObjectDataUploadCredential", "signature": "BusinessObjectDataUploadCredential getBusinessObjectDataUploadCredential(DataBridgeBaseManifestDto manifest, String storageName,\n        Integer businessObjectDataVersion, Boolean createNewVersion)", "full_signature": "public BusinessObjectDataUploadCredential getBusinessObjectDataUploadCredential(DataBridgeBaseManifestDto manifest, String storageName,\n        Integer businessObjectDataVersion, Boolean createNewVersion)", "class_method_signature": "UploaderWebClient.getBusinessObjectDataUploadCredential(DataBridgeBaseManifestDto manifest, String storageName,\n        Integer businessObjectDataVersion, Boolean createNewVersion)", "testcase": false, "constructor": false}, {"identifier": "getBusinessObjectDataVersions", "parameters": "(BusinessObjectDataKey businessObjectDataKey)", "modifiers": "public", "return": "BusinessObjectDataVersions", "signature": "BusinessObjectDataVersions getBusinessObjectDataVersions(BusinessObjectDataKey businessObjectDataKey)", "full_signature": "public BusinessObjectDataVersions getBusinessObjectDataVersions(BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "UploaderWebClient.getBusinessObjectDataVersions(BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false}, {"identifier": "updateBusinessObjectDataStatusIgnoreException", "parameters": "(BusinessObjectDataKey businessObjectDataKey, String businessObjectDataStatus)", "modifiers": "public", "return": "void", "signature": "void updateBusinessObjectDataStatusIgnoreException(BusinessObjectDataKey businessObjectDataKey, String businessObjectDataStatus)", "full_signature": "public void updateBusinessObjectDataStatusIgnoreException(BusinessObjectDataKey businessObjectDataKey, String businessObjectDataStatus)", "class_method_signature": "UploaderWebClient.updateBusinessObjectDataStatusIgnoreException(BusinessObjectDataKey businessObjectDataKey, String businessObjectDataStatus)", "testcase": false, "constructor": false}, {"identifier": "getBusinessObjectDataVersions", "parameters": "(CloseableHttpResponse httpResponse)", "modifiers": "protected", "return": "BusinessObjectDataVersions", "signature": "BusinessObjectDataVersions getBusinessObjectDataVersions(CloseableHttpResponse httpResponse)", "full_signature": "protected BusinessObjectDataVersions getBusinessObjectDataVersions(CloseableHttpResponse httpResponse)", "class_method_signature": "UploaderWebClient.getBusinessObjectDataVersions(CloseableHttpResponse httpResponse)", "testcase": false, "constructor": false}, {"identifier": "getBusinessObjectDataUploadCredential", "parameters": "(CloseableHttpResponse response)", "modifiers": "private", "return": "BusinessObjectDataUploadCredential", "signature": "BusinessObjectDataUploadCredential getBusinessObjectDataUploadCredential(CloseableHttpResponse response)", "full_signature": "private BusinessObjectDataUploadCredential getBusinessObjectDataUploadCredential(CloseableHttpResponse response)", "class_method_signature": "UploaderWebClient.getBusinessObjectDataUploadCredential(CloseableHttpResponse response)", "testcase": false, "constructor": false}], "file": "herd-code/herd-tools/herd-uploader/src/main/java/org/finra/herd/tools/uploader/UploaderWebClient.java"}, "focal_method": {"identifier": "getBusinessObjectDataVersions", "parameters": "(BusinessObjectDataKey businessObjectDataKey)", "modifiers": "public", "return": "BusinessObjectDataVersions", "body": "public BusinessObjectDataVersions getBusinessObjectDataVersions(BusinessObjectDataKey businessObjectDataKey)\n        throws URISyntaxException, IOException, JAXBException, NoSuchAlgorithmException, KeyStoreException, KeyManagementException\n    {\n        LOGGER.info(\"Retrieving business object data versions from the registration server...\");\n\n        BusinessObjectDataVersions businessObjectDataVersions;\n        try (CloseableHttpClient client = httpClientHelper\n            .createHttpClient(regServerAccessParamsDto.isTrustSelfSignedCertificate(), regServerAccessParamsDto.isDisableHostnameVerification()))\n        {\n            StringBuilder uriPathBuilder = new StringBuilder(300);\n            uriPathBuilder.append(HERD_APP_REST_URI_PREFIX);\n            uriPathBuilder.append(\"/businessObjectData/namespaces/\").append(businessObjectDataKey.getNamespace());\n            uriPathBuilder.append(\"/businessObjectDefinitionNames/\").append(businessObjectDataKey.getBusinessObjectDefinitionName());\n            uriPathBuilder.append(\"/businessObjectFormatUsages/\").append(businessObjectDataKey.getBusinessObjectFormatUsage());\n            uriPathBuilder.append(\"/businessObjectFormatFileTypes/\").append(businessObjectDataKey.getBusinessObjectFormatFileType());\n            uriPathBuilder.append(\"/versions\");\n\n            URIBuilder uriBuilder = new URIBuilder().setScheme(getUriScheme()).setHost(regServerAccessParamsDto.getRegServerHost())\n                .setPort(regServerAccessParamsDto.getRegServerPort()).setPath(uriPathBuilder.toString())\n                .setParameter(\"partitionValue\", businessObjectDataKey.getPartitionValue());\n\n            if (businessObjectDataKey.getSubPartitionValues() != null)\n            {\n                uriBuilder.setParameter(\"subPartitionValues\", herdStringHelper.join(businessObjectDataKey.getSubPartitionValues(), \"|\", \"\\\\\"));\n            }\n\n            if (businessObjectDataKey.getBusinessObjectFormatVersion() != null)\n            {\n                uriBuilder.setParameter(\"businessObjectFormatVersion\", businessObjectDataKey.getBusinessObjectFormatVersion().toString());\n            }\n\n            if (businessObjectDataKey.getBusinessObjectDataVersion() != null)\n            {\n                uriBuilder.setParameter(\"businessObjectDataVersion\", businessObjectDataKey.getBusinessObjectDataVersion().toString());\n            }\n\n            HttpGet httpGet = new HttpGet(uriBuilder.build());\n            httpGet.addHeader(\"Accepts\", DEFAULT_ACCEPT);\n\n            // If SSL is enabled, set the client authentication header.\n            if (regServerAccessParamsDto.isUseSsl())\n            {\n                httpGet.addHeader(getAuthorizationHeader());\n            }\n\n            LOGGER.info(String.format(\"    HTTP GET URI: %s\", httpGet.getURI().toString()));\n\n            businessObjectDataVersions = getBusinessObjectDataVersions(httpClientOperations.execute(client, httpGet));\n        }\n\n        LOGGER.info(String.format(\"Successfully retrieved %d already registered version(s) for the business object data. businessObjectDataKey=%s\",\n            businessObjectDataVersions.getBusinessObjectDataVersions().size(), jsonHelper.objectToJson(businessObjectDataKey)));\n\n        return businessObjectDataVersions;\n    }", "signature": "BusinessObjectDataVersions getBusinessObjectDataVersions(BusinessObjectDataKey businessObjectDataKey)", "full_signature": "public BusinessObjectDataVersions getBusinessObjectDataVersions(BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "UploaderWebClient.getBusinessObjectDataVersions(BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false, "invocations": ["info", "createHttpClient", "isTrustSelfSignedCertificate", "isDisableHostnameVerification", "append", "append", "append", "getNamespace", "append", "append", "getBusinessObjectDefinitionName", "append", "append", "getBusinessObjectFormatUsage", "append", "append", "getBusinessObjectFormatFileType", "append", "setParameter", "setPath", "setPort", "setHost", "setScheme", "getUriScheme", "getRegServerHost", "getRegServerPort", "toString", "getPartitionValue", "getSubPartitionValues", "setParameter", "join", "getSubPartitionValues", "getBusinessObjectFormatVersion", "setParameter", "toString", "getBusinessObjectFormatVersion", "getBusinessObjectDataVersion", "setParameter", "toString", "getBusinessObjectDataVersion", "build", "addHeader", "isUseSsl", "addHeader", "getAuthorizationHeader", "info", "format", "toString", "getURI", "getBusinessObjectDataVersions", "execute", "info", "format", "size", "getBusinessObjectDataVersions", "objectToJson"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}