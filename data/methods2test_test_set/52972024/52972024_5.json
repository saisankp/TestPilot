{"test_class": {"identifier": "DependencyResolvingFeatureManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Map<String, String> remoteRepos;", "modifier": "private", "type": "Map<String, String>", "declarator": "remoteRepos", "var_name": "remoteRepos"}], "file": "OldModules/DependencyResolvingFeatureManager/src/test/java/info/smart_tools/smartactors/core/dependency_resolving_feature_manager/DependencyResolvingFeatureManagerTest.java"}, "test_case": {"identifier": "Should_throw_When_InvalidArgumentsPassedForFeatureCreation", "parameters": "()", "modifiers": "@Test(expected = FeatureManagementException.class) public", "return": "void", "body": "@Test(expected = FeatureManagementException.class)\n    public void Should_throw_When_InvalidArgumentsPassedForFeatureCreation()\n            throws Exception {\n        assertNotNull(new DependencyResolvingFeatureManager(\"/\", remoteRepos)\n                .newFeature(null, null));\n    }", "signature": "void Should_throw_When_InvalidArgumentsPassedForFeatureCreation()", "full_signature": "@Test(expected = FeatureManagementException.class) public void Should_throw_When_InvalidArgumentsPassedForFeatureCreation()", "class_method_signature": "DependencyResolvingFeatureManagerTest.Should_throw_When_InvalidArgumentsPassedForFeatureCreation()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "newFeature"]}, "focal_class": {"identifier": "DependencyResolvingFeatureManager", "superclass": "", "interfaces": "implements IFeatureManager", "fields": [{"original_string": "private String localRepoPath;", "modifier": "private", "type": "String", "declarator": "localRepoPath", "var_name": "localRepoPath"}, {"original_string": "private Map<String, String> remotes;", "modifier": "private", "type": "Map<String, String>", "declarator": "remotes", "var_name": "remotes"}, {"original_string": "private RepositorySystem repositorySystem;", "modifier": "private", "type": "RepositorySystem", "declarator": "repositorySystem", "var_name": "repositorySystem"}, {"original_string": "private RepositorySystemSession session;", "modifier": "private", "type": "RepositorySystemSession", "declarator": "session", "var_name": "session"}, {"original_string": "private final Object lock;", "modifier": "private final", "type": "Object", "declarator": "lock", "var_name": "lock"}, {"original_string": "private List<RemoteRepository> remoteRepositories;", "modifier": "private", "type": "List<RemoteRepository>", "declarator": "remoteRepositories", "var_name": "remoteRepositories"}], "methods": [{"identifier": "DependencyResolvingFeatureManager", "parameters": "(final String localRepoPath, final Map<String, String> remotes)", "modifiers": "public", "return": "", "signature": " DependencyResolvingFeatureManager(final String localRepoPath, final Map<String, String> remotes)", "full_signature": "public  DependencyResolvingFeatureManager(final String localRepoPath, final Map<String, String> remotes)", "class_method_signature": "DependencyResolvingFeatureManager.DependencyResolvingFeatureManager(final String localRepoPath, final Map<String, String> remotes)", "testcase": false, "constructor": true}, {"identifier": "newFeature", "parameters": "(final String name, final IFilesystemTracker filesystemTracker)", "modifiers": "@Override public", "return": "IFeature", "signature": "IFeature newFeature(final String name, final IFilesystemTracker filesystemTracker)", "full_signature": "@Override public IFeature newFeature(final String name, final IFilesystemTracker filesystemTracker)", "class_method_signature": "DependencyResolvingFeatureManager.newFeature(final String name, final IFilesystemTracker filesystemTracker)", "testcase": false, "constructor": false}, {"identifier": "newRepositorySystem", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void newRepositorySystem()", "full_signature": "private void newRepositorySystem()", "class_method_signature": "DependencyResolvingFeatureManager.newRepositorySystem()", "testcase": false, "constructor": false}, {"identifier": "newSession", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void newSession()", "full_signature": "private void newSession()", "class_method_signature": "DependencyResolvingFeatureManager.newSession()", "testcase": false, "constructor": false}, {"identifier": "setupRemotes", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setupRemotes()", "full_signature": "private void setupRemotes()", "class_method_signature": "DependencyResolvingFeatureManager.setupRemotes()", "testcase": false, "constructor": false}, {"identifier": "resolveArtifacts", "parameters": "(final List<String> artifactIds)", "modifiers": "", "return": "List<IPath>", "signature": "List<IPath> resolveArtifacts(final List<String> artifactIds)", "full_signature": " List<IPath> resolveArtifacts(final List<String> artifactIds)", "class_method_signature": "DependencyResolvingFeatureManager.resolveArtifacts(final List<String> artifactIds)", "testcase": false, "constructor": false}, {"identifier": "resolveArtifactsInner", "parameters": "(final List<String> artifactIds)", "modifiers": "private", "return": "List<IPath>", "signature": "List<IPath> resolveArtifactsInner(final List<String> artifactIds)", "full_signature": "private List<IPath> resolveArtifactsInner(final List<String> artifactIds)", "class_method_signature": "DependencyResolvingFeatureManager.resolveArtifactsInner(final List<String> artifactIds)", "testcase": false, "constructor": false}], "file": "OldModules/DependencyResolvingFeatureManager/src/main/java/info/smart_tools/smartactors/core/dependency_resolving_feature_manager/DependencyResolvingFeatureManager.java"}, "focal_method": {"identifier": "newFeature", "parameters": "(final String name, final IFilesystemTracker filesystemTracker)", "modifiers": "@Override public", "return": "IFeature", "body": "@Override\n    public IFeature newFeature(final String name, final IFilesystemTracker filesystemTracker) throws FeatureManagementException {\n        try {\n            return new Feature(this, name);\n        } catch (InvalidArgumentException e) {\n            throw new FeatureManagementException(\"Cold not create a feature.\", e);\n        }\n    }", "signature": "IFeature newFeature(final String name, final IFilesystemTracker filesystemTracker)", "full_signature": "@Override public IFeature newFeature(final String name, final IFilesystemTracker filesystemTracker)", "class_method_signature": "DependencyResolvingFeatureManager.newFeature(final String name, final IFilesystemTracker filesystemTracker)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}