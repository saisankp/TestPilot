{"test_class": {"identifier": "TaskServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TaskService taskService = new TaskServiceImpl();", "modifier": "private", "type": "TaskService", "declarator": "taskService = new TaskServiceImpl()", "var_name": "taskService"}], "file": "backend/src/test/java/net/lr/tasklist/service/TaskServiceImplTest.java"}, "test_case": {"identifier": "testAddIllegal", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testAddIllegal() {\n        Task task = new Task();\n        taskService.addOrUpdate(task);\n    }", "signature": "void testAddIllegal()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testAddIllegal()", "class_method_signature": "TaskServiceImplTest.testAddIllegal()", "testcase": true, "constructor": false, "invocations": ["addOrUpdate"]}, "focal_class": {"identifier": "TaskServiceImpl", "superclass": "", "interfaces": "implements TaskService", "fields": [{"original_string": "private Map<Integer, Task> tasks = new HashMap<>();", "modifier": "private", "type": "Map<Integer, Task>", "declarator": "tasks = new HashMap<>()", "var_name": "tasks"}], "methods": [{"identifier": "TaskServiceImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " TaskServiceImpl()", "full_signature": "public  TaskServiceImpl()", "class_method_signature": "TaskServiceImpl.TaskServiceImpl()", "testcase": false, "constructor": true}, {"identifier": "getById", "parameters": "(Integer id)", "modifiers": "@Override public", "return": "Task", "signature": "Task getById(Integer id)", "full_signature": "@Override public Task getById(Integer id)", "class_method_signature": "TaskServiceImpl.getById(Integer id)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdate", "parameters": "(Task task)", "modifiers": "@Override public", "return": "void", "signature": "void addOrUpdate(Task task)", "full_signature": "@Override public void addOrUpdate(Task task)", "class_method_signature": "TaskServiceImpl.addOrUpdate(Task task)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "@Override public", "return": "Collection<Task>", "signature": "Collection<Task> getAll()", "full_signature": "@Override public Collection<Task> getAll()", "class_method_signature": "TaskServiceImpl.getAll()", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Integer id)", "modifiers": "@Override public", "return": "void", "signature": "void delete(Integer id)", "full_signature": "@Override public void delete(Integer id)", "class_method_signature": "TaskServiceImpl.delete(Integer id)", "testcase": false, "constructor": false}], "file": "backend/src/main/java/net/lr/tasklist/service/TaskServiceImpl.java"}, "focal_method": {"identifier": "addOrUpdate", "parameters": "(Task task)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void addOrUpdate(Task task) {\n        if (task.getId() == null) {\n            throw new IllegalArgumentException(\"Id property must be set\");\n        }\n        tasks.put(task.getId(), task);\n    }", "signature": "void addOrUpdate(Task task)", "full_signature": "@Override public void addOrUpdate(Task task)", "class_method_signature": "TaskServiceImpl.addOrUpdate(Task task)", "testcase": false, "constructor": false, "invocations": ["getId", "put", "getId"]}, "repository": {"repo_id": 201050057, "url": "https://github.com/cschneider/osgi-best-practices", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 25, "size": 117, "license": "licensed"}}