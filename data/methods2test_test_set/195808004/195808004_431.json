{"test_class": {"identifier": "TestRMWebServices", "superclass": "extends JerseyTestBase", "interfaces": "", "fields": [{"original_string": "private static MockRM rm;", "modifier": "private static", "type": "MockRM", "declarator": "rm", "var_name": "rm"}, {"original_string": "private Injector injector = Guice.createInjector(new ServletModule() {\n    @Override\n    protected void configureServlets() {\n      bind(JAXBContextResolver.class);\n      bind(RMWebServices.class);\n      bind(GenericExceptionHandler.class);\n      Configuration conf = new Configuration();\n      conf.setClass(YarnConfiguration.RM_SCHEDULER, FifoScheduler.class,\n          ResourceScheduler.class);\n      rm = new MockRM(conf);\n      bind(ResourceManager.class).toInstance(rm);\n      serve(\"/*\").with(GuiceContainer.class);\n    }\n  });", "modifier": "private", "type": "Injector", "declarator": "injector = Guice.createInjector(new ServletModule() {\n    @Override\n    protected void configureServlets() {\n      bind(JAXBContextResolver.class);\n      bind(RMWebServices.class);\n      bind(GenericExceptionHandler.class);\n      Configuration conf = new Configuration();\n      conf.setClass(YarnConfiguration.RM_SCHEDULER, FifoScheduler.class,\n          ResourceScheduler.class);\n      rm = new MockRM(conf);\n      bind(ResourceManager.class).toInstance(rm);\n      serve(\"/*\").with(GuiceContainer.class);\n    }\n  })", "var_name": "injector"}], "file": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/TestRMWebServices.java"}, "test_case": {"identifier": "testClusterMetricsXML", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testClusterMetricsXML() throws JSONException, Exception {\n    WebResource r = resource();\n    ClientResponse response = r.path(\"ws\").path(\"v1\").path(\"cluster\")\n        .path(\"metrics\").accept(\"application/xml\").get(ClientResponse.class);\n    assertEquals(MediaType.APPLICATION_XML_TYPE, response.getType());\n    String xml = response.getEntity(String.class);\n    verifyClusterMetricsXML(xml);\n  }", "signature": "void testClusterMetricsXML()", "full_signature": "@Test public void testClusterMetricsXML()", "class_method_signature": "TestRMWebServices.testClusterMetricsXML()", "testcase": true, "constructor": false, "invocations": ["resource", "get", "accept", "path", "path", "path", "path", "assertEquals", "getType", "getEntity", "verifyClusterMetricsXML"]}, "focal_class": {"identifier": "RMWebServices", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Log LOG =\n      LogFactory.getLog(RMWebServices.class.getName());", "modifier": "private static final", "type": "Log", "declarator": "LOG =\n      LogFactory.getLog(RMWebServices.class.getName())", "var_name": "LOG"}, {"original_string": "private static final String EMPTY = \"\";", "modifier": "private static final", "type": "String", "declarator": "EMPTY = \"\"", "var_name": "EMPTY"}, {"original_string": "private static final String ANY = \"*\";", "modifier": "private static final", "type": "String", "declarator": "ANY = \"*\"", "var_name": "ANY"}, {"original_string": "private final ResourceManager rm;", "modifier": "private final", "type": "ResourceManager", "declarator": "rm", "var_name": "rm"}, {"original_string": "private static RecordFactory recordFactory = RecordFactoryProvider\n      .getRecordFactory(null);", "modifier": "private static", "type": "RecordFactory", "declarator": "recordFactory = RecordFactoryProvider\n      .getRecordFactory(null)", "var_name": "recordFactory"}, {"original_string": "private final Configuration conf;", "modifier": "private final", "type": "Configuration", "declarator": "conf", "var_name": "conf"}, {"original_string": "private @Context HttpServletResponse response;", "modifier": "private @Context", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "public final static String DELEGATION_TOKEN_HEADER =\n      \"Hadoop-YARN-RM-Delegation-Token\";", "modifier": "public final static", "type": "String", "declarator": "DELEGATION_TOKEN_HEADER =\n      \"Hadoop-YARN-RM-Delegation-Token\"", "var_name": "DELEGATION_TOKEN_HEADER"}], "methods": [{"identifier": "RMWebServices", "parameters": "(final ResourceManager rm, Configuration conf)", "modifiers": "@Inject public", "return": "", "signature": " RMWebServices(final ResourceManager rm, Configuration conf)", "full_signature": "@Inject public  RMWebServices(final ResourceManager rm, Configuration conf)", "class_method_signature": "RMWebServices.RMWebServices(final ResourceManager rm, Configuration conf)", "testcase": false, "constructor": true}, {"identifier": "RMWebServices", "parameters": "(ResourceManager rm, Configuration conf,\n      HttpServletResponse response)", "modifiers": "", "return": "", "signature": " RMWebServices(ResourceManager rm, Configuration conf,\n      HttpServletResponse response)", "full_signature": "  RMWebServices(ResourceManager rm, Configuration conf,\n      HttpServletResponse response)", "class_method_signature": "RMWebServices.RMWebServices(ResourceManager rm, Configuration conf,\n      HttpServletResponse response)", "testcase": false, "constructor": true}, {"identifier": "hasAccess", "parameters": "(RMApp app, HttpServletRequest hsr)", "modifiers": "protected", "return": "Boolean", "signature": "Boolean hasAccess(RMApp app, HttpServletRequest hsr)", "full_signature": "protected Boolean hasAccess(RMApp app, HttpServletRequest hsr)", "class_method_signature": "RMWebServices.hasAccess(RMApp app, HttpServletRequest hsr)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void init()", "full_signature": "private void init()", "class_method_signature": "RMWebServices.init()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "@GET @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "ClusterInfo", "signature": "ClusterInfo get()", "full_signature": "@GET @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public ClusterInfo get()", "class_method_signature": "RMWebServices.get()", "testcase": false, "constructor": false}, {"identifier": "getClusterInfo", "parameters": "()", "modifiers": "@GET @Path(\"/info\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "ClusterInfo", "signature": "ClusterInfo getClusterInfo()", "full_signature": "@GET @Path(\"/info\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public ClusterInfo getClusterInfo()", "class_method_signature": "RMWebServices.getClusterInfo()", "testcase": false, "constructor": false}, {"identifier": "getClusterMetricsInfo", "parameters": "()", "modifiers": "@GET @Path(\"/metrics\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "ClusterMetricsInfo", "signature": "ClusterMetricsInfo getClusterMetricsInfo()", "full_signature": "@GET @Path(\"/metrics\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public ClusterMetricsInfo getClusterMetricsInfo()", "class_method_signature": "RMWebServices.getClusterMetricsInfo()", "testcase": false, "constructor": false}, {"identifier": "getSchedulerInfo", "parameters": "()", "modifiers": "@GET @Path(\"/scheduler\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "SchedulerTypeInfo", "signature": "SchedulerTypeInfo getSchedulerInfo()", "full_signature": "@GET @Path(\"/scheduler\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public SchedulerTypeInfo getSchedulerInfo()", "class_method_signature": "RMWebServices.getSchedulerInfo()", "testcase": false, "constructor": false}, {"identifier": "getNodes", "parameters": "(@QueryParam(\"states\") String states)", "modifiers": "@GET @Path(\"/nodes\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "NodesInfo", "signature": "NodesInfo getNodes(@QueryParam(\"states\") String states)", "full_signature": "@GET @Path(\"/nodes\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public NodesInfo getNodes(@QueryParam(\"states\") String states)", "class_method_signature": "RMWebServices.getNodes(@QueryParam(\"states\") String states)", "testcase": false, "constructor": false}, {"identifier": "getNode", "parameters": "(@PathParam(\"nodeId\") String nodeId)", "modifiers": "@GET @Path(\"/nodes/{nodeId}\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "NodeInfo", "signature": "NodeInfo getNode(@PathParam(\"nodeId\") String nodeId)", "full_signature": "@GET @Path(\"/nodes/{nodeId}\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public NodeInfo getNode(@PathParam(\"nodeId\") String nodeId)", "class_method_signature": "RMWebServices.getNode(@PathParam(\"nodeId\") String nodeId)", "testcase": false, "constructor": false}, {"identifier": "getApps", "parameters": "(@Context HttpServletRequest hsr,\n      @QueryParam(\"state\") String stateQuery,\n      @QueryParam(\"states\") Set<String> statesQuery,\n      @QueryParam(\"finalStatus\") String finalStatusQuery,\n      @QueryParam(\"user\") String userQuery,\n      @QueryParam(\"queue\") String queueQuery,\n      @QueryParam(\"limit\") String count,\n      @QueryParam(\"startedTimeBegin\") String startedBegin,\n      @QueryParam(\"startedTimeEnd\") String startedEnd,\n      @QueryParam(\"finishedTimeBegin\") String finishBegin,\n      @QueryParam(\"finishedTimeEnd\") String finishEnd,\n      @QueryParam(\"applicationTypes\") Set<String> applicationTypes,\n      @QueryParam(\"applicationTags\") Set<String> applicationTags)", "modifiers": "@GET @Path(\"/apps\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "AppsInfo", "signature": "AppsInfo getApps(@Context HttpServletRequest hsr,\n      @QueryParam(\"state\") String stateQuery,\n      @QueryParam(\"states\") Set<String> statesQuery,\n      @QueryParam(\"finalStatus\") String finalStatusQuery,\n      @QueryParam(\"user\") String userQuery,\n      @QueryParam(\"queue\") String queueQuery,\n      @QueryParam(\"limit\") String count,\n      @QueryParam(\"startedTimeBegin\") String startedBegin,\n      @QueryParam(\"startedTimeEnd\") String startedEnd,\n      @QueryParam(\"finishedTimeBegin\") String finishBegin,\n      @QueryParam(\"finishedTimeEnd\") String finishEnd,\n      @QueryParam(\"applicationTypes\") Set<String> applicationTypes,\n      @QueryParam(\"applicationTags\") Set<String> applicationTags)", "full_signature": "@GET @Path(\"/apps\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public AppsInfo getApps(@Context HttpServletRequest hsr,\n      @QueryParam(\"state\") String stateQuery,\n      @QueryParam(\"states\") Set<String> statesQuery,\n      @QueryParam(\"finalStatus\") String finalStatusQuery,\n      @QueryParam(\"user\") String userQuery,\n      @QueryParam(\"queue\") String queueQuery,\n      @QueryParam(\"limit\") String count,\n      @QueryParam(\"startedTimeBegin\") String startedBegin,\n      @QueryParam(\"startedTimeEnd\") String startedEnd,\n      @QueryParam(\"finishedTimeBegin\") String finishBegin,\n      @QueryParam(\"finishedTimeEnd\") String finishEnd,\n      @QueryParam(\"applicationTypes\") Set<String> applicationTypes,\n      @QueryParam(\"applicationTags\") Set<String> applicationTags)", "class_method_signature": "RMWebServices.getApps(@Context HttpServletRequest hsr,\n      @QueryParam(\"state\") String stateQuery,\n      @QueryParam(\"states\") Set<String> statesQuery,\n      @QueryParam(\"finalStatus\") String finalStatusQuery,\n      @QueryParam(\"user\") String userQuery,\n      @QueryParam(\"queue\") String queueQuery,\n      @QueryParam(\"limit\") String count,\n      @QueryParam(\"startedTimeBegin\") String startedBegin,\n      @QueryParam(\"startedTimeEnd\") String startedEnd,\n      @QueryParam(\"finishedTimeBegin\") String finishBegin,\n      @QueryParam(\"finishedTimeEnd\") String finishEnd,\n      @QueryParam(\"applicationTypes\") Set<String> applicationTypes,\n      @QueryParam(\"applicationTags\") Set<String> applicationTags)", "testcase": false, "constructor": false}, {"identifier": "getAppStatistics", "parameters": "(\n      @Context HttpServletRequest hsr,\n      @QueryParam(\"states\") Set<String> stateQueries,\n      @QueryParam(\"applicationTypes\") Set<String> typeQueries)", "modifiers": "@GET @Path(\"/appstatistics\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "ApplicationStatisticsInfo", "signature": "ApplicationStatisticsInfo getAppStatistics(\n      @Context HttpServletRequest hsr,\n      @QueryParam(\"states\") Set<String> stateQueries,\n      @QueryParam(\"applicationTypes\") Set<String> typeQueries)", "full_signature": "@GET @Path(\"/appstatistics\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public ApplicationStatisticsInfo getAppStatistics(\n      @Context HttpServletRequest hsr,\n      @QueryParam(\"states\") Set<String> stateQueries,\n      @QueryParam(\"applicationTypes\") Set<String> typeQueries)", "class_method_signature": "RMWebServices.getAppStatistics(\n      @Context HttpServletRequest hsr,\n      @QueryParam(\"states\") Set<String> stateQueries,\n      @QueryParam(\"applicationTypes\") Set<String> typeQueries)", "testcase": false, "constructor": false}, {"identifier": "parseQueries", "parameters": "(\n      Set<String> queries, boolean isState)", "modifiers": "private static", "return": "Set<String>", "signature": "Set<String> parseQueries(\n      Set<String> queries, boolean isState)", "full_signature": "private static Set<String> parseQueries(\n      Set<String> queries, boolean isState)", "class_method_signature": "RMWebServices.parseQueries(\n      Set<String> queries, boolean isState)", "testcase": false, "constructor": false}, {"identifier": "buildScoreboard", "parameters": "(\n     Set<String> states, Set<String> types)", "modifiers": "private static", "return": "Map<YarnApplicationState, Map<String, Long>>", "signature": "Map<YarnApplicationState, Map<String, Long>> buildScoreboard(\n     Set<String> states, Set<String> types)", "full_signature": "private static Map<YarnApplicationState, Map<String, Long>> buildScoreboard(\n     Set<String> states, Set<String> types)", "class_method_signature": "RMWebServices.buildScoreboard(\n     Set<String> states, Set<String> types)", "testcase": false, "constructor": false}, {"identifier": "countApp", "parameters": "(\n      Map<YarnApplicationState, Map<String, Long>> scoreboard,\n      YarnApplicationState state, String type)", "modifiers": "private static", "return": "void", "signature": "void countApp(\n      Map<YarnApplicationState, Map<String, Long>> scoreboard,\n      YarnApplicationState state, String type)", "full_signature": "private static void countApp(\n      Map<YarnApplicationState, Map<String, Long>> scoreboard,\n      YarnApplicationState state, String type)", "class_method_signature": "RMWebServices.countApp(\n      Map<YarnApplicationState, Map<String, Long>> scoreboard,\n      YarnApplicationState state, String type)", "testcase": false, "constructor": false}, {"identifier": "getApp", "parameters": "(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId)", "modifiers": "@GET @Path(\"/apps/{appid}\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "AppInfo", "signature": "AppInfo getApp(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId)", "full_signature": "@GET @Path(\"/apps/{appid}\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public AppInfo getApp(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId)", "class_method_signature": "RMWebServices.getApp(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId)", "testcase": false, "constructor": false}, {"identifier": "getAppAttempts", "parameters": "(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId)", "modifiers": "@GET @Path(\"/apps/{appid}/appattempts\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "AppAttemptsInfo", "signature": "AppAttemptsInfo getAppAttempts(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId)", "full_signature": "@GET @Path(\"/apps/{appid}/appattempts\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public AppAttemptsInfo getAppAttempts(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId)", "class_method_signature": "RMWebServices.getAppAttempts(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId)", "testcase": false, "constructor": false}, {"identifier": "getAppState", "parameters": "(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId)", "modifiers": "@GET @Path(\"/apps/{appid}/state\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "AppState", "signature": "AppState getAppState(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId)", "full_signature": "@GET @Path(\"/apps/{appid}/state\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public AppState getAppState(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId)", "class_method_signature": "RMWebServices.getAppState(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId)", "testcase": false, "constructor": false}, {"identifier": "updateAppState", "parameters": "(AppState targetState,\n      @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)", "modifiers": "@PUT @Path(\"/apps/{appid}/state\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "Response", "signature": "Response updateAppState(AppState targetState,\n      @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)", "full_signature": "@PUT @Path(\"/apps/{appid}/state\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public Response updateAppState(AppState targetState,\n      @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)", "class_method_signature": "RMWebServices.updateAppState(AppState targetState,\n      @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)", "testcase": false, "constructor": false}, {"identifier": "getNodeToLabels", "parameters": "(@Context HttpServletRequest hsr)", "modifiers": "@GET @Path(\"/get-node-to-labels\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "NodeToLabelsInfo", "signature": "NodeToLabelsInfo getNodeToLabels(@Context HttpServletRequest hsr)", "full_signature": "@GET @Path(\"/get-node-to-labels\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public NodeToLabelsInfo getNodeToLabels(@Context HttpServletRequest hsr)", "class_method_signature": "RMWebServices.getNodeToLabels(@Context HttpServletRequest hsr)", "testcase": false, "constructor": false}, {"identifier": "replaceLabelsOnNodes", "parameters": "(\n    final NodeToLabelsInfo newNodeToLabels,\n    @Context HttpServletRequest hsr)", "modifiers": "@POST @Path(\"/replace-node-to-labels\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "Response", "signature": "Response replaceLabelsOnNodes(\n    final NodeToLabelsInfo newNodeToLabels,\n    @Context HttpServletRequest hsr)", "full_signature": "@POST @Path(\"/replace-node-to-labels\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public Response replaceLabelsOnNodes(\n    final NodeToLabelsInfo newNodeToLabels,\n    @Context HttpServletRequest hsr)", "class_method_signature": "RMWebServices.replaceLabelsOnNodes(\n    final NodeToLabelsInfo newNodeToLabels,\n    @Context HttpServletRequest hsr)", "testcase": false, "constructor": false}, {"identifier": "getClusterNodeLabels", "parameters": "(@Context HttpServletRequest hsr)", "modifiers": "@GET @Path(\"/get-node-labels\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "NodeLabelsInfo", "signature": "NodeLabelsInfo getClusterNodeLabels(@Context HttpServletRequest hsr)", "full_signature": "@GET @Path(\"/get-node-labels\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public NodeLabelsInfo getClusterNodeLabels(@Context HttpServletRequest hsr)", "class_method_signature": "RMWebServices.getClusterNodeLabels(@Context HttpServletRequest hsr)", "testcase": false, "constructor": false}, {"identifier": "addToClusterNodeLabels", "parameters": "(final NodeLabelsInfo newNodeLabels,\n      @Context HttpServletRequest hsr)", "modifiers": "@POST @Path(\"/add-node-labels\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "Response", "signature": "Response addToClusterNodeLabels(final NodeLabelsInfo newNodeLabels,\n      @Context HttpServletRequest hsr)", "full_signature": "@POST @Path(\"/add-node-labels\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public Response addToClusterNodeLabels(final NodeLabelsInfo newNodeLabels,\n      @Context HttpServletRequest hsr)", "class_method_signature": "RMWebServices.addToClusterNodeLabels(final NodeLabelsInfo newNodeLabels,\n      @Context HttpServletRequest hsr)", "testcase": false, "constructor": false}, {"identifier": "removeFromCluserNodeLabels", "parameters": "(final NodeLabelsInfo oldNodeLabels,\n      @Context HttpServletRequest hsr)", "modifiers": "@POST @Path(\"/remove-node-labels\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "Response", "signature": "Response removeFromCluserNodeLabels(final NodeLabelsInfo oldNodeLabels,\n      @Context HttpServletRequest hsr)", "full_signature": "@POST @Path(\"/remove-node-labels\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public Response removeFromCluserNodeLabels(final NodeLabelsInfo oldNodeLabels,\n      @Context HttpServletRequest hsr)", "class_method_signature": "RMWebServices.removeFromCluserNodeLabels(final NodeLabelsInfo oldNodeLabels,\n      @Context HttpServletRequest hsr)", "testcase": false, "constructor": false}, {"identifier": "getLabelsOnNode", "parameters": "(@Context HttpServletRequest hsr,\n                                  @PathParam(\"nodeId\") String nodeId)", "modifiers": "@GET @Path(\"/nodes/{nodeId}/get-labels\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "NodeLabelsInfo", "signature": "NodeLabelsInfo getLabelsOnNode(@Context HttpServletRequest hsr,\n                                  @PathParam(\"nodeId\") String nodeId)", "full_signature": "@GET @Path(\"/nodes/{nodeId}/get-labels\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public NodeLabelsInfo getLabelsOnNode(@Context HttpServletRequest hsr,\n                                  @PathParam(\"nodeId\") String nodeId)", "class_method_signature": "RMWebServices.getLabelsOnNode(@Context HttpServletRequest hsr,\n                                  @PathParam(\"nodeId\") String nodeId)", "testcase": false, "constructor": false}, {"identifier": "replaceLabelsOnNode", "parameters": "(NodeLabelsInfo newNodeLabelsInfo,\n      @Context HttpServletRequest hsr, @PathParam(\"nodeId\") String nodeId)", "modifiers": "@POST @Path(\"/nodes/{nodeId}/replace-labels\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "Response", "signature": "Response replaceLabelsOnNode(NodeLabelsInfo newNodeLabelsInfo,\n      @Context HttpServletRequest hsr, @PathParam(\"nodeId\") String nodeId)", "full_signature": "@POST @Path(\"/nodes/{nodeId}/replace-labels\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public Response replaceLabelsOnNode(NodeLabelsInfo newNodeLabelsInfo,\n      @Context HttpServletRequest hsr, @PathParam(\"nodeId\") String nodeId)", "class_method_signature": "RMWebServices.replaceLabelsOnNode(NodeLabelsInfo newNodeLabelsInfo,\n      @Context HttpServletRequest hsr, @PathParam(\"nodeId\") String nodeId)", "testcase": false, "constructor": false}, {"identifier": "killApp", "parameters": "(RMApp app, UserGroupInformation callerUGI,\n      HttpServletRequest hsr)", "modifiers": "protected", "return": "Response", "signature": "Response killApp(RMApp app, UserGroupInformation callerUGI,\n      HttpServletRequest hsr)", "full_signature": "protected Response killApp(RMApp app, UserGroupInformation callerUGI,\n      HttpServletRequest hsr)", "class_method_signature": "RMWebServices.killApp(RMApp app, UserGroupInformation callerUGI,\n      HttpServletRequest hsr)", "testcase": false, "constructor": false}, {"identifier": "getAppQueue", "parameters": "(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId)", "modifiers": "@GET @Path(\"/apps/{appid}/queue\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "AppQueue", "signature": "AppQueue getAppQueue(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId)", "full_signature": "@GET @Path(\"/apps/{appid}/queue\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public AppQueue getAppQueue(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId)", "class_method_signature": "RMWebServices.getAppQueue(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId)", "testcase": false, "constructor": false}, {"identifier": "updateAppQueue", "parameters": "(AppQueue targetQueue,\n      @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)", "modifiers": "@PUT @Path(\"/apps/{appid}/queue\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "Response", "signature": "Response updateAppQueue(AppQueue targetQueue,\n      @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)", "full_signature": "@PUT @Path(\"/apps/{appid}/queue\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public Response updateAppQueue(AppQueue targetQueue,\n      @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)", "class_method_signature": "RMWebServices.updateAppQueue(AppQueue targetQueue,\n      @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)", "testcase": false, "constructor": false}, {"identifier": "moveApp", "parameters": "(RMApp app, UserGroupInformation callerUGI,\n      String targetQueue)", "modifiers": "protected", "return": "Response", "signature": "Response moveApp(RMApp app, UserGroupInformation callerUGI,\n      String targetQueue)", "full_signature": "protected Response moveApp(RMApp app, UserGroupInformation callerUGI,\n      String targetQueue)", "class_method_signature": "RMWebServices.moveApp(RMApp app, UserGroupInformation callerUGI,\n      String targetQueue)", "testcase": false, "constructor": false}, {"identifier": "getRMAppForAppId", "parameters": "(String appId)", "modifiers": "private", "return": "RMApp", "signature": "RMApp getRMAppForAppId(String appId)", "full_signature": "private RMApp getRMAppForAppId(String appId)", "class_method_signature": "RMWebServices.getRMAppForAppId(String appId)", "testcase": false, "constructor": false}, {"identifier": "getCallerUserGroupInformation", "parameters": "(\n      HttpServletRequest hsr, boolean usePrincipal)", "modifiers": "private", "return": "UserGroupInformation", "signature": "UserGroupInformation getCallerUserGroupInformation(\n      HttpServletRequest hsr, boolean usePrincipal)", "full_signature": "private UserGroupInformation getCallerUserGroupInformation(\n      HttpServletRequest hsr, boolean usePrincipal)", "class_method_signature": "RMWebServices.getCallerUserGroupInformation(\n      HttpServletRequest hsr, boolean usePrincipal)", "testcase": false, "constructor": false}, {"identifier": "isStaticUser", "parameters": "(UserGroupInformation callerUGI)", "modifiers": "private", "return": "boolean", "signature": "boolean isStaticUser(UserGroupInformation callerUGI)", "full_signature": "private boolean isStaticUser(UserGroupInformation callerUGI)", "class_method_signature": "RMWebServices.isStaticUser(UserGroupInformation callerUGI)", "testcase": false, "constructor": false}, {"identifier": "createNewApplication", "parameters": "(@Context HttpServletRequest hsr)", "modifiers": "@POST @Path(\"/apps/new-application\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "Response", "signature": "Response createNewApplication(@Context HttpServletRequest hsr)", "full_signature": "@POST @Path(\"/apps/new-application\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public Response createNewApplication(@Context HttpServletRequest hsr)", "class_method_signature": "RMWebServices.createNewApplication(@Context HttpServletRequest hsr)", "testcase": false, "constructor": false}, {"identifier": "submitApplication", "parameters": "(ApplicationSubmissionContextInfo newApp,\n      @Context HttpServletRequest hsr)", "modifiers": "@POST @Path(\"/apps\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "Response", "signature": "Response submitApplication(ApplicationSubmissionContextInfo newApp,\n      @Context HttpServletRequest hsr)", "full_signature": "@POST @Path(\"/apps\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public Response submitApplication(ApplicationSubmissionContextInfo newApp,\n      @Context HttpServletRequest hsr)", "class_method_signature": "RMWebServices.submitApplication(ApplicationSubmissionContextInfo newApp,\n      @Context HttpServletRequest hsr)", "testcase": false, "constructor": false}, {"identifier": "createNewApplication", "parameters": "()", "modifiers": "private", "return": "NewApplication", "signature": "NewApplication createNewApplication()", "full_signature": "private NewApplication createNewApplication()", "class_method_signature": "RMWebServices.createNewApplication()", "testcase": false, "constructor": false}, {"identifier": "createAppSubmissionContext", "parameters": "(\n      ApplicationSubmissionContextInfo newApp)", "modifiers": "protected", "return": "ApplicationSubmissionContext", "signature": "ApplicationSubmissionContext createAppSubmissionContext(\n      ApplicationSubmissionContextInfo newApp)", "full_signature": "protected ApplicationSubmissionContext createAppSubmissionContext(\n      ApplicationSubmissionContextInfo newApp)", "class_method_signature": "RMWebServices.createAppSubmissionContext(\n      ApplicationSubmissionContextInfo newApp)", "testcase": false, "constructor": false}, {"identifier": "createAppSubmissionContextResource", "parameters": "(\n      ApplicationSubmissionContextInfo newApp)", "modifiers": "protected", "return": "Resource", "signature": "Resource createAppSubmissionContextResource(\n      ApplicationSubmissionContextInfo newApp)", "full_signature": "protected Resource createAppSubmissionContextResource(\n      ApplicationSubmissionContextInfo newApp)", "class_method_signature": "RMWebServices.createAppSubmissionContextResource(\n      ApplicationSubmissionContextInfo newApp)", "testcase": false, "constructor": false}, {"identifier": "createContainerLaunchContext", "parameters": "(\n      ApplicationSubmissionContextInfo newApp)", "modifiers": "protected", "return": "ContainerLaunchContext", "signature": "ContainerLaunchContext createContainerLaunchContext(\n      ApplicationSubmissionContextInfo newApp)", "full_signature": "protected ContainerLaunchContext createContainerLaunchContext(\n      ApplicationSubmissionContextInfo newApp)", "class_method_signature": "RMWebServices.createContainerLaunchContext(\n      ApplicationSubmissionContextInfo newApp)", "testcase": false, "constructor": false}, {"identifier": "createCredentials", "parameters": "(CredentialsInfo credentials)", "modifiers": "private", "return": "Credentials", "signature": "Credentials createCredentials(CredentialsInfo credentials)", "full_signature": "private Credentials createCredentials(CredentialsInfo credentials)", "class_method_signature": "RMWebServices.createCredentials(CredentialsInfo credentials)", "testcase": false, "constructor": false}, {"identifier": "createKerberosUserGroupInformation", "parameters": "(\n      HttpServletRequest hsr)", "modifiers": "private", "return": "UserGroupInformation", "signature": "UserGroupInformation createKerberosUserGroupInformation(\n      HttpServletRequest hsr)", "full_signature": "private UserGroupInformation createKerberosUserGroupInformation(\n      HttpServletRequest hsr)", "class_method_signature": "RMWebServices.createKerberosUserGroupInformation(\n      HttpServletRequest hsr)", "testcase": false, "constructor": false}, {"identifier": "postDelegationToken", "parameters": "(DelegationToken tokenData,\n      @Context HttpServletRequest hsr)", "modifiers": "@POST @Path(\"/delegation-token\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "Response", "signature": "Response postDelegationToken(DelegationToken tokenData,\n      @Context HttpServletRequest hsr)", "full_signature": "@POST @Path(\"/delegation-token\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public Response postDelegationToken(DelegationToken tokenData,\n      @Context HttpServletRequest hsr)", "class_method_signature": "RMWebServices.postDelegationToken(DelegationToken tokenData,\n      @Context HttpServletRequest hsr)", "testcase": false, "constructor": false}, {"identifier": "postDelegationTokenExpiration", "parameters": "(@Context HttpServletRequest hsr)", "modifiers": "@POST @Path(\"/delegation-token/expiration\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "Response", "signature": "Response postDelegationTokenExpiration(@Context HttpServletRequest hsr)", "full_signature": "@POST @Path(\"/delegation-token/expiration\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public Response postDelegationTokenExpiration(@Context HttpServletRequest hsr)", "class_method_signature": "RMWebServices.postDelegationTokenExpiration(@Context HttpServletRequest hsr)", "testcase": false, "constructor": false}, {"identifier": "createDelegationToken", "parameters": "(DelegationToken tokenData,\n      HttpServletRequest hsr, UserGroupInformation callerUGI)", "modifiers": "private", "return": "Response", "signature": "Response createDelegationToken(DelegationToken tokenData,\n      HttpServletRequest hsr, UserGroupInformation callerUGI)", "full_signature": "private Response createDelegationToken(DelegationToken tokenData,\n      HttpServletRequest hsr, UserGroupInformation callerUGI)", "class_method_signature": "RMWebServices.createDelegationToken(DelegationToken tokenData,\n      HttpServletRequest hsr, UserGroupInformation callerUGI)", "testcase": false, "constructor": false}, {"identifier": "renewDelegationToken", "parameters": "(DelegationToken tokenData,\n      HttpServletRequest hsr, UserGroupInformation callerUGI)", "modifiers": "private", "return": "Response", "signature": "Response renewDelegationToken(DelegationToken tokenData,\n      HttpServletRequest hsr, UserGroupInformation callerUGI)", "full_signature": "private Response renewDelegationToken(DelegationToken tokenData,\n      HttpServletRequest hsr, UserGroupInformation callerUGI)", "class_method_signature": "RMWebServices.renewDelegationToken(DelegationToken tokenData,\n      HttpServletRequest hsr, UserGroupInformation callerUGI)", "testcase": false, "constructor": false}, {"identifier": "cancelDelegationToken", "parameters": "(@Context HttpServletRequest hsr)", "modifiers": "@DELETE @Path(\"/delegation-token\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "Response", "signature": "Response cancelDelegationToken(@Context HttpServletRequest hsr)", "full_signature": "@DELETE @Path(\"/delegation-token\") @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public Response cancelDelegationToken(@Context HttpServletRequest hsr)", "class_method_signature": "RMWebServices.cancelDelegationToken(@Context HttpServletRequest hsr)", "testcase": false, "constructor": false}, {"identifier": "extractToken", "parameters": "(\n      HttpServletRequest request)", "modifiers": "private", "return": "Token<RMDelegationTokenIdentifier>", "signature": "Token<RMDelegationTokenIdentifier> extractToken(\n      HttpServletRequest request)", "full_signature": "private Token<RMDelegationTokenIdentifier> extractToken(\n      HttpServletRequest request)", "class_method_signature": "RMWebServices.extractToken(\n      HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "extractToken", "parameters": "(String encodedToken)", "modifiers": "private", "return": "Token<RMDelegationTokenIdentifier>", "signature": "Token<RMDelegationTokenIdentifier> extractToken(String encodedToken)", "full_signature": "private Token<RMDelegationTokenIdentifier> extractToken(String encodedToken)", "class_method_signature": "RMWebServices.extractToken(String encodedToken)", "testcase": false, "constructor": false}], "file": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "@GET @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public", "return": "ClusterInfo", "body": "@GET\n  @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n  public ClusterInfo get() {\n    return getClusterInfo();\n  }", "signature": "ClusterInfo get()", "full_signature": "@GET @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML }) public ClusterInfo get()", "class_method_signature": "RMWebServices.get()", "testcase": false, "constructor": false, "invocations": ["getClusterInfo"]}, "repository": {"repo_id": 195808004, "url": "https://github.com/mouzwang/hadoop-2.7.2", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 24927, "license": "licensed"}}