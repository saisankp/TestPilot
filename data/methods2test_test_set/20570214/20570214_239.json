{"test_class": {"identifier": "CleartextKeysetHandleTest", "superclass": "", "interfaces": "", "fields": [], "file": "java_src/src/test/java/com/google/crypto/tink/CleartextKeysetHandleTest.java"}, "test_case": {"identifier": "testRead", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRead() throws Exception {\n    // Create a keyset that contains a single HmacKey.\n    KeyTemplate template = MacKeyTemplates.HMAC_SHA256_128BITTAG;\n    KeysetManager manager = KeysetManager.withEmptyKeyset().rotate(template);\n    Keyset keyset1 = manager.getKeysetHandle().getKeyset();\n\n    KeysetHandle handle1 =\n        CleartextKeysetHandle.read(BinaryKeysetReader.withBytes(keyset1.toByteArray()));\n    assertEquals(keyset1, handle1.getKeyset());\n\n    KeysetHandle handle2 = KeysetHandle.generateNew(template);\n    Keyset keyset2 = handle2.getKeyset();\n    assertEquals(1, keyset2.getKeyCount());\n    Keyset.Key key2 = keyset2.getKey(0);\n    assertEquals(keyset2.getPrimaryKeyId(), key2.getKeyId());\n    assertEquals(template.getTypeUrl(), key2.getKeyData().getTypeUrl());\n    Mac unused = handle2.getPrimitive(Mac.class);\n  }", "signature": "void testRead()", "full_signature": "@Test public void testRead()", "class_method_signature": "CleartextKeysetHandleTest.testRead()", "testcase": true, "constructor": false, "invocations": ["rotate", "withEmptyKeyset", "getKeyset", "getKeysetHandle", "read", "withBytes", "toByteArray", "assertEquals", "getKeyset", "generateNew", "getKeyset", "assertEquals", "getKeyCount", "getKey", "assertEquals", "getPrimaryKeyId", "getKeyId", "assertEquals", "getTypeUrl", "getTypeUrl", "getKeyData", "getPrimitive"]}, "focal_class": {"identifier": "CleartextKeysetHandle", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "parseFrom", "parameters": "(final byte[] serialized)", "modifiers": "@Deprecated public static final", "return": "KeysetHandle", "signature": "KeysetHandle parseFrom(final byte[] serialized)", "full_signature": "@Deprecated public static final KeysetHandle parseFrom(final byte[] serialized)", "class_method_signature": "CleartextKeysetHandle.parseFrom(final byte[] serialized)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(KeysetReader reader)", "modifiers": "public static", "return": "KeysetHandle", "signature": "KeysetHandle read(KeysetReader reader)", "full_signature": "public static KeysetHandle read(KeysetReader reader)", "class_method_signature": "CleartextKeysetHandle.read(KeysetReader reader)", "testcase": false, "constructor": false}, {"identifier": "getKeyset", "parameters": "(KeysetHandle keysetHandle)", "modifiers": "public static", "return": "Keyset", "signature": "Keyset getKeyset(KeysetHandle keysetHandle)", "full_signature": "public static Keyset getKeyset(KeysetHandle keysetHandle)", "class_method_signature": "CleartextKeysetHandle.getKeyset(KeysetHandle keysetHandle)", "testcase": false, "constructor": false}, {"identifier": "fromKeyset", "parameters": "(Keyset keyset)", "modifiers": "public static", "return": "KeysetHandle", "signature": "KeysetHandle fromKeyset(Keyset keyset)", "full_signature": "public static KeysetHandle fromKeyset(Keyset keyset)", "class_method_signature": "CleartextKeysetHandle.fromKeyset(Keyset keyset)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(KeysetHandle handle, KeysetWriter keysetWriter)", "modifiers": "public static", "return": "void", "signature": "void write(KeysetHandle handle, KeysetWriter keysetWriter)", "full_signature": "public static void write(KeysetHandle handle, KeysetWriter keysetWriter)", "class_method_signature": "CleartextKeysetHandle.write(KeysetHandle handle, KeysetWriter keysetWriter)", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/CleartextKeysetHandle.java"}, "focal_method": {"identifier": "read", "parameters": "(KeysetReader reader)", "modifiers": "public static", "return": "KeysetHandle", "body": "public static KeysetHandle read(KeysetReader reader)\n      throws GeneralSecurityException, IOException {\n    return KeysetHandle.fromKeyset(reader.read());\n  }", "signature": "KeysetHandle read(KeysetReader reader)", "full_signature": "public static KeysetHandle read(KeysetReader reader)", "class_method_signature": "CleartextKeysetHandle.read(KeysetReader reader)", "testcase": false, "constructor": false, "invocations": ["fromKeyset", "read"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}