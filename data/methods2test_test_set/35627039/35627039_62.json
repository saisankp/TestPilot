{"test_class": {"identifier": "NotifierInfoCatalogResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "NotifierInfoCatalogResource resource;", "modifier": "", "type": "NotifierInfoCatalogResource", "declarator": "resource", "var_name": "resource"}, {"original_string": "@Injectable\n    StreamCatalogService mockCatalogService;", "modifier": "@Injectable", "type": "StreamCatalogService", "declarator": "mockCatalogService", "var_name": "mockCatalogService"}, {"original_string": "@Injectable\n    UriInfo mockUriInfo;", "modifier": "@Injectable", "type": "UriInfo", "declarator": "mockUriInfo", "var_name": "mockUriInfo"}, {"original_string": "@Injectable\n    FileStorage mockFileStorage;", "modifier": "@Injectable", "type": "FileStorage", "declarator": "mockFileStorage", "var_name": "mockFileStorage"}, {"original_string": "@Injectable\n    InputStream mockInputStream;", "modifier": "@Injectable", "type": "InputStream", "declarator": "mockInputStream", "var_name": "mockInputStream"}, {"original_string": "@Injectable\n    FormDataContentDisposition mockFormDataContentDisposition;", "modifier": "@Injectable", "type": "FormDataContentDisposition", "declarator": "mockFormDataContentDisposition", "var_name": "mockFormDataContentDisposition"}, {"original_string": "@Injectable\n    FormDataBodyPart mockFormDataBodyPart;", "modifier": "@Injectable", "type": "FormDataBodyPart", "declarator": "mockFormDataBodyPart", "var_name": "mockFormDataBodyPart"}, {"original_string": "MultivaluedMap<String, String> multiValuedMap;", "modifier": "", "type": "MultivaluedMap<String, String>", "declarator": "multiValuedMap", "var_name": "multiValuedMap"}, {"original_string": "@Injectable\n    StreamlineAuthorizer authorizer = new NoopAuthorizer();", "modifier": "@Injectable", "type": "StreamlineAuthorizer", "declarator": "authorizer = new NoopAuthorizer()", "var_name": "authorizer"}, {"original_string": "@Injectable\n    SecurityContext securityContext;", "modifier": "@Injectable", "type": "SecurityContext", "declarator": "securityContext", "var_name": "securityContext"}], "file": "streams/service/src/test/java/com/hortonworks/streamline/streams/service/NotifierInfoCatalogResourceTest.java"}, "test_case": {"identifier": "testListNotifiers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testListNotifiers() {\n        final Notifier notifier = new Notifier();\n        final QueryParam expectedQp = new QueryParam(\"notifierName\", \"email_notifier_1\");\n        multiValuedMap.putSingle(\"notifierName\", \"email_notifier_1\");\n        new Expectations() {\n            {\n                mockUriInfo.getQueryParameters(); times = 1;\n                result = multiValuedMap;\n\n                mockCatalogService.listNotifierInfos(Arrays.asList(expectedQp));times=1;\n                result = Arrays.asList(notifier);\n\n            }\n        };\n\n        CollectionResponse collectionResponse = (CollectionResponse) resource.listNotifiers(mockUriInfo, securityContext).getEntity();\n\n        assertEquals(1, collectionResponse .getEntities().size());\n        assertEquals(notifier, collectionResponse.getEntities().iterator().next());\n    }", "signature": "void testListNotifiers()", "full_signature": "@Test public void testListNotifiers()", "class_method_signature": "NotifierInfoCatalogResourceTest.testListNotifiers()", "testcase": true, "constructor": false, "invocations": ["putSingle", "getQueryParameters", "listNotifierInfos", "asList", "asList", "getEntity", "listNotifiers", "assertEquals", "size", "getEntities", "assertEquals", "next", "iterator", "getEntities"]}, "focal_class": {"identifier": "NotifierInfoCatalogResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(NotifierInfoCatalogResource.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(NotifierInfoCatalogResource.class)", "var_name": "LOG"}, {"original_string": "private final StreamlineAuthorizer authorizer;", "modifier": "private final", "type": "StreamlineAuthorizer", "declarator": "authorizer", "var_name": "authorizer"}, {"original_string": "private final StreamCatalogService catalogService;", "modifier": "private final", "type": "StreamCatalogService", "declarator": "catalogService", "var_name": "catalogService"}, {"original_string": "private final FileStorage fileStorage;", "modifier": "private final", "type": "FileStorage", "declarator": "fileStorage", "var_name": "fileStorage"}], "methods": [{"identifier": "NotifierInfoCatalogResource", "parameters": "(StreamlineAuthorizer authorizer, StreamCatalogService catalogService, FileStorage fileStorage)", "modifiers": "public", "return": "", "signature": " NotifierInfoCatalogResource(StreamlineAuthorizer authorizer, StreamCatalogService catalogService, FileStorage fileStorage)", "full_signature": "public  NotifierInfoCatalogResource(StreamlineAuthorizer authorizer, StreamCatalogService catalogService, FileStorage fileStorage)", "class_method_signature": "NotifierInfoCatalogResource.NotifierInfoCatalogResource(StreamlineAuthorizer authorizer, StreamCatalogService catalogService, FileStorage fileStorage)", "testcase": false, "constructor": true}, {"identifier": "listNotifiers", "parameters": "(@Context UriInfo uriInfo, @Context SecurityContext securityContext)", "modifiers": "@GET @Path(\"/notifiers\") @Timed public", "return": "Response", "signature": "Response listNotifiers(@Context UriInfo uriInfo, @Context SecurityContext securityContext)", "full_signature": "@GET @Path(\"/notifiers\") @Timed public Response listNotifiers(@Context UriInfo uriInfo, @Context SecurityContext securityContext)", "class_method_signature": "NotifierInfoCatalogResource.listNotifiers(@Context UriInfo uriInfo, @Context SecurityContext securityContext)", "testcase": false, "constructor": false}, {"identifier": "getNotifierById", "parameters": "(@PathParam(\"id\") Long id, @Context SecurityContext securityContext)", "modifiers": "@GET @Path(\"/notifiers/{id}\") @Timed public", "return": "Response", "signature": "Response getNotifierById(@PathParam(\"id\") Long id, @Context SecurityContext securityContext)", "full_signature": "@GET @Path(\"/notifiers/{id}\") @Timed public Response getNotifierById(@PathParam(\"id\") Long id, @Context SecurityContext securityContext)", "class_method_signature": "NotifierInfoCatalogResource.getNotifierById(@PathParam(\"id\") Long id, @Context SecurityContext securityContext)", "testcase": false, "constructor": false}, {"identifier": "addNotifier", "parameters": "(@FormDataParam(\"notifierJarFile\") final InputStream inputStream,\n                                @FormDataParam(\"notifierJarFile\") final FormDataContentDisposition contentDispositionHeader,\n                                @FormDataParam(\"notifierConfig\") final FormDataBodyPart notifierConfig,\n                                @Context SecurityContext securityContext)", "modifiers": "@POST @Consumes(MediaType.MULTIPART_FORM_DATA) @Path(\"/notifiers\") @Timed public", "return": "Response", "signature": "Response addNotifier(@FormDataParam(\"notifierJarFile\") final InputStream inputStream,\n                                @FormDataParam(\"notifierJarFile\") final FormDataContentDisposition contentDispositionHeader,\n                                @FormDataParam(\"notifierConfig\") final FormDataBodyPart notifierConfig,\n                                @Context SecurityContext securityContext)", "full_signature": "@POST @Consumes(MediaType.MULTIPART_FORM_DATA) @Path(\"/notifiers\") @Timed public Response addNotifier(@FormDataParam(\"notifierJarFile\") final InputStream inputStream,\n                                @FormDataParam(\"notifierJarFile\") final FormDataContentDisposition contentDispositionHeader,\n                                @FormDataParam(\"notifierConfig\") final FormDataBodyPart notifierConfig,\n                                @Context SecurityContext securityContext)", "class_method_signature": "NotifierInfoCatalogResource.addNotifier(@FormDataParam(\"notifierJarFile\") final InputStream inputStream,\n                                @FormDataParam(\"notifierJarFile\") final FormDataContentDisposition contentDispositionHeader,\n                                @FormDataParam(\"notifierConfig\") final FormDataBodyPart notifierConfig,\n                                @Context SecurityContext securityContext)", "testcase": false, "constructor": false}, {"identifier": "removeNotifierInfo", "parameters": "(@PathParam(\"id\") Long id, @Context SecurityContext securityContext)", "modifiers": "@DELETE @Path(\"/notifiers/{id}\") @Timed public", "return": "Response", "signature": "Response removeNotifierInfo(@PathParam(\"id\") Long id, @Context SecurityContext securityContext)", "full_signature": "@DELETE @Path(\"/notifiers/{id}\") @Timed public Response removeNotifierInfo(@PathParam(\"id\") Long id, @Context SecurityContext securityContext)", "class_method_signature": "NotifierInfoCatalogResource.removeNotifierInfo(@PathParam(\"id\") Long id, @Context SecurityContext securityContext)", "testcase": false, "constructor": false}, {"identifier": "addOrUpdateNotifierInfo", "parameters": "(@PathParam(\"id\") Long id,\n                                            @FormDataParam(\"notifierJarFile\") final InputStream inputStream,\n                                            @FormDataParam(\"notifierJarFile\") final FormDataContentDisposition contentDispositionHeader,\n                                            @FormDataParam(\"notifierConfig\") final FormDataBodyPart notifierConfig,\n                                            @Context SecurityContext securityContext)", "modifiers": "@PUT @Consumes(MediaType.MULTIPART_FORM_DATA) @Path(\"/notifiers/{id}\") @Timed public", "return": "Response", "signature": "Response addOrUpdateNotifierInfo(@PathParam(\"id\") Long id,\n                                            @FormDataParam(\"notifierJarFile\") final InputStream inputStream,\n                                            @FormDataParam(\"notifierJarFile\") final FormDataContentDisposition contentDispositionHeader,\n                                            @FormDataParam(\"notifierConfig\") final FormDataBodyPart notifierConfig,\n                                            @Context SecurityContext securityContext)", "full_signature": "@PUT @Consumes(MediaType.MULTIPART_FORM_DATA) @Path(\"/notifiers/{id}\") @Timed public Response addOrUpdateNotifierInfo(@PathParam(\"id\") Long id,\n                                            @FormDataParam(\"notifierJarFile\") final InputStream inputStream,\n                                            @FormDataParam(\"notifierJarFile\") final FormDataContentDisposition contentDispositionHeader,\n                                            @FormDataParam(\"notifierConfig\") final FormDataBodyPart notifierConfig,\n                                            @Context SecurityContext securityContext)", "class_method_signature": "NotifierInfoCatalogResource.addOrUpdateNotifierInfo(@PathParam(\"id\") Long id,\n                                            @FormDataParam(\"notifierJarFile\") final InputStream inputStream,\n                                            @FormDataParam(\"notifierJarFile\") final FormDataContentDisposition contentDispositionHeader,\n                                            @FormDataParam(\"notifierConfig\") final FormDataBodyPart notifierConfig,\n                                            @Context SecurityContext securityContext)", "testcase": false, "constructor": false}, {"identifier": "downloadNotifier", "parameters": "(@PathParam(\"notifierId\") Long notifierId, @Context SecurityContext securityContext)", "modifiers": "@Timed @GET @Produces({\"application/java-archive\", \"application/json\"}) @Path(\"/notifiers/download/{notifierId}\") public", "return": "Response", "signature": "Response downloadNotifier(@PathParam(\"notifierId\") Long notifierId, @Context SecurityContext securityContext)", "full_signature": "@Timed @GET @Produces({\"application/java-archive\", \"application/json\"}) @Path(\"/notifiers/download/{notifierId}\") public Response downloadNotifier(@PathParam(\"notifierId\") Long notifierId, @Context SecurityContext securityContext)", "class_method_signature": "NotifierInfoCatalogResource.downloadNotifier(@PathParam(\"notifierId\") Long notifierId, @Context SecurityContext securityContext)", "testcase": false, "constructor": false}, {"identifier": "uploadJar", "parameters": "(InputStream is, String notifierName)", "modifiers": "private", "return": "String", "signature": "String uploadJar(InputStream is, String notifierName)", "full_signature": "private String uploadJar(InputStream is, String notifierName)", "class_method_signature": "NotifierInfoCatalogResource.uploadJar(InputStream is, String notifierName)", "testcase": false, "constructor": false}], "file": "streams/service/src/main/java/com/hortonworks/streamline/streams/service/NotifierInfoCatalogResource.java"}, "focal_method": {"identifier": "listNotifiers", "parameters": "(@Context UriInfo uriInfo, @Context SecurityContext securityContext)", "modifiers": "@GET @Path(\"/notifiers\") @Timed public", "return": "Response", "body": "@GET\n    @Path(\"/notifiers\")\n    @Timed\n    public Response listNotifiers(@Context UriInfo uriInfo, @Context SecurityContext securityContext) {\n        List<QueryParam> queryParams = new ArrayList<>();\n        MultivaluedMap<String, String> params = uriInfo.getQueryParameters();\n        Collection<Notifier> notifiers;\n        if (params.isEmpty()) {\n            notifiers = catalogService.listNotifierInfos();\n        } else {\n            queryParams = WSUtils.buildQueryParameters(params);\n            notifiers = catalogService.listNotifierInfos(queryParams);\n        }\n        if (notifiers != null) {\n            boolean notifierUser = SecurityUtil.hasRole(authorizer, securityContext, Roles.ROLE_NOTIFIER_USER);\n            if (notifierUser) {\n                LOG.debug(\"Returning all Notifiers since user has role: {}\", Roles.ROLE_NOTIFIER_USER);\n            } else {\n                notifiers = SecurityUtil.filter(authorizer, securityContext, Notifier.NAMESPACE, notifiers, READ);\n            }\n            return WSUtils.respondEntities(notifiers, OK);\n        }\n\n        throw EntityNotFoundException.byFilter(queryParams.toString());\n    }", "signature": "Response listNotifiers(@Context UriInfo uriInfo, @Context SecurityContext securityContext)", "full_signature": "@GET @Path(\"/notifiers\") @Timed public Response listNotifiers(@Context UriInfo uriInfo, @Context SecurityContext securityContext)", "class_method_signature": "NotifierInfoCatalogResource.listNotifiers(@Context UriInfo uriInfo, @Context SecurityContext securityContext)", "testcase": false, "constructor": false, "invocations": ["getQueryParameters", "isEmpty", "listNotifierInfos", "buildQueryParameters", "listNotifierInfos", "hasRole", "debug", "filter", "respondEntities", "byFilter", "toString"]}, "repository": {"repo_id": 35627039, "url": "https://github.com/hortonworks/streamline", "language": "Java", "is_fork": false, "fork_count": 94, "stargazer_count": 147, "size": 69226, "license": "licensed"}}