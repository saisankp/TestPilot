{"test_class": {"identifier": "BeanUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "reflekt/src/test/java/io/advantageous/boon/core/reflection/BeanUtilsTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test() {\n        TestClass tc = new TestClass ();\n        tc.init ();\n        TestPrime prime = new TestPrime ();\n        BeanUtils.copyProperties ( tc, prime );\n        boolean ok = prime.id.equals ( \"foo\" ) || die();\n\n        ok = prime.child.id.equals ( \"child\" ) || die();\n        ok &= Lists.list(\"1\", \"2\").equals ( prime.players ) || die(\"\" + prime.players);\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "BeanUtilsTest.test()", "testcase": true, "constructor": false, "invocations": ["init", "copyProperties", "equals", "die", "equals", "die", "equals", "list", "die"]}, "focal_class": {"identifier": "BeanUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "static Map<String, String[]> splitsPathsCache = new ConcurrentHashMap<>();", "modifier": "static", "type": "Map<String, String[]>", "declarator": "splitsPathsCache = new ConcurrentHashMap<>()", "var_name": "splitsPathsCache"}], "methods": [{"identifier": "getPropByPath", "parameters": "( Object item, String... path )", "modifiers": "public static", "return": "Object", "signature": "Object getPropByPath( Object item, String... path )", "full_signature": "public static Object getPropByPath( Object item, String... path )", "class_method_signature": "BeanUtils.getPropByPath( Object item, String... path )", "testcase": false, "constructor": false}, {"identifier": "getPropertyFieldAccessMap", "parameters": "( Class<?> clazz )", "modifiers": "private static", "return": "Map<String, FieldAccess>", "signature": "Map<String, FieldAccess> getPropertyFieldAccessMap( Class<?> clazz )", "full_signature": "private static Map<String, FieldAccess> getPropertyFieldAccessMap( Class<?> clazz )", "class_method_signature": "BeanUtils.getPropertyFieldAccessMap( Class<?> clazz )", "testcase": false, "constructor": false}, {"identifier": "getField", "parameters": "( Class clazz, String name )", "modifiers": "public static", "return": "FieldAccess", "signature": "FieldAccess getField( Class clazz, String name )", "full_signature": "public static FieldAccess getField( Class clazz, String name )", "class_method_signature": "BeanUtils.getField( Class clazz, String name )", "testcase": false, "constructor": false}, {"identifier": "getField", "parameters": "( Object object, String name )", "modifiers": "public static", "return": "FieldAccess", "signature": "FieldAccess getField( Object object, String name )", "full_signature": "public static FieldAccess getField( Object object, String name )", "class_method_signature": "BeanUtils.getField( Object object, String name )", "testcase": false, "constructor": false}, {"identifier": "getFieldsFromObject", "parameters": "( Class<?> cls )", "modifiers": "public static", "return": "Map<String, FieldAccess>", "signature": "Map<String, FieldAccess> getFieldsFromObject( Class<?> cls )", "full_signature": "public static Map<String, FieldAccess> getFieldsFromObject( Class<?> cls )", "class_method_signature": "BeanUtils.getFieldsFromObject( Class<?> cls )", "testcase": false, "constructor": false}, {"identifier": "getFieldsFromObject", "parameters": "( Object object )", "modifiers": "public static", "return": "Map<String, FieldAccess>", "signature": "Map<String, FieldAccess> getFieldsFromObject( Object object )", "full_signature": "public static Map<String, FieldAccess> getFieldsFromObject( Object object )", "class_method_signature": "BeanUtils.getFieldsFromObject( Object object )", "testcase": false, "constructor": false}, {"identifier": "getFieldsFromMap", "parameters": "(final Map<String, Object> map )", "modifiers": "private static", "return": "Map<String, FieldAccess>", "signature": "Map<String, FieldAccess> getFieldsFromMap(final Map<String, Object> map )", "full_signature": "private static Map<String, FieldAccess> getFieldsFromMap(final Map<String, Object> map )", "class_method_signature": "BeanUtils.getFieldsFromMap(final Map<String, Object> map )", "testcase": false, "constructor": false}, {"identifier": "setPropertyValue", "parameters": "( final Object root,\n                                         final Object newValue,\n                                         final String... properties )", "modifiers": "public static", "return": "void", "signature": "void setPropertyValue( final Object root,\n                                         final Object newValue,\n                                         final String... properties )", "full_signature": "public static void setPropertyValue( final Object root,\n                                         final Object newValue,\n                                         final String... properties )", "class_method_signature": "BeanUtils.setPropertyValue( final Object root,\n                                         final Object newValue,\n                                         final String... properties )", "testcase": false, "constructor": false}, {"identifier": "setPropertyValue", "parameters": "( final Class<?> root, final Object newValue, final String... properties )", "modifiers": "public static", "return": "void", "signature": "void setPropertyValue( final Class<?> root, final Object newValue, final String... properties )", "full_signature": "public static void setPropertyValue( final Class<?> root, final Object newValue, final String... properties )", "class_method_signature": "BeanUtils.setPropertyValue( final Class<?> root, final Object newValue, final String... properties )", "testcase": false, "constructor": false}, {"identifier": "getPropertyValue", "parameters": "( final Object root, final String... properties )", "modifiers": "public static", "return": "Object", "signature": "Object getPropertyValue( final Object root, final String... properties )", "full_signature": "public static Object getPropertyValue( final Object root, final String... properties )", "class_method_signature": "BeanUtils.getPropertyValue( final Object root, final String... properties )", "testcase": false, "constructor": false}, {"identifier": "getPropertyType", "parameters": "( final Object root, final String property )", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> getPropertyType( final Object root, final String property )", "full_signature": "public static Class<?> getPropertyType( final Object root, final String property )", "class_method_signature": "BeanUtils.getPropertyType( final Object root, final String property )", "testcase": false, "constructor": false}, {"identifier": "idxGeneric", "parameters": "( Class<T> t, Object object, final String path )", "modifiers": "@SuppressWarnings ( \"unchecked\" ) public static", "return": "T", "signature": "T idxGeneric( Class<T> t, Object object, final String path )", "full_signature": "@SuppressWarnings ( \"unchecked\" ) public static T idxGeneric( Class<T> t, Object object, final String path )", "class_method_signature": "BeanUtils.idxGeneric( Class<T> t, Object object, final String path )", "testcase": false, "constructor": false}, {"identifier": "idxList", "parameters": "( Class<T> cls, Object items, String path )", "modifiers": "public static", "return": "List<T>", "signature": "List<T> idxList( Class<T> cls, Object items, String path )", "full_signature": "public static List<T> idxList( Class<T> cls, Object items, String path )", "class_method_signature": "BeanUtils.idxList( Class<T> cls, Object items, String path )", "testcase": false, "constructor": false}, {"identifier": "idxList", "parameters": "( Object items, String path )", "modifiers": "public static", "return": "List", "signature": "List idxList( Object items, String path )", "full_signature": "public static List idxList( Object items, String path )", "class_method_signature": "BeanUtils.idxList( Object items, String path )", "testcase": false, "constructor": false}, {"identifier": "idxRecurse", "parameters": "( Class<T> cls, Object items, String path )", "modifiers": "public static", "return": "List<T>", "signature": "List<T> idxRecurse( Class<T> cls, Object items, String path )", "full_signature": "public static List<T> idxRecurse( Class<T> cls, Object items, String path )", "class_method_signature": "BeanUtils.idxRecurse( Class<T> cls, Object items, String path )", "testcase": false, "constructor": false}, {"identifier": "idxRecurse", "parameters": "( Object items, String path )", "modifiers": "public static", "return": "List", "signature": "List idxRecurse( Object items, String path )", "full_signature": "public static List idxRecurse( Object items, String path )", "class_method_signature": "BeanUtils.idxRecurse( Object items, String path )", "testcase": false, "constructor": false}, {"identifier": "idx", "parameters": "( Object object, String path )", "modifiers": "public static", "return": "Object", "signature": "Object idx( Object object, String path )", "full_signature": "public static Object idx( Object object, String path )", "class_method_signature": "BeanUtils.idx( Object object, String path )", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(Object object, String path)", "modifiers": "public static", "return": "Object", "signature": "Object indexOf(Object object, String path)", "full_signature": "public static Object indexOf(Object object, String path)", "class_method_signature": "BeanUtils.indexOf(Object object, String path)", "testcase": false, "constructor": false}, {"identifier": "atIndex", "parameters": "(Object object, String path)", "modifiers": "public static", "return": "Object", "signature": "Object atIndex(Object object, String path)", "full_signature": "public static Object atIndex(Object object, String path)", "class_method_signature": "BeanUtils.atIndex(Object object, String path)", "testcase": false, "constructor": false}, {"identifier": "propertyPathAsStringArray", "parameters": "(String path)", "modifiers": "private static", "return": "String[]", "signature": "String[] propertyPathAsStringArray(String path)", "full_signature": "private static String[] propertyPathAsStringArray(String path)", "class_method_signature": "BeanUtils.propertyPathAsStringArray(String path)", "testcase": false, "constructor": false}, {"identifier": "findProperty", "parameters": "(Object context, String propertyPath)", "modifiers": "public static", "return": "Object", "signature": "Object findProperty(Object context, String propertyPath)", "full_signature": "public static Object findProperty(Object context, String propertyPath)", "class_method_signature": "BeanUtils.findProperty(Object context, String propertyPath)", "testcase": false, "constructor": false}, {"identifier": "injectIntoProperty", "parameters": "( Object object, String path, Object value )", "modifiers": "public static", "return": "void", "signature": "void injectIntoProperty( Object object, String path, Object value )", "full_signature": "public static void injectIntoProperty( Object object, String path, Object value )", "class_method_signature": "BeanUtils.injectIntoProperty( Object object, String path, Object value )", "testcase": false, "constructor": false}, {"identifier": "idx", "parameters": "( Object object, String path, Object value )", "modifiers": "public static", "return": "void", "signature": "void idx( Object object, String path, Object value )", "full_signature": "public static void idx( Object object, String path, Object value )", "class_method_signature": "BeanUtils.idx( Object object, String path, Object value )", "testcase": false, "constructor": false}, {"identifier": "idx", "parameters": "( Class<?> cls, String path, Object value )", "modifiers": "public static", "return": "void", "signature": "void idx( Class<?> cls, String path, Object value )", "full_signature": "public static void idx( Class<?> cls, String path, Object value )", "class_method_signature": "BeanUtils.idx( Class<?> cls, String path, Object value )", "testcase": false, "constructor": false}, {"identifier": "getCollectionProp", "parameters": "(Object o, String propName, int index, String[] path\n                                           )", "modifiers": "private static", "return": "Object", "signature": "Object getCollectionProp(Object o, String propName, int index, String[] path\n                                           )", "full_signature": "private static Object getCollectionProp(Object o, String propName, int index, String[] path\n                                           )", "class_method_signature": "BeanUtils.getCollectionProp(Object o, String propName, int index, String[] path\n                                           )", "testcase": false, "constructor": false}, {"identifier": "getProp", "parameters": "( Object object, final String property )", "modifiers": "public static", "return": "Object", "signature": "Object getProp( Object object, final String property )", "full_signature": "public static Object getProp( Object object, final String property )", "class_method_signature": "BeanUtils.getProp( Object object, final String property )", "testcase": false, "constructor": false}, {"identifier": "getPropertyInt", "parameters": "( final Object root, final String... properties )", "modifiers": "public static", "return": "int", "signature": "int getPropertyInt( final Object root, final String... properties )", "full_signature": "public static int getPropertyInt( final Object root, final String... properties )", "class_method_signature": "BeanUtils.getPropertyInt( final Object root, final String... properties )", "testcase": false, "constructor": false}, {"identifier": "baseForGetProperty", "parameters": "( Object root, String[] properties )", "modifiers": "private static", "return": "Object", "signature": "Object baseForGetProperty( Object root, String[] properties )", "full_signature": "private static Object baseForGetProperty( Object root, String[] properties )", "class_method_signature": "BeanUtils.baseForGetProperty( Object root, String[] properties )", "testcase": false, "constructor": false}, {"identifier": "baseForGetProperty", "parameters": "( Class<?> root, String[] properties )", "modifiers": "private static", "return": "Class<?>", "signature": "Class<?> baseForGetProperty( Class<?> root, String[] properties )", "full_signature": "private static Class<?> baseForGetProperty( Class<?> root, String[] properties )", "class_method_signature": "BeanUtils.baseForGetProperty( Class<?> root, String[] properties )", "testcase": false, "constructor": false}, {"identifier": "idxInt", "parameters": "( Object object, String path )", "modifiers": "public static", "return": "int", "signature": "int idxInt( Object object, String path )", "full_signature": "public static int idxInt( Object object, String path )", "class_method_signature": "BeanUtils.idxInt( Object object, String path )", "testcase": false, "constructor": false}, {"identifier": "idxStr", "parameters": "( Object object, String path )", "modifiers": "public static", "return": "String", "signature": "String idxStr( Object object, String path )", "full_signature": "public static String idxStr( Object object, String path )", "class_method_signature": "BeanUtils.idxStr( Object object, String path )", "testcase": false, "constructor": false}, {"identifier": "getPropertyString", "parameters": "(Object root, String[] properties)", "modifiers": "private static", "return": "String", "signature": "String getPropertyString(Object root, String[] properties)", "full_signature": "private static String getPropertyString(Object root, String[] properties)", "class_method_signature": "BeanUtils.getPropertyString(Object root, String[] properties)", "testcase": false, "constructor": false}, {"identifier": "getPropertyByte", "parameters": "( final Object root, final String... properties )", "modifiers": "public static", "return": "byte", "signature": "byte getPropertyByte( final Object root, final String... properties )", "full_signature": "public static byte getPropertyByte( final Object root, final String... properties )", "class_method_signature": "BeanUtils.getPropertyByte( final Object root, final String... properties )", "testcase": false, "constructor": false}, {"identifier": "idxByte", "parameters": "( Object object, String path )", "modifiers": "public static", "return": "byte", "signature": "byte idxByte( Object object, String path )", "full_signature": "public static byte idxByte( Object object, String path )", "class_method_signature": "BeanUtils.idxByte( Object object, String path )", "testcase": false, "constructor": false}, {"identifier": "getPropertyFloat", "parameters": "( final Object root, final String... properties )", "modifiers": "public static", "return": "float", "signature": "float getPropertyFloat( final Object root, final String... properties )", "full_signature": "public static float getPropertyFloat( final Object root, final String... properties )", "class_method_signature": "BeanUtils.getPropertyFloat( final Object root, final String... properties )", "testcase": false, "constructor": false}, {"identifier": "idxFloat", "parameters": "( Object object, String path )", "modifiers": "public static", "return": "float", "signature": "float idxFloat( Object object, String path )", "full_signature": "public static float idxFloat( Object object, String path )", "class_method_signature": "BeanUtils.idxFloat( Object object, String path )", "testcase": false, "constructor": false}, {"identifier": "getPropertyShort", "parameters": "( final Object root,\n                                          final String... properties )", "modifiers": "public static", "return": "short", "signature": "short getPropertyShort( final Object root,\n                                          final String... properties )", "full_signature": "public static short getPropertyShort( final Object root,\n                                          final String... properties )", "class_method_signature": "BeanUtils.getPropertyShort( final Object root,\n                                          final String... properties )", "testcase": false, "constructor": false}, {"identifier": "getPropertyPathType", "parameters": "( final Object root,\n                                          final String... properties )", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> getPropertyPathType( final Object root,\n                                          final String... properties )", "full_signature": "public static Class<?> getPropertyPathType( final Object root,\n                                          final String... properties )", "class_method_signature": "BeanUtils.getPropertyPathType( final Object root,\n                                          final String... properties )", "testcase": false, "constructor": false}, {"identifier": "getPropertyPathField", "parameters": "( final Object root,\n                                                final String... properties )", "modifiers": "public static", "return": "FieldAccess", "signature": "FieldAccess getPropertyPathField( final Object root,\n                                                final String... properties )", "full_signature": "public static FieldAccess getPropertyPathField( final Object root,\n                                                final String... properties )", "class_method_signature": "BeanUtils.getPropertyPathField( final Object root,\n                                                final String... properties )", "testcase": false, "constructor": false}, {"identifier": "getPropertyPathField", "parameters": "( final Class root,\n                                                    final String... properties )", "modifiers": "public static", "return": "FieldAccess", "signature": "FieldAccess getPropertyPathField( final Class root,\n                                                    final String... properties )", "full_signature": "public static FieldAccess getPropertyPathField( final Class root,\n                                                    final String... properties )", "class_method_signature": "BeanUtils.getPropertyPathField( final Class root,\n                                                    final String... properties )", "testcase": false, "constructor": false}, {"identifier": "idxShort", "parameters": "( Object object, String path )", "modifiers": "public static", "return": "short", "signature": "short idxShort( Object object, String path )", "full_signature": "public static short idxShort( Object object, String path )", "class_method_signature": "BeanUtils.idxShort( Object object, String path )", "testcase": false, "constructor": false}, {"identifier": "idxType", "parameters": "( Object object, String path )", "modifiers": "public static", "return": "Class", "signature": "Class idxType( Object object, String path )", "full_signature": "public static Class idxType( Object object, String path )", "class_method_signature": "BeanUtils.idxType( Object object, String path )", "testcase": false, "constructor": false}, {"identifier": "idxField", "parameters": "( Object object, String path )", "modifiers": "public static", "return": "FieldAccess", "signature": "FieldAccess idxField( Object object, String path )", "full_signature": "public static FieldAccess idxField( Object object, String path )", "class_method_signature": "BeanUtils.idxField( Object object, String path )", "testcase": false, "constructor": false}, {"identifier": "idxField", "parameters": "( Class<?> cls, String path )", "modifiers": "public static", "return": "FieldAccess", "signature": "FieldAccess idxField( Class<?> cls, String path )", "full_signature": "public static FieldAccess idxField( Class<?> cls, String path )", "class_method_signature": "BeanUtils.idxField( Class<?> cls, String path )", "testcase": false, "constructor": false}, {"identifier": "getPropertyChar", "parameters": "( final Object root,\n                                        final String... properties )", "modifiers": "public static", "return": "char", "signature": "char getPropertyChar( final Object root,\n                                        final String... properties )", "full_signature": "public static char getPropertyChar( final Object root,\n                                        final String... properties )", "class_method_signature": "BeanUtils.getPropertyChar( final Object root,\n                                        final String... properties )", "testcase": false, "constructor": false}, {"identifier": "idxChar", "parameters": "( Object object, String path )", "modifiers": "public static", "return": "char", "signature": "char idxChar( Object object, String path )", "full_signature": "public static char idxChar( Object object, String path )", "class_method_signature": "BeanUtils.idxChar( Object object, String path )", "testcase": false, "constructor": false}, {"identifier": "getPropertyDouble", "parameters": "( final Object root,\n                                            final String... properties )", "modifiers": "public static", "return": "double", "signature": "double getPropertyDouble( final Object root,\n                                            final String... properties )", "full_signature": "public static double getPropertyDouble( final Object root,\n                                            final String... properties )", "class_method_signature": "BeanUtils.getPropertyDouble( final Object root,\n                                            final String... properties )", "testcase": false, "constructor": false}, {"identifier": "idxDouble", "parameters": "( Object object, String path )", "modifiers": "public static", "return": "double", "signature": "double idxDouble( Object object, String path )", "full_signature": "public static double idxDouble( Object object, String path )", "class_method_signature": "BeanUtils.idxDouble( Object object, String path )", "testcase": false, "constructor": false}, {"identifier": "getPropertyLong", "parameters": "( final Object root,\n                                        final String... properties )", "modifiers": "public static", "return": "long", "signature": "long getPropertyLong( final Object root,\n                                        final String... properties )", "full_signature": "public static long getPropertyLong( final Object root,\n                                        final String... properties )", "class_method_signature": "BeanUtils.getPropertyLong( final Object root,\n                                        final String... properties )", "testcase": false, "constructor": false}, {"identifier": "idxLong", "parameters": "( Object object, String path )", "modifiers": "public static", "return": "long", "signature": "long idxLong( Object object, String path )", "full_signature": "public static long idxLong( Object object, String path )", "class_method_signature": "BeanUtils.idxLong( Object object, String path )", "testcase": false, "constructor": false}, {"identifier": "getPropertyBoolean", "parameters": "( final Object root,\n                                              final String... properties )", "modifiers": "public static", "return": "boolean", "signature": "boolean getPropertyBoolean( final Object root,\n                                              final String... properties )", "full_signature": "public static boolean getPropertyBoolean( final Object root,\n                                              final String... properties )", "class_method_signature": "BeanUtils.getPropertyBoolean( final Object root,\n                                              final String... properties )", "testcase": false, "constructor": false}, {"identifier": "idxBoolean", "parameters": "( Object object, String path )", "modifiers": "public static", "return": "boolean", "signature": "boolean idxBoolean( Object object, String path )", "full_signature": "public static boolean idxBoolean( Object object, String path )", "class_method_signature": "BeanUtils.idxBoolean( Object object, String path )", "testcase": false, "constructor": false}, {"identifier": "collectionToMap", "parameters": "( String propertyKey, Collection<V> values )", "modifiers": "public static", "return": "Map<String, V>", "signature": "Map<String, V> collectionToMap( String propertyKey, Collection<V> values )", "full_signature": "public static Map<String, V> collectionToMap( String propertyKey, Collection<V> values )", "class_method_signature": "BeanUtils.collectionToMap( String propertyKey, Collection<V> values )", "testcase": false, "constructor": false}, {"identifier": "copyPropertiesFromMap", "parameters": "( final Object dest, final Map<String, Object> src )", "modifiers": "public static", "return": "void", "signature": "void copyPropertiesFromMap( final Object dest, final Map<String, Object> src )", "full_signature": "public static void copyPropertiesFromMap( final Object dest, final Map<String, Object> src )", "class_method_signature": "BeanUtils.copyPropertiesFromMap( final Object dest, final Map<String, Object> src )", "testcase": false, "constructor": false}, {"identifier": "copyProperties", "parameters": "( Object object, Map<String, Object> properties )", "modifiers": "public static", "return": "void", "signature": "void copyProperties( Object object, Map<String, Object> properties )", "full_signature": "public static void copyProperties( Object object, Map<String, Object> properties )", "class_method_signature": "BeanUtils.copyProperties( Object object, Map<String, Object> properties )", "testcase": false, "constructor": false}, {"identifier": "_getFieldValuesFromCollectionOrArray", "parameters": "(Object object,\n                                                               final String key)", "modifiers": "private static", "return": "Object", "signature": "Object _getFieldValuesFromCollectionOrArray(Object object,\n                                                               final String key)", "full_signature": "private static Object _getFieldValuesFromCollectionOrArray(Object object,\n                                                               final String key)", "class_method_signature": "BeanUtils._getFieldValuesFromCollectionOrArray(Object object,\n                                                               final String key)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "( T item )", "modifiers": "@SuppressWarnings(\"all\") public static", "return": "T", "signature": "T copy( T item )", "full_signature": "@SuppressWarnings(\"all\") public static T copy( T item )", "class_method_signature": "BeanUtils.copy( T item )", "testcase": false, "constructor": false}, {"identifier": "fieldByFieldCopy", "parameters": "( T item )", "modifiers": "public static", "return": "T", "signature": "T fieldByFieldCopy( T item )", "full_signature": "public static T fieldByFieldCopy( T item )", "class_method_signature": "BeanUtils.fieldByFieldCopy( T item )", "testcase": false, "constructor": false}, {"identifier": "copyProperties", "parameters": "( Object src, Object dest )", "modifiers": "public static", "return": "void", "signature": "void copyProperties( Object src, Object dest )", "full_signature": "public static void copyProperties( Object src, Object dest )", "class_method_signature": "BeanUtils.copyProperties( Object src, Object dest )", "testcase": false, "constructor": false}, {"identifier": "createFromSrc", "parameters": "( Object src, Class<T> dest )", "modifiers": "public static", "return": "T", "signature": "T createFromSrc( Object src, Class<T> dest )", "full_signature": "public static T createFromSrc( Object src, Class<T> dest )", "class_method_signature": "BeanUtils.createFromSrc( Object src, Class<T> dest )", "testcase": false, "constructor": false}, {"identifier": "copyProperties", "parameters": "( Object src, Object dest, String... ignore)", "modifiers": "public static", "return": "void", "signature": "void copyProperties( Object src, Object dest, String... ignore)", "full_signature": "public static void copyProperties( Object src, Object dest, String... ignore)", "class_method_signature": "BeanUtils.copyProperties( Object src, Object dest, String... ignore)", "testcase": false, "constructor": false}, {"identifier": "copyProperties", "parameters": "( Object src, Object dest, Set<String> ignore)", "modifiers": "public static", "return": "void", "signature": "void copyProperties( Object src, Object dest, Set<String> ignore)", "full_signature": "public static void copyProperties( Object src, Object dest, Set<String> ignore)", "class_method_signature": "BeanUtils.copyProperties( Object src, Object dest, Set<String> ignore)", "testcase": false, "constructor": false}, {"identifier": "fieldByFieldCopy", "parameters": "( Object src, Object dst, Set<String> ignore )", "modifiers": "private static", "return": "void", "signature": "void fieldByFieldCopy( Object src, Object dst, Set<String> ignore )", "full_signature": "private static void fieldByFieldCopy( Object src, Object dst, Set<String> ignore )", "class_method_signature": "BeanUtils.fieldByFieldCopy( Object src, Object dst, Set<String> ignore )", "testcase": false, "constructor": false}, {"identifier": "fieldByFieldCopy", "parameters": "( Object src, Object dst )", "modifiers": "private static", "return": "void", "signature": "void fieldByFieldCopy( Object src, Object dst )", "full_signature": "private static void fieldByFieldCopy( Object src, Object dst )", "class_method_signature": "BeanUtils.fieldByFieldCopy( Object src, Object dst )", "testcase": false, "constructor": false}, {"identifier": "copySrcFieldToDestField", "parameters": "( Object src, Object dst, FieldAccess dstField, FieldAccess srcField, Set<String> ignore )", "modifiers": "private static", "return": "void", "signature": "void copySrcFieldToDestField( Object src, Object dst, FieldAccess dstField, FieldAccess srcField, Set<String> ignore )", "full_signature": "private static void copySrcFieldToDestField( Object src, Object dst, FieldAccess dstField, FieldAccess srcField, Set<String> ignore )", "class_method_signature": "BeanUtils.copySrcFieldToDestField( Object src, Object dst, FieldAccess dstField, FieldAccess srcField, Set<String> ignore )", "testcase": false, "constructor": false}, {"identifier": "handleCollectionFieldCopy", "parameters": "( Object dst, FieldAccess dstField, Collection srcValue )", "modifiers": "private static", "return": "void", "signature": "void handleCollectionFieldCopy( Object dst, FieldAccess dstField, Collection srcValue )", "full_signature": "private static void handleCollectionFieldCopy( Object dst, FieldAccess dstField, Collection srcValue )", "class_method_signature": "BeanUtils.handleCollectionFieldCopy( Object dst, FieldAccess dstField, Collection srcValue )", "testcase": false, "constructor": false}, {"identifier": "idx", "parameters": "( Object object, int index )", "modifiers": "public static", "return": "Object", "signature": "Object idx( Object object, int index )", "full_signature": "public static Object idx( Object object, int index )", "class_method_signature": "BeanUtils.idx( Object object, int index )", "testcase": false, "constructor": false}, {"identifier": "idx", "parameters": "( Object object, int index, Object value )", "modifiers": "public static", "return": "void", "signature": "void idx( Object object, int index, Object value )", "full_signature": "public static void idx( Object object, int index, Object value )", "class_method_signature": "BeanUtils.idx( Object object, int index, Object value )", "testcase": false, "constructor": false}, {"identifier": "idx", "parameters": "( Class<T> type, Object object, String property )", "modifiers": "public static", "return": "T", "signature": "T idx( Class<T> type, Object object, String property )", "full_signature": "public static T idx( Class<T> type, Object object, String property )", "class_method_signature": "BeanUtils.idx( Class<T> type, Object object, String property )", "testcase": false, "constructor": false}, {"identifier": "atIndex", "parameters": "( Class<T> type, Object object, String property )", "modifiers": "public static", "return": "T", "signature": "T atIndex( Class<T> type, Object object, String property )", "full_signature": "public static T atIndex( Class<T> type, Object object, String property )", "class_method_signature": "BeanUtils.atIndex( Class<T> type, Object object, String property )", "testcase": false, "constructor": false}, {"identifier": "isPropPath", "parameters": "(String prop)", "modifiers": "public static", "return": "boolean", "signature": "boolean isPropPath(String prop)", "full_signature": "public static boolean isPropPath(String prop)", "class_method_signature": "BeanUtils.isPropPath(String prop)", "testcase": false, "constructor": false}, {"identifier": "setCollectionProperty", "parameters": "(Collection<?> list, String propertyName, Object value)", "modifiers": "public static", "return": "void", "signature": "void setCollectionProperty(Collection<?> list, String propertyName, Object value)", "full_signature": "public static void setCollectionProperty(Collection<?> list, String propertyName, Object value)", "class_method_signature": "BeanUtils.setCollectionProperty(Collection<?> list, String propertyName, Object value)", "testcase": false, "constructor": false}, {"identifier": "setIterableProperty", "parameters": "(Iterable<?> list, String propertyName, Object value)", "modifiers": "public static", "return": "void", "signature": "void setIterableProperty(Iterable<?> list, String propertyName, Object value)", "full_signature": "public static void setIterableProperty(Iterable<?> list, String propertyName, Object value)", "class_method_signature": "BeanUtils.setIterableProperty(Iterable<?> list, String propertyName, Object value)", "testcase": false, "constructor": false}, {"identifier": "asPrettyJsonString", "parameters": "(Object bean)", "modifiers": "public static", "return": "String", "signature": "String asPrettyJsonString(Object bean)", "full_signature": "public static String asPrettyJsonString(Object bean)", "class_method_signature": "BeanUtils.asPrettyJsonString(Object bean)", "testcase": false, "constructor": false}, {"identifier": "asPrettyJsonString", "parameters": "(Mapper mapper, Object bean)", "modifiers": "public static", "return": "String", "signature": "String asPrettyJsonString(Mapper mapper, Object bean)", "full_signature": "public static String asPrettyJsonString(Mapper mapper, Object bean)", "class_method_signature": "BeanUtils.asPrettyJsonString(Mapper mapper, Object bean)", "testcase": false, "constructor": false}], "file": "reflekt/src/main/java/io/advantageous/boon/core/reflection/BeanUtils.java"}, "focal_method": {"identifier": "copyProperties", "parameters": "( Object object, Map<String, Object> properties )", "modifiers": "public static", "return": "void", "body": "public static void copyProperties( Object object, Map<String, Object> properties ) {\n\n        Set<Map.Entry<String, Object>> props = properties.entrySet();\n        for ( Map.Entry<String, Object> entry : props ) {\n            setPropertyValue( object, entry.getValue(), entry.getKey() );\n        }\n    }", "signature": "void copyProperties( Object object, Map<String, Object> properties )", "full_signature": "public static void copyProperties( Object object, Map<String, Object> properties )", "class_method_signature": "BeanUtils.copyProperties( Object object, Map<String, Object> properties )", "testcase": false, "constructor": false, "invocations": ["entrySet", "setPropertyValue", "getValue", "getKey"]}, "repository": {"repo_id": 33015857, "url": "https://github.com/advantageous/boon", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 18, "size": 6174, "license": "licensed"}}