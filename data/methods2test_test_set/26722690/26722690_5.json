{"test_class": {"identifier": "DAOUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(DAOUtilsTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(DAOUtilsTest.class)", "var_name": "LOG"}, {"original_string": "@Rule\n    public TestRule watcher = new TestWatcher() {\n        @Override\n        protected void starting(Description description) {\n            LOG.info(\"executing test {}\", description.toString());\n        }\n    };", "modifier": "@Rule\n    public", "type": "TestRule", "declarator": "watcher = new TestWatcher() {\n        @Override\n        protected void starting(Description description) {\n            LOG.info(\"executing test {}\", description.toString());\n        }\n    }", "var_name": "watcher"}], "file": "mongodb/src/test/java/org/restheart/mongodb/db/DAOUtilsTest.java"}, "test_case": {"identifier": "testValidContent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidContent() {\n        BsonDocument dbo = DAOUtils.validContent(null);\n        assertNotNull(dbo);\n        assertTrue(dbo.isDocument());\n\n        dbo = new BsonDocument(\"name\", new BsonString(\"test\"));\n        assertEquals(DAOUtils.validContent(dbo), dbo);\n    }", "signature": "void testValidContent()", "full_signature": "@Test public void testValidContent()", "class_method_signature": "DAOUtilsTest.testValidContent()", "testcase": true, "constructor": false, "invocations": ["validContent", "assertNotNull", "assertTrue", "isDocument", "assertEquals", "validContent"]}, "focal_class": {"identifier": "DAOUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final static Logger LOGGER = LoggerFactory.getLogger(DAOUtils.class);", "modifier": "public final static", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(DAOUtils.class)", "var_name": "LOGGER"}, {"original_string": "public static final int DUPLICATE_KEY_ERROR = 11000;", "modifier": "public static final", "type": "int", "declarator": "DUPLICATE_KEY_ERROR = 11000", "var_name": "DUPLICATE_KEY_ERROR"}, {"original_string": "public static final int BAD_VALUE_KEY_ERROR = 2;", "modifier": "public static final", "type": "int", "declarator": "BAD_VALUE_KEY_ERROR = 2", "var_name": "BAD_VALUE_KEY_ERROR"}, {"original_string": "public final static FindOneAndUpdateOptions FAU_UPSERT_OPS = new FindOneAndUpdateOptions()\n            .upsert(true).returnDocument(ReturnDocument.AFTER);", "modifier": "public final static", "type": "FindOneAndUpdateOptions", "declarator": "FAU_UPSERT_OPS = new FindOneAndUpdateOptions()\n            .upsert(true).returnDocument(ReturnDocument.AFTER)", "var_name": "FAU_UPSERT_OPS"}, {"original_string": "public final static FindOneAndUpdateOptions FAU_NOT_UPSERT_OPS = new FindOneAndUpdateOptions()\n            .upsert(false).returnDocument(ReturnDocument.AFTER);", "modifier": "public final static", "type": "FindOneAndUpdateOptions", "declarator": "FAU_NOT_UPSERT_OPS = new FindOneAndUpdateOptions()\n            .upsert(false).returnDocument(ReturnDocument.AFTER)", "var_name": "FAU_NOT_UPSERT_OPS"}, {"original_string": "public final static FindOneAndUpdateOptions FOU_AFTER_UPSERT_OPS = new FindOneAndUpdateOptions()\n            .upsert(true).returnDocument(ReturnDocument.AFTER);", "modifier": "public final static", "type": "FindOneAndUpdateOptions", "declarator": "FOU_AFTER_UPSERT_OPS = new FindOneAndUpdateOptions()\n            .upsert(true).returnDocument(ReturnDocument.AFTER)", "var_name": "FOU_AFTER_UPSERT_OPS"}, {"original_string": "public final static FindOneAndReplaceOptions FOR_AFTER_UPSERT_OPS = new FindOneAndReplaceOptions()\n            .upsert(true).returnDocument(ReturnDocument.AFTER);", "modifier": "public final static", "type": "FindOneAndReplaceOptions", "declarator": "FOR_AFTER_UPSERT_OPS = new FindOneAndReplaceOptions()\n            .upsert(true).returnDocument(ReturnDocument.AFTER)", "var_name": "FOR_AFTER_UPSERT_OPS"}, {"original_string": "public final static FindOneAndUpdateOptions FOU_AFTER_NOT_UPSERT_OPS = new FindOneAndUpdateOptions()\n            .upsert(false).returnDocument(ReturnDocument.AFTER);", "modifier": "public final static", "type": "FindOneAndUpdateOptions", "declarator": "FOU_AFTER_NOT_UPSERT_OPS = new FindOneAndUpdateOptions()\n            .upsert(false).returnDocument(ReturnDocument.AFTER)", "var_name": "FOU_AFTER_NOT_UPSERT_OPS"}, {"original_string": "public final static FindOneAndReplaceOptions FOR_AFTER_NOT_UPSERT_OPS = new FindOneAndReplaceOptions()\n            .upsert(false).returnDocument(ReturnDocument.AFTER);", "modifier": "public final static", "type": "FindOneAndReplaceOptions", "declarator": "FOR_AFTER_NOT_UPSERT_OPS = new FindOneAndReplaceOptions()\n            .upsert(false).returnDocument(ReturnDocument.AFTER)", "var_name": "FOR_AFTER_NOT_UPSERT_OPS"}, {"original_string": "public final static UpdateOptions U_UPSERT_OPS = new UpdateOptions()\n            .upsert(true);", "modifier": "public final static", "type": "UpdateOptions", "declarator": "U_UPSERT_OPS = new UpdateOptions()\n            .upsert(true)", "var_name": "U_UPSERT_OPS"}, {"original_string": "public final static UpdateOptions U_NOT_UPSERT_OPS = new UpdateOptions()\n            .upsert(false);", "modifier": "public final static", "type": "UpdateOptions", "declarator": "U_NOT_UPSERT_OPS = new UpdateOptions()\n            .upsert(false)", "var_name": "U_NOT_UPSERT_OPS"}, {"original_string": "public final static ReplaceOptions R_NOT_UPSERT_OPS = new ReplaceOptions()\n            .upsert(false);", "modifier": "public final static", "type": "ReplaceOptions", "declarator": "R_NOT_UPSERT_OPS = new ReplaceOptions()\n            .upsert(false)", "var_name": "R_NOT_UPSERT_OPS"}, {"original_string": "public final static BulkWriteOptions BWO_NOT_ORDERED = new BulkWriteOptions()\n            .ordered(false);", "modifier": "public final static", "type": "BulkWriteOptions", "declarator": "BWO_NOT_ORDERED = new BulkWriteOptions()\n            .ordered(false)", "var_name": "BWO_NOT_ORDERED"}, {"original_string": "private static final Bson IMPOSSIBLE_CONDITION = eq(\"_etag\", new ObjectId());", "modifier": "private static final", "type": "Bson", "declarator": "IMPOSSIBLE_CONDITION = eq(\"_etag\", new ObjectId())", "var_name": "IMPOSSIBLE_CONDITION"}], "methods": [{"identifier": "updateMetadata", "parameters": "(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final Object documentId,\n            final BsonDocument filter,\n            final BsonDocument shardKeys,\n            final BsonDocument data,\n            final boolean patching)", "modifiers": "public static", "return": "OperationResult", "signature": "OperationResult updateMetadata(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final Object documentId,\n            final BsonDocument filter,\n            final BsonDocument shardKeys,\n            final BsonDocument data,\n            final boolean patching)", "full_signature": "public static OperationResult updateMetadata(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final Object documentId,\n            final BsonDocument filter,\n            final BsonDocument shardKeys,\n            final BsonDocument data,\n            final boolean patching)", "class_method_signature": "DAOUtils.updateMetadata(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final Object documentId,\n            final BsonDocument filter,\n            final BsonDocument shardKeys,\n            final BsonDocument data,\n            final boolean patching)", "testcase": false, "constructor": false}, {"identifier": "updateDocument", "parameters": "(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final Object documentId,\n            final BsonDocument filter,\n            final BsonDocument shardKeys,\n            final BsonDocument data,\n            final boolean replace)", "modifiers": "public static", "return": "OperationResult", "signature": "OperationResult updateDocument(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final Object documentId,\n            final BsonDocument filter,\n            final BsonDocument shardKeys,\n            final BsonDocument data,\n            final boolean replace)", "full_signature": "public static OperationResult updateDocument(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final Object documentId,\n            final BsonDocument filter,\n            final BsonDocument shardKeys,\n            final BsonDocument data,\n            final boolean replace)", "class_method_signature": "DAOUtils.updateDocument(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final Object documentId,\n            final BsonDocument filter,\n            final BsonDocument shardKeys,\n            final BsonDocument data,\n            final boolean replace)", "testcase": false, "constructor": false}, {"identifier": "updateDocument", "parameters": "(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final Object documentId,\n            final BsonDocument filter,\n            final BsonDocument shardKeys,\n            final BsonDocument data,\n            final boolean replace,\n            final boolean deepPatching,\n            final boolean allowUpsert)", "modifiers": "@SuppressWarnings(\"rawtypes\") public static", "return": "OperationResult", "signature": "OperationResult updateDocument(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final Object documentId,\n            final BsonDocument filter,\n            final BsonDocument shardKeys,\n            final BsonDocument data,\n            final boolean replace,\n            final boolean deepPatching,\n            final boolean allowUpsert)", "full_signature": "@SuppressWarnings(\"rawtypes\") public static OperationResult updateDocument(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final Object documentId,\n            final BsonDocument filter,\n            final BsonDocument shardKeys,\n            final BsonDocument data,\n            final boolean replace,\n            final boolean deepPatching,\n            final boolean allowUpsert)", "class_method_signature": "DAOUtils.updateDocument(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final Object documentId,\n            final BsonDocument filter,\n            final BsonDocument shardKeys,\n            final BsonDocument data,\n            final boolean replace,\n            final boolean deepPatching,\n            final boolean allowUpsert)", "testcase": false, "constructor": false}, {"identifier": "restoreDocument", "parameters": "(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final Object documentId,\n            final BsonDocument shardKeys,\n            final BsonDocument data,\n            final Object etag,\n            final String etagLocation)", "modifiers": "public static", "return": "boolean", "signature": "boolean restoreDocument(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final Object documentId,\n            final BsonDocument shardKeys,\n            final BsonDocument data,\n            final Object etag,\n            final String etagLocation)", "full_signature": "public static boolean restoreDocument(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final Object documentId,\n            final BsonDocument shardKeys,\n            final BsonDocument data,\n            final Object etag,\n            final String etagLocation)", "class_method_signature": "DAOUtils.restoreDocument(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final Object documentId,\n            final BsonDocument shardKeys,\n            final BsonDocument data,\n            final Object etag,\n            final String etagLocation)", "testcase": false, "constructor": false}, {"identifier": "bulkUpsertDocuments", "parameters": "(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final BsonArray documents,\n            final BsonDocument filter,\n            final BsonDocument shardKeys)", "modifiers": "public static", "return": "BulkOperationResult", "signature": "BulkOperationResult bulkUpsertDocuments(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final BsonArray documents,\n            final BsonDocument filter,\n            final BsonDocument shardKeys)", "full_signature": "public static BulkOperationResult bulkUpsertDocuments(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final BsonArray documents,\n            final BsonDocument filter,\n            final BsonDocument shardKeys)", "class_method_signature": "DAOUtils.bulkUpsertDocuments(\n            final ClientSession cs,\n            final MongoCollection<BsonDocument> coll,\n            final BsonArray documents,\n            final BsonDocument filter,\n            final BsonDocument shardKeys)", "testcase": false, "constructor": false}, {"identifier": "validContent", "parameters": "(final BsonDocument newContent)", "modifiers": "static", "return": "BsonDocument", "signature": "BsonDocument validContent(final BsonDocument newContent)", "full_signature": "static BsonDocument validContent(final BsonDocument newContent)", "class_method_signature": "DAOUtils.validContent(final BsonDocument newContent)", "testcase": false, "constructor": false}, {"identifier": "getBulkWriteModel", "parameters": "(\n            final MongoCollection<BsonDocument> mcoll,\n            final BsonArray documents,\n            final BsonDocument filter,\n            final BsonDocument shardKeys,\n            final ObjectId etag)", "modifiers": "static", "return": "List<WriteModel<BsonDocument>>", "signature": "List<WriteModel<BsonDocument>> getBulkWriteModel(\n            final MongoCollection<BsonDocument> mcoll,\n            final BsonArray documents,\n            final BsonDocument filter,\n            final BsonDocument shardKeys,\n            final ObjectId etag)", "full_signature": "static List<WriteModel<BsonDocument>> getBulkWriteModel(\n            final MongoCollection<BsonDocument> mcoll,\n            final BsonArray documents,\n            final BsonDocument filter,\n            final BsonDocument shardKeys,\n            final ObjectId etag)", "class_method_signature": "DAOUtils.getBulkWriteModel(\n            final MongoCollection<BsonDocument> mcoll,\n            final BsonArray documents,\n            final BsonDocument filter,\n            final BsonDocument shardKeys,\n            final ObjectId etag)", "testcase": false, "constructor": false}, {"identifier": "getUpdateDocument", "parameters": "(final BsonDocument data)", "modifiers": "static", "return": "BsonDocument", "signature": "BsonDocument getUpdateDocument(final BsonDocument data)", "full_signature": "static BsonDocument getUpdateDocument(final BsonDocument data)", "class_method_signature": "DAOUtils.getUpdateDocument(final BsonDocument data)", "testcase": false, "constructor": false}, {"identifier": "getReplaceDocument", "parameters": "(final BsonDocument doc)", "modifiers": "static", "return": "BsonDocument", "signature": "BsonDocument getReplaceDocument(final BsonDocument doc)", "full_signature": "static BsonDocument getReplaceDocument(final BsonDocument doc)", "class_method_signature": "DAOUtils.getReplaceDocument(final BsonDocument doc)", "testcase": false, "constructor": false}, {"identifier": "getUpdateDocument", "parameters": "(\n            final BsonDocument data,\n            final boolean flatten)", "modifiers": "static", "return": "BsonDocument", "signature": "BsonDocument getUpdateDocument(\n            final BsonDocument data,\n            final boolean flatten)", "full_signature": "static BsonDocument getUpdateDocument(\n            final BsonDocument data,\n            final boolean flatten)", "class_method_signature": "DAOUtils.getUpdateDocument(\n            final BsonDocument data,\n            final boolean flatten)", "testcase": false, "constructor": false}, {"identifier": "DAOUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " DAOUtils()", "full_signature": "private  DAOUtils()", "class_method_signature": "DAOUtils.DAOUtils()", "testcase": false, "constructor": true}], "file": "mongodb/src/main/java/org/restheart/mongodb/db/DAOUtils.java"}, "focal_method": {"identifier": "validContent", "parameters": "(final BsonDocument newContent)", "modifiers": "static", "return": "BsonDocument", "body": "static BsonDocument validContent(final BsonDocument newContent) {\n        return (newContent == null) ? new BsonDocument() : newContent;\n    }", "signature": "BsonDocument validContent(final BsonDocument newContent)", "full_signature": "static BsonDocument validContent(final BsonDocument newContent)", "class_method_signature": "DAOUtils.validContent(final BsonDocument newContent)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 26722690, "url": "https://github.com/SoftInstigate/restheart", "stars": 582, "created": "11/16/2014 6:01:01 PM +00:00", "updates": "2020-01-18T15:31:59+00:00", "fork": "False", "license": "licensed"}}