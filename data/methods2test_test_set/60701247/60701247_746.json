{"test_class": {"identifier": "CpuProfilerStageTest", "superclass": "extends AspectObserver", "interfaces": "", "fields": [{"original_string": "private static final int FAKE_PID = 20;", "modifier": "private static final", "type": "int", "declarator": "FAKE_PID = 20", "var_name": "FAKE_PID"}, {"original_string": "private final FakeTimer myTimer = new FakeTimer();", "modifier": "private final", "type": "FakeTimer", "declarator": "myTimer = new FakeTimer()", "var_name": "myTimer"}, {"original_string": "private final FakeTransportService myTransportService = new FakeTransportService(myTimer);", "modifier": "private final", "type": "FakeTransportService", "declarator": "myTransportService = new FakeTransportService(myTimer)", "var_name": "myTransportService"}, {"original_string": "private final FakeCpuService myCpuService = new FakeCpuService();", "modifier": "private final", "type": "FakeCpuService", "declarator": "myCpuService = new FakeCpuService()", "var_name": "myCpuService"}, {"original_string": "private final FakeMemoryService myMemoryService = new FakeMemoryService();", "modifier": "private final", "type": "FakeMemoryService", "declarator": "myMemoryService = new FakeMemoryService()", "var_name": "myMemoryService"}, {"original_string": "@Rule\n  public FakeGrpcChannel myGrpcChannel =\n    new FakeGrpcChannel(\"CpuProfilerStageTestChannel\", myCpuService, myTransportService, new FakeProfilerService(myTimer),\n                        myMemoryService, new FakeEventService(), FakeNetworkService.newBuilder().build());", "modifier": "@Rule\n  public", "type": "FakeGrpcChannel", "declarator": "myGrpcChannel =\n    new FakeGrpcChannel(\"CpuProfilerStageTestChannel\", myCpuService, myTransportService, new FakeProfilerService(myTimer),\n                        myMemoryService, new FakeEventService(), FakeNetworkService.newBuilder().build())", "var_name": "myGrpcChannel"}, {"original_string": "private ProfilerClient myProfilerClient = new ProfilerClient(myGrpcChannel.getName());", "modifier": "private", "type": "ProfilerClient", "declarator": "myProfilerClient = new ProfilerClient(myGrpcChannel.getName())", "var_name": "myProfilerClient"}, {"original_string": "private CpuProfilerStage myStage;", "modifier": "private", "type": "CpuProfilerStage", "declarator": "myStage", "var_name": "myStage"}, {"original_string": "private FakeIdeProfilerServices myServices;", "modifier": "private", "type": "FakeIdeProfilerServices", "declarator": "myServices", "var_name": "myServices"}, {"original_string": "private boolean myCaptureDetailsCalled;", "modifier": "private", "type": "boolean", "declarator": "myCaptureDetailsCalled", "var_name": "myCaptureDetailsCalled"}], "file": "profilers/testSrc/com/android/tools/profilers/cpu/CpuProfilerStageTest.java"}, "test_case": {"identifier": "captureStageTransitionTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void captureStageTransitionTest() throws Exception {\n    myServices.enableCpuCaptureStage(false);\n    myServices.enableEventsPipeline(true);\n    // Needs to be set true else null is inserted into the capture parser.\n    myServices.setShouldProceedYesNoDialog(true);\n    // Try to parse a simpleperf trace with ART config.\n    ProfilingConfiguration config = new ProfilingConfiguration(\"My Config\",\n                                                               Cpu.CpuTraceType.ART,\n                                                               Cpu.CpuTraceMode.SAMPLED);\n    CpuProfilerTestUtils.captureSuccessfully(myStage, myCpuService, myTransportService, CpuProfilerTestUtils.readValidTrace());\n    myStage.getProfilerConfigModel().setProfilingConfiguration(config);\n    assertThat(myStage.getStudioProfilers().getStage()).isEqualTo(myStage);\n    myServices.enableCpuCaptureStage(true);\n    myTimer.setCurrentTimeNs(1);  // Update the timer to generate a different trace id for the second trace.\n    // Don't pass a capture to the test utils for now as we don't want to block on parsing.\n    CpuProfilerTestUtils.captureSuccessfully(myStage, myCpuService, myTransportService, CpuProfilerTestUtils.readValidTrace());\n    // Force a flush of the UI event queue.\n    assertThat(myStage.getStudioProfilers().getStage().getClass()).isAssignableTo(CpuCaptureStage.class);\n  }", "signature": "void captureStageTransitionTest()", "full_signature": "@Test public void captureStageTransitionTest()", "class_method_signature": "CpuProfilerStageTest.captureStageTransitionTest()", "testcase": true, "constructor": false, "invocations": ["enableCpuCaptureStage", "enableEventsPipeline", "setShouldProceedYesNoDialog", "captureSuccessfully", "readValidTrace", "setProfilingConfiguration", "getProfilerConfigModel", "isEqualTo", "assertThat", "getStage", "getStudioProfilers", "enableCpuCaptureStage", "setCurrentTimeNs", "captureSuccessfully", "readValidTrace", "isAssignableTo", "assertThat", "getClass", "getStage", "getStudioProfilers"]}, "focal_class": {"identifier": "CpuProfilerStage", "superclass": "extends StreamingStage", "interfaces": "implements CodeNavigator.Listener", "fields": [{"original_string": "private static final String HAS_USED_CPU_CAPTURE = \"cpu.used.capture\";", "modifier": "private static final", "type": "String", "declarator": "HAS_USED_CPU_CAPTURE = \"cpu.used.capture\"", "var_name": "HAS_USED_CPU_CAPTURE"}, {"original_string": "private static final SingleUnitAxisFormatter CPU_USAGE_FORMATTER = new SingleUnitAxisFormatter(1, 5, 10, \"%\");", "modifier": "private static final", "type": "SingleUnitAxisFormatter", "declarator": "CPU_USAGE_FORMATTER = new SingleUnitAxisFormatter(1, 5, 10, \"%\")", "var_name": "CPU_USAGE_FORMATTER"}, {"original_string": "private static final SingleUnitAxisFormatter NUM_THREADS_AXIS = new SingleUnitAxisFormatter(1, 5, 1, \"\");", "modifier": "private static final", "type": "SingleUnitAxisFormatter", "declarator": "NUM_THREADS_AXIS = new SingleUnitAxisFormatter(1, 5, 1, \"\")", "var_name": "NUM_THREADS_AXIS"}, {"original_string": "public static final int CPU_ART_STOP_TIMEOUT_SEC = Math.max(5, Math.min(Integer.getInteger(\"profiler.cpu.art.stop.timeout.sec\", 120),\n                                                                          5 * 60));", "modifier": "public static final", "type": "int", "declarator": "CPU_ART_STOP_TIMEOUT_SEC = Math.max(5, Math.min(Integer.getInteger(\"profiler.cpu.art.stop.timeout.sec\", 120),\n                                                                          5 * 60))", "var_name": "CPU_ART_STOP_TIMEOUT_SEC"}, {"original_string": "static final double IMPORTED_TRACE_VIEW_EXPAND_PERCENTAGE = 0.1;", "modifier": "static final", "type": "double", "declarator": "IMPORTED_TRACE_VIEW_EXPAND_PERCENTAGE = 0.1", "var_name": "IMPORTED_TRACE_VIEW_EXPAND_PERCENTAGE"}, {"original_string": "private static final CaptureDetails.Type DEFAULT_CAPTURE_DETAILS = CaptureDetails.Type.CALL_CHART;", "modifier": "private static final", "type": "CaptureDetails.Type", "declarator": "DEFAULT_CAPTURE_DETAILS = CaptureDetails.Type.CALL_CHART", "var_name": "DEFAULT_CAPTURE_DETAILS"}, {"original_string": "private final CpuThreadsModel myThreadsStates;", "modifier": "private final", "type": "CpuThreadsModel", "declarator": "myThreadsStates", "var_name": "myThreadsStates"}, {"original_string": "private final CpuKernelModel myCpuKernelModel;", "modifier": "private final", "type": "CpuKernelModel", "declarator": "myCpuKernelModel", "var_name": "myCpuKernelModel"}, {"original_string": "private final ClampedAxisComponentModel myCpuUsageAxis;", "modifier": "private final", "type": "ClampedAxisComponentModel", "declarator": "myCpuUsageAxis", "var_name": "myCpuUsageAxis"}, {"original_string": "private final ClampedAxisComponentModel myThreadCountAxis;", "modifier": "private final", "type": "ClampedAxisComponentModel", "declarator": "myThreadCountAxis", "var_name": "myThreadCountAxis"}, {"original_string": "private final ResizingAxisComponentModel myTimeAxisGuide;", "modifier": "private final", "type": "ResizingAxisComponentModel", "declarator": "myTimeAxisGuide", "var_name": "myTimeAxisGuide"}, {"original_string": "private final DetailedCpuUsage myCpuUsage;", "modifier": "private final", "type": "DetailedCpuUsage", "declarator": "myCpuUsage", "var_name": "myCpuUsage"}, {"original_string": "private final CpuStageLegends myLegends;", "modifier": "private final", "type": "CpuStageLegends", "declarator": "myLegends", "var_name": "myLegends"}, {"original_string": "private final DurationDataModel<CpuTraceInfo> myTraceDurations;", "modifier": "private final", "type": "DurationDataModel<CpuTraceInfo>", "declarator": "myTraceDurations", "var_name": "myTraceDurations"}, {"original_string": "private final EventMonitor myEventMonitor;", "modifier": "private final", "type": "EventMonitor", "declarator": "myEventMonitor", "var_name": "myEventMonitor"}, {"original_string": "private final RangeSelectionModel myRangeSelectionModel;", "modifier": "private final", "type": "RangeSelectionModel", "declarator": "myRangeSelectionModel", "var_name": "myRangeSelectionModel"}, {"original_string": "private final EaseOutModel myInstructionsEaseOutModel;", "modifier": "private final", "type": "EaseOutModel", "declarator": "myInstructionsEaseOutModel", "var_name": "myInstructionsEaseOutModel"}, {"original_string": "private final CpuProfilerConfigModel myProfilerConfigModel;", "modifier": "private final", "type": "CpuProfilerConfigModel", "declarator": "myProfilerConfigModel", "var_name": "myProfilerConfigModel"}, {"original_string": "private final CpuFramesModel myFramesModel;", "modifier": "private final", "type": "CpuFramesModel", "declarator": "myFramesModel", "var_name": "myFramesModel"}, {"original_string": "@NotNull\n  private final CpuTraceDataSeries myCpuTraceDataSeries;", "modifier": "@NotNull\n  private final", "type": "CpuTraceDataSeries", "declarator": "myCpuTraceDataSeries", "var_name": "myCpuTraceDataSeries"}, {"original_string": "private final AspectModel<CpuProfilerAspect> myAspect = new AspectModel<>();", "modifier": "private final", "type": "AspectModel<CpuProfilerAspect>", "declarator": "myAspect = new AspectModel<>()", "var_name": "myAspect"}, {"original_string": "@NotNull\n  private final CaptureModel myCaptureModel;", "modifier": "@NotNull\n  private final", "type": "CaptureModel", "declarator": "myCaptureModel", "var_name": "myCaptureModel"}, {"original_string": "@NotNull\n  private CaptureState myCaptureState;", "modifier": "@NotNull\n  private", "type": "CaptureState", "declarator": "myCaptureState", "var_name": "myCaptureState"}, {"original_string": "private long myCaptureStartTimeNs;", "modifier": "private", "type": "long", "declarator": "myCaptureStartTimeNs", "var_name": "myCaptureStartTimeNs"}, {"original_string": "private long myCaptureStopTimeNs;", "modifier": "private", "type": "long", "declarator": "myCaptureStopTimeNs", "var_name": "myCaptureStopTimeNs"}, {"original_string": "private final InProgressTraceHandler myInProgressTraceHandler;", "modifier": "private final", "type": "InProgressTraceHandler", "declarator": "myInProgressTraceHandler", "var_name": "myInProgressTraceHandler"}, {"original_string": "@NotNull private Cpu.CpuTraceInfo myInProgressTraceInfo = Cpu.CpuTraceInfo.getDefaultInstance();", "modifier": "@NotNull private", "type": "Cpu.CpuTraceInfo", "declarator": "myInProgressTraceInfo = Cpu.CpuTraceInfo.getDefaultInstance()", "var_name": "myInProgressTraceInfo"}, {"original_string": "@NotNull\n  private final UpdatableManager myUpdatableManager;", "modifier": "@NotNull\n  private final", "type": "UpdatableManager", "declarator": "myUpdatableManager", "var_name": "myUpdatableManager"}, {"original_string": "private final CpuCaptureParser myCaptureParser;", "modifier": "private final", "type": "CpuCaptureParser", "declarator": "myCaptureParser", "var_name": "myCaptureParser"}, {"original_string": "@NotNull\n  private final TraceIdsIterator myTraceIdsIterator;", "modifier": "@NotNull\n  private final", "type": "TraceIdsIterator", "declarator": "myTraceIdsIterator", "var_name": "myTraceIdsIterator"}, {"original_string": "private final boolean myIsImportTraceMode;", "modifier": "private final", "type": "boolean", "declarator": "myIsImportTraceMode", "var_name": "myIsImportTraceMode"}, {"original_string": "@Nullable\n  private File myImportedTrace;", "modifier": "@Nullable\n  private", "type": "File", "declarator": "myImportedTrace", "var_name": "myImportedTrace"}, {"original_string": "@Nullable\n  private Cpu.CpuTraceInfo myImportedTraceInfo;", "modifier": "@Nullable\n  private", "type": "Cpu.CpuTraceInfo", "declarator": "myImportedTraceInfo", "var_name": "myImportedTraceInfo"}, {"original_string": "private Common.Session mySession;", "modifier": "private", "type": "Common.Session", "declarator": "mySession", "var_name": "mySession"}, {"original_string": "private final Map<Long, CpuTraceInfo> myCompletedTraceIdToInfoMap = new HashMap<>();", "modifier": "private final", "type": "Map<Long, CpuTraceInfo>", "declarator": "myCompletedTraceIdToInfoMap = new HashMap<>()", "var_name": "myCompletedTraceIdToInfoMap"}], "methods": [{"identifier": "CpuProfilerStage", "parameters": "(@NotNull StudioProfilers profilers)", "modifiers": "public", "return": "", "signature": " CpuProfilerStage(@NotNull StudioProfilers profilers)", "full_signature": "public  CpuProfilerStage(@NotNull StudioProfilers profilers)", "class_method_signature": "CpuProfilerStage.CpuProfilerStage(@NotNull StudioProfilers profilers)", "testcase": false, "constructor": true}, {"identifier": "CpuProfilerStage", "parameters": "(@NotNull StudioProfilers profilers, @Nullable File importedTrace)", "modifiers": "public", "return": "", "signature": " CpuProfilerStage(@NotNull StudioProfilers profilers, @Nullable File importedTrace)", "full_signature": "public  CpuProfilerStage(@NotNull StudioProfilers profilers, @Nullable File importedTrace)", "class_method_signature": "CpuProfilerStage.CpuProfilerStage(@NotNull StudioProfilers profilers, @Nullable File importedTrace)", "testcase": false, "constructor": true}, {"identifier": "CpuProfilerStage", "parameters": "(@NotNull StudioProfilers profilers, @Nullable File importedTrace, @NotNull CpuCaptureParser captureParser)", "modifiers": "@VisibleForTesting", "return": "", "signature": " CpuProfilerStage(@NotNull StudioProfilers profilers, @Nullable File importedTrace, @NotNull CpuCaptureParser captureParser)", "full_signature": "@VisibleForTesting  CpuProfilerStage(@NotNull StudioProfilers profilers, @Nullable File importedTrace, @NotNull CpuCaptureParser captureParser)", "class_method_signature": "CpuProfilerStage.CpuProfilerStage(@NotNull StudioProfilers profilers, @Nullable File importedTrace, @NotNull CpuCaptureParser captureParser)", "testcase": false, "constructor": true}, {"identifier": "getLogger", "parameters": "()", "modifiers": "private static", "return": "Logger", "signature": "Logger getLogger()", "full_signature": "private static Logger getLogger()", "class_method_signature": "CpuProfilerStage.getLogger()", "testcase": false, "constructor": false}, {"identifier": "buildRangeSelectionModel", "parameters": "(Range selectionRange)", "modifiers": "private", "return": "RangeSelectionModel", "signature": "RangeSelectionModel buildRangeSelectionModel(Range selectionRange)", "full_signature": "private RangeSelectionModel buildRangeSelectionModel(Range selectionRange)", "class_method_signature": "CpuProfilerStage.buildRangeSelectionModel(Range selectionRange)", "testcase": false, "constructor": false}, {"identifier": "isImportTraceMode", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isImportTraceMode()", "full_signature": "public boolean isImportTraceMode()", "class_method_signature": "CpuProfilerStage.isImportTraceMode()", "testcase": false, "constructor": false}, {"identifier": "hasUserUsedCpuCapture", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasUserUsedCpuCapture()", "full_signature": "public boolean hasUserUsedCpuCapture()", "class_method_signature": "CpuProfilerStage.hasUserUsedCpuCapture()", "testcase": false, "constructor": false}, {"identifier": "getRangeSelectionModel", "parameters": "()", "modifiers": "@NotNull public", "return": "RangeSelectionModel", "signature": "RangeSelectionModel getRangeSelectionModel()", "full_signature": "@NotNull public RangeSelectionModel getRangeSelectionModel()", "class_method_signature": "CpuProfilerStage.getRangeSelectionModel()", "testcase": false, "constructor": false}, {"identifier": "getInstructionsEaseOutModel", "parameters": "()", "modifiers": "@NotNull public", "return": "EaseOutModel", "signature": "EaseOutModel getInstructionsEaseOutModel()", "full_signature": "@NotNull public EaseOutModel getInstructionsEaseOutModel()", "class_method_signature": "CpuProfilerStage.getInstructionsEaseOutModel()", "testcase": false, "constructor": false}, {"identifier": "getCpuUsageAxis", "parameters": "()", "modifiers": "public", "return": "AxisComponentModel", "signature": "AxisComponentModel getCpuUsageAxis()", "full_signature": "public AxisComponentModel getCpuUsageAxis()", "class_method_signature": "CpuProfilerStage.getCpuUsageAxis()", "testcase": false, "constructor": false}, {"identifier": "getThreadCountAxis", "parameters": "()", "modifiers": "public", "return": "AxisComponentModel", "signature": "AxisComponentModel getThreadCountAxis()", "full_signature": "public AxisComponentModel getThreadCountAxis()", "class_method_signature": "CpuProfilerStage.getThreadCountAxis()", "testcase": false, "constructor": false}, {"identifier": "getTimeAxisGuide", "parameters": "()", "modifiers": "public", "return": "AxisComponentModel", "signature": "AxisComponentModel getTimeAxisGuide()", "full_signature": "public AxisComponentModel getTimeAxisGuide()", "class_method_signature": "CpuProfilerStage.getTimeAxisGuide()", "testcase": false, "constructor": false}, {"identifier": "getCpuUsage", "parameters": "()", "modifiers": "public", "return": "DetailedCpuUsage", "signature": "DetailedCpuUsage getCpuUsage()", "full_signature": "public DetailedCpuUsage getCpuUsage()", "class_method_signature": "CpuProfilerStage.getCpuUsage()", "testcase": false, "constructor": false}, {"identifier": "getLegends", "parameters": "()", "modifiers": "public", "return": "CpuStageLegends", "signature": "CpuStageLegends getLegends()", "full_signature": "public CpuStageLegends getLegends()", "class_method_signature": "CpuProfilerStage.getLegends()", "testcase": false, "constructor": false}, {"identifier": "getTraceDurations", "parameters": "()", "modifiers": "public", "return": "DurationDataModel<CpuTraceInfo>", "signature": "DurationDataModel<CpuTraceInfo> getTraceDurations()", "full_signature": "public DurationDataModel<CpuTraceInfo> getTraceDurations()", "class_method_signature": "CpuProfilerStage.getTraceDurations()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "CpuProfilerStage.getName()", "testcase": false, "constructor": false}, {"identifier": "getEventMonitor", "parameters": "()", "modifiers": "public", "return": "EventMonitor", "signature": "EventMonitor getEventMonitor()", "full_signature": "public EventMonitor getEventMonitor()", "class_method_signature": "CpuProfilerStage.getEventMonitor()", "testcase": false, "constructor": false}, {"identifier": "getProfilerConfigModel", "parameters": "()", "modifiers": "@NotNull public", "return": "CpuProfilerConfigModel", "signature": "CpuProfilerConfigModel getProfilerConfigModel()", "full_signature": "@NotNull public CpuProfilerConfigModel getProfilerConfigModel()", "class_method_signature": "CpuProfilerStage.getProfilerConfigModel()", "testcase": false, "constructor": false}, {"identifier": "enter", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void enter()", "full_signature": "@Override public void enter()", "class_method_signature": "CpuProfilerStage.enter()", "testcase": false, "constructor": false}, {"identifier": "exit", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void exit()", "full_signature": "@Override public void exit()", "class_method_signature": "CpuProfilerStage.exit()", "testcase": false, "constructor": false}, {"identifier": "getUpdatableManager", "parameters": "()", "modifiers": "@NotNull public", "return": "UpdatableManager", "signature": "UpdatableManager getUpdatableManager()", "full_signature": "@NotNull public UpdatableManager getUpdatableManager()", "class_method_signature": "CpuProfilerStage.getUpdatableManager()", "testcase": false, "constructor": false}, {"identifier": "getAspect", "parameters": "()", "modifiers": "public", "return": "AspectModel<CpuProfilerAspect>", "signature": "AspectModel<CpuProfilerAspect> getAspect()", "full_signature": "public AspectModel<CpuProfilerAspect> getAspect()", "class_method_signature": "CpuProfilerStage.getAspect()", "testcase": false, "constructor": false}, {"identifier": "toggleCapturing", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void toggleCapturing()", "full_signature": "public void toggleCapturing()", "class_method_signature": "CpuProfilerStage.toggleCapturing()", "testcase": false, "constructor": false}, {"identifier": "startCapturing", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void startCapturing()", "full_signature": "public void startCapturing()", "class_method_signature": "CpuProfilerStage.startCapturing()", "testcase": false, "constructor": false}, {"identifier": "startCapturingCallback", "parameters": "(@NotNull Cpu.TraceStartStatus status)", "modifiers": "private", "return": "void", "signature": "void startCapturingCallback(@NotNull Cpu.TraceStartStatus status)", "full_signature": "private void startCapturingCallback(@NotNull Cpu.TraceStartStatus status)", "class_method_signature": "CpuProfilerStage.startCapturingCallback(@NotNull Cpu.TraceStartStatus status)", "testcase": false, "constructor": false}, {"identifier": "stopCapturing", "parameters": "()", "modifiers": "@VisibleForTesting", "return": "void", "signature": "void stopCapturing()", "full_signature": "@VisibleForTesting void stopCapturing()", "class_method_signature": "CpuProfilerStage.stopCapturing()", "testcase": false, "constructor": false}, {"identifier": "getCaptureStartTimeNs", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getCaptureStartTimeNs()", "full_signature": "public long getCaptureStartTimeNs()", "class_method_signature": "CpuProfilerStage.getCaptureStartTimeNs()", "testcase": false, "constructor": false}, {"identifier": "getCaptureStopTimeNs", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getCaptureStopTimeNs()", "full_signature": "public long getCaptureStopTimeNs()", "class_method_signature": "CpuProfilerStage.getCaptureStopTimeNs()", "testcase": false, "constructor": false}, {"identifier": "getTraceIdsIterator", "parameters": "()", "modifiers": "@NotNull public", "return": "TraceIdsIterator", "signature": "TraceIdsIterator getTraceIdsIterator()", "full_signature": "@NotNull public TraceIdsIterator getTraceIdsIterator()", "class_method_signature": "CpuProfilerStage.getTraceIdsIterator()", "testcase": false, "constructor": false}, {"identifier": "navigateNext", "parameters": "()", "modifiers": "", "return": "void", "signature": "void navigateNext()", "full_signature": " void navigateNext()", "class_method_signature": "CpuProfilerStage.navigateNext()", "testcase": false, "constructor": false}, {"identifier": "navigatePrevious", "parameters": "()", "modifiers": "", "return": "void", "signature": "void navigatePrevious()", "full_signature": " void navigatePrevious()", "class_method_signature": "CpuProfilerStage.navigatePrevious()", "testcase": false, "constructor": false}, {"identifier": "handleCaptureNavigation", "parameters": "(long traceId)", "modifiers": "private", "return": "void", "signature": "void handleCaptureNavigation(long traceId)", "full_signature": "private void handleCaptureNavigation(long traceId)", "class_method_signature": "CpuProfilerStage.handleCaptureNavigation(long traceId)", "testcase": false, "constructor": false}, {"identifier": "stopCapturingCallback", "parameters": "(@NotNull Cpu.TraceStopStatus status)", "modifiers": "private", "return": "void", "signature": "void stopCapturingCallback(@NotNull Cpu.TraceStopStatus status)", "full_signature": "private void stopCapturingCallback(@NotNull Cpu.TraceStopStatus status)", "class_method_signature": "CpuProfilerStage.stopCapturingCallback(@NotNull Cpu.TraceStopStatus status)", "testcase": false, "constructor": false}, {"identifier": "trackAndLogTraceStopFailures", "parameters": "(@NotNull Cpu.TraceStopStatus status)", "modifiers": "private", "return": "void", "signature": "void trackAndLogTraceStopFailures(@NotNull Cpu.TraceStopStatus status)", "full_signature": "private void trackAndLogTraceStopFailures(@NotNull Cpu.TraceStopStatus status)", "class_method_signature": "CpuProfilerStage.trackAndLogTraceStopFailures(@NotNull Cpu.TraceStopStatus status)", "testcase": false, "constructor": false}, {"identifier": "goToCaptureStage", "parameters": "(long traceId)", "modifiers": "private", "return": "void", "signature": "void goToCaptureStage(long traceId)", "full_signature": "private void goToCaptureStage(long traceId)", "class_method_signature": "CpuProfilerStage.goToCaptureStage(long traceId)", "testcase": false, "constructor": false}, {"identifier": "getCaptureParser", "parameters": "()", "modifiers": "@NotNull public", "return": "CpuCaptureParser", "signature": "CpuCaptureParser getCaptureParser()", "full_signature": "@NotNull public CpuCaptureParser getCaptureParser()", "class_method_signature": "CpuProfilerStage.getCaptureParser()", "testcase": false, "constructor": false}, {"identifier": "parseAndSelectImportedTrace", "parameters": "(@NotNull File traceFile)", "modifiers": "private", "return": "void", "signature": "void parseAndSelectImportedTrace(@NotNull File traceFile)", "full_signature": "private void parseAndSelectImportedTrace(@NotNull File traceFile)", "class_method_signature": "CpuProfilerStage.parseAndSelectImportedTrace(@NotNull File traceFile)", "testcase": false, "constructor": false}, {"identifier": "getCpuClient", "parameters": "()", "modifiers": "@NotNull private", "return": "CpuServiceGrpc.CpuServiceBlockingStub", "signature": "CpuServiceGrpc.CpuServiceBlockingStub getCpuClient()", "full_signature": "@NotNull private CpuServiceGrpc.CpuServiceBlockingStub getCpuClient()", "class_method_signature": "CpuProfilerStage.getCpuClient()", "testcase": false, "constructor": false}, {"identifier": "selectionChanged", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void selectionChanged()", "full_signature": "private void selectionChanged()", "class_method_signature": "CpuProfilerStage.selectionChanged()", "testcase": false, "constructor": false}, {"identifier": "getIntersectingTraceInfo", "parameters": "(Range range)", "modifiers": "@Nullable", "return": "CpuTraceInfo", "signature": "CpuTraceInfo getIntersectingTraceInfo(Range range)", "full_signature": "@Nullable CpuTraceInfo getIntersectingTraceInfo(Range range)", "class_method_signature": "CpuProfilerStage.getIntersectingTraceInfo(Range range)", "testcase": false, "constructor": false}, {"identifier": "currentTimeNs", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long currentTimeNs()", "full_signature": "public long currentTimeNs()", "class_method_signature": "CpuProfilerStage.currentTimeNs()", "testcase": false, "constructor": false}, {"identifier": "setCapture", "parameters": "(@Nullable CpuCapture capture)", "modifiers": "@VisibleForTesting public", "return": "void", "signature": "void setCapture(@Nullable CpuCapture capture)", "full_signature": "@VisibleForTesting public void setCapture(@Nullable CpuCapture capture)", "class_method_signature": "CpuProfilerStage.setCapture(@Nullable CpuCapture capture)", "testcase": false, "constructor": false}, {"identifier": "onCaptureSelection", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void onCaptureSelection()", "full_signature": "private void onCaptureSelection()", "class_method_signature": "CpuProfilerStage.onCaptureSelection()", "testcase": false, "constructor": false}, {"identifier": "ensureCaptureInViewRange", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void ensureCaptureInViewRange()", "full_signature": "private void ensureCaptureInViewRange()", "class_method_signature": "CpuProfilerStage.ensureCaptureInViewRange()", "testcase": false, "constructor": false}, {"identifier": "setCapture", "parameters": "(long traceId)", "modifiers": "private", "return": "void", "signature": "void setCapture(long traceId)", "full_signature": "private void setCapture(long traceId)", "class_method_signature": "CpuProfilerStage.setCapture(long traceId)", "testcase": false, "constructor": false}, {"identifier": "setAndSelectCapture", "parameters": "(long traceId)", "modifiers": "public", "return": "void", "signature": "void setAndSelectCapture(long traceId)", "full_signature": "public void setAndSelectCapture(long traceId)", "class_method_signature": "CpuProfilerStage.setAndSelectCapture(long traceId)", "testcase": false, "constructor": false}, {"identifier": "setAndSelectCapture", "parameters": "(@NotNull CpuCapture capture)", "modifiers": "@VisibleForTesting public", "return": "void", "signature": "void setAndSelectCapture(@NotNull CpuCapture capture)", "full_signature": "@VisibleForTesting public void setAndSelectCapture(@NotNull CpuCapture capture)", "class_method_signature": "CpuProfilerStage.setAndSelectCapture(@NotNull CpuCapture capture)", "testcase": false, "constructor": false}, {"identifier": "getSelectedThread", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSelectedThread()", "full_signature": "public int getSelectedThread()", "class_method_signature": "CpuProfilerStage.getSelectedThread()", "testcase": false, "constructor": false}, {"identifier": "setSelectedThread", "parameters": "(int id)", "modifiers": "public", "return": "void", "signature": "void setSelectedThread(int id)", "full_signature": "public void setSelectedThread(int id)", "class_method_signature": "CpuProfilerStage.setSelectedThread(int id)", "testcase": false, "constructor": false}, {"identifier": "getClockTypes", "parameters": "()", "modifiers": "@NotNull public", "return": "List<ClockType>", "signature": "List<ClockType> getClockTypes()", "full_signature": "@NotNull public List<ClockType> getClockTypes()", "class_method_signature": "CpuProfilerStage.getClockTypes()", "testcase": false, "constructor": false}, {"identifier": "getClockType", "parameters": "()", "modifiers": "@NotNull public", "return": "ClockType", "signature": "ClockType getClockType()", "full_signature": "@NotNull public ClockType getClockType()", "class_method_signature": "CpuProfilerStage.getClockType()", "testcase": false, "constructor": false}, {"identifier": "setClockType", "parameters": "(@NotNull ClockType clockType)", "modifiers": "public", "return": "void", "signature": "void setClockType(@NotNull ClockType clockType)", "full_signature": "public void setClockType(@NotNull ClockType clockType)", "class_method_signature": "CpuProfilerStage.setClockType(@NotNull ClockType clockType)", "testcase": false, "constructor": false}, {"identifier": "getCapture", "parameters": "()", "modifiers": "@Nullable public", "return": "CpuCapture", "signature": "CpuCapture getCapture()", "full_signature": "@Nullable public CpuCapture getCapture()", "class_method_signature": "CpuProfilerStage.getCapture()", "testcase": false, "constructor": false}, {"identifier": "getCaptureState", "parameters": "()", "modifiers": "@NotNull public", "return": "CaptureState", "signature": "CaptureState getCaptureState()", "full_signature": "@NotNull public CaptureState getCaptureState()", "class_method_signature": "CpuProfilerStage.getCaptureState()", "testcase": false, "constructor": false}, {"identifier": "getCaptureInitiationType", "parameters": "()", "modifiers": "@NotNull public", "return": "TraceInitiationType", "signature": "TraceInitiationType getCaptureInitiationType()", "full_signature": "@NotNull public TraceInitiationType getCaptureInitiationType()", "class_method_signature": "CpuProfilerStage.getCaptureInitiationType()", "testcase": false, "constructor": false}, {"identifier": "setCaptureState", "parameters": "(@NotNull CaptureState captureState)", "modifiers": "public", "return": "void", "signature": "void setCaptureState(@NotNull CaptureState captureState)", "full_signature": "public void setCaptureState(@NotNull CaptureState captureState)", "class_method_signature": "CpuProfilerStage.setCaptureState(@NotNull CaptureState captureState)", "testcase": false, "constructor": false}, {"identifier": "applyCaptureFilter", "parameters": "(@NotNull Filter filter)", "modifiers": "@NotNull public", "return": "FilterResult", "signature": "FilterResult applyCaptureFilter(@NotNull Filter filter)", "full_signature": "@NotNull public FilterResult applyCaptureFilter(@NotNull Filter filter)", "class_method_signature": "CpuProfilerStage.applyCaptureFilter(@NotNull Filter filter)", "testcase": false, "constructor": false}, {"identifier": "trackFilterUsage", "parameters": "(@NotNull Filter filter, @NotNull FilterResult filterResult)", "modifiers": "private", "return": "void", "signature": "void trackFilterUsage(@NotNull Filter filter, @NotNull FilterResult filterResult)", "full_signature": "private void trackFilterUsage(@NotNull Filter filter, @NotNull FilterResult filterResult)", "class_method_signature": "CpuProfilerStage.trackFilterUsage(@NotNull Filter filter, @NotNull FilterResult filterResult)", "testcase": false, "constructor": false}, {"identifier": "isApiInitiatedTracingInProgress", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isApiInitiatedTracingInProgress()", "full_signature": "public boolean isApiInitiatedTracingInProgress()", "class_method_signature": "CpuProfilerStage.isApiInitiatedTracingInProgress()", "testcase": false, "constructor": false}, {"identifier": "getCpuTraceDataSeries", "parameters": "()", "modifiers": "@NotNull public", "return": "CpuTraceDataSeries", "signature": "CpuTraceDataSeries getCpuTraceDataSeries()", "full_signature": "@NotNull public CpuTraceDataSeries getCpuTraceDataSeries()", "class_method_signature": "CpuProfilerStage.getCpuTraceDataSeries()", "testcase": false, "constructor": false}, {"identifier": "getThreadStates", "parameters": "()", "modifiers": "@NotNull public", "return": "CpuThreadsModel", "signature": "CpuThreadsModel getThreadStates()", "full_signature": "@NotNull public CpuThreadsModel getThreadStates()", "class_method_signature": "CpuProfilerStage.getThreadStates()", "testcase": false, "constructor": false}, {"identifier": "getCpuKernelModel", "parameters": "()", "modifiers": "@NotNull public", "return": "CpuKernelModel", "signature": "CpuKernelModel getCpuKernelModel()", "full_signature": "@NotNull public CpuKernelModel getCpuKernelModel()", "class_method_signature": "CpuProfilerStage.getCpuKernelModel()", "testcase": false, "constructor": false}, {"identifier": "getFramesModel", "parameters": "()", "modifiers": "@NotNull public", "return": "CpuFramesModel", "signature": "CpuFramesModel getFramesModel()", "full_signature": "@NotNull public CpuFramesModel getFramesModel()", "class_method_signature": "CpuProfilerStage.getFramesModel()", "testcase": false, "constructor": false}, {"identifier": "getCaptureModel", "parameters": "()", "modifiers": "@NotNull public", "return": "CaptureModel", "signature": "CaptureModel getCaptureModel()", "full_signature": "@NotNull public CaptureModel getCaptureModel()", "class_method_signature": "CpuProfilerStage.getCaptureModel()", "testcase": false, "constructor": false}, {"identifier": "getCaptureFuture", "parameters": "(long traceId)", "modifiers": "@VisibleForTesting @Nullable", "return": "CompletableFuture<CpuCapture>", "signature": "CompletableFuture<CpuCapture> getCaptureFuture(long traceId)", "full_signature": "@VisibleForTesting @Nullable CompletableFuture<CpuCapture> getCaptureFuture(long traceId)", "class_method_signature": "CpuProfilerStage.getCaptureFuture(long traceId)", "testcase": false, "constructor": false}, {"identifier": "setCaptureDetails", "parameters": "(@Nullable CaptureDetails.Type type)", "modifiers": "public", "return": "void", "signature": "void setCaptureDetails(@Nullable CaptureDetails.Type type)", "full_signature": "public void setCaptureDetails(@Nullable CaptureDetails.Type type)", "class_method_signature": "CpuProfilerStage.setCaptureDetails(@Nullable CaptureDetails.Type type)", "testcase": false, "constructor": false}, {"identifier": "getCaptureDetails", "parameters": "()", "modifiers": "@Nullable public", "return": "CaptureDetails", "signature": "CaptureDetails getCaptureDetails()", "full_signature": "@Nullable public CaptureDetails getCaptureDetails()", "class_method_signature": "CpuProfilerStage.getCaptureDetails()", "testcase": false, "constructor": false}, {"identifier": "onNavigated", "parameters": "(@NotNull CodeLocation location)", "modifiers": "@Override public", "return": "void", "signature": "void onNavigated(@NotNull CodeLocation location)", "full_signature": "@Override public void onNavigated(@NotNull CodeLocation location)", "class_method_signature": "CpuProfilerStage.onNavigated(@NotNull CodeLocation location)", "testcase": false, "constructor": false}], "file": "profilers/src/com/android/tools/profilers/cpu/CpuProfilerStage.java"}, "focal_method": {"identifier": "getProfilerConfigModel", "parameters": "()", "modifiers": "@NotNull public", "return": "CpuProfilerConfigModel", "body": "@NotNull\n  public CpuProfilerConfigModel getProfilerConfigModel() {\n    return myProfilerConfigModel;\n  }", "signature": "CpuProfilerConfigModel getProfilerConfigModel()", "full_signature": "@NotNull public CpuProfilerConfigModel getProfilerConfigModel()", "class_method_signature": "CpuProfilerStage.getProfilerConfigModel()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}