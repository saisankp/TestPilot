{"test_class": {"identifier": "JsonParameterMetadataDeserializerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JsonParameterMetadataDeserializer deserializer;", "modifier": "private", "type": "JsonParameterMetadataDeserializer", "declarator": "deserializer", "var_name": "deserializer"}], "file": "smartparam-serializer/src/test/java/org/smartparam/serializer/metadata/JsonParameterMetadataDeserializerTest.java"}, "test_case": {"identifier": "shouldDeserializeNonStrictJSON", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldDeserializeNonStrictJSON() throws ParamSerializationException {\n        // given\n        String json = \"{ name: \\\"parameter\\\" }\";\n\n        // when\n        Parameter parameter = deserializer.deserialize(StringStreamUtil.reader(json));\n\n        // then\n        assertThat(parameter).isNotNull().hasName(\"parameter\");\n    }", "signature": "void shouldDeserializeNonStrictJSON()", "full_signature": "@Test public void shouldDeserializeNonStrictJSON()", "class_method_signature": "JsonParameterMetadataDeserializerTest.shouldDeserializeNonStrictJSON()", "testcase": true, "constructor": false, "invocations": ["deserialize", "reader", "hasName", "isNotNull", "assertThat"]}, "focal_class": {"identifier": "JsonParameterMetadataDeserializer", "superclass": "", "interfaces": "implements ParameterMetadataDeserializer", "fields": [{"original_string": "private final Gson gson;", "modifier": "private final", "type": "Gson", "declarator": "gson", "var_name": "gson"}], "methods": [{"identifier": "JsonParameterMetadataDeserializer", "parameters": "()", "modifiers": "public", "return": "", "signature": " JsonParameterMetadataDeserializer()", "full_signature": "public  JsonParameterMetadataDeserializer()", "class_method_signature": "JsonParameterMetadataDeserializer.JsonParameterMetadataDeserializer()", "testcase": false, "constructor": true}, {"identifier": "deserialize", "parameters": "(BufferedReader reader)", "modifiers": "@Override public", "return": "AppendableParameter", "signature": "AppendableParameter deserialize(BufferedReader reader)", "full_signature": "@Override public AppendableParameter deserialize(BufferedReader reader)", "class_method_signature": "JsonParameterMetadataDeserializer.deserialize(BufferedReader reader)", "testcase": false, "constructor": false}], "file": "smartparam-serializer/src/main/java/org/smartparam/serializer/metadata/JsonParameterMetadataDeserializer.java"}, "focal_method": {"identifier": "deserialize", "parameters": "(BufferedReader reader)", "modifiers": "@Override public", "return": "AppendableParameter", "body": "@Override\n    public AppendableParameter deserialize(BufferedReader reader) throws ParamSerializationException {\n        String jsonConfig = null;\n        try {\n            jsonConfig = StreamPartReader.readPart(reader, '{', '}');\n        } catch (IOException exception) {\n            throw new ParamSerializationException(\"Unable to read config part from stream.\", exception);\n        }\n\n        DeserializedParameter parameter = gson.fromJson(jsonConfig, DeserializedParameter.class);\n        parameter.normalizeLevels();\n\n        return parameter;\n    }", "signature": "AppendableParameter deserialize(BufferedReader reader)", "full_signature": "@Override public AppendableParameter deserialize(BufferedReader reader)", "class_method_signature": "JsonParameterMetadataDeserializer.deserialize(BufferedReader reader)", "testcase": false, "constructor": false, "invocations": ["readPart", "fromJson", "normalizeLevels"]}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}