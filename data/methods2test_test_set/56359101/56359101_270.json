{"test_class": {"identifier": "HttpUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HttpUtils spy;", "modifier": "private", "type": "HttpUtils", "declarator": "spy", "var_name": "spy"}, {"original_string": "private URL url;", "modifier": "private", "type": "URL", "declarator": "url", "var_name": "url"}], "file": "autonomic-plugin-common/src/test/java/br/com/autonomiccs/autonomic/plugin/common/utils/HttpUtilsTest.java"}, "test_case": {"identifier": "executeHttpGetRequestTest", "parameters": "()", "modifiers": "@Test @PrepareForTest({ HttpUtils.class, IOUtils.class }) public", "return": "void", "body": "@Test\n    @PrepareForTest({ HttpUtils.class, IOUtils.class })\n    public void executeHttpGetRequestTest() throws Exception {\n        HttpURLConnection httpConn = configureExecuteHttpGetRequestTest(url, 200);\n        spy.executeHttpGetRequest(url);\n        verifyExecuteHttpGetRequestTest(httpConn, 1);\n    }", "signature": "void executeHttpGetRequestTest()", "full_signature": "@Test @PrepareForTest({ HttpUtils.class, IOUtils.class }) public void executeHttpGetRequestTest()", "class_method_signature": "HttpUtilsTest.executeHttpGetRequestTest()", "testcase": true, "constructor": false, "invocations": ["configureExecuteHttpGetRequestTest", "executeHttpGetRequest", "verifyExecuteHttpGetRequestTest"]}, "focal_class": {"identifier": "HttpUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Logger logger = LoggerFactory.getLogger(getClass());", "modifier": "private", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(getClass())", "var_name": "logger"}], "methods": [{"identifier": "wakeHaltedHostUsingHttpGet", "parameters": "(String systemVmIp, String hostMac)", "modifiers": "public", "return": "String", "signature": "String wakeHaltedHostUsingHttpGet(String systemVmIp, String hostMac)", "full_signature": "public String wakeHaltedHostUsingHttpGet(String systemVmIp, String hostMac)", "class_method_signature": "HttpUtils.wakeHaltedHostUsingHttpGet(String systemVmIp, String hostMac)", "testcase": false, "constructor": false}, {"identifier": "executeHttpGetRequest", "parameters": "(URL url)", "modifiers": "public", "return": "String", "signature": "String executeHttpGetRequest(URL url)", "full_signature": "public String executeHttpGetRequest(URL url)", "class_method_signature": "HttpUtils.executeHttpGetRequest(URL url)", "testcase": false, "constructor": false}], "file": "autonomic-plugin-common/src/main/java/br/com/autonomiccs/autonomic/plugin/common/utils/HttpUtils.java"}, "focal_method": {"identifier": "executeHttpGetRequest", "parameters": "(URL url)", "modifiers": "public", "return": "String", "body": "public String executeHttpGetRequest(URL url) throws IOException {\n        HttpURLConnection con = (HttpURLConnection)url.openConnection();\n        con.setRequestMethod(\"GET\");\n        int responseCode = con.getResponseCode();\n        if (responseCode != 200) {\n            return String.format(\"Error in HTTP GET : code [%d]\", responseCode);\n        }\n        StringWriter output = new StringWriter();\n        IOUtils.copy(con.getInputStream(), output);\n        return output.toString();\n    }", "signature": "String executeHttpGetRequest(URL url)", "full_signature": "public String executeHttpGetRequest(URL url)", "class_method_signature": "HttpUtils.executeHttpGetRequest(URL url)", "testcase": false, "constructor": false, "invocations": ["openConnection", "setRequestMethod", "getResponseCode", "format", "copy", "getInputStream", "toString"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}