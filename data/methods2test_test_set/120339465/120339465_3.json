{"test_class": {"identifier": "HostRequestsQuotaServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HostRequestsQuotaService quotaService;", "modifier": "private", "type": "HostRequestsQuotaService", "declarator": "quotaService", "var_name": "quotaService"}, {"original_string": "private HostRequestIntervalRegistry requestRegistry = mock(HostRequestIntervalRegistry.class);", "modifier": "private", "type": "HostRequestIntervalRegistry", "declarator": "requestRegistry = mock(HostRequestIntervalRegistry.class)", "var_name": "requestRegistry"}, {"original_string": "private HostRequestLimitPolicy requestsPolicy = mock(HostRequestLimitPolicy.class);", "modifier": "private", "type": "HostRequestLimitPolicy", "declarator": "requestsPolicy = mock(HostRequestLimitPolicy.class)", "var_name": "requestsPolicy"}, {"original_string": "private IntervalRegistryCleaner registryCleaner = mock(IntervalRegistryCleaner.class);", "modifier": "private", "type": "IntervalRegistryCleaner", "declarator": "registryCleaner = mock(IntervalRegistryCleaner.class)", "var_name": "registryCleaner"}, {"original_string": "private IntervalRegistryLogger registryLogger = mock(IntervalRegistryLogger.class);", "modifier": "private", "type": "IntervalRegistryLogger", "declarator": "registryLogger = mock(IntervalRegistryLogger.class)", "var_name": "registryLogger"}], "file": "common/transport/src/test/java/com/hashmapinc/server/common/transport/quota/HostRequestsQuotaServiceTest.java"}, "test_case": {"identifier": "serviceCanBeDisabled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void serviceCanBeDisabled() {\n        quotaService = new HostRequestsQuotaService(requestRegistry, requestsPolicy, registryCleaner, registryLogger, false);\n        assertFalse(quotaService.isQuotaExceeded(\"key\"));\n        verifyNoMoreInteractions(requestRegistry, requestsPolicy);\n    }", "signature": "void serviceCanBeDisabled()", "full_signature": "@Test public void serviceCanBeDisabled()", "class_method_signature": "HostRequestsQuotaServiceTest.serviceCanBeDisabled()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isQuotaExceeded", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "HostRequestsQuotaService", "superclass": "", "interfaces": "implements QuotaService", "fields": [{"original_string": "private final HostRequestIntervalRegistry requestRegistry;", "modifier": "private final", "type": "HostRequestIntervalRegistry", "declarator": "requestRegistry", "var_name": "requestRegistry"}, {"original_string": "private final HostRequestLimitPolicy requestsPolicy;", "modifier": "private final", "type": "HostRequestLimitPolicy", "declarator": "requestsPolicy", "var_name": "requestsPolicy"}, {"original_string": "private final IntervalRegistryCleaner registryCleaner;", "modifier": "private final", "type": "IntervalRegistryCleaner", "declarator": "registryCleaner", "var_name": "registryCleaner"}, {"original_string": "private final IntervalRegistryLogger registryLogger;", "modifier": "private final", "type": "IntervalRegistryLogger", "declarator": "registryLogger", "var_name": "registryLogger"}, {"original_string": "private final boolean enabled;", "modifier": "private final", "type": "boolean", "declarator": "enabled", "var_name": "enabled"}], "methods": [{"identifier": "HostRequestsQuotaService", "parameters": "(HostRequestIntervalRegistry requestRegistry, HostRequestLimitPolicy requestsPolicy,\n                                    IntervalRegistryCleaner registryCleaner, IntervalRegistryLogger registryLogger,\n                                    @Value(\"${quota.host.enabled}\") boolean enabled)", "modifiers": "public", "return": "", "signature": " HostRequestsQuotaService(HostRequestIntervalRegistry requestRegistry, HostRequestLimitPolicy requestsPolicy,\n                                    IntervalRegistryCleaner registryCleaner, IntervalRegistryLogger registryLogger,\n                                    @Value(\"${quota.host.enabled}\") boolean enabled)", "full_signature": "public  HostRequestsQuotaService(HostRequestIntervalRegistry requestRegistry, HostRequestLimitPolicy requestsPolicy,\n                                    IntervalRegistryCleaner registryCleaner, IntervalRegistryLogger registryLogger,\n                                    @Value(\"${quota.host.enabled}\") boolean enabled)", "class_method_signature": "HostRequestsQuotaService.HostRequestsQuotaService(HostRequestIntervalRegistry requestRegistry, HostRequestLimitPolicy requestsPolicy,\n                                    IntervalRegistryCleaner registryCleaner, IntervalRegistryLogger registryLogger,\n                                    @Value(\"${quota.host.enabled}\") boolean enabled)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "@PostConstruct public", "return": "void", "signature": "void init()", "full_signature": "@PostConstruct public void init()", "class_method_signature": "HostRequestsQuotaService.init()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@PreDestroy public", "return": "void", "signature": "void close()", "full_signature": "@PreDestroy public void close()", "class_method_signature": "HostRequestsQuotaService.close()", "testcase": false, "constructor": false}, {"identifier": "isQuotaExceeded", "parameters": "(String key)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isQuotaExceeded(String key)", "full_signature": "@Override public boolean isQuotaExceeded(String key)", "class_method_signature": "HostRequestsQuotaService.isQuotaExceeded(String key)", "testcase": false, "constructor": false}], "file": "common/transport/src/main/java/com/hashmapinc/server/common/transport/quota/HostRequestsQuotaService.java"}, "focal_method": {"identifier": "isQuotaExceeded", "parameters": "(String key)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isQuotaExceeded(String key) {\n        if (enabled) {\n            long count = requestRegistry.tick(key);\n            return !requestsPolicy.isValid(count);\n        }\n        return false;\n    }", "signature": "boolean isQuotaExceeded(String key)", "full_signature": "@Override public boolean isQuotaExceeded(String key)", "class_method_signature": "HostRequestsQuotaService.isQuotaExceeded(String key)", "testcase": false, "constructor": false, "invocations": ["tick", "isValid"]}, "repository": {"repo_id": 120339465, "url": "https://github.com/hashmapinc/Tempus", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 22, "size": 57693, "license": "licensed"}}