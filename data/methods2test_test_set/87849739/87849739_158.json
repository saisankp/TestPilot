{"test_class": {"identifier": "MessageAggregatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Duration ONE_DAY = Duration.ofDays(1L);", "modifier": "private static final", "type": "Duration", "declarator": "ONE_DAY = Duration.ofDays(1L)", "var_name": "ONE_DAY"}, {"original_string": "private ActorSystem actorSystem;", "modifier": "private", "type": "ActorSystem", "declarator": "actorSystem", "var_name": "actorSystem"}], "file": "services/concierge/actors/src/test/java/org/eclipse/ditto/services/concierge/actors/cleanup/credits/MessageAggregatorTest.java"}, "test_case": {"identifier": "aggregateMessagesAndStopSelf", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void aggregateMessagesAndStopSelf() {\n        new TestKit(actorSystem) {{\n            final TestProbe initialReceiver = TestProbe.apply(actorSystem);\n\n            final ActorRef underTest =\n                    actorSystem.actorOf(MessageAggregator.props(initialReceiver.ref(), Integer.class, 3, ONE_DAY));\n\n            watch(underTest);\n\n            underTest.tell(true, getRef());\n            underTest.tell(0, getRef());\n            underTest.tell(1, getRef());\n            underTest.tell(2, getRef());\n            initialReceiver.expectMsg(true);\n            expectMsg(Arrays.asList(0, 1, 2));\n            expectTerminated(underTest);\n        }};\n    }", "signature": "void aggregateMessagesAndStopSelf()", "full_signature": "@Test public void aggregateMessagesAndStopSelf()", "class_method_signature": "MessageAggregatorTest.aggregateMessagesAndStopSelf()", "testcase": true, "constructor": false, "invocations": ["apply", "actorOf", "props", "ref", "watch", "tell", "getRef", "tell", "getRef", "tell", "getRef", "tell", "getRef", "expectMsg", "expectMsg", "asList", "expectTerminated"]}, "focal_class": {"identifier": "MessageAggregator", "superclass": "extends AbstractActorWithTimers", "interfaces": "", "fields": [{"original_string": "static final Object TIMEOUT = new AskTimeoutException(\"MessageAggregator.TIMEOUT\");", "modifier": "static final", "type": "Object", "declarator": "TIMEOUT = new AskTimeoutException(\"MessageAggregator.TIMEOUT\")", "var_name": "TIMEOUT"}, {"original_string": "private final DiagnosticLoggingAdapter log = LogUtil.obtain(this);", "modifier": "private final", "type": "DiagnosticLoggingAdapter", "declarator": "log = LogUtil.obtain(this)", "var_name": "log"}, {"original_string": "private final ActorRef initialReceiver;", "modifier": "private final", "type": "ActorRef", "declarator": "initialReceiver", "var_name": "initialReceiver"}, {"original_string": "private final Class<T> messageClass;", "modifier": "private final", "type": "Class<T>", "declarator": "messageClass", "var_name": "messageClass"}, {"original_string": "private final int expectedMessages;", "modifier": "private final", "type": "int", "declarator": "expectedMessages", "var_name": "expectedMessages"}, {"original_string": "@Nullable\n    private ActorRef sender = null;", "modifier": "@Nullable\n    private", "type": "ActorRef", "declarator": "sender = null", "var_name": "sender"}, {"original_string": "private List<T> messages = new ArrayList<>();", "modifier": "private", "type": "List<T>", "declarator": "messages = new ArrayList<>()", "var_name": "messages"}], "methods": [{"identifier": "MessageAggregator", "parameters": "(\n            final ActorRef initialReceiver,\n            final Class<T> messageClass,\n            final int expectedMessages,\n            final Duration timeout)", "modifiers": "@SuppressWarnings(\"unused\") private", "return": "", "signature": " MessageAggregator(\n            final ActorRef initialReceiver,\n            final Class<T> messageClass,\n            final int expectedMessages,\n            final Duration timeout)", "full_signature": "@SuppressWarnings(\"unused\") private  MessageAggregator(\n            final ActorRef initialReceiver,\n            final Class<T> messageClass,\n            final int expectedMessages,\n            final Duration timeout)", "class_method_signature": "MessageAggregator.MessageAggregator(\n            final ActorRef initialReceiver,\n            final Class<T> messageClass,\n            final int expectedMessages,\n            final Duration timeout)", "testcase": false, "constructor": true}, {"identifier": "props", "parameters": "(final ActorRef initialReceiver, final Class<T> messageClass,\n            final int expectedMessages, final Duration timeout)", "modifiers": "public static", "return": "Props", "signature": "Props props(final ActorRef initialReceiver, final Class<T> messageClass,\n            final int expectedMessages, final Duration timeout)", "full_signature": "public static Props props(final ActorRef initialReceiver, final Class<T> messageClass,\n            final int expectedMessages, final Duration timeout)", "class_method_signature": "MessageAggregator.props(final ActorRef initialReceiver, final Class<T> messageClass,\n            final int expectedMessages, final Duration timeout)", "testcase": false, "constructor": false}, {"identifier": "createReceive", "parameters": "()", "modifiers": "@Override public", "return": "Receive", "signature": "Receive createReceive()", "full_signature": "@Override public Receive createReceive()", "class_method_signature": "MessageAggregator.createReceive()", "testcase": false, "constructor": false}, {"identifier": "listeningBehavior", "parameters": "()", "modifiers": "private", "return": "Receive", "signature": "Receive listeningBehavior()", "full_signature": "private Receive listeningBehavior()", "class_method_signature": "MessageAggregator.listeningBehavior()", "testcase": false, "constructor": false}, {"identifier": "handleTimeout", "parameters": "(final Object timeout)", "modifiers": "private", "return": "void", "signature": "void handleTimeout(final Object timeout)", "full_signature": "private void handleTimeout(final Object timeout)", "class_method_signature": "MessageAggregator.handleTimeout(final Object timeout)", "testcase": false, "constructor": false}, {"identifier": "reportAndStop", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void reportAndStop()", "full_signature": "private void reportAndStop()", "class_method_signature": "MessageAggregator.reportAndStop()", "testcase": false, "constructor": false}], "file": "services/concierge/actors/src/main/java/org/eclipse/ditto/services/concierge/actors/cleanup/credits/MessageAggregator.java"}, "focal_method": {"identifier": "props", "parameters": "(final ActorRef initialReceiver, final Class<T> messageClass,\n            final int expectedMessages, final Duration timeout)", "modifiers": "public static", "return": "Props", "body": "public static <T> Props props(final ActorRef initialReceiver, final Class<T> messageClass,\n            final int expectedMessages, final Duration timeout) {\n\n        return Props.create(MessageAggregator.class, initialReceiver, messageClass, expectedMessages, timeout);\n    }", "signature": "Props props(final ActorRef initialReceiver, final Class<T> messageClass,\n            final int expectedMessages, final Duration timeout)", "full_signature": "public static Props props(final ActorRef initialReceiver, final Class<T> messageClass,\n            final int expectedMessages, final Duration timeout)", "class_method_signature": "MessageAggregator.props(final ActorRef initialReceiver, final Class<T> messageClass,\n            final int expectedMessages, final Duration timeout)", "testcase": false, "constructor": false, "invocations": ["create"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}