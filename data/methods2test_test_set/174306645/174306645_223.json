{"test_class": {"identifier": "PMMLRestResourceGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static String APP_CANONICAL_NAME = \"APP_CANONICAL_NAME\";", "modifier": "private final static", "type": "String", "declarator": "APP_CANONICAL_NAME = \"APP_CANONICAL_NAME\"", "var_name": "APP_CANONICAL_NAME"}, {"original_string": "private final static KiePMMLModel KIE_PMML_MODEL = getKiePMMLModelInternal();", "modifier": "private final static", "type": "KiePMMLModel", "declarator": "KIE_PMML_MODEL = getKiePMMLModelInternal()", "var_name": "KIE_PMML_MODEL"}, {"original_string": "private static PMMLRestResourceGenerator pmmlRestResourceGenerator;", "modifier": "private static", "type": "PMMLRestResourceGenerator", "declarator": "pmmlRestResourceGenerator", "var_name": "pmmlRestResourceGenerator"}, {"original_string": "private static ClassOrInterfaceDeclaration template = getClassOrInterfaceDeclaration();", "modifier": "private static", "type": "ClassOrInterfaceDeclaration", "declarator": "template = getClassOrInterfaceDeclaration()", "var_name": "template"}], "file": "kogito-codegen/src/test/java/org/kie/kogito/codegen/prediction/PMMLRestResourceGeneratorTest.java"}, "test_case": {"identifier": "setPathValue", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void setPathValue() {\n        final Optional<SingleMemberAnnotationExpr> retrievedOpt = template.findFirst(SingleMemberAnnotationExpr.class);\n        assertTrue(retrievedOpt.isPresent());\n        SingleMemberAnnotationExpr retrieved = retrievedOpt.get();\n        assertEquals(\"Path\", retrieved.getName().asString());\n        pmmlRestResourceGenerator.setPathValue(template);\n        try {\n            String classPrefix = getSanitizedClassName(KIE_PMML_MODEL.getName());\n            String expected = URLEncoder.encode(classPrefix).replaceAll(\"\\\\+\", \"%20\");\n            assertEquals(expected, retrieved.getMemberValue().asStringLiteralExpr().asString());\n        } catch (Exception e) {\n            fail(e);\n        }\n    }", "signature": "void setPathValue()", "full_signature": "@Test void setPathValue()", "class_method_signature": "PMMLRestResourceGeneratorTest.setPathValue()", "testcase": true, "constructor": false, "invocations": ["findFirst", "assertTrue", "isPresent", "get", "assertEquals", "asString", "getName", "setPathValue", "getSanitizedClassName", "getName", "replaceAll", "encode", "assertEquals", "asString", "asStringLiteralExpr", "getMemberValue", "fail"]}, "focal_class": {"identifier": "PMMLRestResourceGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String TEMPLATE_JAVA = \"/class-templates/PMMLRestResourceTemplate.java\";", "modifier": "static final", "type": "String", "declarator": "TEMPLATE_JAVA = \"/class-templates/PMMLRestResourceTemplate.java\"", "var_name": "TEMPLATE_JAVA"}, {"original_string": "private static final RuntimeException MODIFIED_TEMPLATE_EXCEPTION =\n            new RuntimeException(\"The template \" + TEMPLATE_JAVA + \" has been modified.\");", "modifier": "private static final", "type": "RuntimeException", "declarator": "MODIFIED_TEMPLATE_EXCEPTION =\n            new RuntimeException(\"The template \" + TEMPLATE_JAVA + \" has been modified.\")", "var_name": "MODIFIED_TEMPLATE_EXCEPTION"}, {"original_string": "private final String nameURL;", "modifier": "private final", "type": "String", "declarator": "nameURL", "var_name": "nameURL"}, {"original_string": "final String packageName;", "modifier": "final", "type": "String", "declarator": "packageName", "var_name": "packageName"}, {"original_string": "final String appCanonicalName;", "modifier": "final", "type": "String", "declarator": "appCanonicalName", "var_name": "appCanonicalName"}, {"original_string": "DependencyInjectionAnnotator annotator;", "modifier": "", "type": "DependencyInjectionAnnotator", "declarator": "annotator", "var_name": "annotator"}, {"original_string": "private final String resourceClazzName;", "modifier": "private final", "type": "String", "declarator": "resourceClazzName", "var_name": "resourceClazzName"}, {"original_string": "private final String relativePath;", "modifier": "private final", "type": "String", "declarator": "relativePath", "var_name": "relativePath"}, {"original_string": "private final KiePMMLModel kiePMMLModel;", "modifier": "private final", "type": "KiePMMLModel", "declarator": "kiePMMLModel", "var_name": "kiePMMLModel"}], "methods": [{"identifier": "PMMLRestResourceGenerator", "parameters": "(KiePMMLModel model, String appCanonicalName)", "modifiers": "public", "return": "", "signature": " PMMLRestResourceGenerator(KiePMMLModel model, String appCanonicalName)", "full_signature": "public  PMMLRestResourceGenerator(KiePMMLModel model, String appCanonicalName)", "class_method_signature": "PMMLRestResourceGenerator.PMMLRestResourceGenerator(KiePMMLModel model, String appCanonicalName)", "testcase": false, "constructor": true}, {"identifier": "generate", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String generate()", "full_signature": "public String generate()", "class_method_signature": "PMMLRestResourceGenerator.generate()", "testcase": false, "constructor": false}, {"identifier": "getNameURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getNameURL()", "full_signature": "public String getNameURL()", "class_method_signature": "PMMLRestResourceGenerator.getNameURL()", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLModel", "parameters": "()", "modifiers": "public", "return": "KiePMMLModel", "signature": "KiePMMLModel getKiePMMLModel()", "full_signature": "public KiePMMLModel getKiePMMLModel()", "class_method_signature": "PMMLRestResourceGenerator.getKiePMMLModel()", "testcase": false, "constructor": false}, {"identifier": "withDependencyInjection", "parameters": "(DependencyInjectionAnnotator annotator)", "modifiers": "public", "return": "PMMLRestResourceGenerator", "signature": "PMMLRestResourceGenerator withDependencyInjection(DependencyInjectionAnnotator annotator)", "full_signature": "public PMMLRestResourceGenerator withDependencyInjection(DependencyInjectionAnnotator annotator)", "class_method_signature": "PMMLRestResourceGenerator.withDependencyInjection(DependencyInjectionAnnotator annotator)", "testcase": false, "constructor": false}, {"identifier": "className", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String className()", "full_signature": "public String className()", "class_method_signature": "PMMLRestResourceGenerator.className()", "testcase": false, "constructor": false}, {"identifier": "generatedFilePath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String generatedFilePath()", "full_signature": "public String generatedFilePath()", "class_method_signature": "PMMLRestResourceGenerator.generatedFilePath()", "testcase": false, "constructor": false}, {"identifier": "useInjection", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean useInjection()", "full_signature": "protected boolean useInjection()", "class_method_signature": "PMMLRestResourceGenerator.useInjection()", "testcase": false, "constructor": false}, {"identifier": "setPathValue", "parameters": "(ClassOrInterfaceDeclaration template)", "modifiers": "", "return": "void", "signature": "void setPathValue(ClassOrInterfaceDeclaration template)", "full_signature": " void setPathValue(ClassOrInterfaceDeclaration template)", "class_method_signature": "PMMLRestResourceGenerator.setPathValue(ClassOrInterfaceDeclaration template)", "testcase": false, "constructor": false}, {"identifier": "setPredictionModelName", "parameters": "(ClassOrInterfaceDeclaration template)", "modifiers": "", "return": "void", "signature": "void setPredictionModelName(ClassOrInterfaceDeclaration template)", "full_signature": " void setPredictionModelName(ClassOrInterfaceDeclaration template)", "class_method_signature": "PMMLRestResourceGenerator.setPredictionModelName(ClassOrInterfaceDeclaration template)", "testcase": false, "constructor": false}, {"identifier": "initializeApplicationField", "parameters": "(FieldDeclaration fd)", "modifiers": "private", "return": "void", "signature": "void initializeApplicationField(FieldDeclaration fd)", "full_signature": "private void initializeApplicationField(FieldDeclaration fd)", "class_method_signature": "PMMLRestResourceGenerator.initializeApplicationField(FieldDeclaration fd)", "testcase": false, "constructor": false}], "file": "kogito-codegen/src/main/java/org/kie/kogito/codegen/prediction/PMMLRestResourceGenerator.java"}, "focal_method": {"identifier": "setPathValue", "parameters": "(ClassOrInterfaceDeclaration template)", "modifiers": "", "return": "void", "body": "void setPathValue(ClassOrInterfaceDeclaration template) {\n        template.findFirst(SingleMemberAnnotationExpr.class).orElseThrow(() -> new RuntimeException(\"\")).setMemberValue(new StringLiteralExpr(nameURL));\n    }", "signature": "void setPathValue(ClassOrInterfaceDeclaration template)", "full_signature": " void setPathValue(ClassOrInterfaceDeclaration template)", "class_method_signature": "PMMLRestResourceGenerator.setPathValue(ClassOrInterfaceDeclaration template)", "testcase": false, "constructor": false, "invocations": ["setMemberValue", "orElseThrow", "findFirst"]}, "repository": {"repo_id": 174306645, "url": "https://github.com/kiegroup/kogito-runtimes", "stars": 78, "created": "3/7/2019 8:49:09 AM +00:00", "updates": "2020-01-26T20:41:49+00:00", "fork": "False", "license": "licensed"}}