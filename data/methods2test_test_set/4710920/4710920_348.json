{"test_class": {"identifier": "LoadStatusCheckerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger logger = LoggerFactory.getLogger(LoadStatusCheckerTest.class);", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(LoadStatusCheckerTest.class)", "var_name": "logger"}], "file": "dubbo-common/src/test/java/org/apache/dubbo/common/status/support/LoadStatusCheckerTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test() throws Exception {\n        LoadStatusChecker statusChecker = new LoadStatusChecker();\n        Status status = statusChecker.check();\n        assertThat(status, notNullValue());\n        logger.info(\"load status level: \" + status.getLevel());\n        logger.info(\"load status message: \" + status.getMessage());\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "LoadStatusCheckerTest.test()", "testcase": true, "constructor": false, "invocations": ["check", "assertThat", "notNullValue", "info", "getLevel", "info", "getMessage"]}, "focal_class": {"identifier": "LoadStatusChecker", "superclass": "", "interfaces": "implements StatusChecker", "fields": [], "methods": [{"identifier": "check", "parameters": "()", "modifiers": "@Override public", "return": "Status", "signature": "Status check()", "full_signature": "@Override public Status check()", "class_method_signature": "LoadStatusChecker.check()", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/org/apache/dubbo/common/status/support/LoadStatusChecker.java"}, "focal_method": {"identifier": "check", "parameters": "()", "modifiers": "@Override public", "return": "Status", "body": "@Override\n    public Status check() {\n        OperatingSystemMXBean operatingSystemMXBean = ManagementFactory.getOperatingSystemMXBean();\n        double load;\n        try {\n            Method method = OperatingSystemMXBean.class.getMethod(\"getSystemLoadAverage\", new Class<?>[0]);\n            load = (Double) method.invoke(operatingSystemMXBean, new Object[0]);\n            if (load == -1) {\n                com.sun.management.OperatingSystemMXBean bean =\n                        (com.sun.management.OperatingSystemMXBean) operatingSystemMXBean;\n                load = bean.getSystemCpuLoad();\n            }\n        } catch (Throwable e) {\n            load = -1;\n        }\n        int cpu = operatingSystemMXBean.getAvailableProcessors();\n        return new Status(load < 0 ? Status.Level.UNKNOWN : (load < cpu ? Status.Level.OK : Status.Level.WARN),\n                (load < 0 ? \"\" : \"load:\" + load + \",\") + \"cpu:\" + cpu);\n    }", "signature": "Status check()", "full_signature": "@Override public Status check()", "class_method_signature": "LoadStatusChecker.check()", "testcase": false, "constructor": false, "invocations": ["getOperatingSystemMXBean", "getMethod", "invoke", "getSystemCpuLoad", "getAvailableProcessors"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}