{"test_class": {"identifier": "AttributeTypeConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "neo4j/src/test/java/eu/drus/jpa/unit/neo4j/dataset/AttributeTypeConverterTest.java"}, "test_case": {"identifier": "testConvertDouble", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvertDouble() {\n        // GIVEN\n        final DefaultAttribute<Double> attribute = new DefaultAttribute<>(10.0, AttributeType.DOUBLE);\n\n        // WHEN\n        final Object value = AttributeTypeConverter.convert(attribute);\n\n        // THEN\n        assertThat(value, instanceOf(Double.class));\n        assertThat(value, equalTo(10.0));\n    }", "signature": "void testConvertDouble()", "full_signature": "@Test public void testConvertDouble()", "class_method_signature": "AttributeTypeConverterTest.testConvertDouble()", "testcase": true, "constructor": false, "invocations": ["convert", "assertThat", "instanceOf", "assertThat", "equalTo"]}, "focal_class": {"identifier": "AttributeTypeConverter", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "AttributeTypeConverter", "parameters": "()", "modifiers": "private", "return": "", "signature": " AttributeTypeConverter()", "full_signature": "private  AttributeTypeConverter()", "class_method_signature": "AttributeTypeConverter.AttributeTypeConverter()", "testcase": false, "constructor": true}, {"identifier": "convert", "parameters": "(final Attribute attribute)", "modifiers": "public static", "return": "Object", "signature": "Object convert(final Attribute attribute)", "full_signature": "public static Object convert(final Attribute attribute)", "class_method_signature": "AttributeTypeConverter.convert(final Attribute attribute)", "testcase": false, "constructor": false}], "file": "neo4j/src/main/java/eu/drus/jpa/unit/neo4j/dataset/AttributeTypeConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(final Attribute attribute)", "modifiers": "public static", "return": "Object", "body": "public static Object convert(final Attribute attribute) {\n        switch (attribute.getType()) {\n        case BOOLEAN:\n            return Boolean.valueOf(attribute.getValue());\n        case FLOAT:\n            // float types are always represented as double in neo4j\n            // https://neo4j.com/docs/developer-manual/current/drivers/cypher-values/#driver-type-mappings\n        case DOUBLE:\n            return Double.valueOf(attribute.getValue());\n        case INT:\n            // int types are always represented as long in neo4j\n            // https://neo4j.com/docs/developer-manual/current/drivers/cypher-values/#driver-type-mappings\n        case LONG:\n            return Long.valueOf(attribute.getValue());\n        case STRING:\n            return attribute.getValue();\n        default:\n            throw new JpaUnitException(\"Unsupported attribute type: \" + attribute.getType());\n        }\n    }", "signature": "Object convert(final Attribute attribute)", "full_signature": "public static Object convert(final Attribute attribute)", "class_method_signature": "AttributeTypeConverter.convert(final Attribute attribute)", "testcase": false, "constructor": false, "invocations": ["getType", "valueOf", "getValue", "valueOf", "getValue", "valueOf", "getValue", "getValue", "getType"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}