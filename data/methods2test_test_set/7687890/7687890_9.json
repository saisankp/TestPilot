{"test_class": {"identifier": "MyAttributeValueFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final URI stringEqualFunction;", "modifier": "private final", "type": "URI", "declarator": "stringEqualFunction", "var_name": "stringEqualFunction"}, {"original_string": "private final URI stringEqualOneof;", "modifier": "private final", "type": "URI", "declarator": "stringEqualOneof", "var_name": "stringEqualOneof"}], "file": "Code/core-abce/abce-components/src/test/java-ibm-only/eu/abc4trust/util/attributeTypes/MyAttributeValueFactoryTest.java"}, "test_case": {"identifier": "testParseValueFromFunction", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testParseValueFromFunction() throws Exception {\n    assertEquals(MyAttributeValueString.class, parseValueFromFunction(stringEqualFunction, \"hello\")\n        .getClass());\n    assertEquals(MyAttributeValueDate.class, parseValueFromFunction(\n        new URI(\"urn:oasis:names:tc:xacml:1.0:function:date-greater-than\"), \"2010-01-01\")\n        .getClass());\n  }", "signature": "void testParseValueFromFunction()", "full_signature": "@Test public void testParseValueFromFunction()", "class_method_signature": "MyAttributeValueFactoryTest.testParseValueFromFunction()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getClass", "parseValueFromFunction", "assertEquals", "getClass", "parseValueFromFunction"]}, "focal_class": {"identifier": "MyAttributeValueFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "parseValue", "parameters": "(URI dataType, Object attributeValue, /*Nullable*/ EnumAllowedValues av)", "modifiers": "public static", "return": "MyAttributeValue", "signature": "MyAttributeValue parseValue(URI dataType, Object attributeValue, /*Nullable*/ EnumAllowedValues av)", "full_signature": "public static MyAttributeValue parseValue(URI dataType, Object attributeValue, /*Nullable*/ EnumAllowedValues av)", "class_method_signature": "MyAttributeValueFactory.parseValue(URI dataType, Object attributeValue, /*Nullable*/ EnumAllowedValues av)", "testcase": false, "constructor": false}, {"identifier": "operationTypeOfFunction", "parameters": "(URI functionAsUri)", "modifiers": "public static", "return": "OperationType", "signature": "OperationType operationTypeOfFunction(URI functionAsUri)", "full_signature": "public static OperationType operationTypeOfFunction(URI functionAsUri)", "class_method_signature": "MyAttributeValueFactory.operationTypeOfFunction(URI functionAsUri)", "testcase": false, "constructor": false}, {"identifier": "returnTypeOfFunction", "parameters": "(URI functionAsUri)", "modifiers": "public static", "return": "String", "signature": "String returnTypeOfFunction(URI functionAsUri)", "full_signature": "public static String returnTypeOfFunction(URI functionAsUri)", "class_method_signature": "MyAttributeValueFactory.returnTypeOfFunction(URI functionAsUri)", "testcase": false, "constructor": false}, {"identifier": "parseValueFromFunction", "parameters": "(URI function, Object param)", "modifiers": "public static", "return": "MyAttributeValue", "signature": "MyAttributeValue parseValueFromFunction(URI function, Object param)", "full_signature": "public static MyAttributeValue parseValueFromFunction(URI function, Object param)", "class_method_signature": "MyAttributeValueFactory.parseValueFromFunction(URI function, Object param)", "testcase": false, "constructor": false}, {"identifier": "evaulateFunction", "parameters": "(URI function, List<MyAttributeValue> arguments)", "modifiers": "public static", "return": "boolean", "signature": "boolean evaulateFunction(URI function, List<MyAttributeValue> arguments)", "full_signature": "public static boolean evaulateFunction(URI function, List<MyAttributeValue> arguments)", "class_method_signature": "MyAttributeValueFactory.evaulateFunction(URI function, List<MyAttributeValue> arguments)", "testcase": false, "constructor": false}, {"identifier": "checkTypes", "parameters": "(List<MyAttributeValue> arguments, String returnType)", "modifiers": "private static", "return": "boolean", "signature": "boolean checkTypes(List<MyAttributeValue> arguments, String returnType)", "full_signature": "private static boolean checkTypes(List<MyAttributeValue> arguments, String returnType)", "class_method_signature": "MyAttributeValueFactory.checkTypes(List<MyAttributeValue> arguments, String returnType)", "testcase": false, "constructor": false}, {"identifier": "getClassOfType", "parameters": "(String type)", "modifiers": "private static", "return": "Class<?>", "signature": "Class<?> getClassOfType(String type)", "full_signature": "private static Class<?> getClassOfType(String type)", "class_method_signature": "MyAttributeValueFactory.getClassOfType(String type)", "testcase": false, "constructor": false}, {"identifier": "isArgumentNumberCorrect", "parameters": "(OperationType op, int size)", "modifiers": "private static", "return": "boolean", "signature": "boolean isArgumentNumberCorrect(OperationType op, int size)", "full_signature": "private static boolean isArgumentNumberCorrect(OperationType op, int size)", "class_method_signature": "MyAttributeValueFactory.isArgumentNumberCorrect(OperationType op, int size)", "testcase": false, "constructor": false}], "file": "Code/core-abce/abce-components/src/main/java-ibm-only/eu/abc4trust/util/attributeTypes/MyAttributeValueFactory.java"}, "focal_method": {"identifier": "parseValueFromFunction", "parameters": "(URI function, Object param)", "modifiers": "public static", "return": "MyAttributeValue", "body": "public static MyAttributeValue parseValueFromFunction(URI function, Object param) {\n    String returnType = \"\";\n    returnType = returnTypeOfFunction(function);\n    return parseValue(URI.create(returnType), param, null);\n  }", "signature": "MyAttributeValue parseValueFromFunction(URI function, Object param)", "full_signature": "public static MyAttributeValue parseValueFromFunction(URI function, Object param)", "class_method_signature": "MyAttributeValueFactory.parseValueFromFunction(URI function, Object param)", "testcase": false, "constructor": false, "invocations": ["returnTypeOfFunction", "parseValue", "create"]}, "repository": {"repo_id": 7687890, "url": "https://github.com/p2abcengine/p2abcengine", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 71, "size": 11790, "license": "licensed"}}