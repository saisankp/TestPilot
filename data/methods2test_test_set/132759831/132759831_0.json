{"test_class": {"identifier": "FavouriteListCinemaPresenterTest", "superclass": "extends UnitTest", "interfaces": "", "fields": [{"original_string": "@Mock private FavouriteListCinemaPresenter.View view;", "modifier": "@Mock private", "type": "FavouriteListCinemaPresenter.View", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock private CinemaLocalRepository repository;", "modifier": "@Mock private", "type": "CinemaLocalRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "@Mock private SharedPreferenceManager sharedPreferenceManager;", "modifier": "@Mock private", "type": "SharedPreferenceManager", "declarator": "sharedPreferenceManager", "var_name": "sharedPreferenceManager"}, {"original_string": "private TestScheduler testScheduler;", "modifier": "private", "type": "TestScheduler", "declarator": "testScheduler", "var_name": "testScheduler"}, {"original_string": "private GetFavouriteListCinema useCaseGetFavouriteListCinema;", "modifier": "private", "type": "GetFavouriteListCinema", "declarator": "useCaseGetFavouriteListCinema", "var_name": "useCaseGetFavouriteListCinema"}, {"original_string": "private FavouriteListCinemaPresenter presenter;", "modifier": "private", "type": "FavouriteListCinemaPresenter", "declarator": "presenter", "var_name": "presenter"}, {"original_string": "private static final int TEST_CINEMA_ID = 65;", "modifier": "private static final", "type": "int", "declarator": "TEST_CINEMA_ID = 65", "var_name": "TEST_CINEMA_ID"}], "file": "app/src/test/java/com/ru/devit/mediateka/presentation/favouritelistcinema/FavouriteListCinemaPresenterTest.java"}, "test_case": {"identifier": "shouldShowAllFavouriteCinemaListWhenInitialize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldShowAllFavouriteCinemaListWhenInitialize(){\n        presenter.setView(view);\n        List<Cinema> cinemaList = new ArrayList<>();\n        Cinema testCinema = new Cinema();\n        testCinema.setCharacter(\"Thor\");\n        cinemaList.add(testCinema);\n        doReturn(Maybe.just(cinemaList)).when(repository).getFavouriteListCinema();\n        presenter.initialize();\n        testScheduler.triggerActions();\n\n        verify(view).showLoading();\n        verify(view).showFavouriteListCinema(cinemaList);\n    }", "signature": "void shouldShowAllFavouriteCinemaListWhenInitialize()", "full_signature": "@Test public void shouldShowAllFavouriteCinemaListWhenInitialize()", "class_method_signature": "FavouriteListCinemaPresenterTest.shouldShowAllFavouriteCinemaListWhenInitialize()", "testcase": true, "constructor": false, "invocations": ["setView", "setCharacter", "add", "getFavouriteListCinema", "when", "doReturn", "just", "initialize", "triggerActions", "showLoading", "verify", "showFavouriteListCinema", "verify"]}, "focal_class": {"identifier": "FavouriteListCinemaPresenter", "superclass": "extends BasePresenter<FavouriteListCinemaPresenter.View>", "interfaces": "", "fields": [{"original_string": "private List<Cinema> cinemaList;", "modifier": "private", "type": "List<Cinema>", "declarator": "cinemaList", "var_name": "cinemaList"}, {"original_string": "private final GetFavouriteListCinema useCaseFavouriteListCinema;", "modifier": "private final", "type": "GetFavouriteListCinema", "declarator": "useCaseFavouriteListCinema", "var_name": "useCaseFavouriteListCinema"}, {"original_string": "private final SharedPreferenceManager sharedPreferenceManager;", "modifier": "private final", "type": "SharedPreferenceManager", "declarator": "sharedPreferenceManager", "var_name": "sharedPreferenceManager"}], "methods": [{"identifier": "FavouriteListCinemaPresenter", "parameters": "(GetFavouriteListCinema useCaseFavouriteListCinema ,\n                                        SharedPreferenceManager sharedPreferenceManager)", "modifiers": "public", "return": "", "signature": " FavouriteListCinemaPresenter(GetFavouriteListCinema useCaseFavouriteListCinema ,\n                                        SharedPreferenceManager sharedPreferenceManager)", "full_signature": "public  FavouriteListCinemaPresenter(GetFavouriteListCinema useCaseFavouriteListCinema ,\n                                        SharedPreferenceManager sharedPreferenceManager)", "class_method_signature": "FavouriteListCinemaPresenter.FavouriteListCinemaPresenter(GetFavouriteListCinema useCaseFavouriteListCinema ,\n                                        SharedPreferenceManager sharedPreferenceManager)", "testcase": false, "constructor": true}, {"identifier": "initialize", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initialize()", "full_signature": "@Override public void initialize()", "class_method_signature": "FavouriteListCinemaPresenter.initialize()", "testcase": false, "constructor": false}, {"identifier": "onCinemaClicked", "parameters": "(int cinemaId , int viewHolderPos)", "modifiers": "public", "return": "void", "signature": "void onCinemaClicked(int cinemaId , int viewHolderPos)", "full_signature": "public void onCinemaClicked(int cinemaId , int viewHolderPos)", "class_method_signature": "FavouriteListCinemaPresenter.onCinemaClicked(int cinemaId , int viewHolderPos)", "testcase": false, "constructor": false}, {"identifier": "onCinemaSwiped", "parameters": "(int position)", "modifiers": "@SuppressLint(\"CheckResult\") public", "return": "void", "signature": "void onCinemaSwiped(int position)", "full_signature": "@SuppressLint(\"CheckResult\") public void onCinemaSwiped(int position)", "class_method_signature": "FavouriteListCinemaPresenter.onCinemaSwiped(int position)", "testcase": false, "constructor": false}, {"identifier": "onMenuClearFavouriteListClicked", "parameters": "()", "modifiers": "@SuppressLint(\"CheckResult\") public", "return": "void", "signature": "void onMenuClearFavouriteListClicked()", "full_signature": "@SuppressLint(\"CheckResult\") public void onMenuClearFavouriteListClicked()", "class_method_signature": "FavouriteListCinemaPresenter.onMenuClearFavouriteListClicked()", "testcase": false, "constructor": false}, {"identifier": "onUndoClicked", "parameters": "(Cinema deletedCinema, int deletedIndex)", "modifiers": "public", "return": "void", "signature": "void onUndoClicked(Cinema deletedCinema, int deletedIndex)", "full_signature": "public void onUndoClicked(Cinema deletedCinema, int deletedIndex)", "class_method_signature": "FavouriteListCinemaPresenter.onUndoClicked(Cinema deletedCinema, int deletedIndex)", "testcase": false, "constructor": false}, {"identifier": "setCinemaList", "parameters": "(List<Cinema> cinemaList)", "modifiers": "public", "return": "void", "signature": "void setCinemaList(List<Cinema> cinemaList)", "full_signature": "public void setCinemaList(List<Cinema> cinemaList)", "class_method_signature": "FavouriteListCinemaPresenter.setCinemaList(List<Cinema> cinemaList)", "testcase": false, "constructor": false}, {"identifier": "onCinemaSortingDialogItemClicked", "parameters": "(int position)", "modifiers": "public", "return": "void", "signature": "void onCinemaSortingDialogItemClicked(int position)", "full_signature": "public void onCinemaSortingDialogItemClicked(int position)", "class_method_signature": "FavouriteListCinemaPresenter.onCinemaSortingDialogItemClicked(int position)", "testcase": false, "constructor": false}, {"identifier": "checkForEmptyList", "parameters": "(List<Cinema> cinemas)", "modifiers": "private", "return": "void", "signature": "void checkForEmptyList(List<Cinema> cinemas)", "full_signature": "private void checkForEmptyList(List<Cinema> cinemas)", "class_method_signature": "FavouriteListCinemaPresenter.checkForEmptyList(List<Cinema> cinemas)", "testcase": false, "constructor": false}, {"identifier": "removeNotNecessaryInfoFromCinemaList", "parameters": "(List<Cinema> cinemas)", "modifiers": "private", "return": "void", "signature": "void removeNotNecessaryInfoFromCinemaList(List<Cinema> cinemas)", "full_signature": "private void removeNotNecessaryInfoFromCinemaList(List<Cinema> cinemas)", "class_method_signature": "FavouriteListCinemaPresenter.removeNotNecessaryInfoFromCinemaList(List<Cinema> cinemas)", "testcase": false, "constructor": false}, {"identifier": "onDestroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onDestroy()", "full_signature": "@Override public void onDestroy()", "class_method_signature": "FavouriteListCinemaPresenter.onDestroy()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/ru/devit/mediateka/presentation/favouritelistcinema/FavouriteListCinemaPresenter.java"}, "focal_method": {"identifier": "initialize", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void initialize() {\n        getView().showLoading();\n        getView().showSavedSortedPosition(sharedPreferenceManager.getCinemaSortingPosition());\n        useCaseFavouriteListCinema.subscribe(new DisposableSubscriber<List<Cinema>>() {\n            @Override\n            public void onNext(List<Cinema> cinemas) {\n                cinemaList = cinemas;\n                removeNotNecessaryInfoFromCinemaList(cinemaList);\n                checkForEmptyList(cinemaList);\n            }\n\n            @Override\n            public void onError(Throwable t) {\n                t.printStackTrace();\n                getView().hideLoading();\n            }\n\n            @Override\n            public void onComplete() {\n                getView().hideLoading();\n            }\n        });\n    }", "signature": "void initialize()", "full_signature": "@Override public void initialize()", "class_method_signature": "FavouriteListCinemaPresenter.initialize()", "testcase": false, "constructor": false, "invocations": ["showLoading", "getView", "showSavedSortedPosition", "getView", "getCinemaSortingPosition", "subscribe", "removeNotNecessaryInfoFromCinemaList", "checkForEmptyList", "printStackTrace", "hideLoading", "getView", "hideLoading", "getView"]}, "repository": {"repo_id": 132759831, "url": "https://github.com/Devit951/Mediateka", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 33, "size": 679, "license": "licensed"}}