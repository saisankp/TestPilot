{"test_class": {"identifier": "HmacKeyManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final HmacKeyManager manager = new HmacKeyManager();", "modifier": "private final", "type": "HmacKeyManager", "declarator": "manager = new HmacKeyManager()", "var_name": "manager"}, {"original_string": "private final KeyTypeManager.KeyFactory<HmacKeyFormat, HmacKey> factory = manager.keyFactory();", "modifier": "private final", "type": "KeyTypeManager.KeyFactory<HmacKeyFormat, HmacKey>", "declarator": "factory = manager.keyFactory()", "var_name": "factory"}], "file": "java_src/src/test/java/com/google/crypto/tink/mac/HmacKeyManagerTest.java"}, "test_case": {"identifier": "testHmacSha256HalfDigestTemplate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testHmacSha256HalfDigestTemplate() throws Exception {\n    KeyTemplate template = HmacKeyManager.hmacSha256HalfDigestTemplate();\n    assertThat(template.getTypeUrl()).isEqualTo(new HmacKeyManager().getKeyType());\n    assertThat(template.getOutputPrefixType()).isEqualTo(KeyTemplate.OutputPrefixType.TINK);\n    HmacKeyFormat format =\n        HmacKeyFormat.parseFrom(template.getValue(), ExtensionRegistryLite.getEmptyRegistry());\n\n    assertThat(format.getKeySize()).isEqualTo(32);\n    assertThat(format.getParams().getTagSize()).isEqualTo(16);\n    assertThat(format.getParams().getHash()).isEqualTo(HashType.SHA256);\n  }", "signature": "void testHmacSha256HalfDigestTemplate()", "full_signature": "@Test public void testHmacSha256HalfDigestTemplate()", "class_method_signature": "HmacKeyManagerTest.testHmacSha256HalfDigestTemplate()", "testcase": true, "constructor": false, "invocations": ["hmacSha256HalfDigestTemplate", "isEqualTo", "assertThat", "getTypeUrl", "getKeyType", "isEqualTo", "assertThat", "getOutputPrefixType", "parseFrom", "getValue", "getEmptyRegistry", "isEqualTo", "assertThat", "getKeySize", "isEqualTo", "assertThat", "getTagSize", "getParams", "isEqualTo", "assertThat", "getHash", "getParams"]}, "focal_class": {"identifier": "HmacKeyManager", "superclass": "extends KeyTypeManager<HmacKey>", "interfaces": "", "fields": [{"original_string": "private static final int MIN_KEY_SIZE_IN_BYTES = 16;", "modifier": "private static final", "type": "int", "declarator": "MIN_KEY_SIZE_IN_BYTES = 16", "var_name": "MIN_KEY_SIZE_IN_BYTES"}, {"original_string": "private static final int MIN_TAG_SIZE_IN_BYTES = 10;", "modifier": "private static final", "type": "int", "declarator": "MIN_TAG_SIZE_IN_BYTES = 10", "var_name": "MIN_TAG_SIZE_IN_BYTES"}], "methods": [{"identifier": "HmacKeyManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " HmacKeyManager()", "full_signature": "public  HmacKeyManager()", "class_method_signature": "HmacKeyManager.HmacKeyManager()", "testcase": false, "constructor": true}, {"identifier": "getKeyType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getKeyType()", "full_signature": "@Override public String getKeyType()", "class_method_signature": "HmacKeyManager.getKeyType()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getVersion()", "full_signature": "@Override public int getVersion()", "class_method_signature": "HmacKeyManager.getVersion()", "testcase": false, "constructor": false}, {"identifier": "keyMaterialType", "parameters": "()", "modifiers": "@Override public", "return": "KeyMaterialType", "signature": "KeyMaterialType keyMaterialType()", "full_signature": "@Override public KeyMaterialType keyMaterialType()", "class_method_signature": "HmacKeyManager.keyMaterialType()", "testcase": false, "constructor": false}, {"identifier": "validateKey", "parameters": "(HmacKey key)", "modifiers": "@Override public", "return": "void", "signature": "void validateKey(HmacKey key)", "full_signature": "@Override public void validateKey(HmacKey key)", "class_method_signature": "HmacKeyManager.validateKey(HmacKey key)", "testcase": false, "constructor": false}, {"identifier": "parseKey", "parameters": "(ByteString byteString)", "modifiers": "@Override public", "return": "HmacKey", "signature": "HmacKey parseKey(ByteString byteString)", "full_signature": "@Override public HmacKey parseKey(ByteString byteString)", "class_method_signature": "HmacKeyManager.parseKey(ByteString byteString)", "testcase": false, "constructor": false}, {"identifier": "validateParams", "parameters": "(HmacParams params)", "modifiers": "private static", "return": "void", "signature": "void validateParams(HmacParams params)", "full_signature": "private static void validateParams(HmacParams params)", "class_method_signature": "HmacKeyManager.validateParams(HmacParams params)", "testcase": false, "constructor": false}, {"identifier": "keyFactory", "parameters": "()", "modifiers": "@Override public", "return": "KeyFactory<HmacKeyFormat, HmacKey>", "signature": "KeyFactory<HmacKeyFormat, HmacKey> keyFactory()", "full_signature": "@Override public KeyFactory<HmacKeyFormat, HmacKey> keyFactory()", "class_method_signature": "HmacKeyManager.keyFactory()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(boolean newKeyAllowed)", "modifiers": "public static", "return": "void", "signature": "void register(boolean newKeyAllowed)", "full_signature": "public static void register(boolean newKeyAllowed)", "class_method_signature": "HmacKeyManager.register(boolean newKeyAllowed)", "testcase": false, "constructor": false}, {"identifier": "hmacSha256HalfDigestTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate hmacSha256HalfDigestTemplate()", "full_signature": "public static final KeyTemplate hmacSha256HalfDigestTemplate()", "class_method_signature": "HmacKeyManager.hmacSha256HalfDigestTemplate()", "testcase": false, "constructor": false}, {"identifier": "hmacSha256Template", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate hmacSha256Template()", "full_signature": "public static final KeyTemplate hmacSha256Template()", "class_method_signature": "HmacKeyManager.hmacSha256Template()", "testcase": false, "constructor": false}, {"identifier": "hmacSha512HalfDigestTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate hmacSha512HalfDigestTemplate()", "full_signature": "public static final KeyTemplate hmacSha512HalfDigestTemplate()", "class_method_signature": "HmacKeyManager.hmacSha512HalfDigestTemplate()", "testcase": false, "constructor": false}, {"identifier": "hmacSha512Template", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate hmacSha512Template()", "full_signature": "public static final KeyTemplate hmacSha512Template()", "class_method_signature": "HmacKeyManager.hmacSha512Template()", "testcase": false, "constructor": false}, {"identifier": "createTemplate", "parameters": "(int keySize, int tagSize, HashType hashType)", "modifiers": "private static", "return": "KeyTemplate", "signature": "KeyTemplate createTemplate(int keySize, int tagSize, HashType hashType)", "full_signature": "private static KeyTemplate createTemplate(int keySize, int tagSize, HashType hashType)", "class_method_signature": "HmacKeyManager.createTemplate(int keySize, int tagSize, HashType hashType)", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/mac/HmacKeyManager.java"}, "focal_method": {"identifier": "hmacSha256HalfDigestTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "body": "public static final KeyTemplate hmacSha256HalfDigestTemplate() {\n    return createTemplate(32, 16, HashType.SHA256);\n  }", "signature": "KeyTemplate hmacSha256HalfDigestTemplate()", "full_signature": "public static final KeyTemplate hmacSha256HalfDigestTemplate()", "class_method_signature": "HmacKeyManager.hmacSha256HalfDigestTemplate()", "testcase": false, "constructor": false, "invocations": ["createTemplate"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}