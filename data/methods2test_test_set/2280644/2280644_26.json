{"test_class": {"identifier": "TerminalPageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ManFileParser parser;", "modifier": "private", "type": "ManFileParser", "declarator": "parser", "var_name": "parser"}], "file": "aesh/src/test/java/org/aesh/command/man/TerminalPageTest.java"}, "test_case": {"identifier": "testTerminalPage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTerminalPage() throws IOException {\n        TerminalPage tp = new TerminalPage(parser, 80);\n\n        Assert.assertTrue(tp.hasData());\n        Assert.assertTrue(tp.size() > 0);\n        Assert.assertNotNull(tp.getLines());\n        Assert.assertEquals(\"ASCIIDOC(1)\", tp.getFileName());\n        Assert.assertNotNull(tp.findWord(\"is\"));\n        Assert.assertTrue(tp.getLine(8).contains(\"DocBook\"));\n\n    }", "signature": "void testTerminalPage()", "full_signature": "@Test public void testTerminalPage()", "class_method_signature": "TerminalPageTest.testTerminalPage()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "hasData", "assertTrue", "size", "assertNotNull", "getLines", "assertEquals", "getFileName", "assertNotNull", "findWord", "assertTrue", "contains", "getLine"]}, "focal_class": {"identifier": "TerminalPage", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<String> lines;", "modifier": "private", "type": "List<String>", "declarator": "lines", "var_name": "lines"}, {"original_string": "private FileParser fileParser;", "modifier": "private", "type": "FileParser", "declarator": "fileParser", "var_name": "fileParser"}], "methods": [{"identifier": "TerminalPage", "parameters": "(FileParser fileParser, int columns)", "modifiers": "public", "return": "", "signature": " TerminalPage(FileParser fileParser, int columns)", "full_signature": "public  TerminalPage(FileParser fileParser, int columns)", "class_method_signature": "TerminalPage.TerminalPage(FileParser fileParser, int columns)", "testcase": false, "constructor": true}, {"identifier": "getLine", "parameters": "(int num)", "modifiers": "public", "return": "String", "signature": "String getLine(int num)", "full_signature": "public String getLine(int num)", "class_method_signature": "TerminalPage.getLine(int num)", "testcase": false, "constructor": false}, {"identifier": "findWord", "parameters": "(String word)", "modifiers": "public", "return": "List<Integer>", "signature": "List<Integer> findWord(String word)", "full_signature": "public List<Integer> findWord(String word)", "class_method_signature": "TerminalPage.findWord(String word)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "TerminalPage.size()", "testcase": false, "constructor": false}, {"identifier": "getFileName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFileName()", "full_signature": "public String getFileName()", "class_method_signature": "TerminalPage.getFileName()", "testcase": false, "constructor": false}, {"identifier": "getLines", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getLines()", "full_signature": "public List<String> getLines()", "class_method_signature": "TerminalPage.getLines()", "testcase": false, "constructor": false}, {"identifier": "hasData", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasData()", "full_signature": "public boolean hasData()", "class_method_signature": "TerminalPage.hasData()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "TerminalPage.clear()", "testcase": false, "constructor": false}], "file": "aesh/src/main/java/org/aesh/command/man/TerminalPage.java"}, "focal_method": {"identifier": "TerminalPage", "parameters": "(FileParser fileParser, int columns)", "modifiers": "public", "return": "", "body": "public TerminalPage(FileParser fileParser, int columns) throws IOException {\n       this.fileParser = fileParser;\n        lines = fileParser.loadPage(columns);\n    }", "signature": " TerminalPage(FileParser fileParser, int columns)", "full_signature": "public  TerminalPage(FileParser fileParser, int columns)", "class_method_signature": "TerminalPage.TerminalPage(FileParser fileParser, int columns)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 2280644, "url": "https://github.com/aeshell/aesh", "language": "Java", "is_fork": false, "fork_count": 62, "stargazer_count": 83, "size": 6068, "license": "licensed"}}