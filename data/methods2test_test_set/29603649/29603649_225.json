{"test_class": {"identifier": "OrBodyCheckerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ConditionCheckerOperator operator;", "modifier": "@Mock\n    private", "type": "ConditionCheckerOperator", "declarator": "operator", "var_name": "operator"}, {"original_string": "@Mock\n    private WilmaHttpRequest request;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private ParameterList paramList;", "modifier": "@Mock\n    private", "type": "ParameterList", "declarator": "paramList", "var_name": "paramList"}, {"original_string": "private List<Parameter> params;", "modifier": "private", "type": "List<Parameter>", "declarator": "params", "var_name": "params"}, {"original_string": "private OrBodyChecker underTest;", "modifier": "private", "type": "OrBodyChecker", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-stub-configuration-support/src/test/java/com/epam/wilma/stubconfig/condition/checker/general/text/OrBodyCheckerTest.java"}, "test_case": {"identifier": "testCheckConditionShouldReturnFalseWhenParamsIsEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCheckConditionShouldReturnFalseWhenParamsIsEmpty() {\n        //GIVEN\n        given(paramList.getAllParameters()).willReturn(params);\n        //WHEN\n        boolean actual = underTest.checkCondition(request, paramList);\n        //THEN\n        assertFalse(actual);\n    }", "signature": "void testCheckConditionShouldReturnFalseWhenParamsIsEmpty()", "full_signature": "@Test public void testCheckConditionShouldReturnFalseWhenParamsIsEmpty()", "class_method_signature": "OrBodyCheckerTest.testCheckConditionShouldReturnFalseWhenParamsIsEmpty()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getAllParameters", "checkCondition", "assertFalse"]}, "focal_class": {"identifier": "OrBodyChecker", "superclass": "", "interfaces": "implements ConditionChecker", "fields": [{"original_string": "private final ConditionCheckerOperator operator;", "modifier": "private final", "type": "ConditionCheckerOperator", "declarator": "operator", "var_name": "operator"}], "methods": [{"identifier": "OrBodyChecker", "parameters": "(final ConditionCheckerOperator operator)", "modifiers": "public", "return": "", "signature": " OrBodyChecker(final ConditionCheckerOperator operator)", "full_signature": "public  OrBodyChecker(final ConditionCheckerOperator operator)", "class_method_signature": "OrBodyChecker.OrBodyChecker(final ConditionCheckerOperator operator)", "testcase": false, "constructor": true}, {"identifier": "checkCondition", "parameters": "(final WilmaHttpRequest request, final ParameterList parameterList)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "full_signature": "@Override public boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "class_method_signature": "OrBodyChecker.checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "testcase": false, "constructor": false}, {"identifier": "checkInRequestHeaders", "parameters": "(final WilmaHttpRequest request, final Parameter parameter)", "modifiers": "private", "return": "boolean", "signature": "boolean checkInRequestHeaders(final WilmaHttpRequest request, final Parameter parameter)", "full_signature": "private boolean checkInRequestHeaders(final WilmaHttpRequest request, final Parameter parameter)", "class_method_signature": "OrBodyChecker.checkInRequestHeaders(final WilmaHttpRequest request, final Parameter parameter)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-support/src/main/java/com/epam/wilma/stubconfig/condition/checker/general/text/OrBodyChecker.java"}, "focal_method": {"identifier": "checkCondition", "parameters": "(final WilmaHttpRequest request, final ParameterList parameterList)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList) {\n        List<Parameter> params = parameterList.getAllParameters();\n        Iterator<Parameter> iterator = params.iterator();\n        boolean result = false;\n        if (!params.isEmpty()) {\n            while (iterator.hasNext() && !result) {\n                result = checkInRequestHeaders(request, iterator.next());\n            }\n        }\n        return result;\n    }", "signature": "boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "full_signature": "@Override public boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "class_method_signature": "OrBodyChecker.checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "testcase": false, "constructor": false, "invocations": ["getAllParameters", "iterator", "isEmpty", "hasNext", "checkInRequestHeaders", "next"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}