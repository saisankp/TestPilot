{"test_class": {"identifier": "CommandFactoryTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "core/src/test/java/ship/CommandFactoryTest.java"}, "test_case": {"identifier": "testCreate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCreate() {\n    final CommandFactory commandFactory = new CommandFactory(DummyMessagePrinter.getInstance());\n    for (final String command : data()) {\n      assertTrue(commandFactory.create(new String[] { command }).isPresent());\n    }\n  }", "signature": "void testCreate()", "full_signature": "@Test public void testCreate()", "class_method_signature": "CommandFactoryTest.testCreate()", "testcase": true, "constructor": false, "invocations": ["getInstance", "data", "assertTrue", "isPresent", "create"]}, "focal_class": {"identifier": "CommandFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected final MessagePrinter printer;", "modifier": "protected final", "type": "MessagePrinter", "declarator": "printer", "var_name": "printer"}], "methods": [{"identifier": "createInternal", "parameters": "(final String keyword)", "modifiers": "protected", "return": "Command", "signature": "Command createInternal(final String keyword)", "full_signature": "protected Command createInternal(final String keyword)", "class_method_signature": "CommandFactory.createInternal(final String keyword)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(final String keyword)", "modifiers": "protected", "return": "Optional<Command>", "signature": "Optional<Command> create(final String keyword)", "full_signature": "protected Optional<Command> create(final String keyword)", "class_method_signature": "CommandFactory.create(final String keyword)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(final String[] args)", "modifiers": "public", "return": "Optional<Command>", "signature": "Optional<Command> create(final String[] args)", "full_signature": "public Optional<Command> create(final String[] args)", "class_method_signature": "CommandFactory.create(final String[] args)", "testcase": false, "constructor": false}], "file": "core/src/main/java/ship/CommandFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(final String keyword)", "modifiers": "protected", "return": "Optional<Command>", "body": "protected Optional<Command> create(final String keyword) {\n    final Command command = createInternal(keyword);\n    if (command instanceof AbstractCommand) {\n      ((AbstractCommand) command).setPrinter(printer);\n    }\n    return ofNullable(command);\n  }", "signature": "Optional<Command> create(final String keyword)", "full_signature": "protected Optional<Command> create(final String keyword)", "class_method_signature": "CommandFactory.create(final String keyword)", "testcase": false, "constructor": false, "invocations": ["createInternal", "setPrinter", "ofNullable"]}, "repository": {"repo_id": 149694816, "url": "https://github.com/aergoio/ship", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 1743, "license": "licensed"}}