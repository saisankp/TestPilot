{"test_class": {"identifier": "FreeStylePipelineTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public JenkinsRule j = new JenkinsRule();", "modifier": "@Rule\n    public", "type": "JenkinsRule", "declarator": "j = new JenkinsRule()", "var_name": "j"}], "file": "blueocean-rest-impl/src/test/java/io/jenkins/blueocean/service/embedded/rest/FreeStylePipelineTest.java"}, "test_case": {"identifier": "findNonNumericRun", "parameters": "()", "modifiers": "@Test @Issue(\"JENKINS-51716\") public", "return": "void", "body": "@Test\n    @Issue(\"JENKINS-51716\")\n    public void findNonNumericRun() throws Exception {\n        FreeStyleProject freestyle = Mockito.spy(j.createProject(FreeStyleProject.class, \"freestyle\"));\n\n        FreeStyleBuild build1 = Mockito.mock(FreeStyleBuild.class);\n        FreeStyleBuild build2 = Mockito.mock(FreeStyleBuild.class);\n\n        Mockito.when(build1.getId()).thenReturn(\"build1\");\n        Mockito.when(build1.getParent()).thenReturn(freestyle);\n        Mockito.when(build1.getNextBuild()).thenReturn(build2);\n\n        Mockito.when(build2.getId()).thenReturn(\"build2\");\n        Mockito.when(build2.getParent()).thenReturn(freestyle);\n        Mockito.when(build2.getPreviousBuild()).thenReturn(build1);\n\n        RunList<FreeStyleBuild> runs = RunList.fromRuns(Arrays.asList(build1, build2));\n        Mockito.doReturn(runs).when(freestyle).getBuilds();\n        Mockito.doReturn(build2).when(freestyle).getLastBuild();\n\n        FreeStylePipeline freeStylePipeline = (FreeStylePipeline) BluePipelineFactory.resolve(freestyle);\n        assertNotNull(freeStylePipeline);\n        BlueRun blueRun = freeStylePipeline.getLatestRun();\n        assertNotNull(blueRun);\n        Links links = blueRun.getLinks();\n        assertNotNull(links);\n        assertNotNull(links.get(\"self\"));\n    }", "signature": "void findNonNumericRun()", "full_signature": "@Test @Issue(\"JENKINS-51716\") public void findNonNumericRun()", "class_method_signature": "FreeStylePipelineTest.findNonNumericRun()", "testcase": true, "constructor": false, "invocations": ["spy", "createProject", "mock", "mock", "thenReturn", "when", "getId", "thenReturn", "when", "getParent", "thenReturn", "when", "getNextBuild", "thenReturn", "when", "getId", "thenReturn", "when", "getParent", "thenReturn", "when", "getPreviousBuild", "fromRuns", "asList", "getBuilds", "when", "doReturn", "getLastBuild", "when", "doReturn", "resolve", "assertNotNull", "getLatestRun", "assertNotNull", "getLinks", "assertNotNull", "assertNotNull", "get"]}, "focal_class": {"identifier": "FreeStylePipeline", "superclass": "extends AbstractPipelineImpl", "interfaces": "", "fields": [{"original_string": "private final Job job;", "modifier": "private final", "type": "Job", "declarator": "job", "var_name": "job"}], "methods": [{"identifier": "FreeStylePipeline", "parameters": "(BlueOrganization organization, Job job)", "modifiers": "private", "return": "", "signature": " FreeStylePipeline(BlueOrganization organization, Job job)", "full_signature": "private  FreeStylePipeline(BlueOrganization organization, Job job)", "class_method_signature": "FreeStylePipeline.FreeStylePipeline(BlueOrganization organization, Job job)", "testcase": false, "constructor": true}, {"identifier": "getLatestRun", "parameters": "()", "modifiers": "@Override public", "return": "BlueRun", "signature": "BlueRun getLatestRun()", "full_signature": "@Override public BlueRun getLatestRun()", "class_method_signature": "FreeStylePipeline.getLatestRun()", "testcase": false, "constructor": false}], "file": "blueocean-rest-impl/src/main/java/io/jenkins/blueocean/service/embedded/rest/FreeStylePipeline.java"}, "focal_method": {"identifier": "getLatestRun", "parameters": "()", "modifiers": "@Override public", "return": "BlueRun", "body": "@Override\n    public BlueRun getLatestRun() {\n        Run run = job.getLastBuild();\n        if(run instanceof FreeStyleBuild){\n            BlueRun blueRun = new FreeStyleRunImpl((FreeStyleBuild) run, this, organization);\n            return new FreeStyleRunSummary(blueRun, run, this, organization);\n        }\n        return super.getLatestRun();\n    }", "signature": "BlueRun getLatestRun()", "full_signature": "@Override public BlueRun getLatestRun()", "class_method_signature": "FreeStylePipeline.getLatestRun()", "testcase": false, "constructor": false, "invocations": ["getLastBuild", "getLatestRun"]}, "repository": {"repo_id": 50250915, "url": "https://github.com/jenkinsci/blueocean-plugin", "stars": 2605, "created": "1/23/2016 6:02:45 PM +00:00", "updates": "2020-01-25T17:58:46+00:00", "fork": "False", "license": "licensed"}}