{"test_class": {"identifier": "DateHolderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Date d1 = d(\"15-03-2012\");", "modifier": "", "type": "Date", "declarator": "d1 = d(\"15-03-2012\")", "var_name": "d1"}, {"original_string": "Date d2 = dlong(\"15-03-2012 16:55:55\");", "modifier": "", "type": "Date", "declarator": "d2 = dlong(\"15-03-2012 16:55:55\")", "var_name": "d2"}, {"original_string": "DateHolder h1 = new DateHolder(d1);", "modifier": "", "type": "DateHolder", "declarator": "h1 = new DateHolder(d1)", "var_name": "h1"}, {"original_string": "DateHolder h2 = new DateHolder(d2);", "modifier": "", "type": "DateHolder", "declarator": "h2 = new DateHolder(d2)", "var_name": "h2"}, {"original_string": "DateHolder h3 = new DateHolder(null);", "modifier": "", "type": "DateHolder", "declarator": "h3 = new DateHolder(null)", "var_name": "h3"}], "file": "smartparam-engine/src/test/java/org/smartparam/engine/types/date/DateHolderTest.java"}, "test_case": {"identifier": "testGetValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetValue() {\n\n        assertEquals(d1, h1.getValue());\n        assertEquals(d2, h2.getValue());\n        assertNull(h3.getValue());\n    }", "signature": "void testGetValue()", "full_signature": "@Test public void testGetValue()", "class_method_signature": "DateHolderTest.testGetValue()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getValue", "assertEquals", "getValue", "assertNull", "getValue"]}, "focal_class": {"identifier": "DateHolder", "superclass": "extends AbstractValueHolder", "interfaces": "", "fields": [{"original_string": "private final Date date;", "modifier": "private final", "type": "Date", "declarator": "date", "var_name": "date"}], "methods": [{"identifier": "DateHolder", "parameters": "(Date date)", "modifiers": "public", "return": "", "signature": " DateHolder(Date date)", "full_signature": "public  DateHolder(Date date)", "class_method_signature": "DateHolder.DateHolder(Date date)", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "Date", "signature": "Date getValue()", "full_signature": "@Override public Date getValue()", "class_method_signature": "DateHolder.getValue()", "testcase": false, "constructor": false}, {"identifier": "getDate", "parameters": "()", "modifiers": "@Override public", "return": "Date", "signature": "Date getDate()", "full_signature": "@Override public Date getDate()", "class_method_signature": "DateHolder.getDate()", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getString()", "full_signature": "@Override public String getString()", "class_method_signature": "DateHolder.getString()", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(String pattern)", "modifiers": "public", "return": "String", "signature": "String getString(String pattern)", "full_signature": "public String getString(String pattern)", "class_method_signature": "DateHolder.getString(String pattern)", "testcase": false, "constructor": false}], "file": "smartparam-engine/src/main/java/org/smartparam/engine/types/date/DateHolder.java"}, "focal_method": {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "Date", "body": "@Override\n    public Date getValue() {\n        return date;\n    }", "signature": "Date getValue()", "full_signature": "@Override public Date getValue()", "class_method_signature": "DateHolder.getValue()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}