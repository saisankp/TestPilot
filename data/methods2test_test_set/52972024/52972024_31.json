{"test_class": {"identifier": "ReSendRestoringSequenceRecoverStrategyTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [], "file": "CoreFeatures/Checkpoint/CheckpointRecoverStrategies/src/test/java/info/smart_tools/smartactors/checkpoint/recover_strategies/ReSendRestoringSequenceRecoverStrategyTest.java"}, "test_case": {"identifier": "Should_makeDumpOfMessageProcessingSequenceOnInitialization", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_makeDumpOfMessageProcessingSequenceOnInitialization()\n            throws Exception {\n        IObject stateMock = mock(IObject.class);\n        IObject argsMock = mock(IObject.class);\n        IObject dumpMock = mock(IObject.class);\n        IMessageProcessor processorMock = mock(IMessageProcessor.class);\n        IMessageProcessingSequence sequenceMock = mock(IMessageProcessingSequence.class);\n        IResolveDependencyStrategy makeDumpStrategy = mock(IResolveDependencyStrategy.class);\n\n        IOC.register(Keys.getOrAdd(\"make dump\"), makeDumpStrategy);\n\n        when(makeDumpStrategy.resolve(same(sequenceMock), same(argsMock))).thenReturn(dumpMock);\n\n        when(processorMock.getSequence()).thenReturn(sequenceMock);\n\n        new ReSendRestoringSequenceRecoverStrategy().init(stateMock, argsMock, processorMock);\n\n        verify(stateMock).setValue(eq(IOC.resolve(Keys.getOrAdd(\"info.smart_tools.smartactors.iobject.ifield_name.IFieldName\"), \"sequenceDump\")), same(dumpMock));\n    }", "signature": "void Should_makeDumpOfMessageProcessingSequenceOnInitialization()", "full_signature": "@Test public void Should_makeDumpOfMessageProcessingSequenceOnInitialization()", "class_method_signature": "ReSendRestoringSequenceRecoverStrategyTest.Should_makeDumpOfMessageProcessingSequenceOnInitialization()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "mock", "mock", "mock", "mock", "register", "getOrAdd", "thenReturn", "when", "resolve", "same", "same", "thenReturn", "when", "getSequence", "init", "setValue", "verify", "eq", "resolve", "getOrAdd", "same"]}, "focal_class": {"identifier": "ReSendRestoringSequenceRecoverStrategy", "superclass": "", "interfaces": "implements IRecoverStrategy", "fields": [{"original_string": "private final IFieldName sequenceDumpFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "sequenceDumpFieldName", "var_name": "sequenceDumpFieldName"}, {"original_string": "private final IFieldName messageFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "messageFieldName", "var_name": "messageFieldName"}, {"original_string": "private final IFieldName responsibleCheckpointIdFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "responsibleCheckpointIdFieldName", "var_name": "responsibleCheckpointIdFieldName"}, {"original_string": "private final IFieldName checkpointEntryIdFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "checkpointEntryIdFieldName", "var_name": "checkpointEntryIdFieldName"}, {"original_string": "private final IFieldName prevCheckpointEntryIdFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "prevCheckpointEntryIdFieldName", "var_name": "prevCheckpointEntryIdFieldName"}, {"original_string": "private final IFieldName entryIdFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "entryIdFieldName", "var_name": "entryIdFieldName"}, {"original_string": "private final IFieldName prevCheckpointIdFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "prevCheckpointIdFieldName", "var_name": "prevCheckpointIdFieldName"}, {"original_string": "private final IFieldName checkpointStatusFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "checkpointStatusFieldName", "var_name": "checkpointStatusFieldName"}], "methods": [{"identifier": "ReSendRestoringSequenceRecoverStrategy", "parameters": "()", "modifiers": "public", "return": "", "signature": " ReSendRestoringSequenceRecoverStrategy()", "full_signature": "public  ReSendRestoringSequenceRecoverStrategy()", "class_method_signature": "ReSendRestoringSequenceRecoverStrategy.ReSendRestoringSequenceRecoverStrategy()", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "(final IObject state, final IObject args, final IMessageProcessor processor)", "modifiers": "@Override public", "return": "void", "signature": "void init(final IObject state, final IObject args, final IMessageProcessor processor)", "full_signature": "@Override public void init(final IObject state, final IObject args, final IMessageProcessor processor)", "class_method_signature": "ReSendRestoringSequenceRecoverStrategy.init(final IObject state, final IObject args, final IMessageProcessor processor)", "testcase": false, "constructor": false}, {"identifier": "reSend", "parameters": "(final IObject state)", "modifiers": "@Override public", "return": "void", "signature": "void reSend(final IObject state)", "full_signature": "@Override public void reSend(final IObject state)", "class_method_signature": "ReSendRestoringSequenceRecoverStrategy.reSend(final IObject state)", "testcase": false, "constructor": false}], "file": "CoreFeatures/Checkpoint/CheckpointRecoverStrategies/src/main/java/info/smart_tools/smartactors/checkpoint/recover_strategies/ReSendRestoringSequenceRecoverStrategy.java"}, "focal_method": {"identifier": "init", "parameters": "(final IObject state, final IObject args, final IMessageProcessor processor)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void init(final IObject state, final IObject args, final IMessageProcessor processor)\n            throws RecoverStrategyInitializationException {\n        try {\n            IObject sequenceDump = IOC.resolve(Keys.getOrAdd(\"make dump\"), processor.getSequence(), args);\n\n            state.setValue(sequenceDumpFieldName, sequenceDump);\n        } catch (ResolutionException | ChangeValueException | InvalidArgumentException e) {\n            throw new RecoverStrategyInitializationException(\"Error occurred preparing dump of message processing sequence.\", e);\n        }\n    }", "signature": "void init(final IObject state, final IObject args, final IMessageProcessor processor)", "full_signature": "@Override public void init(final IObject state, final IObject args, final IMessageProcessor processor)", "class_method_signature": "ReSendRestoringSequenceRecoverStrategy.init(final IObject state, final IObject args, final IMessageProcessor processor)", "testcase": false, "constructor": false, "invocations": ["resolve", "getOrAdd", "getSequence", "setValue"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}