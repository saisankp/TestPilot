{"test_class": {"identifier": "MapToBeanConvertorTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/modules/spring/src/test/java/org/onetwo/common/spring/utils/MapToBeanConvertorTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test() {\n\t\tDate birthDay = DateUtils.parse(\"2019-04-25\");\n\t\tMap<String, ?> map = CUtils.asMap(\"id\", 123, \n\t\t\t\t\t\t\t\t\t\t\"user_name\", \"testUserName\", \n\t\t\t\t\t\t\t\t\t\t\"birthDay\", birthDay,\n\t\t\t\t\t\t\t\t\t\t\"roles[0].id\", 222,\n\t\t\t\t\t\t\t\t\t\t\"roles[0].name\", \"testRoleName\"\n\t\t\t\t\t\t\t\t\t\t);\n\t\tMapToBeanConvertor map2Bean = MapToBeanConvertor.builder().build();\n\t\tUserEntity user = map2Bean.toBean(map, UserEntity.class);\n\t\t\n\t\tassertThat(user).isNotNull();\n\t\tassertThat(user.getId()).isEqualTo(123);\n\t\tassertThat(user.getUserName()).isNull();\n\t\tassertThat(user.getBirthDay()).isEqualTo(birthDay);\n\t\tassertThat(user.getRoles()).isNull();\n\t\t\n\t\t/*RoleEntity role = user.getRoles().get(0);\n\t\tassertThat(role.getId()).isEqualTo(222);\n\t\tassertThat(role.getName()).isEqualTo(\"testRoleName\");*/\n\t}", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "MapToBeanConvertorTest.test()", "testcase": true, "constructor": false, "invocations": ["parse", "asMap", "build", "builder", "toBean", "isNotNull", "assertThat", "isEqualTo", "assertThat", "getId", "isNull", "assertThat", "getUserName", "isEqualTo", "assertThat", "getBirthDay", "isNull", "assertThat", "getRoles"]}, "focal_class": {"identifier": "MapToBeanConvertor", "superclass": "", "interfaces": "", "fields": [{"original_string": "final private static Logger logger = JFishLoggerFactory.getLogger(MapToBeanConvertor.class);", "modifier": "final private static", "type": "Logger", "declarator": "logger = JFishLoggerFactory.getLogger(MapToBeanConvertor.class)", "var_name": "logger"}, {"original_string": "final private static MapToBeanConvertor INST = MapToBeanConvertor.builder().build();", "modifier": "final private static", "type": "MapToBeanConvertor", "declarator": "INST = MapToBeanConvertor.builder().build()", "var_name": "INST"}, {"original_string": "final protected static Cache<PropertyContext, String> PROPERTIES_CACHES = CacheBuilder.newBuilder()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.weakKeys()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.expireAfterAccess(30, TimeUnit.MINUTES)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.maximumSize(3000)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.build();", "modifier": "final protected static", "type": "Cache<PropertyContext, String>", "declarator": "PROPERTIES_CACHES = CacheBuilder.newBuilder()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.weakKeys()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.expireAfterAccess(30, TimeUnit.MINUTES)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.maximumSize(3000)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.build()", "var_name": "PROPERTIES_CACHES"}, {"original_string": "final protected Cache<PropertyContext, String> propertyCaches = PROPERTIES_CACHES;", "modifier": "final protected", "type": "Cache<PropertyContext, String>", "declarator": "propertyCaches = PROPERTIES_CACHES", "var_name": "propertyCaches"}, {"original_string": "private Function<PropertyContext, String> keyConvertor;", "modifier": "private", "type": "Function<PropertyContext, String>", "declarator": "keyConvertor", "var_name": "keyConvertor"}], "methods": [{"identifier": "inst", "parameters": "()", "modifiers": "final public static", "return": "MapToBeanConvertor", "signature": "MapToBeanConvertor inst()", "full_signature": "final public static MapToBeanConvertor inst()", "class_method_signature": "MapToBeanConvertor.inst()", "testcase": false, "constructor": false}, {"identifier": "toBean", "parameters": "(Map<String, ?> propValues, Class<T> beanClass)", "modifiers": "public", "return": "T", "signature": "T toBean(Map<String, ?> propValues, Class<T> beanClass)", "full_signature": "public T toBean(Map<String, ?> propValues, Class<T> beanClass)", "class_method_signature": "MapToBeanConvertor.toBean(Map<String, ?> propValues, Class<T> beanClass)", "testcase": false, "constructor": false}, {"identifier": "injectBeanProperties", "parameters": "(Map<String, ?> propValues, T bean)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "T", "signature": "T injectBeanProperties(Map<String, ?> propValues, T bean)", "full_signature": "@SuppressWarnings(\"unchecked\") public T injectBeanProperties(Map<String, ?> propValues, T bean)", "class_method_signature": "MapToBeanConvertor.injectBeanProperties(Map<String, ?> propValues, T bean)", "testcase": false, "constructor": false}, {"identifier": "setKeyConvertor", "parameters": "(Function<PropertyContext, String> keyConvertor)", "modifiers": "public", "return": "void", "signature": "void setKeyConvertor(Function<PropertyContext, String> keyConvertor)", "full_signature": "public void setKeyConvertor(Function<PropertyContext, String> keyConvertor)", "class_method_signature": "MapToBeanConvertor.setKeyConvertor(Function<PropertyContext, String> keyConvertor)", "testcase": false, "constructor": false}, {"identifier": "getMapKey", "parameters": "(PropertyContext pc)", "modifiers": "protected", "return": "String", "signature": "String getMapKey(PropertyContext pc)", "full_signature": "protected String getMapKey(PropertyContext pc)", "class_method_signature": "MapToBeanConvertor.getMapKey(PropertyContext pc)", "testcase": false, "constructor": false}], "file": "core/modules/spring/src/main/java/org/onetwo/common/spring/utils/MapToBeanConvertor.java"}, "focal_method": {"identifier": "toBean", "parameters": "(Map<String, ?> propValues, Class<T> beanClass)", "modifiers": "public", "return": "T", "body": "public <T> T toBean(Map<String, ?> propValues, Class<T> beanClass){\n\t\tAssert.notNull(beanClass);\n\t\tAssert.notNull(propValues);\n\t\tT bean = ReflectUtils.newInstance(beanClass);\n\t\treturn injectBeanProperties(propValues, bean);\n\t}", "signature": "T toBean(Map<String, ?> propValues, Class<T> beanClass)", "full_signature": "public T toBean(Map<String, ?> propValues, Class<T> beanClass)", "class_method_signature": "MapToBeanConvertor.toBean(Map<String, ?> propValues, Class<T> beanClass)", "testcase": false, "constructor": false, "invocations": ["notNull", "notNull", "newInstance", "injectBeanProperties"]}, "repository": {"repo_id": 47802308, "url": "https://github.com/wayshall/onetwo", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 16, "size": 57582, "license": "licensed"}}