{"test_class": {"identifier": "WeatherWebApiTest", "superclass": "", "interfaces": "", "fields": [], "file": "aula15-compose-and-default-methods/src/test/java/org/isel/mpd/weather/WeatherWebApiTest.java"}, "test_case": {"identifier": "pastWeather", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void pastWeather() {\n        Iterable<WeatherInfo> infos = new WeatherWebApi(new MockRequest())\n                .pastWeather(37.017,-7.933, parse(\"2019-02-01\"), parse(\"2019-02-28\"));\n        Iterator<WeatherInfo> iter = infos.iterator();\n        assertNotNull(infos);\n        assertTrue(iter.hasNext());\n        WeatherInfo wi = iter.next();\n        assertEquals(parse(\"2019-02-01\"), wi.getDate());\n        assertEquals(14, wi.getTempC());\n        assertEquals(13.8, wi.getPrecipMM());\n        assertEquals(\"Patchy rain possible\", wi.getDesc());\n    }", "signature": "void pastWeather()", "full_signature": "@Test public void pastWeather()", "class_method_signature": "WeatherWebApiTest.pastWeather()", "testcase": true, "constructor": false, "invocations": ["pastWeather", "parse", "parse", "iterator", "assertNotNull", "assertTrue", "hasNext", "next", "assertEquals", "parse", "getDate", "assertEquals", "getTempC", "assertEquals", "getPrecipMM", "assertEquals", "getDesc"]}, "focal_class": {"identifier": "WeatherWebApi", "superclass": "", "interfaces": "implements WeatherApi", "fields": [{"original_string": "final String HOST = \"http://api.worldweatheronline.com/premium/v1/\";", "modifier": "final", "type": "String", "declarator": "HOST = \"http://api.worldweatheronline.com/premium/v1/\"", "var_name": "HOST"}, {"original_string": "final String PATH_PAST_WEATHER = \"past-weather.ashx?q=%s,%s&date=%s&enddate=%s&tp=24&format=csv&key=%s\";", "modifier": "final", "type": "String", "declarator": "PATH_PAST_WEATHER = \"past-weather.ashx?q=%s,%s&date=%s&enddate=%s&tp=24&format=csv&key=%s\"", "var_name": "PATH_PAST_WEATHER"}, {"original_string": "final String PATH_SEARCH = \"search.ashx?query=%s&format=tab&key=%s\";", "modifier": "final", "type": "String", "declarator": "PATH_SEARCH = \"search.ashx?query=%s&format=tab&key=%s\"", "var_name": "PATH_SEARCH"}, {"original_string": "final String WEATHER_KEY = \"10a7e54b547c4c7c870162131192102\";", "modifier": "final", "type": "String", "declarator": "WEATHER_KEY = \"10a7e54b547c4c7c870162131192102\"", "var_name": "WEATHER_KEY"}, {"original_string": "private final Request request;", "modifier": "private final", "type": "Request", "declarator": "request", "var_name": "request"}], "methods": [{"identifier": "WeatherWebApi", "parameters": "(Request request)", "modifiers": "public", "return": "", "signature": " WeatherWebApi(Request request)", "full_signature": "public  WeatherWebApi(Request request)", "class_method_signature": "WeatherWebApi.WeatherWebApi(Request request)", "testcase": false, "constructor": true}, {"identifier": "pastWeather", "parameters": "(double lat, double log, LocalDate from, LocalDate to)", "modifiers": "public", "return": "Iterable<WeatherInfo>", "signature": "Iterable<WeatherInfo> pastWeather(double lat, double log, LocalDate from, LocalDate to)", "full_signature": "public Iterable<WeatherInfo> pastWeather(double lat, double log, LocalDate from, LocalDate to)", "class_method_signature": "WeatherWebApi.pastWeather(double lat, double log, LocalDate from, LocalDate to)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String query)", "modifiers": "public", "return": "Iterable<LocationInfo>", "signature": "Iterable<LocationInfo> search(String query)", "full_signature": "public Iterable<LocationInfo> search(String query)", "class_method_signature": "WeatherWebApi.search(String query)", "testcase": false, "constructor": false}], "file": "aula15-compose-and-default-methods/src/main/java/org/isel/mpd/weather/WeatherWebApi.java"}, "focal_method": {"identifier": "pastWeather", "parameters": "(double lat, double log, LocalDate from, LocalDate to)", "modifiers": "public", "return": "Iterable<WeatherInfo>", "body": "public Iterable<WeatherInfo> pastWeather(double lat, double log, LocalDate from, LocalDate to) {\n        String path = HOST + String.format(PATH_PAST_WEATHER, lat, log, from, to, WEATHER_KEY);\n        Iterable<String> src = request.getLines(path);\n        boolean[] isOdd = {true};\n        src = filter(src, line -> !line.startsWith(\"#\")); // Filter no comments\n        src = skip(src, 1);  // Skip Not Available\n        src = filter(src, __-> {isOdd[0] = !isOdd[0]; return isOdd[0];}); // Skip daily information\n        return map(src, line -> WeatherInfo.valueOf(line));\n    }", "signature": "Iterable<WeatherInfo> pastWeather(double lat, double log, LocalDate from, LocalDate to)", "full_signature": "public Iterable<WeatherInfo> pastWeather(double lat, double log, LocalDate from, LocalDate to)", "class_method_signature": "WeatherWebApi.pastWeather(double lat, double log, LocalDate from, LocalDate to)", "testcase": false, "constructor": false, "invocations": ["format", "getLines", "filter", "startsWith", "skip", "filter", "map", "valueOf"]}, "repository": {"repo_id": 171326919, "url": "https://github.com/isel-leic-mpd/mpd-2019-i41n", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 13, "size": 404, "license": "licensed"}}