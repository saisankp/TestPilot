{"test_class": {"identifier": "DataSetDefWizardScreenTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock EventSourceMock<NotificationEvent> notification;", "modifier": "@Mock", "type": "EventSourceMock<NotificationEvent>", "declarator": "notification", "var_name": "notification"}, {"original_string": "@Mock PlaceManager placeManager;", "modifier": "@Mock", "type": "PlaceManager", "declarator": "placeManager", "var_name": "placeManager"}, {"original_string": "@Mock SyncBeanManager beanManager;", "modifier": "@Mock", "type": "SyncBeanManager", "declarator": "beanManager", "var_name": "beanManager"}, {"original_string": "@Mock DataSetEditorWorkflowFactory workflowFactory;", "modifier": "@Mock", "type": "DataSetEditorWorkflowFactory", "declarator": "workflowFactory", "var_name": "workflowFactory"}, {"original_string": "@Mock DataSetClientServices clientServices;", "modifier": "@Mock", "type": "DataSetClientServices", "declarator": "clientServices", "var_name": "clientServices"}, {"original_string": "@Mock ErrorPopupPresenter errorPopupPresenter;", "modifier": "@Mock", "type": "ErrorPopupPresenter", "declarator": "errorPopupPresenter", "var_name": "errorPopupPresenter"}, {"original_string": "@Mock DataSetDefScreenView view;", "modifier": "@Mock", "type": "DataSetDefScreenView", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock DataSetProviderTypeWorkflow dataSetProviderTypeWorkflow;", "modifier": "@Mock", "type": "DataSetProviderTypeWorkflow", "declarator": "dataSetProviderTypeWorkflow", "var_name": "dataSetProviderTypeWorkflow"}, {"original_string": "@Mock SQLDataSetDef dataSetDef;", "modifier": "@Mock", "type": "SQLDataSetDef", "declarator": "dataSetDef", "var_name": "dataSetDef"}, {"original_string": "@Mock SQLDataSetDefEditor dataSetDefEditor;", "modifier": "@Mock", "type": "SQLDataSetDefEditor", "declarator": "dataSetDefEditor", "var_name": "dataSetDefEditor"}, {"original_string": "@Mock DataSetBasicAttributesWorkflow dataSetBasicAttributesWorkflow;", "modifier": "@Mock", "type": "DataSetBasicAttributesWorkflow", "declarator": "dataSetBasicAttributesWorkflow", "var_name": "dataSetBasicAttributesWorkflow"}, {"original_string": "@Mock SQLDataSetEditWorkflow editWorkflow;", "modifier": "@Mock", "type": "SQLDataSetEditWorkflow", "declarator": "editWorkflow", "var_name": "editWorkflow"}, {"original_string": "@Mock DataSetDefVfsServices dataSetDefVfsServices;", "modifier": "@Mock", "type": "DataSetDefVfsServices", "declarator": "dataSetDefVfsServices", "var_name": "dataSetDefVfsServices"}, {"original_string": "@Mock SavePopUpPresenter savePopUpPresenter;", "modifier": "@Mock", "type": "SavePopUpPresenter", "declarator": "savePopUpPresenter", "var_name": "savePopUpPresenter"}, {"original_string": "Caller<DataSetDefVfsServices> services;", "modifier": "", "type": "Caller<DataSetDefVfsServices>", "declarator": "services", "var_name": "services"}, {"original_string": "private DataSetDefWizardScreen presenter;", "modifier": "private", "type": "DataSetDefWizardScreen", "declarator": "presenter", "var_name": "presenter"}], "file": "dashbuilder-client/dashbuilder-dataset-editor/src/test/java/org/dashbuilder/dataset/editor/client/screens/DataSetDefWizardScreenTest.java"}, "test_case": {"identifier": "testOnTabChangedEvent_PreviewTab", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnTabChangedEvent_PreviewTab() {\n        when(editWorkflow.getEditor()).thenReturn(dataSetDefEditor);\n        TabChangedEvent event = mock(TabChangedEvent.class);\n        when(event.getContext()).thenReturn(dataSetDefEditor);\n        when(event.getTabId()).thenReturn(DataSetEditor.TAB_PREVIEW);\n        presenter.currentWorkflow = editWorkflow;\n        presenter.onTabChangedEvent(event);\n        verify(editWorkflow, times(1)).clearButtons();\n        verify(editWorkflow, times(1)).showNextButton();\n        verify(editWorkflow, times(1)).showBackButton();\n        verify(editWorkflow, times(0)).showTestButton();\n        verify(editWorkflow, times(0)).edit(any(SQLDataSetDef.class), any(List.class));\n        verify(errorPopupPresenter, times(0)).showMessage(anyString());\n        verify(view, times(0)).setWidget(any(IsWidget.class));\n    }", "signature": "void testOnTabChangedEvent_PreviewTab()", "full_signature": "@Test public void testOnTabChangedEvent_PreviewTab()", "class_method_signature": "DataSetDefWizardScreenTest.testOnTabChangedEvent_PreviewTab()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getEditor", "mock", "thenReturn", "when", "getContext", "thenReturn", "when", "getTabId", "onTabChangedEvent", "clearButtons", "verify", "times", "showNextButton", "verify", "times", "showBackButton", "verify", "times", "showTestButton", "verify", "times", "edit", "verify", "times", "any", "any", "showMessage", "verify", "times", "anyString", "setWidget", "verify", "times", "any"]}, "focal_class": {"identifier": "DataSetDefWizardScreen", "superclass": "", "interfaces": "", "fields": [{"original_string": "SyncBeanManager beanManager;", "modifier": "", "type": "SyncBeanManager", "declarator": "beanManager", "var_name": "beanManager"}, {"original_string": "DataSetEditorWorkflowFactory workflowFactory;", "modifier": "", "type": "DataSetEditorWorkflowFactory", "declarator": "workflowFactory", "var_name": "workflowFactory"}, {"original_string": "Caller<DataSetDefVfsServices> services;", "modifier": "", "type": "Caller<DataSetDefVfsServices>", "declarator": "services", "var_name": "services"}, {"original_string": "DataSetClientServices clientServices;", "modifier": "", "type": "DataSetClientServices", "declarator": "clientServices", "var_name": "clientServices"}, {"original_string": "Event<NotificationEvent> notification;", "modifier": "", "type": "Event<NotificationEvent>", "declarator": "notification", "var_name": "notification"}, {"original_string": "PlaceManager placeManager;", "modifier": "", "type": "PlaceManager", "declarator": "placeManager", "var_name": "placeManager"}, {"original_string": "ErrorPopupPresenter errorPopupPresenter;", "modifier": "", "type": "ErrorPopupPresenter", "declarator": "errorPopupPresenter", "var_name": "errorPopupPresenter"}, {"original_string": "public DataSetDefScreenView view;", "modifier": "public", "type": "DataSetDefScreenView", "declarator": "view", "var_name": "view"}, {"original_string": "PlaceRequest placeRequest;", "modifier": "", "type": "PlaceRequest", "declarator": "placeRequest", "var_name": "placeRequest"}, {"original_string": "Command nextCommand;", "modifier": "", "type": "Command", "declarator": "nextCommand", "var_name": "nextCommand"}, {"original_string": "DataSetEditorWorkflow currentWorkflow;", "modifier": "", "type": "DataSetEditorWorkflow", "declarator": "currentWorkflow", "var_name": "currentWorkflow"}, {"original_string": "SavePopUpPresenter savePopUpPresenter;", "modifier": "", "type": "SavePopUpPresenter", "declarator": "savePopUpPresenter", "var_name": "savePopUpPresenter"}, {"original_string": "RemoteCallback<Path> saveSuccessCallback = new RemoteCallback<Path>() {\n        @Override\n        public void callback(Path path) {\n            currentWorkflow.clear();\n            BusyPopup.close();\n            notification.fire(new NotificationEvent(DataSetAuthoringConstants.INSTANCE.savedOk()));\n            placeManager.closePlace(placeRequest);\n        }\n    };", "modifier": "", "type": "RemoteCallback<Path>", "declarator": "saveSuccessCallback = new RemoteCallback<Path>() {\n        @Override\n        public void callback(Path path) {\n            currentWorkflow.clear();\n            BusyPopup.close();\n            notification.fire(new NotificationEvent(DataSetAuthoringConstants.INSTANCE.savedOk()));\n            placeManager.closePlace(placeRequest);\n        }\n    }", "var_name": "saveSuccessCallback"}, {"original_string": "ErrorCallback<Message> errorCallback = (message, throwable) -> {\n        BusyPopup.close();\n        showError(new ClientRuntimeError(throwable));\n        return false;\n    };", "modifier": "", "type": "ErrorCallback<Message>", "declarator": "errorCallback = (message, throwable) -> {\n        BusyPopup.close();\n        showError(new ClientRuntimeError(throwable));\n        return false;\n    }", "var_name": "errorCallback"}], "methods": [{"identifier": "DataSetDefWizardScreen", "parameters": "(final SyncBeanManager beanManager,\n                                  final DataSetEditorWorkflowFactory workflowFactory,\n                                  final Caller<DataSetDefVfsServices> services,\n                                  final DataSetClientServices clientServices,\n                                  final Event<NotificationEvent> notification,\n                                  final PlaceManager placeManager,\n                                  final ErrorPopupPresenter errorPopupPresenter,\n                                  final SavePopUpPresenter savePopUpPresenter,\n                                  final DataSetDefScreenView view)", "modifiers": "@Inject public", "return": "", "signature": " DataSetDefWizardScreen(final SyncBeanManager beanManager,\n                                  final DataSetEditorWorkflowFactory workflowFactory,\n                                  final Caller<DataSetDefVfsServices> services,\n                                  final DataSetClientServices clientServices,\n                                  final Event<NotificationEvent> notification,\n                                  final PlaceManager placeManager,\n                                  final ErrorPopupPresenter errorPopupPresenter,\n                                  final SavePopUpPresenter savePopUpPresenter,\n                                  final DataSetDefScreenView view)", "full_signature": "@Inject public  DataSetDefWizardScreen(final SyncBeanManager beanManager,\n                                  final DataSetEditorWorkflowFactory workflowFactory,\n                                  final Caller<DataSetDefVfsServices> services,\n                                  final DataSetClientServices clientServices,\n                                  final Event<NotificationEvent> notification,\n                                  final PlaceManager placeManager,\n                                  final ErrorPopupPresenter errorPopupPresenter,\n                                  final SavePopUpPresenter savePopUpPresenter,\n                                  final DataSetDefScreenView view)", "class_method_signature": "DataSetDefWizardScreen.DataSetDefWizardScreen(final SyncBeanManager beanManager,\n                                  final DataSetEditorWorkflowFactory workflowFactory,\n                                  final Caller<DataSetDefVfsServices> services,\n                                  final DataSetClientServices clientServices,\n                                  final Event<NotificationEvent> notification,\n                                  final PlaceManager placeManager,\n                                  final ErrorPopupPresenter errorPopupPresenter,\n                                  final SavePopUpPresenter savePopUpPresenter,\n                                  final DataSetDefScreenView view)", "testcase": false, "constructor": true}, {"identifier": "getTitle", "parameters": "()", "modifiers": "@WorkbenchPartTitle public", "return": "String", "signature": "String getTitle()", "full_signature": "@WorkbenchPartTitle public String getTitle()", "class_method_signature": "DataSetDefWizardScreen.getTitle()", "testcase": false, "constructor": false}, {"identifier": "getView", "parameters": "()", "modifiers": "@WorkbenchPartView public", "return": "IsWidget", "signature": "IsWidget getView()", "full_signature": "@WorkbenchPartView public IsWidget getView()", "class_method_signature": "DataSetDefWizardScreen.getView()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(PlaceRequest placeRequest)", "modifiers": "@OnStartup public", "return": "void", "signature": "void init(PlaceRequest placeRequest)", "full_signature": "@OnStartup public void init(PlaceRequest placeRequest)", "class_method_signature": "DataSetDefWizardScreen.init(PlaceRequest placeRequest)", "testcase": false, "constructor": false}, {"identifier": "onClose", "parameters": "()", "modifiers": "@OnClose public", "return": "void", "signature": "void onClose()", "full_signature": "@OnClose public void onClose()", "class_method_signature": "DataSetDefWizardScreen.onClose()", "testcase": false, "constructor": false}, {"identifier": "providerTypeEdition", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void providerTypeEdition()", "full_signature": "private void providerTypeEdition()", "class_method_signature": "DataSetDefWizardScreen.providerTypeEdition()", "testcase": false, "constructor": false}, {"identifier": "onProviderTypeSelected", "parameters": "(final DataSetProviderTypeWorkflow providerTypeWorkflow)", "modifiers": "", "return": "void", "signature": "void onProviderTypeSelected(final DataSetProviderTypeWorkflow providerTypeWorkflow)", "full_signature": " void onProviderTypeSelected(final DataSetProviderTypeWorkflow providerTypeWorkflow)", "class_method_signature": "DataSetDefWizardScreen.onProviderTypeSelected(final DataSetProviderTypeWorkflow providerTypeWorkflow)", "testcase": false, "constructor": false}, {"identifier": "setCurrentWorkflow", "parameters": "(final DataSetEditorWorkflow w)", "modifiers": "private", "return": "void", "signature": "void setCurrentWorkflow(final DataSetEditorWorkflow w)", "full_signature": "private void setCurrentWorkflow(final DataSetEditorWorkflow w)", "class_method_signature": "DataSetDefWizardScreen.setCurrentWorkflow(final DataSetEditorWorkflow w)", "testcase": false, "constructor": false}, {"identifier": "disposeCurrentWorkflow", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void disposeCurrentWorkflow()", "full_signature": "private void disposeCurrentWorkflow()", "class_method_signature": "DataSetDefWizardScreen.disposeCurrentWorkflow()", "testcase": false, "constructor": false}, {"identifier": "basicAttributesEdition", "parameters": "(final DataSetDef typedDataSetDef)", "modifiers": "private", "return": "void", "signature": "void basicAttributesEdition(final DataSetDef typedDataSetDef)", "full_signature": "private void basicAttributesEdition(final DataSetDef typedDataSetDef)", "class_method_signature": "DataSetDefWizardScreen.basicAttributesEdition(final DataSetDef typedDataSetDef)", "testcase": false, "constructor": false}, {"identifier": "testDataSet", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void testDataSet()", "full_signature": "private void testDataSet()", "class_method_signature": "DataSetDefWizardScreen.testDataSet()", "testcase": false, "constructor": false}, {"identifier": "completeEdition", "parameters": "(final DataSetDef dataSetDef,\n                                final DataSet dataset)", "modifiers": "public", "return": "void", "signature": "void completeEdition(final DataSetDef dataSetDef,\n                                final DataSet dataset)", "full_signature": "public void completeEdition(final DataSetDef dataSetDef,\n                                final DataSet dataset)", "class_method_signature": "DataSetDefWizardScreen.completeEdition(final DataSetDef dataSetDef,\n                                final DataSet dataset)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void save()", "full_signature": "protected void save()", "class_method_signature": "DataSetDefWizardScreen.save()", "testcase": false, "constructor": false}, {"identifier": "onSave", "parameters": "(final DataSetDef dataSetDef,\n                final String message)", "modifiers": "", "return": "void", "signature": "void onSave(final DataSetDef dataSetDef,\n                final String message)", "full_signature": " void onSave(final DataSetDef dataSetDef,\n                final String message)", "class_method_signature": "DataSetDefWizardScreen.onSave(final DataSetDef dataSetDef,\n                final String message)", "testcase": false, "constructor": false}, {"identifier": "showError", "parameters": "(final ClientRuntimeError error)", "modifiers": "", "return": "void", "signature": "void showError(final ClientRuntimeError error)", "full_signature": " void showError(final ClientRuntimeError error)", "class_method_signature": "DataSetDefWizardScreen.showError(final ClientRuntimeError error)", "testcase": false, "constructor": false}, {"identifier": "showError", "parameters": "(final String message)", "modifiers": "", "return": "void", "signature": "void showError(final String message)", "full_signature": " void showError(final String message)", "class_method_signature": "DataSetDefWizardScreen.showError(final String message)", "testcase": false, "constructor": false}, {"identifier": "onTestEvent", "parameters": "(@Observes TestDataSetRequestEvent testDataSetRequestEvent)", "modifiers": "", "return": "void", "signature": "void onTestEvent(@Observes TestDataSetRequestEvent testDataSetRequestEvent)", "full_signature": " void onTestEvent(@Observes TestDataSetRequestEvent testDataSetRequestEvent)", "class_method_signature": "DataSetDefWizardScreen.onTestEvent(@Observes TestDataSetRequestEvent testDataSetRequestEvent)", "testcase": false, "constructor": false}, {"identifier": "onSaveEvent", "parameters": "(@Observes SaveRequestEvent saveEvent)", "modifiers": "", "return": "void", "signature": "void onSaveEvent(@Observes SaveRequestEvent saveEvent)", "full_signature": " void onSaveEvent(@Observes SaveRequestEvent saveEvent)", "class_method_signature": "DataSetDefWizardScreen.onSaveEvent(@Observes SaveRequestEvent saveEvent)", "testcase": false, "constructor": false}, {"identifier": "onCancelEvent", "parameters": "(@Observes CancelRequestEvent cancelEvent)", "modifiers": "", "return": "void", "signature": "void onCancelEvent(@Observes CancelRequestEvent cancelEvent)", "full_signature": " void onCancelEvent(@Observes CancelRequestEvent cancelEvent)", "class_method_signature": "DataSetDefWizardScreen.onCancelEvent(@Observes CancelRequestEvent cancelEvent)", "testcase": false, "constructor": false}, {"identifier": "onErrorEvent", "parameters": "(@Observes ErrorEvent errorEvent)", "modifiers": "", "return": "void", "signature": "void onErrorEvent(@Observes ErrorEvent errorEvent)", "full_signature": " void onErrorEvent(@Observes ErrorEvent errorEvent)", "class_method_signature": "DataSetDefWizardScreen.onErrorEvent(@Observes ErrorEvent errorEvent)", "testcase": false, "constructor": false}, {"identifier": "onTabChangedEvent", "parameters": "(@Observes TabChangedEvent tabChangedEvent)", "modifiers": "", "return": "void", "signature": "void onTabChangedEvent(@Observes TabChangedEvent tabChangedEvent)", "full_signature": " void onTabChangedEvent(@Observes TabChangedEvent tabChangedEvent)", "class_method_signature": "DataSetDefWizardScreen.onTabChangedEvent(@Observes TabChangedEvent tabChangedEvent)", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-dataset-editor/src/main/java/org/dashbuilder/dataset/editor/client/screens/DataSetDefWizardScreen.java"}, "focal_method": {"identifier": "onTabChangedEvent", "parameters": "(@Observes TabChangedEvent tabChangedEvent)", "modifiers": "", "return": "void", "body": "void onTabChangedEvent(@Observes TabChangedEvent tabChangedEvent) {\n        checkNotNull(\"tabChangedEvent\",\n                     tabChangedEvent);\n        try {\n            // This event should only be fired when worklow is an instance of the DataSetEditWorkflow, as it uses the main tabbed editor. \n            if (tabChangedEvent.getContext().equals(((DataSetEditWorkflow) currentWorkflow).getEditor())) {\n                currentWorkflow.clearButtons();\n                String tabId = tabChangedEvent.getTabId();\n                if (tabId != null && DataSetEditor.TAB_CONFIGURATION.equals(tabId)) {\n                    currentWorkflow.showTestButton();\n                } else {\n                    currentWorkflow.showBackButton().showNextButton();\n                }\n            }\n        } catch (final ClassCastException e) {\n            // Skip event.\n        }\n    }", "signature": "void onTabChangedEvent(@Observes TabChangedEvent tabChangedEvent)", "full_signature": " void onTabChangedEvent(@Observes TabChangedEvent tabChangedEvent)", "class_method_signature": "DataSetDefWizardScreen.onTabChangedEvent(@Observes TabChangedEvent tabChangedEvent)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "equals", "getContext", "getEditor", "clearButtons", "getTabId", "equals", "showTestButton", "showNextButton", "showBackButton"]}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}