{"test_class": {"identifier": "TestHelixUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HelixManager _helixZkManager;", "modifier": "private", "type": "HelixManager", "declarator": "_helixZkManager", "var_name": "_helixZkManager"}], "file": "uReplicator-Common/src/test/java/com/uber/stream/kafka/mirrormaker/common/utils/TestHelixUtils.java"}, "test_case": {"identifier": "testUpdateClusterConfig", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testUpdateClusterConfig() {\n    HelixUtils.updateClusterConfig(_helixZkManager, Constants.AUTO_BALANCING, Constants.DISABLE);\n    HelixConfigScope scope = HelixUtils.newClusterConfigScope(_helixZkManager);\n    Map<String, String> config = _helixZkManager.getClusterManagmentTool()\n        .getConfig(scope, Arrays.asList(Constants.AUTO_BALANCING));\n    Assert.assertTrue(config != null);\n    Assert.assertTrue(config.containsKey(Constants.AUTO_BALANCING));\n    Assert.assertTrue(config.get(Constants.AUTO_BALANCING).equalsIgnoreCase(Constants.DISABLE));\n  }", "signature": "void testUpdateClusterConfig()", "full_signature": "@Test public void testUpdateClusterConfig()", "class_method_signature": "TestHelixUtils.testUpdateClusterConfig()", "testcase": true, "constructor": false, "invocations": ["updateClusterConfig", "newClusterConfigScope", "getConfig", "getClusterManagmentTool", "asList", "assertTrue", "assertTrue", "containsKey", "assertTrue", "equalsIgnoreCase", "get"]}, "focal_class": {"identifier": "HelixUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String BLACKLIST_TAG = \"blacklisted\";", "modifier": "private static final", "type": "String", "declarator": "BLACKLIST_TAG = \"blacklisted\"", "var_name": "BLACKLIST_TAG"}], "methods": [{"identifier": "getAbsoluteZkPathForHelix", "parameters": "(String zkBaseUrl)", "modifiers": "public static", "return": "String", "signature": "String getAbsoluteZkPathForHelix(String zkBaseUrl)", "full_signature": "public static String getAbsoluteZkPathForHelix(String zkBaseUrl)", "class_method_signature": "HelixUtils.getAbsoluteZkPathForHelix(String zkBaseUrl)", "testcase": false, "constructor": false}, {"identifier": "getZkPropertyStore", "parameters": "(HelixManager helixManager,\n      String clusterName)", "modifiers": "public static", "return": "ZkHelixPropertyStore<ZNRecord>", "signature": "ZkHelixPropertyStore<ZNRecord> getZkPropertyStore(HelixManager helixManager,\n      String clusterName)", "full_signature": "public static ZkHelixPropertyStore<ZNRecord> getZkPropertyStore(HelixManager helixManager,\n      String clusterName)", "class_method_signature": "HelixUtils.getZkPropertyStore(HelixManager helixManager,\n      String clusterName)", "testcase": false, "constructor": false}, {"identifier": "getInstanceToHostnameMap", "parameters": "(HelixManager helixManager)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> getInstanceToHostnameMap(HelixManager helixManager)", "full_signature": "public static Map<String, String> getInstanceToHostnameMap(HelixManager helixManager)", "class_method_signature": "HelixUtils.getInstanceToHostnameMap(HelixManager helixManager)", "testcase": false, "constructor": false}, {"identifier": "getInstanceToHostInfoMap", "parameters": "(HelixManager helixManager)", "modifiers": "public static", "return": "Map<String, HostAndPort>", "signature": "Map<String, HostAndPort> getInstanceToHostInfoMap(HelixManager helixManager)", "full_signature": "public static Map<String, HostAndPort> getInstanceToHostInfoMap(HelixManager helixManager)", "class_method_signature": "HelixUtils.getInstanceToHostInfoMap(HelixManager helixManager)", "testcase": false, "constructor": false}, {"identifier": "liveInstances", "parameters": "(HelixManager helixManager)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> liveInstances(HelixManager helixManager)", "full_signature": "public static List<String> liveInstances(HelixManager helixManager)", "class_method_signature": "HelixUtils.liveInstances(HelixManager helixManager)", "testcase": false, "constructor": false}, {"identifier": "blacklistedInstances", "parameters": "(HelixManager helixManager)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> blacklistedInstances(HelixManager helixManager)", "full_signature": "public static List<String> blacklistedInstances(HelixManager helixManager)", "class_method_signature": "HelixUtils.blacklistedInstances(HelixManager helixManager)", "testcase": false, "constructor": false}, {"identifier": "getSrcFromRoute", "parameters": "(String route)", "modifiers": "private static", "return": "String", "signature": "String getSrcFromRoute(String route)", "full_signature": "private static String getSrcFromRoute(String route)", "class_method_signature": "HelixUtils.getSrcFromRoute(String route)", "testcase": false, "constructor": false}, {"identifier": "getPipelineFromRoute", "parameters": "(String route)", "modifiers": "private static", "return": "String", "signature": "String getPipelineFromRoute(String route)", "full_signature": "private static String getPipelineFromRoute(String route)", "class_method_signature": "HelixUtils.getPipelineFromRoute(String route)", "testcase": false, "constructor": false}, {"identifier": "getInstanceToTopicPartitionsMap", "parameters": "(\n      HelixManager helixManager)", "modifiers": "public static", "return": "Map<String, Set<TopicPartition>>", "signature": "Map<String, Set<TopicPartition>> getInstanceToTopicPartitionsMap(\n      HelixManager helixManager)", "full_signature": "public static Map<String, Set<TopicPartition>> getInstanceToTopicPartitionsMap(\n      HelixManager helixManager)", "class_method_signature": "HelixUtils.getInstanceToTopicPartitionsMap(\n      HelixManager helixManager)", "testcase": false, "constructor": false}, {"identifier": "getInstanceToTopicPartitionsMap", "parameters": "(\n      HelixManager helixManager,\n      Map<String, KafkaBrokerTopicObserver> clusterToObserverMap)", "modifiers": "public static", "return": "Map<String, Set<TopicPartition>>", "signature": "Map<String, Set<TopicPartition>> getInstanceToTopicPartitionsMap(\n      HelixManager helixManager,\n      Map<String, KafkaBrokerTopicObserver> clusterToObserverMap)", "full_signature": "public static Map<String, Set<TopicPartition>> getInstanceToTopicPartitionsMap(\n      HelixManager helixManager,\n      Map<String, KafkaBrokerTopicObserver> clusterToObserverMap)", "class_method_signature": "HelixUtils.getInstanceToTopicPartitionsMap(\n      HelixManager helixManager,\n      Map<String, KafkaBrokerTopicObserver> clusterToObserverMap)", "testcase": false, "constructor": false}, {"identifier": "buildCustomIdealStateFor", "parameters": "(String topicName,\n      int numTopicPartitions,\n      PriorityQueue<InstanceTopicPartitionHolder> instanceToNumServingTopicPartitionMap)", "modifiers": "public static", "return": "IdealState", "signature": "IdealState buildCustomIdealStateFor(String topicName,\n      int numTopicPartitions,\n      PriorityQueue<InstanceTopicPartitionHolder> instanceToNumServingTopicPartitionMap)", "full_signature": "public static IdealState buildCustomIdealStateFor(String topicName,\n      int numTopicPartitions,\n      PriorityQueue<InstanceTopicPartitionHolder> instanceToNumServingTopicPartitionMap)", "class_method_signature": "HelixUtils.buildCustomIdealStateFor(String topicName,\n      int numTopicPartitions,\n      PriorityQueue<InstanceTopicPartitionHolder> instanceToNumServingTopicPartitionMap)", "testcase": false, "constructor": false}, {"identifier": "getIdealStatesFromAssignment", "parameters": "(\n      Set<InstanceTopicPartitionHolder> newAssignment,\n      Set<TopicPartition> blacklistedTopicPartitions)", "modifiers": "public static", "return": "Map<String, IdealState>", "signature": "Map<String, IdealState> getIdealStatesFromAssignment(\n      Set<InstanceTopicPartitionHolder> newAssignment,\n      Set<TopicPartition> blacklistedTopicPartitions)", "full_signature": "public static Map<String, IdealState> getIdealStatesFromAssignment(\n      Set<InstanceTopicPartitionHolder> newAssignment,\n      Set<TopicPartition> blacklistedTopicPartitions)", "class_method_signature": "HelixUtils.getIdealStatesFromAssignment(\n      Set<InstanceTopicPartitionHolder> newAssignment,\n      Set<TopicPartition> blacklistedTopicPartitions)", "testcase": false, "constructor": false}, {"identifier": "getUnassignedPartitions", "parameters": "(HelixManager helixManager)", "modifiers": "public static", "return": "Set<TopicPartition>", "signature": "Set<TopicPartition> getUnassignedPartitions(HelixManager helixManager)", "full_signature": "public static Set<TopicPartition> getUnassignedPartitions(HelixManager helixManager)", "class_method_signature": "HelixUtils.getUnassignedPartitions(HelixManager helixManager)", "testcase": false, "constructor": false}, {"identifier": "updateClusterConfig", "parameters": "(HelixManager helixManager, String key, String value)", "modifiers": "public static", "return": "void", "signature": "void updateClusterConfig(HelixManager helixManager, String key, String value)", "full_signature": "public static void updateClusterConfig(HelixManager helixManager, String key, String value)", "class_method_signature": "HelixUtils.updateClusterConfig(HelixManager helixManager, String key, String value)", "testcase": false, "constructor": false}, {"identifier": "isClusterConfigEnabled", "parameters": "(HelixManager helixManager, String key)", "modifiers": "public static", "return": "boolean", "signature": "boolean isClusterConfigEnabled(HelixManager helixManager, String key)", "full_signature": "public static boolean isClusterConfigEnabled(HelixManager helixManager, String key)", "class_method_signature": "HelixUtils.isClusterConfigEnabled(HelixManager helixManager, String key)", "testcase": false, "constructor": false}, {"identifier": "isClusterConfigEnabled", "parameters": "(HelixManager helixManager, String key,\n      boolean defaultValue)", "modifiers": "public static", "return": "boolean", "signature": "boolean isClusterConfigEnabled(HelixManager helixManager, String key,\n      boolean defaultValue)", "full_signature": "public static boolean isClusterConfigEnabled(HelixManager helixManager, String key,\n      boolean defaultValue)", "class_method_signature": "HelixUtils.isClusterConfigEnabled(HelixManager helixManager, String key,\n      boolean defaultValue)", "testcase": false, "constructor": false}, {"identifier": "newClusterConfigScope", "parameters": "(HelixManager helixManager)", "modifiers": "public static", "return": "HelixConfigScope", "signature": "HelixConfigScope newClusterConfigScope(HelixManager helixManager)", "full_signature": "public static HelixConfigScope newClusterConfigScope(HelixManager helixManager)", "class_method_signature": "HelixUtils.newClusterConfigScope(HelixManager helixManager)", "testcase": false, "constructor": false}], "file": "uReplicator-Common/src/main/java/com/uber/stream/kafka/mirrormaker/common/utils/HelixUtils.java"}, "focal_method": {"identifier": "updateClusterConfig", "parameters": "(HelixManager helixManager, String key, String value)", "modifiers": "public static", "return": "void", "body": "public static void updateClusterConfig(HelixManager helixManager, String key, String value) {\n    HelixConfigScope scope = newClusterConfigScope(helixManager);\n    Map<String, String> properties = new HashMap<>();\n    properties.put(key, value);\n    helixManager.getClusterManagmentTool().setConfig(scope, properties);\n  }", "signature": "void updateClusterConfig(HelixManager helixManager, String key, String value)", "full_signature": "public static void updateClusterConfig(HelixManager helixManager, String key, String value)", "class_method_signature": "HelixUtils.updateClusterConfig(HelixManager helixManager, String key, String value)", "testcase": false, "constructor": false, "invocations": ["newClusterConfigScope", "put", "setConfig", "getClusterManagmentTool"]}, "repository": {"repo_id": 60201162, "url": "https://github.com/uber/uReplicator", "language": "Java", "is_fork": false, "fork_count": 148, "stargazer_count": 652, "size": 2223, "license": "licensed"}}