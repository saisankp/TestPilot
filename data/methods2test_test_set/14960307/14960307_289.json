{"test_class": {"identifier": "DateTimeHourTest", "superclass": "", "interfaces": "", "fields": [], "file": "ch-commons-util/src/test/java/com/cloudhopper/commons/util/time/DateTimeHourTest.java"}, "test_case": {"identifier": "getPrevious", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getPrevious() throws Exception {\n        DateTimePeriod period0 = DateTimePeriod.createHour(2009, 1, 1, 0, DateTimeZone.UTC);\n\n        DateTimePeriod period1 = period0.getPrevious();\n\n        DateTime correctStart = new DateTime(2008,12,31,23,0,0,0,DateTimeZone.UTC);\n        DateTime correctEnd = new DateTime(2009,1,1,0,0,0,0,DateTimeZone.UTC);\n        Assert.assertEquals(correctStart, period1.getStart());\n        Assert.assertEquals(correctEnd, period1.getEnd());\n    }", "signature": "void getPrevious()", "full_signature": "@Test public void getPrevious()", "class_method_signature": "DateTimeHourTest.getPrevious()", "testcase": true, "constructor": false, "invocations": ["createHour", "getPrevious", "assertEquals", "getStart", "assertEquals", "getEnd"]}, "focal_class": {"identifier": "DateTimeHour", "superclass": "extends DateTimePeriod", "interfaces": "", "fields": [], "methods": [{"identifier": "DateTimeHour", "parameters": "(DateTime start, DateTime end)", "modifiers": "protected", "return": "", "signature": " DateTimeHour(DateTime start, DateTime end)", "full_signature": "protected  DateTimeHour(DateTime start, DateTime end)", "class_method_signature": "DateTimeHour.DateTimeHour(DateTime start, DateTime end)", "testcase": false, "constructor": true}, {"identifier": "getNext", "parameters": "()", "modifiers": "@Override public", "return": "DateTimePeriod", "signature": "DateTimePeriod getNext()", "full_signature": "@Override public DateTimePeriod getNext()", "class_method_signature": "DateTimeHour.getNext()", "testcase": false, "constructor": false}, {"identifier": "getPrevious", "parameters": "()", "modifiers": "@Override public", "return": "DateTimePeriod", "signature": "DateTimePeriod getPrevious()", "full_signature": "@Override public DateTimePeriod getPrevious()", "class_method_signature": "DateTimeHour.getPrevious()", "testcase": false, "constructor": false}, {"identifier": "getDefaultSubDuration", "parameters": "()", "modifiers": "@Override public", "return": "DateTimeDuration", "signature": "DateTimeDuration getDefaultSubDuration()", "full_signature": "@Override public DateTimeDuration getDefaultSubDuration()", "class_method_signature": "DateTimeHour.getDefaultSubDuration()", "testcase": false, "constructor": false}], "file": "ch-commons-util/src/main/java/com/cloudhopper/commons/util/time/DateTimeHour.java"}, "focal_method": {"identifier": "getPrevious", "parameters": "()", "modifiers": "@Override public", "return": "DateTimePeriod", "body": "@Override\n    public DateTimePeriod getPrevious() {\n        DateTime previous = getStart().minusHours(1);\n        return DateTimePeriod.createHour(previous);\n    }", "signature": "DateTimePeriod getPrevious()", "full_signature": "@Override public DateTimePeriod getPrevious()", "class_method_signature": "DateTimeHour.getPrevious()", "testcase": false, "constructor": false, "invocations": ["minusHours", "getStart", "createHour"]}, "repository": {"repo_id": 14960307, "url": "https://github.com/twitter/cloudhopper-commons", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 36, "size": 6452, "license": "licensed"}}