{"test_class": {"identifier": "SynL1COlciSceneTransformProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SynL1COlciSceneTransformProvider provider;", "modifier": "private", "type": "SynL1COlciSceneTransformProvider", "declarator": "provider", "var_name": "provider"}], "file": "s3tbx-sentinel3-reader/src/test/java/org/esa/s3tbx/dataio/s3/synergy/SynL1COlciSceneTransformProviderTest.java"}, "test_case": {"identifier": "testGetForward", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetForward() throws Exception {\n        PixelPos resultPos = new PixelPos();\n        provider.getModelToSceneTransform().transform(new PixelPos(0, 0), resultPos);\n        assertEquals(1, (int)resultPos.getX());\n        assertEquals(1, (int)resultPos.getY());\n\n        provider.getModelToSceneTransform().transform(new PixelPos(2, 2), resultPos);\n        assertEquals(3, (int)resultPos.getX());\n        assertEquals(1, (int)resultPos.getY());\n\n        provider.getModelToSceneTransform().transform(new PixelPos(5, 7), resultPos);\n        assertEquals(7, (int)resultPos.getX());\n        assertEquals(5, (int)resultPos.getY());\n\n        provider.getModelToSceneTransform().transform(new PixelPos(13, 11), resultPos);\n        assertEquals(15, (int)resultPos.getX());\n        assertEquals(9, (int)resultPos.getY());\n\n        provider.getModelToSceneTransform().transform(new PixelPos(15, 15), resultPos);\n        assertEquals(17, (int)resultPos.getX());\n        assertEquals(13, (int)resultPos.getY());\n    }", "signature": "void testGetForward()", "full_signature": "@Test public void testGetForward()", "class_method_signature": "SynL1COlciSceneTransformProviderTest.testGetForward()", "testcase": true, "constructor": false, "invocations": ["transform", "getModelToSceneTransform", "assertEquals", "getX", "assertEquals", "getY", "transform", "getModelToSceneTransform", "assertEquals", "getX", "assertEquals", "getY", "transform", "getModelToSceneTransform", "assertEquals", "getX", "assertEquals", "getY", "transform", "getModelToSceneTransform", "assertEquals", "getX", "assertEquals", "getY", "transform", "getModelToSceneTransform", "assertEquals", "getX", "assertEquals", "getY"]}, "focal_class": {"identifier": "SynL1COlciSceneTransformProvider", "superclass": "", "interfaces": "implements SceneTransformProvider", "fields": [{"original_string": "private final SynL1COlciModelToSceneTransform modelToSceneTransform;", "modifier": "private final", "type": "SynL1COlciModelToSceneTransform", "declarator": "modelToSceneTransform", "var_name": "modelToSceneTransform"}, {"original_string": "private final SynL1COlciSceneToModelTransform sceneToModelTransform;", "modifier": "private final", "type": "SynL1COlciSceneToModelTransform", "declarator": "sceneToModelTransform", "var_name": "sceneToModelTransform"}], "methods": [{"identifier": "SynL1COlciSceneTransformProvider", "parameters": "(Band columnMisregistrationBand, Band rowMisregistrationBand)", "modifiers": "", "return": "", "signature": " SynL1COlciSceneTransformProvider(Band columnMisregistrationBand, Band rowMisregistrationBand)", "full_signature": "  SynL1COlciSceneTransformProvider(Band columnMisregistrationBand, Band rowMisregistrationBand)", "class_method_signature": "SynL1COlciSceneTransformProvider.SynL1COlciSceneTransformProvider(Band columnMisregistrationBand, Band rowMisregistrationBand)", "testcase": false, "constructor": true}, {"identifier": "getModelToSceneTransform", "parameters": "()", "modifiers": "@Override public", "return": "MathTransform2D", "signature": "MathTransform2D getModelToSceneTransform()", "full_signature": "@Override public MathTransform2D getModelToSceneTransform()", "class_method_signature": "SynL1COlciSceneTransformProvider.getModelToSceneTransform()", "testcase": false, "constructor": false}, {"identifier": "getSceneToModelTransform", "parameters": "()", "modifiers": "@Override public", "return": "MathTransform2D", "signature": "MathTransform2D getSceneToModelTransform()", "full_signature": "@Override public MathTransform2D getSceneToModelTransform()", "class_method_signature": "SynL1COlciSceneTransformProvider.getSceneToModelTransform()", "testcase": false, "constructor": false}], "file": "s3tbx-sentinel3-reader/src/main/java/org/esa/s3tbx/dataio/s3/synergy/SynL1COlciSceneTransformProvider.java"}, "focal_method": {"identifier": "getModelToSceneTransform", "parameters": "()", "modifiers": "@Override public", "return": "MathTransform2D", "body": "@Override\n    public MathTransform2D getModelToSceneTransform() {\n        return modelToSceneTransform;\n    }", "signature": "MathTransform2D getModelToSceneTransform()", "full_signature": "@Override public MathTransform2D getModelToSceneTransform()", "class_method_signature": "SynL1COlciSceneTransformProvider.getModelToSceneTransform()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}