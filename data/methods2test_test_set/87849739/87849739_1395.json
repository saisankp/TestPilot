{"test_class": {"identifier": "DittoHeaderInvalidExceptionTest", "superclass": "", "interfaces": "", "fields": [], "file": "model/base/src/test/java/org/eclipse/ditto/model/base/exceptions/DittoHeaderInvalidExceptionTest.java"}, "test_case": {"identifier": "buildFromCustomMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void buildFromCustomMessage() {\n        final String customMessage = \"theCustomMessage\";\n\n        final DittoHeaderInvalidException headerInvalidException =\n                DittoHeaderInvalidException.newCustomMessageBuilder(customMessage)\n                        .build();\n\n        assertThat(headerInvalidException.getMessage()).isEqualTo(customMessage);\n        assertThat(headerInvalidException.getDescription()).hasValue(\n                \"Verify that the header has the correct syntax and try again.\");\n    }", "signature": "void buildFromCustomMessage()", "full_signature": "@Test public void buildFromCustomMessage()", "class_method_signature": "DittoHeaderInvalidExceptionTest.buildFromCustomMessage()", "testcase": true, "constructor": false, "invocations": ["build", "newCustomMessageBuilder", "isEqualTo", "assertThat", "getMessage", "hasValue", "assertThat", "getDescription"]}, "focal_class": {"identifier": "DittoHeaderInvalidException", "superclass": "extends DittoRuntimeException", "interfaces": "", "fields": [{"original_string": "public static final String ERROR_CODE = \"header.invalid\";", "modifier": "public static final", "type": "String", "declarator": "ERROR_CODE = \"header.invalid\"", "var_name": "ERROR_CODE"}, {"original_string": "private static final String DEFAULT_MESSAGE = \"The value of a header is invalid.\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_MESSAGE = \"The value of a header is invalid.\"", "var_name": "DEFAULT_MESSAGE"}, {"original_string": "private static final String MESSAGE_TEMPLATE = \"The value ''{0}'' of the header ''{1}'' is not a valid {2}.\";", "modifier": "private static final", "type": "String", "declarator": "MESSAGE_TEMPLATE = \"The value ''{0}'' of the header ''{1}'' is not a valid {2}.\"", "var_name": "MESSAGE_TEMPLATE"}, {"original_string": "private static final String DEFAULT_DESCRIPTION = \"Verify that the header has the correct syntax and try again.\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_DESCRIPTION = \"Verify that the header has the correct syntax and try again.\"", "var_name": "DEFAULT_DESCRIPTION"}, {"original_string": "private static final String DESCRIPTION_TEMPLATE =\n            \"Verify that the value of the header ''{0}'' is a valid ''{1}'' and try again.\";", "modifier": "private static final", "type": "String", "declarator": "DESCRIPTION_TEMPLATE =\n            \"Verify that the value of the header ''{0}'' is a valid ''{1}'' and try again.\"", "var_name": "DESCRIPTION_TEMPLATE"}, {"original_string": "private static final long serialVersionUID = -2338222496153977081L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -2338222496153977081L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "DittoHeaderInvalidException", "parameters": "(final DittoHeaders dittoHeaders,\n            @Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "modifiers": "private", "return": "", "signature": " DittoHeaderInvalidException(final DittoHeaders dittoHeaders,\n            @Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "full_signature": "private  DittoHeaderInvalidException(final DittoHeaders dittoHeaders,\n            @Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "class_method_signature": "DittoHeaderInvalidException.DittoHeaderInvalidException(final DittoHeaders dittoHeaders,\n            @Nullable final String message,\n            @Nullable final String description,\n            @Nullable final Throwable cause,\n            @Nullable final URI href)", "testcase": false, "constructor": true}, {"identifier": "newInvalidTypeBuilder", "parameters": "(final String headerName,\n            @Nullable final CharSequence headerValue, final String headerType)", "modifiers": "public static", "return": "DittoHeaderInvalidException.Builder", "signature": "DittoHeaderInvalidException.Builder newInvalidTypeBuilder(final String headerName,\n            @Nullable final CharSequence headerValue, final String headerType)", "full_signature": "public static DittoHeaderInvalidException.Builder newInvalidTypeBuilder(final String headerName,\n            @Nullable final CharSequence headerValue, final String headerType)", "class_method_signature": "DittoHeaderInvalidException.newInvalidTypeBuilder(final String headerName,\n            @Nullable final CharSequence headerValue, final String headerType)", "testcase": false, "constructor": false}, {"identifier": "newInvalidTypeBuilder", "parameters": "(final HeaderDefinition headerDefinition,\n            @Nullable final CharSequence headerValue, final String headerType)", "modifiers": "public static", "return": "DittoHeaderInvalidException.Builder", "signature": "DittoHeaderInvalidException.Builder newInvalidTypeBuilder(final HeaderDefinition headerDefinition,\n            @Nullable final CharSequence headerValue, final String headerType)", "full_signature": "public static DittoHeaderInvalidException.Builder newInvalidTypeBuilder(final HeaderDefinition headerDefinition,\n            @Nullable final CharSequence headerValue, final String headerType)", "class_method_signature": "DittoHeaderInvalidException.newInvalidTypeBuilder(final HeaderDefinition headerDefinition,\n            @Nullable final CharSequence headerValue, final String headerType)", "testcase": false, "constructor": false}, {"identifier": "newCustomMessageBuilder", "parameters": "(final String customMessage)", "modifiers": "public static", "return": "DittoHeaderInvalidException.Builder", "signature": "DittoHeaderInvalidException.Builder newCustomMessageBuilder(final String customMessage)", "full_signature": "public static DittoHeaderInvalidException.Builder newCustomMessageBuilder(final String customMessage)", "class_method_signature": "DittoHeaderInvalidException.newCustomMessageBuilder(final String customMessage)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "DittoHeaderInvalidException", "signature": "DittoHeaderInvalidException fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "full_signature": "public static DittoHeaderInvalidException fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "class_method_signature": "DittoHeaderInvalidException.fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}], "file": "model/base/src/main/java/org/eclipse/ditto/model/base/exceptions/DittoHeaderInvalidException.java"}, "focal_method": {"identifier": "newCustomMessageBuilder", "parameters": "(final String customMessage)", "modifiers": "public static", "return": "DittoHeaderInvalidException.Builder", "body": "public static DittoHeaderInvalidException.Builder newCustomMessageBuilder(final String customMessage) {\n        return new DittoHeaderInvalidException.Builder(customMessage);\n    }", "signature": "DittoHeaderInvalidException.Builder newCustomMessageBuilder(final String customMessage)", "full_signature": "public static DittoHeaderInvalidException.Builder newCustomMessageBuilder(final String customMessage)", "class_method_signature": "DittoHeaderInvalidException.newCustomMessageBuilder(final String customMessage)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}