{"test_class": {"identifier": "CategorizedLegendTest", "superclass": "", "interfaces": "", "fields": [], "file": "legend/src/test/java/org/orbisgis/legend/structure/categorize/CategorizedLegendTest.java"}, "test_case": {"identifier": "testSetField", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetField(){\n        CategorizedString cs = new CategorizedString(new StringLiteral(\"youhou\"));\n        assertTrue(cs.getField().equals(\"\"));\n        cs.setField(\"potato\");\n        assertTrue(cs.getField().equals(\"potato\"));\n        RealAttribute vf = new RealAttribute(\"height\");\n        Categorize2String c2s = new Categorize2String(new StringLiteral(\"youhou\"),new StringLiteral(\"fallback\"), vf);\n        cs = new CategorizedString(c2s);\n        assertTrue(cs.getField().equals(\"height\"));\n        cs.setField(\"new\");\n        assertTrue(cs.getField().equals(\"new\"));\n        assertTrue(vf.getColumnName().equals(\"new\"));\n    }", "signature": "void testSetField()", "full_signature": "@Test public void testSetField()", "class_method_signature": "CategorizedLegendTest.testSetField()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "getField", "setField", "assertTrue", "equals", "getField", "assertTrue", "equals", "getField", "setField", "assertTrue", "equals", "getField", "assertTrue", "equals", "getColumnName"]}, "focal_class": {"identifier": "CategorizedLegend", "superclass": "", "interfaces": "implements AbstractAttributeLegend, ParameterLegend", "fields": [{"original_string": "protected String field = \"\";", "modifier": "protected", "type": "String", "declarator": "field = \"\"", "var_name": "field"}, {"original_string": "private List<TypeListener> listeners = new ArrayList<TypeListener>();", "modifier": "private", "type": "List<TypeListener>", "declarator": "listeners = new ArrayList<TypeListener>()", "var_name": "listeners"}], "methods": [{"identifier": "getValueReference", "parameters": "()", "modifiers": "@Override public", "return": "ValueReference", "signature": "ValueReference getValueReference()", "full_signature": "@Override public ValueReference getValueReference()", "class_method_signature": "CategorizedLegend.getValueReference()", "testcase": false, "constructor": false}, {"identifier": "getLookupFieldName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getLookupFieldName()", "full_signature": "@Override public String getLookupFieldName()", "class_method_signature": "CategorizedLegend.getLookupFieldName()", "testcase": false, "constructor": false}, {"identifier": "setLookupFieldName", "parameters": "(String name)", "modifiers": "@Override public", "return": "void", "signature": "void setLookupFieldName(String name)", "full_signature": "@Override public void setLookupFieldName(String name)", "class_method_signature": "CategorizedLegend.setLookupFieldName(String name)", "testcase": false, "constructor": false}, {"identifier": "getField", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getField()", "full_signature": "public String getField()", "class_method_signature": "CategorizedLegend.getField()", "testcase": false, "constructor": false}, {"identifier": "setField", "parameters": "(String field)", "modifiers": "public", "return": "void", "signature": "void setField(String field)", "full_signature": "public void setField(String field)", "class_method_signature": "CategorizedLegend.setField(String field)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Double d)", "modifiers": "public abstract", "return": "U", "signature": "U get(Double d)", "full_signature": "public abstract U get(Double d)", "class_method_signature": "CategorizedLegend.get(Double d)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Double d)", "modifiers": "public abstract", "return": "U", "signature": "U remove(Double d)", "full_signature": "public abstract U remove(Double d)", "class_method_signature": "CategorizedLegend.remove(Double d)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(Double d, U val)", "modifiers": "public abstract", "return": "void", "signature": "void put(Double d, U val)", "full_signature": "public abstract void put(Double d, U val)", "class_method_signature": "CategorizedLegend.put(Double d, U val)", "testcase": false, "constructor": false}, {"identifier": "getFromLower", "parameters": "(Double d)", "modifiers": "public abstract", "return": "U", "signature": "U getFromLower(Double d)", "full_signature": "public abstract U getFromLower(Double d)", "class_method_signature": "CategorizedLegend.getFromLower(Double d)", "testcase": false, "constructor": false}, {"identifier": "getKeys", "parameters": "()", "modifiers": "public", "return": "Set<Double>", "signature": "Set<Double> getKeys()", "full_signature": "public Set<Double> getKeys()", "class_method_signature": "CategorizedLegend.getKeys()", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(TypeListener l)", "modifiers": "public", "return": "void", "signature": "void addListener(TypeListener l)", "full_signature": "public void addListener(TypeListener l)", "class_method_signature": "CategorizedLegend.addListener(TypeListener l)", "testcase": false, "constructor": false}, {"identifier": "fireTypeChanged", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void fireTypeChanged()", "full_signature": "public void fireTypeChanged()", "class_method_signature": "CategorizedLegend.fireTypeChanged()", "testcase": false, "constructor": false}, {"identifier": "acceptVisitor", "parameters": "(CategorizedParameterVisitor cpv)", "modifiers": "public", "return": "void", "signature": "void acceptVisitor(CategorizedParameterVisitor cpv)", "full_signature": "public void acceptVisitor(CategorizedParameterVisitor cpv)", "class_method_signature": "CategorizedLegend.acceptVisitor(CategorizedParameterVisitor cpv)", "testcase": false, "constructor": false}], "file": "legend/src/main/java/org/orbisgis/legend/structure/categorize/CategorizedLegend.java"}, "focal_method": {"identifier": "setField", "parameters": "(String field)", "modifiers": "public", "return": "void", "body": "public void setField(String field) {\n        this.field = field;\n        SeParameter c = getParameter();\n        if(c instanceof Categorize){\n            RealParameter lookupValue = ((Categorize) c).getLookupValue();\n            if(lookupValue instanceof RealAttribute){\n                ((RealAttribute) lookupValue).setColumnName(field);\n            }\n        }\n    }", "signature": "void setField(String field)", "full_signature": "public void setField(String field)", "class_method_signature": "CategorizedLegend.setField(String field)", "testcase": false, "constructor": false, "invocations": ["getParameter", "getLookupValue", "setColumnName"]}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}