{"test_class": {"identifier": "PdfStamperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String RESOURCE_FOLDER =\"./src/test/resources/com/itextpdf/text/pdf/PdfStamperTest/\";", "modifier": "private static final", "type": "String", "declarator": "RESOURCE_FOLDER =\"./src/test/resources/com/itextpdf/text/pdf/PdfStamperTest/\"", "var_name": "RESOURCE_FOLDER"}, {"original_string": "private static final String DEST_FOLDER = \"./target/com/itextpdf/test/pdf/PdfStamperTest/\";", "modifier": "private static final", "type": "String", "declarator": "DEST_FOLDER = \"./target/com/itextpdf/test/pdf/PdfStamperTest/\"", "var_name": "DEST_FOLDER"}], "file": "itext/src/test/java/com/itextpdf/text/pdf/PdfStamperTest.java"}, "test_case": {"identifier": "setPageContentTest02", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setPageContentTest02() throws IOException, DocumentException, InterruptedException {\n        String outPdf = DEST_FOLDER + \"out2.pdf\";\n        String testFile = RESOURCE_FOLDER + \"in.pdf\";\n        PdfReader reader = new PdfReader(testFile);\n        PdfStamper stamper = new PdfStamper(reader, new FileOutputStream(outPdf));\n        int total = reader.getNumberOfPages() + 1;\n        for (int i = 1; i < total; i++) {\n            byte[] bb = reader.getPageContent(i);\n            reader.setPageContent(i, bb);\n        }\n        reader.removeUnusedObjects();\n        stamper.close();\n\n        Assert.assertNull(new CompareTool().compareByContent(outPdf, RESOURCE_FOLDER + \"cmp_out2.pdf\", DEST_FOLDER, \"diff_\"));\n    }", "signature": "void setPageContentTest02()", "full_signature": "@Test public void setPageContentTest02()", "class_method_signature": "PdfStamperTest.setPageContentTest02()", "testcase": true, "constructor": false, "invocations": ["getNumberOfPages", "getPageContent", "setPageContent", "removeUnusedObjects", "close", "assertNull", "compareByContent"]}, "focal_class": {"identifier": "PdfStamper", "superclass": "", "interfaces": "implements PdfViewerPreferences, PdfEncryptionSettings", "fields": [{"original_string": "protected PdfStamperImp stamper;", "modifier": "protected", "type": "PdfStamperImp", "declarator": "stamper", "var_name": "stamper"}, {"original_string": "private Map<String, String> moreInfo;", "modifier": "private", "type": "Map<String, String>", "declarator": "moreInfo", "var_name": "moreInfo"}, {"original_string": "protected boolean hasSignature;", "modifier": "protected", "type": "boolean", "declarator": "hasSignature", "var_name": "hasSignature"}, {"original_string": "protected PdfSignatureAppearance sigApp;", "modifier": "protected", "type": "PdfSignatureAppearance", "declarator": "sigApp", "var_name": "sigApp"}, {"original_string": "protected XmlSignatureAppearance sigXmlApp;", "modifier": "protected", "type": "XmlSignatureAppearance", "declarator": "sigXmlApp", "var_name": "sigXmlApp"}, {"original_string": "private LtvVerification verification;", "modifier": "private", "type": "LtvVerification", "declarator": "verification", "var_name": "verification"}], "methods": [{"identifier": "PdfStamper", "parameters": "(final PdfReader reader, final OutputStream os)", "modifiers": "public", "return": "", "signature": " PdfStamper(final PdfReader reader, final OutputStream os)", "full_signature": "public  PdfStamper(final PdfReader reader, final OutputStream os)", "class_method_signature": "PdfStamper.PdfStamper(final PdfReader reader, final OutputStream os)", "testcase": false, "constructor": true}, {"identifier": "PdfStamper", "parameters": "(final PdfReader reader, final OutputStream os, final char pdfVersion)", "modifiers": "public", "return": "", "signature": " PdfStamper(final PdfReader reader, final OutputStream os, final char pdfVersion)", "full_signature": "public  PdfStamper(final PdfReader reader, final OutputStream os, final char pdfVersion)", "class_method_signature": "PdfStamper.PdfStamper(final PdfReader reader, final OutputStream os, final char pdfVersion)", "testcase": false, "constructor": true}, {"identifier": "PdfStamper", "parameters": "(final PdfReader reader, final OutputStream os, final char pdfVersion, final boolean append)", "modifiers": "public", "return": "", "signature": " PdfStamper(final PdfReader reader, final OutputStream os, final char pdfVersion, final boolean append)", "full_signature": "public  PdfStamper(final PdfReader reader, final OutputStream os, final char pdfVersion, final boolean append)", "class_method_signature": "PdfStamper.PdfStamper(final PdfReader reader, final OutputStream os, final char pdfVersion, final boolean append)", "testcase": false, "constructor": true}, {"identifier": "getMoreInfo", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getMoreInfo()", "full_signature": "public Map<String, String> getMoreInfo()", "class_method_signature": "PdfStamper.getMoreInfo()", "testcase": false, "constructor": false}, {"identifier": "setMoreInfo", "parameters": "(final Map<String, String> moreInfo)", "modifiers": "public", "return": "void", "signature": "void setMoreInfo(final Map<String, String> moreInfo)", "full_signature": "public void setMoreInfo(final Map<String, String> moreInfo)", "class_method_signature": "PdfStamper.setMoreInfo(final Map<String, String> moreInfo)", "testcase": false, "constructor": false}, {"identifier": "replacePage", "parameters": "(final PdfReader r, final int pageImported, final int pageReplaced)", "modifiers": "public", "return": "void", "signature": "void replacePage(final PdfReader r, final int pageImported, final int pageReplaced)", "full_signature": "public void replacePage(final PdfReader r, final int pageImported, final int pageReplaced)", "class_method_signature": "PdfStamper.replacePage(final PdfReader r, final int pageImported, final int pageReplaced)", "testcase": false, "constructor": false}, {"identifier": "insertPage", "parameters": "(final int pageNumber, final Rectangle mediabox)", "modifiers": "public", "return": "void", "signature": "void insertPage(final int pageNumber, final Rectangle mediabox)", "full_signature": "public void insertPage(final int pageNumber, final Rectangle mediabox)", "class_method_signature": "PdfStamper.insertPage(final int pageNumber, final Rectangle mediabox)", "testcase": false, "constructor": false}, {"identifier": "getSignatureAppearance", "parameters": "()", "modifiers": "public", "return": "PdfSignatureAppearance", "signature": "PdfSignatureAppearance getSignatureAppearance()", "full_signature": "public PdfSignatureAppearance getSignatureAppearance()", "class_method_signature": "PdfStamper.getSignatureAppearance()", "testcase": false, "constructor": false}, {"identifier": "getXmlSignatureAppearance", "parameters": "()", "modifiers": "public", "return": "XmlSignatureAppearance", "signature": "XmlSignatureAppearance getXmlSignatureAppearance()", "full_signature": "public XmlSignatureAppearance getXmlSignatureAppearance()", "class_method_signature": "PdfStamper.getXmlSignatureAppearance()", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void flush()", "full_signature": "public void flush()", "class_method_signature": "PdfStamper.flush()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "PdfStamper.close()", "testcase": false, "constructor": false}, {"identifier": "getUnderContent", "parameters": "(final int pageNum)", "modifiers": "public", "return": "PdfContentByte", "signature": "PdfContentByte getUnderContent(final int pageNum)", "full_signature": "public PdfContentByte getUnderContent(final int pageNum)", "class_method_signature": "PdfStamper.getUnderContent(final int pageNum)", "testcase": false, "constructor": false}, {"identifier": "getOverContent", "parameters": "(final int pageNum)", "modifiers": "public", "return": "PdfContentByte", "signature": "PdfContentByte getOverContent(final int pageNum)", "full_signature": "public PdfContentByte getOverContent(final int pageNum)", "class_method_signature": "PdfStamper.getOverContent(final int pageNum)", "testcase": false, "constructor": false}, {"identifier": "isRotateContents", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRotateContents()", "full_signature": "public boolean isRotateContents()", "class_method_signature": "PdfStamper.isRotateContents()", "testcase": false, "constructor": false}, {"identifier": "setRotateContents", "parameters": "(final boolean rotateContents)", "modifiers": "public", "return": "void", "signature": "void setRotateContents(final boolean rotateContents)", "full_signature": "public void setRotateContents(final boolean rotateContents)", "class_method_signature": "PdfStamper.setRotateContents(final boolean rotateContents)", "testcase": false, "constructor": false}, {"identifier": "setEncryption", "parameters": "(final byte userPassword[], final byte ownerPassword[], final int permissions, final boolean strength128Bits)", "modifiers": "public", "return": "void", "signature": "void setEncryption(final byte userPassword[], final byte ownerPassword[], final int permissions, final boolean strength128Bits)", "full_signature": "public void setEncryption(final byte userPassword[], final byte ownerPassword[], final int permissions, final boolean strength128Bits)", "class_method_signature": "PdfStamper.setEncryption(final byte userPassword[], final byte ownerPassword[], final int permissions, final boolean strength128Bits)", "testcase": false, "constructor": false}, {"identifier": "setEncryption", "parameters": "(final byte userPassword[], final byte ownerPassword[], final int permissions, final int encryptionType)", "modifiers": "public", "return": "void", "signature": "void setEncryption(final byte userPassword[], final byte ownerPassword[], final int permissions, final int encryptionType)", "full_signature": "public void setEncryption(final byte userPassword[], final byte ownerPassword[], final int permissions, final int encryptionType)", "class_method_signature": "PdfStamper.setEncryption(final byte userPassword[], final byte ownerPassword[], final int permissions, final int encryptionType)", "testcase": false, "constructor": false}, {"identifier": "setEncryption", "parameters": "(final boolean strength, final String userPassword, final String ownerPassword, final int permissions)", "modifiers": "public", "return": "void", "signature": "void setEncryption(final boolean strength, final String userPassword, final String ownerPassword, final int permissions)", "full_signature": "public void setEncryption(final boolean strength, final String userPassword, final String ownerPassword, final int permissions)", "class_method_signature": "PdfStamper.setEncryption(final boolean strength, final String userPassword, final String ownerPassword, final int permissions)", "testcase": false, "constructor": false}, {"identifier": "setEncryption", "parameters": "(final int encryptionType, final String userPassword, final String ownerPassword, final int permissions)", "modifiers": "public", "return": "void", "signature": "void setEncryption(final int encryptionType, final String userPassword, final String ownerPassword, final int permissions)", "full_signature": "public void setEncryption(final int encryptionType, final String userPassword, final String ownerPassword, final int permissions)", "class_method_signature": "PdfStamper.setEncryption(final int encryptionType, final String userPassword, final String ownerPassword, final int permissions)", "testcase": false, "constructor": false}, {"identifier": "setEncryption", "parameters": "(final Certificate[] certs, final int[] permissions, final int encryptionType)", "modifiers": "public", "return": "void", "signature": "void setEncryption(final Certificate[] certs, final int[] permissions, final int encryptionType)", "full_signature": "public void setEncryption(final Certificate[] certs, final int[] permissions, final int encryptionType)", "class_method_signature": "PdfStamper.setEncryption(final Certificate[] certs, final int[] permissions, final int encryptionType)", "testcase": false, "constructor": false}, {"identifier": "getImportedPage", "parameters": "(final PdfReader reader, final int pageNumber)", "modifiers": "public", "return": "PdfImportedPage", "signature": "PdfImportedPage getImportedPage(final PdfReader reader, final int pageNumber)", "full_signature": "public PdfImportedPage getImportedPage(final PdfReader reader, final int pageNumber)", "class_method_signature": "PdfStamper.getImportedPage(final PdfReader reader, final int pageNumber)", "testcase": false, "constructor": false}, {"identifier": "getWriter", "parameters": "()", "modifiers": "public", "return": "PdfWriter", "signature": "PdfWriter getWriter()", "full_signature": "public PdfWriter getWriter()", "class_method_signature": "PdfStamper.getWriter()", "testcase": false, "constructor": false}, {"identifier": "getReader", "parameters": "()", "modifiers": "public", "return": "PdfReader", "signature": "PdfReader getReader()", "full_signature": "public PdfReader getReader()", "class_method_signature": "PdfStamper.getReader()", "testcase": false, "constructor": false}, {"identifier": "getAcroFields", "parameters": "()", "modifiers": "public", "return": "AcroFields", "signature": "AcroFields getAcroFields()", "full_signature": "public AcroFields getAcroFields()", "class_method_signature": "PdfStamper.getAcroFields()", "testcase": false, "constructor": false}, {"identifier": "setFormFlattening", "parameters": "(final boolean flat)", "modifiers": "public", "return": "void", "signature": "void setFormFlattening(final boolean flat)", "full_signature": "public void setFormFlattening(final boolean flat)", "class_method_signature": "PdfStamper.setFormFlattening(final boolean flat)", "testcase": false, "constructor": false}, {"identifier": "setFreeTextFlattening", "parameters": "(final boolean flat)", "modifiers": "public", "return": "void", "signature": "void setFreeTextFlattening(final boolean flat)", "full_signature": "public void setFreeTextFlattening(final boolean flat)", "class_method_signature": "PdfStamper.setFreeTextFlattening(final boolean flat)", "testcase": false, "constructor": false}, {"identifier": "setAnnotationFlattening", "parameters": "(final boolean flat)", "modifiers": "public", "return": "void", "signature": "void setAnnotationFlattening(final boolean flat)", "full_signature": "public void setAnnotationFlattening(final boolean flat)", "class_method_signature": "PdfStamper.setAnnotationFlattening(final boolean flat)", "testcase": false, "constructor": false}, {"identifier": "addAnnotation", "parameters": "(final PdfAnnotation annot, final int page)", "modifiers": "public", "return": "void", "signature": "void addAnnotation(final PdfAnnotation annot, final int page)", "full_signature": "public void addAnnotation(final PdfAnnotation annot, final int page)", "class_method_signature": "PdfStamper.addAnnotation(final PdfAnnotation annot, final int page)", "testcase": false, "constructor": false}, {"identifier": "addSignature", "parameters": "(final String name, final int page, final float llx, final float lly, final float urx, final float ury)", "modifiers": "public", "return": "PdfFormField", "signature": "PdfFormField addSignature(final String name, final int page, final float llx, final float lly, final float urx, final float ury)", "full_signature": "public PdfFormField addSignature(final String name, final int page, final float llx, final float lly, final float urx, final float ury)", "class_method_signature": "PdfStamper.addSignature(final String name, final int page, final float llx, final float lly, final float urx, final float ury)", "testcase": false, "constructor": false}, {"identifier": "addComments", "parameters": "(final FdfReader fdf)", "modifiers": "public", "return": "void", "signature": "void addComments(final FdfReader fdf)", "full_signature": "public void addComments(final FdfReader fdf)", "class_method_signature": "PdfStamper.addComments(final FdfReader fdf)", "testcase": false, "constructor": false}, {"identifier": "setOutlines", "parameters": "(final List<HashMap<String, Object>> outlines)", "modifiers": "public", "return": "void", "signature": "void setOutlines(final List<HashMap<String, Object>> outlines)", "full_signature": "public void setOutlines(final List<HashMap<String, Object>> outlines)", "class_method_signature": "PdfStamper.setOutlines(final List<HashMap<String, Object>> outlines)", "testcase": false, "constructor": false}, {"identifier": "setThumbnail", "parameters": "(final Image image, final int page)", "modifiers": "public", "return": "void", "signature": "void setThumbnail(final Image image, final int page)", "full_signature": "public void setThumbnail(final Image image, final int page)", "class_method_signature": "PdfStamper.setThumbnail(final Image image, final int page)", "testcase": false, "constructor": false}, {"identifier": "partialFormFlattening", "parameters": "(final String name)", "modifiers": "public", "return": "boolean", "signature": "boolean partialFormFlattening(final String name)", "full_signature": "public boolean partialFormFlattening(final String name)", "class_method_signature": "PdfStamper.partialFormFlattening(final String name)", "testcase": false, "constructor": false}, {"identifier": "addJavaScript", "parameters": "(final String js)", "modifiers": "public", "return": "void", "signature": "void addJavaScript(final String js)", "full_signature": "public void addJavaScript(final String js)", "class_method_signature": "PdfStamper.addJavaScript(final String js)", "testcase": false, "constructor": false}, {"identifier": "addJavaScript", "parameters": "(final String name, final String js)", "modifiers": "public", "return": "void", "signature": "void addJavaScript(final String name, final String js)", "full_signature": "public void addJavaScript(final String name, final String js)", "class_method_signature": "PdfStamper.addJavaScript(final String name, final String js)", "testcase": false, "constructor": false}, {"identifier": "addFileAttachment", "parameters": "(final String description, final byte fileStore[], final String file, final String fileDisplay)", "modifiers": "public", "return": "void", "signature": "void addFileAttachment(final String description, final byte fileStore[], final String file, final String fileDisplay)", "full_signature": "public void addFileAttachment(final String description, final byte fileStore[], final String file, final String fileDisplay)", "class_method_signature": "PdfStamper.addFileAttachment(final String description, final byte fileStore[], final String file, final String fileDisplay)", "testcase": false, "constructor": false}, {"identifier": "addFileAttachment", "parameters": "(final String description, final PdfFileSpecification fs)", "modifiers": "public", "return": "void", "signature": "void addFileAttachment(final String description, final PdfFileSpecification fs)", "full_signature": "public void addFileAttachment(final String description, final PdfFileSpecification fs)", "class_method_signature": "PdfStamper.addFileAttachment(final String description, final PdfFileSpecification fs)", "testcase": false, "constructor": false}, {"identifier": "makePackage", "parameters": "( final PdfName initialView )", "modifiers": "public", "return": "void", "signature": "void makePackage( final PdfName initialView )", "full_signature": "public void makePackage( final PdfName initialView )", "class_method_signature": "PdfStamper.makePackage( final PdfName initialView )", "testcase": false, "constructor": false}, {"identifier": "makePackage", "parameters": "(final PdfCollection collection)", "modifiers": "public", "return": "void", "signature": "void makePackage(final PdfCollection collection)", "full_signature": "public void makePackage(final PdfCollection collection)", "class_method_signature": "PdfStamper.makePackage(final PdfCollection collection)", "testcase": false, "constructor": false}, {"identifier": "setViewerPreferences", "parameters": "(final int preferences)", "modifiers": "public", "return": "void", "signature": "void setViewerPreferences(final int preferences)", "full_signature": "public void setViewerPreferences(final int preferences)", "class_method_signature": "PdfStamper.setViewerPreferences(final int preferences)", "testcase": false, "constructor": false}, {"identifier": "addViewerPreference", "parameters": "(final PdfName key, final PdfObject value)", "modifiers": "public", "return": "void", "signature": "void addViewerPreference(final PdfName key, final PdfObject value)", "full_signature": "public void addViewerPreference(final PdfName key, final PdfObject value)", "class_method_signature": "PdfStamper.addViewerPreference(final PdfName key, final PdfObject value)", "testcase": false, "constructor": false}, {"identifier": "setXmpMetadata", "parameters": "(final byte[] xmp)", "modifiers": "public", "return": "void", "signature": "void setXmpMetadata(final byte[] xmp)", "full_signature": "public void setXmpMetadata(final byte[] xmp)", "class_method_signature": "PdfStamper.setXmpMetadata(final byte[] xmp)", "testcase": false, "constructor": false}, {"identifier": "createXmpMetadata", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void createXmpMetadata()", "full_signature": "public void createXmpMetadata()", "class_method_signature": "PdfStamper.createXmpMetadata()", "testcase": false, "constructor": false}, {"identifier": "getXmpWriter", "parameters": "()", "modifiers": "public", "return": "XmpWriter", "signature": "XmpWriter getXmpWriter()", "full_signature": "public XmpWriter getXmpWriter()", "class_method_signature": "PdfStamper.getXmpWriter()", "testcase": false, "constructor": false}, {"identifier": "isFullCompression", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFullCompression()", "full_signature": "public boolean isFullCompression()", "class_method_signature": "PdfStamper.isFullCompression()", "testcase": false, "constructor": false}, {"identifier": "setFullCompression", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void setFullCompression()", "full_signature": "public void setFullCompression()", "class_method_signature": "PdfStamper.setFullCompression()", "testcase": false, "constructor": false}, {"identifier": "setPageAction", "parameters": "(final PdfName actionType, final PdfAction action, final int page)", "modifiers": "public", "return": "void", "signature": "void setPageAction(final PdfName actionType, final PdfAction action, final int page)", "full_signature": "public void setPageAction(final PdfName actionType, final PdfAction action, final int page)", "class_method_signature": "PdfStamper.setPageAction(final PdfName actionType, final PdfAction action, final int page)", "testcase": false, "constructor": false}, {"identifier": "setDuration", "parameters": "(final int seconds, final int page)", "modifiers": "public", "return": "void", "signature": "void setDuration(final int seconds, final int page)", "full_signature": "public void setDuration(final int seconds, final int page)", "class_method_signature": "PdfStamper.setDuration(final int seconds, final int page)", "testcase": false, "constructor": false}, {"identifier": "setTransition", "parameters": "(final PdfTransition transition, final int page)", "modifiers": "public", "return": "void", "signature": "void setTransition(final PdfTransition transition, final int page)", "full_signature": "public void setTransition(final PdfTransition transition, final int page)", "class_method_signature": "PdfStamper.setTransition(final PdfTransition transition, final int page)", "testcase": false, "constructor": false}, {"identifier": "createSignature", "parameters": "(final PdfReader reader, final OutputStream os, final char pdfVersion, File tempFile, final boolean append)", "modifiers": "public static", "return": "PdfStamper", "signature": "PdfStamper createSignature(final PdfReader reader, final OutputStream os, final char pdfVersion, File tempFile, final boolean append)", "full_signature": "public static PdfStamper createSignature(final PdfReader reader, final OutputStream os, final char pdfVersion, File tempFile, final boolean append)", "class_method_signature": "PdfStamper.createSignature(final PdfReader reader, final OutputStream os, final char pdfVersion, File tempFile, final boolean append)", "testcase": false, "constructor": false}, {"identifier": "createSignature", "parameters": "(final PdfReader reader, final OutputStream os, final char pdfVersion)", "modifiers": "public static", "return": "PdfStamper", "signature": "PdfStamper createSignature(final PdfReader reader, final OutputStream os, final char pdfVersion)", "full_signature": "public static PdfStamper createSignature(final PdfReader reader, final OutputStream os, final char pdfVersion)", "class_method_signature": "PdfStamper.createSignature(final PdfReader reader, final OutputStream os, final char pdfVersion)", "testcase": false, "constructor": false}, {"identifier": "createSignature", "parameters": "(final PdfReader reader, final OutputStream os, final char pdfVersion, final File tempFile)", "modifiers": "public static", "return": "PdfStamper", "signature": "PdfStamper createSignature(final PdfReader reader, final OutputStream os, final char pdfVersion, final File tempFile)", "full_signature": "public static PdfStamper createSignature(final PdfReader reader, final OutputStream os, final char pdfVersion, final File tempFile)", "class_method_signature": "PdfStamper.createSignature(final PdfReader reader, final OutputStream os, final char pdfVersion, final File tempFile)", "testcase": false, "constructor": false}, {"identifier": "createXmlSignature", "parameters": "(final PdfReader reader, final OutputStream os)", "modifiers": "public static", "return": "PdfStamper", "signature": "PdfStamper createXmlSignature(final PdfReader reader, final OutputStream os)", "full_signature": "public static PdfStamper createXmlSignature(final PdfReader reader, final OutputStream os)", "class_method_signature": "PdfStamper.createXmlSignature(final PdfReader reader, final OutputStream os)", "testcase": false, "constructor": false}, {"identifier": "getPdfLayers", "parameters": "()", "modifiers": "public", "return": "Map<String, PdfLayer>", "signature": "Map<String, PdfLayer> getPdfLayers()", "full_signature": "public Map<String, PdfLayer> getPdfLayers()", "class_method_signature": "PdfStamper.getPdfLayers()", "testcase": false, "constructor": false}, {"identifier": "markUsed", "parameters": "(PdfObject obj)", "modifiers": "public", "return": "void", "signature": "void markUsed(PdfObject obj)", "full_signature": "public void markUsed(PdfObject obj)", "class_method_signature": "PdfStamper.markUsed(PdfObject obj)", "testcase": false, "constructor": false}, {"identifier": "getLtvVerification", "parameters": "()", "modifiers": "public", "return": "LtvVerification", "signature": "LtvVerification getLtvVerification()", "full_signature": "public LtvVerification getLtvVerification()", "class_method_signature": "PdfStamper.getLtvVerification()", "testcase": false, "constructor": false}, {"identifier": "addNamedDestination", "parameters": "(final String name, final int page, final PdfDestination dest)", "modifiers": "public", "return": "boolean", "signature": "boolean addNamedDestination(final String name, final int page, final PdfDestination dest)", "full_signature": "public boolean addNamedDestination(final String name, final int page, final PdfDestination dest)", "class_method_signature": "PdfStamper.addNamedDestination(final String name, final int page, final PdfDestination dest)", "testcase": false, "constructor": false}, {"identifier": "mergeVerification", "parameters": "()", "modifiers": "", "return": "void", "signature": "void mergeVerification()", "full_signature": " void mergeVerification()", "class_method_signature": "PdfStamper.mergeVerification()", "testcase": false, "constructor": false}, {"identifier": "PdfStamper", "parameters": "()", "modifiers": "protected", "return": "", "signature": " PdfStamper()", "full_signature": "protected  PdfStamper()", "class_method_signature": "PdfStamper.PdfStamper()", "testcase": false, "constructor": true}], "file": "itext/src/main/java/com/itextpdf/text/pdf/PdfStamper.java"}, "focal_method": {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void close() throws DocumentException, IOException {\n        if (stamper.closed)\n            return;\n        if (!hasSignature) {\n            mergeVerification();\n            stamper.close(moreInfo);\n        }\n        else {\n            throw new DocumentException(\"Signature defined. Must be closed in PdfSignatureAppearance.\");\n        }\n    }", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "PdfStamper.close()", "testcase": false, "constructor": false, "invocations": ["mergeVerification", "close"]}, "repository": {"repo_id": 14892248, "url": "https://github.com/itext/itextpdf", "language": "Java", "is_fork": false, "fork_count": 400, "stargazer_count": 1164, "size": 115070, "license": "licensed"}}