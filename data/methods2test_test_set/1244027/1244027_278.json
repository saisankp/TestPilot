{"test_class": {"identifier": "PrettyJsonWriterTest", "superclass": "extends CompactJsonWriterTest", "interfaces": "", "fields": [], "file": "modeshape-schematic/src/test/java/org/modeshape/schematic/internal/document/PrettyJsonWriterTest.java"}, "test_case": {"identifier": "shouldCorrectlyWriteBsonObjectWithNestedObjectValue", "parameters": "()", "modifiers": "@Override @Test public", "return": "void", "body": "@Override\n    @Test\n    public void shouldCorrectlyWriteBsonObjectWithNestedObjectValue() {\n        writer = new PrettyJsonWriter();\n        BasicDocument address = new BasicDocument();\n        address.put(\"street\", \"100 Main St.\");\n        address.put(\"city\", \"Springfield\");\n        BasicDocument top = new BasicDocument();\n        top.put(\"firstName\", \"Jack\");\n        top.put(\"lastName\", \"Riley\");\n        top.put(\"address\", address);\n        String actual = writer.write(top);\n        String expected = \"{\\n  \\\"firstName\\\" : \\\"Jack\\\",\\n  \\\"lastName\\\" : \\\"Riley\\\",\\n  \\\"address\\\" : {\\n    \\\"street\\\" : \\\"100 Main St.\\\",\\n    \\\"city\\\" : \\\"Springfield\\\"\\n  }\\n}\";\n        assertSame(expected, actual);\n    }", "signature": "void shouldCorrectlyWriteBsonObjectWithNestedObjectValue()", "full_signature": "@Override @Test public void shouldCorrectlyWriteBsonObjectWithNestedObjectValue()", "class_method_signature": "PrettyJsonWriterTest.shouldCorrectlyWriteBsonObjectWithNestedObjectValue()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "put", "write", "assertSame"]}, "focal_class": {"identifier": "PrettyJsonWriter", "superclass": "extends CompactJsonWriter", "interfaces": "", "fields": [{"original_string": "private static final int MAX_CACHED_INDENTS = 10;", "modifier": "private static final", "type": "int", "declarator": "MAX_CACHED_INDENTS = 10", "var_name": "MAX_CACHED_INDENTS"}, {"original_string": "private static final String[] CACHED_INDENTS;", "modifier": "private static final", "type": "String[]", "declarator": "CACHED_INDENTS", "var_name": "CACHED_INDENTS"}, {"original_string": "private int depth = 0;", "modifier": "private", "type": "int", "declarator": "depth = 0", "var_name": "depth"}], "methods": [{"identifier": "write", "parameters": "(Document bson, Writer writer)", "modifiers": "@Override protected", "return": "void", "signature": "void write(Document bson, Writer writer)", "full_signature": "@Override protected void write(Document bson, Writer writer)", "class_method_signature": "PrettyJsonWriter.write(Document bson, Writer writer)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(Iterable<?> arrayValue, Writer writer)", "modifiers": "@Override protected", "return": "void", "signature": "void write(Iterable<?> arrayValue, Writer writer)", "full_signature": "@Override protected void write(Iterable<?> arrayValue, Writer writer)", "class_method_signature": "PrettyJsonWriter.write(Iterable<?> arrayValue, Writer writer)", "testcase": false, "constructor": false}, {"identifier": "writeArray", "parameters": "(Object array, Writer writer)", "modifiers": "@Override protected", "return": "void", "signature": "void writeArray(Object array, Writer writer)", "full_signature": "@Override protected void writeArray(Object array, Writer writer)", "class_method_signature": "PrettyJsonWriter.writeArray(Object array, Writer writer)", "testcase": false, "constructor": false}, {"identifier": "indent", "parameters": "(Writer writer)", "modifiers": "protected", "return": "void", "signature": "void indent(Writer writer)", "full_signature": "protected void indent(Writer writer)", "class_method_signature": "PrettyJsonWriter.indent(Writer writer)", "testcase": false, "constructor": false}], "file": "modeshape-schematic/src/main/java/org/modeshape/schematic/internal/document/PrettyJsonWriter.java"}, "focal_method": {"identifier": "write", "parameters": "(Document bson, Writer writer)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n   protected void write(Document bson, Writer writer) throws IOException {\n      if (bson.size() == 0) {\n         writer.append(\"{ }\");\n         return;\n      }\n      ++depth;\n      writer.append('{').append('\\n');\n      indent(writer);\n      Iterator<Field> iter = bson.fields().iterator();\n      if (iter.hasNext()) {\n         write(iter.next(), writer);\n         while (iter.hasNext()) {\n            writer.append(',').append('\\n');\n            indent(writer);\n            write(iter.next(), writer);\n         }\n      }\n      writer.append('\\n');\n      --depth;\n      indent(writer);\n      writer.append('}');\n   }", "signature": "void write(Document bson, Writer writer)", "full_signature": "@Override protected void write(Document bson, Writer writer)", "class_method_signature": "PrettyJsonWriter.write(Document bson, Writer writer)", "testcase": false, "constructor": false, "invocations": ["size", "append", "append", "append", "indent", "iterator", "fields", "hasNext", "write", "next", "hasNext", "append", "append", "indent", "write", "next", "append", "indent", "append"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}