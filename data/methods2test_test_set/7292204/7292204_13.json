{"test_class": {"identifier": "StrSubstitutorTest", "superclass": "", "interfaces": "", "fields": [], "file": "owner/src/test/java/org/aeonbits/owner/StrSubstitutorTest.java"}, "test_case": {"identifier": "shouldReplaceVariablesWithBackSlashesAndShouldWorkWithRecursion", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReplaceVariablesWithBackSlashesAndShouldWorkWithRecursion() {\n        Properties values = new Properties();\n        values.setProperty(\"color\", \"bro\\\\wn\");\n        values.setProperty(\"animal\", \"qui\\\\ck\\\\${color}\\\\fo\\\\x\");\n        values.setProperty(\"target.attribute\", \"la\\\\zy\");\n        values.setProperty(\"target.animal\", \"do\\\\g\");\n        values.setProperty(\"target\", \"${target.attribute}\\\\${target.animal}\");\n        values.setProperty(\"template\", \"The ${animal} jum\\\\ped over the ${target}.\");\n        values.setProperty(\"wrapper\", \"\\\\foo\\\\${template}\\\\bar\\\\\");\n        values.setProperty(\"wrapper2\", \"\\\\baz\\\\${wrapper}\\\\qux\\\\\");\n        StrSubstitutor sub = new StrSubstitutor(values);\n        String resolvedString = sub.replace(\"${wrapper2}\");\n        assertEquals(\"\\\\baz\\\\\\\\foo\\\\The qui\\\\ck\\\\bro\\\\wn\\\\fo\\\\x jum\\\\ped over the la\\\\zy\\\\do\\\\g.\\\\bar\\\\\\\\qux\\\\\",\n                resolvedString);\n    }", "signature": "void shouldReplaceVariablesWithBackSlashesAndShouldWorkWithRecursion()", "full_signature": "@Test public void shouldReplaceVariablesWithBackSlashesAndShouldWorkWithRecursion()", "class_method_signature": "StrSubstitutorTest.shouldReplaceVariablesWithBackSlashesAndShouldWorkWithRecursion()", "testcase": true, "constructor": false, "invocations": ["setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "setProperty", "replace", "assertEquals"]}, "focal_class": {"identifier": "StrSubstitutor", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private final Properties values;", "modifier": "private final", "type": "Properties", "declarator": "values", "var_name": "values"}, {"original_string": "private static final Pattern PATTERN = compile(\"\\\\$\\\\{(.+?)\\\\}\");", "modifier": "private static final", "type": "Pattern", "declarator": "PATTERN = compile(\"\\\\$\\\\{(.+?)\\\\}\")", "var_name": "PATTERN"}], "methods": [{"identifier": "StrSubstitutor", "parameters": "(Properties values)", "modifiers": "", "return": "", "signature": " StrSubstitutor(Properties values)", "full_signature": "  StrSubstitutor(Properties values)", "class_method_signature": "StrSubstitutor.StrSubstitutor(Properties values)", "testcase": false, "constructor": true}, {"identifier": "replace", "parameters": "(String source)", "modifiers": "", "return": "String", "signature": "String replace(String source)", "full_signature": " String replace(String source)", "class_method_signature": "StrSubstitutor.replace(String source)", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "(String source, Object... args)", "modifiers": "", "return": "String", "signature": "String replace(String source, Object... args)", "full_signature": " String replace(String source, Object... args)", "class_method_signature": "StrSubstitutor.replace(String source, Object... args)", "testcase": false, "constructor": false}], "file": "owner/src/main/java/org/aeonbits/owner/StrSubstitutor.java"}, "focal_method": {"identifier": "replace", "parameters": "(String source)", "modifiers": "", "return": "String", "body": "String replace(String source) {\n        if (source == null)\n            return null;\n        Matcher m = PATTERN.matcher(source);\n        StringBuffer sb = new StringBuffer();\n        while (m.find()) {\n            String var = m.group(1);\n            String value = values.getProperty(var);\n            String replacement = (value != null) ? replace(value) : \"\";\n            m.appendReplacement(sb, Matcher.quoteReplacement(replacement));\n        }\n        m.appendTail(sb);\n        return sb.toString();\n    }", "signature": "String replace(String source)", "full_signature": " String replace(String source)", "class_method_signature": "StrSubstitutor.replace(String source)", "testcase": false, "constructor": false, "invocations": ["matcher", "find", "group", "getProperty", "replace", "appendReplacement", "quoteReplacement", "appendTail", "toString"]}, "repository": {"repo_id": 7292204, "url": "https://github.com/lviggiano/owner", "stars": 723, "created": "12/23/2012 5:38:31 AM +00:00", "updates": "2020-01-21T03:13:31+00:00", "fork": "False", "license": "licensed"}}