{"test_class": {"identifier": "DatatypeIdImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final DatatypeIdImpl d1 = new DatatypeIdImpl(DatatypeIdValue.DT_ITEM);", "modifier": "private final", "type": "DatatypeIdImpl", "declarator": "d1 = new DatatypeIdImpl(DatatypeIdValue.DT_ITEM)", "var_name": "d1"}, {"original_string": "private final DatatypeIdImpl d2 = new DatatypeIdImpl(\"http://wikiba.se/ontology#WikibaseItem\");", "modifier": "private final", "type": "DatatypeIdImpl", "declarator": "d2 = new DatatypeIdImpl(\"http://wikiba.se/ontology#WikibaseItem\")", "var_name": "d2"}, {"original_string": "private final DatatypeIdImpl d3 = new DatatypeIdImpl(DatatypeIdValue.DT_TIME);", "modifier": "private final", "type": "DatatypeIdImpl", "declarator": "d3 = new DatatypeIdImpl(DatatypeIdValue.DT_TIME)", "var_name": "d3"}], "file": "wdtk-datamodel/src/test/java/org/wikidata/wdtk/datamodel/implementation/DatatypeIdImplTest.java"}, "test_case": {"identifier": "testJsonForQuantity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testJsonForQuantity() {\n\t\tassertEquals(\n\t\t\t\tDatatypeIdImpl.getJsonDatatypeFromDatatypeIri(DatatypeIdImpl.DT_QUANTITY),\n\t\t\t\tDatatypeIdImpl.JSON_DT_QUANTITY);\n\t}", "signature": "void testJsonForQuantity()", "full_signature": "@Test public void testJsonForQuantity()", "class_method_signature": "DatatypeIdImplTest.testJsonForQuantity()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getJsonDatatypeFromDatatypeIri"]}, "focal_class": {"identifier": "DatatypeIdImpl", "superclass": "", "interfaces": "implements DatatypeIdValue", "fields": [{"original_string": "public static final String JSON_DT_ITEM = \"wikibase-item\";", "modifier": "public static final", "type": "String", "declarator": "JSON_DT_ITEM = \"wikibase-item\"", "var_name": "JSON_DT_ITEM"}, {"original_string": "public static final String JSON_DT_PROPERTY = \"wikibase-property\";", "modifier": "public static final", "type": "String", "declarator": "JSON_DT_PROPERTY = \"wikibase-property\"", "var_name": "JSON_DT_PROPERTY"}, {"original_string": "public static final String JSON_DT_GLOBE_COORDINATES = \"globe-coordinate\";", "modifier": "public static final", "type": "String", "declarator": "JSON_DT_GLOBE_COORDINATES = \"globe-coordinate\"", "var_name": "JSON_DT_GLOBE_COORDINATES"}, {"original_string": "public static final String JSON_DT_URL = \"url\";", "modifier": "public static final", "type": "String", "declarator": "JSON_DT_URL = \"url\"", "var_name": "JSON_DT_URL"}, {"original_string": "public static final String JSON_DT_COMMONS_MEDIA = \"commonsMedia\";", "modifier": "public static final", "type": "String", "declarator": "JSON_DT_COMMONS_MEDIA = \"commonsMedia\"", "var_name": "JSON_DT_COMMONS_MEDIA"}, {"original_string": "public static final String JSON_DT_TIME = \"time\";", "modifier": "public static final", "type": "String", "declarator": "JSON_DT_TIME = \"time\"", "var_name": "JSON_DT_TIME"}, {"original_string": "public static final String JSON_DT_QUANTITY = \"quantity\";", "modifier": "public static final", "type": "String", "declarator": "JSON_DT_QUANTITY = \"quantity\"", "var_name": "JSON_DT_QUANTITY"}, {"original_string": "public static final String JSON_DT_STRING = \"string\";", "modifier": "public static final", "type": "String", "declarator": "JSON_DT_STRING = \"string\"", "var_name": "JSON_DT_STRING"}, {"original_string": "public static final String JSON_DT_MONOLINGUAL_TEXT = \"monolingualtext\";", "modifier": "public static final", "type": "String", "declarator": "JSON_DT_MONOLINGUAL_TEXT = \"monolingualtext\"", "var_name": "JSON_DT_MONOLINGUAL_TEXT"}, {"original_string": "public static final String JSON_DT_EXTERNAL_ID = \"external-id\";", "modifier": "public static final", "type": "String", "declarator": "JSON_DT_EXTERNAL_ID = \"external-id\"", "var_name": "JSON_DT_EXTERNAL_ID"}, {"original_string": "public static final String JSON_DT_MATH = \"math\";", "modifier": "public static final", "type": "String", "declarator": "JSON_DT_MATH = \"math\"", "var_name": "JSON_DT_MATH"}, {"original_string": "public static final String JSON_DT_GEO_SHAPE = \"geo-shape\";", "modifier": "public static final", "type": "String", "declarator": "JSON_DT_GEO_SHAPE = \"geo-shape\"", "var_name": "JSON_DT_GEO_SHAPE"}, {"original_string": "private static final Pattern JSON_DATATYPE_PATTERN = Pattern.compile(\"^[a-z\\\\-]+$\");", "modifier": "private static final", "type": "Pattern", "declarator": "JSON_DATATYPE_PATTERN = Pattern.compile(\"^[a-z\\\\-]+$\")", "var_name": "JSON_DATATYPE_PATTERN"}, {"original_string": "private static final Pattern DATATYPE_ID_PATTERN = Pattern.compile(\"^http://wikiba\\\\.se/ontology#([a-zA-Z]+)$\");", "modifier": "private static final", "type": "Pattern", "declarator": "DATATYPE_ID_PATTERN = Pattern.compile(\"^http://wikiba\\\\.se/ontology#([a-zA-Z]+)$\")", "var_name": "DATATYPE_ID_PATTERN"}, {"original_string": "private final String iri;", "modifier": "private final", "type": "String", "declarator": "iri", "var_name": "iri"}], "methods": [{"identifier": "getDatatypeIriFromJsonDatatype", "parameters": "(String jsonDatatype)", "modifiers": "public static", "return": "String", "signature": "String getDatatypeIriFromJsonDatatype(String jsonDatatype)", "full_signature": "public static String getDatatypeIriFromJsonDatatype(String jsonDatatype)", "class_method_signature": "DatatypeIdImpl.getDatatypeIriFromJsonDatatype(String jsonDatatype)", "testcase": false, "constructor": false}, {"identifier": "getJsonDatatypeFromDatatypeIri", "parameters": "(String datatypeIri)", "modifiers": "public static", "return": "String", "signature": "String getJsonDatatypeFromDatatypeIri(String datatypeIri)", "full_signature": "public static String getJsonDatatypeFromDatatypeIri(String datatypeIri)", "class_method_signature": "DatatypeIdImpl.getJsonDatatypeFromDatatypeIri(String datatypeIri)", "testcase": false, "constructor": false}, {"identifier": "DatatypeIdImpl", "parameters": "(DatatypeIdValue other)", "modifiers": "public", "return": "", "signature": " DatatypeIdImpl(DatatypeIdValue other)", "full_signature": "public  DatatypeIdImpl(DatatypeIdValue other)", "class_method_signature": "DatatypeIdImpl.DatatypeIdImpl(DatatypeIdValue other)", "testcase": false, "constructor": true}, {"identifier": "DatatypeIdImpl", "parameters": "(String iri)", "modifiers": "public", "return": "", "signature": " DatatypeIdImpl(String iri)", "full_signature": "public  DatatypeIdImpl(String iri)", "class_method_signature": "DatatypeIdImpl.DatatypeIdImpl(String iri)", "testcase": false, "constructor": true}, {"identifier": "getJsonString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getJsonString()", "full_signature": "public String getJsonString()", "class_method_signature": "DatatypeIdImpl.getJsonString()", "testcase": false, "constructor": false}, {"identifier": "getIri", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getIri()", "full_signature": "@Override public String getIri()", "class_method_signature": "DatatypeIdImpl.getIri()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DatatypeIdImpl.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "DatatypeIdImpl.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DatatypeIdImpl.hashCode()", "testcase": false, "constructor": false}], "file": "wdtk-datamodel/src/main/java/org/wikidata/wdtk/datamodel/implementation/DatatypeIdImpl.java"}, "focal_method": {"identifier": "getJsonDatatypeFromDatatypeIri", "parameters": "(String datatypeIri)", "modifiers": "public static", "return": "String", "body": "public static String getJsonDatatypeFromDatatypeIri(String datatypeIri) {\n\t\tswitch (datatypeIri) {\n\t\t\tcase DatatypeIdValue.DT_ITEM:\n\t\t\t\treturn DatatypeIdImpl.JSON_DT_ITEM;\n\t\t\tcase DatatypeIdValue.DT_GLOBE_COORDINATES:\n\t\t\t\treturn DatatypeIdImpl.JSON_DT_GLOBE_COORDINATES;\n\t\t\tcase DatatypeIdValue.DT_URL:\n\t\t\t\treturn DatatypeIdImpl.JSON_DT_URL;\n\t\t\tcase DatatypeIdValue.DT_COMMONS_MEDIA:\n\t\t\t\treturn DatatypeIdImpl.JSON_DT_COMMONS_MEDIA;\n\t\t\tcase DatatypeIdValue.DT_TIME:\n\t\t\t\treturn DatatypeIdImpl.JSON_DT_TIME;\n\t\t\tcase DatatypeIdValue.DT_QUANTITY:\n\t\t\t\treturn DatatypeIdImpl.JSON_DT_QUANTITY;\n\t\t\tcase DatatypeIdValue.DT_STRING:\n\t\t\t\treturn DatatypeIdImpl.JSON_DT_STRING;\n\t\t\tcase DatatypeIdValue.DT_MONOLINGUAL_TEXT:\n\t\t\t\treturn DatatypeIdImpl.JSON_DT_MONOLINGUAL_TEXT;\n\t\t\tcase DatatypeIdValue.DT_PROPERTY:\n\t\t\t\treturn DatatypeIdImpl.JSON_DT_PROPERTY;\n\t\t\tdefault:\n\t\t\t\t//We apply the reverse algorithm of JacksonDatatypeId::getDatatypeIriFromJsonDatatype\n\t\t\t\tMatcher matcher = DATATYPE_ID_PATTERN.matcher(datatypeIri);\n\t\t\t\tif(!matcher.matches()) {\n\t\t\t\t\tthrow new IllegalArgumentException(\"Unknown datatype: \" + datatypeIri);\n\t\t\t\t}\n\t\t\n\t\t\t\tStringBuilder jsonDatatypeBuilder = new StringBuilder();\n\t\t\t\tfor(char ch : StringUtils.uncapitalize(matcher.group(1)).toCharArray()) {\n\t\t\t\t\tif(Character.isUpperCase(ch)) {\n\t\t\t\t\t\tjsonDatatypeBuilder\n\t\t\t\t\t\t\t\t.append('-')\n\t\t\t\t\t\t\t\t.append(Character.toLowerCase(ch));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tjsonDatatypeBuilder.append(ch);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn jsonDatatypeBuilder.toString();\n\t\t}\n\t}", "signature": "String getJsonDatatypeFromDatatypeIri(String datatypeIri)", "full_signature": "public static String getJsonDatatypeFromDatatypeIri(String datatypeIri)", "class_method_signature": "DatatypeIdImpl.getJsonDatatypeFromDatatypeIri(String datatypeIri)", "testcase": false, "constructor": false, "invocations": ["matcher", "matches", "toCharArray", "uncapitalize", "group", "isUpperCase", "append", "append", "toLowerCase", "append", "toString"]}, "repository": {"repo_id": 16144428, "url": "https://github.com/Wikidata/Wikidata-Toolkit", "language": "Java", "is_fork": false, "fork_count": 80, "stargazer_count": 264, "size": 11241, "license": "licensed"}}