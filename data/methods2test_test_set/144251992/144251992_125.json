{"test_class": {"identifier": "MailUserAccessEventHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PROJECT_BOARD_URL = \"http://localhost:4200/\";", "modifier": "private static final", "type": "String", "declarator": "PROJECT_BOARD_URL = \"http://localhost:4200/\"", "var_name": "PROJECT_BOARD_URL"}, {"original_string": "@Mock\n    private MailSenderAdapter mailSenderAdapterMock;", "modifier": "@Mock\n    private", "type": "MailSenderAdapter", "declarator": "mailSenderAdapterMock", "var_name": "mailSenderAdapterMock"}, {"original_string": "@Mock\n    private UserService userServiceMock;", "modifier": "@Mock\n    private", "type": "UserService", "declarator": "userServiceMock", "var_name": "userServiceMock"}, {"original_string": "@Mock\n    private VelocityMailTemplateService velocityMailTemplateServiceMock;", "modifier": "@Mock\n    private", "type": "VelocityMailTemplateService", "declarator": "velocityMailTemplateServiceMock", "var_name": "velocityMailTemplateServiceMock"}, {"original_string": "@Mock\n    private ProjectBoardConfigurationProperties configurationPropertiesMock;", "modifier": "@Mock\n    private", "type": "ProjectBoardConfigurationProperties", "declarator": "configurationPropertiesMock", "var_name": "configurationPropertiesMock"}, {"original_string": "@Mock\n    private User userMock;", "modifier": "@Mock\n    private", "type": "User", "declarator": "userMock", "var_name": "userMock"}, {"original_string": "@Mock\n    private UserData userDataMock;", "modifier": "@Mock\n    private", "type": "UserData", "declarator": "userDataMock", "var_name": "userDataMock"}, {"original_string": "@Mock\n    private AccessInterval accessIntervalMock;", "modifier": "@Mock\n    private", "type": "AccessInterval", "declarator": "accessIntervalMock", "var_name": "accessIntervalMock"}, {"original_string": "private MailUserAccessEventHandler mailUserAccessEventHandler;", "modifier": "private", "type": "MailUserAccessEventHandler", "declarator": "mailUserAccessEventHandler", "var_name": "mailUserAccessEventHandler"}], "file": "backend/project-board/src/test/java/de/adesso/projectboard/adapter/mail/handler/MailUserAccessEventHandlerTest.java"}, "test_case": {"identifier": "getContextMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getContextMap() {\n        // given\n        var newDateTime = LocalDateTime.now();\n        var formattedNewEndDateTime = newDateTime.format(MailUserAccessEventHandler.DATE_TIME_FORMATTER);\n        var expectedContextMap = Map.of(\n            \"userData\", userDataMock,\n            \"newDate\", formattedNewEndDateTime,\n            \"projectBoardUrl\", PROJECT_BOARD_URL\n        );\n\n        given(userServiceMock.getUserData(userMock)).willReturn(userDataMock);\n\n        // when\n        var actualContextMap = mailUserAccessEventHandler.getContextMap(userMock, newDateTime);\n\n        // then\n        assertThat(actualContextMap).isEqualTo(expectedContextMap);\n    }", "signature": "void getContextMap()", "full_signature": "@Test public void getContextMap()", "class_method_signature": "MailUserAccessEventHandlerTest.getContextMap()", "testcase": true, "constructor": false, "invocations": ["now", "format", "of", "willReturn", "given", "getUserData", "getContextMap", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "MailUserAccessEventHandler", "superclass": "", "interfaces": "implements UserAccessEventHandler", "fields": [{"original_string": "static final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern(\"dd.MM.yyyy\");", "modifier": "static final", "type": "DateTimeFormatter", "declarator": "DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern(\"dd.MM.yyyy\")", "var_name": "DATE_TIME_FORMATTER"}, {"original_string": "private final MailSenderAdapter mailSenderAdapter;", "modifier": "private final", "type": "MailSenderAdapter", "declarator": "mailSenderAdapter", "var_name": "mailSenderAdapter"}, {"original_string": "private final UserService userService;", "modifier": "private final", "type": "UserService", "declarator": "userService", "var_name": "userService"}, {"original_string": "private final VelocityMailTemplateService velocityMailTemplateService;", "modifier": "private final", "type": "VelocityMailTemplateService", "declarator": "velocityMailTemplateService", "var_name": "velocityMailTemplateService"}, {"original_string": "private final String projectBoardUrl;", "modifier": "private final", "type": "String", "declarator": "projectBoardUrl", "var_name": "projectBoardUrl"}], "methods": [{"identifier": "MailUserAccessEventHandler", "parameters": "(MailSenderAdapter mailSenderAdapter,\n                                      UserService userService,\n                                      VelocityMailTemplateService velocityMailTemplateService,\n                                      ProjectBoardConfigurationProperties configurationProperties)", "modifiers": "public", "return": "", "signature": " MailUserAccessEventHandler(MailSenderAdapter mailSenderAdapter,\n                                      UserService userService,\n                                      VelocityMailTemplateService velocityMailTemplateService,\n                                      ProjectBoardConfigurationProperties configurationProperties)", "full_signature": "public  MailUserAccessEventHandler(MailSenderAdapter mailSenderAdapter,\n                                      UserService userService,\n                                      VelocityMailTemplateService velocityMailTemplateService,\n                                      ProjectBoardConfigurationProperties configurationProperties)", "class_method_signature": "MailUserAccessEventHandler.MailUserAccessEventHandler(MailSenderAdapter mailSenderAdapter,\n                                      UserService userService,\n                                      VelocityMailTemplateService velocityMailTemplateService,\n                                      ProjectBoardConfigurationProperties configurationProperties)", "testcase": false, "constructor": true}, {"identifier": "onAccessCreated", "parameters": "(User user, AccessInterval accessInterval)", "modifiers": "@Override public", "return": "void", "signature": "void onAccessCreated(User user, AccessInterval accessInterval)", "full_signature": "@Override public void onAccessCreated(User user, AccessInterval accessInterval)", "class_method_signature": "MailUserAccessEventHandler.onAccessCreated(User user, AccessInterval accessInterval)", "testcase": false, "constructor": false}, {"identifier": "onAccessChanged", "parameters": "(User user, AccessInterval accessInterval, LocalDateTime previousEndTime)", "modifiers": "@Override public", "return": "void", "signature": "void onAccessChanged(User user, AccessInterval accessInterval, LocalDateTime previousEndTime)", "full_signature": "@Override public void onAccessChanged(User user, AccessInterval accessInterval, LocalDateTime previousEndTime)", "class_method_signature": "MailUserAccessEventHandler.onAccessChanged(User user, AccessInterval accessInterval, LocalDateTime previousEndTime)", "testcase": false, "constructor": false}, {"identifier": "onAccessRevoked", "parameters": "(User user, LocalDateTime previousEndTime)", "modifiers": "@Override public", "return": "void", "signature": "void onAccessRevoked(User user, LocalDateTime previousEndTime)", "full_signature": "@Override public void onAccessRevoked(User user, LocalDateTime previousEndTime)", "class_method_signature": "MailUserAccessEventHandler.onAccessRevoked(User user, LocalDateTime previousEndTime)", "testcase": false, "constructor": false}, {"identifier": "getContextMap", "parameters": "(User user, LocalDateTime newEndTime)", "modifiers": "", "return": "Map<String, Object>", "signature": "Map<String, Object> getContextMap(User user, LocalDateTime newEndTime)", "full_signature": " Map<String, Object> getContextMap(User user, LocalDateTime newEndTime)", "class_method_signature": "MailUserAccessEventHandler.getContextMap(User user, LocalDateTime newEndTime)", "testcase": false, "constructor": false}, {"identifier": "getTemplatePathAccessChanged", "parameters": "(LocalDateTime newEndTime, LocalDateTime previousEndTime)", "modifiers": "", "return": "String", "signature": "String getTemplatePathAccessChanged(LocalDateTime newEndTime, LocalDateTime previousEndTime)", "full_signature": " String getTemplatePathAccessChanged(LocalDateTime newEndTime, LocalDateTime previousEndTime)", "class_method_signature": "MailUserAccessEventHandler.getTemplatePathAccessChanged(LocalDateTime newEndTime, LocalDateTime previousEndTime)", "testcase": false, "constructor": false}], "file": "backend/project-board/src/main/java/de/adesso/projectboard/adapter/mail/handler/MailUserAccessEventHandler.java"}, "focal_method": {"identifier": "getContextMap", "parameters": "(User user, LocalDateTime newEndTime)", "modifiers": "", "return": "Map<String, Object>", "body": "Map<String, Object> getContextMap(User user, LocalDateTime newEndTime) {\n        var newDateAndTime = newEndTime.format(DATE_TIME_FORMATTER);\n        var userData = userService.getUserData(user);\n\n        return Map.of(\n                \"userData\", userData,\n                \"newDate\", newDateAndTime,\n                \"projectBoardUrl\", projectBoardUrl\n        );\n    }", "signature": "Map<String, Object> getContextMap(User user, LocalDateTime newEndTime)", "full_signature": " Map<String, Object> getContextMap(User user, LocalDateTime newEndTime)", "class_method_signature": "MailUserAccessEventHandler.getContextMap(User user, LocalDateTime newEndTime)", "testcase": false, "constructor": false, "invocations": ["format", "getUserData", "of"]}, "repository": {"repo_id": 144251992, "url": "https://github.com/adessoAG/project-board", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 2608, "license": "licensed"}}