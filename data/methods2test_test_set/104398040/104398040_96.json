{"test_class": {"identifier": "MoveDirectoryTest", "superclass": "extends TransformationUtilityTestHelper", "interfaces": "", "fields": [], "file": "butterfly-utilities/src/test/java/com/paypal/butterfly/utilities/operations/file/MoveDirectoryTest.java"}, "test_case": {"identifier": "nonExistentFromFolderTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void nonExistentFromFolderTest() {\n        Mockito.when(transformationContext.get(\"ATT\")).thenReturn(new File(transformedAppFolder, \"/src/main/resources\"));\n        MoveDirectory moveDirectory = new MoveDirectory().relative(\"nonExistentFolder\").setToAbsolute(\"ATT\", \"blah\");\n        TOExecutionResult executionResult = moveDirectory.execution(transformedAppFolder, transformationContext);\n\n        assertEquals(moveDirectory.getToAbsoluteAttribute(), \"ATT\");\n        assertEquals(executionResult.getType(), TOExecutionResult.Type.ERROR);\n        assertEquals(executionResult.getException().getClass(), TransformationOperationException.class);\n        assertEquals(executionResult.getException().getMessage(), \"Directory could not be moved\");\n        assertEquals(executionResult.getException().getCause().getMessage(), \"Source '\" + new File(transformedAppFolder, \"nonExistentFolder\").getAbsolutePath() + \"' does not exist\");\n        assertEquals(moveDirectory.getDescription(), \"Move a directory from nonExistentFolder to the location defined by transformation context attribute ATT\");\n        assertNull(executionResult.getDetails());\n    }", "signature": "void nonExistentFromFolderTest()", "full_signature": "@Test public void nonExistentFromFolderTest()", "class_method_signature": "MoveDirectoryTest.nonExistentFromFolderTest()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "get", "setToAbsolute", "relative", "execution", "assertEquals", "getToAbsoluteAttribute", "assertEquals", "getType", "assertEquals", "getClass", "getException", "assertEquals", "getMessage", "getException", "assertEquals", "getMessage", "getCause", "getException", "getAbsolutePath", "assertEquals", "getDescription", "assertNull", "getDetails"]}, "focal_class": {"identifier": "MoveDirectory", "superclass": "extends AbstractToOperation<MoveDirectory>", "interfaces": "", "fields": [{"original_string": "private static final String DESCRIPTION = \"Move a directory from %s to %s\";", "modifier": "private static final", "type": "String", "declarator": "DESCRIPTION = \"Move a directory from %s to %s\"", "var_name": "DESCRIPTION"}], "methods": [{"identifier": "MoveDirectory", "parameters": "()", "modifiers": "public", "return": "", "signature": " MoveDirectory()", "full_signature": "public  MoveDirectory()", "class_method_signature": "MoveDirectory.MoveDirectory()", "testcase": false, "constructor": true}, {"identifier": "execution", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "@Override protected", "return": "TOExecutionResult", "signature": "TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "@Override protected TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "MoveDirectory.execution(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false}], "file": "butterfly-utilities/src/main/java/com/paypal/butterfly/utilities/operations/file/MoveDirectory.java"}, "focal_method": {"identifier": "execution", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "@Override protected", "return": "TOExecutionResult", "body": "@Override\n    protected TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext) {\n        // TODO Validation must be done here!!! In case none has been set!\n        File filesFrom = getAbsoluteFile(transformedAppFolder, transformationContext);\n        File fileTo = getFileTo(transformedAppFolder, transformationContext);\n        TOExecutionResult result = null;\n\n        try {\n            FileUtils.moveDirectory(filesFrom, fileTo);\n            String details = String.format(\"Directory '%s' has been moved to '%s'\", getRelativePath(transformedAppFolder, filesFrom), getRelativePath(transformedAppFolder, fileTo));\n            result = TOExecutionResult.success(this, details);\n        } catch (IOException e) {\n            result = TOExecutionResult.error(this, new TransformationOperationException(\"Directory could not be moved\", e));\n        }\n\n        return result;\n    }", "signature": "TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "@Override protected TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "MoveDirectory.execution(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false, "invocations": ["getAbsoluteFile", "getFileTo", "moveDirectory", "format", "getRelativePath", "getRelativePath", "success", "error"]}, "repository": {"repo_id": 104398040, "url": "https://github.com/paypal/butterfly", "language": "Java", "is_fork": false, "fork_count": 42, "stargazer_count": 26, "size": 6906, "license": "licensed"}}