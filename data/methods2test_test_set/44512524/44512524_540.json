{"test_class": {"identifier": "KMinValuesTest", "superclass": "", "interfaces": "", "fields": [], "file": "ml/streaminer/src/test/java/org/streaminer/stream/cardinality/KMinValuesTest.java"}, "test_case": {"identifier": "testOffer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOffer() {\n        System.out.println(\"offer\");\n        KMinValues instance = new KMinValues(20);\n        \n        System.out.println(\"Approx.\\tReal\");\n        for (int i=0; i<100; i++) {\n            instance.offer(String.valueOf(i));\n            System.out.println(instance.cardinality() + \"\\t\" + (i+1));\n        }\n    }", "signature": "void testOffer()", "full_signature": "@Test public void testOffer()", "class_method_signature": "KMinValuesTest.testOffer()", "testcase": true, "constructor": false, "invocations": ["println", "println", "offer", "valueOf", "println", "cardinality"]}, "focal_class": {"identifier": "KMinValues", "superclass": "", "interfaces": "implements IBaseCardinality", "fields": [{"original_string": "private TreeSet<Integer> kMin;", "modifier": "private", "type": "TreeSet<Integer>", "declarator": "kMin", "var_name": "kMin"}, {"original_string": "private int k;", "modifier": "private", "type": "int", "declarator": "k", "var_name": "k"}, {"original_string": "private Hash hasher;", "modifier": "private", "type": "Hash", "declarator": "hasher", "var_name": "hasher"}], "methods": [{"identifier": "KMinValues", "parameters": "(int k)", "modifiers": "public", "return": "", "signature": " KMinValues(int k)", "full_signature": "public  KMinValues(int k)", "class_method_signature": "KMinValues.KMinValues(int k)", "testcase": false, "constructor": true}, {"identifier": "KMinValues", "parameters": "(int k, Hash hasher)", "modifiers": "public", "return": "", "signature": " KMinValues(int k, Hash hasher)", "full_signature": "public  KMinValues(int k, Hash hasher)", "class_method_signature": "KMinValues.KMinValues(int k, Hash hasher)", "testcase": false, "constructor": true}, {"identifier": "offer", "parameters": "(Object key)", "modifiers": "public", "return": "boolean", "signature": "boolean offer(Object key)", "full_signature": "public boolean offer(Object key)", "class_method_signature": "KMinValues.offer(Object key)", "testcase": false, "constructor": false}, {"identifier": "cardinality", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long cardinality()", "full_signature": "public long cardinality()", "class_method_signature": "KMinValues.cardinality()", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(KMinValues... others)", "modifiers": "public", "return": "void", "signature": "void union(KMinValues... others)", "full_signature": "public void union(KMinValues... others)", "class_method_signature": "KMinValues.union(KMinValues... others)", "testcase": false, "constructor": false}, {"identifier": "jaccard", "parameters": "(KMinValues other)", "modifiers": "public", "return": "double", "signature": "double jaccard(KMinValues other)", "full_signature": "public double jaccard(KMinValues other)", "class_method_signature": "KMinValues.jaccard(KMinValues other)", "testcase": false, "constructor": false}, {"identifier": "cardinalityUnion", "parameters": "(KMinValues... others)", "modifiers": "public", "return": "double", "signature": "double cardinalityUnion(KMinValues... others)", "full_signature": "public double cardinalityUnion(KMinValues... others)", "class_method_signature": "KMinValues.cardinalityUnion(KMinValues... others)", "testcase": false, "constructor": false}, {"identifier": "cardHelp", "parameters": "(TreeSet<Integer> kMin, int k)", "modifiers": "private", "return": "double", "signature": "double cardHelp(TreeSet<Integer> kMin, int k)", "full_signature": "private double cardHelp(TreeSet<Integer> kMin, int k)", "class_method_signature": "KMinValues.cardHelp(TreeSet<Integer> kMin, int k)", "testcase": false, "constructor": false}, {"identifier": "inAll", "parameters": "(int item, KMinValues... others)", "modifiers": "private", "return": "boolean", "signature": "boolean inAll(int item, KMinValues... others)", "full_signature": "private boolean inAll(int item, KMinValues... others)", "class_method_signature": "KMinValues.inAll(int item, KMinValues... others)", "testcase": false, "constructor": false}, {"identifier": "directSum", "parameters": "(KMinValues... others)", "modifiers": "private", "return": "DirectSum", "signature": "DirectSum directSum(KMinValues... others)", "full_signature": "private DirectSum directSum(KMinValues... others)", "class_method_signature": "KMinValues.directSum(KMinValues... others)", "testcase": false, "constructor": false}, {"identifier": "smallestK", "parameters": "(KMinValues... others)", "modifiers": "private", "return": "int", "signature": "int smallestK(KMinValues... others)", "full_signature": "private int smallestK(KMinValues... others)", "class_method_signature": "KMinValues.smallestK(KMinValues... others)", "testcase": false, "constructor": false}, {"identifier": "index", "parameters": "(Object key)", "modifiers": "private", "return": "int", "signature": "int index(Object key)", "full_signature": "private int index(Object key)", "class_method_signature": "KMinValues.index(Object key)", "testcase": false, "constructor": false}], "file": "ml/streaminer/src/main/java/org/streaminer/stream/cardinality/KMinValues.java"}, "focal_method": {"identifier": "offer", "parameters": "(Object key)", "modifiers": "public", "return": "boolean", "body": "public boolean offer(Object key) {\n        int idx = index(key);\n        \n        if (kMin.size() < k) {\n            if (!kMin.contains(idx)) {\n                kMin.add(idx);\n                return true;\n            }\n        } else {\n            if (idx < kMin.last())\n                if (!kMin.contains(idx)) {\n                    kMin.pollLast();\n                    kMin.add(idx);\n                    return true;\n                }\n        }\n        \n        return false;\n    }", "signature": "boolean offer(Object key)", "full_signature": "public boolean offer(Object key)", "class_method_signature": "KMinValues.offer(Object key)", "testcase": false, "constructor": false, "invocations": ["index", "size", "contains", "add", "last", "contains", "pollLast", "add"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}