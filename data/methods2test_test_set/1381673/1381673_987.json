{"test_class": {"identifier": "ReaderResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final static Charset[] availableCharsets = Charset.availableCharsets()\n            .values().toArray(new Charset[] {});", "modifier": "final static", "type": "Charset[]", "declarator": "availableCharsets = Charset.availableCharsets()\n            .values().toArray(new Charset[] {})", "var_name": "availableCharsets"}], "file": "drools-core/src/test/java/org/drools/core/io/impl/ReaderResourceTest.java"}, "test_case": {"identifier": "defaultEncodingInitialization", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void defaultEncodingInitialization()\n            throws UnsupportedEncodingException {\n        // setup: any default encoding\n        final String anyEncoding = availableCharsets[0].name();\n        final InputStream istream = new ByteArrayInputStream(new byte[] {});\n        InputStreamReader ireader = new InputStreamReader(istream, anyEncoding);\n        // test\n        ReaderResource iresource = new ReaderResource(ireader, null, null);\n        // assert\n        assertEquals(ireader.getEncoding(), iresource.getEncoding());\n\n        // setup: different default encoding to prove source\n        final String differentEncoding = availableCharsets[1].name();\n        ireader = new InputStreamReader(istream, differentEncoding);\n        // test\n        iresource = new ReaderResource(ireader, null, null);\n        // assert\n        assertEquals(ireader.getEncoding(), iresource.getEncoding());\n    }", "signature": "void defaultEncodingInitialization()", "full_signature": "@Test public void defaultEncodingInitialization()", "class_method_signature": "ReaderResourceTest.defaultEncodingInitialization()", "testcase": true, "constructor": false, "invocations": ["name", "assertEquals", "getEncoding", "getEncoding", "name", "assertEquals", "getEncoding", "getEncoding"]}, "focal_class": {"identifier": "ReaderResource", "superclass": "extends BaseResource", "interfaces": "implements InternalResource", "fields": [{"original_string": "private static final long serialVersionUID = -2554750160404141191L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -2554750160404141191L", "var_name": "serialVersionUID"}, {"original_string": "private transient Reader reader;", "modifier": "private transient", "type": "Reader", "declarator": "reader", "var_name": "reader"}, {"original_string": "private String encoding;", "modifier": "private", "type": "String", "declarator": "encoding", "var_name": "encoding"}], "methods": [{"identifier": "ReaderResource", "parameters": "()", "modifiers": "public", "return": "", "signature": " ReaderResource()", "full_signature": "public  ReaderResource()", "class_method_signature": "ReaderResource.ReaderResource()", "testcase": false, "constructor": true}, {"identifier": "ReaderResource", "parameters": "(Reader reader)", "modifiers": "public", "return": "", "signature": " ReaderResource(Reader reader)", "full_signature": "public  ReaderResource(Reader reader)", "class_method_signature": "ReaderResource.ReaderResource(Reader reader)", "testcase": false, "constructor": true}, {"identifier": "ReaderResource", "parameters": "(Reader reader, ResourceType type )", "modifiers": "public", "return": "", "signature": " ReaderResource(Reader reader, ResourceType type )", "full_signature": "public  ReaderResource(Reader reader, ResourceType type )", "class_method_signature": "ReaderResource.ReaderResource(Reader reader, ResourceType type )", "testcase": false, "constructor": true}, {"identifier": "ReaderResource", "parameters": "(Reader reader, String encoding)", "modifiers": "public", "return": "", "signature": " ReaderResource(Reader reader, String encoding)", "full_signature": "public  ReaderResource(Reader reader, String encoding)", "class_method_signature": "ReaderResource.ReaderResource(Reader reader, String encoding)", "testcase": false, "constructor": true}, {"identifier": "ReaderResource", "parameters": "(Reader reader, String encoding, ResourceType type )", "modifiers": "public", "return": "", "signature": " ReaderResource(Reader reader, String encoding, ResourceType type )", "full_signature": "public  ReaderResource(Reader reader, String encoding, ResourceType type )", "class_method_signature": "ReaderResource.ReaderResource(Reader reader, String encoding, ResourceType type )", "testcase": false, "constructor": true}, {"identifier": "getURL", "parameters": "()", "modifiers": "public", "return": "URL", "signature": "URL getURL()", "full_signature": "public URL getURL()", "class_method_signature": "ReaderResource.getURL()", "testcase": false, "constructor": false}, {"identifier": "getInputStream", "parameters": "()", "modifiers": "public", "return": "InputStream", "signature": "InputStream getInputStream()", "full_signature": "public InputStream getInputStream()", "class_method_signature": "ReaderResource.getInputStream()", "testcase": false, "constructor": false}, {"identifier": "getReader", "parameters": "()", "modifiers": "public", "return": "Reader", "signature": "Reader getReader()", "full_signature": "public Reader getReader()", "class_method_signature": "ReaderResource.getReader()", "testcase": false, "constructor": false}, {"identifier": "getEncoding", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEncoding()", "full_signature": "public String getEncoding()", "class_method_signature": "ReaderResource.getEncoding()", "testcase": false, "constructor": false}, {"identifier": "isDirectory", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDirectory()", "full_signature": "public boolean isDirectory()", "class_method_signature": "ReaderResource.isDirectory()", "testcase": false, "constructor": false}, {"identifier": "listResources", "parameters": "()", "modifiers": "public", "return": "Collection<Resource>", "signature": "Collection<Resource> listResources()", "full_signature": "public Collection<Resource> listResources()", "class_method_signature": "ReaderResource.listResources()", "testcase": false, "constructor": false}, {"identifier": "hasURL", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasURL()", "full_signature": "public boolean hasURL()", "class_method_signature": "ReaderResource.hasURL()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "ReaderResource.toString()", "testcase": false, "constructor": false}], "file": "drools-core/src/main/java/org/drools/core/io/impl/ReaderResource.java"}, "focal_method": {"identifier": "getEncoding", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getEncoding() {\n        return this.encoding;\n    }", "signature": "String getEncoding()", "full_signature": "public String getEncoding()", "class_method_signature": "ReaderResource.getEncoding()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}