{"test_class": {"identifier": "StorageUnitNotificationRegistrationRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private StorageUnitNotificationRegistrationRestController storageUnitNotificationRegistrationRestController;", "modifier": "@InjectMocks\n    private", "type": "StorageUnitNotificationRegistrationRestController", "declarator": "storageUnitNotificationRegistrationRestController", "var_name": "storageUnitNotificationRegistrationRestController"}, {"original_string": "@Mock\n    private StorageUnitNotificationRegistrationService storageUnitNotificationRegistrationService;", "modifier": "@Mock\n    private", "type": "StorageUnitNotificationRegistrationService", "declarator": "storageUnitNotificationRegistrationService", "var_name": "storageUnitNotificationRegistrationService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/StorageUnitNotificationRegistrationRestControllerTest.java"}, "test_case": {"identifier": "testUpdateStorageUnitNotificationRegistration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUpdateStorageUnitNotificationRegistration()\n    {\n        NotificationRegistrationKey notificationRegistrationKey = new NotificationRegistrationKey(NAMESPACE, NOTIFICATION_NAME);\n\n        StorageUnitNotificationRegistration storageUnitNotificationRegistration = new StorageUnitNotificationRegistration(ID, notificationRegistrationKey,\n            NotificationEventTypeEntity.EventTypesStorageUnit.STRGE_UNIT_STTS_CHG.name(),\n            new StorageUnitNotificationFilter(BDEF_NAMESPACE_2, BDEF_NAME_2, FORMAT_USAGE_CODE_2, FORMAT_FILE_TYPE_CODE_2, FORMAT_VERSION_2, STORAGE_NAME_2,\n                STORAGE_UNIT_STATUS_3, STORAGE_UNIT_STATUS_4), notificationRegistrationDaoTestHelper.getTestJobActions2(),\n            NotificationRegistrationStatusEntity.DISABLED);\n\n\n        StorageUnitNotificationRegistrationUpdateRequest request =\n            new StorageUnitNotificationRegistrationUpdateRequest(NotificationEventTypeEntity.EventTypesStorageUnit.STRGE_UNIT_STTS_CHG.name(),\n                new StorageUnitNotificationFilter(BDEF_NAMESPACE_2, BDEF_NAME_2, FORMAT_USAGE_CODE_2, FORMAT_FILE_TYPE_CODE_2, FORMAT_VERSION_2, STORAGE_NAME_2,\n                    STORAGE_UNIT_STATUS_3, STORAGE_UNIT_STATUS_4), notificationRegistrationDaoTestHelper.getTestJobActions2(),\n                NotificationRegistrationStatusEntity.DISABLED);\n\n        when(storageUnitNotificationRegistrationService.updateStorageUnitNotificationRegistration(notificationRegistrationKey, request))\n            .thenReturn(storageUnitNotificationRegistration);\n\n\n        // Update the business object data notification registration.\n        StorageUnitNotificationRegistration resultStorageUnitNotificationRegistration =\n            storageUnitNotificationRegistrationRestController.updateStorageUnitNotificationRegistration(NAMESPACE, NOTIFICATION_NAME, request);\n\n        // Verify the external calls.\n        verify(storageUnitNotificationRegistrationService).updateStorageUnitNotificationRegistration(notificationRegistrationKey, request);\n        verifyNoMoreInteractions(storageUnitNotificationRegistrationService);\n\n        // Validate the returned object.\n        assertEquals(storageUnitNotificationRegistration, resultStorageUnitNotificationRegistration);\n\n    }", "signature": "void testUpdateStorageUnitNotificationRegistration()", "full_signature": "@Test public void testUpdateStorageUnitNotificationRegistration()", "class_method_signature": "StorageUnitNotificationRegistrationRestControllerTest.testUpdateStorageUnitNotificationRegistration()", "testcase": true, "constructor": false, "invocations": ["name", "getTestJobActions2", "name", "getTestJobActions2", "thenReturn", "when", "updateStorageUnitNotificationRegistration", "updateStorageUnitNotificationRegistration", "updateStorageUnitNotificationRegistration", "verify", "verifyNoMoreInteractions", "assertEquals"]}, "focal_class": {"identifier": "StorageUnitNotificationRegistrationRestController", "superclass": "extends HerdBaseController", "interfaces": "", "fields": [{"original_string": "public static final String STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX = \"/notificationRegistrations/storageUnitNotificationRegistrations\";", "modifier": "public static final", "type": "String", "declarator": "STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX = \"/notificationRegistrations/storageUnitNotificationRegistrations\"", "var_name": "STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX"}, {"original_string": "@Autowired\n    private StorageUnitNotificationRegistrationService storageUnitNotificationRegistrationService;", "modifier": "@Autowired\n    private", "type": "StorageUnitNotificationRegistrationService", "declarator": "storageUnitNotificationRegistrationService", "var_name": "storageUnitNotificationRegistrationService"}], "methods": [{"identifier": "createStorageUnitNotificationRegistration", "parameters": "(@RequestBody StorageUnitNotificationRegistrationCreateRequest request)", "modifiers": "@RequestMapping(value = STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_STORAGE_UNIT_NOTIFICATION_REGISTRATIONS_POST) public", "return": "StorageUnitNotificationRegistration", "signature": "StorageUnitNotificationRegistration createStorageUnitNotificationRegistration(@RequestBody StorageUnitNotificationRegistrationCreateRequest request)", "full_signature": "@RequestMapping(value = STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_STORAGE_UNIT_NOTIFICATION_REGISTRATIONS_POST) public StorageUnitNotificationRegistration createStorageUnitNotificationRegistration(@RequestBody StorageUnitNotificationRegistrationCreateRequest request)", "class_method_signature": "StorageUnitNotificationRegistrationRestController.createStorageUnitNotificationRegistration(@RequestBody StorageUnitNotificationRegistrationCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "deleteStorageUnitNotification", "parameters": "(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName)", "modifiers": "@RequestMapping(value = STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX + \"/namespaces/{namespace}/notificationNames/{notificationName}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_STORAGE_UNIT_NOTIFICATION_REGISTRATIONS_DELETE) public", "return": "StorageUnitNotificationRegistration", "signature": "StorageUnitNotificationRegistration deleteStorageUnitNotification(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName)", "full_signature": "@RequestMapping(value = STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX + \"/namespaces/{namespace}/notificationNames/{notificationName}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_STORAGE_UNIT_NOTIFICATION_REGISTRATIONS_DELETE) public StorageUnitNotificationRegistration deleteStorageUnitNotification(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName)", "class_method_signature": "StorageUnitNotificationRegistrationRestController.deleteStorageUnitNotification(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName)", "testcase": false, "constructor": false}, {"identifier": "getStorageUnitNotificationRegistration", "parameters": "(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName)", "modifiers": "@RequestMapping(value = STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX + \"/namespaces/{namespace}/notificationNames/{notificationName}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_STORAGE_UNIT_NOTIFICATION_REGISTRATIONS_GET) public", "return": "StorageUnitNotificationRegistration", "signature": "StorageUnitNotificationRegistration getStorageUnitNotificationRegistration(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName)", "full_signature": "@RequestMapping(value = STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX + \"/namespaces/{namespace}/notificationNames/{notificationName}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_STORAGE_UNIT_NOTIFICATION_REGISTRATIONS_GET) public StorageUnitNotificationRegistration getStorageUnitNotificationRegistration(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName)", "class_method_signature": "StorageUnitNotificationRegistrationRestController.getStorageUnitNotificationRegistration(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName)", "testcase": false, "constructor": false}, {"identifier": "getStorageUnitNotificationRegistrationsByNamespace", "parameters": "(@PathVariable(\"namespace\") String namespace)", "modifiers": "@RequestMapping(value = STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX + \"/namespaces/{namespace}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_STORAGE_UNIT_NOTIFICATION_REGISTRATIONS_BY_NAMESPACE_GET) public", "return": "StorageUnitNotificationRegistrationKeys", "signature": "StorageUnitNotificationRegistrationKeys getStorageUnitNotificationRegistrationsByNamespace(@PathVariable(\"namespace\") String namespace)", "full_signature": "@RequestMapping(value = STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX + \"/namespaces/{namespace}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_STORAGE_UNIT_NOTIFICATION_REGISTRATIONS_BY_NAMESPACE_GET) public StorageUnitNotificationRegistrationKeys getStorageUnitNotificationRegistrationsByNamespace(@PathVariable(\"namespace\") String namespace)", "class_method_signature": "StorageUnitNotificationRegistrationRestController.getStorageUnitNotificationRegistrationsByNamespace(@PathVariable(\"namespace\") String namespace)", "testcase": false, "constructor": false}, {"identifier": "getStorageUnitNotificationRegistrationsByNotificationFilter", "parameters": "(\n        @RequestParam(value = \"businessObjectDefinitionNamespace\", required = true) String businessObjectDefinitionNamespace,\n        @RequestParam(value = \"businessObjectDefinitionName\", required = true) String businessObjectDefinitionName,\n        @RequestParam(value = \"businessObjectFormatUsage\", required = false) String businessObjectFormatUsage,\n        @RequestParam(value = \"businessObjectFormatFileType\", required = false) String businessObjectFormatFileType, ServletRequest servletRequest)", "modifiers": "@RequestMapping(value = STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_STORAGE_UNIT_NOTIFICATION_REGISTRATIONS_BY_NOTIFICATION_FILTER_GET) public", "return": "StorageUnitNotificationRegistrationKeys", "signature": "StorageUnitNotificationRegistrationKeys getStorageUnitNotificationRegistrationsByNotificationFilter(\n        @RequestParam(value = \"businessObjectDefinitionNamespace\", required = true) String businessObjectDefinitionNamespace,\n        @RequestParam(value = \"businessObjectDefinitionName\", required = true) String businessObjectDefinitionName,\n        @RequestParam(value = \"businessObjectFormatUsage\", required = false) String businessObjectFormatUsage,\n        @RequestParam(value = \"businessObjectFormatFileType\", required = false) String businessObjectFormatFileType, ServletRequest servletRequest)", "full_signature": "@RequestMapping(value = STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_STORAGE_UNIT_NOTIFICATION_REGISTRATIONS_BY_NOTIFICATION_FILTER_GET) public StorageUnitNotificationRegistrationKeys getStorageUnitNotificationRegistrationsByNotificationFilter(\n        @RequestParam(value = \"businessObjectDefinitionNamespace\", required = true) String businessObjectDefinitionNamespace,\n        @RequestParam(value = \"businessObjectDefinitionName\", required = true) String businessObjectDefinitionName,\n        @RequestParam(value = \"businessObjectFormatUsage\", required = false) String businessObjectFormatUsage,\n        @RequestParam(value = \"businessObjectFormatFileType\", required = false) String businessObjectFormatFileType, ServletRequest servletRequest)", "class_method_signature": "StorageUnitNotificationRegistrationRestController.getStorageUnitNotificationRegistrationsByNotificationFilter(\n        @RequestParam(value = \"businessObjectDefinitionNamespace\", required = true) String businessObjectDefinitionNamespace,\n        @RequestParam(value = \"businessObjectDefinitionName\", required = true) String businessObjectDefinitionName,\n        @RequestParam(value = \"businessObjectFormatUsage\", required = false) String businessObjectFormatUsage,\n        @RequestParam(value = \"businessObjectFormatFileType\", required = false) String businessObjectFormatFileType, ServletRequest servletRequest)", "testcase": false, "constructor": false}, {"identifier": "updateStorageUnitNotificationRegistration", "parameters": "(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName, @RequestBody StorageUnitNotificationRegistrationUpdateRequest request)", "modifiers": "@RequestMapping(value = STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX + \"/namespaces/{namespace}/notificationNames/{notificationName}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_STORAGE_UNIT_NOTIFICATION_REGISTRATIONS_PUT) public", "return": "StorageUnitNotificationRegistration", "signature": "StorageUnitNotificationRegistration updateStorageUnitNotificationRegistration(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName, @RequestBody StorageUnitNotificationRegistrationUpdateRequest request)", "full_signature": "@RequestMapping(value = STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX + \"/namespaces/{namespace}/notificationNames/{notificationName}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_STORAGE_UNIT_NOTIFICATION_REGISTRATIONS_PUT) public StorageUnitNotificationRegistration updateStorageUnitNotificationRegistration(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName, @RequestBody StorageUnitNotificationRegistrationUpdateRequest request)", "class_method_signature": "StorageUnitNotificationRegistrationRestController.updateStorageUnitNotificationRegistration(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName, @RequestBody StorageUnitNotificationRegistrationUpdateRequest request)", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/StorageUnitNotificationRegistrationRestController.java"}, "focal_method": {"identifier": "updateStorageUnitNotificationRegistration", "parameters": "(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName, @RequestBody StorageUnitNotificationRegistrationUpdateRequest request)", "modifiers": "@RequestMapping(value = STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX + \"/namespaces/{namespace}/notificationNames/{notificationName}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_STORAGE_UNIT_NOTIFICATION_REGISTRATIONS_PUT) public", "return": "StorageUnitNotificationRegistration", "body": "@RequestMapping(value = STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX + \"/namespaces/{namespace}/notificationNames/{notificationName}\",\n        method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"})\n    @Secured(SecurityFunctions.FN_STORAGE_UNIT_NOTIFICATION_REGISTRATIONS_PUT)\n    public StorageUnitNotificationRegistration updateStorageUnitNotificationRegistration(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName, @RequestBody StorageUnitNotificationRegistrationUpdateRequest request)\n    {\n        return storageUnitNotificationRegistrationService\n            .updateStorageUnitNotificationRegistration(new NotificationRegistrationKey(namespace, notificationName), request);\n    }", "signature": "StorageUnitNotificationRegistration updateStorageUnitNotificationRegistration(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName, @RequestBody StorageUnitNotificationRegistrationUpdateRequest request)", "full_signature": "@RequestMapping(value = STORAGE_UNIT_NOTIFICATIONS_URI_PREFIX + \"/namespaces/{namespace}/notificationNames/{notificationName}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_STORAGE_UNIT_NOTIFICATION_REGISTRATIONS_PUT) public StorageUnitNotificationRegistration updateStorageUnitNotificationRegistration(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName, @RequestBody StorageUnitNotificationRegistrationUpdateRequest request)", "class_method_signature": "StorageUnitNotificationRegistrationRestController.updateStorageUnitNotificationRegistration(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName, @RequestBody StorageUnitNotificationRegistrationUpdateRequest request)", "testcase": false, "constructor": false, "invocations": ["updateStorageUnitNotificationRegistration"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}