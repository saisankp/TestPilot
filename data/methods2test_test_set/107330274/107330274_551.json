{"test_class": {"identifier": "ZookeeperLeaderElectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final TitusRuntime titusRuntime = TitusRuntimes.internal();", "modifier": "private static final", "type": "TitusRuntime", "declarator": "titusRuntime = TitusRuntimes.internal()", "var_name": "titusRuntime"}, {"original_string": "@ClassRule\n    public static final CuratorServiceResource curatorServiceResource = new CuratorServiceResource(titusRuntime);", "modifier": "@ClassRule\n    public static final", "type": "CuratorServiceResource", "declarator": "curatorServiceResource = new CuratorServiceResource(titusRuntime)", "var_name": "curatorServiceResource"}, {"original_string": "@Rule\n    public final CloseableExternalResource closeable = new CloseableExternalResource();", "modifier": "@Rule\n    public final", "type": "CloseableExternalResource", "declarator": "closeable = new CloseableExternalResource()", "var_name": "closeable"}, {"original_string": "private final LeaderActivator leaderActivator = mock(LeaderActivator.class);", "modifier": "private final", "type": "LeaderActivator", "declarator": "leaderActivator = mock(LeaderActivator.class)", "var_name": "leaderActivator"}, {"original_string": "private final MasterDescription masterDescription = new MasterDescription(\n            \"myHost\", \"1.1.1.1\", 8080, \"/api/status/uri\", System.currentTimeMillis()\n    );", "modifier": "private final", "type": "MasterDescription", "declarator": "masterDescription = new MasterDescription(\n            \"myHost\", \"1.1.1.1\", 8080, \"/api/status/uri\", System.currentTimeMillis()\n    )", "var_name": "masterDescription"}, {"original_string": "private final CuratorFramework curator = curatorServiceResource.getCuratorService().getCurator();", "modifier": "private final", "type": "CuratorFramework", "declarator": "curator = curatorServiceResource.getCuratorService().getCurator()", "var_name": "curator"}, {"original_string": "private final ZookeeperPaths zkPaths = curatorServiceResource.getZkPaths();", "modifier": "private final", "type": "ZookeeperPaths", "declarator": "zkPaths = curatorServiceResource.getZkPaths()", "var_name": "zkPaths"}], "file": "titus-ext/zookeeper/src/test/java/com/netflix/titus/ext/zookeeper/supervisor/ZookeeperLeaderElectorTest.java"}, "test_case": {"identifier": "testConnectionLossWillLeadToStartupFailure", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConnectionLossWillLeadToStartupFailure() {\n        ZookeeperConfiguration config = mock(ZookeeperConfiguration.class);\n        when(config.getZkConnectionString()).thenReturn(\"127.0.0.1:44444\");\n\n        ZookeeperClusterResolver clusterResolver = new DefaultZookeeperClusterResolver(config);\n        try {\n            CuratorServiceImpl cs = closeable.autoCloseable(new CuratorServiceImpl(config, clusterResolver, new DefaultRegistry()), CuratorServiceImpl::shutdown);\n            cs.start();\n\n            ZookeeperLeaderElector elector = new ZookeeperLeaderElector(leaderActivator, cs, zkPaths, masterDescription, titusRuntime);\n            elector.join();\n            fail(\"The elector should fail fast\");\n        } catch (IllegalStateException e) {\n            assertEquals(\"The cause should be from ZK connection failure\", CuratorConnectionLossException.class, e.getCause().getClass());\n            assertTrue(\"The error message is unexpected: \" + e.getMessage(), e.getCause().getMessage().contains(\"ConnectionLoss\"));\n        }\n    }", "signature": "void testConnectionLossWillLeadToStartupFailure()", "full_signature": "@Test public void testConnectionLossWillLeadToStartupFailure()", "class_method_signature": "ZookeeperLeaderElectorTest.testConnectionLossWillLeadToStartupFailure()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getZkConnectionString", "autoCloseable", "start", "join", "fail", "assertEquals", "getClass", "getCause", "assertTrue", "getMessage", "contains", "getMessage", "getCause"]}, "focal_class": {"identifier": "ZookeeperLeaderElector", "superclass": "", "interfaces": "implements LeaderElector", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ZookeeperLeaderElector.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ZookeeperLeaderElector.class)", "var_name": "logger"}, {"original_string": "private final LeaderActivator leaderActivator;", "modifier": "private final", "type": "LeaderActivator", "declarator": "leaderActivator", "var_name": "leaderActivator"}, {"original_string": "private final ZookeeperPaths zookeeperPaths;", "modifier": "private final", "type": "ZookeeperPaths", "declarator": "zookeeperPaths", "var_name": "zookeeperPaths"}, {"original_string": "private final TitusRuntime titusRuntime;", "modifier": "private final", "type": "TitusRuntime", "declarator": "titusRuntime", "var_name": "titusRuntime"}, {"original_string": "private final ObjectMapper jsonMapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "jsonMapper", "var_name": "jsonMapper"}, {"original_string": "private final MasterDescription masterDescription;", "modifier": "private final", "type": "MasterDescription", "declarator": "masterDescription", "var_name": "masterDescription"}, {"original_string": "private final CuratorFramework curator;", "modifier": "private final", "type": "CuratorFramework", "declarator": "curator", "var_name": "curator"}, {"original_string": "private final String leaderPath;", "modifier": "private final", "type": "String", "declarator": "leaderPath", "var_name": "leaderPath"}, {"original_string": "private final BehaviorSubject<MasterState> electionSubject = BehaviorSubject.create();", "modifier": "private final", "type": "BehaviorSubject<MasterState>", "declarator": "electionSubject = BehaviorSubject.create()", "var_name": "electionSubject"}, {"original_string": "private final Observable<MasterState> electionObserver = ObservableExt.protectFromMissingExceptionHandlers(electionSubject, logger);", "modifier": "private final", "type": "Observable<MasterState>", "declarator": "electionObserver = ObservableExt.protectFromMissingExceptionHandlers(electionSubject, logger)", "var_name": "electionObserver"}, {"original_string": "private final AtomicReference<LeaderElectionProcess> leaderElectionProcessRef = new AtomicReference<>();", "modifier": "private final", "type": "AtomicReference<LeaderElectionProcess>", "declarator": "leaderElectionProcessRef = new AtomicReference<>()", "var_name": "leaderElectionProcessRef"}], "methods": [{"identifier": "ZookeeperLeaderElector", "parameters": "(LeaderActivator leaderActivator,\n                                  CuratorService curatorService,\n                                  ZookeeperPaths zookeeperPaths,\n                                  MasterDescription masterDescription,\n                                  TitusRuntime titusRuntime)", "modifiers": "@Inject public", "return": "", "signature": " ZookeeperLeaderElector(LeaderActivator leaderActivator,\n                                  CuratorService curatorService,\n                                  ZookeeperPaths zookeeperPaths,\n                                  MasterDescription masterDescription,\n                                  TitusRuntime titusRuntime)", "full_signature": "@Inject public  ZookeeperLeaderElector(LeaderActivator leaderActivator,\n                                  CuratorService curatorService,\n                                  ZookeeperPaths zookeeperPaths,\n                                  MasterDescription masterDescription,\n                                  TitusRuntime titusRuntime)", "class_method_signature": "ZookeeperLeaderElector.ZookeeperLeaderElector(LeaderActivator leaderActivator,\n                                  CuratorService curatorService,\n                                  ZookeeperPaths zookeeperPaths,\n                                  MasterDescription masterDescription,\n                                  TitusRuntime titusRuntime)", "testcase": false, "constructor": true}, {"identifier": "initialize", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initialize()", "full_signature": "private void initialize()", "class_method_signature": "ZookeeperLeaderElector.initialize()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "@PreDestroy public", "return": "void", "signature": "void shutdown()", "full_signature": "@PreDestroy public void shutdown()", "class_method_signature": "ZookeeperLeaderElector.shutdown()", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean join()", "full_signature": "@Override public boolean join()", "class_method_signature": "ZookeeperLeaderElector.join()", "testcase": false, "constructor": false}, {"identifier": "leaveIfNotLeader", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean leaveIfNotLeader()", "full_signature": "@Override public boolean leaveIfNotLeader()", "class_method_signature": "ZookeeperLeaderElector.leaveIfNotLeader()", "testcase": false, "constructor": false}, {"identifier": "awaitElection", "parameters": "()", "modifiers": "@Override public", "return": "Observable<MasterState>", "signature": "Observable<MasterState> awaitElection()", "full_signature": "@Override public Observable<MasterState> awaitElection()", "class_method_signature": "ZookeeperLeaderElector.awaitElection()", "testcase": false, "constructor": false}], "file": "titus-ext/zookeeper/src/main/java/com/netflix/titus/ext/zookeeper/supervisor/ZookeeperLeaderElector.java"}, "focal_method": {"identifier": "join", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean join() {\n        synchronized (leaderElectionProcessRef) {\n            if (leaderElectionProcessRef.get() == null) {\n                leaderElectionProcessRef.set(new LeaderElectionProcess());\n                return true;\n            }\n        }\n        return false;\n    }", "signature": "boolean join()", "full_signature": "@Override public boolean join()", "class_method_signature": "ZookeeperLeaderElector.join()", "testcase": false, "constructor": false, "invocations": ["get", "set"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}