{"test_class": {"identifier": "ScoredClustersAllocationAlgorithmPreferenceForBigHostsTest", "superclass": "extends ScoredClustersAllocationAlgorithm", "interfaces": "", "fields": [{"original_string": "private ScoredClustersAllocationAlgorithmPreferenceForBigHosts spyAlgorithm;", "modifier": "private", "type": "ScoredClustersAllocationAlgorithmPreferenceForBigHosts", "declarator": "spyAlgorithm", "var_name": "spyAlgorithm"}, {"original_string": "private List<HostResources> hosts;", "modifier": "private", "type": "List<HostResources>", "declarator": "hosts", "var_name": "hosts"}], "file": "autonomic-allocation-algorithms/src/test/java/br/com/autonomiccs/autonomic/allocation/algorithms/impl/ScoredClustersAllocationAlgorithmPreferenceForBigHostsTest.java"}, "test_case": {"identifier": "sortHostsDownwardScoreTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void sortHostsDownwardScoreTest() {\n        List<HostResources> hosts = createHostsWithScore();\n\n        spyAlgorithm.sortHostsDownwardScore(hosts);\n\n        Assert.assertEquals(4.0, hosts.get(0).getScore(), 0);\n        Assert.assertEquals(3.0, hosts.get(1).getScore(), 0);\n        Assert.assertEquals(2.0, hosts.get(2).getScore(), 0);\n        Assert.assertEquals(1.0, hosts.get(3).getScore(), 0);\n    }", "signature": "void sortHostsDownwardScoreTest()", "full_signature": "@Test public void sortHostsDownwardScoreTest()", "class_method_signature": "ScoredClustersAllocationAlgorithmPreferenceForBigHostsTest.sortHostsDownwardScoreTest()", "testcase": true, "constructor": false, "invocations": ["createHostsWithScore", "sortHostsDownwardScore", "assertEquals", "getScore", "get", "assertEquals", "getScore", "get", "assertEquals", "getScore", "get", "assertEquals", "getScore", "get"]}, "focal_class": {"identifier": "ScoredClustersAllocationAlgorithmPreferenceForBigHosts", "superclass": "extends ScoredClustersAllocationAlgorithmPreferenceForSmallHosts", "interfaces": "", "fields": [{"original_string": "@SuppressWarnings(\"unchecked\")\n    protected Comparator<HostResources> hostReversedComparator = ComparatorUtils.reversedComparator(hostUpwardScoreComparator);", "modifier": "@SuppressWarnings(\"unchecked\")\n    protected", "type": "Comparator<HostResources>", "declarator": "hostReversedComparator = ComparatorUtils.reversedComparator(hostUpwardScoreComparator)", "var_name": "hostReversedComparator"}], "methods": [{"identifier": "sortHosts", "parameters": "(List<HostResources> sortedHosts)", "modifiers": "@Override protected", "return": "void", "signature": "void sortHosts(List<HostResources> sortedHosts)", "full_signature": "@Override protected void sortHosts(List<HostResources> sortedHosts)", "class_method_signature": "ScoredClustersAllocationAlgorithmPreferenceForBigHosts.sortHosts(List<HostResources> sortedHosts)", "testcase": false, "constructor": false}, {"identifier": "sortHostsDownwardScore", "parameters": "(List<HostResources> hosts)", "modifiers": "protected", "return": "void", "signature": "void sortHostsDownwardScore(List<HostResources> hosts)", "full_signature": "protected void sortHostsDownwardScore(List<HostResources> hosts)", "class_method_signature": "ScoredClustersAllocationAlgorithmPreferenceForBigHosts.sortHostsDownwardScore(List<HostResources> hosts)", "testcase": false, "constructor": false}], "file": "autonomic-allocation-algorithms/src/main/java/br/com/autonomiccs/autonomic/allocation/algorithms/impl/ScoredClustersAllocationAlgorithmPreferenceForBigHosts.java"}, "focal_method": {"identifier": "sortHostsDownwardScore", "parameters": "(List<HostResources> hosts)", "modifiers": "protected", "return": "void", "body": "protected void sortHostsDownwardScore(List<HostResources> hosts) {\n        Collections.sort(hosts, hostReversedComparator);\n    }", "signature": "void sortHostsDownwardScore(List<HostResources> hosts)", "full_signature": "protected void sortHostsDownwardScore(List<HostResources> hosts)", "class_method_signature": "ScoredClustersAllocationAlgorithmPreferenceForBigHosts.sortHostsDownwardScore(List<HostResources> hosts)", "testcase": false, "constructor": false, "invocations": ["sort"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}