{"test_class": {"identifier": "TestDefaultFailureInterpreter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DefaultFailureInterpreter impl;", "modifier": "private", "type": "DefaultFailureInterpreter", "declarator": "impl", "var_name": "impl"}], "file": "jrugged-core/src/test/java/org/fishwife/jrugged/TestDefaultFailureInterpreter.java"}, "test_case": {"identifier": "testAnyExceptionTripsByDefault", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAnyExceptionTripsByDefault() {\n        assertTrue(impl.shouldTrip(new IOException()));\n    }", "signature": "void testAnyExceptionTripsByDefault()", "full_signature": "@Test public void testAnyExceptionTripsByDefault()", "class_method_signature": "TestDefaultFailureInterpreter.testAnyExceptionTripsByDefault()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "shouldTrip"]}, "focal_class": {"identifier": "DefaultFailureInterpreter", "superclass": "", "interfaces": "implements FailureInterpreter", "fields": [{"original_string": "private Set<Class<? extends Throwable>> ignore = new HashSet<Class<? extends Throwable>>();", "modifier": "private", "type": "Set<Class<? extends Throwable>>", "declarator": "ignore = new HashSet<Class<? extends Throwable>>()", "var_name": "ignore"}, {"original_string": "private int limit = 0;", "modifier": "private", "type": "int", "declarator": "limit = 0", "var_name": "limit"}, {"original_string": "private long windowMillis = 0;", "modifier": "private", "type": "long", "declarator": "windowMillis = 0", "var_name": "windowMillis"}, {"original_string": "private WindowedEventCounter counter;", "modifier": "private", "type": "WindowedEventCounter", "declarator": "counter", "var_name": "counter"}, {"original_string": "@SuppressWarnings(\"unchecked\")\n    private static Class<? extends Throwable>[] defaultIgnore =\n        new Class[0];", "modifier": "@SuppressWarnings(\"unchecked\")\n    private static", "type": "Class<? extends Throwable>[]", "declarator": "defaultIgnore =\n        new Class[0]", "var_name": "defaultIgnore"}], "methods": [{"identifier": "DefaultFailureInterpreter", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultFailureInterpreter()", "full_signature": "public  DefaultFailureInterpreter()", "class_method_signature": "DefaultFailureInterpreter.DefaultFailureInterpreter()", "testcase": false, "constructor": true}, {"identifier": "DefaultFailureInterpreter", "parameters": "(int limit, long windowMillis)", "modifiers": "public", "return": "", "signature": " DefaultFailureInterpreter(int limit, long windowMillis)", "full_signature": "public  DefaultFailureInterpreter(int limit, long windowMillis)", "class_method_signature": "DefaultFailureInterpreter.DefaultFailureInterpreter(int limit, long windowMillis)", "testcase": false, "constructor": true}, {"identifier": "DefaultFailureInterpreter", "parameters": "(Class<? extends Throwable>[] ignore)", "modifiers": "public", "return": "", "signature": " DefaultFailureInterpreter(Class<? extends Throwable>[] ignore)", "full_signature": "public  DefaultFailureInterpreter(Class<? extends Throwable>[] ignore)", "class_method_signature": "DefaultFailureInterpreter.DefaultFailureInterpreter(Class<? extends Throwable>[] ignore)", "testcase": false, "constructor": true}, {"identifier": "DefaultFailureInterpreter", "parameters": "(Class<? extends Throwable>[] ignore,\n                                     int limit, long windowMillis)", "modifiers": "public", "return": "", "signature": " DefaultFailureInterpreter(Class<? extends Throwable>[] ignore,\n                                     int limit, long windowMillis)", "full_signature": "public  DefaultFailureInterpreter(Class<? extends Throwable>[] ignore,\n                                     int limit, long windowMillis)", "class_method_signature": "DefaultFailureInterpreter.DefaultFailureInterpreter(Class<? extends Throwable>[] ignore,\n                                     int limit, long windowMillis)", "testcase": false, "constructor": true}, {"identifier": "hasWindowConditions", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean hasWindowConditions()", "full_signature": "private boolean hasWindowConditions()", "class_method_signature": "DefaultFailureInterpreter.hasWindowConditions()", "testcase": false, "constructor": false}, {"identifier": "shouldTrip", "parameters": "(Throwable cause)", "modifiers": "public", "return": "boolean", "signature": "boolean shouldTrip(Throwable cause)", "full_signature": "public boolean shouldTrip(Throwable cause)", "class_method_signature": "DefaultFailureInterpreter.shouldTrip(Throwable cause)", "testcase": false, "constructor": false}, {"identifier": "initCounter", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initCounter()", "full_signature": "private void initCounter()", "class_method_signature": "DefaultFailureInterpreter.initCounter()", "testcase": false, "constructor": false}, {"identifier": "getIgnore", "parameters": "()", "modifiers": "public", "return": "Set<Class<? extends Throwable>>", "signature": "Set<Class<? extends Throwable>> getIgnore()", "full_signature": "public Set<Class<? extends Throwable>> getIgnore()", "class_method_signature": "DefaultFailureInterpreter.getIgnore()", "testcase": false, "constructor": false}, {"identifier": "setIgnore", "parameters": "(Class<? extends Throwable>[] ignore)", "modifiers": "public synchronized", "return": "void", "signature": "void setIgnore(Class<? extends Throwable>[] ignore)", "full_signature": "public synchronized void setIgnore(Class<? extends Throwable>[] ignore)", "class_method_signature": "DefaultFailureInterpreter.setIgnore(Class<? extends Throwable>[] ignore)", "testcase": false, "constructor": false}, {"identifier": "getLimit", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLimit()", "full_signature": "public int getLimit()", "class_method_signature": "DefaultFailureInterpreter.getLimit()", "testcase": false, "constructor": false}, {"identifier": "setLimit", "parameters": "(int limit)", "modifiers": "public", "return": "void", "signature": "void setLimit(int limit)", "full_signature": "public void setLimit(int limit)", "class_method_signature": "DefaultFailureInterpreter.setLimit(int limit)", "testcase": false, "constructor": false}, {"identifier": "getWindowMillis", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getWindowMillis()", "full_signature": "public long getWindowMillis()", "class_method_signature": "DefaultFailureInterpreter.getWindowMillis()", "testcase": false, "constructor": false}, {"identifier": "setWindowMillis", "parameters": "(long windowMillis)", "modifiers": "public", "return": "void", "signature": "void setWindowMillis(long windowMillis)", "full_signature": "public void setWindowMillis(long windowMillis)", "class_method_signature": "DefaultFailureInterpreter.setWindowMillis(long windowMillis)", "testcase": false, "constructor": false}], "file": "jrugged-core/src/main/java/org/fishwife/jrugged/DefaultFailureInterpreter.java"}, "focal_method": {"identifier": "shouldTrip", "parameters": "(Throwable cause)", "modifiers": "public", "return": "boolean", "body": "public boolean shouldTrip(Throwable cause) {\n        for(Class<?> clazz : ignore) {\n            if (clazz.isInstance(cause)) {\n                return false;\n            }\n        }\n\n        // if Exception is of specified type, and window conditions exist,\n        // keep circuit open unless exception threshold has passed\n        if (hasWindowConditions()) {\n            counter.mark();\n            // Trip if the exception count has passed the limit\n            return (counter.tally() > limit);\n        }\n\n        return true;\n    }", "signature": "boolean shouldTrip(Throwable cause)", "full_signature": "public boolean shouldTrip(Throwable cause)", "class_method_signature": "DefaultFailureInterpreter.shouldTrip(Throwable cause)", "testcase": false, "constructor": false, "invocations": ["isInstance", "hasWindowConditions", "mark", "tally"]}, "repository": {"repo_id": 6602723, "url": "https://github.com/Comcast/jrugged", "language": "Java", "is_fork": false, "fork_count": 90, "stargazer_count": 236, "size": 1302, "license": "licensed"}}