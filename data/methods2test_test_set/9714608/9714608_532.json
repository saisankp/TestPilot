{"test_class": {"identifier": "ClusteredRoadPathTest", "superclass": "extends AbstractGisTest", "interfaces": "", "fields": [{"original_string": "private RoadSegmentStub segment1, segment2, segment3, segment4, segment5;", "modifier": "private", "type": "RoadSegmentStub", "declarator": "segment1", "var_name": "segment1"}, {"original_string": "private RoadSegmentStub segment6, segment7, segment8, segment9, segment10;", "modifier": "private", "type": "RoadSegmentStub", "declarator": "segment6", "var_name": "segment6"}, {"original_string": "private RoadSegmentStub segment11;", "modifier": "private", "type": "RoadSegmentStub", "declarator": "segment11", "var_name": "segment11"}, {"original_string": "private RoadConnectionStub connection1;", "modifier": "private", "type": "RoadConnectionStub", "declarator": "connection1", "var_name": "connection1"}, {"original_string": "private RoadConnectionStub connection2;", "modifier": "private", "type": "RoadConnectionStub", "declarator": "connection2", "var_name": "connection2"}, {"original_string": "private RoadConnectionStub connection3;", "modifier": "private", "type": "RoadConnectionStub", "declarator": "connection3", "var_name": "connection3"}, {"original_string": "private RoadConnectionStub connection4;", "modifier": "private", "type": "RoadConnectionStub", "declarator": "connection4", "var_name": "connection4"}, {"original_string": "private RoadConnectionStub connection5;", "modifier": "private", "type": "RoadConnectionStub", "declarator": "connection5", "var_name": "connection5"}, {"original_string": "private RoadConnectionStub connection6;", "modifier": "private", "type": "RoadConnectionStub", "declarator": "connection6", "var_name": "connection6"}, {"original_string": "private RoadConnectionStub connection7;", "modifier": "private", "type": "RoadConnectionStub", "declarator": "connection7", "var_name": "connection7"}, {"original_string": "private RoadConnectionStub connection8;", "modifier": "private", "type": "RoadConnectionStub", "declarator": "connection8", "var_name": "connection8"}, {"original_string": "private RoadConnectionStub connection9;", "modifier": "private", "type": "RoadConnectionStub", "declarator": "connection9", "var_name": "connection9"}, {"original_string": "private RoadPath path1;", "modifier": "private", "type": "RoadPath", "declarator": "path1", "var_name": "path1"}, {"original_string": "private RoadPath path2;", "modifier": "private", "type": "RoadPath", "declarator": "path2", "var_name": "path2"}, {"original_string": "private RoadPath path3;", "modifier": "private", "type": "RoadPath", "declarator": "path3", "var_name": "path3"}, {"original_string": "private ClusteredRoadPath cPath;", "modifier": "private", "type": "ClusteredRoadPath", "declarator": "cPath", "var_name": "cPath"}], "file": "advanced/gis/gisroad/src/test/java/org/arakhne/afc/gis/road/path/ClusteredRoadPathTest.java"}, "test_case": {"identifier": "testRoadSegments", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testRoadSegments() {\n\t\t// path1 = [ s1, s4, s3, s5 ]\n\t\t// path2 = [ s9, s6 ]\n\t\t// path3 = [ s11, s3, s4, s1, s2 ]\n\t\tthis.cPath.add(this.path1);\n\t\tthis.cPath.add(this.path2);\n\n\t\tIterator<RoadSegment> iterator = this.cPath.roadSegments();\n\t\tassertTrue(iterator.hasNext());\n\t\tassertSame(this.segment1, iterator.next());\n\t\tassertTrue(iterator.hasNext());\n\t\tassertSame(this.segment4, iterator.next());\n\t\tassertTrue(iterator.hasNext());\n\t\tassertSame(this.segment3, iterator.next());\n\t\tassertTrue(iterator.hasNext());\n\t\tassertSame(this.segment5, iterator.next());\n\t\tassertTrue(iterator.hasNext());\n\t\tassertSame(this.segment9, iterator.next());\n\t\tassertTrue(iterator.hasNext());\n\t\tassertSame(this.segment6, iterator.next());\n\t\tassertFalse(iterator.hasNext());\n\t}", "signature": "void testRoadSegments()", "full_signature": "@Test public void testRoadSegments()", "class_method_signature": "ClusteredRoadPathTest.testRoadSegments()", "testcase": true, "constructor": false, "invocations": ["add", "add", "roadSegments", "assertTrue", "hasNext", "assertSame", "next", "assertTrue", "hasNext", "assertSame", "next", "assertTrue", "hasNext", "assertSame", "next", "assertTrue", "hasNext", "assertSame", "next", "assertTrue", "hasNext", "assertSame", "next", "assertTrue", "hasNext", "assertSame", "next", "assertFalse", "hasNext"]}, "focal_class": {"identifier": "ClusteredRoadPath", "superclass": "", "interfaces": "implements Collection<RoadPath>", "fields": [{"original_string": "private final List<RoadPath> paths = new ArrayList<>();", "modifier": "private final", "type": "List<RoadPath>", "declarator": "paths = new ArrayList<>()", "var_name": "paths"}, {"original_string": "private int segmentCount;", "modifier": "private", "type": "int", "declarator": "segmentCount", "var_name": "segmentCount"}], "methods": [{"identifier": "ClusteredRoadPath", "parameters": "()", "modifiers": "public", "return": "", "signature": " ClusteredRoadPath()", "full_signature": "public  ClusteredRoadPath()", "class_method_signature": "ClusteredRoadPath.ClusteredRoadPath()", "testcase": false, "constructor": true}, {"identifier": "ClusteredRoadPath", "parameters": "(RoadPath... paths)", "modifiers": "public", "return": "", "signature": " ClusteredRoadPath(RoadPath... paths)", "full_signature": "public  ClusteredRoadPath(RoadPath... paths)", "class_method_signature": "ClusteredRoadPath.ClusteredRoadPath(RoadPath... paths)", "testcase": false, "constructor": true}, {"identifier": "ClusteredRoadPath", "parameters": "(Collection<? extends RoadPath> paths)", "modifiers": "public", "return": "", "signature": " ClusteredRoadPath(Collection<? extends RoadPath> paths)", "full_signature": "public  ClusteredRoadPath(Collection<? extends RoadPath> paths)", "class_method_signature": "ClusteredRoadPath.ClusteredRoadPath(Collection<? extends RoadPath> paths)", "testcase": false, "constructor": true}, {"identifier": "getLength", "parameters": "()", "modifiers": "@Pure public", "return": "double", "signature": "double getLength()", "full_signature": "@Pure public double getLength()", "class_method_signature": "ClusteredRoadPath.getLength()", "testcase": false, "constructor": false}, {"identifier": "invert", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void invert()", "full_signature": "public void invert()", "class_method_signature": "ClusteredRoadPath.invert()", "testcase": false, "constructor": false}, {"identifier": "first", "parameters": "()", "modifiers": "@Pure public", "return": "RoadPath", "signature": "RoadPath first()", "full_signature": "@Pure public RoadPath first()", "class_method_signature": "ClusteredRoadPath.first()", "testcase": false, "constructor": false}, {"identifier": "last", "parameters": "()", "modifiers": "@Pure public", "return": "RoadPath", "signature": "RoadPath last()", "full_signature": "@Pure public RoadPath last()", "class_method_signature": "ClusteredRoadPath.last()", "testcase": false, "constructor": false}, {"identifier": "getRoadSegmentCount", "parameters": "()", "modifiers": "@Pure public", "return": "int", "signature": "int getRoadSegmentCount()", "full_signature": "@Pure public int getRoadSegmentCount()", "class_method_signature": "ClusteredRoadPath.getRoadSegmentCount()", "testcase": false, "constructor": false}, {"identifier": "getRoadPathAt", "parameters": "(int index)", "modifiers": "@Pure public", "return": "RoadPath", "signature": "RoadPath getRoadPathAt(int index)", "full_signature": "@Pure public RoadPath getRoadPathAt(int index)", "class_method_signature": "ClusteredRoadPath.getRoadPathAt(int index)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(RoadSegment segment)", "modifiers": "@Pure public", "return": "int", "signature": "int indexOf(RoadSegment segment)", "full_signature": "@Pure public int indexOf(RoadSegment segment)", "class_method_signature": "ClusteredRoadPath.indexOf(RoadSegment segment)", "testcase": false, "constructor": false}, {"identifier": "lastIndexOf", "parameters": "(RoadSegment segment)", "modifiers": "@Pure public", "return": "int", "signature": "int lastIndexOf(RoadSegment segment)", "full_signature": "@Pure public int lastIndexOf(RoadSegment segment)", "class_method_signature": "ClusteredRoadPath.lastIndexOf(RoadSegment segment)", "testcase": false, "constructor": false}, {"identifier": "getRoadSegmentAt", "parameters": "(int index)", "modifiers": "@Pure public", "return": "RoadSegment", "signature": "RoadSegment getRoadSegmentAt(int index)", "full_signature": "@Pure public RoadSegment getRoadSegmentAt(int index)", "class_method_signature": "ClusteredRoadPath.getRoadSegmentAt(int index)", "testcase": false, "constructor": false}, {"identifier": "getPathForRoadSegmentAt", "parameters": "(int index)", "modifiers": "@Pure public", "return": "RoadPath", "signature": "RoadPath getPathForRoadSegmentAt(int index)", "full_signature": "@Pure public RoadPath getPathForRoadSegmentAt(int index)", "class_method_signature": "ClusteredRoadPath.getPathForRoadSegmentAt(int index)", "testcase": false, "constructor": false}, {"identifier": "getRoadSegmentDirectionAt", "parameters": "(int index)", "modifiers": "@Pure public", "return": "Direction1D", "signature": "Direction1D getRoadSegmentDirectionAt(int index)", "full_signature": "@Pure public Direction1D getRoadSegmentDirectionAt(int index)", "class_method_signature": "ClusteredRoadPath.getRoadSegmentDirectionAt(int index)", "testcase": false, "constructor": false}, {"identifier": "removeRoadSegmentAt", "parameters": "(int index)", "modifiers": "public", "return": "RoadSegment", "signature": "RoadSegment removeRoadSegmentAt(int index)", "full_signature": "public RoadSegment removeRoadSegmentAt(int index)", "class_method_signature": "ClusteredRoadPath.removeRoadSegmentAt(int index)", "testcase": false, "constructor": false}, {"identifier": "removeRoadSegmentAt", "parameters": "(RoadPath path, int index, PathIterator iterator)", "modifiers": "private", "return": "RoadSegment", "signature": "RoadSegment removeRoadSegmentAt(RoadPath path, int index, PathIterator iterator)", "full_signature": "private RoadSegment removeRoadSegmentAt(RoadPath path, int index, PathIterator iterator)", "class_method_signature": "ClusteredRoadPath.removeRoadSegmentAt(RoadPath path, int index, PathIterator iterator)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(RoadPath path)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean add(RoadPath path)", "full_signature": "@Override public final boolean add(RoadPath path)", "class_method_signature": "ClusteredRoadPath.add(RoadPath path)", "testcase": false, "constructor": false}, {"identifier": "addAndGetPath", "parameters": "(RoadPath end)", "modifiers": "@SuppressWarnings({\"checkstyle:cyclomaticcomplexity\", \"checkstyle:npathcomplexity\", \"checkstyle:nestedifdepth\"}) public", "return": "RoadPath", "signature": "RoadPath addAndGetPath(RoadPath end)", "full_signature": "@SuppressWarnings({\"checkstyle:cyclomaticcomplexity\", \"checkstyle:npathcomplexity\", \"checkstyle:nestedifdepth\"}) public RoadPath addAndGetPath(RoadPath end)", "class_method_signature": "ClusteredRoadPath.addAndGetPath(RoadPath end)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(Collection<? extends RoadPath> col)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addAll(Collection<? extends RoadPath> col)", "full_signature": "@Override public boolean addAll(Collection<? extends RoadPath> col)", "class_method_signature": "ClusteredRoadPath.addAll(Collection<? extends RoadPath> col)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "ClusteredRoadPath.clear()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(Object obj)", "modifiers": "@Override @Pure public", "return": "boolean", "signature": "boolean contains(Object obj)", "full_signature": "@Override @Pure public boolean contains(Object obj)", "class_method_signature": "ClusteredRoadPath.contains(Object obj)", "testcase": false, "constructor": false}, {"identifier": "containsAll", "parameters": "(Collection<?> col)", "modifiers": "@Override @Pure public", "return": "boolean", "signature": "boolean containsAll(Collection<?> col)", "full_signature": "@Override @Pure public boolean containsAll(Collection<?> col)", "class_method_signature": "ClusteredRoadPath.containsAll(Collection<?> col)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override @Pure public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override @Pure public boolean isEmpty()", "class_method_signature": "ClusteredRoadPath.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override @Pure public", "return": "Iterator<RoadPath>", "signature": "Iterator<RoadPath> iterator()", "full_signature": "@Override @Pure public Iterator<RoadPath> iterator()", "class_method_signature": "ClusteredRoadPath.iterator()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean remove(Object obj)", "full_signature": "@Override public boolean remove(Object obj)", "class_method_signature": "ClusteredRoadPath.remove(Object obj)", "testcase": false, "constructor": false}, {"identifier": "sync", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void sync()", "full_signature": "public void sync()", "class_method_signature": "ClusteredRoadPath.sync()", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "(Collection<?> col)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeAll(Collection<?> col)", "full_signature": "@Override public boolean removeAll(Collection<?> col)", "class_method_signature": "ClusteredRoadPath.removeAll(Collection<?> col)", "testcase": false, "constructor": false}, {"identifier": "retainAll", "parameters": "(Collection<?> col)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean retainAll(Collection<?> col)", "full_signature": "@Override public boolean retainAll(Collection<?> col)", "class_method_signature": "ClusteredRoadPath.retainAll(Collection<?> col)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override @Pure public", "return": "int", "signature": "int size()", "full_signature": "@Override @Pure public int size()", "class_method_signature": "ClusteredRoadPath.size()", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "()", "modifiers": "@Override @Pure public", "return": "Object[]", "signature": "Object[] toArray()", "full_signature": "@Override @Pure public Object[] toArray()", "class_method_signature": "ClusteredRoadPath.toArray()", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "(T[] array)", "modifiers": "@Override @Pure public", "return": "T[]", "signature": "T[] toArray(T[] array)", "full_signature": "@Override @Pure public T[] toArray(T[] array)", "class_method_signature": "ClusteredRoadPath.toArray(T[] array)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override @Pure public", "return": "String", "signature": "String toString()", "full_signature": "@Override @Pure public String toString()", "class_method_signature": "ClusteredRoadPath.toString()", "testcase": false, "constructor": false}, {"identifier": "toRoadPath", "parameters": "()", "modifiers": "@Pure public", "return": "RoadPath", "signature": "RoadPath toRoadPath()", "full_signature": "@Pure public RoadPath toRoadPath()", "class_method_signature": "ClusteredRoadPath.toRoadPath()", "testcase": false, "constructor": false}, {"identifier": "roadSegments", "parameters": "()", "modifiers": "@Pure public", "return": "Iterator<RoadSegment>", "signature": "Iterator<RoadSegment> roadSegments()", "full_signature": "@Pure public Iterator<RoadSegment> roadSegments()", "class_method_signature": "ClusteredRoadPath.roadSegments()", "testcase": false, "constructor": false}], "file": "advanced/gis/gisroad/src/main/java/org/arakhne/afc/gis/road/path/ClusteredRoadPath.java"}, "focal_method": {"identifier": "roadSegments", "parameters": "()", "modifiers": "@Pure public", "return": "Iterator<RoadSegment>", "body": "@Pure\n\tpublic Iterator<RoadSegment> roadSegments() {\n\t\treturn new ClusteredSegmentIterator();\n\t}", "signature": "Iterator<RoadSegment> roadSegments()", "full_signature": "@Pure public Iterator<RoadSegment> roadSegments()", "class_method_signature": "ClusteredRoadPath.roadSegments()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}