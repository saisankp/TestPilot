{"test_class": {"identifier": "KafkaOffsetManagerUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String testTopic = \"testTopic\";", "modifier": "private final", "type": "String", "declarator": "testTopic = \"testTopic\"", "var_name": "testTopic"}], "file": "kom-core/src/test/java/org/ctrlr/kom/core/KafkaOffsetManagerUtilsTest.java"}, "test_case": {"identifier": "testMapWithPartitionBelowZero", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMapWithPartitionBelowZero() throws Exception {\n\n        // Create TAP, Long map to test with\n        Map<TopicAndPartition, Long> tap = new HashMap<>();\n        tap.put(new TopicAndPartition(testTopic, -1), 1L);\n\n        assertFalse(KafkaOffsetManagerUtils.isValidOffsetMap(tap));\n    }", "signature": "void testMapWithPartitionBelowZero()", "full_signature": "@Test public void testMapWithPartitionBelowZero()", "class_method_signature": "KafkaOffsetManagerUtilsTest.testMapWithPartitionBelowZero()", "testcase": true, "constructor": false, "invocations": ["put", "assertFalse", "isValidOffsetMap"]}, "focal_class": {"identifier": "KafkaOffsetManagerUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger Log = LoggerFactory.getLogger(KafkaOffsetManagerUtils.class);", "modifier": "private static", "type": "Logger", "declarator": "Log = LoggerFactory.getLogger(KafkaOffsetManagerUtils.class)", "var_name": "Log"}], "methods": [{"identifier": "isValidOffsetMap", "parameters": "(Map<TopicAndPartition, Long> offsets)", "modifiers": "static", "return": "boolean", "signature": "boolean isValidOffsetMap(Map<TopicAndPartition, Long> offsets)", "full_signature": "static boolean isValidOffsetMap(Map<TopicAndPartition, Long> offsets)", "class_method_signature": "KafkaOffsetManagerUtils.isValidOffsetMap(Map<TopicAndPartition, Long> offsets)", "testcase": false, "constructor": false}], "file": "kom-core/src/main/java/org/ctrlr/kom/core/KafkaOffsetManagerUtils.java"}, "focal_method": {"identifier": "isValidOffsetMap", "parameters": "(Map<TopicAndPartition, Long> offsets)", "modifiers": "static", "return": "boolean", "body": "static boolean isValidOffsetMap(Map<TopicAndPartition, Long> offsets) {\n\n        assert(offsets!=null);\n\n        Set<String> topicSet = new HashSet<>();\n\n        for (Map.Entry<TopicAndPartition, Long> entry : offsets.entrySet()) {\n            TopicAndPartition tap = entry.getKey();\n            topicSet.add(tap.topic());\n\n            if (tap.partition()<0) {\n                Log.error(\"partition must be >=0\");\n                return false;\n            }\n\n            Long offset = entry.getValue();\n            if (offset<0L) {\n                Log.error(\"invalid offset map. offset needs to be >=0\");\n                return false; }\n        }\n\n        if (topicSet.size()!=1) {\n            Log.error(\"One and only one topic allowed in a TopicAndPartion map\");\n            return false;\n        }\n\n        return true;\n    }", "signature": "boolean isValidOffsetMap(Map<TopicAndPartition, Long> offsets)", "full_signature": "static boolean isValidOffsetMap(Map<TopicAndPartition, Long> offsets)", "class_method_signature": "KafkaOffsetManagerUtils.isValidOffsetMap(Map<TopicAndPartition, Long> offsets)", "testcase": false, "constructor": false, "invocations": ["entrySet", "getKey", "add", "topic", "partition", "error", "getValue", "error", "size", "error"]}, "repository": {"repo_id": 51400982, "url": "https://github.com/rverk/kafkaoffsetmanager", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 8, "size": 797, "license": "licensed"}}