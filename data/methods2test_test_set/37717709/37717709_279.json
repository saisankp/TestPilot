{"test_class": {"identifier": "TestLanguageIdentifierConverter", "superclass": "", "interfaces": "", "fields": [], "file": "org.jvoicexml.xml/src/test/java/org/jvoicexml/xml/TestLanguageIdentifierConverter.java"}, "test_case": {"identifier": "testToLocale", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToLocale() {\n        final Locale locale1 =\n            LanguageIdentifierConverter.toLocale(\"de\");\n        Assert.assertEquals(Locale.GERMAN, locale1);\n        final Locale locale2 =\n            LanguageIdentifierConverter.toLocale(\"en-US\");\n        Assert.assertEquals(Locale.US, locale2);\n        final Locale locale3 =\n            LanguageIdentifierConverter.toLocale(null);\n        Assert.assertNull(locale3);\n    }", "signature": "void testToLocale()", "full_signature": "@Test public void testToLocale()", "class_method_signature": "TestLanguageIdentifierConverter.testToLocale()", "testcase": true, "constructor": false, "invocations": ["toLocale", "assertEquals", "toLocale", "assertEquals", "toLocale", "assertNull"]}, "focal_class": {"identifier": "LanguageIdentifierConverter", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "LanguageIdentifierConverter", "parameters": "()", "modifiers": "private", "return": "", "signature": " LanguageIdentifierConverter()", "full_signature": "private  LanguageIdentifierConverter()", "class_method_signature": "LanguageIdentifierConverter.LanguageIdentifierConverter()", "testcase": false, "constructor": true}, {"identifier": "toLanguageIdentifier", "parameters": "(final Locale locale)", "modifiers": "public static", "return": "String", "signature": "String toLanguageIdentifier(final Locale locale)", "full_signature": "public static String toLanguageIdentifier(final Locale locale)", "class_method_signature": "LanguageIdentifierConverter.toLanguageIdentifier(final Locale locale)", "testcase": false, "constructor": false}, {"identifier": "toLocale", "parameters": "(final String identifier)", "modifiers": "public static", "return": "Locale", "signature": "Locale toLocale(final String identifier)", "full_signature": "public static Locale toLocale(final String identifier)", "class_method_signature": "LanguageIdentifierConverter.toLocale(final String identifier)", "testcase": false, "constructor": false}], "file": "org.jvoicexml.xml/src/main/java/org/jvoicexml/xml/LanguageIdentifierConverter.java"}, "focal_method": {"identifier": "toLocale", "parameters": "(final String identifier)", "modifiers": "public static", "return": "Locale", "body": "public static Locale toLocale(final String identifier) {\n        if ((identifier == null) || identifier.isEmpty()) {\n            return null;\n        }\n        final String[] parts = identifier.split(\"-\");\n        final String language = parts[0];\n        if (language.length() != 2) {\n            throw new IllegalArgumentException(\n                    \"Language must be a 2-letter code!\");\n        }\n        if (parts.length == 1) {\n            return new Locale(language.toLowerCase());\n        }\n        final String country = parts[1];\n        if (country.length() != 2) {\n            throw new IllegalArgumentException(\n                    \"Country must be a 2-letter code!\");\n        }\n        return new Locale(language.toLowerCase(), country.toUpperCase());\n    }", "signature": "Locale toLocale(final String identifier)", "full_signature": "public static Locale toLocale(final String identifier)", "class_method_signature": "LanguageIdentifierConverter.toLocale(final String identifier)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "split", "length", "toLowerCase", "length", "toLowerCase", "toUpperCase"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}