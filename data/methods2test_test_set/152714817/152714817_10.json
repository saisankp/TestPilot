{"test_class": {"identifier": "ApplicationDiscoveryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ApplicationDiscovery applicationDiscovery;", "modifier": "private", "type": "ApplicationDiscovery", "declarator": "applicationDiscovery", "var_name": "applicationDiscovery"}, {"original_string": "@Mock\n    private ResourcePatternResolver resourceLoader;", "modifier": "@Mock\n    private", "type": "ResourcePatternResolver", "declarator": "resourceLoader", "var_name": "resourceLoader"}], "file": "activiti-spring-application/src/test/java/org/activiti/application/ApplicationDiscoveryTest.java"}, "test_case": {"identifier": "discoverApplicationsShouldReturnResourcesFoundByResourceLoader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void discoverApplicationsShouldReturnResourcesFoundByResourceLoader() throws Exception {\n        //given\n        givenExistingResourceFolder();\n\n        Resource applicationResource = mock(Resource.class);\n        given(resourceLoader.getResources(anyString())).willReturn(new Resource[]{applicationResource});\n\n        //when\n        List<Resource> resources = applicationDiscovery.discoverApplications();\n\n        //then\n        assertThat(resources).containsExactly(applicationResource);\n    }", "signature": "void discoverApplicationsShouldReturnResourcesFoundByResourceLoader()", "full_signature": "@Test public void discoverApplicationsShouldReturnResourcesFoundByResourceLoader()", "class_method_signature": "ApplicationDiscoveryTest.discoverApplicationsShouldReturnResourcesFoundByResourceLoader()", "testcase": true, "constructor": false, "invocations": ["givenExistingResourceFolder", "mock", "willReturn", "given", "getResources", "anyString", "discoverApplications", "containsExactly", "assertThat"]}, "focal_class": {"identifier": "ApplicationDiscovery", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ResourcePatternResolver resourceLoader;", "modifier": "private", "type": "ResourcePatternResolver", "declarator": "resourceLoader", "var_name": "resourceLoader"}, {"original_string": "private String applicationsLocation;", "modifier": "private", "type": "String", "declarator": "applicationsLocation", "var_name": "applicationsLocation"}], "methods": [{"identifier": "ApplicationDiscovery", "parameters": "(ResourcePatternResolver resourceLoader,\n                                String applicationsLocation)", "modifiers": "public", "return": "", "signature": " ApplicationDiscovery(ResourcePatternResolver resourceLoader,\n                                String applicationsLocation)", "full_signature": "public  ApplicationDiscovery(ResourcePatternResolver resourceLoader,\n                                String applicationsLocation)", "class_method_signature": "ApplicationDiscovery.ApplicationDiscovery(ResourcePatternResolver resourceLoader,\n                                String applicationsLocation)", "testcase": false, "constructor": true}, {"identifier": "discoverApplications", "parameters": "()", "modifiers": "public", "return": "List<Resource>", "signature": "List<Resource> discoverApplications()", "full_signature": "public List<Resource> discoverApplications()", "class_method_signature": "ApplicationDiscovery.discoverApplications()", "testcase": false, "constructor": false}], "file": "activiti-spring-application/src/main/java/org/activiti/application/ApplicationDiscovery.java"}, "focal_method": {"identifier": "discoverApplications", "parameters": "()", "modifiers": "public", "return": "List<Resource>", "body": "public List<Resource> discoverApplications() {\n        List<Resource> resources = new ArrayList<>();\n        Resource resource = resourceLoader.getResource(applicationsLocation);\n        if (resource.exists()) {\n            try {\n                resources = Arrays.asList(resourceLoader.getResources(applicationsLocation + \"**.zip\"));\n            } catch (IOException e) {\n                throw new AppliationLoadException(\"Unable to load application resources\", e);\n            }\n        }\n        return resources;\n    }", "signature": "List<Resource> discoverApplications()", "full_signature": "public List<Resource> discoverApplications()", "class_method_signature": "ApplicationDiscovery.discoverApplications()", "testcase": false, "constructor": false, "invocations": ["getResource", "exists", "asList", "getResources"]}, "repository": {"repo_id": 152714817, "url": "https://github.com/Activiti/activiti-core-common", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 7, "size": 543, "license": "licensed"}}