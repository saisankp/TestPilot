{"test_class": {"identifier": "GraphTest", "superclass": "", "interfaces": "", "fields": [], "file": "opendse-model/src/test/java/net/sf/opendse/model/GraphTest.java"}, "test_case": {"identifier": "removeVertex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void removeVertex() {\n\t\tGraph<Task, Dependency> app = new Graph<Task, Dependency>();\n\t\tTask task = new Task(\"x\");\n\t\tapp.addVertex(task);\n\n\t\tAssert.assertTrue(app.removeVertices(Collections.singleton(task)));\n\t\tAssert.assertEquals(0, app.getVertexCount());\n\t}", "signature": "void removeVertex()", "full_signature": "@Test public void removeVertex()", "class_method_signature": "GraphTest.removeVertex()", "testcase": true, "constructor": false, "invocations": ["addVertex", "assertTrue", "removeVertices", "singleton", "assertEquals", "getVertexCount"]}, "focal_class": {"identifier": "Graph", "superclass": "extends SparseMultigraph<V, E>", "interfaces": "implements Iterable<V>", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<V>", "signature": "Iterator<V> iterator()", "full_signature": "@Override public Iterator<V> iterator()", "class_method_signature": "Graph.iterator()", "testcase": false, "constructor": false}, {"identifier": "getVertex", "parameters": "(V v)", "modifiers": "public", "return": "V", "signature": "V getVertex(V v)", "full_signature": "public V getVertex(V v)", "class_method_signature": "Graph.getVertex(V v)", "testcase": false, "constructor": false}, {"identifier": "getEdge", "parameters": "(E e)", "modifiers": "public", "return": "E", "signature": "E getEdge(E e)", "full_signature": "public E getEdge(E e)", "class_method_signature": "Graph.getEdge(E e)", "testcase": false, "constructor": false}, {"identifier": "getVertex", "parameters": "(String id)", "modifiers": "public", "return": "V", "signature": "V getVertex(String id)", "full_signature": "public V getVertex(String id)", "class_method_signature": "Graph.getVertex(String id)", "testcase": false, "constructor": false}, {"identifier": "getEdge", "parameters": "(String id)", "modifiers": "public", "return": "E", "signature": "E getEdge(String id)", "full_signature": "public E getEdge(String id)", "class_method_signature": "Graph.getEdge(String id)", "testcase": false, "constructor": false}, {"identifier": "removeVertices", "parameters": "(Collection<V> vertices)", "modifiers": "public", "return": "boolean", "signature": "boolean removeVertices(Collection<V> vertices)", "full_signature": "public boolean removeVertices(Collection<V> vertices)", "class_method_signature": "Graph.removeVertices(Collection<V> vertices)", "testcase": false, "constructor": false}], "file": "opendse-model/src/main/java/net/sf/opendse/model/Graph.java"}, "focal_method": {"identifier": "removeVertices", "parameters": "(Collection<V> vertices)", "modifiers": "public", "return": "boolean", "body": "public boolean removeVertices(Collection<V> vertices) {\n\t\tboolean b = false;\n\t\tfor (V vertex : vertices) {\n\t\t\tb |= removeVertex(vertex);\n\t\t}\n\t\treturn b;\n\t}", "signature": "boolean removeVertices(Collection<V> vertices)", "full_signature": "public boolean removeVertices(Collection<V> vertices)", "class_method_signature": "Graph.removeVertices(Collection<V> vertices)", "testcase": false, "constructor": false, "invocations": ["removeVertex"]}, "repository": {"repo_id": 121694310, "url": "https://github.com/felixreimann/opendse", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 7, "size": 2024, "license": "licensed"}}