{"test_class": {"identifier": "PodDeletionGcControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NODE_NAME = \"node-name\";", "modifier": "private static final", "type": "String", "declarator": "NODE_NAME = \"node-name\"", "var_name": "NODE_NAME"}, {"original_string": "private static final String POD_NAME = \"pod-name\";", "modifier": "private static final", "type": "String", "declarator": "POD_NAME = \"pod-name\"", "var_name": "POD_NAME"}, {"original_string": "private static final TestClock clock = new DefaultTestClock();", "modifier": "private static final", "type": "TestClock", "declarator": "clock = new DefaultTestClock()", "var_name": "clock"}, {"original_string": "private static final long POD_DELETION_TIMESTAMP_GRACE_PERIOD = 1000L;", "modifier": "private static final", "type": "long", "declarator": "POD_DELETION_TIMESTAMP_GRACE_PERIOD = 1000L", "var_name": "POD_DELETION_TIMESTAMP_GRACE_PERIOD"}, {"original_string": "private static final long POD_TERMINATION_GRACE_PERIOD_SEC = 30L;", "modifier": "private static final", "type": "long", "declarator": "POD_TERMINATION_GRACE_PERIOD_SEC = 30L", "var_name": "POD_TERMINATION_GRACE_PERIOD_SEC"}, {"original_string": "private static final long POD_TERMINATION_GRACE_PERIOD_MS = POD_TERMINATION_GRACE_PERIOD_SEC * 1000;", "modifier": "private static final", "type": "long", "declarator": "POD_TERMINATION_GRACE_PERIOD_MS = POD_TERMINATION_GRACE_PERIOD_SEC * 1000", "var_name": "POD_TERMINATION_GRACE_PERIOD_MS"}, {"original_string": "private final TitusRuntime titusRuntime = TitusRuntimes.test(clock);", "modifier": "private final", "type": "TitusRuntime", "declarator": "titusRuntime = TitusRuntimes.test(clock)", "var_name": "titusRuntime"}, {"original_string": "private final FixedIntervalTokenBucketConfiguration tokenBucketConfiguration = mock(FixedIntervalTokenBucketConfiguration.class);", "modifier": "private final", "type": "FixedIntervalTokenBucketConfiguration", "declarator": "tokenBucketConfiguration = mock(FixedIntervalTokenBucketConfiguration.class)", "var_name": "tokenBucketConfiguration"}, {"original_string": "private final ControllerConfiguration controllerConfiguration = mock(ControllerConfiguration.class);", "modifier": "private final", "type": "ControllerConfiguration", "declarator": "controllerConfiguration = mock(ControllerConfiguration.class)", "var_name": "controllerConfiguration"}, {"original_string": "private final KubeApiFacade kubeApiFacade = mock(KubeApiFacade.class);", "modifier": "private final", "type": "KubeApiFacade", "declarator": "kubeApiFacade = mock(KubeApiFacade.class)", "var_name": "kubeApiFacade"}, {"original_string": "private final LocalScheduler scheduler = mock(LocalScheduler.class);", "modifier": "private final", "type": "LocalScheduler", "declarator": "scheduler = mock(LocalScheduler.class)", "var_name": "scheduler"}, {"original_string": "private final KubeControllerConfiguration kubeControllerConfiguration = mock(KubeControllerConfiguration.class);", "modifier": "private final", "type": "KubeControllerConfiguration", "declarator": "kubeControllerConfiguration = mock(KubeControllerConfiguration.class)", "var_name": "kubeControllerConfiguration"}, {"original_string": "private final PodDeletionGcController podDeletionGcController = new PodDeletionGcController(\n            titusRuntime,\n            scheduler,\n            tokenBucketConfiguration,\n            controllerConfiguration,\n            kubeApiFacade,\n            kubeControllerConfiguration\n    );", "modifier": "private final", "type": "PodDeletionGcController", "declarator": "podDeletionGcController = new PodDeletionGcController(\n            titusRuntime,\n            scheduler,\n            tokenBucketConfiguration,\n            controllerConfiguration,\n            kubeApiFacade,\n            kubeControllerConfiguration\n    )", "var_name": "podDeletionGcController"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/kubernetes/controller/PodDeletionGcControllerTest.java"}, "test_case": {"identifier": "podIsNotPastDeletionTimestamp", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void podIsNotPastDeletionTimestamp() {\n        V1Pod pod = new V1Pod()\n                .metadata(\n                        new V1ObjectMeta()\n                                .name(POD_NAME)\n                                .deletionTimestamp(new DateTime(clock.wallTime()))\n                )\n                .spec(\n                        new V1PodSpec()\n                                .nodeName(NODE_NAME)\n                                .terminationGracePeriodSeconds(POD_TERMINATION_GRACE_PERIOD_SEC))\n                .status(null);\n\n        Assertions.assertThat(podDeletionGcController.isPodPastDeletionTimestamp(pod)).isFalse();\n    }", "signature": "void podIsNotPastDeletionTimestamp()", "full_signature": "@Test void podIsNotPastDeletionTimestamp()", "class_method_signature": "PodDeletionGcControllerTest.podIsNotPastDeletionTimestamp()", "testcase": true, "constructor": false, "invocations": ["status", "spec", "metadata", "deletionTimestamp", "name", "wallTime", "terminationGracePeriodSeconds", "nodeName", "isFalse", "assertThat", "isPodPastDeletionTimestamp"]}, "focal_class": {"identifier": "PodDeletionGcController", "superclass": "extends BaseGcController<V1Pod>", "interfaces": "", "fields": [{"original_string": "public static final String POD_DELETION_GC_CONTROLLER = \"podDeletionGcController\";", "modifier": "public static final", "type": "String", "declarator": "POD_DELETION_GC_CONTROLLER = \"podDeletionGcController\"", "var_name": "POD_DELETION_GC_CONTROLLER"}, {"original_string": "public static final String POD_DELETION_GC_CONTROLLER_DESCRIPTION = \"GC pods with a deletion timestamp that needs to be cleaned up.\";", "modifier": "public static final", "type": "String", "declarator": "POD_DELETION_GC_CONTROLLER_DESCRIPTION = \"GC pods with a deletion timestamp that needs to be cleaned up.\"", "var_name": "POD_DELETION_GC_CONTROLLER_DESCRIPTION"}, {"original_string": "private static final Logger logger = LoggerFactory.getLogger(PodDeletionGcController.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(PodDeletionGcController.class)", "var_name": "logger"}, {"original_string": "private final KubeApiFacade kubeApiFacade;", "modifier": "private final", "type": "KubeApiFacade", "declarator": "kubeApiFacade", "var_name": "kubeApiFacade"}, {"original_string": "private final Clock clock;", "modifier": "private final", "type": "Clock", "declarator": "clock", "var_name": "clock"}, {"original_string": "private final KubeControllerConfiguration kubeControllerConfiguration;", "modifier": "private final", "type": "KubeControllerConfiguration", "declarator": "kubeControllerConfiguration", "var_name": "kubeControllerConfiguration"}], "methods": [{"identifier": "PodDeletionGcController", "parameters": "(\n            TitusRuntime titusRuntime,\n            LocalScheduler scheduler,\n            @Named(POD_DELETION_GC_CONTROLLER) FixedIntervalTokenBucketConfiguration tokenBucketConfiguration,\n            @Named(POD_DELETION_GC_CONTROLLER) ControllerConfiguration controllerConfiguration,\n            KubeApiFacade kubeApiFacade,\n            KubeControllerConfiguration kubeControllerConfiguration\n    )", "modifiers": "@Inject public", "return": "", "signature": " PodDeletionGcController(\n            TitusRuntime titusRuntime,\n            LocalScheduler scheduler,\n            @Named(POD_DELETION_GC_CONTROLLER) FixedIntervalTokenBucketConfiguration tokenBucketConfiguration,\n            @Named(POD_DELETION_GC_CONTROLLER) ControllerConfiguration controllerConfiguration,\n            KubeApiFacade kubeApiFacade,\n            KubeControllerConfiguration kubeControllerConfiguration\n    )", "full_signature": "@Inject public  PodDeletionGcController(\n            TitusRuntime titusRuntime,\n            LocalScheduler scheduler,\n            @Named(POD_DELETION_GC_CONTROLLER) FixedIntervalTokenBucketConfiguration tokenBucketConfiguration,\n            @Named(POD_DELETION_GC_CONTROLLER) ControllerConfiguration controllerConfiguration,\n            KubeApiFacade kubeApiFacade,\n            KubeControllerConfiguration kubeControllerConfiguration\n    )", "class_method_signature": "PodDeletionGcController.PodDeletionGcController(\n            TitusRuntime titusRuntime,\n            LocalScheduler scheduler,\n            @Named(POD_DELETION_GC_CONTROLLER) FixedIntervalTokenBucketConfiguration tokenBucketConfiguration,\n            @Named(POD_DELETION_GC_CONTROLLER) ControllerConfiguration controllerConfiguration,\n            KubeApiFacade kubeApiFacade,\n            KubeControllerConfiguration kubeControllerConfiguration\n    )", "testcase": false, "constructor": true}, {"identifier": "shouldGc", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean shouldGc()", "full_signature": "@Override public boolean shouldGc()", "class_method_signature": "PodDeletionGcController.shouldGc()", "testcase": false, "constructor": false}, {"identifier": "getItemsToGc", "parameters": "()", "modifiers": "@Override public", "return": "List<V1Pod>", "signature": "List<V1Pod> getItemsToGc()", "full_signature": "@Override public List<V1Pod> getItemsToGc()", "class_method_signature": "PodDeletionGcController.getItemsToGc()", "testcase": false, "constructor": false}, {"identifier": "gcItem", "parameters": "(V1Pod item)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean gcItem(V1Pod item)", "full_signature": "@Override public boolean gcItem(V1Pod item)", "class_method_signature": "PodDeletionGcController.gcItem(V1Pod item)", "testcase": false, "constructor": false}, {"identifier": "isPodInPendingPhaseWithDeletionTimestamp", "parameters": "(V1Pod pod)", "modifiers": "@VisibleForTesting", "return": "boolean", "signature": "boolean isPodInPendingPhaseWithDeletionTimestamp(V1Pod pod)", "full_signature": "@VisibleForTesting boolean isPodInPendingPhaseWithDeletionTimestamp(V1Pod pod)", "class_method_signature": "PodDeletionGcController.isPodInPendingPhaseWithDeletionTimestamp(V1Pod pod)", "testcase": false, "constructor": false}, {"identifier": "isPodPastDeletionTimestamp", "parameters": "(V1Pod pod)", "modifiers": "@VisibleForTesting", "return": "boolean", "signature": "boolean isPodPastDeletionTimestamp(V1Pod pod)", "full_signature": "@VisibleForTesting boolean isPodPastDeletionTimestamp(V1Pod pod)", "class_method_signature": "PodDeletionGcController.isPodPastDeletionTimestamp(V1Pod pod)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/kubernetes/controller/PodDeletionGcController.java"}, "focal_method": {"identifier": "isPodPastDeletionTimestamp", "parameters": "(V1Pod pod)", "modifiers": "@VisibleForTesting", "return": "boolean", "body": "@VisibleForTesting\n    boolean isPodPastDeletionTimestamp(V1Pod pod) {\n        V1PodSpec spec = pod.getSpec();\n        V1ObjectMeta metadata = pod.getMetadata();\n        if (spec == null || metadata == null) {\n            return false;\n        }\n\n        Long terminationGracePeriodSeconds = spec.getTerminationGracePeriodSeconds();\n        DateTime deletionTimestamp = metadata.getDeletionTimestamp();\n        if (terminationGracePeriodSeconds == null || deletionTimestamp == null) {\n            return false;\n        }\n\n        long terminationGracePeriodMs = terminationGracePeriodSeconds * 1000L;\n        return clock.isPast(deletionTimestamp.getMillis() + terminationGracePeriodMs\n                + kubeControllerConfiguration.getPodsPastTerminationGracePeriodMs());\n    }", "signature": "boolean isPodPastDeletionTimestamp(V1Pod pod)", "full_signature": "@VisibleForTesting boolean isPodPastDeletionTimestamp(V1Pod pod)", "class_method_signature": "PodDeletionGcController.isPodPastDeletionTimestamp(V1Pod pod)", "testcase": false, "constructor": false, "invocations": ["getSpec", "getMetadata", "getTerminationGracePeriodSeconds", "getDeletionTimestamp", "isPast", "getMillis", "getPodsPastTerminationGracePeriodMs"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}