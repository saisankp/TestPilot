{"test_class": {"identifier": "SudoRetrieveThingStrategyTest", "superclass": "extends AbstractCommandStrategyTest", "interfaces": "", "fields": [{"original_string": "private SudoRetrieveThingStrategy underTest;", "modifier": "private", "type": "SudoRetrieveThingStrategy", "declarator": "underTest", "var_name": "underTest"}], "file": "services/things/persistence/src/test/java/org/eclipse/ditto/services/things/persistence/actors/strategies/commands/SudoRetrieveThingStrategyTest.java"}, "test_case": {"identifier": "isDefinedIfContextHasThingAndThingIdsAreEqual", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isDefinedIfContextHasThingAndThingIdsAreEqual() {\n        final CommandStrategy.Context<ThingId> context = getDefaultContext();\n        final SudoRetrieveThing command = SudoRetrieveThing.of(context.getState(), DittoHeaders.empty());\n\n        final boolean defined = underTest.isDefined(context, THING_V2, command);\n\n        assertThat(defined).isTrue();\n    }", "signature": "void isDefinedIfContextHasThingAndThingIdsAreEqual()", "full_signature": "@Test public void isDefinedIfContextHasThingAndThingIdsAreEqual()", "class_method_signature": "SudoRetrieveThingStrategyTest.isDefinedIfContextHasThingAndThingIdsAreEqual()", "testcase": true, "constructor": false, "invocations": ["getDefaultContext", "of", "getState", "empty", "isDefined", "isTrue", "assertThat"]}, "focal_class": {"identifier": "SudoRetrieveThingStrategy", "superclass": "extends AbstractThingCommandStrategy<SudoRetrieveThing>", "interfaces": "", "fields": [], "methods": [{"identifier": "SudoRetrieveThingStrategy", "parameters": "()", "modifiers": "", "return": "", "signature": " SudoRetrieveThingStrategy()", "full_signature": "  SudoRetrieveThingStrategy()", "class_method_signature": "SudoRetrieveThingStrategy.SudoRetrieveThingStrategy()", "testcase": false, "constructor": true}, {"identifier": "isDefined", "parameters": "(final Context<ThingId> context, @Nullable final Thing thing,\n            final SudoRetrieveThing command)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDefined(final Context<ThingId> context, @Nullable final Thing thing,\n            final SudoRetrieveThing command)", "full_signature": "@Override public boolean isDefined(final Context<ThingId> context, @Nullable final Thing thing,\n            final SudoRetrieveThing command)", "class_method_signature": "SudoRetrieveThingStrategy.isDefined(final Context<ThingId> context, @Nullable final Thing thing,\n            final SudoRetrieveThing command)", "testcase": false, "constructor": false}, {"identifier": "doApply", "parameters": "(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final SudoRetrieveThing command,\n            @Nullable final Metadata metadata)", "modifiers": "@Override protected", "return": "Result<ThingEvent>", "signature": "Result<ThingEvent> doApply(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final SudoRetrieveThing command,\n            @Nullable final Metadata metadata)", "full_signature": "@Override protected Result<ThingEvent> doApply(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final SudoRetrieveThing command,\n            @Nullable final Metadata metadata)", "class_method_signature": "SudoRetrieveThingStrategy.doApply(final Context<ThingId> context,\n            @Nullable final Thing thing,\n            final long nextRevision,\n            final SudoRetrieveThing command,\n            @Nullable final Metadata metadata)", "testcase": false, "constructor": false}, {"identifier": "determineSchemaVersion", "parameters": "(final SudoRetrieveThing command, final Thing thing)", "modifiers": "private static", "return": "JsonSchemaVersion", "signature": "JsonSchemaVersion determineSchemaVersion(final SudoRetrieveThing command, final Thing thing)", "full_signature": "private static JsonSchemaVersion determineSchemaVersion(final SudoRetrieveThing command, final Thing thing)", "class_method_signature": "SudoRetrieveThingStrategy.determineSchemaVersion(final SudoRetrieveThing command, final Thing thing)", "testcase": false, "constructor": false}, {"identifier": "unhandled", "parameters": "(final Context<ThingId> context, @Nullable final Thing thing,\n            final long nextRevision, final SudoRetrieveThing command)", "modifiers": "@Override public", "return": "Result<ThingEvent>", "signature": "Result<ThingEvent> unhandled(final Context<ThingId> context, @Nullable final Thing thing,\n            final long nextRevision, final SudoRetrieveThing command)", "full_signature": "@Override public Result<ThingEvent> unhandled(final Context<ThingId> context, @Nullable final Thing thing,\n            final long nextRevision, final SudoRetrieveThing command)", "class_method_signature": "SudoRetrieveThingStrategy.unhandled(final Context<ThingId> context, @Nullable final Thing thing,\n            final long nextRevision, final SudoRetrieveThing command)", "testcase": false, "constructor": false}, {"identifier": "previousEntityTag", "parameters": "(final SudoRetrieveThing command,\n            @Nullable final Thing previousEntity)", "modifiers": "@Override public", "return": "Optional<EntityTag>", "signature": "Optional<EntityTag> previousEntityTag(final SudoRetrieveThing command,\n            @Nullable final Thing previousEntity)", "full_signature": "@Override public Optional<EntityTag> previousEntityTag(final SudoRetrieveThing command,\n            @Nullable final Thing previousEntity)", "class_method_signature": "SudoRetrieveThingStrategy.previousEntityTag(final SudoRetrieveThing command,\n            @Nullable final Thing previousEntity)", "testcase": false, "constructor": false}, {"identifier": "nextEntityTag", "parameters": "(final SudoRetrieveThing command, @Nullable final Thing newEntity)", "modifiers": "@Override public", "return": "Optional<EntityTag>", "signature": "Optional<EntityTag> nextEntityTag(final SudoRetrieveThing command, @Nullable final Thing newEntity)", "full_signature": "@Override public Optional<EntityTag> nextEntityTag(final SudoRetrieveThing command, @Nullable final Thing newEntity)", "class_method_signature": "SudoRetrieveThingStrategy.nextEntityTag(final SudoRetrieveThing command, @Nullable final Thing newEntity)", "testcase": false, "constructor": false}], "file": "services/things/persistence/src/main/java/org/eclipse/ditto/services/things/persistence/actors/strategies/commands/SudoRetrieveThingStrategy.java"}, "focal_method": {"identifier": "isDefined", "parameters": "(final Context<ThingId> context, @Nullable final Thing thing,\n            final SudoRetrieveThing command)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isDefined(final Context<ThingId> context, @Nullable final Thing thing,\n            final SudoRetrieveThing command) {\n        final boolean thingExists = Optional.ofNullable(thing)\n                .map(t -> !t.isDeleted())\n                .orElse(false);\n\n        return Objects.equals(context.getState(), command.getEntityId()) && thingExists;\n    }", "signature": "boolean isDefined(final Context<ThingId> context, @Nullable final Thing thing,\n            final SudoRetrieveThing command)", "full_signature": "@Override public boolean isDefined(final Context<ThingId> context, @Nullable final Thing thing,\n            final SudoRetrieveThing command)", "class_method_signature": "SudoRetrieveThingStrategy.isDefined(final Context<ThingId> context, @Nullable final Thing thing,\n            final SudoRetrieveThing command)", "testcase": false, "constructor": false, "invocations": ["orElse", "map", "ofNullable", "isDeleted", "equals", "getState", "getEntityId"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}