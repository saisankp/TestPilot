{"test_class": {"identifier": "DriveReceiptsManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int RECEIPT_1_PRIMARY_KEY = 1;", "modifier": "private static final", "type": "int", "declarator": "RECEIPT_1_PRIMARY_KEY = 1", "var_name": "RECEIPT_1_PRIMARY_KEY"}, {"original_string": "private static final int RECEIPT_2_PRIMARY_KEY = 2;", "modifier": "private static final", "type": "int", "declarator": "RECEIPT_2_PRIMARY_KEY = 2", "var_name": "RECEIPT_2_PRIMARY_KEY"}, {"original_string": "DriveReceiptsManager driveReceiptsManager;", "modifier": "", "type": "DriveReceiptsManager", "declarator": "driveReceiptsManager", "var_name": "driveReceiptsManager"}, {"original_string": "@Mock\n    TableController<Receipt> receiptTableController;", "modifier": "@Mock", "type": "TableController<Receipt>", "declarator": "receiptTableController", "var_name": "receiptTableController"}, {"original_string": "@Mock\n    TripsTable tripsTable;", "modifier": "@Mock", "type": "TripsTable", "declarator": "tripsTable", "var_name": "tripsTable"}, {"original_string": "@Mock\n    ReceiptsTable receiptsTable;", "modifier": "@Mock", "type": "ReceiptsTable", "declarator": "receiptsTable", "var_name": "receiptsTable"}, {"original_string": "@Mock\n    DriveStreamsManager driveStreamsManager;", "modifier": "@Mock", "type": "DriveStreamsManager", "declarator": "driveStreamsManager", "var_name": "driveStreamsManager"}, {"original_string": "@Mock\n    DriveDatabaseManager driveDatabaseManager;", "modifier": "@Mock", "type": "DriveDatabaseManager", "declarator": "driveDatabaseManager", "var_name": "driveDatabaseManager"}, {"original_string": "@Mock\n    NetworkManager networkManager;", "modifier": "@Mock", "type": "NetworkManager", "declarator": "networkManager", "var_name": "networkManager"}, {"original_string": "@Mock\n    Analytics analytics;", "modifier": "@Mock", "type": "Analytics", "declarator": "analytics", "var_name": "analytics"}, {"original_string": "@Mock\n    DriveStreamMappings driveStreamMappings;", "modifier": "@Mock", "type": "DriveStreamMappings", "declarator": "driveStreamMappings", "var_name": "driveStreamMappings"}, {"original_string": "@Mock\n    ReceiptBuilderFactoryFactory receiptBuilderFactoryFactory;", "modifier": "@Mock", "type": "ReceiptBuilderFactoryFactory", "declarator": "receiptBuilderFactoryFactory", "var_name": "receiptBuilderFactoryFactory"}, {"original_string": "@Mock\n    ReceiptBuilderFactory receiptBuilderFactory1, receiptBuilderFactory2;", "modifier": "@Mock", "type": "ReceiptBuilderFactory", "declarator": "receiptBuilderFactory1", "var_name": "receiptBuilderFactory1"}, {"original_string": "@Mock\n    Trip trip;", "modifier": "@Mock", "type": "Trip", "declarator": "trip", "var_name": "trip"}, {"original_string": "@Mock\n    Receipt receipt1, receipt2;", "modifier": "@Mock", "type": "Receipt", "declarator": "receipt1", "var_name": "receipt1"}, {"original_string": "@Mock\n    SyncState syncState1, syncState2, newSyncState1, newSyncState2;", "modifier": "@Mock", "type": "SyncState", "declarator": "syncState1", "var_name": "syncState1"}, {"original_string": "@Mock\n    File file;", "modifier": "@Mock", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "@Captor\n    ArgumentCaptor<Receipt> receiptCaptor;", "modifier": "@Captor", "type": "ArgumentCaptor<Receipt>", "declarator": "receiptCaptor", "var_name": "receiptCaptor"}, {"original_string": "@Captor\n    ArgumentCaptor<Receipt> updatedReceiptCaptor;", "modifier": "@Captor", "type": "ArgumentCaptor<Receipt>", "declarator": "updatedReceiptCaptor", "var_name": "updatedReceiptCaptor"}, {"original_string": "@Captor\n    ArgumentCaptor<DatabaseOperationMetadata> operationMetadataCaptor;", "modifier": "@Captor", "type": "ArgumentCaptor<DatabaseOperationMetadata>", "declarator": "operationMetadataCaptor", "var_name": "operationMetadataCaptor"}], "file": "app/src/test/java/co/smartreceipts/android/sync/drive/managers/DriveReceiptsManagerTest.java"}, "test_case": {"identifier": "handleDeleteWithoutNetwork", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void handleDeleteWithoutNetwork() {\n        when(driveStreamsManager.deleteDriveFile(syncState1, true)).thenReturn(Single.just(newSyncState1));\n        when(syncState1.isSynced(SyncProvider.GoogleDrive)).thenReturn(false);\n        when(syncState1.isMarkedForDeletion(SyncProvider.GoogleDrive)).thenReturn(true);\n        when(networkManager.isNetworkAvailable()).thenReturn(false);\n\n        driveReceiptsManager.handleDelete(receipt1);\n\n        verify(receiptTableController, never()).delete(receiptCaptor.capture(), operationMetadataCaptor.capture());\n    }", "signature": "void handleDeleteWithoutNetwork()", "full_signature": "@Test public void handleDeleteWithoutNetwork()", "class_method_signature": "DriveReceiptsManagerTest.handleDeleteWithoutNetwork()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "deleteDriveFile", "just", "thenReturn", "when", "isSynced", "thenReturn", "when", "isMarkedForDeletion", "thenReturn", "when", "isNetworkAvailable", "handleDelete", "delete", "verify", "never", "capture", "capture"]}, "focal_class": {"identifier": "DriveReceiptsManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final TableController<Receipt> mReceiptTableController;", "modifier": "private final", "type": "TableController<Receipt>", "declarator": "mReceiptTableController", "var_name": "mReceiptTableController"}, {"original_string": "private final ReceiptsTable mReceiptsTable;", "modifier": "private final", "type": "ReceiptsTable", "declarator": "mReceiptsTable", "var_name": "mReceiptsTable"}, {"original_string": "private final TripsTable mTripsTable;", "modifier": "private final", "type": "TripsTable", "declarator": "mTripsTable", "var_name": "mTripsTable"}, {"original_string": "private final DriveStreamsManager mDriveTaskManager;", "modifier": "private final", "type": "DriveStreamsManager", "declarator": "mDriveTaskManager", "var_name": "mDriveTaskManager"}, {"original_string": "private final DriveDatabaseManager mDriveDatabaseManager;", "modifier": "private final", "type": "DriveDatabaseManager", "declarator": "mDriveDatabaseManager", "var_name": "mDriveDatabaseManager"}, {"original_string": "private final NetworkManager mNetworkManager;", "modifier": "private final", "type": "NetworkManager", "declarator": "mNetworkManager", "var_name": "mNetworkManager"}, {"original_string": "private final Analytics mAnalytics;", "modifier": "private final", "type": "Analytics", "declarator": "mAnalytics", "var_name": "mAnalytics"}, {"original_string": "private final DriveStreamMappings mDriveStreamMappings;", "modifier": "private final", "type": "DriveStreamMappings", "declarator": "mDriveStreamMappings", "var_name": "mDriveStreamMappings"}, {"original_string": "private final ReceiptBuilderFactoryFactory mReceiptBuilderFactoryFactory;", "modifier": "private final", "type": "ReceiptBuilderFactoryFactory", "declarator": "mReceiptBuilderFactoryFactory", "var_name": "mReceiptBuilderFactoryFactory"}, {"original_string": "private final Scheduler mObserveOnScheduler;", "modifier": "private final", "type": "Scheduler", "declarator": "mObserveOnScheduler", "var_name": "mObserveOnScheduler"}, {"original_string": "private final Scheduler mSubscribeOnScheduler;", "modifier": "private final", "type": "Scheduler", "declarator": "mSubscribeOnScheduler", "var_name": "mSubscribeOnScheduler"}, {"original_string": "private final AtomicBoolean mIsEnabled = new AtomicBoolean(true);", "modifier": "private final", "type": "AtomicBoolean", "declarator": "mIsEnabled = new AtomicBoolean(true)", "var_name": "mIsEnabled"}, {"original_string": "private final AtomicBoolean mIsInitializing = new AtomicBoolean(false);", "modifier": "private final", "type": "AtomicBoolean", "declarator": "mIsInitializing = new AtomicBoolean(false)", "var_name": "mIsInitializing"}], "methods": [{"identifier": "DriveReceiptsManager", "parameters": "(@NonNull TableController<Receipt> receiptsTableController, @NonNull TripsTable tripsTable,\n                                @NonNull ReceiptsTable receiptsTable, @NonNull DriveStreamsManager driveTaskManager,\n                                @NonNull DriveDatabaseManager driveDatabaseManager, @NonNull NetworkManager networkManager,\n                                @NonNull Analytics analytics)", "modifiers": "public", "return": "", "signature": " DriveReceiptsManager(@NonNull TableController<Receipt> receiptsTableController, @NonNull TripsTable tripsTable,\n                                @NonNull ReceiptsTable receiptsTable, @NonNull DriveStreamsManager driveTaskManager,\n                                @NonNull DriveDatabaseManager driveDatabaseManager, @NonNull NetworkManager networkManager,\n                                @NonNull Analytics analytics)", "full_signature": "public  DriveReceiptsManager(@NonNull TableController<Receipt> receiptsTableController, @NonNull TripsTable tripsTable,\n                                @NonNull ReceiptsTable receiptsTable, @NonNull DriveStreamsManager driveTaskManager,\n                                @NonNull DriveDatabaseManager driveDatabaseManager, @NonNull NetworkManager networkManager,\n                                @NonNull Analytics analytics)", "class_method_signature": "DriveReceiptsManager.DriveReceiptsManager(@NonNull TableController<Receipt> receiptsTableController, @NonNull TripsTable tripsTable,\n                                @NonNull ReceiptsTable receiptsTable, @NonNull DriveStreamsManager driveTaskManager,\n                                @NonNull DriveDatabaseManager driveDatabaseManager, @NonNull NetworkManager networkManager,\n                                @NonNull Analytics analytics)", "testcase": false, "constructor": true}, {"identifier": "DriveReceiptsManager", "parameters": "(@NonNull TableController<Receipt> receiptsTableController,\n                                @NonNull TripsTable tripsTable,\n                                @NonNull ReceiptsTable receiptsTable,\n                                @NonNull DriveStreamsManager driveTaskManager,\n                                @NonNull DriveDatabaseManager driveDatabaseManager,\n                                @NonNull NetworkManager networkManager,\n                                @NonNull Analytics analytics,\n                                @NonNull DriveStreamMappings driveStreamMappings,\n                                @NonNull ReceiptBuilderFactoryFactory receiptBuilderFactoryFactory,\n                                @NonNull Scheduler observeOnScheduler,\n                                @NonNull Scheduler subscribeOnScheduler)", "modifiers": "public", "return": "", "signature": " DriveReceiptsManager(@NonNull TableController<Receipt> receiptsTableController,\n                                @NonNull TripsTable tripsTable,\n                                @NonNull ReceiptsTable receiptsTable,\n                                @NonNull DriveStreamsManager driveTaskManager,\n                                @NonNull DriveDatabaseManager driveDatabaseManager,\n                                @NonNull NetworkManager networkManager,\n                                @NonNull Analytics analytics,\n                                @NonNull DriveStreamMappings driveStreamMappings,\n                                @NonNull ReceiptBuilderFactoryFactory receiptBuilderFactoryFactory,\n                                @NonNull Scheduler observeOnScheduler,\n                                @NonNull Scheduler subscribeOnScheduler)", "full_signature": "public  DriveReceiptsManager(@NonNull TableController<Receipt> receiptsTableController,\n                                @NonNull TripsTable tripsTable,\n                                @NonNull ReceiptsTable receiptsTable,\n                                @NonNull DriveStreamsManager driveTaskManager,\n                                @NonNull DriveDatabaseManager driveDatabaseManager,\n                                @NonNull NetworkManager networkManager,\n                                @NonNull Analytics analytics,\n                                @NonNull DriveStreamMappings driveStreamMappings,\n                                @NonNull ReceiptBuilderFactoryFactory receiptBuilderFactoryFactory,\n                                @NonNull Scheduler observeOnScheduler,\n                                @NonNull Scheduler subscribeOnScheduler)", "class_method_signature": "DriveReceiptsManager.DriveReceiptsManager(@NonNull TableController<Receipt> receiptsTableController,\n                                @NonNull TripsTable tripsTable,\n                                @NonNull ReceiptsTable receiptsTable,\n                                @NonNull DriveStreamsManager driveTaskManager,\n                                @NonNull DriveDatabaseManager driveDatabaseManager,\n                                @NonNull NetworkManager networkManager,\n                                @NonNull Analytics analytics,\n                                @NonNull DriveStreamMappings driveStreamMappings,\n                                @NonNull ReceiptBuilderFactoryFactory receiptBuilderFactoryFactory,\n                                @NonNull Scheduler observeOnScheduler,\n                                @NonNull Scheduler subscribeOnScheduler)", "testcase": false, "constructor": true}, {"identifier": "syncReceipts", "parameters": "()", "modifiers": "@SuppressLint(\"CheckResult\") public synchronized", "return": "void", "signature": "void syncReceipts()", "full_signature": "@SuppressLint(\"CheckResult\") public synchronized void syncReceipts()", "class_method_signature": "DriveReceiptsManager.syncReceipts()", "testcase": false, "constructor": false}, {"identifier": "enable", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void enable()", "full_signature": "public synchronized void enable()", "class_method_signature": "DriveReceiptsManager.enable()", "testcase": false, "constructor": false}, {"identifier": "disable", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void disable()", "full_signature": "public synchronized void disable()", "class_method_signature": "DriveReceiptsManager.disable()", "testcase": false, "constructor": false}, {"identifier": "handleInsertOrUpdate", "parameters": "(@NonNull final Receipt receipt)", "modifiers": "public synchronized", "return": "void", "signature": "void handleInsertOrUpdate(@NonNull final Receipt receipt)", "full_signature": "public synchronized void handleInsertOrUpdate(@NonNull final Receipt receipt)", "class_method_signature": "DriveReceiptsManager.handleInsertOrUpdate(@NonNull final Receipt receipt)", "testcase": false, "constructor": false}, {"identifier": "handleInsertOrUpdateInternal", "parameters": "(@NonNull final Receipt receipt)", "modifiers": "@VisibleForTesting synchronized", "return": "void", "signature": "void handleInsertOrUpdateInternal(@NonNull final Receipt receipt)", "full_signature": "@VisibleForTesting synchronized void handleInsertOrUpdateInternal(@NonNull final Receipt receipt)", "class_method_signature": "DriveReceiptsManager.handleInsertOrUpdateInternal(@NonNull final Receipt receipt)", "testcase": false, "constructor": false}, {"identifier": "handleDelete", "parameters": "(@NonNull final Receipt receipt)", "modifiers": "public synchronized", "return": "void", "signature": "void handleDelete(@NonNull final Receipt receipt)", "full_signature": "public synchronized void handleDelete(@NonNull final Receipt receipt)", "class_method_signature": "DriveReceiptsManager.handleDelete(@NonNull final Receipt receipt)", "testcase": false, "constructor": false}, {"identifier": "handleDeleteInternal", "parameters": "(@NonNull final Receipt receipt)", "modifiers": "@VisibleForTesting synchronized", "return": "void", "signature": "void handleDeleteInternal(@NonNull final Receipt receipt)", "full_signature": "@VisibleForTesting synchronized void handleDeleteInternal(@NonNull final Receipt receipt)", "class_method_signature": "DriveReceiptsManager.handleDeleteInternal(@NonNull final Receipt receipt)", "testcase": false, "constructor": false}, {"identifier": "onInsertOrUpdateObservable", "parameters": "(@NonNull final Receipt receipt)", "modifiers": "@NonNull private", "return": "Single<SyncState>", "signature": "Single<SyncState> onInsertOrUpdateObservable(@NonNull final Receipt receipt)", "full_signature": "@NonNull private Single<SyncState> onInsertOrUpdateObservable(@NonNull final Receipt receipt)", "class_method_signature": "DriveReceiptsManager.onInsertOrUpdateObservable(@NonNull final Receipt receipt)", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/sync/drive/managers/DriveReceiptsManager.java"}, "focal_method": {"identifier": "handleDelete", "parameters": "(@NonNull final Receipt receipt)", "modifiers": "public synchronized", "return": "void", "body": "public synchronized void handleDelete(@NonNull final Receipt receipt) {\n        if (!mIsInitializing.get()) {\n            handleDeleteInternal(receipt);\n        }\n    }", "signature": "void handleDelete(@NonNull final Receipt receipt)", "full_signature": "public synchronized void handleDelete(@NonNull final Receipt receipt)", "class_method_signature": "DriveReceiptsManager.handleDelete(@NonNull final Receipt receipt)", "testcase": false, "constructor": false, "invocations": ["get", "handleDeleteInternal"]}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}