{"test_class": {"identifier": "StubResourceHandlerServletTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PATH_INFO = \"pathInfo\";", "modifier": "private static final", "type": "String", "declarator": "PATH_INFO = \"pathInfo\"", "var_name": "PATH_INFO"}, {"original_string": "private static final String TYPE_PARAMETER = \"type\";", "modifier": "private static final", "type": "String", "declarator": "TYPE_PARAMETER = \"type\"", "var_name": "TYPE_PARAMETER"}, {"original_string": "private static final String TEMPLATE = \"template\";", "modifier": "private static final", "type": "String", "declarator": "TEMPLATE = \"template\"", "var_name": "TEMPLATE"}, {"original_string": "private static final String INTERCEPTOR = \"interceptor\";", "modifier": "private static final", "type": "String", "declarator": "INTERCEPTOR = \"interceptor\"", "var_name": "INTERCEPTOR"}, {"original_string": "private static final String CONDITION_CHECKER = \"condition-checker\";", "modifier": "private static final", "type": "String", "declarator": "CONDITION_CHECKER = \"condition-checker\"", "var_name": "CONDITION_CHECKER"}, {"original_string": "private static final String RESPONSE_FORMATTER = \"response-formatter\";", "modifier": "private static final", "type": "String", "declarator": "RESPONSE_FORMATTER = \"response-formatter\"", "var_name": "RESPONSE_FORMATTER"}, {"original_string": "private static final String JAR = \"jar\";", "modifier": "private static final", "type": "String", "declarator": "JAR = \"jar\"", "var_name": "JAR"}, {"original_string": "private static final String SEQUENCE_HANDLER = \"sequence-handler\";", "modifier": "private static final", "type": "String", "declarator": "SEQUENCE_HANDLER = \"sequence-handler\"", "var_name": "SEQUENCE_HANDLER"}, {"original_string": "private static final String APPLICATION_JSON = \"application/json\";", "modifier": "private static final", "type": "String", "declarator": "APPLICATION_JSON = \"application/json\"", "var_name": "APPLICATION_JSON"}, {"original_string": "private static final String ERROR_MESSAGE_TEMPLATE = \"Invalid type %s ! Valid types are: %s, %s, %s, %s, %s and %s!\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_MESSAGE_TEMPLATE = \"Invalid type %s ! Valid types are: %s, %s, %s, %s, %s and %s!\"", "var_name": "ERROR_MESSAGE_TEMPLATE"}, {"original_string": "@Mock\n    private FileListJsonBuilder fileListJsonBuilder;", "modifier": "@Mock\n    private", "type": "FileListJsonBuilder", "declarator": "fileListJsonBuilder", "var_name": "fileListJsonBuilder"}, {"original_string": "@Mock\n    private StubResourcePathProvider stubResourcePathProvider;", "modifier": "@Mock\n    private", "type": "StubResourcePathProvider", "declarator": "stubResourcePathProvider", "var_name": "stubResourcePathProvider"}, {"original_string": "@Mock\n    private ResourceFileNameHandler resourceFileNameHandler;", "modifier": "@Mock\n    private", "type": "ResourceFileNameHandler", "declarator": "resourceFileNameHandler", "var_name": "resourceFileNameHandler"}, {"original_string": "@Mock\n    private HttpServletRequest request;", "modifier": "@Mock\n    private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private HttpServletResponse response;", "modifier": "@Mock\n    private", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "@Mock\n    private Path path;", "modifier": "@Mock\n    private", "type": "Path", "declarator": "path", "var_name": "path"}, {"original_string": "@Mock\n    private PrintWriter writer;", "modifier": "@Mock\n    private", "type": "PrintWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "@Mock\n    private File file;", "modifier": "@Mock\n    private", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "@InjectMocks\n    private StubResourceHandlerServlet underTest;", "modifier": "@InjectMocks\n    private", "type": "StubResourceHandlerServlet", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-webapp/src/test/java/com/epam/wilma/webapp/config/servlet/stub/resource/StubResourceHandlerServletTest.java"}, "test_case": {"identifier": "testDoGetWhenTypeIsResponseFormatterShouldWriteResourceToResponse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDoGetWhenTypeIsResponseFormatterShouldWriteResourceToResponse() throws ServletException, IOException {\n        //GIVEN\n        String expectedResult = \"{\\\"files\\\":[\\\"ResponseFormatter.class\\\"]}\";\n        given(request.getParameter(TYPE_PARAMETER)).willReturn(RESPONSE_FORMATTER);\n        given(stubResourcePathProvider.getResponseFormatterPath()).willReturn(path);\n        given(path.toFile()).willReturn(file);\n        given(fileListJsonBuilder.buildFileListJson(file)).willReturn(expectedResult);\n        //WHEN\n        underTest.doGet(request, response);\n        //THEN\n        verify(writer).write(expectedResult);\n    }", "signature": "void testDoGetWhenTypeIsResponseFormatterShouldWriteResourceToResponse()", "full_signature": "@Test public void testDoGetWhenTypeIsResponseFormatterShouldWriteResourceToResponse()", "class_method_signature": "StubResourceHandlerServletTest.testDoGetWhenTypeIsResponseFormatterShouldWriteResourceToResponse()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getParameter", "willReturn", "given", "getResponseFormatterPath", "willReturn", "given", "toFile", "willReturn", "given", "buildFileListJson", "doGet", "write", "verify"]}, "focal_class": {"identifier": "StubResourceHandlerServlet", "superclass": "extends HttpServlet", "interfaces": "", "fields": [{"original_string": "private static final String TEMPLATE = \"template\";", "modifier": "private static final", "type": "String", "declarator": "TEMPLATE = \"template\"", "var_name": "TEMPLATE"}, {"original_string": "private static final String INTERCEPTOR = \"interceptor\";", "modifier": "private static final", "type": "String", "declarator": "INTERCEPTOR = \"interceptor\"", "var_name": "INTERCEPTOR"}, {"original_string": "private static final String CONDITION_CHECKER = \"condition-checker\";", "modifier": "private static final", "type": "String", "declarator": "CONDITION_CHECKER = \"condition-checker\"", "var_name": "CONDITION_CHECKER"}, {"original_string": "private static final String RESPONSE_FORMATTER = \"response-formatter\";", "modifier": "private static final", "type": "String", "declarator": "RESPONSE_FORMATTER = \"response-formatter\"", "var_name": "RESPONSE_FORMATTER"}, {"original_string": "private static final String SEQUENCE_HANDLER = \"sequence-handler\";", "modifier": "private static final", "type": "String", "declarator": "SEQUENCE_HANDLER = \"sequence-handler\"", "var_name": "SEQUENCE_HANDLER"}, {"original_string": "private static final String NO_TYPE_ERR_MSG = \"Please provide a type parameter in the url!\";", "modifier": "private static final", "type": "String", "declarator": "NO_TYPE_ERR_MSG = \"Please provide a type parameter in the url!\"", "var_name": "NO_TYPE_ERR_MSG"}, {"original_string": "private static final String APPLICATION_JSON = \"application/json\";", "modifier": "private static final", "type": "String", "declarator": "APPLICATION_JSON = \"application/json\"", "var_name": "APPLICATION_JSON"}, {"original_string": "private static final String JAR = \"jar\";", "modifier": "private static final", "type": "String", "declarator": "JAR = \"jar\"", "var_name": "JAR"}, {"original_string": "private static final String HTML = \"text/html\";", "modifier": "private static final", "type": "String", "declarator": "HTML = \"text/html\"", "var_name": "HTML"}, {"original_string": "private static final String ERROR_MESSAGE_TEMPLATE = \"Invalid type %s ! Valid types are: %s, %s, %s, %s, %s and %s!\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_MESSAGE_TEMPLATE = \"Invalid type %s ! Valid types are: %s, %s, %s, %s, %s and %s!\"", "var_name": "ERROR_MESSAGE_TEMPLATE"}, {"original_string": "private final FileListJsonBuilder fileListJsonBuilder;", "modifier": "private final", "type": "FileListJsonBuilder", "declarator": "fileListJsonBuilder", "var_name": "fileListJsonBuilder"}, {"original_string": "private final StubResourcePathProvider stubResourcePathProvider;", "modifier": "private final", "type": "StubResourcePathProvider", "declarator": "stubResourcePathProvider", "var_name": "stubResourcePathProvider"}, {"original_string": "private final ResourceFileNameHandler resourceFileNameHandler;", "modifier": "private final", "type": "ResourceFileNameHandler", "declarator": "resourceFileNameHandler", "var_name": "resourceFileNameHandler"}], "methods": [{"identifier": "StubResourceHandlerServlet", "parameters": "(FileListJsonBuilder fileListJsonBuilder, StubResourcePathProvider stubResourcePathProvider, ResourceFileNameHandler resourceFileNameHandler)", "modifiers": "@Autowired public", "return": "", "signature": " StubResourceHandlerServlet(FileListJsonBuilder fileListJsonBuilder, StubResourcePathProvider stubResourcePathProvider, ResourceFileNameHandler resourceFileNameHandler)", "full_signature": "@Autowired public  StubResourceHandlerServlet(FileListJsonBuilder fileListJsonBuilder, StubResourcePathProvider stubResourcePathProvider, ResourceFileNameHandler resourceFileNameHandler)", "class_method_signature": "StubResourceHandlerServlet.StubResourceHandlerServlet(FileListJsonBuilder fileListJsonBuilder, StubResourcePathProvider stubResourcePathProvider, ResourceFileNameHandler resourceFileNameHandler)", "testcase": false, "constructor": true}, {"identifier": "doGet", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp)", "modifiers": "@Override protected", "return": "void", "signature": "void doGet(final HttpServletRequest req, final HttpServletResponse resp)", "full_signature": "@Override protected void doGet(final HttpServletRequest req, final HttpServletResponse resp)", "class_method_signature": "StubResourceHandlerServlet.doGet(final HttpServletRequest req, final HttpServletResponse resp)", "testcase": false, "constructor": false}, {"identifier": "writeResponse", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp, final Path path)", "modifiers": "private", "return": "void", "signature": "void writeResponse(final HttpServletRequest req, final HttpServletResponse resp, final Path path)", "full_signature": "private void writeResponse(final HttpServletRequest req, final HttpServletResponse resp, final Path path)", "class_method_signature": "StubResourceHandlerServlet.writeResponse(final HttpServletRequest req, final HttpServletResponse resp, final Path path)", "testcase": false, "constructor": false}, {"identifier": "doPost", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp)", "modifiers": "@Override protected", "return": "void", "signature": "void doPost(final HttpServletRequest req, final HttpServletResponse resp)", "full_signature": "@Override protected void doPost(final HttpServletRequest req, final HttpServletResponse resp)", "class_method_signature": "StubResourceHandlerServlet.doPost(final HttpServletRequest req, final HttpServletResponse resp)", "testcase": false, "constructor": false}, {"identifier": "getResourcePath", "parameters": "(final String type)", "modifiers": "private", "return": "Path", "signature": "Path getResourcePath(final String type)", "full_signature": "private Path getResourcePath(final String type)", "class_method_signature": "StubResourceHandlerServlet.getResourcePath(final String type)", "testcase": false, "constructor": false}, {"identifier": "pathIsEmpty", "parameters": "(final HttpServletRequest req)", "modifiers": "private", "return": "boolean", "signature": "boolean pathIsEmpty(final HttpServletRequest req)", "full_signature": "private boolean pathIsEmpty(final HttpServletRequest req)", "class_method_signature": "StubResourceHandlerServlet.pathIsEmpty(final HttpServletRequest req)", "testcase": false, "constructor": false}, {"identifier": "writeFileNamesToResponse", "parameters": "(final HttpServletResponse resp, final Path path)", "modifiers": "private", "return": "void", "signature": "void writeFileNamesToResponse(final HttpServletResponse resp, final Path path)", "full_signature": "private void writeFileNamesToResponse(final HttpServletResponse resp, final Path path)", "class_method_signature": "StubResourceHandlerServlet.writeFileNamesToResponse(final HttpServletResponse resp, final Path path)", "testcase": false, "constructor": false}, {"identifier": "writeError", "parameters": "(final HttpServletResponse resp, final String message)", "modifiers": "private", "return": "void", "signature": "void writeError(final HttpServletResponse resp, final String message)", "full_signature": "private void writeError(final HttpServletResponse resp, final String message)", "class_method_signature": "StubResourceHandlerServlet.writeError(final HttpServletResponse resp, final String message)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-webapp/src/main/java/com/epam/wilma/webapp/config/servlet/stub/resource/StubResourceHandlerServlet.java"}, "focal_method": {"identifier": "doGet", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void doGet(final HttpServletRequest req, final HttpServletResponse resp) throws ServletException, IOException {\n        String type = req.getParameter(\"type\");\n        if (type != null) {\n            Path path = getResourcePath(type);\n            if (path != null) {\n                writeResponse(req, resp, path);\n            } else {\n                writeError(resp, String.format(ERROR_MESSAGE_TEMPLATE, type, INTERCEPTOR, CONDITION_CHECKER, RESPONSE_FORMATTER, TEMPLATE, JAR,\n                        SEQUENCE_HANDLER));\n            }\n        } else {\n            writeError(resp, NO_TYPE_ERR_MSG);\n        }\n    }", "signature": "void doGet(final HttpServletRequest req, final HttpServletResponse resp)", "full_signature": "@Override protected void doGet(final HttpServletRequest req, final HttpServletResponse resp)", "class_method_signature": "StubResourceHandlerServlet.doGet(final HttpServletRequest req, final HttpServletResponse resp)", "testcase": false, "constructor": false, "invocations": ["getParameter", "getResourcePath", "writeResponse", "writeError", "format", "writeError"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}