{"test_class": {"identifier": "IOSStringsResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final File INPUT = new File(\"src/test/resource/resfilter/ios/input.strings\");", "modifier": "private static final", "type": "File", "declarator": "INPUT = new File(\"src/test/resource/resfilter/ios/input.strings\")", "var_name": "INPUT"}, {"original_string": "private static final File EXPECTED_WRITE_FILE = new File(\"src/test/resource/resfilter/ios/write-output.strings\");", "modifier": "private static final", "type": "File", "declarator": "EXPECTED_WRITE_FILE = new File(\"src/test/resource/resfilter/ios/write-output.strings\")", "var_name": "EXPECTED_WRITE_FILE"}, {"original_string": "private static final File MERGE_INPUT_1_FILE = new File(\"src/test/resource/resfilter/ios/merge-input-1.strings\");", "modifier": "private static final", "type": "File", "declarator": "MERGE_INPUT_1_FILE = new File(\"src/test/resource/resfilter/ios/merge-input-1.strings\")", "var_name": "MERGE_INPUT_1_FILE"}, {"original_string": "private static final File MERGE_INPUT_2_FILE = new File(\"src/test/resource/resfilter/ios/merge-input-2.strings\");", "modifier": "private static final", "type": "File", "declarator": "MERGE_INPUT_2_FILE = new File(\"src/test/resource/resfilter/ios/merge-input-2.strings\")", "var_name": "MERGE_INPUT_2_FILE"}, {"original_string": "private static final File EXPECTED_MERGE_1_FILE = new File(\"src/test/resource/resfilter/ios/merge-output-1.strings\");", "modifier": "private static final", "type": "File", "declarator": "EXPECTED_MERGE_1_FILE = new File(\"src/test/resource/resfilter/ios/merge-output-1.strings\")", "var_name": "EXPECTED_MERGE_1_FILE"}, {"original_string": "private static final File EXPECTED_MERGE_2_FILE = new File(\"src/test/resource/resfilter/ios/merge-output-2.strings\");", "modifier": "private static final", "type": "File", "declarator": "EXPECTED_MERGE_2_FILE = new File(\"src/test/resource/resfilter/ios/merge-output-2.strings\")", "var_name": "EXPECTED_MERGE_2_FILE"}, {"original_string": "private static final Collection<ResourceString> EXPECTED_INPUT_RES_LIST;", "modifier": "private static final", "type": "Collection<ResourceString>", "declarator": "EXPECTED_INPUT_RES_LIST", "var_name": "EXPECTED_INPUT_RES_LIST"}, {"original_string": "private static final List<String> EXPECTED_GLOBAL_NOTES = Arrays.asList(\n            \" This is the first global comment... \",\n            \" This is the 2nd global comment... \");", "modifier": "private static final", "type": "List<String>", "declarator": "EXPECTED_GLOBAL_NOTES = Arrays.asList(\n            \" This is the first global comment... \",\n            \" This is the 2nd global comment... \")", "var_name": "EXPECTED_GLOBAL_NOTES"}, {"original_string": "private static LanguageBundle WRITE_BUNDLE;", "modifier": "private static", "type": "LanguageBundle", "declarator": "WRITE_BUNDLE", "var_name": "WRITE_BUNDLE"}, {"original_string": "private static LanguageBundle MERGE_BUNDLE;", "modifier": "private static", "type": "LanguageBundle", "declarator": "MERGE_BUNDLE", "var_name": "MERGE_BUNDLE"}, {"original_string": "private static final IOSStringsResource res = new IOSStringsResource();", "modifier": "private static final", "type": "IOSStringsResource", "declarator": "res = new IOSStringsResource()", "var_name": "res"}], "file": "gp-res-filter/src/test/java/com/ibm/g11n/pipeline/resfilter/impl/IOSStringsResourceTest.java"}, "test_case": {"identifier": "testWrite", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWrite() throws IOException, ResourceFilterException {\n        File tempFile = File.createTempFile(this.getClass().getSimpleName(), \".strings\");\n        tempFile.deleteOnExit();\n\n        try (OutputStream os = new FileOutputStream(tempFile)) {\n            res.write(os, WRITE_BUNDLE, null);\n            os.flush();\n            assertTrue(ResourceTestUtil.compareFiles(EXPECTED_WRITE_FILE, tempFile));\n        }\n    }", "signature": "void testWrite()", "full_signature": "@Test public void testWrite()", "class_method_signature": "IOSStringsResourceTest.testWrite()", "testcase": true, "constructor": false, "invocations": ["createTempFile", "getSimpleName", "getClass", "deleteOnExit", "write", "flush", "assertTrue", "compareFiles"]}, "focal_class": {"identifier": "IOSStringsResource", "superclass": "extends ResourceFilter", "interfaces": "", "fields": [{"original_string": "private static final String CHAR_SET = \"UTF-8\";", "modifier": "private static final", "type": "String", "declarator": "CHAR_SET = \"UTF-8\"", "var_name": "CHAR_SET"}, {"original_string": "private static final String COMMENT_BEGIN = \"/*\";", "modifier": "private static final", "type": "String", "declarator": "COMMENT_BEGIN = \"/*\"", "var_name": "COMMENT_BEGIN"}, {"original_string": "private static final String COMMENT_END = \"*/\";", "modifier": "private static final", "type": "String", "declarator": "COMMENT_END = \"*/\"", "var_name": "COMMENT_END"}], "methods": [{"identifier": "parse", "parameters": "(InputStream inStream, FilterOptions options)", "modifiers": "@Override public", "return": "LanguageBundle", "signature": "LanguageBundle parse(InputStream inStream, FilterOptions options)", "full_signature": "@Override public LanguageBundle parse(InputStream inStream, FilterOptions options)", "class_method_signature": "IOSStringsResource.parse(InputStream inStream, FilterOptions options)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options)", "modifiers": "@Override public", "return": "void", "signature": "void write(OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options)", "full_signature": "@Override public void write(OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options)", "class_method_signature": "IOSStringsResource.write(OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(InputStream baseStream, OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options)", "modifiers": "@Override public", "return": "void", "signature": "void merge(InputStream baseStream, OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options)", "full_signature": "@Override public void merge(InputStream baseStream, OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options)", "class_method_signature": "IOSStringsResource.merge(InputStream baseStream, OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options)", "testcase": false, "constructor": false}, {"identifier": "formatEntry", "parameters": "(String key, String value, List<String> notes, BreakIterator brkItr)", "modifiers": "static", "return": "String", "signature": "String formatEntry(String key, String value, List<String> notes, BreakIterator brkItr)", "full_signature": "static String formatEntry(String key, String value, List<String> notes, BreakIterator brkItr)", "class_method_signature": "IOSStringsResource.formatEntry(String key, String value, List<String> notes, BreakIterator brkItr)", "testcase": false, "constructor": false}], "file": "gp-res-filter/src/main/java/com/ibm/g11n/pipeline/resfilter/impl/IOSStringsResource.java"}, "focal_method": {"identifier": "write", "parameters": "(OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void write(OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options) throws IOException, ResourceFilterException {\n\n        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(outStream, CHAR_SET));\n\n        boolean globalNotesWritten = false;\n        for (String globalNote : languageBundle.getNotes()) {\n            writer.write(COMMENT_BEGIN+globalNote+COMMENT_END);\n            writer.newLine();\n            globalNotesWritten = true;\n        }\n        if (globalNotesWritten) {\n            writer.newLine();\n        }\n\n        BreakIterator brkItr = Utils.getWordBreakIterator(options);\n\n        for (ResourceString res : languageBundle.getSortedResourceStrings()) {\n            // empties the buffer\n            writer.write(formatEntry(res.getKey(), res.getValue(), res.getNotes(), brkItr));\n        }\n\n        writer.flush();\n    }", "signature": "void write(OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options)", "full_signature": "@Override public void write(OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options)", "class_method_signature": "IOSStringsResource.write(OutputStream outStream, LanguageBundle languageBundle,\n            FilterOptions options)", "testcase": false, "constructor": false, "invocations": ["getNotes", "write", "newLine", "newLine", "getWordBreakIterator", "getSortedResourceStrings", "write", "formatEntry", "getKey", "getValue", "getNotes", "flush"]}, "repository": {"repo_id": 46134098, "url": "https://github.com/IBM-Cloud/gp-java-tools", "language": "Java", "is_fork": false, "fork_count": 16, "stargazer_count": 9, "size": 6216, "license": "licensed"}}