{"test_class": {"identifier": "CakeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Cake c1 = new Cake(\"Birthday\", \"Chocolate\", 1, 1,\n                        \"flour\", \"sugar\", \"cocoa powder\", \"vanilla\", \"eggs\",\n                        \"butter\", \"baking soda\", \"baking powder\", \"salt\");", "modifier": "private", "type": "Cake", "declarator": "c1 = new Cake(\"Birthday\", \"Chocolate\", 1, 1,\n                        \"flour\", \"sugar\", \"cocoa powder\", \"vanilla\", \"eggs\",\n                        \"butter\", \"baking soda\", \"baking powder\", \"salt\")", "var_name": "c1"}, {"original_string": "private Cake c2 = new Cake(\"2-Layer\", \"Red Velvet\", 1, 2,\n                        \"flour\", \"sugar\", \"cocoa powder\", \"food coloring\",\n                        \"eggs\", \"butter\", \"baking soda\", \"baking powder\",\n                        \"salt\");", "modifier": "private", "type": "Cake", "declarator": "c2 = new Cake(\"2-Layer\", \"Red Velvet\", 1, 2,\n                        \"flour\", \"sugar\", \"cocoa powder\", \"food coloring\",\n                        \"eggs\", \"butter\", \"baking soda\", \"baking powder\",\n                        \"salt\")", "var_name": "c2"}], "file": "Projects/Project_10/CakeTest.java"}, "test_case": {"identifier": "priceTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void priceTest() {\n      Assert.assertEquals(\"\", 8, c1.price(), .001);\n      Assert.assertFalse(\"\", 12 == c2.price());\n   }", "signature": "void priceTest()", "full_signature": "@Test public void priceTest()", "class_method_signature": "CakeTest.priceTest()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "price", "assertFalse", "price"]}, "focal_class": {"identifier": "Cake", "superclass": "extends BakedItem", "interfaces": "", "fields": [{"original_string": "protected int layers;", "modifier": "protected", "type": "int", "declarator": "layers", "var_name": "layers"}, {"original_string": "public static final double BASE_RATE = 8.0;", "modifier": "public static final", "type": "double", "declarator": "BASE_RATE = 8.0", "var_name": "BASE_RATE"}], "methods": [{"identifier": "Cake", "parameters": "(String nameIn, String flavorIn, int quantityIn, \n                        int layersIn, String ... ingredientsIn)", "modifiers": "public", "return": "", "signature": " Cake(String nameIn, String flavorIn, int quantityIn, \n                        int layersIn, String ... ingredientsIn)", "full_signature": "public  Cake(String nameIn, String flavorIn, int quantityIn, \n                        int layersIn, String ... ingredientsIn)", "class_method_signature": "Cake.Cake(String nameIn, String flavorIn, int quantityIn, \n                        int layersIn, String ... ingredientsIn)", "testcase": false, "constructor": true}, {"identifier": "getLayers", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLayers()", "full_signature": "public int getLayers()", "class_method_signature": "Cake.getLayers()", "testcase": false, "constructor": false}, {"identifier": "setLayers", "parameters": "(int layersIn)", "modifiers": "public", "return": "void", "signature": "void setLayers(int layersIn)", "full_signature": "public void setLayers(int layersIn)", "class_method_signature": "Cake.setLayers(int layersIn)", "testcase": false, "constructor": false}, {"identifier": "price", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double price()", "full_signature": "public double price()", "class_method_signature": "Cake.price()", "testcase": false, "constructor": false}], "file": "Projects/Project_10/Cake.java"}, "focal_method": {"identifier": "price", "parameters": "()", "modifiers": "public", "return": "double", "body": "public double price() {\n      return (BASE_RATE * layers) * quantity;\n   }", "signature": "double price()", "full_signature": "public double price()", "class_method_signature": "Cake.price()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 79497496, "url": "https://github.com/perryBunn/COMP1210", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 15825, "license": "MIT License"}}