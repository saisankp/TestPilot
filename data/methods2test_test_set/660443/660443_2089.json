{"test_class": {"identifier": "InChIGeneratorFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "storage/inchi/src/test/java/org/openscience/cdk/inchi/InChIGeneratorFactoryTest.java"}, "test_case": {"identifier": "testGetInstance", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetInstance() throws CDKException {\n        InChIGeneratorFactory factory = InChIGeneratorFactory.getInstance();\n        Assert.assertNotNull(factory);\n    }", "signature": "void testGetInstance()", "full_signature": "@Test public void testGetInstance()", "class_method_signature": "InChIGeneratorFactoryTest.testGetInstance()", "testcase": true, "constructor": false, "invocations": ["getInstance", "assertNotNull"]}, "focal_class": {"identifier": "InChIGeneratorFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static InChIGeneratorFactory INSTANCE;", "modifier": "private static", "type": "InChIGeneratorFactory", "declarator": "INSTANCE", "var_name": "INSTANCE"}, {"original_string": "private boolean                      ignoreAromaticBonds = true;", "modifier": "private", "type": "boolean", "declarator": "ignoreAromaticBonds = true", "var_name": "ignoreAromaticBonds"}], "methods": [{"identifier": "InChIGeneratorFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " InChIGeneratorFactory()", "full_signature": "private  InChIGeneratorFactory()", "class_method_signature": "InChIGeneratorFactory.InChIGeneratorFactory()", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "InChIGeneratorFactory", "signature": "InChIGeneratorFactory getInstance()", "full_signature": "public static InChIGeneratorFactory getInstance()", "class_method_signature": "InChIGeneratorFactory.getInstance()", "testcase": false, "constructor": false}, {"identifier": "setIgnoreAromaticBonds", "parameters": "(boolean ignore)", "modifiers": "@Deprecated public", "return": "void", "signature": "void setIgnoreAromaticBonds(boolean ignore)", "full_signature": "@Deprecated public void setIgnoreAromaticBonds(boolean ignore)", "class_method_signature": "InChIGeneratorFactory.setIgnoreAromaticBonds(boolean ignore)", "testcase": false, "constructor": false}, {"identifier": "getIgnoreAromaticBonds", "parameters": "()", "modifiers": "@Deprecated public", "return": "boolean", "signature": "boolean getIgnoreAromaticBonds()", "full_signature": "@Deprecated public boolean getIgnoreAromaticBonds()", "class_method_signature": "InChIGeneratorFactory.getIgnoreAromaticBonds()", "testcase": false, "constructor": false}, {"identifier": "getInChIGenerator", "parameters": "(IAtomContainer container)", "modifiers": "public", "return": "InChIGenerator", "signature": "InChIGenerator getInChIGenerator(IAtomContainer container)", "full_signature": "public InChIGenerator getInChIGenerator(IAtomContainer container)", "class_method_signature": "InChIGeneratorFactory.getInChIGenerator(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "getInChIGenerator", "parameters": "(IAtomContainer container, String options)", "modifiers": "public", "return": "InChIGenerator", "signature": "InChIGenerator getInChIGenerator(IAtomContainer container, String options)", "full_signature": "public InChIGenerator getInChIGenerator(IAtomContainer container, String options)", "class_method_signature": "InChIGeneratorFactory.getInChIGenerator(IAtomContainer container, String options)", "testcase": false, "constructor": false}, {"identifier": "getInChIGenerator", "parameters": "(IAtomContainer container, List<INCHI_OPTION> options)", "modifiers": "public", "return": "InChIGenerator", "signature": "InChIGenerator getInChIGenerator(IAtomContainer container, List<INCHI_OPTION> options)", "full_signature": "public InChIGenerator getInChIGenerator(IAtomContainer container, List<INCHI_OPTION> options)", "class_method_signature": "InChIGeneratorFactory.getInChIGenerator(IAtomContainer container, List<INCHI_OPTION> options)", "testcase": false, "constructor": false}, {"identifier": "getInChIToStructure", "parameters": "(String inchi, IChemObjectBuilder builder)", "modifiers": "public", "return": "InChIToStructure", "signature": "InChIToStructure getInChIToStructure(String inchi, IChemObjectBuilder builder)", "full_signature": "public InChIToStructure getInChIToStructure(String inchi, IChemObjectBuilder builder)", "class_method_signature": "InChIGeneratorFactory.getInChIToStructure(String inchi, IChemObjectBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "getInChIToStructure", "parameters": "(String inchi, IChemObjectBuilder builder, String options)", "modifiers": "public", "return": "InChIToStructure", "signature": "InChIToStructure getInChIToStructure(String inchi, IChemObjectBuilder builder, String options)", "full_signature": "public InChIToStructure getInChIToStructure(String inchi, IChemObjectBuilder builder, String options)", "class_method_signature": "InChIGeneratorFactory.getInChIToStructure(String inchi, IChemObjectBuilder builder, String options)", "testcase": false, "constructor": false}, {"identifier": "getInChIToStructure", "parameters": "(String inchi, IChemObjectBuilder builder, List<String> options)", "modifiers": "public", "return": "InChIToStructure", "signature": "InChIToStructure getInChIToStructure(String inchi, IChemObjectBuilder builder, List<String> options)", "full_signature": "public InChIToStructure getInChIToStructure(String inchi, IChemObjectBuilder builder, List<String> options)", "class_method_signature": "InChIGeneratorFactory.getInChIToStructure(String inchi, IChemObjectBuilder builder, List<String> options)", "testcase": false, "constructor": false}], "file": "storage/inchi/src/main/java/org/openscience/cdk/inchi/InChIGeneratorFactory.java"}, "focal_method": {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "InChIGeneratorFactory", "body": "public static InChIGeneratorFactory getInstance() throws CDKException {\n        synchronized (InChIGeneratorFactory.class) {\n            if (INSTANCE == null) {\n                INSTANCE = new InChIGeneratorFactory();\n            }\n            return INSTANCE;\n        }\n    }", "signature": "InChIGeneratorFactory getInstance()", "full_signature": "public static InChIGeneratorFactory getInstance()", "class_method_signature": "InChIGeneratorFactory.getInstance()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}