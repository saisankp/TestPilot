{"test_class": {"identifier": "QuerySetTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/extensions/xep0313-mam/src/test/java/org/apache/vysper/xmpp/modules/extension/xep0313_mam/query/QuerySetTest.java"}, "test_case": {"identifier": "maxAndFirstMessageIdBlankIsALastPageQuery", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void maxAndFirstMessageIdBlankIsALastPageQuery() throws XMLSemanticError {\n        Set set = Set.builder().max(10L).before(\"\").build();\n        QuerySet tested = new QuerySet(set);\n        assertTrue(tested.lastPage());\n    }", "signature": "void maxAndFirstMessageIdBlankIsALastPageQuery()", "full_signature": "@Test public void maxAndFirstMessageIdBlankIsALastPageQuery()", "class_method_signature": "QuerySetTest.maxAndFirstMessageIdBlankIsALastPageQuery()", "testcase": true, "constructor": false, "invocations": ["build", "before", "max", "builder", "assertTrue", "lastPage"]}, "focal_class": {"identifier": "QuerySet", "superclass": "", "interfaces": "implements MessagePageRequest", "fields": [{"original_string": "private final Long max;", "modifier": "private final", "type": "Long", "declarator": "max", "var_name": "max"}, {"original_string": "private final String after;", "modifier": "private final", "type": "String", "declarator": "after", "var_name": "after"}, {"original_string": "private final String before;", "modifier": "private final", "type": "String", "declarator": "before", "var_name": "before"}], "methods": [{"identifier": "QuerySet", "parameters": "(Set set)", "modifiers": "public", "return": "", "signature": " QuerySet(Set set)", "full_signature": "public  QuerySet(Set set)", "class_method_signature": "QuerySet.QuerySet(Set set)", "testcase": false, "constructor": true}, {"identifier": "empty", "parameters": "()", "modifiers": "public static", "return": "QuerySet", "signature": "QuerySet empty()", "full_signature": "public static QuerySet empty()", "class_method_signature": "QuerySet.empty()", "testcase": false, "constructor": false}, {"identifier": "pageSize", "parameters": "()", "modifiers": "@Override public", "return": "Optional<Long>", "signature": "Optional<Long> pageSize()", "full_signature": "@Override public Optional<Long> pageSize()", "class_method_signature": "QuerySet.pageSize()", "testcase": false, "constructor": false}, {"identifier": "firstMessageId", "parameters": "()", "modifiers": "@Override public", "return": "Optional<String>", "signature": "Optional<String> firstMessageId()", "full_signature": "@Override public Optional<String> firstMessageId()", "class_method_signature": "QuerySet.firstMessageId()", "testcase": false, "constructor": false}, {"identifier": "lastMessageId", "parameters": "()", "modifiers": "@Override public", "return": "Optional<String>", "signature": "Optional<String> lastMessageId()", "full_signature": "@Override public Optional<String> lastMessageId()", "class_method_signature": "QuerySet.lastMessageId()", "testcase": false, "constructor": false}, {"identifier": "lastPage", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean lastPage()", "full_signature": "public boolean lastPage()", "class_method_signature": "QuerySet.lastPage()", "testcase": false, "constructor": false}], "file": "server/extensions/xep0313-mam/src/main/java/org/apache/vysper/xmpp/modules/extension/xep0313_mam/query/QuerySet.java"}, "focal_method": {"identifier": "lastPage", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean lastPage() {\n        return max != null && after == null && ofNullable(before).filter(StringUtils::isBlank).isPresent();\n    }", "signature": "boolean lastPage()", "full_signature": "public boolean lastPage()", "class_method_signature": "QuerySet.lastPage()", "testcase": false, "constructor": false, "invocations": ["isPresent", "filter", "ofNullable"]}, "repository": {"repo_id": 165370485, "url": "https://github.com/apache/mina-vysper", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 29305, "license": "licensed"}}