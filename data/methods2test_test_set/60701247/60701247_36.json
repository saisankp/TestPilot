{"test_class": {"identifier": "SimpleValuePairEnumSupportTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  private NlProperty myProperty;", "modifier": "@Mock\n  private", "type": "NlProperty", "declarator": "myProperty", "var_name": "myProperty"}, {"original_string": "@Mock\n  private ResourceResolver myResolver;", "modifier": "@Mock\n  private", "type": "ResourceResolver", "declarator": "myResolver", "var_name": "myResolver"}, {"original_string": "private SimpleValuePairEnumSupport mySupport;", "modifier": "private", "type": "SimpleValuePairEnumSupport", "declarator": "mySupport", "var_name": "mySupport"}], "file": "designer/testSrc/com/android/tools/idea/uibuilder/property/editors/support/SimpleValuePairEnumSupportTest.java"}, "test_case": {"identifier": "testFindPossibleValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testFindPossibleValues() {\n    assertThat(mySupport.getAllValues()).containsExactly(\n      new ValueWithDisplayString(\"display1\", \"item1\"),\n      new ValueWithDisplayString(\"display2\", \"item2\")).inOrder();\n  }", "signature": "void testFindPossibleValues()", "full_signature": "@Test public void testFindPossibleValues()", "class_method_signature": "SimpleValuePairEnumSupportTest.testFindPossibleValues()", "testcase": true, "constructor": false, "invocations": ["inOrder", "containsExactly", "assertThat", "getAllValues"]}, "focal_class": {"identifier": "SimpleValuePairEnumSupport", "superclass": "extends EnumSupport", "interfaces": "", "fields": [{"original_string": "private final Map<String, String> myPossibleValues;", "modifier": "private final", "type": "Map<String, String>", "declarator": "myPossibleValues", "var_name": "myPossibleValues"}], "methods": [{"identifier": "SimpleValuePairEnumSupport", "parameters": "(@NotNull NlProperty property, @NotNull Map<String, String> possibleValues)", "modifiers": "public", "return": "", "signature": " SimpleValuePairEnumSupport(@NotNull NlProperty property, @NotNull Map<String, String> possibleValues)", "full_signature": "public  SimpleValuePairEnumSupport(@NotNull NlProperty property, @NotNull Map<String, String> possibleValues)", "class_method_signature": "SimpleValuePairEnumSupport.SimpleValuePairEnumSupport(@NotNull NlProperty property, @NotNull Map<String, String> possibleValues)", "testcase": false, "constructor": true}, {"identifier": "getAllValues", "parameters": "()", "modifiers": "@Override @NotNull public", "return": "List<ValueWithDisplayString>", "signature": "List<ValueWithDisplayString> getAllValues()", "full_signature": "@Override @NotNull public List<ValueWithDisplayString> getAllValues()", "class_method_signature": "SimpleValuePairEnumSupport.getAllValues()", "testcase": false, "constructor": false}, {"identifier": "createFromResolvedValue", "parameters": "(@NotNull String resolvedValue, @Nullable String value, @Nullable String hint)", "modifiers": "@Override @NotNull protected", "return": "ValueWithDisplayString", "signature": "ValueWithDisplayString createFromResolvedValue(@NotNull String resolvedValue, @Nullable String value, @Nullable String hint)", "full_signature": "@Override @NotNull protected ValueWithDisplayString createFromResolvedValue(@NotNull String resolvedValue, @Nullable String value, @Nullable String hint)", "class_method_signature": "SimpleValuePairEnumSupport.createFromResolvedValue(@NotNull String resolvedValue, @Nullable String value, @Nullable String hint)", "testcase": false, "constructor": false}], "file": "designer/src/com/android/tools/idea/uibuilder/property/editors/support/SimpleValuePairEnumSupport.java"}, "focal_method": {"identifier": "getAllValues", "parameters": "()", "modifiers": "@Override @NotNull public", "return": "List<ValueWithDisplayString>", "body": "@Override\n  @NotNull\n  public List<ValueWithDisplayString> getAllValues() {\n    List<ValueWithDisplayString> values = new ArrayList<>(myPossibleValues.size());\n    for (Map.Entry<String, String> valuePair : myPossibleValues.entrySet()) {\n      values.add(new ValueWithDisplayString(valuePair.getValue(), valuePair.getKey()));\n    }\n    return values;\n  }", "signature": "List<ValueWithDisplayString> getAllValues()", "full_signature": "@Override @NotNull public List<ValueWithDisplayString> getAllValues()", "class_method_signature": "SimpleValuePairEnumSupport.getAllValues()", "testcase": false, "constructor": false, "invocations": ["size", "entrySet", "add", "getValue", "getKey"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}