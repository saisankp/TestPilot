{"test_class": {"identifier": "PaperScissorsStoneTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PaperScissorsStone paperScissorsStone;", "modifier": "private", "type": "PaperScissorsStone", "declarator": "paperScissorsStone", "var_name": "paperScissorsStone"}, {"original_string": "private PaperScissorsStone.Scissors scissors;", "modifier": "private", "type": "PaperScissorsStone.Scissors", "declarator": "scissors", "var_name": "scissors"}, {"original_string": "private PaperScissorsStone.Paper paper;", "modifier": "private", "type": "PaperScissorsStone.Paper", "declarator": "paper", "var_name": "paper"}, {"original_string": "private PaperScissorsStone.Stone stone;", "modifier": "private", "type": "PaperScissorsStone.Stone", "declarator": "stone", "var_name": "stone"}], "file": "paperScissorsStone/java/03082016_paul-flo/src/test/java/com/pss/PaperScissorsStoneTest.java"}, "test_case": {"identifier": "paperBeatsStone", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void paperBeatsStone() {\n\n        Move result = paperScissorsStone.result(stone, paper);\n\n        assertThat(result).isEqualTo(paper);\n    }", "signature": "void paperBeatsStone()", "full_signature": "@Test public void paperBeatsStone()", "class_method_signature": "PaperScissorsStoneTest.paperBeatsStone()", "testcase": true, "constructor": false, "invocations": ["result", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "PaperScissorsStone", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "result", "parameters": "(Move firstMove, Move secondMove)", "modifiers": "public", "return": "Move", "signature": "Move result(Move firstMove, Move secondMove)", "full_signature": "public Move result(Move firstMove, Move secondMove)", "class_method_signature": "PaperScissorsStone.result(Move firstMove, Move secondMove)", "testcase": false, "constructor": false}], "file": "paperScissorsStone/java/03082016_paul-flo/src/main/java/com/pss/PaperScissorsStone.java"}, "focal_method": {"identifier": "result", "parameters": "(Move firstMove, Move secondMove)", "modifiers": "public", "return": "Move", "body": "public Move result(Move firstMove, Move secondMove) {\n        return firstMove.accept(secondMove);\n    }", "signature": "Move result(Move firstMove, Move secondMove)", "full_signature": "public Move result(Move firstMove, Move secondMove)", "class_method_signature": "PaperScissorsStone.result(Move firstMove, Move secondMove)", "testcase": false, "constructor": false, "invocations": ["accept"]}, "repository": {"repo_id": 6509909, "url": "https://github.com/novoda/dojos", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 72, "size": 12987, "license": "licensed"}}