{"test_class": {"identifier": "WebSearchResourceTest", "superclass": "extends ResourceTest", "interfaces": "", "fields": [{"original_string": "private RepositoryHandler repositoryHandler;", "modifier": "private", "type": "RepositoryHandler", "declarator": "repositoryHandler", "var_name": "repositoryHandler"}], "file": "server/src/test/java/org/axway/grapes/server/webapp/resources/WebSearchResourceTest.java"}, "test_case": {"identifier": "getSearchResult", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getSearchResult() throws Exception {\n\n        List<String> moduleIds  = new ArrayList<>();\n        moduleIds.add(\"testSearch_id_1\");\n        moduleIds.add(\"testSearch_id_2\");\n        List<String> artifactIds  = new ArrayList<>();\n        artifactIds.add(\"testSearch_artifact_id_1\");\n        artifactIds.add(\"testSearch_artifact_id_2\");\n\n        DbSearch search = new DbSearch();\n        search.setModules(moduleIds);\n        search.setArtifacts(artifactIds);\n\n        when(repositoryHandler.getSearchResult(eq(\"testSearch\"), (FiltersHolder) anyObject())).thenReturn(search);\n\n        final WebResource resource = client().resource(\"/\" + ServerAPI.SEARCH_RESOURCE + \"/testSearch\");\n        final ClientResponse response = resource.accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);\n        assertNotNull(response);\n        assertEquals(HttpStatus.OK_200, response.getStatus());\n\n        final String results = response.getEntity(new GenericType<String>() {\n        });\n        assertEquals(\"{\\\"modules\\\":[\\\"testSearch_id_1\\\",\\\"testSearch_id_2\\\"],\\\"artifacts\\\":[\\\"testSearch_artifact_id_1\\\",\\\"testSearch_artifact_id_2\\\"]}\", results);\n    }", "signature": "void getSearchResult()", "full_signature": "@Test public void getSearchResult()", "class_method_signature": "WebSearchResourceTest.getSearchResult()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "setModules", "setArtifacts", "thenReturn", "when", "getSearchResult", "eq", "anyObject", "resource", "client", "get", "accept", "assertNotNull", "assertEquals", "getStatus", "getEntity", "assertEquals"]}, "focal_class": {"identifier": "WebSearchResource", "superclass": "extends AbstractResource", "interfaces": "", "fields": [], "methods": [{"identifier": "WebSearchResource", "parameters": "(RepositoryHandler repoHandler, GrapesServerConfig dmConfig)", "modifiers": "public", "return": "", "signature": " WebSearchResource(RepositoryHandler repoHandler, GrapesServerConfig dmConfig)", "full_signature": "public  WebSearchResource(RepositoryHandler repoHandler, GrapesServerConfig dmConfig)", "class_method_signature": "WebSearchResource.WebSearchResource(RepositoryHandler repoHandler, GrapesServerConfig dmConfig)", "testcase": false, "constructor": true}, {"identifier": "getSearchResult", "parameters": "(@PathParam(\"searchWord\") final String searchWord, @Context final UriInfo uriInfo)", "modifiers": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{searchWord}\") public", "return": "Response", "signature": "Response getSearchResult(@PathParam(\"searchWord\") final String searchWord, @Context final UriInfo uriInfo)", "full_signature": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{searchWord}\") public Response getSearchResult(@PathParam(\"searchWord\") final String searchWord, @Context final UriInfo uriInfo)", "class_method_signature": "WebSearchResource.getSearchResult(@PathParam(\"searchWord\") final String searchWord, @Context final UriInfo uriInfo)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/axway/grapes/server/webapp/resources/WebSearchResource.java"}, "focal_method": {"identifier": "getSearchResult", "parameters": "(@PathParam(\"searchWord\") final String searchWord, @Context final UriInfo uriInfo)", "modifiers": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{searchWord}\") public", "return": "Response", "body": "@GET\n    @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON})\n    @Path(\"/{searchWord}\")\n    public Response getSearchResult(@PathParam(\"searchWord\") final String searchWord, @Context final UriInfo uriInfo) {\n\n        // Check the length of the search word and if it contains spaces\n        if(searchWord.length() < 3 || searchWord.indexOf(\" \") != -1) {\n            return Response.status(Response.Status.NOT_ACCEPTABLE).build();\n        }\n\n        SearchView view = new SearchView();\n\n        final FiltersHolder filters = new FiltersHolder();\n        filters.init(uriInfo.getQueryParameters());\n\n        DbSearch result = getSearchHandler().getSearchResult(searchWord, filters);\n\n        view.setSearchOj(result);\n        return Response.ok(view).build();\n    }", "signature": "Response getSearchResult(@PathParam(\"searchWord\") final String searchWord, @Context final UriInfo uriInfo)", "full_signature": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{searchWord}\") public Response getSearchResult(@PathParam(\"searchWord\") final String searchWord, @Context final UriInfo uriInfo)", "class_method_signature": "WebSearchResource.getSearchResult(@PathParam(\"searchWord\") final String searchWord, @Context final UriInfo uriInfo)", "testcase": false, "constructor": false, "invocations": ["length", "indexOf", "build", "status", "init", "getQueryParameters", "getSearchResult", "getSearchHandler", "setSearchOj", "build", "ok"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}