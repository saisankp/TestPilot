{"test_class": {"identifier": "CookieJarTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "CookieJar cookieJar;", "modifier": "", "type": "CookieJar", "declarator": "cookieJar", "var_name": "cookieJar"}], "file": "xenon-common/src/test/java/com/vmware/xenon/common/http/netty/CookieJarTest.java"}, "test_case": {"identifier": "testCookieDecode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCookieDecode() {\n        String cookieString = \"key1=val1; key2=val2\";\n        Map<String, String> cookies = CookieJar.decodeCookies(cookieString);\n        assertEquals(cookies.get(\"key1\"), \"val1\");\n        assertEquals(cookies.get(\"key2\"), \"val2\");\n        cookieString = \"foo=bar\";\n        cookies = CookieJar.decodeCookies(cookieString);\n        assertEquals(cookies.get(\"foo\"), \"bar\");\n        cookieString = \"\";\n        cookies = CookieJar.decodeCookies(cookieString);\n        assertEquals(cookies.size(), 0);\n        cookieString = \";\";\n        cookies = CookieJar.decodeCookies(cookieString);\n        assertEquals(cookies.size(), 0);\n        cookieString = \"foo=;foo=bar\";\n        cookies = CookieJar.decodeCookies(cookieString);\n        assertEquals(cookies.size(), 1);\n        assertEquals(cookies.get(\"foo\"), \"bar\");\n\n    }", "signature": "void testCookieDecode()", "full_signature": "@Test public void testCookieDecode()", "class_method_signature": "CookieJarTest.testCookieDecode()", "testcase": true, "constructor": false, "invocations": ["decodeCookies", "assertEquals", "get", "assertEquals", "get", "decodeCookies", "assertEquals", "get", "decodeCookies", "assertEquals", "size", "decodeCookies", "assertEquals", "size", "decodeCookies", "assertEquals", "size", "assertEquals", "get"]}, "focal_class": {"identifier": "CookieJar", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String URI_SCHEME_HTTPS = \"https\";", "modifier": "static final", "type": "String", "declarator": "URI_SCHEME_HTTPS = \"https\"", "var_name": "URI_SCHEME_HTTPS"}, {"original_string": "Map<String, Set<Cookie>> cookiesByOrigin = new ConcurrentSkipListMap<>();", "modifier": "", "type": "Map<String, Set<Cookie>>", "declarator": "cookiesByOrigin = new ConcurrentSkipListMap<>()", "var_name": "cookiesByOrigin"}], "methods": [{"identifier": "buildOrigin", "parameters": "(URI uri)", "modifiers": "static", "return": "String", "signature": "String buildOrigin(URI uri)", "full_signature": "static String buildOrigin(URI uri)", "class_method_signature": "CookieJar.buildOrigin(URI uri)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(URI uri, Cookie cookie)", "modifiers": "public", "return": "void", "signature": "void add(URI uri, Cookie cookie)", "full_signature": "public void add(URI uri, Cookie cookie)", "class_method_signature": "CookieJar.add(URI uri, Cookie cookie)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "(URI uri)", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> list(URI uri)", "full_signature": "public Map<String, String> list(URI uri)", "class_method_signature": "CookieJar.list(URI uri)", "testcase": false, "constructor": false}, {"identifier": "encodeCookies", "parameters": "(Map<String, String> cookies)", "modifiers": "public static", "return": "String", "signature": "String encodeCookies(Map<String, String> cookies)", "full_signature": "public static String encodeCookies(Map<String, String> cookies)", "class_method_signature": "CookieJar.encodeCookies(Map<String, String> cookies)", "testcase": false, "constructor": false}, {"identifier": "decodeCookies", "parameters": "(String header)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> decodeCookies(String header)", "full_signature": "public static Map<String, String> decodeCookies(String header)", "class_method_signature": "CookieJar.decodeCookies(String header)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "CookieJar.isEmpty()", "testcase": false, "constructor": false}], "file": "xenon-common/src/main/java/com/vmware/xenon/common/http/netty/CookieJar.java"}, "focal_method": {"identifier": "decodeCookies", "parameters": "(String header)", "modifiers": "public static", "return": "Map<String, String>", "body": "public static Map<String, String> decodeCookies(String header) {\n        Map<String, String> cookies = new HashMap<>();\n        String [] cookiePairs = header.split(\";\");\n        if (cookiePairs.length != 0) {\n            for (String cookiePair : cookiePairs) {\n                String[] keyVal = cookiePair.split(\"=\");\n                if (keyVal.length == 2) {\n                    cookies.put(keyVal[0].trim(), keyVal[1].trim());\n                }\n            }\n        }\n        return cookies;\n    }", "signature": "Map<String, String> decodeCookies(String header)", "full_signature": "public static Map<String, String> decodeCookies(String header)", "class_method_signature": "CookieJar.decodeCookies(String header)", "testcase": false, "constructor": false, "invocations": ["split", "split", "put", "trim", "trim"]}, "repository": {"repo_id": 45276846, "url": "https://github.com/vmware-archive/xenon", "language": "Java", "is_fork": false, "fork_count": 97, "stargazer_count": 226, "size": 52010, "license": "licensed"}}