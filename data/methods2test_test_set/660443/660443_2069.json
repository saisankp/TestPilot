{"test_class": {"identifier": "WriterFactoryTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [{"original_string": "private WriterFactory factory = new WriterFactory();", "modifier": "private", "type": "WriterFactory", "declarator": "factory = new WriterFactory()", "var_name": "factory"}], "file": "storage/io/src/test/java/org/openscience/cdk/io/WriterFactoryTest.java"}, "test_case": {"identifier": "testCreateWriter_IChemFormat", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateWriter_IChemFormat() {\n        IChemFormat format = (IChemFormat) XYZFormat.getInstance();\n        IChemObjectWriter writer = factory.createWriter(format);\n        Assert.assertNotNull(writer);\n        Assert.assertEquals(format.getFormatName(), writer.getFormat().getFormatName());\n    }", "signature": "void testCreateWriter_IChemFormat()", "full_signature": "@Test public void testCreateWriter_IChemFormat()", "class_method_signature": "WriterFactoryTest.testCreateWriter_IChemFormat()", "testcase": true, "constructor": false, "invocations": ["getInstance", "createWriter", "assertNotNull", "assertEquals", "getFormatName", "getFormatName", "getFormat"]}, "focal_class": {"identifier": "WriterFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static String                          IO_FORMATS_LIST = \"io-formats.set\";", "modifier": "private final static", "type": "String", "declarator": "IO_FORMATS_LIST = \"io-formats.set\"", "var_name": "IO_FORMATS_LIST"}, {"original_string": "private static ILoggingTool                          logger          = LoggingToolFactory\n                                                                                 .createLoggingTool(WriterFactory.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger          = LoggingToolFactory\n                                                                                 .createLoggingTool(WriterFactory.class)", "var_name": "logger"}, {"original_string": "private static List<IChemFormat>                     formats         = null;", "modifier": "private static", "type": "List<IChemFormat>", "declarator": "formats         = null", "var_name": "formats"}, {"original_string": "private static Map<String, Class<IChemObjectWriter>> registeredReaders;", "modifier": "private static", "type": "Map<String, Class<IChemObjectWriter>>", "declarator": "registeredReaders", "var_name": "registeredReaders"}], "methods": [{"identifier": "WriterFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " WriterFactory()", "full_signature": "public  WriterFactory()", "class_method_signature": "WriterFactory.WriterFactory()", "testcase": false, "constructor": true}, {"identifier": "registerWriter", "parameters": "(Class<?> writer)", "modifiers": "public", "return": "void", "signature": "void registerWriter(Class<?> writer)", "full_signature": "public void registerWriter(Class<?> writer)", "class_method_signature": "WriterFactory.registerWriter(Class<?> writer)", "testcase": false, "constructor": false}, {"identifier": "findChemFormats", "parameters": "(int features)", "modifiers": "public", "return": "IChemFormat[]", "signature": "IChemFormat[] findChemFormats(int features)", "full_signature": "public IChemFormat[] findChemFormats(int features)", "class_method_signature": "WriterFactory.findChemFormats(int features)", "testcase": false, "constructor": false}, {"identifier": "formatCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int formatCount()", "full_signature": "public int formatCount()", "class_method_signature": "WriterFactory.formatCount()", "testcase": false, "constructor": false}, {"identifier": "loadFormats", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void loadFormats()", "full_signature": "private void loadFormats()", "class_method_signature": "WriterFactory.loadFormats()", "testcase": false, "constructor": false}, {"identifier": "createWriter", "parameters": "(IChemFormat format)", "modifiers": "public", "return": "IChemObjectWriter", "signature": "IChemObjectWriter createWriter(IChemFormat format)", "full_signature": "public IChemObjectWriter createWriter(IChemFormat format)", "class_method_signature": "WriterFactory.createWriter(IChemFormat format)", "testcase": false, "constructor": false}], "file": "storage/io/src/main/java/org/openscience/cdk/io/WriterFactory.java"}, "focal_method": {"identifier": "createWriter", "parameters": "(IChemFormat format)", "modifiers": "public", "return": "IChemObjectWriter", "body": "public IChemObjectWriter createWriter(IChemFormat format) {\n        if (format != null) {\n            String writerClassName = format.getWriterClassName();\n            if (writerClassName != null) {\n                try {\n                    if (registeredReaders.containsKey(writerClassName)) {\n                        Class<IChemObjectWriter> writer = registeredReaders.get(writerClassName);\n                        if (writer != null) return writer.newInstance();\n                    }\n                    // make a new instance of this class\n                    return (IChemObjectWriter) this.getClass().getClassLoader().loadClass(writerClassName)\n                            .newInstance();\n                } catch (ClassNotFoundException exception) {\n                    logger.error(\"Could not find this ChemObjectWriter: \", writerClassName);\n                    logger.debug(exception);\n                } catch (InstantiationException | IllegalAccessException exception) {\n                    logger.error(\"Could not create this ChemObjectWriter: \", writerClassName);\n                    logger.debug(exception);\n                }\n            } else {\n                logger.warn(\"ChemFormat is recognized, but no writer is available.\");\n            }\n        } else {\n            logger.warn(\"ChemFormat is not recognized.\");\n        }\n        return null;\n    }", "signature": "IChemObjectWriter createWriter(IChemFormat format)", "full_signature": "public IChemObjectWriter createWriter(IChemFormat format)", "class_method_signature": "WriterFactory.createWriter(IChemFormat format)", "testcase": false, "constructor": false, "invocations": ["getWriterClassName", "containsKey", "get", "newInstance", "newInstance", "loadClass", "getClassLoader", "getClass", "error", "debug", "error", "debug", "warn", "warn"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}