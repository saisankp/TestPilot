{"test_class": {"identifier": "MostVotedJobTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private MostVotedJob mostVotedJob;", "modifier": "@Autowired\n    private", "type": "MostVotedJob", "declarator": "mostVotedJob", "var_name": "mostVotedJob"}], "file": "backend/src/test/java/com/running/coins/job/MostVotedJobTest.java"}, "test_case": {"identifier": "calculateThePersonToGetCoin", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void calculateThePersonToGetCoin() {\n        mostVotedJob.calculateThePersonToGetCoin();\n    }", "signature": "void calculateThePersonToGetCoin()", "full_signature": "@Test public void calculateThePersonToGetCoin()", "class_method_signature": "MostVotedJobTest.calculateThePersonToGetCoin()", "testcase": true, "constructor": false, "invocations": ["calculateThePersonToGetCoin"]}, "focal_class": {"identifier": "MostVotedJob", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private VoteRecordMapper voteRecordMapper;", "modifier": "@Autowired\n    private", "type": "VoteRecordMapper", "declarator": "voteRecordMapper", "var_name": "voteRecordMapper"}, {"original_string": "@Autowired\n    private UserGroupMapper userGroupMapper;", "modifier": "@Autowired\n    private", "type": "UserGroupMapper", "declarator": "userGroupMapper", "var_name": "userGroupMapper"}, {"original_string": "@Autowired\n    private MostVotedRecordMapper mostVotedRecordMapper;", "modifier": "@Autowired\n    private", "type": "MostVotedRecordMapper", "declarator": "mostVotedRecordMapper", "var_name": "mostVotedRecordMapper"}, {"original_string": "@Autowired\n    private DailyMostVotedRecordMapper dailyMostVotedRecordMapper;", "modifier": "@Autowired\n    private", "type": "DailyMostVotedRecordMapper", "declarator": "dailyMostVotedRecordMapper", "var_name": "dailyMostVotedRecordMapper"}], "methods": [{"identifier": "insertDailyVotedCount", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void insertDailyVotedCount()", "full_signature": "public void insertDailyVotedCount()", "class_method_signature": "MostVotedJob.insertDailyVotedCount()", "testcase": false, "constructor": false}, {"identifier": "calculateThePersonToGetCoin", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void calculateThePersonToGetCoin()", "full_signature": "public void calculateThePersonToGetCoin()", "class_method_signature": "MostVotedJob.calculateThePersonToGetCoin()", "testcase": false, "constructor": false}], "file": "backend/src/main/java/com/running/coins/job/MostVotedJob.java"}, "focal_method": {"identifier": "calculateThePersonToGetCoin", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void calculateThePersonToGetCoin(){\n        /** delete before insert*/\n        dailyMostVotedRecordMapper.deleteByDate(new Date());\n\n        final ThisLocalizedWeek chinaWeek = new ThisLocalizedWeek(Locale.CHINA);\n        List<MostVotedRecord> mostVotedRecords = mostVotedRecordMapper.selectThePersonShouldBeAward(chinaWeek.getFirstDay(), chinaWeek.getLastDay(), new Date());\n        for (MostVotedRecord mostVotedRecord : mostVotedRecords) {\n            DailyMostVotedRecord dailyMostVotedRecord = dailyMostVotedRecordMapper.selectByawardDateAndMostVotedUserGroupId(new Date(), mostVotedRecord.getUserGroupId());\n            if (dailyMostVotedRecord == null) {\n                dailyMostVotedRecord = new DailyMostVotedRecord();\n                dailyMostVotedRecord.setMostVotedUserGroupId(mostVotedRecord.getUserGroupId());\n                dailyMostVotedRecord.setEarnCoin(1);\n                dailyMostVotedRecord.setAwardDate(new Date());\n                dailyMostVotedRecordMapper.insertSelective(dailyMostVotedRecord);\n            }else {\n                /** \u611f\u89c9\u8fd9\u53e5\u4e0d\u8981\u4e5f\u53ef\u4ee5\u8bf6  \u4e0d\u8fc7\u5f3a\u8feb\u75c7\u5c31\u52a0\u4e00\u4e0b\u5427(#^.^#)*/\n                dailyMostVotedRecord.setEarnCoin(1);\n                dailyMostVotedRecordMapper.updateByPrimaryKey(dailyMostVotedRecord);\n            }\n        }\n\n    }", "signature": "void calculateThePersonToGetCoin()", "full_signature": "public void calculateThePersonToGetCoin()", "class_method_signature": "MostVotedJob.calculateThePersonToGetCoin()", "testcase": false, "constructor": false, "invocations": ["deleteByDate", "selectThePersonShouldBeAward", "getFirstDay", "getLastDay", "selectByawardDateAndMostVotedUserGroupId", "getUserGroupId", "setMostVotedUserGroupId", "getUserGroupId", "setEarnCoin", "setAwardDate", "insertSelective", "setEarnCoin", "updateByPrimaryKey"]}, "repository": {"repo_id": 129255460, "url": "https://github.com/artbite008/running_coin", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 5, "size": 3010, "license": "licensed"}}