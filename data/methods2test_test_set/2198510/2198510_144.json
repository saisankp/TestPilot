{"test_class": {"identifier": "TestSourceConfiguration", "superclass": "", "interfaces": "", "fields": [], "file": "flume-ng-configuration/src/test/java/org/apache/flume/conf/source/TestSourceConfiguration.java"}, "test_case": {"identifier": "testFLUME1847", "parameters": "()", "modifiers": "@Test(expected = ConfigurationException.class) public", "return": "void", "body": "@Test(expected = ConfigurationException.class)\n  public void testFLUME1847() throws Exception {\n    Context context = new Context();\n    context.put(\"type\", \"something\");\n    SourceConfiguration sourceConfig = new SourceConfiguration(\"src\");\n    sourceConfig.configure(context);\n\n  }", "signature": "void testFLUME1847()", "full_signature": "@Test(expected = ConfigurationException.class) public void testFLUME1847()", "class_method_signature": "TestSourceConfiguration.testFLUME1847()", "testcase": true, "constructor": false, "invocations": ["put", "configure"]}, "focal_class": {"identifier": "SourceConfiguration", "superclass": "extends ComponentConfiguration", "interfaces": "", "fields": [{"original_string": "protected Set<String> channels;", "modifier": "protected", "type": "Set<String>", "declarator": "channels", "var_name": "channels"}, {"original_string": "protected ChannelSelectorConfiguration selectorConf;", "modifier": "protected", "type": "ChannelSelectorConfiguration", "declarator": "selectorConf", "var_name": "selectorConf"}], "methods": [{"identifier": "SourceConfiguration", "parameters": "(String componentName)", "modifiers": "public", "return": "", "signature": " SourceConfiguration(String componentName)", "full_signature": "public  SourceConfiguration(String componentName)", "class_method_signature": "SourceConfiguration.SourceConfiguration(String componentName)", "testcase": false, "constructor": true}, {"identifier": "getChannels", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getChannels()", "full_signature": "public Set<String> getChannels()", "class_method_signature": "SourceConfiguration.getChannels()", "testcase": false, "constructor": false}, {"identifier": "getSelectorConfiguration", "parameters": "()", "modifiers": "public", "return": "ChannelSelectorConfiguration", "signature": "ChannelSelectorConfiguration getSelectorConfiguration()", "full_signature": "public ChannelSelectorConfiguration getSelectorConfiguration()", "class_method_signature": "SourceConfiguration.getSelectorConfiguration()", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(Context context)", "modifiers": "public", "return": "void", "signature": "void configure(Context context)", "full_signature": "public void configure(Context context)", "class_method_signature": "SourceConfiguration.configure(Context context)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(int indentCount)", "modifiers": "@Override public", "return": "String", "signature": "String toString(int indentCount)", "full_signature": "@Override public String toString(int indentCount)", "class_method_signature": "SourceConfiguration.toString(int indentCount)", "testcase": false, "constructor": false}, {"identifier": "getKnownChannelSelector", "parameters": "(String type)", "modifiers": "private", "return": "ChannelSelectorType", "signature": "ChannelSelectorType getKnownChannelSelector(String type)", "full_signature": "private ChannelSelectorType getKnownChannelSelector(String type)", "class_method_signature": "SourceConfiguration.getKnownChannelSelector(String type)", "testcase": false, "constructor": false}], "file": "flume-ng-configuration/src/main/java/org/apache/flume/conf/source/SourceConfiguration.java"}, "focal_method": {"identifier": "configure", "parameters": "(Context context)", "modifiers": "public", "return": "void", "body": "public void configure(Context context) throws ConfigurationException {\n    super.configure(context);\n    try {\n      String channelList = context.getString(\n          BasicConfigurationConstants.CONFIG_CHANNELS);\n      if (channelList != null) {\n        this.channels =\n            new HashSet<String>(Arrays.asList(channelList.split(\"\\\\s+\")));\n      }\n      if (channels.isEmpty()) {\n        errors.add(new FlumeConfigurationError(componentName,\n            ComponentType.CHANNEL.getComponentType(),\n            FlumeConfigurationErrorType.PROPERTY_VALUE_NULL,\n            ErrorOrWarning.ERROR));\n        throw new ConfigurationException(\"No channels set for \"\n            + this.getComponentName());\n      }\n      Map<String, String> selectorParams = context.getSubProperties(\n              BasicConfigurationConstants.CONFIG_SOURCE_CHANNELSELECTOR_PREFIX);\n      String selType;\n      if (selectorParams != null && !selectorParams.isEmpty()) {\n        selType = selectorParams.get(BasicConfigurationConstants.CONFIG_TYPE);\n      } else {\n        selType = ChannelSelectorConfigurationType.REPLICATING.toString();\n      }\n\n      if (selType == null || selType.isEmpty()) {\n        selType = ChannelSelectorConfigurationType.REPLICATING.toString();\n\n      }\n      ChannelSelectorType selectorType =\n          this.getKnownChannelSelector(selType);\n      Context selectorContext = new Context();\n      selectorContext.putAll(selectorParams);\n      String config = null;\n      if (selectorType == null) {\n        config = selectorContext.getString(\n            BasicConfigurationConstants.CONFIG_CONFIG);\n        if (config == null || config.isEmpty()) {\n          config = \"OTHER\";\n        }\n      } else {\n        config = selectorType.toString().toUpperCase(Locale.ENGLISH);\n      }\n\n      this.selectorConf =\n          (ChannelSelectorConfiguration) ComponentConfigurationFactory\n              .create(ComponentType.CHANNELSELECTOR.getComponentType(), config,\n                  ComponentType.CHANNELSELECTOR);\n      selectorConf.setChannels(channels);\n      selectorConf.configure(selectorContext);\n    } catch (Exception e) {\n      errors.add(new FlumeConfigurationError(componentName,\n          ComponentType.CHANNELSELECTOR.getComponentType(),\n          FlumeConfigurationErrorType.CONFIG_ERROR,\n          ErrorOrWarning.ERROR));\n      throw new ConfigurationException(\"Failed to configure component!\", e);\n    }\n  }", "signature": "void configure(Context context)", "full_signature": "public void configure(Context context)", "class_method_signature": "SourceConfiguration.configure(Context context)", "testcase": false, "constructor": false, "invocations": ["configure", "getString", "asList", "split", "isEmpty", "add", "getComponentType", "getComponentName", "getSubProperties", "isEmpty", "get", "toString", "isEmpty", "toString", "getKnownChannelSelector", "putAll", "getString", "isEmpty", "toUpperCase", "toString", "create", "getComponentType", "setChannels", "configure", "add", "getComponentType"]}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}