{"test_class": {"identifier": "SequenceHeaderUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SequenceHeaderUtil underTest = new SequenceHeaderUtil();", "modifier": "private", "type": "SequenceHeaderUtil", "declarator": "underTest = new SequenceHeaderUtil()", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-message-sequence/src/test/java/com/epam/wilma/sequence/helper/SequenceHeaderUtilTest.java"}, "test_case": {"identifier": "testCreateSequenceHeaderWhenThereIsSourceParameter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateSequenceHeaderWhenThereIsSourceParameter() {\n        //GIVEN\n        String testKeyFirst = \"TestKey1\";\n        String testKeySecond = \"TestKey2\";\n        String expected = testKeyFirst + SequenceConstants.SEQUENCE_KEY_SEPARATOR.getConstant() + testKeySecond;\n        //WHEN\n        String result = underTest.createSequenceHeader(testKeyFirst, testKeySecond);\n        //THEN\n        Assert.assertEquals(result, expected);\n    }", "signature": "void testCreateSequenceHeaderWhenThereIsSourceParameter()", "full_signature": "@Test public void testCreateSequenceHeaderWhenThereIsSourceParameter()", "class_method_signature": "SequenceHeaderUtilTest.testCreateSequenceHeaderWhenThereIsSourceParameter()", "testcase": true, "constructor": false, "invocations": ["getConstant", "createSequenceHeader", "assertEquals"]}, "focal_class": {"identifier": "SequenceHeaderUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "createSequenceHeader", "parameters": "(final String headerSource, final String sequenceId)", "modifiers": "public", "return": "String", "signature": "String createSequenceHeader(final String headerSource, final String sequenceId)", "full_signature": "public String createSequenceHeader(final String headerSource, final String sequenceId)", "class_method_signature": "SequenceHeaderUtil.createSequenceHeader(final String headerSource, final String sequenceId)", "testcase": false, "constructor": false}, {"identifier": "resolveSequenceHeader", "parameters": "(final String headerSource)", "modifiers": "public", "return": "String[]", "signature": "String[] resolveSequenceHeader(final String headerSource)", "full_signature": "public String[] resolveSequenceHeader(final String headerSource)", "class_method_signature": "SequenceHeaderUtil.resolveSequenceHeader(final String headerSource)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-message-sequence/src/main/java/com/epam/wilma/sequence/helper/SequenceHeaderUtil.java"}, "focal_method": {"identifier": "createSequenceHeader", "parameters": "(final String headerSource, final String sequenceId)", "modifiers": "public", "return": "String", "body": "public String createSequenceHeader(final String headerSource, final String sequenceId) {\n        String result = \"\";\n        if (headerSource == null) {\n            result = sequenceId;\n        } else {\n            StringBuilder sb = new StringBuilder(headerSource);\n            sb.append(SequenceConstants.SEQUENCE_KEY_SEPARATOR.getConstant()).append(sequenceId);\n            result = sb.toString();\n        }\n        return result;\n    }", "signature": "String createSequenceHeader(final String headerSource, final String sequenceId)", "full_signature": "public String createSequenceHeader(final String headerSource, final String sequenceId)", "class_method_signature": "SequenceHeaderUtil.createSequenceHeader(final String headerSource, final String sequenceId)", "testcase": false, "constructor": false, "invocations": ["append", "append", "getConstant", "toString"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}