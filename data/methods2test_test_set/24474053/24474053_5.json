{"test_class": {"identifier": "ConcreteIntPredicateTest", "superclass": "", "interfaces": "", "fields": [], "file": "extra-common/src/test/java/org/wikimedia/search/extra/util/ConcreteIntPredicateTest.java"}, "test_case": {"identifier": "testGt", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGt() {\n        int v = 100;\n        ConcreteIntPredicate gtP = gt(100);\n        assertFalse(gtP.test(v));\n        assertFalse(gtP.test(v - 1));\n        assertTrue(gtP.test(v + 1));\n        assertEquals(gt(v), gtP);\n        assertEquals(gt(v).hashCode(), gtP.hashCode());\n        assertNotEquals(lt(v), gtP);\n        assertNotEquals(gt(v + 1), gtP);\n        assertEquals(gtP.toString(), \"> 100\");\n    }", "signature": "void testGt()", "full_signature": "@Test public void testGt()", "class_method_signature": "ConcreteIntPredicateTest.testGt()", "testcase": true, "constructor": false, "invocations": ["gt", "assertFalse", "test", "assertFalse", "test", "assertTrue", "test", "assertEquals", "gt", "assertEquals", "hashCode", "gt", "hashCode", "assertNotEquals", "lt", "assertNotEquals", "gt", "assertEquals", "toString"]}, "focal_class": {"identifier": "ConcreteIntPredicate", "superclass": "", "interfaces": "implements IntPredicate", "fields": [], "methods": [{"identifier": "ConcreteIntPredicate", "parameters": "()", "modifiers": "private", "return": "", "signature": " ConcreteIntPredicate()", "full_signature": "private  ConcreteIntPredicate()", "class_method_signature": "ConcreteIntPredicate.ConcreteIntPredicate()", "testcase": false, "constructor": true}, {"identifier": "and", "parameters": "(IntPredicate intPredicate)", "modifiers": "@Override public final", "return": "ConcreteIntPredicate", "signature": "ConcreteIntPredicate and(IntPredicate intPredicate)", "full_signature": "@Override public final ConcreteIntPredicate and(IntPredicate intPredicate)", "class_method_signature": "ConcreteIntPredicate.and(IntPredicate intPredicate)", "testcase": false, "constructor": false}, {"identifier": "negate", "parameters": "()", "modifiers": "@Override public final", "return": "ConcreteIntPredicate", "signature": "ConcreteIntPredicate negate()", "full_signature": "@Override public final ConcreteIntPredicate negate()", "class_method_signature": "ConcreteIntPredicate.negate()", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(IntPredicate intPredicate)", "modifiers": "@Override public final", "return": "ConcreteIntPredicate", "signature": "ConcreteIntPredicate or(IntPredicate intPredicate)", "full_signature": "@Override public final ConcreteIntPredicate or(IntPredicate intPredicate)", "class_method_signature": "ConcreteIntPredicate.or(IntPredicate intPredicate)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override @SuppressFBWarnings(value = \"AOM_ABSTRACT_OVERRIDDEN_METHOD\", justification = \"We want subclasses to implement this\") public abstract", "return": "int", "signature": "int hashCode()", "full_signature": "@Override @SuppressFBWarnings(value = \"AOM_ABSTRACT_OVERRIDDEN_METHOD\", justification = \"We want subclasses to implement this\") public abstract int hashCode()", "class_method_signature": "ConcreteIntPredicate.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override @SuppressFBWarnings(value = \"AOM_ABSTRACT_OVERRIDDEN_METHOD\", justification = \"We want subclasses to implement this\") public abstract", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override @SuppressFBWarnings(value = \"AOM_ABSTRACT_OVERRIDDEN_METHOD\", justification = \"We want subclasses to implement this\") public abstract boolean equals(Object o)", "class_method_signature": "ConcreteIntPredicate.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override @SuppressFBWarnings(value = \"AOM_ABSTRACT_OVERRIDDEN_METHOD\", justification = \"We want subclasses to implement this\") public abstract", "return": "String", "signature": "String toString()", "full_signature": "@Override @SuppressFBWarnings(value = \"AOM_ABSTRACT_OVERRIDDEN_METHOD\", justification = \"We want subclasses to implement this\") public abstract String toString()", "class_method_signature": "ConcreteIntPredicate.toString()", "testcase": false, "constructor": false}, {"identifier": "gt", "parameters": "(int i)", "modifiers": "public static", "return": "ConcreteIntPredicate", "signature": "ConcreteIntPredicate gt(int i)", "full_signature": "public static ConcreteIntPredicate gt(int i)", "class_method_signature": "ConcreteIntPredicate.gt(int i)", "testcase": false, "constructor": false}, {"identifier": "gte", "parameters": "(int i)", "modifiers": "public static", "return": "ConcreteIntPredicate", "signature": "ConcreteIntPredicate gte(int i)", "full_signature": "public static ConcreteIntPredicate gte(int i)", "class_method_signature": "ConcreteIntPredicate.gte(int i)", "testcase": false, "constructor": false}, {"identifier": "lte", "parameters": "(int i)", "modifiers": "public static", "return": "ConcreteIntPredicate", "signature": "ConcreteIntPredicate lte(int i)", "full_signature": "public static ConcreteIntPredicate lte(int i)", "class_method_signature": "ConcreteIntPredicate.lte(int i)", "testcase": false, "constructor": false}, {"identifier": "lt", "parameters": "(int i)", "modifiers": "public static", "return": "ConcreteIntPredicate", "signature": "ConcreteIntPredicate lt(int i)", "full_signature": "public static ConcreteIntPredicate lt(int i)", "class_method_signature": "ConcreteIntPredicate.lt(int i)", "testcase": false, "constructor": false}, {"identifier": "eq", "parameters": "(int i)", "modifiers": "public static", "return": "ConcreteIntPredicate", "signature": "ConcreteIntPredicate eq(int i)", "full_signature": "public static ConcreteIntPredicate eq(int i)", "class_method_signature": "ConcreteIntPredicate.eq(int i)", "testcase": false, "constructor": false}], "file": "extra-common/src/main/java/org/wikimedia/search/extra/util/ConcreteIntPredicate.java"}, "focal_method": {"identifier": "gt", "parameters": "(int i)", "modifiers": "public static", "return": "ConcreteIntPredicate", "body": "public static ConcreteIntPredicate gt(int i) {\n        return new GTIntPredicate(i);\n    }", "signature": "ConcreteIntPredicate gt(int i)", "full_signature": "public static ConcreteIntPredicate gt(int i)", "class_method_signature": "ConcreteIntPredicate.gt(int i)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 24474053, "url": "https://github.com/wikimedia/search-extra", "stars": 37, "created": "9/25/2014 8:26:03 PM +00:00", "updates": "2019-12-06T15:10:34+00:00", "fork": "False", "license": "licensed"}}