{"test_class": {"identifier": "LightMeasurementGatewayDeviceResponseServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String GATEWAY_DEVICE_IDENTIFICATION = \"TEST-GATEWAY-1\";", "modifier": "private static final", "type": "String", "declarator": "GATEWAY_DEVICE_IDENTIFICATION = \"TEST-GATEWAY-1\"", "var_name": "GATEWAY_DEVICE_IDENTIFICATION"}, {"original_string": "private static final String LMD_1_DEVICE_IDENTIFICATION = \"TEST-LMD-1\";", "modifier": "private static final", "type": "String", "declarator": "LMD_1_DEVICE_IDENTIFICATION = \"TEST-LMD-1\"", "var_name": "LMD_1_DEVICE_IDENTIFICATION"}, {"original_string": "private static final String LMD_1_IOA = \"1\";", "modifier": "private static final", "type": "String", "declarator": "LMD_1_IOA = \"1\"", "var_name": "LMD_1_IOA"}, {"original_string": "private static final byte LMD_1_ON = 1;", "modifier": "private static final", "type": "byte", "declarator": "LMD_1_ON = 1", "var_name": "LMD_1_ON"}, {"original_string": "private static final String LMD_2_DEVICE_IDENTIFICATION = \"TEST-LMD-2\";", "modifier": "private static final", "type": "String", "declarator": "LMD_2_DEVICE_IDENTIFICATION = \"TEST-LMD-2\"", "var_name": "LMD_2_DEVICE_IDENTIFICATION"}, {"original_string": "private static final String LMD_2_IOA = \"2\";", "modifier": "private static final", "type": "String", "declarator": "LMD_2_IOA = \"2\"", "var_name": "LMD_2_IOA"}, {"original_string": "private static final byte LMD_2_ON = 0;", "modifier": "private static final", "type": "byte", "declarator": "LMD_2_ON = 0", "var_name": "LMD_2_ON"}, {"original_string": "private static final String ORGANISATION_IDENTIFICATION = \"TEST-ORG-1\";", "modifier": "private static final", "type": "String", "declarator": "ORGANISATION_IDENTIFICATION = \"TEST-ORG-1\"", "var_name": "ORGANISATION_IDENTIFICATION"}, {"original_string": "private static final String CORRELATION_UID = \"TEST-CORR-1\";", "modifier": "private static final", "type": "String", "declarator": "CORRELATION_UID = \"TEST-CORR-1\"", "var_name": "CORRELATION_UID"}, {"original_string": "@InjectMocks\n    private LightMeasurementGatewayDeviceResponseService lightMeasurementGatewayDeviceResponseService;", "modifier": "@InjectMocks\n    private", "type": "LightMeasurementGatewayDeviceResponseService", "declarator": "lightMeasurementGatewayDeviceResponseService", "var_name": "lightMeasurementGatewayDeviceResponseService"}, {"original_string": "@Mock\n    private Iec60870DeviceRepository iec60870DeviceRepository;", "modifier": "@Mock\n    private", "type": "Iec60870DeviceRepository", "declarator": "iec60870DeviceRepository", "var_name": "iec60870DeviceRepository"}, {"original_string": "@Mock\n    private LightMeasurementDeviceResponseService lightMeasurementDeviceResponseService;", "modifier": "@Mock\n    private", "type": "LightMeasurementDeviceResponseService", "declarator": "lightMeasurementDeviceResponseService", "var_name": "lightMeasurementDeviceResponseService"}], "file": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/test/java/org/opensmartgridplatform/adapter/protocol/iec60870/application/services/LightMeasurementGatewayDeviceResponseServiceTest.java"}, "test_case": {"identifier": "processShouldDelegateProcessingReportsForEachDeviceBehindTheGateway", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void processShouldDelegateProcessingReportsForEachDeviceBehindTheGateway() {\n        // Arrange\n        final Iec60870Device gatewayDevice = fromSettings(this.getGatewayDeviceSettings());\n        final Iec60870Device lightMeasurementDevice1 = fromSettings(this.getLightMeasurementDevice1Settings());\n        final Iec60870Device lightMeasurementDevice2 = fromSettings(this.getLightMeasurementDevice2Settings());\n        when(this.iec60870DeviceRepository.findByGatewayDeviceIdentification(gatewayDevice.getDeviceIdentification()))\n                .thenReturn(Arrays.asList(lightMeasurementDevice1, lightMeasurementDevice2));\n\n        final MeasurementReportDto measurementReportDto = this.getMeasurementReportDto();\n\n        final ResponseMetadata responseMetadata = this.getResponseMetadata(GATEWAY_DEVICE_IDENTIFICATION);\n\n        // Act\n        this.lightMeasurementGatewayDeviceResponseService.process(measurementReportDto, responseMetadata);\n\n        // Assert\n        verify(this.lightMeasurementDeviceResponseService, times(1)).sendLightSensorStatusResponse(\n                same(measurementReportDto), same(lightMeasurementDevice1), same(responseMetadata), anyString());\n        verify(this.lightMeasurementDeviceResponseService, times(1)).sendLightSensorStatusResponse(\n                same(measurementReportDto), same(lightMeasurementDevice2), same(responseMetadata), anyString());\n    }", "signature": "void processShouldDelegateProcessingReportsForEachDeviceBehindTheGateway()", "full_signature": "@Test public void processShouldDelegateProcessingReportsForEachDeviceBehindTheGateway()", "class_method_signature": "LightMeasurementGatewayDeviceResponseServiceTest.processShouldDelegateProcessingReportsForEachDeviceBehindTheGateway()", "testcase": true, "constructor": false, "invocations": ["fromSettings", "getGatewayDeviceSettings", "fromSettings", "getLightMeasurementDevice1Settings", "fromSettings", "getLightMeasurementDevice2Settings", "thenReturn", "when", "findByGatewayDeviceIdentification", "getDeviceIdentification", "asList", "getMeasurementReportDto", "getResponseMetadata", "process", "sendLightSensorStatusResponse", "verify", "times", "same", "same", "same", "anyString", "sendLightSensorStatusResponse", "verify", "times", "same", "same", "same", "anyString"]}, "focal_class": {"identifier": "LightMeasurementGatewayDeviceResponseService", "superclass": "extends AbstractDeviceResponseService", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(LightMeasurementGatewayDeviceResponseService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(LightMeasurementGatewayDeviceResponseService.class)", "var_name": "LOGGER"}, {"original_string": "private static final String ERROR_PREFIX = \"Error while processing measurement report for light measurement gateway: \";", "modifier": "private static final", "type": "String", "declarator": "ERROR_PREFIX = \"Error while processing measurement report for light measurement gateway: \"", "var_name": "ERROR_PREFIX"}, {"original_string": "private static final DeviceType DEVICE_TYPE = DeviceType.LIGHT_MEASUREMENT_GATEWAY;", "modifier": "private static final", "type": "DeviceType", "declarator": "DEVICE_TYPE = DeviceType.LIGHT_MEASUREMENT_GATEWAY", "var_name": "DEVICE_TYPE"}, {"original_string": "@Autowired\n    private Iec60870DeviceRepository iec60870DeviceRepository;", "modifier": "@Autowired\n    private", "type": "Iec60870DeviceRepository", "declarator": "iec60870DeviceRepository", "var_name": "iec60870DeviceRepository"}, {"original_string": "@Autowired\n    private LightMeasurementDeviceResponseService lightMeasurementDeviceResponseService;", "modifier": "@Autowired\n    private", "type": "LightMeasurementDeviceResponseService", "declarator": "lightMeasurementDeviceResponseService", "var_name": "lightMeasurementDeviceResponseService"}], "methods": [{"identifier": "LightMeasurementGatewayDeviceResponseService", "parameters": "()", "modifiers": "public", "return": "", "signature": " LightMeasurementGatewayDeviceResponseService()", "full_signature": "public  LightMeasurementGatewayDeviceResponseService()", "class_method_signature": "LightMeasurementGatewayDeviceResponseService.LightMeasurementGatewayDeviceResponseService()", "testcase": false, "constructor": true}, {"identifier": "process", "parameters": "(final MeasurementReportDto measurementReport, final ResponseMetadata responseMetadata)", "modifiers": "@Override public", "return": "void", "signature": "void process(final MeasurementReportDto measurementReport, final ResponseMetadata responseMetadata)", "full_signature": "@Override public void process(final MeasurementReportDto measurementReport, final ResponseMetadata responseMetadata)", "class_method_signature": "LightMeasurementGatewayDeviceResponseService.process(final MeasurementReportDto measurementReport, final ResponseMetadata responseMetadata)", "testcase": false, "constructor": false}, {"identifier": "processMeasurementReportForDevice", "parameters": "(final MeasurementReportDto measurementReport,\n            final ResponseMetadata responseMetadata, final Iec60870Device device,\n            final String gatewayDeviceIdentification)", "modifiers": "private", "return": "void", "signature": "void processMeasurementReportForDevice(final MeasurementReportDto measurementReport,\n            final ResponseMetadata responseMetadata, final Iec60870Device device,\n            final String gatewayDeviceIdentification)", "full_signature": "private void processMeasurementReportForDevice(final MeasurementReportDto measurementReport,\n            final ResponseMetadata responseMetadata, final Iec60870Device device,\n            final String gatewayDeviceIdentification)", "class_method_signature": "LightMeasurementGatewayDeviceResponseService.processMeasurementReportForDevice(final MeasurementReportDto measurementReport,\n            final ResponseMetadata responseMetadata, final Iec60870Device device,\n            final String gatewayDeviceIdentification)", "testcase": false, "constructor": false}, {"identifier": "processEvent", "parameters": "(final MeasurementReportDto measurementReport, final ResponseMetadata responseMetadata)", "modifiers": "@Override public", "return": "void", "signature": "void processEvent(final MeasurementReportDto measurementReport, final ResponseMetadata responseMetadata)", "full_signature": "@Override public void processEvent(final MeasurementReportDto measurementReport, final ResponseMetadata responseMetadata)", "class_method_signature": "LightMeasurementGatewayDeviceResponseService.processEvent(final MeasurementReportDto measurementReport, final ResponseMetadata responseMetadata)", "testcase": false, "constructor": false}, {"identifier": "processEventForDevice", "parameters": "(final MeasurementReportDto measurementReport,\n            final ResponseMetadata responseMetadata, final Iec60870Device device,\n            final String gatewayDeviceIdentification)", "modifiers": "private", "return": "void", "signature": "void processEventForDevice(final MeasurementReportDto measurementReport,\n            final ResponseMetadata responseMetadata, final Iec60870Device device,\n            final String gatewayDeviceIdentification)", "full_signature": "private void processEventForDevice(final MeasurementReportDto measurementReport,\n            final ResponseMetadata responseMetadata, final Iec60870Device device,\n            final String gatewayDeviceIdentification)", "class_method_signature": "LightMeasurementGatewayDeviceResponseService.processEventForDevice(final MeasurementReportDto measurementReport,\n            final ResponseMetadata responseMetadata, final Iec60870Device device,\n            final String gatewayDeviceIdentification)", "testcase": false, "constructor": false}, {"identifier": "findLightMeasurementDevicesAndThen", "parameters": "(final String gatewayDeviceIdentification,\n            final Consumer<? super Iec60870Device> actionPerDevice)", "modifiers": "private", "return": "void", "signature": "void findLightMeasurementDevicesAndThen(final String gatewayDeviceIdentification,\n            final Consumer<? super Iec60870Device> actionPerDevice)", "full_signature": "private void findLightMeasurementDevicesAndThen(final String gatewayDeviceIdentification,\n            final Consumer<? super Iec60870Device> actionPerDevice)", "class_method_signature": "LightMeasurementGatewayDeviceResponseService.findLightMeasurementDevicesAndThen(final String gatewayDeviceIdentification,\n            final Consumer<? super Iec60870Device> actionPerDevice)", "testcase": false, "constructor": false}], "file": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/main/java/org/opensmartgridplatform/adapter/protocol/iec60870/application/services/LightMeasurementGatewayDeviceResponseService.java"}, "focal_method": {"identifier": "process", "parameters": "(final MeasurementReportDto measurementReport, final ResponseMetadata responseMetadata)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void process(final MeasurementReportDto measurementReport, final ResponseMetadata responseMetadata) {\n        final String gatewayDeviceIdentification = responseMetadata.getDeviceIdentification();\n        LOGGER.info(\"Received measurement report {} for light measurement gateway {}.\", measurementReport,\n                gatewayDeviceIdentification);\n\n        this.findLightMeasurementDevicesAndThen(gatewayDeviceIdentification,\n                device -> this.processMeasurementReportForDevice(measurementReport, responseMetadata, device,\n                        gatewayDeviceIdentification));\n    }", "signature": "void process(final MeasurementReportDto measurementReport, final ResponseMetadata responseMetadata)", "full_signature": "@Override public void process(final MeasurementReportDto measurementReport, final ResponseMetadata responseMetadata)", "class_method_signature": "LightMeasurementGatewayDeviceResponseService.process(final MeasurementReportDto measurementReport, final ResponseMetadata responseMetadata)", "testcase": false, "constructor": false, "invocations": ["getDeviceIdentification", "info", "findLightMeasurementDevicesAndThen", "processMeasurementReportForDevice"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}