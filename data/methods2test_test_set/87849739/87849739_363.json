{"test_class": {"identifier": "RabbitMQValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final RabbitMQValidator UNDER_TEST = RabbitMQValidator.newInstance();", "modifier": "private static final", "type": "RabbitMQValidator", "declarator": "UNDER_TEST = RabbitMQValidator.newInstance()", "var_name": "UNDER_TEST"}, {"original_string": "private static ActorSystem actorSystem;", "modifier": "private static", "type": "ActorSystem", "declarator": "actorSystem", "var_name": "actorSystem"}], "file": "services/connectivity/messaging/src/test/java/org/eclipse/ditto/services/connectivity/messaging/rabbitmq/RabbitMQValidatorTest.java"}, "test_case": {"identifier": "testValidTargetAddress", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidTargetAddress() {\n        UNDER_TEST.validate(connectionWithTarget(\"ditto/rabbit\"), DittoHeaders.empty(), actorSystem);\n        UNDER_TEST.validate(connectionWithTarget(\"ditto\"), DittoHeaders.empty(), actorSystem);\n        UNDER_TEST.validate(connectionWithTarget(\"ditto/{{thing:id}}\"), DittoHeaders.empty(), actorSystem);\n        UNDER_TEST.validate(connectionWithTarget(\"ditto/{{topic:full}}\"), DittoHeaders.empty(), actorSystem);\n        UNDER_TEST.validate(connectionWithTarget(\"ditto/{{header:x}}\"), DittoHeaders.empty(), actorSystem);\n    }", "signature": "void testValidTargetAddress()", "full_signature": "@Test public void testValidTargetAddress()", "class_method_signature": "RabbitMQValidatorTest.testValidTargetAddress()", "testcase": true, "constructor": false, "invocations": ["validate", "connectionWithTarget", "empty", "validate", "connectionWithTarget", "empty", "validate", "connectionWithTarget", "empty", "validate", "connectionWithTarget", "empty", "validate", "connectionWithTarget", "empty"]}, "focal_class": {"identifier": "RabbitMQValidator", "superclass": "extends AbstractProtocolValidator", "interfaces": "", "fields": [{"original_string": "private static final Collection<String> ACCEPTED_SCHEMES =\n            Collections.unmodifiableList(Arrays.asList(\"amqp\", \"amqps\"));", "modifier": "private static final", "type": "Collection<String>", "declarator": "ACCEPTED_SCHEMES =\n            Collections.unmodifiableList(Arrays.asList(\"amqp\", \"amqps\"))", "var_name": "ACCEPTED_SCHEMES"}, {"original_string": "private static final Collection<String> SECURE_SCHEMES = Collections.singletonList(\"amqps\");", "modifier": "private static final", "type": "Collection<String>", "declarator": "SECURE_SCHEMES = Collections.singletonList(\"amqps\")", "var_name": "SECURE_SCHEMES"}], "methods": [{"identifier": "newInstance", "parameters": "()", "modifiers": "public static", "return": "RabbitMQValidator", "signature": "RabbitMQValidator newInstance()", "full_signature": "public static RabbitMQValidator newInstance()", "class_method_signature": "RabbitMQValidator.newInstance()", "testcase": false, "constructor": false}, {"identifier": "validateSource", "parameters": "(final Source source, final DittoHeaders dittoHeaders,\n            final Supplier<String> sourceDescription)", "modifiers": "@Override protected", "return": "void", "signature": "void validateSource(final Source source, final DittoHeaders dittoHeaders,\n            final Supplier<String> sourceDescription)", "full_signature": "@Override protected void validateSource(final Source source, final DittoHeaders dittoHeaders,\n            final Supplier<String> sourceDescription)", "class_method_signature": "RabbitMQValidator.validateSource(final Source source, final DittoHeaders dittoHeaders,\n            final Supplier<String> sourceDescription)", "testcase": false, "constructor": false}, {"identifier": "validateTarget", "parameters": "(final Target target, final DittoHeaders dittoHeaders,\n            final Supplier<String> targetDescription)", "modifiers": "@Override protected", "return": "void", "signature": "void validateTarget(final Target target, final DittoHeaders dittoHeaders,\n            final Supplier<String> targetDescription)", "full_signature": "@Override protected void validateTarget(final Target target, final DittoHeaders dittoHeaders,\n            final Supplier<String> targetDescription)", "class_method_signature": "RabbitMQValidator.validateTarget(final Target target, final DittoHeaders dittoHeaders,\n            final Supplier<String> targetDescription)", "testcase": false, "constructor": false}, {"identifier": "type", "parameters": "()", "modifiers": "@Override public", "return": "ConnectionType", "signature": "ConnectionType type()", "full_signature": "@Override public ConnectionType type()", "class_method_signature": "RabbitMQValidator.type()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(final Connection connection, final DittoHeaders dittoHeaders, final ActorSystem actorSystem)", "modifiers": "@Override public", "return": "void", "signature": "void validate(final Connection connection, final DittoHeaders dittoHeaders, final ActorSystem actorSystem)", "full_signature": "@Override public void validate(final Connection connection, final DittoHeaders dittoHeaders, final ActorSystem actorSystem)", "class_method_signature": "RabbitMQValidator.validate(final Connection connection, final DittoHeaders dittoHeaders, final ActorSystem actorSystem)", "testcase": false, "constructor": false}], "file": "services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/rabbitmq/RabbitMQValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(final Connection connection, final DittoHeaders dittoHeaders, final ActorSystem actorSystem)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate(final Connection connection, final DittoHeaders dittoHeaders, final ActorSystem actorSystem) {\n        validateUriScheme(connection, dittoHeaders, ACCEPTED_SCHEMES, SECURE_SCHEMES, \"AMQP 0.9.1\");\n        validateSourceConfigs(connection, dittoHeaders);\n        validateTargetConfigs(connection, dittoHeaders);\n        validatePayloadMappings(connection, actorSystem, dittoHeaders);\n    }", "signature": "void validate(final Connection connection, final DittoHeaders dittoHeaders, final ActorSystem actorSystem)", "full_signature": "@Override public void validate(final Connection connection, final DittoHeaders dittoHeaders, final ActorSystem actorSystem)", "class_method_signature": "RabbitMQValidator.validate(final Connection connection, final DittoHeaders dittoHeaders, final ActorSystem actorSystem)", "testcase": false, "constructor": false, "invocations": ["validateUriScheme", "validateSourceConfigs", "validateTargetConfigs", "validatePayloadMappings"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}