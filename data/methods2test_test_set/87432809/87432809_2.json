{"test_class": {"identifier": "ForcePreparedStatementTest", "superclass": "", "interfaces": "", "fields": [], "file": "sf-jdbc-driver/src/test/java/com/ascendix/jdbc/salesforce/statement/ForcePreparedStatementTest.java"}, "test_case": {"identifier": "testConvertToSoqlParam", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvertToSoqlParam() {\n        assertEquals(\"123.45\", ForcePreparedStatement.convertToSoqlParam(123.45));\n        assertEquals(\"123.45\", ForcePreparedStatement.convertToSoqlParam(123.45f));\n        assertEquals(\"123\", ForcePreparedStatement.convertToSoqlParam(123L));\n        assertEquals(\"123.45\", ForcePreparedStatement.convertToSoqlParam(new BigDecimal(\"123.45\")));\n        assertEquals(\"2017-03-06T12:34:56\", ForcePreparedStatement.convertToSoqlParam(new GregorianCalendar(2017, 2, 6, 12, 34, 56).getTime()));\n        assertEquals(\"'\\\\'test\\\\'\\\\\\\\'\", ForcePreparedStatement.convertToSoqlParam(\"'test'\\\\\"));\n        assertEquals(\"NULL\", ForcePreparedStatement.convertToSoqlParam(null));\n    }", "signature": "void testConvertToSoqlParam()", "full_signature": "@Test public void testConvertToSoqlParam()", "class_method_signature": "ForcePreparedStatementTest.testConvertToSoqlParam()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "convertToSoqlParam", "assertEquals", "convertToSoqlParam", "assertEquals", "convertToSoqlParam", "assertEquals", "convertToSoqlParam", "assertEquals", "convertToSoqlParam", "getTime", "assertEquals", "convertToSoqlParam", "assertEquals", "convertToSoqlParam"]}, "focal_class": {"identifier": "ForcePreparedStatement", "superclass": "", "interfaces": "implements PreparedStatement", "fields": [{"original_string": "private final static String CACHE_HINT = \"(?is)\\\\A\\\\s*(CACHE\\\\s*(GLOBAL|SESSION)).*\";", "modifier": "private final static", "type": "String", "declarator": "CACHE_HINT = \"(?is)\\\\A\\\\s*(CACHE\\\\s*(GLOBAL|SESSION)).*\"", "var_name": "CACHE_HINT"}, {"original_string": "private final static int GB = 1073741824;", "modifier": "private final static", "type": "int", "declarator": "GB = 1073741824", "var_name": "GB"}, {"original_string": "private String soqlQuery;", "modifier": "private", "type": "String", "declarator": "soqlQuery", "var_name": "soqlQuery"}, {"original_string": "private ForceConnection connection;", "modifier": "private", "type": "ForceConnection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private PartnerService partnerService;", "modifier": "private", "type": "PartnerService", "declarator": "partnerService", "var_name": "partnerService"}, {"original_string": "private ResultSetMetaData metadata;", "modifier": "private", "type": "ResultSetMetaData", "declarator": "metadata", "var_name": "metadata"}, {"original_string": "private int fetchSize;", "modifier": "private", "type": "int", "declarator": "fetchSize", "var_name": "fetchSize"}, {"original_string": "private int maxRows;", "modifier": "private", "type": "int", "declarator": "maxRows", "var_name": "maxRows"}, {"original_string": "private List<Object> parameters = new ArrayList<>();", "modifier": "private", "type": "List<Object>", "declarator": "parameters = new ArrayList<>()", "var_name": "parameters"}, {"original_string": "private final CacheMode cacheMode;", "modifier": "private final", "type": "CacheMode", "declarator": "cacheMode", "var_name": "cacheMode"}, {"original_string": "private static DB cacheDb = DBMaker.tempFileDB().closeOnJvmShutdown().make();", "modifier": "private static", "type": "DB", "declarator": "cacheDb = DBMaker.tempFileDB().closeOnJvmShutdown().make()", "var_name": "cacheDb"}, {"original_string": "private static HTreeMap<String, ResultSet> dataCache = cacheDb\n            .hashMap(\"DataCache\", Serializer.STRING, Serializer.ELSA)\n            .expireAfterCreate(60, TimeUnit.MINUTES)\n            .expireStoreSize(16 * GB)\n            .create();", "modifier": "private static", "type": "HTreeMap<String, ResultSet>", "declarator": "dataCache = cacheDb\n            .hashMap(\"DataCache\", Serializer.STRING, Serializer.ELSA)\n            .expireAfterCreate(60, TimeUnit.MINUTES)\n            .expireStoreSize(16 * GB)\n            .create()", "var_name": "dataCache"}, {"original_string": "private static HTreeMap<String, ResultSetMetaData> metadataCache = cacheDb\n            .hashMap(\"MetadataCache\", Serializer.STRING, Serializer.ELSA)\n            .expireAfterCreate(60, TimeUnit.MINUTES)\n            .expireStoreSize(1 * GB)\n            .create();", "modifier": "private static", "type": "HTreeMap<String, ResultSetMetaData>", "declarator": "metadataCache = cacheDb\n            .hashMap(\"MetadataCache\", Serializer.STRING, Serializer.ELSA)\n            .expireAfterCreate(60, TimeUnit.MINUTES)\n            .expireStoreSize(1 * GB)\n            .create()", "var_name": "metadataCache"}, {"original_string": "private final static DateFormat SF_DATETIME_FORMATTER = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\");", "modifier": "private final static", "type": "DateFormat", "declarator": "SF_DATETIME_FORMATTER = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\")", "var_name": "SF_DATETIME_FORMATTER"}, {"original_string": "private static Map<Class<?>, Function<Object, String>> paramConverters = new HashMap<>();", "modifier": "private static", "type": "Map<Class<?>, Function<Object, String>>", "declarator": "paramConverters = new HashMap<>()", "var_name": "paramConverters"}, {"original_string": "private List<FieldDef> fieldDefinitions;", "modifier": "private", "type": "List<FieldDef>", "declarator": "fieldDefinitions", "var_name": "fieldDefinitions"}, {"original_string": "private SoqlQueryAnalyzer queryAnalyzer;", "modifier": "private", "type": "SoqlQueryAnalyzer", "declarator": "queryAnalyzer", "var_name": "queryAnalyzer"}], "methods": [{"identifier": "ForcePreparedStatement", "parameters": "(ForceConnection connection, String soql)", "modifiers": "public", "return": "", "signature": " ForcePreparedStatement(ForceConnection connection, String soql)", "full_signature": "public  ForcePreparedStatement(ForceConnection connection, String soql)", "class_method_signature": "ForcePreparedStatement.ForcePreparedStatement(ForceConnection connection, String soql)", "testcase": false, "constructor": true}, {"identifier": "rethrowAsNonChecked", "parameters": "(Throwable throwable)", "modifiers": "public static", "return": "RuntimeException", "signature": "RuntimeException rethrowAsNonChecked(Throwable throwable)", "full_signature": "public static RuntimeException rethrowAsNonChecked(Throwable throwable)", "class_method_signature": "ForcePreparedStatement.rethrowAsNonChecked(Throwable throwable)", "testcase": false, "constructor": false}, {"identifier": "executeQuery", "parameters": "()", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet executeQuery()", "full_signature": "@Override public ResultSet executeQuery()", "class_method_signature": "ForcePreparedStatement.executeQuery()", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "()", "modifiers": "private", "return": "ResultSet", "signature": "ResultSet query()", "full_signature": "private ResultSet query()", "class_method_signature": "ForcePreparedStatement.query()", "testcase": false, "constructor": false}, {"identifier": "prepareQuery", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String prepareQuery()", "full_signature": "private String prepareQuery()", "class_method_signature": "ForcePreparedStatement.prepareQuery()", "testcase": false, "constructor": false}, {"identifier": "convertToColumnMap", "parameters": "(List<ForceResultField> record)", "modifiers": "private", "return": "ColumnMap<String, Object>", "signature": "ColumnMap<String, Object> convertToColumnMap(List<ForceResultField> record)", "full_signature": "private ColumnMap<String, Object> convertToColumnMap(List<ForceResultField> record)", "class_method_signature": "ForcePreparedStatement.convertToColumnMap(List<ForceResultField> record)", "testcase": false, "constructor": false}, {"identifier": "removeCacheHints", "parameters": "(String query)", "modifiers": "protected", "return": "String", "signature": "String removeCacheHints(String query)", "full_signature": "protected String removeCacheHints(String query)", "class_method_signature": "ForcePreparedStatement.removeCacheHints(String query)", "testcase": false, "constructor": false}, {"identifier": "getCacheMode", "parameters": "(String query)", "modifiers": "protected", "return": "CacheMode", "signature": "CacheMode getCacheMode(String query)", "full_signature": "protected CacheMode getCacheMode(String query)", "class_method_signature": "ForcePreparedStatement.getCacheMode(String query)", "testcase": false, "constructor": false}, {"identifier": "getCacheKey", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getCacheKey()", "full_signature": "private String getCacheKey()", "class_method_signature": "ForcePreparedStatement.getCacheKey()", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "public", "return": "List<Object>", "signature": "List<Object> getParameters()", "full_signature": "public List<Object> getParameters()", "class_method_signature": "ForcePreparedStatement.getParameters()", "testcase": false, "constructor": false}, {"identifier": "setParams", "parameters": "(String soql)", "modifiers": "protected", "return": "String", "signature": "String setParams(String soql)", "full_signature": "protected String setParams(String soql)", "class_method_signature": "ForcePreparedStatement.setParams(String soql)", "testcase": false, "constructor": false}, {"identifier": "toSoqlStringParam", "parameters": "(Object param)", "modifiers": "protected static", "return": "String", "signature": "String toSoqlStringParam(Object param)", "full_signature": "protected static String toSoqlStringParam(Object param)", "class_method_signature": "ForcePreparedStatement.toSoqlStringParam(Object param)", "testcase": false, "constructor": false}, {"identifier": "convertToSoqlParam", "parameters": "(Object paramValue)", "modifiers": "protected static", "return": "String", "signature": "String convertToSoqlParam(Object paramValue)", "full_signature": "protected static String convertToSoqlParam(Object paramValue)", "class_method_signature": "ForcePreparedStatement.convertToSoqlParam(Object paramValue)", "testcase": false, "constructor": false}, {"identifier": "getParamClass", "parameters": "(Object paramValue)", "modifiers": "protected static", "return": "Class<?>", "signature": "Class<?> getParamClass(Object paramValue)", "full_signature": "protected static Class<?> getParamClass(Object paramValue)", "class_method_signature": "ForcePreparedStatement.getParamClass(Object paramValue)", "testcase": false, "constructor": false}, {"identifier": "loadMetaData", "parameters": "()", "modifiers": "private", "return": "ResultSetMetaData", "signature": "ResultSetMetaData loadMetaData()", "full_signature": "private ResultSetMetaData loadMetaData()", "class_method_signature": "ForcePreparedStatement.loadMetaData()", "testcase": false, "constructor": false}, {"identifier": "flatten", "parameters": "(List fieldDefinitions)", "modifiers": "private", "return": "List<FieldDef>", "signature": "List<FieldDef> flatten(List fieldDefinitions)", "full_signature": "private List<FieldDef> flatten(List fieldDefinitions)", "class_method_signature": "ForcePreparedStatement.flatten(List fieldDefinitions)", "testcase": false, "constructor": false}, {"identifier": "getFieldDefinitions", "parameters": "()", "modifiers": "private", "return": "List<FieldDef>", "signature": "List<FieldDef> getFieldDefinitions()", "full_signature": "private List<FieldDef> getFieldDefinitions()", "class_method_signature": "ForcePreparedStatement.getFieldDefinitions()", "testcase": false, "constructor": false}, {"identifier": "getQueryAnalyzer", "parameters": "()", "modifiers": "private", "return": "SoqlQueryAnalyzer", "signature": "SoqlQueryAnalyzer getQueryAnalyzer()", "full_signature": "private SoqlQueryAnalyzer getQueryAnalyzer()", "class_method_signature": "ForcePreparedStatement.getQueryAnalyzer()", "testcase": false, "constructor": false}, {"identifier": "getParameterMetaData", "parameters": "()", "modifiers": "@Override public", "return": "ParameterMetaData", "signature": "ParameterMetaData getParameterMetaData()", "full_signature": "@Override public ParameterMetaData getParameterMetaData()", "class_method_signature": "ForcePreparedStatement.getParameterMetaData()", "testcase": false, "constructor": false}, {"identifier": "getMetaData", "parameters": "()", "modifiers": "public", "return": "ResultSetMetaData", "signature": "ResultSetMetaData getMetaData()", "full_signature": "public ResultSetMetaData getMetaData()", "class_method_signature": "ForcePreparedStatement.getMetaData()", "testcase": false, "constructor": false}, {"identifier": "getPartnerService", "parameters": "()", "modifiers": "private", "return": "PartnerService", "signature": "PartnerService getPartnerService()", "full_signature": "private PartnerService getPartnerService()", "class_method_signature": "ForcePreparedStatement.getPartnerService()", "testcase": false, "constructor": false}, {"identifier": "setFetchSize", "parameters": "(int rows)", "modifiers": "public", "return": "void", "signature": "void setFetchSize(int rows)", "full_signature": "public void setFetchSize(int rows)", "class_method_signature": "ForcePreparedStatement.setFetchSize(int rows)", "testcase": false, "constructor": false}, {"identifier": "getFetchSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFetchSize()", "full_signature": "public int getFetchSize()", "class_method_signature": "ForcePreparedStatement.getFetchSize()", "testcase": false, "constructor": false}, {"identifier": "setMaxRows", "parameters": "(int max)", "modifiers": "public", "return": "void", "signature": "void setMaxRows(int max)", "full_signature": "public void setMaxRows(int max)", "class_method_signature": "ForcePreparedStatement.setMaxRows(int max)", "testcase": false, "constructor": false}, {"identifier": "getMaxRows", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxRows()", "full_signature": "public int getMaxRows()", "class_method_signature": "ForcePreparedStatement.getMaxRows()", "testcase": false, "constructor": false}, {"identifier": "setArray", "parameters": "(int i, Array x)", "modifiers": "public", "return": "void", "signature": "void setArray(int i, Array x)", "full_signature": "public void setArray(int i, Array x)", "class_method_signature": "ForcePreparedStatement.setArray(int i, Array x)", "testcase": false, "constructor": false}, {"identifier": "setAsciiStream", "parameters": "(int parameterIndex, InputStream x, int length)", "modifiers": "public", "return": "void", "signature": "void setAsciiStream(int parameterIndex, InputStream x, int length)", "full_signature": "public void setAsciiStream(int parameterIndex, InputStream x, int length)", "class_method_signature": "ForcePreparedStatement.setAsciiStream(int parameterIndex, InputStream x, int length)", "testcase": false, "constructor": false}, {"identifier": "setBigDecimal", "parameters": "(int parameterIndex, BigDecimal x)", "modifiers": "public", "return": "void", "signature": "void setBigDecimal(int parameterIndex, BigDecimal x)", "full_signature": "public void setBigDecimal(int parameterIndex, BigDecimal x)", "class_method_signature": "ForcePreparedStatement.setBigDecimal(int parameterIndex, BigDecimal x)", "testcase": false, "constructor": false}, {"identifier": "addParameter", "parameters": "(int parameterIndex, Object x)", "modifiers": "protected", "return": "void", "signature": "void addParameter(int parameterIndex, Object x)", "full_signature": "protected void addParameter(int parameterIndex, Object x)", "class_method_signature": "ForcePreparedStatement.addParameter(int parameterIndex, Object x)", "testcase": false, "constructor": false}, {"identifier": "setBinaryStream", "parameters": "(int parameterIndex, InputStream x, int length)", "modifiers": "public", "return": "void", "signature": "void setBinaryStream(int parameterIndex, InputStream x, int length)", "full_signature": "public void setBinaryStream(int parameterIndex, InputStream x, int length)", "class_method_signature": "ForcePreparedStatement.setBinaryStream(int parameterIndex, InputStream x, int length)", "testcase": false, "constructor": false}, {"identifier": "setBlob", "parameters": "(int i, Blob x)", "modifiers": "public", "return": "void", "signature": "void setBlob(int i, Blob x)", "full_signature": "public void setBlob(int i, Blob x)", "class_method_signature": "ForcePreparedStatement.setBlob(int i, Blob x)", "testcase": false, "constructor": false}, {"identifier": "setBoolean", "parameters": "(int parameterIndex, boolean x)", "modifiers": "public", "return": "void", "signature": "void setBoolean(int parameterIndex, boolean x)", "full_signature": "public void setBoolean(int parameterIndex, boolean x)", "class_method_signature": "ForcePreparedStatement.setBoolean(int parameterIndex, boolean x)", "testcase": false, "constructor": false}, {"identifier": "setByte", "parameters": "(int parameterIndex, byte x)", "modifiers": "public", "return": "void", "signature": "void setByte(int parameterIndex, byte x)", "full_signature": "public void setByte(int parameterIndex, byte x)", "class_method_signature": "ForcePreparedStatement.setByte(int parameterIndex, byte x)", "testcase": false, "constructor": false}, {"identifier": "setBytes", "parameters": "(int parameterIndex, byte[] x)", "modifiers": "public", "return": "void", "signature": "void setBytes(int parameterIndex, byte[] x)", "full_signature": "public void setBytes(int parameterIndex, byte[] x)", "class_method_signature": "ForcePreparedStatement.setBytes(int parameterIndex, byte[] x)", "testcase": false, "constructor": false}, {"identifier": "setCharacterStream", "parameters": "(int parameterIndex, Reader reader, int length)", "modifiers": "public", "return": "void", "signature": "void setCharacterStream(int parameterIndex, Reader reader, int length)", "full_signature": "public void setCharacterStream(int parameterIndex, Reader reader, int length)", "class_method_signature": "ForcePreparedStatement.setCharacterStream(int parameterIndex, Reader reader, int length)", "testcase": false, "constructor": false}, {"identifier": "setClob", "parameters": "(int i, Clob x)", "modifiers": "public", "return": "void", "signature": "void setClob(int i, Clob x)", "full_signature": "public void setClob(int i, Clob x)", "class_method_signature": "ForcePreparedStatement.setClob(int i, Clob x)", "testcase": false, "constructor": false}, {"identifier": "setDate", "parameters": "(int parameterIndex, Date x)", "modifiers": "public", "return": "void", "signature": "void setDate(int parameterIndex, Date x)", "full_signature": "public void setDate(int parameterIndex, Date x)", "class_method_signature": "ForcePreparedStatement.setDate(int parameterIndex, Date x)", "testcase": false, "constructor": false}, {"identifier": "setDate", "parameters": "(int parameterIndex, Date x, Calendar cal)", "modifiers": "public", "return": "void", "signature": "void setDate(int parameterIndex, Date x, Calendar cal)", "full_signature": "public void setDate(int parameterIndex, Date x, Calendar cal)", "class_method_signature": "ForcePreparedStatement.setDate(int parameterIndex, Date x, Calendar cal)", "testcase": false, "constructor": false}, {"identifier": "setDouble", "parameters": "(int parameterIndex, double x)", "modifiers": "public", "return": "void", "signature": "void setDouble(int parameterIndex, double x)", "full_signature": "public void setDouble(int parameterIndex, double x)", "class_method_signature": "ForcePreparedStatement.setDouble(int parameterIndex, double x)", "testcase": false, "constructor": false}, {"identifier": "setFloat", "parameters": "(int parameterIndex, float x)", "modifiers": "public", "return": "void", "signature": "void setFloat(int parameterIndex, float x)", "full_signature": "public void setFloat(int parameterIndex, float x)", "class_method_signature": "ForcePreparedStatement.setFloat(int parameterIndex, float x)", "testcase": false, "constructor": false}, {"identifier": "setInt", "parameters": "(int parameterIndex, int x)", "modifiers": "public", "return": "void", "signature": "void setInt(int parameterIndex, int x)", "full_signature": "public void setInt(int parameterIndex, int x)", "class_method_signature": "ForcePreparedStatement.setInt(int parameterIndex, int x)", "testcase": false, "constructor": false}, {"identifier": "setLong", "parameters": "(int parameterIndex, long x)", "modifiers": "public", "return": "void", "signature": "void setLong(int parameterIndex, long x)", "full_signature": "public void setLong(int parameterIndex, long x)", "class_method_signature": "ForcePreparedStatement.setLong(int parameterIndex, long x)", "testcase": false, "constructor": false}, {"identifier": "setNull", "parameters": "(int parameterIndex, int sqlType)", "modifiers": "public", "return": "void", "signature": "void setNull(int parameterIndex, int sqlType)", "full_signature": "public void setNull(int parameterIndex, int sqlType)", "class_method_signature": "ForcePreparedStatement.setNull(int parameterIndex, int sqlType)", "testcase": false, "constructor": false}, {"identifier": "setNull", "parameters": "(int paramIndex, int sqlType, String typeName)", "modifiers": "public", "return": "void", "signature": "void setNull(int paramIndex, int sqlType, String typeName)", "full_signature": "public void setNull(int paramIndex, int sqlType, String typeName)", "class_method_signature": "ForcePreparedStatement.setNull(int paramIndex, int sqlType, String typeName)", "testcase": false, "constructor": false}, {"identifier": "setObject", "parameters": "(int parameterIndex, Object x)", "modifiers": "public", "return": "void", "signature": "void setObject(int parameterIndex, Object x)", "full_signature": "public void setObject(int parameterIndex, Object x)", "class_method_signature": "ForcePreparedStatement.setObject(int parameterIndex, Object x)", "testcase": false, "constructor": false}, {"identifier": "setObject", "parameters": "(int parameterIndex, Object x, int targetSqlType)", "modifiers": "public", "return": "void", "signature": "void setObject(int parameterIndex, Object x, int targetSqlType)", "full_signature": "public void setObject(int parameterIndex, Object x, int targetSqlType)", "class_method_signature": "ForcePreparedStatement.setObject(int parameterIndex, Object x, int targetSqlType)", "testcase": false, "constructor": false}, {"identifier": "setObject", "parameters": "(int parameterIndex, Object x, int targetSqlType,\n                          int scale)", "modifiers": "public", "return": "void", "signature": "void setObject(int parameterIndex, Object x, int targetSqlType,\n                          int scale)", "full_signature": "public void setObject(int parameterIndex, Object x, int targetSqlType,\n                          int scale)", "class_method_signature": "ForcePreparedStatement.setObject(int parameterIndex, Object x, int targetSqlType,\n                          int scale)", "testcase": false, "constructor": false}, {"identifier": "setRef", "parameters": "(int i, Ref x)", "modifiers": "public", "return": "void", "signature": "void setRef(int i, Ref x)", "full_signature": "public void setRef(int i, Ref x)", "class_method_signature": "ForcePreparedStatement.setRef(int i, Ref x)", "testcase": false, "constructor": false}, {"identifier": "setShort", "parameters": "(int parameterIndex, short x)", "modifiers": "public", "return": "void", "signature": "void setShort(int parameterIndex, short x)", "full_signature": "public void setShort(int parameterIndex, short x)", "class_method_signature": "ForcePreparedStatement.setShort(int parameterIndex, short x)", "testcase": false, "constructor": false}, {"identifier": "setString", "parameters": "(int parameterIndex, String x)", "modifiers": "public", "return": "void", "signature": "void setString(int parameterIndex, String x)", "full_signature": "public void setString(int parameterIndex, String x)", "class_method_signature": "ForcePreparedStatement.setString(int parameterIndex, String x)", "testcase": false, "constructor": false}, {"identifier": "setTime", "parameters": "(int parameterIndex, Time x)", "modifiers": "public", "return": "void", "signature": "void setTime(int parameterIndex, Time x)", "full_signature": "public void setTime(int parameterIndex, Time x)", "class_method_signature": "ForcePreparedStatement.setTime(int parameterIndex, Time x)", "testcase": false, "constructor": false}, {"identifier": "setTime", "parameters": "(int parameterIndex, Time x, Calendar cal)", "modifiers": "public", "return": "void", "signature": "void setTime(int parameterIndex, Time x, Calendar cal)", "full_signature": "public void setTime(int parameterIndex, Time x, Calendar cal)", "class_method_signature": "ForcePreparedStatement.setTime(int parameterIndex, Time x, Calendar cal)", "testcase": false, "constructor": false}, {"identifier": "setTimestamp", "parameters": "(int parameterIndex, Timestamp x)", "modifiers": "public", "return": "void", "signature": "void setTimestamp(int parameterIndex, Timestamp x)", "full_signature": "public void setTimestamp(int parameterIndex, Timestamp x)", "class_method_signature": "ForcePreparedStatement.setTimestamp(int parameterIndex, Timestamp x)", "testcase": false, "constructor": false}, {"identifier": "setTimestamp", "parameters": "(int parameterIndex, Timestamp x, Calendar cal)", "modifiers": "public", "return": "void", "signature": "void setTimestamp(int parameterIndex, Timestamp x, Calendar cal)", "full_signature": "public void setTimestamp(int parameterIndex, Timestamp x, Calendar cal)", "class_method_signature": "ForcePreparedStatement.setTimestamp(int parameterIndex, Timestamp x, Calendar cal)", "testcase": false, "constructor": false}, {"identifier": "setURL", "parameters": "(int parameterIndex, URL x)", "modifiers": "public", "return": "void", "signature": "void setURL(int parameterIndex, URL x)", "full_signature": "public void setURL(int parameterIndex, URL x)", "class_method_signature": "ForcePreparedStatement.setURL(int parameterIndex, URL x)", "testcase": false, "constructor": false}, {"identifier": "setUnicodeStream", "parameters": "(int parameterIndex, InputStream x, int length)", "modifiers": "public", "return": "void", "signature": "void setUnicodeStream(int parameterIndex, InputStream x, int length)", "full_signature": "public void setUnicodeStream(int parameterIndex, InputStream x, int length)", "class_method_signature": "ForcePreparedStatement.setUnicodeStream(int parameterIndex, InputStream x, int length)", "testcase": false, "constructor": false}, {"identifier": "executeQuery", "parameters": "(String sql)", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet executeQuery(String sql)", "full_signature": "@Override public ResultSet executeQuery(String sql)", "class_method_signature": "ForcePreparedStatement.executeQuery(String sql)", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "(String sql)", "modifiers": "@Override public", "return": "int", "signature": "int executeUpdate(String sql)", "full_signature": "@Override public int executeUpdate(String sql)", "class_method_signature": "ForcePreparedStatement.executeUpdate(String sql)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ForcePreparedStatement.close()", "testcase": false, "constructor": false}, {"identifier": "getMaxFieldSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxFieldSize()", "full_signature": "@Override public int getMaxFieldSize()", "class_method_signature": "ForcePreparedStatement.getMaxFieldSize()", "testcase": false, "constructor": false}, {"identifier": "setMaxFieldSize", "parameters": "(int max)", "modifiers": "@Override public", "return": "void", "signature": "void setMaxFieldSize(int max)", "full_signature": "@Override public void setMaxFieldSize(int max)", "class_method_signature": "ForcePreparedStatement.setMaxFieldSize(int max)", "testcase": false, "constructor": false}, {"identifier": "setEscapeProcessing", "parameters": "(boolean enable)", "modifiers": "@Override public", "return": "void", "signature": "void setEscapeProcessing(boolean enable)", "full_signature": "@Override public void setEscapeProcessing(boolean enable)", "class_method_signature": "ForcePreparedStatement.setEscapeProcessing(boolean enable)", "testcase": false, "constructor": false}, {"identifier": "getQueryTimeout", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getQueryTimeout()", "full_signature": "@Override public int getQueryTimeout()", "class_method_signature": "ForcePreparedStatement.getQueryTimeout()", "testcase": false, "constructor": false}, {"identifier": "setQueryTimeout", "parameters": "(int seconds)", "modifiers": "@Override public", "return": "void", "signature": "void setQueryTimeout(int seconds)", "full_signature": "@Override public void setQueryTimeout(int seconds)", "class_method_signature": "ForcePreparedStatement.setQueryTimeout(int seconds)", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void cancel()", "full_signature": "@Override public void cancel()", "class_method_signature": "ForcePreparedStatement.cancel()", "testcase": false, "constructor": false}, {"identifier": "getWarnings", "parameters": "()", "modifiers": "@Override public", "return": "SQLWarning", "signature": "SQLWarning getWarnings()", "full_signature": "@Override public SQLWarning getWarnings()", "class_method_signature": "ForcePreparedStatement.getWarnings()", "testcase": false, "constructor": false}, {"identifier": "clearWarnings", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clearWarnings()", "full_signature": "@Override public void clearWarnings()", "class_method_signature": "ForcePreparedStatement.clearWarnings()", "testcase": false, "constructor": false}, {"identifier": "setCursorName", "parameters": "(String name)", "modifiers": "@Override public", "return": "void", "signature": "void setCursorName(String name)", "full_signature": "@Override public void setCursorName(String name)", "class_method_signature": "ForcePreparedStatement.setCursorName(String name)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(String sql)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean execute(String sql)", "full_signature": "@Override public boolean execute(String sql)", "class_method_signature": "ForcePreparedStatement.execute(String sql)", "testcase": false, "constructor": false}, {"identifier": "getResultSet", "parameters": "()", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getResultSet()", "full_signature": "@Override public ResultSet getResultSet()", "class_method_signature": "ForcePreparedStatement.getResultSet()", "testcase": false, "constructor": false}, {"identifier": "getUpdateCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getUpdateCount()", "full_signature": "@Override public int getUpdateCount()", "class_method_signature": "ForcePreparedStatement.getUpdateCount()", "testcase": false, "constructor": false}, {"identifier": "getMoreResults", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getMoreResults()", "full_signature": "@Override public boolean getMoreResults()", "class_method_signature": "ForcePreparedStatement.getMoreResults()", "testcase": false, "constructor": false}, {"identifier": "setFetchDirection", "parameters": "(int direction)", "modifiers": "@Override public", "return": "void", "signature": "void setFetchDirection(int direction)", "full_signature": "@Override public void setFetchDirection(int direction)", "class_method_signature": "ForcePreparedStatement.setFetchDirection(int direction)", "testcase": false, "constructor": false}, {"identifier": "getFetchDirection", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getFetchDirection()", "full_signature": "@Override public int getFetchDirection()", "class_method_signature": "ForcePreparedStatement.getFetchDirection()", "testcase": false, "constructor": false}, {"identifier": "getResultSetConcurrency", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getResultSetConcurrency()", "full_signature": "@Override public int getResultSetConcurrency()", "class_method_signature": "ForcePreparedStatement.getResultSetConcurrency()", "testcase": false, "constructor": false}, {"identifier": "getResultSetType", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getResultSetType()", "full_signature": "@Override public int getResultSetType()", "class_method_signature": "ForcePreparedStatement.getResultSetType()", "testcase": false, "constructor": false}, {"identifier": "addBatch", "parameters": "(String sql)", "modifiers": "@Override public", "return": "void", "signature": "void addBatch(String sql)", "full_signature": "@Override public void addBatch(String sql)", "class_method_signature": "ForcePreparedStatement.addBatch(String sql)", "testcase": false, "constructor": false}, {"identifier": "clearBatch", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clearBatch()", "full_signature": "@Override public void clearBatch()", "class_method_signature": "ForcePreparedStatement.clearBatch()", "testcase": false, "constructor": false}, {"identifier": "executeBatch", "parameters": "()", "modifiers": "@Override public", "return": "int[]", "signature": "int[] executeBatch()", "full_signature": "@Override public int[] executeBatch()", "class_method_signature": "ForcePreparedStatement.executeBatch()", "testcase": false, "constructor": false}, {"identifier": "getConnection", "parameters": "()", "modifiers": "@Override public", "return": "Connection", "signature": "Connection getConnection()", "full_signature": "@Override public Connection getConnection()", "class_method_signature": "ForcePreparedStatement.getConnection()", "testcase": false, "constructor": false}, {"identifier": "getMoreResults", "parameters": "(int current)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getMoreResults(int current)", "full_signature": "@Override public boolean getMoreResults(int current)", "class_method_signature": "ForcePreparedStatement.getMoreResults(int current)", "testcase": false, "constructor": false}, {"identifier": "getGeneratedKeys", "parameters": "()", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet getGeneratedKeys()", "full_signature": "@Override public ResultSet getGeneratedKeys()", "class_method_signature": "ForcePreparedStatement.getGeneratedKeys()", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "(String sql, int autoGeneratedKeys)", "modifiers": "@Override public", "return": "int", "signature": "int executeUpdate(String sql, int autoGeneratedKeys)", "full_signature": "@Override public int executeUpdate(String sql, int autoGeneratedKeys)", "class_method_signature": "ForcePreparedStatement.executeUpdate(String sql, int autoGeneratedKeys)", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "(String sql, int[] columnIndexes)", "modifiers": "@Override public", "return": "int", "signature": "int executeUpdate(String sql, int[] columnIndexes)", "full_signature": "@Override public int executeUpdate(String sql, int[] columnIndexes)", "class_method_signature": "ForcePreparedStatement.executeUpdate(String sql, int[] columnIndexes)", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "(String sql, String[] columnNames)", "modifiers": "@Override public", "return": "int", "signature": "int executeUpdate(String sql, String[] columnNames)", "full_signature": "@Override public int executeUpdate(String sql, String[] columnNames)", "class_method_signature": "ForcePreparedStatement.executeUpdate(String sql, String[] columnNames)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(String sql, int autoGeneratedKeys)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean execute(String sql, int autoGeneratedKeys)", "full_signature": "@Override public boolean execute(String sql, int autoGeneratedKeys)", "class_method_signature": "ForcePreparedStatement.execute(String sql, int autoGeneratedKeys)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(String sql, int[] columnIndexes)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean execute(String sql, int[] columnIndexes)", "full_signature": "@Override public boolean execute(String sql, int[] columnIndexes)", "class_method_signature": "ForcePreparedStatement.execute(String sql, int[] columnIndexes)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(String sql, String[] columnNames)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean execute(String sql, String[] columnNames)", "full_signature": "@Override public boolean execute(String sql, String[] columnNames)", "class_method_signature": "ForcePreparedStatement.execute(String sql, String[] columnNames)", "testcase": false, "constructor": false}, {"identifier": "getResultSetHoldability", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getResultSetHoldability()", "full_signature": "@Override public int getResultSetHoldability()", "class_method_signature": "ForcePreparedStatement.getResultSetHoldability()", "testcase": false, "constructor": false}, {"identifier": "isClosed", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isClosed()", "full_signature": "@Override public boolean isClosed()", "class_method_signature": "ForcePreparedStatement.isClosed()", "testcase": false, "constructor": false}, {"identifier": "setPoolable", "parameters": "(boolean poolable)", "modifiers": "@Override public", "return": "void", "signature": "void setPoolable(boolean poolable)", "full_signature": "@Override public void setPoolable(boolean poolable)", "class_method_signature": "ForcePreparedStatement.setPoolable(boolean poolable)", "testcase": false, "constructor": false}, {"identifier": "isPoolable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isPoolable()", "full_signature": "@Override public boolean isPoolable()", "class_method_signature": "ForcePreparedStatement.isPoolable()", "testcase": false, "constructor": false}, {"identifier": "closeOnCompletion", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void closeOnCompletion()", "full_signature": "@Override public void closeOnCompletion()", "class_method_signature": "ForcePreparedStatement.closeOnCompletion()", "testcase": false, "constructor": false}, {"identifier": "isCloseOnCompletion", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCloseOnCompletion()", "full_signature": "@Override public boolean isCloseOnCompletion()", "class_method_signature": "ForcePreparedStatement.isCloseOnCompletion()", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "(Class<T> iface)", "modifiers": "@Override public", "return": "T", "signature": "T unwrap(Class<T> iface)", "full_signature": "@Override public T unwrap(Class<T> iface)", "class_method_signature": "ForcePreparedStatement.unwrap(Class<T> iface)", "testcase": false, "constructor": false}, {"identifier": "isWrapperFor", "parameters": "(Class<?> iface)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isWrapperFor(Class<?> iface)", "full_signature": "@Override public boolean isWrapperFor(Class<?> iface)", "class_method_signature": "ForcePreparedStatement.isWrapperFor(Class<?> iface)", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int executeUpdate()", "full_signature": "@Override public int executeUpdate()", "class_method_signature": "ForcePreparedStatement.executeUpdate()", "testcase": false, "constructor": false}, {"identifier": "clearParameters", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clearParameters()", "full_signature": "@Override public void clearParameters()", "class_method_signature": "ForcePreparedStatement.clearParameters()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean execute()", "full_signature": "@Override public boolean execute()", "class_method_signature": "ForcePreparedStatement.execute()", "testcase": false, "constructor": false}, {"identifier": "addBatch", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void addBatch()", "full_signature": "@Override public void addBatch()", "class_method_signature": "ForcePreparedStatement.addBatch()", "testcase": false, "constructor": false}, {"identifier": "setRowId", "parameters": "(int parameterIndex, RowId x)", "modifiers": "@Override public", "return": "void", "signature": "void setRowId(int parameterIndex, RowId x)", "full_signature": "@Override public void setRowId(int parameterIndex, RowId x)", "class_method_signature": "ForcePreparedStatement.setRowId(int parameterIndex, RowId x)", "testcase": false, "constructor": false}, {"identifier": "setNString", "parameters": "(int parameterIndex, String value)", "modifiers": "@Override public", "return": "void", "signature": "void setNString(int parameterIndex, String value)", "full_signature": "@Override public void setNString(int parameterIndex, String value)", "class_method_signature": "ForcePreparedStatement.setNString(int parameterIndex, String value)", "testcase": false, "constructor": false}, {"identifier": "setNCharacterStream", "parameters": "(int parameterIndex, Reader value, long length)", "modifiers": "@Override public", "return": "void", "signature": "void setNCharacterStream(int parameterIndex, Reader value, long length)", "full_signature": "@Override public void setNCharacterStream(int parameterIndex, Reader value, long length)", "class_method_signature": "ForcePreparedStatement.setNCharacterStream(int parameterIndex, Reader value, long length)", "testcase": false, "constructor": false}, {"identifier": "setNClob", "parameters": "(int parameterIndex, NClob value)", "modifiers": "@Override public", "return": "void", "signature": "void setNClob(int parameterIndex, NClob value)", "full_signature": "@Override public void setNClob(int parameterIndex, NClob value)", "class_method_signature": "ForcePreparedStatement.setNClob(int parameterIndex, NClob value)", "testcase": false, "constructor": false}, {"identifier": "setClob", "parameters": "(int parameterIndex, Reader reader, long length)", "modifiers": "@Override public", "return": "void", "signature": "void setClob(int parameterIndex, Reader reader, long length)", "full_signature": "@Override public void setClob(int parameterIndex, Reader reader, long length)", "class_method_signature": "ForcePreparedStatement.setClob(int parameterIndex, Reader reader, long length)", "testcase": false, "constructor": false}, {"identifier": "setBlob", "parameters": "(int parameterIndex, InputStream inputStream, long length)", "modifiers": "@Override public", "return": "void", "signature": "void setBlob(int parameterIndex, InputStream inputStream, long length)", "full_signature": "@Override public void setBlob(int parameterIndex, InputStream inputStream, long length)", "class_method_signature": "ForcePreparedStatement.setBlob(int parameterIndex, InputStream inputStream, long length)", "testcase": false, "constructor": false}, {"identifier": "setNClob", "parameters": "(int parameterIndex, Reader reader, long length)", "modifiers": "@Override public", "return": "void", "signature": "void setNClob(int parameterIndex, Reader reader, long length)", "full_signature": "@Override public void setNClob(int parameterIndex, Reader reader, long length)", "class_method_signature": "ForcePreparedStatement.setNClob(int parameterIndex, Reader reader, long length)", "testcase": false, "constructor": false}, {"identifier": "setSQLXML", "parameters": "(int parameterIndex, SQLXML xmlObject)", "modifiers": "@Override public", "return": "void", "signature": "void setSQLXML(int parameterIndex, SQLXML xmlObject)", "full_signature": "@Override public void setSQLXML(int parameterIndex, SQLXML xmlObject)", "class_method_signature": "ForcePreparedStatement.setSQLXML(int parameterIndex, SQLXML xmlObject)", "testcase": false, "constructor": false}, {"identifier": "setAsciiStream", "parameters": "(int parameterIndex, InputStream x, long length)", "modifiers": "@Override public", "return": "void", "signature": "void setAsciiStream(int parameterIndex, InputStream x, long length)", "full_signature": "@Override public void setAsciiStream(int parameterIndex, InputStream x, long length)", "class_method_signature": "ForcePreparedStatement.setAsciiStream(int parameterIndex, InputStream x, long length)", "testcase": false, "constructor": false}, {"identifier": "setBinaryStream", "parameters": "(int parameterIndex, InputStream x, long length)", "modifiers": "@Override public", "return": "void", "signature": "void setBinaryStream(int parameterIndex, InputStream x, long length)", "full_signature": "@Override public void setBinaryStream(int parameterIndex, InputStream x, long length)", "class_method_signature": "ForcePreparedStatement.setBinaryStream(int parameterIndex, InputStream x, long length)", "testcase": false, "constructor": false}, {"identifier": "setCharacterStream", "parameters": "(int parameterIndex, Reader reader, long length)", "modifiers": "@Override public", "return": "void", "signature": "void setCharacterStream(int parameterIndex, Reader reader, long length)", "full_signature": "@Override public void setCharacterStream(int parameterIndex, Reader reader, long length)", "class_method_signature": "ForcePreparedStatement.setCharacterStream(int parameterIndex, Reader reader, long length)", "testcase": false, "constructor": false}, {"identifier": "setAsciiStream", "parameters": "(int parameterIndex, InputStream x)", "modifiers": "@Override public", "return": "void", "signature": "void setAsciiStream(int parameterIndex, InputStream x)", "full_signature": "@Override public void setAsciiStream(int parameterIndex, InputStream x)", "class_method_signature": "ForcePreparedStatement.setAsciiStream(int parameterIndex, InputStream x)", "testcase": false, "constructor": false}, {"identifier": "setBinaryStream", "parameters": "(int parameterIndex, InputStream x)", "modifiers": "@Override public", "return": "void", "signature": "void setBinaryStream(int parameterIndex, InputStream x)", "full_signature": "@Override public void setBinaryStream(int parameterIndex, InputStream x)", "class_method_signature": "ForcePreparedStatement.setBinaryStream(int parameterIndex, InputStream x)", "testcase": false, "constructor": false}, {"identifier": "setCharacterStream", "parameters": "(int parameterIndex, Reader reader)", "modifiers": "@Override public", "return": "void", "signature": "void setCharacterStream(int parameterIndex, Reader reader)", "full_signature": "@Override public void setCharacterStream(int parameterIndex, Reader reader)", "class_method_signature": "ForcePreparedStatement.setCharacterStream(int parameterIndex, Reader reader)", "testcase": false, "constructor": false}, {"identifier": "setNCharacterStream", "parameters": "(int parameterIndex, Reader value)", "modifiers": "@Override public", "return": "void", "signature": "void setNCharacterStream(int parameterIndex, Reader value)", "full_signature": "@Override public void setNCharacterStream(int parameterIndex, Reader value)", "class_method_signature": "ForcePreparedStatement.setNCharacterStream(int parameterIndex, Reader value)", "testcase": false, "constructor": false}, {"identifier": "setClob", "parameters": "(int parameterIndex, Reader reader)", "modifiers": "@Override public", "return": "void", "signature": "void setClob(int parameterIndex, Reader reader)", "full_signature": "@Override public void setClob(int parameterIndex, Reader reader)", "class_method_signature": "ForcePreparedStatement.setClob(int parameterIndex, Reader reader)", "testcase": false, "constructor": false}, {"identifier": "setBlob", "parameters": "(int parameterIndex, InputStream inputStream)", "modifiers": "@Override public", "return": "void", "signature": "void setBlob(int parameterIndex, InputStream inputStream)", "full_signature": "@Override public void setBlob(int parameterIndex, InputStream inputStream)", "class_method_signature": "ForcePreparedStatement.setBlob(int parameterIndex, InputStream inputStream)", "testcase": false, "constructor": false}, {"identifier": "setNClob", "parameters": "(int parameterIndex, Reader reader)", "modifiers": "@Override public", "return": "void", "signature": "void setNClob(int parameterIndex, Reader reader)", "full_signature": "@Override public void setNClob(int parameterIndex, Reader reader)", "class_method_signature": "ForcePreparedStatement.setNClob(int parameterIndex, Reader reader)", "testcase": false, "constructor": false}], "file": "sf-jdbc-driver/src/main/java/com/ascendix/jdbc/salesforce/statement/ForcePreparedStatement.java"}, "focal_method": {"identifier": "convertToSoqlParam", "parameters": "(Object paramValue)", "modifiers": "protected static", "return": "String", "body": "protected static String convertToSoqlParam(Object paramValue) {\n        Class<?> paramClass = getParamClass(paramValue);\n        return paramConverters.get(paramClass).apply(paramValue);\n    }", "signature": "String convertToSoqlParam(Object paramValue)", "full_signature": "protected static String convertToSoqlParam(Object paramValue)", "class_method_signature": "ForcePreparedStatement.convertToSoqlParam(Object paramValue)", "testcase": false, "constructor": false, "invocations": ["getParamClass", "apply", "get"]}, "repository": {"repo_id": 87432809, "url": "https://github.com/ascendix/salesforce-jdbc", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 19, "size": 41622, "license": "licensed"}}