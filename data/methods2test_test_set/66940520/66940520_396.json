{"test_class": {"identifier": "QueryPlannerUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final AnalyticsAggregationType SUM_SUM = new AnalyticsAggregationType( AggregationType.SUM, AggregationType.SUM );", "modifier": "private final", "type": "AnalyticsAggregationType", "declarator": "SUM_SUM = new AnalyticsAggregationType( AggregationType.SUM, AggregationType.SUM )", "var_name": "SUM_SUM"}, {"original_string": "private final AnalyticsAggregationType SUM_AVG = new AnalyticsAggregationType( AggregationType.SUM, AggregationType.AVERAGE );", "modifier": "private final", "type": "AnalyticsAggregationType", "declarator": "SUM_AVG = new AnalyticsAggregationType( AggregationType.SUM, AggregationType.AVERAGE )", "var_name": "SUM_AVG"}], "file": "dhis-2/dhis-services/dhis-service-analytics/src/test/java/org/hisp/dhis/analytics/data/QueryPlannerUtilsTest.java"}, "test_case": {"identifier": "testIsDisaggregation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsDisaggregation()\n    {\n        assertTrue( QueryPlannerUtils.isDisaggregation( SUM_AVG, new QuarterlyPeriodType(), new YearlyPeriodType() ) );\n        assertTrue( QueryPlannerUtils.isDisaggregation( SUM_AVG, new MonthlyPeriodType(), new YearlyPeriodType() ) );\n        assertTrue( QueryPlannerUtils.isDisaggregation( SUM_AVG, new FinancialAprilPeriodType(), new YearlyPeriodType() ) );\n        assertTrue( QueryPlannerUtils.isDisaggregation( SUM_AVG, new FinancialOctoberPeriodType(), new YearlyPeriodType() ) );\n\n        assertFalse( QueryPlannerUtils.isDisaggregation( SUM_SUM, new QuarterlyPeriodType(), new YearlyPeriodType() ) );\n        assertFalse( QueryPlannerUtils.isDisaggregation( SUM_SUM, new MonthlyPeriodType(), new YearlyPeriodType() ) );\n        assertFalse( QueryPlannerUtils.isDisaggregation( SUM_SUM, new FinancialAprilPeriodType(), new YearlyPeriodType() ) );\n        assertFalse( QueryPlannerUtils.isDisaggregation( SUM_SUM, new FinancialOctoberPeriodType(), new YearlyPeriodType() ) );\n        \n        assertFalse( QueryPlannerUtils.isDisaggregation( SUM_AVG, new YearlyPeriodType(), new QuarterlyPeriodType() ) );        \n        assertFalse( QueryPlannerUtils.isDisaggregation( SUM_AVG, new YearlyPeriodType(), new YearlyPeriodType() ) );      \n        assertFalse( QueryPlannerUtils.isDisaggregation( SUM_SUM, new YearlyPeriodType(), new YearlyPeriodType() ) );\n    }", "signature": "void testIsDisaggregation()", "full_signature": "@Test public void testIsDisaggregation()", "class_method_signature": "QueryPlannerUtilsTest.testIsDisaggregation()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isDisaggregation", "assertTrue", "isDisaggregation", "assertTrue", "isDisaggregation", "assertTrue", "isDisaggregation", "assertFalse", "isDisaggregation", "assertFalse", "isDisaggregation", "assertFalse", "isDisaggregation", "assertFalse", "isDisaggregation", "assertFalse", "isDisaggregation", "assertFalse", "isDisaggregation", "assertFalse", "isDisaggregation"]}, "focal_class": {"identifier": "QueryPlannerUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getLevelOrgUnitMap", "parameters": "( List<DimensionalItemObject> orgUnits )", "modifiers": "public static", "return": "ListMap<Integer, DimensionalItemObject>", "signature": "ListMap<Integer, DimensionalItemObject> getLevelOrgUnitMap( List<DimensionalItemObject> orgUnits )", "full_signature": "public static ListMap<Integer, DimensionalItemObject> getLevelOrgUnitMap( List<DimensionalItemObject> orgUnits )", "class_method_signature": "QueryPlannerUtils.getLevelOrgUnitMap( List<DimensionalItemObject> orgUnits )", "testcase": false, "constructor": false}, {"identifier": "getLevelOrgUnitTypedMap", "parameters": "( List<OrganisationUnit> orgUnits )", "modifiers": "public static", "return": "ListMap<Integer, OrganisationUnit>", "signature": "ListMap<Integer, OrganisationUnit> getLevelOrgUnitTypedMap( List<OrganisationUnit> orgUnits )", "full_signature": "public static ListMap<Integer, OrganisationUnit> getLevelOrgUnitTypedMap( List<OrganisationUnit> orgUnits )", "class_method_signature": "QueryPlannerUtils.getLevelOrgUnitTypedMap( List<OrganisationUnit> orgUnits )", "testcase": false, "constructor": false}, {"identifier": "getDataTypeDataElementMap", "parameters": "( List<DimensionalItemObject> dataElements )", "modifiers": "public static", "return": "ListMap<DataType, DimensionalItemObject>", "signature": "ListMap<DataType, DimensionalItemObject> getDataTypeDataElementMap( List<DimensionalItemObject> dataElements )", "full_signature": "public static ListMap<DataType, DimensionalItemObject> getDataTypeDataElementMap( List<DimensionalItemObject> dataElements )", "class_method_signature": "QueryPlannerUtils.getDataTypeDataElementMap( List<DimensionalItemObject> dataElements )", "testcase": false, "constructor": false}, {"identifier": "getAggregationTypeDataElementMap", "parameters": "(\n        List<DimensionalItemObject> dataElements, AnalyticsAggregationType aggregationType, String periodType )", "modifiers": "public static", "return": "ListMap<AnalyticsAggregationType, DimensionalItemObject>", "signature": "ListMap<AnalyticsAggregationType, DimensionalItemObject> getAggregationTypeDataElementMap(\n        List<DimensionalItemObject> dataElements, AnalyticsAggregationType aggregationType, String periodType )", "full_signature": "public static ListMap<AnalyticsAggregationType, DimensionalItemObject> getAggregationTypeDataElementMap(\n        List<DimensionalItemObject> dataElements, AnalyticsAggregationType aggregationType, String periodType )", "class_method_signature": "QueryPlannerUtils.getAggregationTypeDataElementMap(\n        List<DimensionalItemObject> dataElements, AnalyticsAggregationType aggregationType, String periodType )", "testcase": false, "constructor": false}, {"identifier": "getDaysPeriodMap", "parameters": "( List<DimensionalItemObject> periods )", "modifiers": "public static", "return": "ListMap<Integer, DimensionalItemObject>", "signature": "ListMap<Integer, DimensionalItemObject> getDaysPeriodMap( List<DimensionalItemObject> periods )", "full_signature": "public static ListMap<Integer, DimensionalItemObject> getDaysPeriodMap( List<DimensionalItemObject> periods )", "class_method_signature": "QueryPlannerUtils.getDaysPeriodMap( List<DimensionalItemObject> periods )", "testcase": false, "constructor": false}, {"identifier": "getAggregationType", "parameters": "( AnalyticsAggregationType aggregationType, ValueType valueType,\n        PeriodType aggregationPeriodType, PeriodType dataPeriodType )", "modifiers": "public static", "return": "AnalyticsAggregationType", "signature": "AnalyticsAggregationType getAggregationType( AnalyticsAggregationType aggregationType, ValueType valueType,\n        PeriodType aggregationPeriodType, PeriodType dataPeriodType )", "full_signature": "public static AnalyticsAggregationType getAggregationType( AnalyticsAggregationType aggregationType, ValueType valueType,\n        PeriodType aggregationPeriodType, PeriodType dataPeriodType )", "class_method_signature": "QueryPlannerUtils.getAggregationType( AnalyticsAggregationType aggregationType, ValueType valueType,\n        PeriodType aggregationPeriodType, PeriodType dataPeriodType )", "testcase": false, "constructor": false}, {"identifier": "isDisaggregation", "parameters": "( AnalyticsAggregationType aggregationType, PeriodType aggregationPeriodType, PeriodType dataPeriodType )", "modifiers": "public static", "return": "boolean", "signature": "boolean isDisaggregation( AnalyticsAggregationType aggregationType, PeriodType aggregationPeriodType, PeriodType dataPeriodType )", "full_signature": "public static boolean isDisaggregation( AnalyticsAggregationType aggregationType, PeriodType aggregationPeriodType, PeriodType dataPeriodType )", "class_method_signature": "QueryPlannerUtils.isDisaggregation( AnalyticsAggregationType aggregationType, PeriodType aggregationPeriodType, PeriodType dataPeriodType )", "testcase": false, "constructor": false}, {"identifier": "getPeriodTypeDataElementMap", "parameters": "(\n        Collection<DimensionalItemObject> dataElements )", "modifiers": "public static", "return": "ListMap<PeriodType, DimensionalItemObject>", "signature": "ListMap<PeriodType, DimensionalItemObject> getPeriodTypeDataElementMap(\n        Collection<DimensionalItemObject> dataElements )", "full_signature": "public static ListMap<PeriodType, DimensionalItemObject> getPeriodTypeDataElementMap(\n        Collection<DimensionalItemObject> dataElements )", "class_method_signature": "QueryPlannerUtils.getPeriodTypeDataElementMap(\n        Collection<DimensionalItemObject> dataElements )", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "( List<DataQueryParams> params )", "modifiers": "public static", "return": "List<EventQueryParams>", "signature": "List<EventQueryParams> convert( List<DataQueryParams> params )", "full_signature": "public static List<EventQueryParams> convert( List<DataQueryParams> params )", "class_method_signature": "QueryPlannerUtils.convert( List<DataQueryParams> params )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/data/QueryPlannerUtils.java"}, "focal_method": {"identifier": "isDisaggregation", "parameters": "( AnalyticsAggregationType aggregationType, PeriodType aggregationPeriodType, PeriodType dataPeriodType )", "modifiers": "public static", "return": "boolean", "body": "public static boolean isDisaggregation( AnalyticsAggregationType aggregationType, PeriodType aggregationPeriodType, PeriodType dataPeriodType )\n    {\n        if ( dataPeriodType == null || aggregationPeriodType == null )\n        {\n            return false;\n        }\n\n        if ( aggregationType == null || AggregationType.AVERAGE != aggregationType.getPeriodAggregationType() )\n        {\n            return false;\n        }\n\n        if ( aggregationPeriodType.getFrequencyOrder() < dataPeriodType.getFrequencyOrder() )\n        {\n            return true;\n        }\n\n        if ( aggregationPeriodType.getFrequencyOrder() == dataPeriodType.getFrequencyOrder() &&\n            !aggregationPeriodType.equals( dataPeriodType ) )\n        {\n            return true;\n        }\n\n        return false;\n    }", "signature": "boolean isDisaggregation( AnalyticsAggregationType aggregationType, PeriodType aggregationPeriodType, PeriodType dataPeriodType )", "full_signature": "public static boolean isDisaggregation( AnalyticsAggregationType aggregationType, PeriodType aggregationPeriodType, PeriodType dataPeriodType )", "class_method_signature": "QueryPlannerUtils.isDisaggregation( AnalyticsAggregationType aggregationType, PeriodType aggregationPeriodType, PeriodType dataPeriodType )", "testcase": false, "constructor": false, "invocations": ["getPeriodAggregationType", "getFrequencyOrder", "getFrequencyOrder", "getFrequencyOrder", "getFrequencyOrder", "equals"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}