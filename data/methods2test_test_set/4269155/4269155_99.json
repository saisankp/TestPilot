{"test_class": {"identifier": "ServletUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "tiles-request-servlet/src/test/java/org/apache/tiles/request/servlet/ServletUtilTest.java"}, "test_case": {"identifier": "testWrapServletExceptionWithCause", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWrapServletExceptionWithCause() {\n        Throwable cause = createMock(Throwable.class);\n\n        replay(cause);\n        ServletException servletException = new ServletException(cause);\n        IOException exception = ServletUtil.wrapServletException(servletException, \"my message\");\n        assertEquals(cause, exception.getCause());\n        assertEquals(\"my message\", exception.getMessage());\n        verify(cause);\n    }", "signature": "void testWrapServletExceptionWithCause()", "full_signature": "@Test public void testWrapServletExceptionWithCause()", "class_method_signature": "ServletUtilTest.testWrapServletExceptionWithCause()", "testcase": true, "constructor": false, "invocations": ["createMock", "replay", "wrapServletException", "assertEquals", "getCause", "assertEquals", "getMessage", "verify"]}, "focal_class": {"identifier": "ServletUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ServletUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " ServletUtil()", "full_signature": "private  ServletUtil()", "class_method_signature": "ServletUtil.ServletUtil()", "testcase": false, "constructor": true}, {"identifier": "wrapServletException", "parameters": "(ServletException ex,\n            String message)", "modifiers": "public static", "return": "IOException", "signature": "IOException wrapServletException(ServletException ex,\n            String message)", "full_signature": "public static IOException wrapServletException(ServletException ex,\n            String message)", "class_method_signature": "ServletUtil.wrapServletException(ServletException ex,\n            String message)", "testcase": false, "constructor": false}, {"identifier": "getApplicationContext", "parameters": "(ServletContext servletContext)", "modifiers": "public static", "return": "ApplicationContext", "signature": "ApplicationContext getApplicationContext(ServletContext servletContext)", "full_signature": "public static ApplicationContext getApplicationContext(ServletContext servletContext)", "class_method_signature": "ServletUtil.getApplicationContext(ServletContext servletContext)", "testcase": false, "constructor": false}, {"identifier": "getServletRequest", "parameters": "(Request request)", "modifiers": "public static", "return": "ServletRequest", "signature": "ServletRequest getServletRequest(Request request)", "full_signature": "public static ServletRequest getServletRequest(Request request)", "class_method_signature": "ServletUtil.getServletRequest(Request request)", "testcase": false, "constructor": false}, {"identifier": "getServletContext", "parameters": "(ApplicationContext applicationContext)", "modifiers": "public static", "return": "ServletContext", "signature": "ServletContext getServletContext(ApplicationContext applicationContext)", "full_signature": "public static ServletContext getServletContext(ApplicationContext applicationContext)", "class_method_signature": "ServletUtil.getServletContext(ApplicationContext applicationContext)", "testcase": false, "constructor": false}], "file": "tiles-request-servlet/src/main/java/org/apache/tiles/request/servlet/ServletUtil.java"}, "focal_method": {"identifier": "wrapServletException", "parameters": "(ServletException ex,\n            String message)", "modifiers": "public static", "return": "IOException", "body": "public static IOException wrapServletException(ServletException ex,\n            String message) {\n        IOException retValue;\n        Throwable rootCause = ex.getRootCause();\n        if (rootCause != null) {\n            // Replace the ServletException with an IOException, with the root\n            // cause of the first as the cause of the latter.\n            retValue = new IOException(message, rootCause);\n        } else {\n            retValue = new IOException(message, ex);\n        }\n\n        return retValue;\n    }", "signature": "IOException wrapServletException(ServletException ex,\n            String message)", "full_signature": "public static IOException wrapServletException(ServletException ex,\n            String message)", "class_method_signature": "ServletUtil.wrapServletException(ServletException ex,\n            String message)", "testcase": false, "constructor": false, "invocations": ["getRootCause"]}, "repository": {"repo_id": 4269155, "url": "https://github.com/apache/tiles-request", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 865, "license": "licensed"}}