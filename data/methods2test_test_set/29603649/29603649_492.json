{"test_class": {"identifier": "RouterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private URI uri;", "modifier": "private", "type": "URI", "declarator": "uri", "var_name": "uri"}, {"original_string": "private Integer internalPort;", "modifier": "private", "type": "Integer", "declarator": "internalPort", "var_name": "internalPort"}, {"original_string": "@Mock\n    private WilmaHttpRequest request;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private Logger logger;", "modifier": "@Mock\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Mock\n    private RoutingService routingService;", "modifier": "@Mock\n    private", "type": "RoutingService", "declarator": "routingService", "var_name": "routingService"}, {"original_string": "@Mock\n    private RouteEngineConfigurationAccess configurationAccess;", "modifier": "@Mock\n    private", "type": "RouteEngineConfigurationAccess", "declarator": "configurationAccess", "var_name": "configurationAccess"}, {"original_string": "@Mock\n    private PropertyDTO properties;", "modifier": "@Mock\n    private", "type": "PropertyDTO", "declarator": "properties", "var_name": "properties"}, {"original_string": "@Mock\n    private ContextRefreshedEvent event;", "modifier": "@Mock\n    private", "type": "ContextRefreshedEvent", "declarator": "event", "var_name": "event"}, {"original_string": "@InjectMocks\n    private Router underTest;", "modifier": "@InjectMocks\n    private", "type": "Router", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-route-engine/src/test/java/com/epam/wilma/router/RouterTest.java"}, "test_case": {"identifier": "testRerouteShouldSetNewUri", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRerouteShouldSetNewUri() throws URISyntaxException {\n        //GIVEN\n        uri = new URI(\"http://127.0.0.1:\" + internalPort + \"/stub/\");\n        given(routingService.redirectRequestToStub(request)).willReturn(true);\n        //WHEN\n        underTest.reroute(request);\n        //TEST\n        verify(request).setUri(uri);\n    }", "signature": "void testRerouteShouldSetNewUri()", "full_signature": "@Test public void testRerouteShouldSetNewUri()", "class_method_signature": "RouterTest.testRerouteShouldSetNewUri()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "redirectRequestToStub", "reroute", "setUri", "verify"]}, "focal_class": {"identifier": "Router", "superclass": "", "interfaces": "implements ApplicationListener<ContextRefreshedEvent>", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(Router.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(Router.class)", "var_name": "logger"}, {"original_string": "private String host = \"http://127.0.0.1:\";", "modifier": "private", "type": "String", "declarator": "host = \"http://127.0.0.1:\"", "var_name": "host"}, {"original_string": "private String path = \"/stub/\";", "modifier": "private", "type": "String", "declarator": "path = \"/stub/\"", "var_name": "path"}, {"original_string": "private Integer internalPort;", "modifier": "private", "type": "Integer", "declarator": "internalPort", "var_name": "internalPort"}, {"original_string": "@Autowired\n    private RoutingService routingService;", "modifier": "@Autowired\n    private", "type": "RoutingService", "declarator": "routingService", "var_name": "routingService"}, {"original_string": "@Autowired\n    private RouteEngineConfigurationAccess configurationAccess;", "modifier": "@Autowired\n    private", "type": "RouteEngineConfigurationAccess", "declarator": "configurationAccess", "var_name": "configurationAccess"}], "methods": [{"identifier": "reroute", "parameters": "(final WilmaHttpRequest request)", "modifiers": "public", "return": "void", "signature": "void reroute(final WilmaHttpRequest request)", "full_signature": "public void reroute(final WilmaHttpRequest request)", "class_method_signature": "Router.reroute(final WilmaHttpRequest request)", "testcase": false, "constructor": false}, {"identifier": "onApplicationEvent", "parameters": "(final ContextRefreshedEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void onApplicationEvent(final ContextRefreshedEvent event)", "full_signature": "@Override public void onApplicationEvent(final ContextRefreshedEvent event)", "class_method_signature": "Router.onApplicationEvent(final ContextRefreshedEvent event)", "testcase": false, "constructor": false}, {"identifier": "getInternalPort", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getInternalPort()", "full_signature": "public Integer getInternalPort()", "class_method_signature": "Router.getInternalPort()", "testcase": false, "constructor": false}, {"identifier": "setHost", "parameters": "(final String host)", "modifiers": "public", "return": "void", "signature": "void setHost(final String host)", "full_signature": "public void setHost(final String host)", "class_method_signature": "Router.setHost(final String host)", "testcase": false, "constructor": false}, {"identifier": "setPath", "parameters": "(final String path)", "modifiers": "public", "return": "void", "signature": "void setPath(final String path)", "full_signature": "public void setPath(final String path)", "class_method_signature": "Router.setPath(final String path)", "testcase": false, "constructor": false}, {"identifier": "getURI", "parameters": "()", "modifiers": "", "return": "URI", "signature": "URI getURI()", "full_signature": " URI getURI()", "class_method_signature": "Router.getURI()", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-route-engine/src/main/java/com/epam/wilma/router/Router.java"}, "focal_method": {"identifier": "reroute", "parameters": "(final WilmaHttpRequest request)", "modifiers": "public", "return": "void", "body": "public void reroute(final WilmaHttpRequest request) {\n        if (routingService.redirectRequestToStub(request)) {\n            try {\n                request.setUri(getURI());\n            } catch (URISyntaxException e) {\n                logger.error(e.getMessage());\n            }\n        }\n    }", "signature": "void reroute(final WilmaHttpRequest request)", "full_signature": "public void reroute(final WilmaHttpRequest request)", "class_method_signature": "Router.reroute(final WilmaHttpRequest request)", "testcase": false, "constructor": false, "invocations": ["redirectRequestToStub", "setUri", "getURI", "error", "getMessage"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}