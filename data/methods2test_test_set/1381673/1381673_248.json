{"test_class": {"identifier": "GetAllDMNContextCommandTest", "superclass": "", "interfaces": "", "fields": [], "file": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/fluent/GetAllDMNContextCommandTest.java"}, "test_case": {"identifier": "execute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void execute() {\n        RegistryContext registryContext = new ContextImpl();\n        GetAllDMNContextCommand getAllDMNContextCommand = new GetAllDMNContextCommand();\n\n        assertThatThrownBy(() -> getAllDMNContextCommand.execute(registryContext))\n                .isInstanceOf(IllegalStateException.class)\n                .hasMessage(\"There is not DMNResult available\");\n\n        DMNResultImpl dmnResult = new DMNResultImpl(null);\n        dmnResult.setContext(new DMNContextImpl());\n\n        registryContext.register(DMNResult.class, dmnResult);\n\n        Map<String, Object> result = getAllDMNContextCommand.execute(registryContext);\n        assertEquals(0, result.size());\n    }", "signature": "void execute()", "full_signature": "@Test public void execute()", "class_method_signature": "GetAllDMNContextCommandTest.execute()", "testcase": true, "constructor": false, "invocations": ["hasMessage", "isInstanceOf", "assertThatThrownBy", "execute", "setContext", "register", "execute", "assertEquals", "size"]}, "focal_class": {"identifier": "GetAllDMNContextCommand", "superclass": "", "interfaces": "implements ExecutableCommand<Map<String, Object>>", "fields": [], "methods": [{"identifier": "execute", "parameters": "(Context context)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> execute(Context context)", "full_signature": "@Override public Map<String, Object> execute(Context context)", "class_method_signature": "GetAllDMNContextCommand.execute(Context context)", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/fluent/GetAllDMNContextCommand.java"}, "focal_method": {"identifier": "execute", "parameters": "(Context context)", "modifiers": "@Override public", "return": "Map<String, Object>", "body": "@Override\n    public Map<String, Object> execute(Context context) {\n        RegistryContext registryContext = (RegistryContext) context;\n        DMNResult dmnResult = registryContext.lookup(DMNResult.class);\n        if(dmnResult == null) {\n            throw new IllegalStateException(\"There is not DMNResult available\");\n        }\n\n        return dmnResult.getContext().getAll();\n    }", "signature": "Map<String, Object> execute(Context context)", "full_signature": "@Override public Map<String, Object> execute(Context context)", "class_method_signature": "GetAllDMNContextCommand.execute(Context context)", "testcase": false, "constructor": false, "invocations": ["lookup", "getAll", "getContext"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}