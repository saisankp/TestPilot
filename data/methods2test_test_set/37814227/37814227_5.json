{"test_class": {"identifier": "TravisRestServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  private TravisRestService travisRestService;", "modifier": "@Autowired\n  private", "type": "TravisRestService", "declarator": "travisRestService", "var_name": "travisRestService"}, {"original_string": "@MockBean\n  private ProfContextDumpRepository profContextDumpRepository;", "modifier": "@MockBean\n  private", "type": "ProfContextDumpRepository", "declarator": "profContextDumpRepository", "var_name": "profContextDumpRepository"}, {"original_string": "@MockBean\n  private ProjectRepository projectRepository;", "modifier": "@MockBean\n  private", "type": "ProjectRepository", "declarator": "projectRepository", "var_name": "projectRepository"}, {"original_string": "@MockBean\n  private BranchRepository branchRepository;", "modifier": "@MockBean\n  private", "type": "BranchRepository", "declarator": "branchRepository", "var_name": "branchRepository"}, {"original_string": "@MockBean\n  private BuildRepository buildRepository;", "modifier": "@MockBean\n  private", "type": "BuildRepository", "declarator": "buildRepository", "var_name": "buildRepository"}, {"original_string": "@MockBean\n  private JandyWorker jandyWorker;", "modifier": "@MockBean\n  private", "type": "JandyWorker", "declarator": "jandyWorker", "var_name": "jandyWorker"}, {"original_string": "@MockBean\n  private SampleRepository sampleRepository;", "modifier": "@MockBean\n  private", "type": "SampleRepository", "declarator": "sampleRepository", "var_name": "sampleRepository"}, {"original_string": "private BuildInfo bi;", "modifier": "private", "type": "BuildInfo", "declarator": "bi", "var_name": "bi"}, {"original_string": "private Project project;", "modifier": "private", "type": "Project", "declarator": "project", "var_name": "project"}, {"original_string": "private Branch branch;", "modifier": "private", "type": "Branch", "declarator": "branch", "var_name": "branch"}], "file": "jandy-server/src/test/java/io/jandy/service/TravisRestServiceTest.java"}, "test_case": {"identifier": "testUpdateTreeNodes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testUpdateTreeNodes() throws Exception {\n    ProfilingContext profContext = new Gson().fromJson(IOUtils.toString(ClassLoader.getSystemResource(\"java-profiler-result/end.json\")), ProfilingContext.class);\n    List<TreeNode> treenodes = Arrays.asList(new Gson().fromJson(IOUtils.toString(ClassLoader.getSystemResource(\"java-profiler-result/treenodes.json\")), TreeNode[].class));\n\n    Build build = new Build();\n    build.setId(3L);\n    build.setLanguage(bi.getLang());\n    build.setTravisBuildId(bi.getBuildId());\n    build.setNumber(bi.getBuildNum());\n    build.setBranch(branch);\n    build.setNumSamples(bi.getNumSamples());\n\n    ProfContextDump prof = new ProfContextDump();\n    prof.setId(profContext.getProfId());\n    prof.setBuild(build);\n    prof.setState(ProfContextState.CREATED);\n\n    when(profContextDumpRepository.findOne(anyLong())).thenReturn(prof);\n\n    travisRestService.updateTreeNodes(treenodes);\n\n    verify(profContextDumpRepository, times(1)).findOne(eq(prof.getId()));\n    verify(jandyWorker, times(1)).put(eq(build.getTravisBuildId()), eq(JandyTask.UPDATE), refEq(treenodes));\n  }", "signature": "void testUpdateTreeNodes()", "full_signature": "@Test public void testUpdateTreeNodes()", "class_method_signature": "TravisRestServiceTest.testUpdateTreeNodes()", "testcase": true, "constructor": false, "invocations": ["fromJson", "toString", "getSystemResource", "asList", "fromJson", "toString", "getSystemResource", "setId", "setLanguage", "getLang", "setTravisBuildId", "getBuildId", "setNumber", "getBuildNum", "setBranch", "setNumSamples", "getNumSamples", "setId", "getProfId", "setBuild", "setState", "thenReturn", "when", "findOne", "anyLong", "updateTreeNodes", "findOne", "verify", "times", "eq", "getId", "put", "verify", "times", "eq", "getTravisBuildId", "eq", "refEq"]}, "focal_class": {"identifier": "TravisRestService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(TravisRestService.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(TravisRestService.class)", "var_name": "logger"}, {"original_string": "@Autowired\n  private ProfContextDumpRepository profContextDumpRepository;", "modifier": "@Autowired\n  private", "type": "ProfContextDumpRepository", "declarator": "profContextDumpRepository", "var_name": "profContextDumpRepository"}, {"original_string": "@Autowired\n  private BuildRepository buildRepository;", "modifier": "@Autowired\n  private", "type": "BuildRepository", "declarator": "buildRepository", "var_name": "buildRepository"}, {"original_string": "@Autowired\n  private BranchRepository branchRepository;", "modifier": "@Autowired\n  private", "type": "BranchRepository", "declarator": "branchRepository", "var_name": "branchRepository"}, {"original_string": "@Autowired\n  private ProjectRepository projectRepository;", "modifier": "@Autowired\n  private", "type": "ProjectRepository", "declarator": "projectRepository", "var_name": "projectRepository"}, {"original_string": "@Autowired\n  private SampleRepository sampleRepository;", "modifier": "@Autowired\n  private", "type": "SampleRepository", "declarator": "sampleRepository", "var_name": "sampleRepository"}, {"original_string": "@Autowired\n  private JandyWorker jandyWorker;", "modifier": "@Autowired\n  private", "type": "JandyWorker", "declarator": "jandyWorker", "var_name": "jandyWorker"}], "methods": [{"identifier": "begin", "parameters": "(BuildInfo bi)", "modifiers": "@Transactional public", "return": "void", "signature": "void begin(BuildInfo bi)", "full_signature": "@Transactional public void begin(BuildInfo bi)", "class_method_signature": "TravisRestService.begin(BuildInfo bi)", "testcase": false, "constructor": false}, {"identifier": "createProf", "parameters": "(ProfilingInfo profParams)", "modifiers": "@Transactional public", "return": "Map<String, ?>", "signature": "Map<String, ?> createProf(ProfilingInfo profParams)", "full_signature": "@Transactional public Map<String, ?> createProf(ProfilingInfo profParams)", "class_method_signature": "TravisRestService.createProf(ProfilingInfo profParams)", "testcase": false, "constructor": false}, {"identifier": "saveProf", "parameters": "(ProfilingContext profilingContext)", "modifiers": "public", "return": "void", "signature": "void saveProf(ProfilingContext profilingContext)", "full_signature": "public void saveProf(ProfilingContext profilingContext)", "class_method_signature": "TravisRestService.saveProf(ProfilingContext profilingContext)", "testcase": false, "constructor": false}, {"identifier": "updateTreeNodes", "parameters": "(List<TreeNode> treeNodes)", "modifiers": "public", "return": "void", "signature": "void updateTreeNodes(List<TreeNode> treeNodes)", "full_signature": "public void updateTreeNodes(List<TreeNode> treeNodes)", "class_method_signature": "TravisRestService.updateTreeNodes(List<TreeNode> treeNodes)", "testcase": false, "constructor": false}, {"identifier": "finish", "parameters": "(long buildId)", "modifiers": "public", "return": "void", "signature": "void finish(long buildId)", "full_signature": "public void finish(long buildId)", "class_method_signature": "TravisRestService.finish(long buildId)", "testcase": false, "constructor": false}], "file": "jandy-server/src/main/java/io/jandy/service/TravisRestService.java"}, "focal_method": {"identifier": "updateTreeNodes", "parameters": "(List<TreeNode> treeNodes)", "modifiers": "public", "return": "void", "body": "public void updateTreeNodes(List<TreeNode> treeNodes) throws Exception {\n    if (treeNodes.size() == 0)\n      return ;\n\n    Build build = profContextDumpRepository.findOne(treeNodes.get(0).getProfId())\n        .getBuild();\n\n    logger.info(\"update about build id: {}\", build.getId());\n\n    jandyWorker.put(build.getTravisBuildId(), JandyTask.UPDATE, treeNodes);\n  }", "signature": "void updateTreeNodes(List<TreeNode> treeNodes)", "full_signature": "public void updateTreeNodes(List<TreeNode> treeNodes)", "class_method_signature": "TravisRestService.updateTreeNodes(List<TreeNode> treeNodes)", "testcase": false, "constructor": false, "invocations": ["size", "getBuild", "findOne", "getProfId", "get", "info", "getId", "put", "getTravisBuildId"]}, "repository": {"repo_id": 37814227, "url": "https://github.com/jandy-team/jandy", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 12, "size": 5059, "license": "licensed"}}