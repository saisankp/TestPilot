{"test_class": {"identifier": "BuildOutputParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NEWLINE = SystemProperties.getLineSeparator();", "modifier": "private static final", "type": "String", "declarator": "NEWLINE = SystemProperties.getLineSeparator()", "var_name": "NEWLINE"}, {"original_string": "private static final String CWD_PATH = new File(\"\").getAbsolutePath();", "modifier": "private static final", "type": "String", "declarator": "CWD_PATH = new File(\"\").getAbsolutePath()", "var_name": "CWD_PATH"}, {"original_string": "private File sourceFile;", "modifier": "private", "type": "File", "declarator": "sourceFile", "var_name": "sourceFile"}, {"original_string": "private String sourceFilePath;", "modifier": "private", "type": "String", "declarator": "sourceFilePath", "var_name": "sourceFilePath"}, {"original_string": "private BuildOutputParser parser;", "modifier": "private", "type": "BuildOutputParser", "declarator": "parser", "var_name": "parser"}, {"original_string": "private static final String WINDOWS_PATH_DRIVE_LETTER = \"C:\";", "modifier": "private static final", "type": "String", "declarator": "WINDOWS_PATH_DRIVE_LETTER = \"C:\"", "var_name": "WINDOWS_PATH_DRIVE_LETTER"}, {"original_string": "private static final String WINDOWS_PATH_UNDER_UNIX = new File(WINDOWS_PATH_DRIVE_LETTER).getAbsolutePath();", "modifier": "private static final", "type": "String", "declarator": "WINDOWS_PATH_UNDER_UNIX = new File(WINDOWS_PATH_DRIVE_LETTER).getAbsolutePath()", "var_name": "WINDOWS_PATH_UNDER_UNIX"}, {"original_string": "private static final int WINDOWS_PATH_UNIX_PREFIX_LENGTH = WINDOWS_PATH_UNDER_UNIX.length() - WINDOWS_PATH_DRIVE_LETTER.length();", "modifier": "private static final", "type": "int", "declarator": "WINDOWS_PATH_UNIX_PREFIX_LENGTH = WINDOWS_PATH_UNDER_UNIX.length() - WINDOWS_PATH_DRIVE_LETTER.length()", "var_name": "WINDOWS_PATH_UNIX_PREFIX_LENGTH"}], "file": "build-common/testSrc/com/android/tools/idea/gradle/output/parser/BuildOutputParserTest.java"}, "test_case": {"identifier": "dexDuplicateClassException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void dexDuplicateClassException() throws Exception {\n    String output =\n      \":two:dexDebug\\n\" +\n      \"UNEXPECTED TOP-LEVEL EXCEPTION:\\n\" +\n      \"java.lang.IllegalArgumentException: already added: Lcom/example/two/MainActivity;\\n\" +\n      \"\\tat com.android.dx.dex.file.ClassDefsSection.add(ClassDefsSection.java:122)\\n\" +\n      \"\\tat com.android.dx.dex.file.DexFile.add(DexFile.java:161)\\n\" +\n      \"\\tat com.android.dx.command.dexer.Main.processClass(Main.java:685)\\n\" +\n      \"\\tat com.android.dx.command.dexer.Main.processFileBytes(Main.java:634)\\n\" +\n      \"\\tat com.android.dx.command.dexer.Main.access$600(Main.java:78)\\n\" +\n      \"\\tat com.android.dx.command.dexer.Main$1.processFileBytes(Main.java:572)\\n\" +\n      \"\\tat com.android.dx.cf.direct.ClassPathOpener.processArchive(ClassPathOpener.java:284)\\n\" +\n      \"\\tat com.android.dx.cf.direct.ClassPathOpener.processOne(ClassPathOpener.java:166)\\n\" +\n      \"\\tat com.android.dx.cf.direct.ClassPathOpener.process(ClassPathOpener.java:144)\\n\" +\n      \"\\tat com.android.dx.command.dexer.Main.processOne(Main.java:596)\\n\" +\n      \"\\tat com.android.dx.command.dexer.Main.processAllFiles(Main.java:498)\\n\" +\n      \"\\tat com.android.dx.command.dexer.Main.runMonoDex(Main.java:264)\\n\" +\n      \"\\tat com.android.dx.command.dexer.Main.run(Main.java:230)\\n\" +\n      \"\\tat com.android.dx.command.dexer.Main.main(Main.java:199)\\n\" +\n      \"\\tat com.android.dx.command.Main.main(Main.java:103)\\n\" +\n      \"1 error; aborting\\n\" +\n      \" FAILED\\n\" +\n      \"\\n\" +\n      \"FAILURE: Build failed with an exception.\\n\" +\n      \"\\n\" +\n      \"* What went wrong:\\n\" +\n      \"Execution failed for task ':two:dexDebug'.\\n\" +\n      \"> Could not call IncrementalTask.taskAction() on task ':two:dexDebug'\\n\" +\n      \"\\n\" +\n      \"* Try:\\n\" +\n      \"Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\\n\" +\n      \"\\n\" +\n      \"BUILD FAILED\\n\" +\n      \"\\n\" +\n      \"Total time: 9.491 secs\";\n    assertEquals(\"0: Simple::two:dexDebug\\n\" +\n                 \"1: Error:Class com.example.two.MainActivity has already been added to output. Please remove duplicate copies.\\n\" +\n                 \"2: Simple:1 error; aborting\\n\" +\n                 \"3: Error:Execution failed for task ':two:dexDebug'.\\n\" +\n                 \"> Could not call IncrementalTask.taskAction() on task ':two:dexDebug'\\n\" +\n                 \"4: Info:BUILD FAILED\\n\" +\n                 \"5: Info:Total time: 9.491 secs\\n\",\n                 toString(parser.parseGradleOutput(output)));\n  }", "signature": "void dexDuplicateClassException()", "full_signature": "@Test public void dexDuplicateClassException()", "class_method_signature": "BuildOutputParserTest.dexDuplicateClassException()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toString", "parseGradleOutput"]}, "focal_class": {"identifier": "BuildOutputParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ToolOutputParser parser;", "modifier": "private final", "type": "ToolOutputParser", "declarator": "parser", "var_name": "parser"}], "methods": [{"identifier": "BuildOutputParser", "parameters": "(@NotNull Iterable<PatternAwareOutputParser> parsers)", "modifiers": "public", "return": "", "signature": " BuildOutputParser(@NotNull Iterable<PatternAwareOutputParser> parsers)", "full_signature": "public  BuildOutputParser(@NotNull Iterable<PatternAwareOutputParser> parsers)", "class_method_signature": "BuildOutputParser.BuildOutputParser(@NotNull Iterable<PatternAwareOutputParser> parsers)", "testcase": false, "constructor": true}, {"identifier": "parseGradleOutput", "parameters": "(@NotNull String output)", "modifiers": "@NotNull public", "return": "List<Message>", "signature": "List<Message> parseGradleOutput(@NotNull String output)", "full_signature": "@NotNull public List<Message> parseGradleOutput(@NotNull String output)", "class_method_signature": "BuildOutputParser.parseGradleOutput(@NotNull String output)", "testcase": false, "constructor": false}, {"identifier": "parseGradleOutput", "parameters": "(@NotNull String output, boolean ignoreUnrecognizedText)", "modifiers": "@NotNull public", "return": "List<Message>", "signature": "List<Message> parseGradleOutput(@NotNull String output, boolean ignoreUnrecognizedText)", "full_signature": "@NotNull public List<Message> parseGradleOutput(@NotNull String output, boolean ignoreUnrecognizedText)", "class_method_signature": "BuildOutputParser.parseGradleOutput(@NotNull String output, boolean ignoreUnrecognizedText)", "testcase": false, "constructor": false}], "file": "build-common/src/com/android/tools/idea/gradle/output/parser/BuildOutputParser.java"}, "focal_method": {"identifier": "parseGradleOutput", "parameters": "(@NotNull String output)", "modifiers": "@NotNull public", "return": "List<Message>", "body": "@NotNull\n  public List<Message> parseGradleOutput(@NotNull String output) {\n    return parser.parseToolOutput(output);\n  }", "signature": "List<Message> parseGradleOutput(@NotNull String output)", "full_signature": "@NotNull public List<Message> parseGradleOutput(@NotNull String output)", "class_method_signature": "BuildOutputParser.parseGradleOutput(@NotNull String output)", "testcase": false, "constructor": false, "invocations": ["parseToolOutput"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}