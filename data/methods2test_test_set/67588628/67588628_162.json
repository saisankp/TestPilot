{"test_class": {"identifier": "DefaultDocumentTemplateAsyncProducerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Inject\n    private DocumentTemplateAsyncProducer producer;", "modifier": "@Inject\n    private", "type": "DocumentTemplateAsyncProducer", "declarator": "producer", "var_name": "producer"}], "file": "artemis-document/src/test/java/org/jnosql/artemis/document/DefaultDocumentTemplateAsyncProducerTest.java"}, "test_case": {"identifier": "shouldReturn", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturn() {\n        DocumentCollectionManagerAsync manager = Mockito.mock(DocumentCollectionManagerAsync.class);\n        DocumentTemplateAsync documentRepository = producer.get(manager);\n        assertNotNull(documentRepository);\n    }", "signature": "void shouldReturn()", "full_signature": "@Test public void shouldReturn()", "class_method_signature": "DefaultDocumentTemplateAsyncProducerTest.shouldReturn()", "testcase": true, "constructor": false, "invocations": ["mock", "get", "assertNotNull"]}, "focal_class": {"identifier": "DefaultDocumentTemplateAsyncProducer", "superclass": "", "interfaces": "implements DocumentTemplateAsyncProducer", "fields": [{"original_string": "@Inject\n    private DocumentEntityConverter converter;", "modifier": "@Inject\n    private", "type": "DocumentEntityConverter", "declarator": "converter", "var_name": "converter"}, {"original_string": "@Inject\n    private ClassMappings classMappings;", "modifier": "@Inject\n    private", "type": "ClassMappings", "declarator": "classMappings", "var_name": "classMappings"}, {"original_string": "@Inject\n    private Converters converters;", "modifier": "@Inject\n    private", "type": "Converters", "declarator": "converters", "var_name": "converters"}], "methods": [{"identifier": "get", "parameters": "(DocumentCollectionManagerAsync collectionManager)", "modifiers": "@Override public", "return": "DocumentTemplateAsync", "signature": "DocumentTemplateAsync get(DocumentCollectionManagerAsync collectionManager)", "full_signature": "@Override public DocumentTemplateAsync get(DocumentCollectionManagerAsync collectionManager)", "class_method_signature": "DefaultDocumentTemplateAsyncProducer.get(DocumentCollectionManagerAsync collectionManager)", "testcase": false, "constructor": false}], "file": "artemis-document/src/main/java/org/jnosql/artemis/document/DefaultDocumentTemplateAsyncProducer.java"}, "focal_method": {"identifier": "get", "parameters": "(DocumentCollectionManagerAsync collectionManager)", "modifiers": "@Override public", "return": "DocumentTemplateAsync", "body": "@Override\n    public DocumentTemplateAsync get(DocumentCollectionManagerAsync collectionManager) {\n        Objects.requireNonNull(collectionManager, \"collectionManager is required\");\n        return new ProducerAbstractDocumentTemplateAsync(converter, collectionManager, classMappings, converters);\n    }", "signature": "DocumentTemplateAsync get(DocumentCollectionManagerAsync collectionManager)", "full_signature": "@Override public DocumentTemplateAsync get(DocumentCollectionManagerAsync collectionManager)", "class_method_signature": "DefaultDocumentTemplateAsyncProducer.get(DocumentCollectionManagerAsync collectionManager)", "testcase": false, "constructor": false, "invocations": ["requireNonNull"]}, "repository": {"repo_id": 67588628, "url": "https://github.com/eclipse/jnosql-artemis", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 43, "size": 2612, "license": "licensed"}}