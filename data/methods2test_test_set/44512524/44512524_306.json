{"test_class": {"identifier": "RunnerTest", "superclass": "", "interfaces": "", "fields": [], "file": "storm/storm-benchmark/src/test/java/storm/benchmark/tools/RunnerTest.java"}, "test_case": {"identifier": "getBenchmarkFromValidName", "parameters": "(String validName)", "modifiers": "@Test(dataProvider = \"getValidNames\") public", "return": "void", "body": "@Test(dataProvider = \"getValidNames\")\n  public void getBenchmarkFromValidName(String validName) throws Exception {\n    assertTrue(Runner.getApplicationFromName(validName) instanceof IApplication);\n  }", "signature": "void getBenchmarkFromValidName(String validName)", "full_signature": "@Test(dataProvider = \"getValidNames\") public void getBenchmarkFromValidName(String validName)", "class_method_signature": "RunnerTest.getBenchmarkFromValidName(String validName)", "testcase": true, "constructor": false, "invocations": ["assertTrue", "getApplicationFromName"]}, "focal_class": {"identifier": "Runner", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(Runner.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(Runner.class)", "var_name": "LOG"}, {"original_string": "private static Config config = new Config();", "modifier": "private static", "type": "Config", "declarator": "config = new Config()", "var_name": "config"}, {"original_string": "private static StormTopology topology;", "modifier": "private static", "type": "StormTopology", "declarator": "topology", "var_name": "topology"}], "methods": [{"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "Runner.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(String name)", "modifiers": "public static", "return": "void", "signature": "void run(String name)", "full_signature": "public static void run(String name)", "class_method_signature": "Runner.run(String name)", "testcase": false, "constructor": false}, {"identifier": "runBenchmark", "parameters": "(IBenchmark benchmark)", "modifiers": "public static", "return": "void", "signature": "void runBenchmark(IBenchmark benchmark)", "full_signature": "public static void runBenchmark(IBenchmark benchmark)", "class_method_signature": "Runner.runBenchmark(IBenchmark benchmark)", "testcase": false, "constructor": false}, {"identifier": "runProducer", "parameters": "(IProducer producer)", "modifiers": "public static", "return": "void", "signature": "void runProducer(IProducer producer)", "full_signature": "public static void runProducer(IProducer producer)", "class_method_signature": "Runner.runProducer(IProducer producer)", "testcase": false, "constructor": false}, {"identifier": "getApplicationFromName", "parameters": "(String name)", "modifiers": "public static", "return": "IApplication", "signature": "IApplication getApplicationFromName(String name)", "full_signature": "public static IApplication getApplicationFromName(String name)", "class_method_signature": "Runner.getApplicationFromName(String name)", "testcase": false, "constructor": false}, {"identifier": "runApplication", "parameters": "(IApplication app)", "modifiers": "private static", "return": "void", "signature": "void runApplication(IApplication app)", "full_signature": "private static void runApplication(IApplication app)", "class_method_signature": "Runner.runApplication(IApplication app)", "testcase": false, "constructor": false}, {"identifier": "isMetricsEnabled", "parameters": "()", "modifiers": "private static", "return": "boolean", "signature": "boolean isMetricsEnabled()", "full_signature": "private static boolean isMetricsEnabled()", "class_method_signature": "Runner.isMetricsEnabled()", "testcase": false, "constructor": false}], "file": "storm/storm-benchmark/src/main/java/storm/benchmark/tools/Runner.java"}, "focal_method": {"identifier": "getApplicationFromName", "parameters": "(String name)", "modifiers": "public static", "return": "IApplication", "body": "public static IApplication getApplicationFromName(String name)\n          throws ClassNotFoundException, IllegalAccessException, InstantiationException {\n    return (IApplication) Class.forName(name).newInstance();\n  }", "signature": "IApplication getApplicationFromName(String name)", "full_signature": "public static IApplication getApplicationFromName(String name)", "class_method_signature": "Runner.getApplicationFromName(String name)", "testcase": false, "constructor": false, "invocations": ["newInstance", "forName"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}