{"test_class": {"identifier": "MessageBusResponseStrategyTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [{"original_string": "private Object replyChainId = new Object();", "modifier": "private", "type": "Object", "declarator": "replyChainId = new Object()", "var_name": "replyChainId"}, {"original_string": "private IMessageBusHandler messageBusHandlerMock;", "modifier": "private", "type": "IMessageBusHandler", "declarator": "messageBusHandlerMock", "var_name": "messageBusHandlerMock"}, {"original_string": "private IResponseStrategy nullResponseStrategyMock;", "modifier": "private", "type": "IResponseStrategy", "declarator": "nullResponseStrategyMock", "var_name": "nullResponseStrategyMock"}, {"original_string": "private IObject environment;", "modifier": "private", "type": "IObject", "declarator": "environment", "var_name": "environment"}, {"original_string": "private IObject context;", "modifier": "private", "type": "IObject", "declarator": "context", "var_name": "context"}, {"original_string": "private IObject response;", "modifier": "private", "type": "IObject", "declarator": "response", "var_name": "response"}, {"original_string": "private MessageBusResponseStrategy strategy;", "modifier": "private", "type": "MessageBusResponseStrategy", "declarator": "strategy", "var_name": "strategy"}], "file": "CoreFeatures/MessageBus/MessageBusHandler/src/test/java/info/smart_tools/smartactors/message_bus/message_bus_handler/MessageBusResponseStrategyTest.java"}, "test_case": {"identifier": "Should_sendResponseAndSetResponseStrategyToNullImplementation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_sendResponseAndSetResponseStrategyToNullImplementation()\n            throws Exception {\n        strategy.sendResponse(environment);\n\n        ArgumentCaptor<IObject> responseCaptor = ArgumentCaptor.forClass(IObject.class);\n        verify(messageBusHandlerMock).handle(responseCaptor.capture(), same(replyChainId));\n\n        assertEquals(Boolean.TRUE, responseCaptor.getValue().getValue(\n                IOC.resolve(Keys.getOrAdd(\"info.smart_tools.smartactors.iobject.ifield_name.IFieldName\"), \"itIsAResponse\")\n        ));\n\n        assertSame(\n                nullResponseStrategyMock,\n                context.getValue(IOC.resolve(Keys.getOrAdd(\"info.smart_tools.smartactors.iobject.ifield_name.IFieldName\"), \"responseStrategy\")));\n    }", "signature": "void Should_sendResponseAndSetResponseStrategyToNullImplementation()", "full_signature": "@Test public void Should_sendResponseAndSetResponseStrategyToNullImplementation()", "class_method_signature": "MessageBusResponseStrategyTest.Should_sendResponseAndSetResponseStrategyToNullImplementation()", "testcase": true, "constructor": false, "invocations": ["sendResponse", "forClass", "handle", "verify", "capture", "same", "assertEquals", "getValue", "getValue", "resolve", "getOrAdd", "assertSame", "getValue", "resolve", "getOrAdd"]}, "focal_class": {"identifier": "MessageBusResponseStrategy", "superclass": "", "interfaces": "implements IResponseStrategy", "fields": [{"original_string": "private final IFieldName contextFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "contextFieldName", "var_name": "contextFieldName"}, {"original_string": "private final IFieldName responseFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "responseFieldName", "var_name": "responseFieldName"}, {"original_string": "private final IFieldName replyChainFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "replyChainFieldName", "var_name": "replyChainFieldName"}, {"original_string": "private final IFieldName responseStrategyFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "responseStrategyFieldName", "var_name": "responseStrategyFieldName"}, {"original_string": "private final IResponseStrategy nullResponseStrategy;", "modifier": "private final", "type": "IResponseStrategy", "declarator": "nullResponseStrategy", "var_name": "nullResponseStrategy"}], "methods": [{"identifier": "MessageBusResponseStrategy", "parameters": "()", "modifiers": "public", "return": "", "signature": " MessageBusResponseStrategy()", "full_signature": "public  MessageBusResponseStrategy()", "class_method_signature": "MessageBusResponseStrategy.MessageBusResponseStrategy()", "testcase": false, "constructor": true}, {"identifier": "sendResponse", "parameters": "(IObject environment)", "modifiers": "@Override public", "return": "void", "signature": "void sendResponse(IObject environment)", "full_signature": "@Override public void sendResponse(IObject environment)", "class_method_signature": "MessageBusResponseStrategy.sendResponse(IObject environment)", "testcase": false, "constructor": false}], "file": "CoreFeatures/MessageBus/MessageBusHandler/src/main/java/info/smart_tools/smartactors/message_bus/message_bus_handler/MessageBusResponseStrategy.java"}, "focal_method": {"identifier": "sendResponse", "parameters": "(IObject environment)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void sendResponse(IObject environment) throws ResponseException {\n        try {\n            IObject context = (IObject) environment.getValue(contextFieldName);\n            IObject response = (IObject) environment.getValue(responseFieldName);\n            Object replyChainId = context.getValue(replyChainFieldName);\n\n            String sResponse = response.serialize();\n            response = IOC.resolve(Keys.getOrAdd(\"info.smart_tools.smartactors.iobject.iobject.IObject\"), sResponse);\n\n            MessageBus.send(response, replyChainId);\n\n            context.setValue(responseStrategyFieldName, nullResponseStrategy);\n        } catch (ReadValueException | ChangeValueException | InvalidArgumentException | SendingMessageException | SerializeException\n                | ResolutionException e) {\n            throw new ResponseException(e);\n        }\n    }", "signature": "void sendResponse(IObject environment)", "full_signature": "@Override public void sendResponse(IObject environment)", "class_method_signature": "MessageBusResponseStrategy.sendResponse(IObject environment)", "testcase": false, "constructor": false, "invocations": ["getValue", "getValue", "getValue", "serialize", "resolve", "getOrAdd", "send", "setValue"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}