{"test_class": {"identifier": "TestSigner", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "xenon-common/src/test/java/com/vmware/xenon/common/jwt/TestSigner.java"}, "test_case": {"identifier": "testEmptyClaims", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEmptyClaims() throws Exception {\n        Signer signer = new Signer(\"secret\".getBytes());\n        Rfc7519Claims claims = new Rfc7519Claims();\n        String jwt = signer.sign(claims);\n        assertEquals(\n                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.e30.DMCAvRgzrcf5w0Z879BsqzcrnDFKBY_GN6c3qKOUFtQ\",\n                jwt);\n    }", "signature": "void testEmptyClaims()", "full_signature": "@Test public void testEmptyClaims()", "class_method_signature": "TestSigner.testEmptyClaims()", "testcase": true, "constructor": false, "invocations": ["getBytes", "sign", "assertEquals"]}, "focal_class": {"identifier": "Signer", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected Base64.Encoder encoder = Base64.getUrlEncoder().withoutPadding();", "modifier": "protected", "type": "Base64.Encoder", "declarator": "encoder = Base64.getUrlEncoder().withoutPadding()", "var_name": "encoder"}, {"original_string": "private byte[] secret;", "modifier": "private", "type": "byte[]", "declarator": "secret", "var_name": "secret"}, {"original_string": "protected Gson gson;", "modifier": "protected", "type": "Gson", "declarator": "gson", "var_name": "gson"}], "methods": [{"identifier": "Signer", "parameters": "(byte[] secret)", "modifiers": "public", "return": "", "signature": " Signer(byte[] secret)", "full_signature": "public  Signer(byte[] secret)", "class_method_signature": "Signer.Signer(byte[] secret)", "testcase": false, "constructor": true}, {"identifier": "Signer", "parameters": "(byte[] secret, Gson gson)", "modifiers": "public", "return": "", "signature": " Signer(byte[] secret, Gson gson)", "full_signature": "public  Signer(byte[] secret, Gson gson)", "class_method_signature": "Signer.Signer(byte[] secret, Gson gson)", "testcase": false, "constructor": true}, {"identifier": "sign", "parameters": "(T claims)", "modifiers": "public", "return": "String", "signature": "String sign(T claims)", "full_signature": "public String sign(T claims)", "class_method_signature": "Signer.sign(T claims)", "testcase": false, "constructor": false}, {"identifier": "sign", "parameters": "(T claims, Algorithm algorithm)", "modifiers": "public", "return": "String", "signature": "String sign(T claims, Algorithm algorithm)", "full_signature": "public String sign(T claims, Algorithm algorithm)", "class_method_signature": "Signer.sign(T claims, Algorithm algorithm)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(byte[] payload)", "modifiers": "protected", "return": "String", "signature": "String encode(byte[] payload)", "full_signature": "protected String encode(byte[] payload)", "class_method_signature": "Signer.encode(byte[] payload)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(Object object)", "modifiers": "protected", "return": "String", "signature": "String encode(Object object)", "full_signature": "protected String encode(Object object)", "class_method_signature": "Signer.encode(Object object)", "testcase": false, "constructor": false}], "file": "xenon-common/src/main/java/com/vmware/xenon/common/jwt/Signer.java"}, "focal_method": {"identifier": "sign", "parameters": "(T claims)", "modifiers": "public", "return": "String", "body": "public <T extends Rfc7519Claims> String sign(T claims) throws GeneralSecurityException {\n        return sign(claims, null);\n    }", "signature": "String sign(T claims)", "full_signature": "public String sign(T claims)", "class_method_signature": "Signer.sign(T claims)", "testcase": false, "constructor": false, "invocations": ["sign"]}, "repository": {"repo_id": 45276846, "url": "https://github.com/vmware-archive/xenon", "language": "Java", "is_fork": false, "fork_count": 97, "stargazer_count": 226, "size": 52010, "license": "licensed"}}