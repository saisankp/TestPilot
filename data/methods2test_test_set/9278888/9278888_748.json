{"test_class": {"identifier": "B3PropagationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "String traceIdHigh = \"0000000000000009\";", "modifier": "", "type": "String", "declarator": "traceIdHigh = \"0000000000000009\"", "var_name": "traceIdHigh"}, {"original_string": "String traceId = \"0000000000000001\";", "modifier": "", "type": "String", "declarator": "traceId = \"0000000000000001\"", "var_name": "traceId"}, {"original_string": "String parentId = \"0000000000000002\";", "modifier": "", "type": "String", "declarator": "parentId = \"0000000000000002\"", "var_name": "parentId"}, {"original_string": "String spanId = \"0000000000000003\";", "modifier": "", "type": "String", "declarator": "spanId = \"0000000000000003\"", "var_name": "spanId"}, {"original_string": "TraceContext context = TraceContext.newBuilder().traceId(1).parentId(2).spanId(3).build();", "modifier": "", "type": "TraceContext", "declarator": "context = TraceContext.newBuilder().traceId(1).parentId(2).spanId(3).build()", "var_name": "context"}, {"original_string": "Propagation<String> propagation = B3Propagation.B3_STRING;", "modifier": "", "type": "Propagation<String>", "declarator": "propagation = B3Propagation.B3_STRING", "var_name": "propagation"}, {"original_string": "Platform platform = mock(Platform.class);", "modifier": "", "type": "Platform", "declarator": "platform = mock(Platform.class)", "var_name": "platform"}], "file": "brave/src/test/java/brave/propagation/B3PropagationTest.java"}, "test_case": {"identifier": "injectKindFormats_cantBeBothSingle", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void injectKindFormats_cantBeBothSingle() {\n    assertThatThrownBy(() -> B3Propagation.newFactoryBuilder()\n      .injectFormats(Span.Kind.CLIENT, Format.SINGLE, Format.SINGLE_NO_PARENT))\n      .isInstanceOf(IllegalArgumentException.class);\n  }", "signature": "void injectKindFormats_cantBeBothSingle()", "full_signature": "@Test public void injectKindFormats_cantBeBothSingle()", "class_method_signature": "B3PropagationTest.injectKindFormats_cantBeBothSingle()", "testcase": true, "constructor": false, "invocations": ["isInstanceOf", "assertThatThrownBy", "injectFormats", "newFactoryBuilder"]}, "focal_class": {"identifier": "B3Propagation", "superclass": "", "interfaces": "implements Propagation<K>", "fields": [{"original_string": "public static final Propagation.Factory FACTORY = new B3Propagation.Factory(newFactoryBuilder());", "modifier": "public static final", "type": "Propagation.Factory", "declarator": "FACTORY = new B3Propagation.Factory(newFactoryBuilder())", "var_name": "FACTORY"}, {"original_string": "static final Propagation<String> INSTANCE = FACTORY.get();", "modifier": "static final", "type": "Propagation<String>", "declarator": "INSTANCE = FACTORY.get()", "var_name": "INSTANCE"}, {"original_string": "static final String B3 = \"b3\";", "modifier": "static final", "type": "String", "declarator": "B3 = \"b3\"", "var_name": "B3"}, {"original_string": "static final String TRACE_ID = \"X-B3-TraceId\";", "modifier": "static final", "type": "String", "declarator": "TRACE_ID = \"X-B3-TraceId\"", "var_name": "TRACE_ID"}, {"original_string": "static final String SPAN_ID = \"X-B3-SpanId\";", "modifier": "static final", "type": "String", "declarator": "SPAN_ID = \"X-B3-SpanId\"", "var_name": "SPAN_ID"}, {"original_string": "static final String PARENT_SPAN_ID = \"X-B3-ParentSpanId\";", "modifier": "static final", "type": "String", "declarator": "PARENT_SPAN_ID = \"X-B3-ParentSpanId\"", "var_name": "PARENT_SPAN_ID"}, {"original_string": "static final String SAMPLED = \"X-B3-Sampled\";", "modifier": "static final", "type": "String", "declarator": "SAMPLED = \"X-B3-Sampled\"", "var_name": "SAMPLED"}, {"original_string": "static final String SAMPLED_MALFORMED =\n      \"Invalid input: expected 0 or 1 for \" + SAMPLED + \", but found '{0}'\";", "modifier": "static final", "type": "String", "declarator": "SAMPLED_MALFORMED =\n      \"Invalid input: expected 0 or 1 for \" + SAMPLED + \", but found '{0}'\"", "var_name": "SAMPLED_MALFORMED"}, {"original_string": "static final String FLAGS = \"X-B3-Flags\";", "modifier": "static final", "type": "String", "declarator": "FLAGS = \"X-B3-Flags\"", "var_name": "FLAGS"}], "methods": [{"identifier": "get", "parameters": "()", "modifiers": "public static", "return": "Propagation<String>", "signature": "Propagation<String> get()", "full_signature": "public static Propagation<String> get()", "class_method_signature": "B3Propagation.get()", "testcase": false, "constructor": false}, {"identifier": "newFactoryBuilder", "parameters": "()", "modifiers": "public static", "return": "FactoryBuilder", "signature": "FactoryBuilder newFactoryBuilder()", "full_signature": "public static FactoryBuilder newFactoryBuilder()", "class_method_signature": "B3Propagation.newFactoryBuilder()", "testcase": false, "constructor": false}, {"identifier": "B3Propagation", "parameters": "()", "modifiers": "", "return": "", "signature": " B3Propagation()", "full_signature": "  B3Propagation()", "class_method_signature": "B3Propagation.B3Propagation()", "testcase": false, "constructor": true}], "file": "brave/src/main/java/brave/propagation/B3Propagation.java"}, "focal_method": {"identifier": "newFactoryBuilder", "parameters": "()", "modifiers": "public static", "return": "FactoryBuilder", "body": "public static FactoryBuilder newFactoryBuilder() {\n    return new FactoryBuilder();\n  }", "signature": "FactoryBuilder newFactoryBuilder()", "full_signature": "public static FactoryBuilder newFactoryBuilder()", "class_method_signature": "B3Propagation.newFactoryBuilder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}