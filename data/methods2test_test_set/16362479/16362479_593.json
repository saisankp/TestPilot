{"test_class": {"identifier": "DataTreeNotificationListenerRegistrationActorTest", "superclass": "extends AbstractActorTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ListenerRegistration<?> mockListenerReg;", "modifier": "@Mock\n    private", "type": "ListenerRegistration<?>", "declarator": "mockListenerReg", "var_name": "mockListenerReg"}, {"original_string": "@Mock\n    private Runnable mockOnClose;", "modifier": "@Mock\n    private", "type": "Runnable", "declarator": "mockOnClose", "var_name": "mockOnClose"}, {"original_string": "private TestKit kit;", "modifier": "private", "type": "TestKit", "declarator": "kit", "var_name": "kit"}], "file": "opendaylight/md-sal/sal-distributed-datastore/src/test/java/org/opendaylight/controller/cluster/datastore/actors/DataTreeNotificationListenerRegistrationActorTest.java"}, "test_case": {"identifier": "testOnReceiveSetRegistrationAfterPriorClose", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnReceiveSetRegistrationAfterPriorClose() {\n        DataTreeNotificationListenerRegistrationActor.killDelay = 1000;\n        final ListenerRegistration<?> mockListenerReg2 = mock(ListenerRegistration.class);\n        final Runnable mockOnClose2 = mock(Runnable.class);\n\n        final ActorRef subject = getSystem().actorOf(DataTreeNotificationListenerRegistrationActor.props(),\n            \"testOnReceiveSetRegistrationAfterPriorClose\");\n        kit.watch(subject);\n\n        subject.tell(new DataTreeNotificationListenerRegistrationActor.SetRegistration(mockListenerReg,\n            mockOnClose), ActorRef.noSender());\n        subject.tell(CloseDataTreeNotificationListenerRegistration.getInstance(), ActorRef.noSender());\n        subject.tell(new DataTreeNotificationListenerRegistrationActor.SetRegistration(mockListenerReg2,\n            mockOnClose2), ActorRef.noSender());\n\n        verify(mockListenerReg, timeout(5000)).close();\n        verify(mockOnClose, timeout(5000)).run();\n        verify(mockListenerReg2, timeout(5000)).close();\n        verify(mockOnClose2, timeout(5000)).run();\n\n        kit.expectTerminated(Duration.ofSeconds(5), subject);\n    }", "signature": "void testOnReceiveSetRegistrationAfterPriorClose()", "full_signature": "@Test public void testOnReceiveSetRegistrationAfterPriorClose()", "class_method_signature": "DataTreeNotificationListenerRegistrationActorTest.testOnReceiveSetRegistrationAfterPriorClose()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "actorOf", "getSystem", "props", "watch", "tell", "noSender", "tell", "getInstance", "noSender", "tell", "noSender", "close", "verify", "timeout", "run", "verify", "timeout", "close", "verify", "timeout", "run", "verify", "timeout", "expectTerminated", "ofSeconds"]}, "focal_class": {"identifier": "DataTreeNotificationListenerRegistrationActor", "superclass": "extends AbstractUntypedActor", "interfaces": "", "fields": [{"original_string": "@VisibleForTesting\n    static long killDelay = TimeUnit.MILLISECONDS.convert(5, TimeUnit.SECONDS);", "modifier": "@VisibleForTesting\n    static", "type": "long", "declarator": "killDelay = TimeUnit.MILLISECONDS.convert(5, TimeUnit.SECONDS)", "var_name": "killDelay"}, {"original_string": "private ListenerRegistration<?> registration;", "modifier": "private", "type": "ListenerRegistration<?>", "declarator": "registration", "var_name": "registration"}, {"original_string": "private Runnable onClose;", "modifier": "private", "type": "Runnable", "declarator": "onClose", "var_name": "onClose"}, {"original_string": "private boolean closed;", "modifier": "private", "type": "boolean", "declarator": "closed", "var_name": "closed"}, {"original_string": "private Cancellable killSchedule;", "modifier": "private", "type": "Cancellable", "declarator": "killSchedule", "var_name": "killSchedule"}], "methods": [{"identifier": "handleReceive", "parameters": "(final Object message)", "modifiers": "@Override protected", "return": "void", "signature": "void handleReceive(final Object message)", "full_signature": "@Override protected void handleReceive(final Object message)", "class_method_signature": "DataTreeNotificationListenerRegistrationActor.handleReceive(final Object message)", "testcase": false, "constructor": false}, {"identifier": "closeListenerRegistration", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void closeListenerRegistration()", "full_signature": "private void closeListenerRegistration()", "class_method_signature": "DataTreeNotificationListenerRegistrationActor.closeListenerRegistration()", "testcase": false, "constructor": false}, {"identifier": "props", "parameters": "()", "modifiers": "public static", "return": "Props", "signature": "Props props()", "full_signature": "public static Props props()", "class_method_signature": "DataTreeNotificationListenerRegistrationActor.props()", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/actors/DataTreeNotificationListenerRegistrationActor.java"}, "focal_method": {"identifier": "props", "parameters": "()", "modifiers": "public static", "return": "Props", "body": "public static Props props() {\n        return Props.create(DataTreeNotificationListenerRegistrationActor.class);\n    }", "signature": "Props props()", "full_signature": "public static Props props()", "class_method_signature": "DataTreeNotificationListenerRegistrationActor.props()", "testcase": false, "constructor": false, "invocations": ["create"]}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}