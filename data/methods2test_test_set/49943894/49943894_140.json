{"test_class": {"identifier": "ConnectedAgentAttacheTest", "superclass": "", "interfaces": "", "fields": [], "file": "engine/orchestration/src/test/java/com/cloud/agent/manager/ConnectedAgentAttacheTest.java"}, "test_case": {"identifier": "testEqualsFalseNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEqualsFalseNull() throws Exception {\n\n        Link link = mock(Link.class);\n\n        ConnectedAgentAttache agentAttache1 = new ConnectedAgentAttache(null, 0, null, link, false);\n\n        assertFalse(agentAttache1.equals(null));\n    }", "signature": "void testEqualsFalseNull()", "full_signature": "@Test public void testEqualsFalseNull()", "class_method_signature": "ConnectedAgentAttacheTest.testEqualsFalseNull()", "testcase": true, "constructor": false, "invocations": ["mock", "assertFalse", "equals"]}, "focal_class": {"identifier": "ConnectedAgentAttache", "superclass": "extends AgentAttache", "interfaces": "", "fields": [{"original_string": "private static final Logger s_logger = LoggerFactory.getLogger(ConnectedAgentAttache.class);", "modifier": "private static final", "type": "Logger", "declarator": "s_logger = LoggerFactory.getLogger(ConnectedAgentAttache.class)", "var_name": "s_logger"}, {"original_string": "protected Link _link;", "modifier": "protected", "type": "Link", "declarator": "_link", "var_name": "_link"}], "methods": [{"identifier": "ConnectedAgentAttache", "parameters": "(final AgentManagerImpl agentMgr, final long id, final String name, final Link link, final boolean maintenance)", "modifiers": "public", "return": "", "signature": " ConnectedAgentAttache(final AgentManagerImpl agentMgr, final long id, final String name, final Link link, final boolean maintenance)", "full_signature": "public  ConnectedAgentAttache(final AgentManagerImpl agentMgr, final long id, final String name, final Link link, final boolean maintenance)", "class_method_signature": "ConnectedAgentAttache.ConnectedAgentAttache(final AgentManagerImpl agentMgr, final long id, final String name, final Link link, final boolean maintenance)", "testcase": false, "constructor": true}, {"identifier": "send", "parameters": "(final Request req)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void send(final Request req)", "full_signature": "@Override public synchronized void send(final Request req)", "class_method_signature": "ConnectedAgentAttache.send(final Request req)", "testcase": false, "constructor": false}, {"identifier": "isClosed", "parameters": "()", "modifiers": "@Override public synchronized", "return": "boolean", "signature": "boolean isClosed()", "full_signature": "@Override public synchronized boolean isClosed()", "class_method_signature": "ConnectedAgentAttache.isClosed()", "testcase": false, "constructor": false}, {"identifier": "disconnect", "parameters": "(final Status state)", "modifiers": "@Override public", "return": "void", "signature": "void disconnect(final Status state)", "full_signature": "@Override public void disconnect(final Status state)", "class_method_signature": "ConnectedAgentAttache.disconnect(final Status state)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ConnectedAgentAttache.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "ConnectedAgentAttache.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "finalize", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void finalize()", "full_signature": "@Override protected void finalize()", "class_method_signature": "ConnectedAgentAttache.finalize()", "testcase": false, "constructor": false}], "file": "engine/orchestration/src/main/java/com/cloud/agent/manager/ConnectedAgentAttache.java"}, "focal_method": {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(final Object obj) {\n        // Return false straight away.\n        if (obj == null) {\n            return false;\n        }\n        // No need to handle a ClassCastException. If the classes are different, then equals can return false straight ahead.\n        if (this.getClass() != obj.getClass()) {\n            return false;\n        }\n        // This should not be part of the equals() method, but I'm keeping it because it is expected behaviour based\n        // on the previous implementation. The link attribute of the other object should be checked here as well\n        // to verify if it's not null whilst the this is null.\n        if (_link == null) {\n            return false;\n        }\n        ConnectedAgentAttache that = (ConnectedAgentAttache)obj;\n        return super.equals(obj) && _link == that._link;\n    }", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "ConnectedAgentAttache.equals(final Object obj)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "equals"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}