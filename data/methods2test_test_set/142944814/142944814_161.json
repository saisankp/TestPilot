{"test_class": {"identifier": "FilepathUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/util/src/test/java/hera/util/FilepathUtilsTest.java"}, "test_case": {"identifier": "testGetCanonicalFragments", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetCanonicalFragments() {\n    final Object[][] testParameters =\n        new Object[][] {{\"/Users/tester\", new String[] {\"Users\", \"tester\"}},\n            {\"/Users/admin/systems\", new String[] {\"Users\", \"admin\", \"systems\"}},\n            {\"./tests/./subtest1\", new String[] {\"tests\", \"subtest1\"}},\n            {\"././tests/../subtest2\", new String[] {\"subtest2\"}}};\n\n    for (final Object[] testParameter : testParameters) {\n      String[] expected = (String[]) testParameter[1];\n      String path = (String) testParameter[0];\n\n      for (int i = 0; i < expected.length; ++i) {\n        assertEquals(expected[i], FilepathUtils.getCanonicalFragments(path)[i]);\n      }\n    }\n  }", "signature": "void testGetCanonicalFragments()", "full_signature": "@Test public void testGetCanonicalFragments()", "class_method_signature": "FilepathUtilsTest.testGetCanonicalFragments()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getCanonicalFragments"]}, "focal_class": {"identifier": "FilepathUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final char DIRECTORY_SEPARATOR_CHAR = '/';", "modifier": "private static final", "type": "char", "declarator": "DIRECTORY_SEPARATOR_CHAR = '/'", "var_name": "DIRECTORY_SEPARATOR_CHAR"}, {"original_string": "private static final String DIRECTORY_SEPARATOR = \"\" + DIRECTORY_SEPARATOR_CHAR;", "modifier": "private static final", "type": "String", "declarator": "DIRECTORY_SEPARATOR = \"\" + DIRECTORY_SEPARATOR_CHAR", "var_name": "DIRECTORY_SEPARATOR"}, {"original_string": "private static final String CURRENT_DIR = \".\";", "modifier": "private static final", "type": "String", "declarator": "CURRENT_DIR = \".\"", "var_name": "CURRENT_DIR"}, {"original_string": "private static final String PARENT_DIR = \"..\";", "modifier": "private static final", "type": "String", "declarator": "PARENT_DIR = \"..\"", "var_name": "PARENT_DIR"}], "methods": [{"identifier": "getCanonicalFragments", "parameters": "(final String path)", "modifiers": "public static", "return": "String[]", "signature": "String[] getCanonicalFragments(final String path)", "full_signature": "public static String[] getCanonicalFragments(final String path)", "class_method_signature": "FilepathUtils.getCanonicalFragments(final String path)", "testcase": false, "constructor": false}, {"identifier": "getCanonicalForm", "parameters": "(final String path)", "modifiers": "public static", "return": "String", "signature": "String getCanonicalForm(final String path)", "full_signature": "public static String getCanonicalForm(final String path)", "class_method_signature": "FilepathUtils.getCanonicalForm(final String path)", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(final String path)", "modifiers": "public static", "return": "String[]", "signature": "String[] split(final String path)", "full_signature": "public static String[] split(final String path)", "class_method_signature": "FilepathUtils.split(final String path)", "testcase": false, "constructor": false}, {"identifier": "getParentPath", "parameters": "(final String path)", "modifiers": "public static", "return": "String", "signature": "String getParentPath(final String path)", "full_signature": "public static String getParentPath(final String path)", "class_method_signature": "FilepathUtils.getParentPath(final String path)", "testcase": false, "constructor": false}, {"identifier": "getFilename", "parameters": "(final String path)", "modifiers": "public static", "return": "String", "signature": "String getFilename(final String path)", "full_signature": "public static String getFilename(final String path)", "class_method_signature": "FilepathUtils.getFilename(final String path)", "testcase": false, "constructor": false}, {"identifier": "concat", "parameters": "(final String... fragments)", "modifiers": "public static", "return": "String", "signature": "String concat(final String... fragments)", "full_signature": "public static String concat(final String... fragments)", "class_method_signature": "FilepathUtils.concat(final String... fragments)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(final String... fragments)", "modifiers": "public static", "return": "String", "signature": "String append(final String... fragments)", "full_signature": "public static String append(final String... fragments)", "class_method_signature": "FilepathUtils.append(final String... fragments)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(final String[] fragments, final int start, final int end)", "modifiers": "public static", "return": "String", "signature": "String append(final String[] fragments, final int start, final int end)", "full_signature": "public static String append(final String[] fragments, final int start, final int end)", "class_method_signature": "FilepathUtils.append(final String[] fragments, final int start, final int end)", "testcase": false, "constructor": false}], "file": "core/util/src/main/java/hera/util/FilepathUtils.java"}, "focal_method": {"identifier": "getCanonicalFragments", "parameters": "(final String path)", "modifiers": "public static", "return": "String[]", "body": "public static String[] getCanonicalFragments(final String path) {\n    final String safe = path.replace(File.separatorChar, DIRECTORY_SEPARATOR_CHAR);\n\n    final Stack<String> stack = new Stack<String>();\n\n    for (final String fragment : safe.split(DIRECTORY_SEPARATOR)) {\n      if (isEmpty(fragment)) {\n        continue;\n      } else if (CURRENT_DIR.equals(fragment)) {\n        continue;\n      } else if (PARENT_DIR.equals(fragment)) {\n        if (stack.isEmpty()) {\n          throw new IllegalArgumentException();\n        }\n        stack.pop();\n      } else {\n        stack.push(fragment);\n      }\n    }\n\n    return stack.toArray(new String[stack.size()]);\n  }", "signature": "String[] getCanonicalFragments(final String path)", "full_signature": "public static String[] getCanonicalFragments(final String path)", "class_method_signature": "FilepathUtils.getCanonicalFragments(final String path)", "testcase": false, "constructor": false, "invocations": ["replace", "split", "isEmpty", "equals", "equals", "isEmpty", "pop", "push", "toArray", "size"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}