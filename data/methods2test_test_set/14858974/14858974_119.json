{"test_class": {"identifier": "OrganizationResourceTest", "superclass": "extends ResourceTest", "interfaces": "", "fields": [{"original_string": "private RepositoryHandler repositoryHandler;", "modifier": "private", "type": "RepositoryHandler", "declarator": "repositoryHandler", "var_name": "repositoryHandler"}], "file": "server/src/test/java/org/axway/grapes/server/webapp/resources/OrganizationResourceTest.java"}, "test_case": {"identifier": "getAnOrganization", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getAnOrganization(){\n        final DbOrganization dbOrganization= new DbOrganization();\n        dbOrganization.setName(\"organization1\");\n        dbOrganization.getCorporateGroupIdPrefixes().add(\"org.test\");\n        when(repositoryHandler.getOrganization(dbOrganization.getName())).thenReturn(dbOrganization);\n\n        WebResource resource = client().resource(\"/\" + ServerAPI.ORGANIZATION_RESOURCE + \"/\" + dbOrganization.getName());\n        ClientResponse response = resource.accept(MediaType.APPLICATION_JSON).get(ClientResponse.class);\n        assertNotNull(response);\n        assertEquals(HttpStatus.OK_200, response.getStatus());\n\n        final Organization organization = response.getEntity(Organization.class);\n        assertNotNull(organization);\n        assertEquals(dbOrganization.getName(), organization.getName());\n        assertEquals(1, organization.getCorporateGroupIdPrefixes().size());\n        assertEquals(dbOrganization.getCorporateGroupIdPrefixes().get(0), organization.getCorporateGroupIdPrefixes().get(0));\n    }", "signature": "void getAnOrganization()", "full_signature": "@Test public void getAnOrganization()", "class_method_signature": "OrganizationResourceTest.getAnOrganization()", "testcase": true, "constructor": false, "invocations": ["setName", "add", "getCorporateGroupIdPrefixes", "thenReturn", "when", "getOrganization", "getName", "resource", "client", "getName", "get", "accept", "assertNotNull", "assertEquals", "getStatus", "getEntity", "assertNotNull", "assertEquals", "getName", "getName", "assertEquals", "size", "getCorporateGroupIdPrefixes", "assertEquals", "get", "getCorporateGroupIdPrefixes", "get", "getCorporateGroupIdPrefixes"]}, "focal_class": {"identifier": "OrganizationResource", "superclass": "extends AbstractResource", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(OrganizationResource.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(OrganizationResource.class)", "var_name": "LOG"}], "methods": [{"identifier": "OrganizationResource", "parameters": "(final RepositoryHandler repositoryHandler, final GrapesServerConfig configuration)", "modifiers": "public", "return": "", "signature": " OrganizationResource(final RepositoryHandler repositoryHandler, final GrapesServerConfig configuration)", "full_signature": "public  OrganizationResource(final RepositoryHandler repositoryHandler, final GrapesServerConfig configuration)", "class_method_signature": "OrganizationResource.OrganizationResource(final RepositoryHandler repositoryHandler, final GrapesServerConfig configuration)", "testcase": false, "constructor": true}, {"identifier": "postOrganization", "parameters": "(@Auth final DbCredential credential, final Organization organization)", "modifiers": "@POST public", "return": "Response", "signature": "Response postOrganization(@Auth final DbCredential credential, final Organization organization)", "full_signature": "@POST public Response postOrganization(@Auth final DbCredential credential, final Organization organization)", "class_method_signature": "OrganizationResource.postOrganization(@Auth final DbCredential credential, final Organization organization)", "testcase": false, "constructor": false}, {"identifier": "getNames", "parameters": "()", "modifiers": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(ServerAPI.GET_NAMES) public", "return": "Response", "signature": "Response getNames()", "full_signature": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(ServerAPI.GET_NAMES) public Response getNames()", "class_method_signature": "OrganizationResource.getNames()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(@PathParam(\"name\") final String name)", "modifiers": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{name}\") public", "return": "Response", "signature": "Response get(@PathParam(\"name\") final String name)", "full_signature": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{name}\") public Response get(@PathParam(\"name\") final String name)", "class_method_signature": "OrganizationResource.get(@PathParam(\"name\") final String name)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@Auth final DbCredential credential, @PathParam(\"name\") final String name)", "modifiers": "@DELETE @Path(\"/{name}\") public", "return": "Response", "signature": "Response delete(@Auth final DbCredential credential, @PathParam(\"name\") final String name)", "full_signature": "@DELETE @Path(\"/{name}\") public Response delete(@Auth final DbCredential credential, @PathParam(\"name\") final String name)", "class_method_signature": "OrganizationResource.delete(@Auth final DbCredential credential, @PathParam(\"name\") final String name)", "testcase": false, "constructor": false}, {"identifier": "getCorporateGroupIdPrefix", "parameters": "(@PathParam(\"name\") final String organizationId)", "modifiers": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{name}\" + ServerAPI.GET_CORPORATE_GROUPIDS) public", "return": "Response", "signature": "Response getCorporateGroupIdPrefix(@PathParam(\"name\") final String organizationId)", "full_signature": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{name}\" + ServerAPI.GET_CORPORATE_GROUPIDS) public Response getCorporateGroupIdPrefix(@PathParam(\"name\") final String organizationId)", "class_method_signature": "OrganizationResource.getCorporateGroupIdPrefix(@PathParam(\"name\") final String organizationId)", "testcase": false, "constructor": false}, {"identifier": "addCorporateGroupIdPrefix", "parameters": "(@Auth final DbCredential credential, @PathParam(\"name\") final String organizationId, final String corporateGroupId)", "modifiers": "@POST @Path(\"/{name}\" + ServerAPI.GET_CORPORATE_GROUPIDS) public", "return": "Response", "signature": "Response addCorporateGroupIdPrefix(@Auth final DbCredential credential, @PathParam(\"name\") final String organizationId, final String corporateGroupId)", "full_signature": "@POST @Path(\"/{name}\" + ServerAPI.GET_CORPORATE_GROUPIDS) public Response addCorporateGroupIdPrefix(@Auth final DbCredential credential, @PathParam(\"name\") final String organizationId, final String corporateGroupId)", "class_method_signature": "OrganizationResource.addCorporateGroupIdPrefix(@Auth final DbCredential credential, @PathParam(\"name\") final String organizationId, final String corporateGroupId)", "testcase": false, "constructor": false}, {"identifier": "removeCorporateGroupIdPrefix", "parameters": "(@Auth final DbCredential credential, @PathParam(\"name\") final String organizationId, final String corporateGroupId)", "modifiers": "@DELETE @Path(\"/{name}\" + ServerAPI.GET_CORPORATE_GROUPIDS) public", "return": "Response", "signature": "Response removeCorporateGroupIdPrefix(@Auth final DbCredential credential, @PathParam(\"name\") final String organizationId, final String corporateGroupId)", "full_signature": "@DELETE @Path(\"/{name}\" + ServerAPI.GET_CORPORATE_GROUPIDS) public Response removeCorporateGroupIdPrefix(@Auth final DbCredential credential, @PathParam(\"name\") final String organizationId, final String corporateGroupId)", "class_method_signature": "OrganizationResource.removeCorporateGroupIdPrefix(@Auth final DbCredential credential, @PathParam(\"name\") final String organizationId, final String corporateGroupId)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/axway/grapes/server/webapp/resources/OrganizationResource.java"}, "focal_method": {"identifier": "get", "parameters": "(@PathParam(\"name\") final String name)", "modifiers": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{name}\") public", "return": "Response", "body": "@GET\n    @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON})\n    @Path(\"/{name}\")\n    public Response get(@PathParam(\"name\") final String name){\n        LOG.info(\"Got a get organization request.\");\n\n        final DbOrganization dbOrganization = getOrganizationHandler().getOrganization(name);\n        final Organization organization = getModelMapper().getOrganization(dbOrganization);\n        final OrganizationView view = new OrganizationView(organization);\n\n        return Response.ok(view).build();\n    }", "signature": "Response get(@PathParam(\"name\") final String name)", "full_signature": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{name}\") public Response get(@PathParam(\"name\") final String name)", "class_method_signature": "OrganizationResource.get(@PathParam(\"name\") final String name)", "testcase": false, "constructor": false, "invocations": ["info", "getOrganization", "getOrganizationHandler", "getOrganization", "getModelMapper", "build", "ok"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}