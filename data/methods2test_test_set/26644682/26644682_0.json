{"test_class": {"identifier": "AsyncExecutionTest", "superclass": "", "interfaces": "", "fields": [], "file": "dataprep-async-api/src/test/java/org/talend/dataprep/async/AsyncExecutionTest.java"}, "test_case": {"identifier": "shouldOrderRunningFirst", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldOrderRunningFirst() {\n        List<AsyncExecution> unOrderedAsyncs = Lists.newArrayList(buildAsyncExecution(AsyncExecution.Status.NEW, 100L),\n                buildAsyncExecution(AsyncExecution.Status.DONE, 100L),\n                buildAsyncExecution(AsyncExecution.Status.RUNNING, 100L),\n                buildAsyncExecution(AsyncExecution.Status.CANCELLED, 100L),\n                buildAsyncExecution(AsyncExecution.Status.FAILED, 100L));\n\n        unOrderedAsyncs.sort(naturalOrder());\n\n        assertEquals(AsyncExecution.Status.RUNNING, unOrderedAsyncs.get(0).getStatus());\n    }", "signature": "void shouldOrderRunningFirst()", "full_signature": "@Test public void shouldOrderRunningFirst()", "class_method_signature": "AsyncExecutionTest.shouldOrderRunningFirst()", "testcase": true, "constructor": false, "invocations": ["newArrayList", "buildAsyncExecution", "buildAsyncExecution", "buildAsyncExecution", "buildAsyncExecution", "buildAsyncExecution", "sort", "naturalOrder", "assertEquals", "getStatus", "get"]}, "focal_class": {"identifier": "AsyncExecution", "superclass": "", "interfaces": "implements Comparable<AsyncExecution>", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(AsyncExecution.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(AsyncExecution.class)", "var_name": "LOGGER"}, {"original_string": "private String group;", "modifier": "private", "type": "String", "declarator": "group", "var_name": "group"}, {"original_string": "private String id;", "modifier": "private", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private Time time = new Time();", "modifier": "private", "type": "Time", "declarator": "time = new Time()", "var_name": "time"}, {"original_string": "private Status status = Status.NEW;", "modifier": "private", "type": "Status", "declarator": "status = Status.NEW", "var_name": "status"}, {"original_string": "@JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.NON_NULL)\n    @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS)\n    private AsyncExecutionResult result;", "modifier": "@JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.NON_NULL)\n    @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS)\n    private", "type": "AsyncExecutionResult", "declarator": "result", "var_name": "result"}, {"original_string": "@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS)\n    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.NON_NULL)\n    private ErrorCode error;", "modifier": "@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS)\n    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.NON_NULL)\n    private", "type": "ErrorCode", "declarator": "error", "var_name": "error"}, {"original_string": "private ExecutionProgress progress;", "modifier": "private", "type": "ExecutionProgress", "declarator": "progress", "var_name": "progress"}, {"original_string": "private String userId;", "modifier": "private", "type": "String", "declarator": "userId", "var_name": "userId"}, {"original_string": "private String tenantId;", "modifier": "private", "type": "String", "declarator": "tenantId", "var_name": "tenantId"}, {"original_string": "private String dispatchId;", "modifier": "private", "type": "String", "declarator": "dispatchId", "var_name": "dispatchId"}], "methods": [{"identifier": "AsyncExecution", "parameters": "()", "modifiers": "public", "return": "", "signature": " AsyncExecution()", "full_signature": "public  AsyncExecution()", "class_method_signature": "AsyncExecution.AsyncExecution()", "testcase": false, "constructor": true}, {"identifier": "AsyncExecution", "parameters": "(String group)", "modifiers": "public", "return": "", "signature": " AsyncExecution(String group)", "full_signature": "public  AsyncExecution(String group)", "class_method_signature": "AsyncExecution.AsyncExecution(String group)", "testcase": false, "constructor": true}, {"identifier": "AsyncExecution", "parameters": "(String group, String id)", "modifiers": "public", "return": "", "signature": " AsyncExecution(String group, String id)", "full_signature": "public  AsyncExecution(String group, String id)", "class_method_signature": "AsyncExecution.AsyncExecution(String group, String id)", "testcase": false, "constructor": true}, {"identifier": "reverseStartDateComparator", "parameters": "()", "modifiers": "public static", "return": "Comparator<AsyncExecution>", "signature": "Comparator<AsyncExecution> reverseStartDateComparator()", "full_signature": "public static Comparator<AsyncExecution> reverseStartDateComparator()", "class_method_signature": "AsyncExecution.reverseStartDateComparator()", "testcase": false, "constructor": false}, {"identifier": "reverseEndDateComparator", "parameters": "()", "modifiers": "public static", "return": "Comparator<AsyncExecution>", "signature": "Comparator<AsyncExecution> reverseEndDateComparator()", "full_signature": "public static Comparator<AsyncExecution> reverseEndDateComparator()", "class_method_signature": "AsyncExecution.reverseEndDateComparator()", "testcase": false, "constructor": false}, {"identifier": "getTime", "parameters": "()", "modifiers": "public", "return": "Time", "signature": "Time getTime()", "full_signature": "public Time getTime()", "class_method_signature": "AsyncExecution.getTime()", "testcase": false, "constructor": false}, {"identifier": "setTime", "parameters": "(Time time)", "modifiers": "public", "return": "void", "signature": "void setTime(Time time)", "full_signature": "public void setTime(Time time)", "class_method_signature": "AsyncExecution.setTime(Time time)", "testcase": false, "constructor": false}, {"identifier": "getGroup", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getGroup()", "full_signature": "public String getGroup()", "class_method_signature": "AsyncExecution.getGroup()", "testcase": false, "constructor": false}, {"identifier": "setGroup", "parameters": "(String group)", "modifiers": "public", "return": "void", "signature": "void setGroup(String group)", "full_signature": "public void setGroup(String group)", "class_method_signature": "AsyncExecution.setGroup(String group)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "AsyncExecution.getId()", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(String id)", "modifiers": "public", "return": "void", "signature": "void setId(String id)", "full_signature": "public void setId(String id)", "class_method_signature": "AsyncExecution.setId(String id)", "testcase": false, "constructor": false}, {"identifier": "getError", "parameters": "()", "modifiers": "public", "return": "ErrorCode", "signature": "ErrorCode getError()", "full_signature": "public ErrorCode getError()", "class_method_signature": "AsyncExecution.getError()", "testcase": false, "constructor": false}, {"identifier": "setError", "parameters": "(ErrorCode error)", "modifiers": "public", "return": "void", "signature": "void setError(ErrorCode error)", "full_signature": "public void setError(ErrorCode error)", "class_method_signature": "AsyncExecution.setError(ErrorCode error)", "testcase": false, "constructor": false}, {"identifier": "getProgress", "parameters": "()", "modifiers": "public", "return": "ExecutionProgress", "signature": "ExecutionProgress getProgress()", "full_signature": "public ExecutionProgress getProgress()", "class_method_signature": "AsyncExecution.getProgress()", "testcase": false, "constructor": false}, {"identifier": "setProgress", "parameters": "(ExecutionProgress progress)", "modifiers": "public", "return": "void", "signature": "void setProgress(ExecutionProgress progress)", "full_signature": "public void setProgress(ExecutionProgress progress)", "class_method_signature": "AsyncExecution.setProgress(ExecutionProgress progress)", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "()", "modifiers": "public", "return": "Status", "signature": "Status getStatus()", "full_signature": "public Status getStatus()", "class_method_signature": "AsyncExecution.getStatus()", "testcase": false, "constructor": false}, {"identifier": "setStatus", "parameters": "(Status status)", "modifiers": "public", "return": "void", "signature": "void setStatus(Status status)", "full_signature": "public void setStatus(Status status)", "class_method_signature": "AsyncExecution.setStatus(Status status)", "testcase": false, "constructor": false}, {"identifier": "updateExecutionState", "parameters": "(Status status)", "modifiers": "public", "return": "void", "signature": "void updateExecutionState(Status status)", "full_signature": "public void updateExecutionState(Status status)", "class_method_signature": "AsyncExecution.updateExecutionState(Status status)", "testcase": false, "constructor": false}, {"identifier": "setException", "parameters": "(Throwable error)", "modifiers": "public", "return": "void", "signature": "void setException(Throwable error)", "full_signature": "public void setException(Throwable error)", "class_method_signature": "AsyncExecution.setException(Throwable error)", "testcase": false, "constructor": false}, {"identifier": "getUserId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUserId()", "full_signature": "public String getUserId()", "class_method_signature": "AsyncExecution.getUserId()", "testcase": false, "constructor": false}, {"identifier": "setUserId", "parameters": "(String userId)", "modifiers": "public", "return": "void", "signature": "void setUserId(String userId)", "full_signature": "public void setUserId(String userId)", "class_method_signature": "AsyncExecution.setUserId(String userId)", "testcase": false, "constructor": false}, {"identifier": "setResult", "parameters": "(AsyncExecutionResult result)", "modifiers": "public", "return": "void", "signature": "void setResult(AsyncExecutionResult result)", "full_signature": "public void setResult(AsyncExecutionResult result)", "class_method_signature": "AsyncExecution.setResult(AsyncExecutionResult result)", "testcase": false, "constructor": false}, {"identifier": "getResult", "parameters": "()", "modifiers": "public", "return": "AsyncExecutionResult", "signature": "AsyncExecutionResult getResult()", "full_signature": "public AsyncExecutionResult getResult()", "class_method_signature": "AsyncExecution.getResult()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AsyncExecution.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "AsyncExecution.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "isResumable", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "boolean", "signature": "boolean isResumable()", "full_signature": "@JsonIgnore public boolean isResumable()", "class_method_signature": "AsyncExecution.isResumable()", "testcase": false, "constructor": false}, {"identifier": "getTenantId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTenantId()", "full_signature": "public String getTenantId()", "class_method_signature": "AsyncExecution.getTenantId()", "testcase": false, "constructor": false}, {"identifier": "setTenantId", "parameters": "(String tenantId)", "modifiers": "public", "return": "void", "signature": "void setTenantId(String tenantId)", "full_signature": "public void setTenantId(String tenantId)", "class_method_signature": "AsyncExecution.setTenantId(String tenantId)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AsyncExecution.hashCode()", "testcase": false, "constructor": false}, {"identifier": "setDispatchId", "parameters": "(String dispatchId)", "modifiers": "public", "return": "void", "signature": "void setDispatchId(String dispatchId)", "full_signature": "public void setDispatchId(String dispatchId)", "class_method_signature": "AsyncExecution.setDispatchId(String dispatchId)", "testcase": false, "constructor": false}, {"identifier": "getDispatchId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDispatchId()", "full_signature": "public String getDispatchId()", "class_method_signature": "AsyncExecution.getDispatchId()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(AsyncExecution o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(AsyncExecution o)", "full_signature": "@Override public int compareTo(AsyncExecution o)", "class_method_signature": "AsyncExecution.compareTo(AsyncExecution o)", "testcase": false, "constructor": false}], "file": "dataprep-async-api/src/main/java/org/talend/dataprep/async/AsyncExecution.java"}, "focal_method": {"identifier": "getStatus", "parameters": "()", "modifiers": "public", "return": "Status", "body": "public Status getStatus() {\n        return status;\n    }", "signature": "Status getStatus()", "full_signature": "public Status getStatus()", "class_method_signature": "AsyncExecution.getStatus()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}