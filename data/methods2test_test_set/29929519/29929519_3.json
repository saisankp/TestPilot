{"test_class": {"identifier": "TmlProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n\tpublic", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "java/schema/src/test/java/com/expedia/tesla/schema/TmlProcessorTest.java"}, "test_case": {"identifier": "invalidTml", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void invalidTml() throws Exception {\n\t\tthrown.expect(TeslaSchemaException.class);\n\t\tthrown.expectMessage(\"Invalid TML\");\n\t\tTmlProcessor.load(\"src/test/resources/invalid.tml\");\n\t}", "signature": "void invalidTml()", "full_signature": "@Test public void invalidTml()", "class_method_signature": "TmlProcessorTest.invalidTml()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "load"]}, "focal_class": {"identifier": "TmlProcessor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Set<String> PRIMITIVE_NAMES = new HashSet<String>();", "modifier": "private static final", "type": "Set<String>", "declarator": "PRIMITIVE_NAMES = new HashSet<String>()", "var_name": "PRIMITIVE_NAMES"}, {"original_string": "private static final Pattern TYPE_ID_KEYWORDS_PATTERN = Pattern.compile(\",|<|>|\\\\[|\\\\]|array|map|nullable|reference|poly\");", "modifier": "private static final", "type": "Pattern", "declarator": "TYPE_ID_KEYWORDS_PATTERN = Pattern.compile(\",|<|>|\\\\[|\\\\]|array|map|nullable|reference|poly\")", "var_name": "TYPE_ID_KEYWORDS_PATTERN"}, {"original_string": "private static JAXBContext jaxbContext;", "modifier": "private static", "type": "JAXBContext", "declarator": "jaxbContext", "var_name": "jaxbContext"}], "methods": [{"identifier": "load", "parameters": "(String path)", "modifiers": "public static", "return": "Collection<Object>", "signature": "Collection<Object> load(String path)", "full_signature": "public static Collection<Object> load(String path)", "class_method_signature": "TmlProcessor.load(String path)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(Schema schema, OutputStream os)", "modifiers": "public static", "return": "void", "signature": "void save(Schema schema, OutputStream os)", "full_signature": "public static void save(Schema schema, OutputStream os)", "class_method_signature": "TmlProcessor.save(Schema schema, OutputStream os)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(List<Object> userTypes, OutputStream os,\n\t\t\tString versionName, int versionNumber)", "modifiers": "public static", "return": "void", "signature": "void save(List<Object> userTypes, OutputStream os,\n\t\t\tString versionName, int versionNumber)", "full_signature": "public static void save(List<Object> userTypes, OutputStream os,\n\t\t\tString versionName, int versionNumber)", "class_method_signature": "TmlProcessor.save(List<Object> userTypes, OutputStream os,\n\t\t\tString versionName, int versionNumber)", "testcase": false, "constructor": false}, {"identifier": "array", "parameters": "(String elementType, int rank)", "modifiers": "private static", "return": "String", "signature": "String array(String elementType, int rank)", "full_signature": "private static String array(String elementType, int rank)", "class_method_signature": "TmlProcessor.array(String elementType, int rank)", "testcase": false, "constructor": false}, {"identifier": "getTypeName", "parameters": "(Object classOrEnum)", "modifiers": "private static", "return": "String", "signature": "String getTypeName(Object classOrEnum)", "full_signature": "private static String getTypeName(Object classOrEnum)", "class_method_signature": "TmlProcessor.getTypeName(Object classOrEnum)", "testcase": false, "constructor": false}, {"identifier": "isPrimitive", "parameters": "(String name)", "modifiers": "private static", "return": "boolean", "signature": "boolean isPrimitive(String name)", "full_signature": "private static boolean isPrimitive(String name)", "class_method_signature": "TmlProcessor.isPrimitive(String name)", "testcase": false, "constructor": false}, {"identifier": "preprocess", "parameters": "(TmlGraph graph, File file)", "modifiers": "private static", "return": "void", "signature": "void preprocess(TmlGraph graph, File file)", "full_signature": "private static void preprocess(TmlGraph graph, File file)", "class_method_signature": "TmlProcessor.preprocess(TmlGraph graph, File file)", "testcase": false, "constructor": false}, {"identifier": "resolveTypeReferenceToTypeId", "parameters": "(String name,\n\t\t\tString defaultNamespace, List<Object> currentUserTypes,\n\t\t\tList<Object> importedUserTypes)", "modifiers": "private static", "return": "String", "signature": "String resolveTypeReferenceToTypeId(String name,\n\t\t\tString defaultNamespace, List<Object> currentUserTypes,\n\t\t\tList<Object> importedUserTypes)", "full_signature": "private static String resolveTypeReferenceToTypeId(String name,\n\t\t\tString defaultNamespace, List<Object> currentUserTypes,\n\t\t\tList<Object> importedUserTypes)", "class_method_signature": "TmlProcessor.resolveTypeReferenceToTypeId(String name,\n\t\t\tString defaultNamespace, List<Object> currentUserTypes,\n\t\t\tList<Object> importedUserTypes)", "testcase": false, "constructor": false}, {"identifier": "toFullName", "parameters": "(String name, String defaultNamespace)", "modifiers": "private static", "return": "String", "signature": "String toFullName(String name, String defaultNamespace)", "full_signature": "private static String toFullName(String name, String defaultNamespace)", "class_method_signature": "TmlProcessor.toFullName(String name, String defaultNamespace)", "testcase": false, "constructor": false}, {"identifier": "toShortName", "parameters": "(String name)", "modifiers": "private static", "return": "String", "signature": "String toShortName(String name)", "full_signature": "private static String toShortName(String name)", "class_method_signature": "TmlProcessor.toShortName(String name)", "testcase": false, "constructor": false}, {"identifier": "normalizePrimitiveName", "parameters": "(String name)", "modifiers": "private static", "return": "String", "signature": "String normalizePrimitiveName(String name)", "full_signature": "private static String normalizePrimitiveName(String name)", "class_method_signature": "TmlProcessor.normalizePrimitiveName(String name)", "testcase": false, "constructor": false}, {"identifier": "normalizeTypeId", "parameters": "(String id)", "modifiers": "private static", "return": "String", "signature": "String normalizeTypeId(String id)", "full_signature": "private static String normalizeTypeId(String id)", "class_method_signature": "TmlProcessor.normalizeTypeId(String id)", "testcase": false, "constructor": false}, {"identifier": "unmarshalTml", "parameters": "(String path)", "modifiers": "public static", "return": "Tml", "signature": "Tml unmarshalTml(String path)", "full_signature": "public static Tml unmarshalTml(String path)", "class_method_signature": "TmlProcessor.unmarshalTml(String path)", "testcase": false, "constructor": false}, {"identifier": "getSchemaHash", "parameters": "(String filename)", "modifiers": "public static", "return": "long", "signature": "long getSchemaHash(String filename)", "full_signature": "public static long getSchemaHash(String filename)", "class_method_signature": "TmlProcessor.getSchemaHash(String filename)", "testcase": false, "constructor": false}, {"identifier": "getSchemaHash", "parameters": "(InputStream is)", "modifiers": "private static", "return": "long", "signature": "long getSchemaHash(InputStream is)", "full_signature": "private static long getSchemaHash(InputStream is)", "class_method_signature": "TmlProcessor.getSchemaHash(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "dfs", "parameters": "(TmlGraph graph, File root, TmlVisitor visitor)", "modifiers": "private static", "return": "void", "signature": "void dfs(TmlGraph graph, File root, TmlVisitor visitor)", "full_signature": "private static void dfs(TmlGraph graph, File root, TmlVisitor visitor)", "class_method_signature": "TmlProcessor.dfs(TmlGraph graph, File root, TmlVisitor visitor)", "testcase": false, "constructor": false}, {"identifier": "dfs", "parameters": "(TmlGraph graph, File current, Set<File> visited,\n\t\t\tTmlVisitor visitor)", "modifiers": "private static", "return": "void", "signature": "void dfs(TmlGraph graph, File current, Set<File> visited,\n\t\t\tTmlVisitor visitor)", "full_signature": "private static void dfs(TmlGraph graph, File current, Set<File> visited,\n\t\t\tTmlVisitor visitor)", "class_method_signature": "TmlProcessor.dfs(TmlGraph graph, File current, Set<File> visited,\n\t\t\tTmlVisitor visitor)", "testcase": false, "constructor": false}, {"identifier": "getAllUserTypes", "parameters": "(TmlGraph graph, File root)", "modifiers": "private static", "return": "List<Object>", "signature": "List<Object> getAllUserTypes(TmlGraph graph, File root)", "full_signature": "private static List<Object> getAllUserTypes(TmlGraph graph, File root)", "class_method_signature": "TmlProcessor.getAllUserTypes(TmlGraph graph, File root)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(String path)", "modifiers": "public static", "return": "Schema", "signature": "Schema build(String path)", "full_signature": "public static Schema build(String path)", "class_method_signature": "TmlProcessor.build(String path)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(Collection<Object> types, SchemaVersion ver)", "modifiers": "public static", "return": "Schema", "signature": "Schema build(Collection<Object> types, SchemaVersion ver)", "full_signature": "public static Schema build(Collection<Object> types, SchemaVersion ver)", "class_method_signature": "TmlProcessor.build(Collection<Object> types, SchemaVersion ver)", "testcase": false, "constructor": false}], "file": "java/schema/src/main/java/com/expedia/tesla/schema/TmlProcessor.java"}, "focal_method": {"identifier": "load", "parameters": "(String path)", "modifiers": "public static", "return": "Collection<Object>", "body": "public static Collection<Object> load(String path) throws TeslaSchemaException,\n\t\t\tIOException {\n\t\tFile file = new File(path);\n\t\tTmlGraph graph = new TmlGraph(file);\n\t\tpreprocess(graph, file);\n\t\treturn getAllUserTypes(graph, file);\n\t}", "signature": "Collection<Object> load(String path)", "full_signature": "public static Collection<Object> load(String path)", "class_method_signature": "TmlProcessor.load(String path)", "testcase": false, "constructor": false, "invocations": ["preprocess", "getAllUserTypes"]}, "repository": {"repo_id": 29929519, "url": "https://github.com/ExpediaDotCom/tesla", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 15, "size": 819, "license": "licensed"}}