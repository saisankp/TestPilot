{"test_class": {"identifier": "DynamodbEventSerializerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static String RECORD_FORMAT =\n      \"{\" +\n      \"  \\\"Records\\\":[\" +\n      \"    {\" +\n      \"      \\\"eventID\\\":\\\"1\\\",\" +\n      \"      \\\"eventName\\\":\\\"INSERT\\\",\" +\n      \"      \\\"eventVersion\\\":\\\"1.0\\\",\" +\n      \"      \\\"eventSource\\\":\\\"aws:dynamodb\\\",\" +\n      \"      \\\"awsRegion\\\":\\\"us-east-1\\\",\" +\n      \"      \\\"dynamodb\\\":{\" +\n      \"      \\\"ApproximateCreationDateTime\\\": 1479499740,\" +\n      \"      %s,\" +\n      \"      \\\"SequenceNumber\\\":\\\"111\\\",\" +\n      \"      \\\"StreamViewType\\\":\\\"NEW_AND_OLD_IMAGES\\\"\" +\n      \"      },\" +\n      \"      \\\"eventSourceARN\\\":\\\"stream-ARN\\\"\" +\n      \"    }\" +\n      \"  ]\" +\n      \"}\";", "modifier": "static", "type": "String", "declarator": "RECORD_FORMAT =\n      \"{\" +\n      \"  \\\"Records\\\":[\" +\n      \"    {\" +\n      \"      \\\"eventID\\\":\\\"1\\\",\" +\n      \"      \\\"eventName\\\":\\\"INSERT\\\",\" +\n      \"      \\\"eventVersion\\\":\\\"1.0\\\",\" +\n      \"      \\\"eventSource\\\":\\\"aws:dynamodb\\\",\" +\n      \"      \\\"awsRegion\\\":\\\"us-east-1\\\",\" +\n      \"      \\\"dynamodb\\\":{\" +\n      \"      \\\"ApproximateCreationDateTime\\\": 1479499740,\" +\n      \"      %s,\" +\n      \"      \\\"SequenceNumber\\\":\\\"111\\\",\" +\n      \"      \\\"StreamViewType\\\":\\\"NEW_AND_OLD_IMAGES\\\"\" +\n      \"      },\" +\n      \"      \\\"eventSourceARN\\\":\\\"stream-ARN\\\"\" +\n      \"    }\" +\n      \"  ]\" +\n      \"}\"", "var_name": "RECORD_FORMAT"}, {"original_string": "static String EXPECTED_FORMAT = \"{\\\"eventSourceARN\\\":\\\"stream-ARN\\\",\\\"eventID\\\":\\\"1\\\",\\\"eventName\\\":\\\"INSERT\\\",\\\"eventVersion\\\":\\\"1.0\\\",\\\"eventSource\\\":\\\"aws:dynamodb\\\",\\\"awsRegion\\\":\\\"us-east-1\\\",\\\"dynamodb\\\":{\\\"approximateCreationDateTime\\\":1479499740,%s,\\\"sequenceNumber\\\":\\\"111\\\",\\\"streamViewType\\\":\\\"NEW_AND_OLD_IMAGES\\\"}}\";", "modifier": "static", "type": "String", "declarator": "EXPECTED_FORMAT = \"{\\\"eventSourceARN\\\":\\\"stream-ARN\\\",\\\"eventID\\\":\\\"1\\\",\\\"eventName\\\":\\\"INSERT\\\",\\\"eventVersion\\\":\\\"1.0\\\",\\\"eventSource\\\":\\\"aws:dynamodb\\\",\\\"awsRegion\\\":\\\"us-east-1\\\",\\\"dynamodb\\\":{\\\"approximateCreationDateTime\\\":1479499740,%s,\\\"sequenceNumber\\\":\\\"111\\\",\\\"streamViewType\\\":\\\"NEW_AND_OLD_IMAGES\\\"}}\"", "var_name": "EXPECTED_FORMAT"}], "file": "handlers/src/test/java/com/nextdoor/bender/handler/dynamodb/DynamodbEventSerializerTest.java"}, "test_case": {"identifier": "testKeys", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testKeys() throws IOException {\n    String input = String.format(RECORD_FORMAT,\n        \"\\\"Keys\\\":{\" +\n        \"  \\\"Type\\\":{\" +\n        \"    \\\"S\\\":\\\"content\\\"\" +\n        \"  },\" +\n        \"  \\\"Id\\\":{\" +\n        \"    \\\"N\\\":\\\"101\\\"\" +\n        \"  }\" +\n        \"}\");\n    DynamodbEvent event = DynamodbEventDeserializer.deserialize(input);\n    String result = new DynamodbEventSerializer().serialize(event.getRecords().get(0));\n\n    String expected = String.format(EXPECTED_FORMAT, \"\\\"keys\\\":{\\\"Type\\\":\\\"content\\\",\\\"Id\\\":101}\");\n    assertEquals(expected, result);\n  }", "signature": "void testKeys()", "full_signature": "@Test public void testKeys()", "class_method_signature": "DynamodbEventSerializerTest.testKeys()", "testcase": true, "constructor": false, "invocations": ["format", "deserialize", "serialize", "get", "getRecords", "format", "assertEquals"]}, "focal_class": {"identifier": "DynamodbEventSerializer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Gson gson;", "modifier": "private", "type": "Gson", "declarator": "gson", "var_name": "gson"}], "methods": [{"identifier": "DynamodbEventSerializer", "parameters": "()", "modifiers": "", "return": "", "signature": " DynamodbEventSerializer()", "full_signature": "  DynamodbEventSerializer()", "class_method_signature": "DynamodbEventSerializer.DynamodbEventSerializer()", "testcase": false, "constructor": true}, {"identifier": "createGson", "parameters": "()", "modifiers": "private", "return": "Gson", "signature": "Gson createGson()", "full_signature": "private Gson createGson()", "class_method_signature": "DynamodbEventSerializer.createGson()", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(DynamodbStreamRecord record)", "modifiers": "", "return": "String", "signature": "String serialize(DynamodbStreamRecord record)", "full_signature": " String serialize(DynamodbStreamRecord record)", "class_method_signature": "DynamodbEventSerializer.serialize(DynamodbStreamRecord record)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(Map<String, AttributeValue> map)", "modifiers": "", "return": "String", "signature": "String serialize(Map<String, AttributeValue> map)", "full_signature": " String serialize(Map<String, AttributeValue> map)", "class_method_signature": "DynamodbEventSerializer.serialize(Map<String, AttributeValue> map)", "testcase": false, "constructor": false}], "file": "handlers/src/main/java/com/nextdoor/bender/handler/dynamodb/DynamodbEventSerializer.java"}, "focal_method": {"identifier": "serialize", "parameters": "(DynamodbStreamRecord record)", "modifiers": "", "return": "String", "body": "String serialize(DynamodbStreamRecord record) {\n    return gson.toJson(record);\n  }", "signature": "String serialize(DynamodbStreamRecord record)", "full_signature": " String serialize(DynamodbStreamRecord record)", "class_method_signature": "DynamodbEventSerializer.serialize(DynamodbStreamRecord record)", "testcase": false, "constructor": false, "invocations": ["toJson"]}, "repository": {"repo_id": 75955378, "url": "https://github.com/Nextdoor/bender", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 163, "size": 1503, "license": "licensed"}}