{"test_class": {"identifier": "XYPlotTest", "superclass": "extends AndroidplotTest", "interfaces": "", "fields": [{"original_string": "XYPlot plot;", "modifier": "", "type": "XYPlot", "declarator": "plot", "var_name": "plot"}, {"original_string": "List<Integer> numList1;", "modifier": "", "type": "List<Integer>", "declarator": "numList1", "var_name": "numList1"}, {"original_string": "List<Integer> numList2;", "modifier": "", "type": "List<Integer>", "declarator": "numList2", "var_name": "numList2"}, {"original_string": "SimpleXYSeries series0To100;", "modifier": "", "type": "SimpleXYSeries", "declarator": "series0To100", "var_name": "series0To100"}], "file": "androidplot-core/src/test/java/com/androidplot/xy/XYPlotTest.java"}, "test_case": {"identifier": "testSetRangeLowerBoundary", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetRangeLowerBoundary() throws Exception {\n        plot.addSeries(series0To100, new LineAndPointFormatter());\n        plot.setRangeLowerBoundary(-350, BoundaryMode.FIXED);\n        plot.calculateMinMaxVals();\n        assertEquals(-350, plot.getBounds().getMinY().intValue());\n    }", "signature": "void testSetRangeLowerBoundary()", "full_signature": "@Test public void testSetRangeLowerBoundary()", "class_method_signature": "XYPlotTest.testSetRangeLowerBoundary()", "testcase": true, "constructor": false, "invocations": ["addSeries", "setRangeLowerBoundary", "calculateMinMaxVals", "assertEquals", "intValue", "getMinY", "getBounds"]}, "focal_class": {"identifier": "XYPlot", "superclass": "extends Plot<XYSeries, XYSeriesFormatter, XYSeriesRenderer, XYSeriesBundle, XYSeriesRegistry>", "interfaces": "", "fields": [{"original_string": "private static final int DEFAULT_GRAPH_WIDGET_H_DP = 18;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_GRAPH_WIDGET_H_DP = 18", "var_name": "DEFAULT_GRAPH_WIDGET_H_DP"}, {"original_string": "private static final int DEFAULT_GRAPH_WIDGET_W_DP = 10;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_GRAPH_WIDGET_W_DP = 10", "var_name": "DEFAULT_GRAPH_WIDGET_W_DP"}, {"original_string": "private static final int DEFAULT_DOMAIN_LABEL_WIDGET_H_DP = 10;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_DOMAIN_LABEL_WIDGET_H_DP = 10", "var_name": "DEFAULT_DOMAIN_LABEL_WIDGET_H_DP"}, {"original_string": "private static final int DEFAULT_DOMAIN_LABEL_WIDGET_W_DP = 80;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_DOMAIN_LABEL_WIDGET_W_DP = 80", "var_name": "DEFAULT_DOMAIN_LABEL_WIDGET_W_DP"}, {"original_string": "private static final int DEFAULT_RANGE_LABEL_WIDGET_H_DP = 50;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_RANGE_LABEL_WIDGET_H_DP = 50", "var_name": "DEFAULT_RANGE_LABEL_WIDGET_H_DP"}, {"original_string": "private static final int DEFAULT_RANGE_LABEL_WIDGET_W_DP = 10;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_RANGE_LABEL_WIDGET_W_DP = 10", "var_name": "DEFAULT_RANGE_LABEL_WIDGET_W_DP"}, {"original_string": "private static final int DEFAULT_LEGEND_WIDGET_H_DP = 10;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_LEGEND_WIDGET_H_DP = 10", "var_name": "DEFAULT_LEGEND_WIDGET_H_DP"}, {"original_string": "private static final int DEFAULT_LEGEND_WIDGET_ICON_SIZE_DP = 7;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_LEGEND_WIDGET_ICON_SIZE_DP = 7", "var_name": "DEFAULT_LEGEND_WIDGET_ICON_SIZE_DP"}, {"original_string": "private static final int DEFAULT_LEGEND_WIDGET_Y_OFFSET_DP = 0;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_LEGEND_WIDGET_Y_OFFSET_DP = 0", "var_name": "DEFAULT_LEGEND_WIDGET_Y_OFFSET_DP"}, {"original_string": "private static final int DEFAULT_LEGEND_WIDGET_X_OFFSET_DP = 40;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_LEGEND_WIDGET_X_OFFSET_DP = 40", "var_name": "DEFAULT_LEGEND_WIDGET_X_OFFSET_DP"}, {"original_string": "private static final int DEFAULT_GRAPH_WIDGET_Y_OFFSET_DP = 0;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_GRAPH_WIDGET_Y_OFFSET_DP = 0", "var_name": "DEFAULT_GRAPH_WIDGET_Y_OFFSET_DP"}, {"original_string": "private static final int DEFAULT_GRAPH_WIDGET_X_OFFSET_DP = 0;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_GRAPH_WIDGET_X_OFFSET_DP = 0", "var_name": "DEFAULT_GRAPH_WIDGET_X_OFFSET_DP"}, {"original_string": "private static final int DEFAULT_DOMAIN_LABEL_WIDGET_Y_OFFSET_DP = 0;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_DOMAIN_LABEL_WIDGET_Y_OFFSET_DP = 0", "var_name": "DEFAULT_DOMAIN_LABEL_WIDGET_Y_OFFSET_DP"}, {"original_string": "private static final int DEFAULT_DOMAIN_LABEL_WIDGET_X_OFFSET_DP = 20;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_DOMAIN_LABEL_WIDGET_X_OFFSET_DP = 20", "var_name": "DEFAULT_DOMAIN_LABEL_WIDGET_X_OFFSET_DP"}, {"original_string": "private static final int DEFAULT_RANGE_LABEL_WIDGET_Y_OFFSET_DP = 0;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_RANGE_LABEL_WIDGET_Y_OFFSET_DP = 0", "var_name": "DEFAULT_RANGE_LABEL_WIDGET_Y_OFFSET_DP"}, {"original_string": "private static final int DEFAULT_RANGE_LABEL_WIDGET_X_OFFSET_DP = 0;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_RANGE_LABEL_WIDGET_X_OFFSET_DP = 0", "var_name": "DEFAULT_RANGE_LABEL_WIDGET_X_OFFSET_DP"}, {"original_string": "private static final int DEFAULT_PLOT_LEFT_MARGIN_DP = 1;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_PLOT_LEFT_MARGIN_DP = 1", "var_name": "DEFAULT_PLOT_LEFT_MARGIN_DP"}, {"original_string": "private static final int DEFAULT_PLOT_RIGHT_MARGIN_DP = 1;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_PLOT_RIGHT_MARGIN_DP = 1", "var_name": "DEFAULT_PLOT_RIGHT_MARGIN_DP"}, {"original_string": "private static final int DEFAULT_PLOT_TOP_MARGIN_DP = 1;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_PLOT_TOP_MARGIN_DP = 1", "var_name": "DEFAULT_PLOT_TOP_MARGIN_DP"}, {"original_string": "private static final int DEFAULT_PLOT_BOTTOM_MARGIN_DP = 1;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_PLOT_BOTTOM_MARGIN_DP = 1", "var_name": "DEFAULT_PLOT_BOTTOM_MARGIN_DP"}, {"original_string": "private BoundaryMode domainOriginBoundaryMode;", "modifier": "private", "type": "BoundaryMode", "declarator": "domainOriginBoundaryMode", "var_name": "domainOriginBoundaryMode"}, {"original_string": "private BoundaryMode rangeOriginBoundaryMode;", "modifier": "private", "type": "BoundaryMode", "declarator": "rangeOriginBoundaryMode", "var_name": "rangeOriginBoundaryMode"}, {"original_string": "private XYLegendWidget legend;", "modifier": "private", "type": "XYLegendWidget", "declarator": "legend", "var_name": "legend"}, {"original_string": "private XYGraphWidget graph;", "modifier": "private", "type": "XYGraphWidget", "declarator": "graph", "var_name": "graph"}, {"original_string": "private TextLabelWidget domainTitle;", "modifier": "private", "type": "TextLabelWidget", "declarator": "domainTitle", "var_name": "domainTitle"}, {"original_string": "private TextLabelWidget rangeTitle;", "modifier": "private", "type": "TextLabelWidget", "declarator": "rangeTitle", "var_name": "rangeTitle"}, {"original_string": "private StepModel domainStepModel;", "modifier": "private", "type": "StepModel", "declarator": "domainStepModel", "var_name": "domainStepModel"}, {"original_string": "private StepModel rangeStepModel;", "modifier": "private", "type": "StepModel", "declarator": "rangeStepModel", "var_name": "rangeStepModel"}, {"original_string": "private XYConstraints constraints = new XYConstraints();", "modifier": "private", "type": "XYConstraints", "declarator": "constraints = new XYConstraints()", "var_name": "constraints"}, {"original_string": "private RectRegion bounds = RectRegion.withDefaults(new RectRegion(-1, 1, -1, 1));", "modifier": "private", "type": "RectRegion", "declarator": "bounds = RectRegion.withDefaults(new RectRegion(-1, 1, -1, 1))", "var_name": "bounds"}, {"original_string": "private Number prevMinX;", "modifier": "private", "type": "Number", "declarator": "prevMinX", "var_name": "prevMinX"}, {"original_string": "private Number prevMaxX;", "modifier": "private", "type": "Number", "declarator": "prevMaxX", "var_name": "prevMaxX"}, {"original_string": "private Number prevMinY;", "modifier": "private", "type": "Number", "declarator": "prevMinY", "var_name": "prevMinY"}, {"original_string": "private Number prevMaxY;", "modifier": "private", "type": "Number", "declarator": "prevMaxY", "var_name": "prevMaxY"}, {"original_string": "private final RectRegion innerLimits = new RectRegion();", "modifier": "private final", "type": "RectRegion", "declarator": "innerLimits = new RectRegion()", "var_name": "innerLimits"}, {"original_string": "private final RectRegion outerLimits = new RectRegion();", "modifier": "private final", "type": "RectRegion", "declarator": "outerLimits = new RectRegion()", "var_name": "outerLimits"}, {"original_string": "private Number userDomainOrigin;", "modifier": "private", "type": "Number", "declarator": "userDomainOrigin", "var_name": "userDomainOrigin"}, {"original_string": "private Number userRangeOrigin;", "modifier": "private", "type": "Number", "declarator": "userRangeOrigin", "var_name": "userRangeOrigin"}, {"original_string": "private XYCoords calculatedOrigin = new XYCoords();", "modifier": "private", "type": "XYCoords", "declarator": "calculatedOrigin = new XYCoords()", "var_name": "calculatedOrigin"}, {"original_string": "@SuppressWarnings(\"FieldCanBeLocal\")\n    private Number domainOriginExtent = null;", "modifier": "@SuppressWarnings(\"FieldCanBeLocal\")\n    private", "type": "Number", "declarator": "domainOriginExtent = null", "var_name": "domainOriginExtent"}, {"original_string": "@SuppressWarnings(\"FieldCanBeLocal\")\n    private Number rangeOriginExtent = null;", "modifier": "@SuppressWarnings(\"FieldCanBeLocal\")\n    private", "type": "Number", "declarator": "rangeOriginExtent = null", "var_name": "rangeOriginExtent"}, {"original_string": "private ArrayList<YValueMarker> yValueMarkers;", "modifier": "private", "type": "ArrayList<YValueMarker>", "declarator": "yValueMarkers", "var_name": "yValueMarkers"}, {"original_string": "private ArrayList<XValueMarker> xValueMarkers;", "modifier": "private", "type": "ArrayList<XValueMarker>", "declarator": "xValueMarkers", "var_name": "xValueMarkers"}, {"original_string": "private PreviewMode previewMode;", "modifier": "private", "type": "PreviewMode", "declarator": "previewMode", "var_name": "previewMode"}], "methods": [{"identifier": "XYPlot", "parameters": "(Context context, String title)", "modifiers": "public", "return": "", "signature": " XYPlot(Context context, String title)", "full_signature": "public  XYPlot(Context context, String title)", "class_method_signature": "XYPlot.XYPlot(Context context, String title)", "testcase": false, "constructor": true}, {"identifier": "XYPlot", "parameters": "(Context context, String title, RenderMode mode)", "modifiers": "public", "return": "", "signature": " XYPlot(Context context, String title, RenderMode mode)", "full_signature": "public  XYPlot(Context context, String title, RenderMode mode)", "class_method_signature": "XYPlot.XYPlot(Context context, String title, RenderMode mode)", "testcase": false, "constructor": true}, {"identifier": "XYPlot", "parameters": "(Context context, AttributeSet attributes)", "modifiers": "public", "return": "", "signature": " XYPlot(Context context, AttributeSet attributes)", "full_signature": "public  XYPlot(Context context, AttributeSet attributes)", "class_method_signature": "XYPlot.XYPlot(Context context, AttributeSet attributes)", "testcase": false, "constructor": true}, {"identifier": "XYPlot", "parameters": "(Context context, AttributeSet attrs, int defStyle)", "modifiers": "public", "return": "", "signature": " XYPlot(Context context, AttributeSet attrs, int defStyle)", "full_signature": "public  XYPlot(Context context, AttributeSet attrs, int defStyle)", "class_method_signature": "XYPlot.XYPlot(Context context, AttributeSet attrs, int defStyle)", "testcase": false, "constructor": true}, {"identifier": "onPreInit", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void onPreInit()", "full_signature": "@Override protected void onPreInit()", "class_method_signature": "XYPlot.onPreInit()", "testcase": false, "constructor": false}, {"identifier": "onAfterConfig", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void onAfterConfig()", "full_signature": "@Override protected void onAfterConfig()", "class_method_signature": "XYPlot.onAfterConfig()", "testcase": false, "constructor": false}, {"identifier": "processAttrs", "parameters": "(TypedArray attrs)", "modifiers": "@Override protected", "return": "void", "signature": "void processAttrs(TypedArray attrs)", "full_signature": "@Override protected void processAttrs(TypedArray attrs)", "class_method_signature": "XYPlot.processAttrs(TypedArray attrs)", "testcase": false, "constructor": false}, {"identifier": "notifyListenersBeforeDraw", "parameters": "(Canvas canvas)", "modifiers": "@Override protected", "return": "void", "signature": "void notifyListenersBeforeDraw(Canvas canvas)", "full_signature": "@Override protected void notifyListenersBeforeDraw(Canvas canvas)", "class_method_signature": "XYPlot.notifyListenersBeforeDraw(Canvas canvas)", "testcase": false, "constructor": false}, {"identifier": "containsPoint", "parameters": "(float x, float y)", "modifiers": "public", "return": "boolean", "signature": "boolean containsPoint(float x, float y)", "full_signature": "public boolean containsPoint(float x, float y)", "class_method_signature": "XYPlot.containsPoint(float x, float y)", "testcase": false, "constructor": false}, {"identifier": "containsPoint", "parameters": "(PointF point)", "modifiers": "public", "return": "boolean", "signature": "boolean containsPoint(PointF point)", "full_signature": "public boolean containsPoint(PointF point)", "class_method_signature": "XYPlot.containsPoint(PointF point)", "testcase": false, "constructor": false}, {"identifier": "setCursorPosition", "parameters": "(PointF point)", "modifiers": "public", "return": "void", "signature": "void setCursorPosition(PointF point)", "full_signature": "public void setCursorPosition(PointF point)", "class_method_signature": "XYPlot.setCursorPosition(PointF point)", "testcase": false, "constructor": false}, {"identifier": "setCursorPosition", "parameters": "(float x, float y)", "modifiers": "public", "return": "void", "signature": "void setCursorPosition(float x, float y)", "full_signature": "public void setCursorPosition(float x, float y)", "class_method_signature": "XYPlot.setCursorPosition(float x, float y)", "testcase": false, "constructor": false}, {"identifier": "getXVal", "parameters": "(float xPix)", "modifiers": "@Deprecated public", "return": "Number", "signature": "Number getXVal(float xPix)", "full_signature": "@Deprecated public Number getXVal(float xPix)", "class_method_signature": "XYPlot.getXVal(float xPix)", "testcase": false, "constructor": false}, {"identifier": "getYVal", "parameters": "(float yPix)", "modifiers": "public", "return": "Number", "signature": "Number getYVal(float yPix)", "full_signature": "public Number getYVal(float yPix)", "class_method_signature": "XYPlot.getYVal(float yPix)", "testcase": false, "constructor": false}, {"identifier": "getYVal", "parameters": "(PointF point)", "modifiers": "@Deprecated public", "return": "Number", "signature": "Number getYVal(PointF point)", "full_signature": "@Deprecated public Number getYVal(PointF point)", "class_method_signature": "XYPlot.getYVal(PointF point)", "testcase": false, "constructor": false}, {"identifier": "getXVal", "parameters": "(PointF point)", "modifiers": "@Deprecated public", "return": "Number", "signature": "Number getXVal(PointF point)", "full_signature": "@Deprecated public Number getXVal(PointF point)", "class_method_signature": "XYPlot.getXVal(PointF point)", "testcase": false, "constructor": false}, {"identifier": "screenToSeriesX", "parameters": "(float x)", "modifiers": "public", "return": "Number", "signature": "Number screenToSeriesX(float x)", "full_signature": "public Number screenToSeriesX(float x)", "class_method_signature": "XYPlot.screenToSeriesX(float x)", "testcase": false, "constructor": false}, {"identifier": "screenToSeriesY", "parameters": "(float y)", "modifiers": "public", "return": "Number", "signature": "Number screenToSeriesY(float y)", "full_signature": "public Number screenToSeriesY(float y)", "class_method_signature": "XYPlot.screenToSeriesY(float y)", "testcase": false, "constructor": false}, {"identifier": "seriesToScreenX", "parameters": "(Number x)", "modifiers": "public", "return": "float", "signature": "float seriesToScreenX(Number x)", "full_signature": "public float seriesToScreenX(Number x)", "class_method_signature": "XYPlot.seriesToScreenX(Number x)", "testcase": false, "constructor": false}, {"identifier": "seriesToScreenY", "parameters": "(Number y)", "modifiers": "public", "return": "float", "signature": "float seriesToScreenY(Number y)", "full_signature": "public float seriesToScreenY(Number y)", "class_method_signature": "XYPlot.seriesToScreenY(Number y)", "testcase": false, "constructor": false}, {"identifier": "seriesToScreen", "parameters": "(XYCoords xy)", "modifiers": "public", "return": "PointF", "signature": "PointF seriesToScreen(XYCoords xy)", "full_signature": "public PointF seriesToScreen(XYCoords xy)", "class_method_signature": "XYPlot.seriesToScreen(XYCoords xy)", "testcase": false, "constructor": false}, {"identifier": "screentoSeries", "parameters": "(PointF point)", "modifiers": "public", "return": "XYCoords", "signature": "XYCoords screentoSeries(PointF point)", "full_signature": "public XYCoords screentoSeries(PointF point)", "class_method_signature": "XYPlot.screentoSeries(PointF point)", "testcase": false, "constructor": false}, {"identifier": "calculateMinMaxVals", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void calculateMinMaxVals()", "full_signature": "public void calculateMinMaxVals()", "class_method_signature": "XYPlot.calculateMinMaxVals()", "testcase": false, "constructor": false}, {"identifier": "getCalculatedUpperBoundary", "parameters": "(BoundaryMode mode, Number previousMax, Number calculatedMax)", "modifiers": "protected", "return": "Number", "signature": "Number getCalculatedUpperBoundary(BoundaryMode mode, Number previousMax, Number calculatedMax)", "full_signature": "protected Number getCalculatedUpperBoundary(BoundaryMode mode, Number previousMax, Number calculatedMax)", "class_method_signature": "XYPlot.getCalculatedUpperBoundary(BoundaryMode mode, Number previousMax, Number calculatedMax)", "testcase": false, "constructor": false}, {"identifier": "getCalculatedLowerBoundary", "parameters": "(BoundaryMode mode, Number previousMin, Number calculatedMin)", "modifiers": "protected", "return": "Number", "signature": "Number getCalculatedLowerBoundary(BoundaryMode mode, Number previousMin, Number calculatedMin)", "full_signature": "protected Number getCalculatedLowerBoundary(BoundaryMode mode, Number previousMin, Number calculatedMin)", "class_method_signature": "XYPlot.getCalculatedLowerBoundary(BoundaryMode mode, Number previousMin, Number calculatedMin)", "testcase": false, "constructor": false}, {"identifier": "applyUserMinMax", "parameters": "(Number value, Number min, Number max)", "modifiers": "private static", "return": "Number", "signature": "Number applyUserMinMax(Number value, Number min, Number max)", "full_signature": "private static Number applyUserMinMax(Number value, Number min, Number max)", "class_method_signature": "XYPlot.applyUserMinMax(Number value, Number min, Number max)", "testcase": false, "constructor": false}, {"identifier": "centerOnDomainOrigin", "parameters": "(@NonNull Number origin)", "modifiers": "public", "return": "void", "signature": "void centerOnDomainOrigin(@NonNull Number origin)", "full_signature": "public void centerOnDomainOrigin(@NonNull Number origin)", "class_method_signature": "XYPlot.centerOnDomainOrigin(@NonNull Number origin)", "testcase": false, "constructor": false}, {"identifier": "centerOnDomainOrigin", "parameters": "(@NonNull Number origin, Number extent, BoundaryMode mode)", "modifiers": "public", "return": "void", "signature": "void centerOnDomainOrigin(@NonNull Number origin, Number extent, BoundaryMode mode)", "full_signature": "public void centerOnDomainOrigin(@NonNull Number origin, Number extent, BoundaryMode mode)", "class_method_signature": "XYPlot.centerOnDomainOrigin(@NonNull Number origin, Number extent, BoundaryMode mode)", "testcase": false, "constructor": false}, {"identifier": "centerOnRangeOrigin", "parameters": "(@NonNull Number origin)", "modifiers": "public", "return": "void", "signature": "void centerOnRangeOrigin(@NonNull Number origin)", "full_signature": "public void centerOnRangeOrigin(@NonNull Number origin)", "class_method_signature": "XYPlot.centerOnRangeOrigin(@NonNull Number origin)", "testcase": false, "constructor": false}, {"identifier": "centerOnRangeOrigin", "parameters": "(@NonNull Number origin, Number extent, BoundaryMode mode)", "modifiers": "@SuppressWarnings(\"SameParameterValue\") public", "return": "void", "signature": "void centerOnRangeOrigin(@NonNull Number origin, Number extent, BoundaryMode mode)", "full_signature": "@SuppressWarnings(\"SameParameterValue\") public void centerOnRangeOrigin(@NonNull Number origin, Number extent, BoundaryMode mode)", "class_method_signature": "XYPlot.centerOnRangeOrigin(@NonNull Number origin, Number extent, BoundaryMode mode)", "testcase": false, "constructor": false}, {"identifier": "getOriginMinMax", "parameters": "(BoundaryMode mode, Number origin, Number extent)", "modifiers": "protected", "return": "Number[]", "signature": "Number[] getOriginMinMax(BoundaryMode mode, Number origin, Number extent)", "full_signature": "protected Number[] getOriginMinMax(BoundaryMode mode, Number origin, Number extent)", "class_method_signature": "XYPlot.getOriginMinMax(BoundaryMode mode, Number origin, Number extent)", "testcase": false, "constructor": false}, {"identifier": "distance", "parameters": "(double x, double y)", "modifiers": "private static", "return": "double", "signature": "double distance(double x, double y)", "full_signature": "private static double distance(double x, double y)", "class_method_signature": "XYPlot.distance(double x, double y)", "testcase": false, "constructor": false}, {"identifier": "updateDomainMinMaxForOriginModel", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void updateDomainMinMaxForOriginModel()", "full_signature": "public void updateDomainMinMaxForOriginModel()", "class_method_signature": "XYPlot.updateDomainMinMaxForOriginModel()", "testcase": false, "constructor": false}, {"identifier": "updateRangeMinMaxForOriginModel", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void updateRangeMinMaxForOriginModel()", "full_signature": "public void updateRangeMinMaxForOriginModel()", "class_method_signature": "XYPlot.updateRangeMinMaxForOriginModel()", "testcase": false, "constructor": false}, {"identifier": "getLinesPerRangeLabel", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLinesPerRangeLabel()", "full_signature": "public int getLinesPerRangeLabel()", "class_method_signature": "XYPlot.getLinesPerRangeLabel()", "testcase": false, "constructor": false}, {"identifier": "setLinesPerRangeLabel", "parameters": "(int linesPerLabel)", "modifiers": "public", "return": "void", "signature": "void setLinesPerRangeLabel(int linesPerLabel)", "full_signature": "public void setLinesPerRangeLabel(int linesPerLabel)", "class_method_signature": "XYPlot.setLinesPerRangeLabel(int linesPerLabel)", "testcase": false, "constructor": false}, {"identifier": "getLinesPerDomainLabel", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLinesPerDomainLabel()", "full_signature": "public int getLinesPerDomainLabel()", "class_method_signature": "XYPlot.getLinesPerDomainLabel()", "testcase": false, "constructor": false}, {"identifier": "setLinesPerDomainLabel", "parameters": "(int linesPerDomainLabel)", "modifiers": "public", "return": "void", "signature": "void setLinesPerDomainLabel(int linesPerDomainLabel)", "full_signature": "public void setLinesPerDomainLabel(int linesPerDomainLabel)", "class_method_signature": "XYPlot.setLinesPerDomainLabel(int linesPerDomainLabel)", "testcase": false, "constructor": false}, {"identifier": "getDomainStepMode", "parameters": "()", "modifiers": "public", "return": "StepMode", "signature": "StepMode getDomainStepMode()", "full_signature": "public StepMode getDomainStepMode()", "class_method_signature": "XYPlot.getDomainStepMode()", "testcase": false, "constructor": false}, {"identifier": "setDomainStepMode", "parameters": "(StepMode domainStepMode)", "modifiers": "public", "return": "void", "signature": "void setDomainStepMode(StepMode domainStepMode)", "full_signature": "public void setDomainStepMode(StepMode domainStepMode)", "class_method_signature": "XYPlot.setDomainStepMode(StepMode domainStepMode)", "testcase": false, "constructor": false}, {"identifier": "getDomainStepValue", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getDomainStepValue()", "full_signature": "public double getDomainStepValue()", "class_method_signature": "XYPlot.getDomainStepValue()", "testcase": false, "constructor": false}, {"identifier": "setDomainStepValue", "parameters": "(double domainStepValue)", "modifiers": "public", "return": "void", "signature": "void setDomainStepValue(double domainStepValue)", "full_signature": "public void setDomainStepValue(double domainStepValue)", "class_method_signature": "XYPlot.setDomainStepValue(double domainStepValue)", "testcase": false, "constructor": false}, {"identifier": "setDomainStep", "parameters": "(StepMode mode, double value)", "modifiers": "public", "return": "void", "signature": "void setDomainStep(StepMode mode, double value)", "full_signature": "public void setDomainStep(StepMode mode, double value)", "class_method_signature": "XYPlot.setDomainStep(StepMode mode, double value)", "testcase": false, "constructor": false}, {"identifier": "getRangeStepMode", "parameters": "()", "modifiers": "public", "return": "StepMode", "signature": "StepMode getRangeStepMode()", "full_signature": "public StepMode getRangeStepMode()", "class_method_signature": "XYPlot.getRangeStepMode()", "testcase": false, "constructor": false}, {"identifier": "setRangeStepMode", "parameters": "(StepMode rangeStepMode)", "modifiers": "public", "return": "void", "signature": "void setRangeStepMode(StepMode rangeStepMode)", "full_signature": "public void setRangeStepMode(StepMode rangeStepMode)", "class_method_signature": "XYPlot.setRangeStepMode(StepMode rangeStepMode)", "testcase": false, "constructor": false}, {"identifier": "getRangeStepValue", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getRangeStepValue()", "full_signature": "public double getRangeStepValue()", "class_method_signature": "XYPlot.getRangeStepValue()", "testcase": false, "constructor": false}, {"identifier": "setRangeStepValue", "parameters": "(double rangeStepValue)", "modifiers": "public", "return": "void", "signature": "void setRangeStepValue(double rangeStepValue)", "full_signature": "public void setRangeStepValue(double rangeStepValue)", "class_method_signature": "XYPlot.setRangeStepValue(double rangeStepValue)", "testcase": false, "constructor": false}, {"identifier": "setRangeStep", "parameters": "(StepMode mode, double value)", "modifiers": "public", "return": "void", "signature": "void setRangeStep(StepMode mode, double value)", "full_signature": "public void setRangeStep(StepMode mode, double value)", "class_method_signature": "XYPlot.setRangeStep(StepMode mode, double value)", "testcase": false, "constructor": false}, {"identifier": "getLegend", "parameters": "()", "modifiers": "public", "return": "XYLegendWidget", "signature": "XYLegendWidget getLegend()", "full_signature": "public XYLegendWidget getLegend()", "class_method_signature": "XYPlot.getLegend()", "testcase": false, "constructor": false}, {"identifier": "setLegend", "parameters": "(XYLegendWidget legend)", "modifiers": "public", "return": "void", "signature": "void setLegend(XYLegendWidget legend)", "full_signature": "public void setLegend(XYLegendWidget legend)", "class_method_signature": "XYPlot.setLegend(XYLegendWidget legend)", "testcase": false, "constructor": false}, {"identifier": "getGraph", "parameters": "()", "modifiers": "public", "return": "XYGraphWidget", "signature": "XYGraphWidget getGraph()", "full_signature": "public XYGraphWidget getGraph()", "class_method_signature": "XYPlot.getGraph()", "testcase": false, "constructor": false}, {"identifier": "setGraph", "parameters": "(XYGraphWidget graph)", "modifiers": "public", "return": "void", "signature": "void setGraph(XYGraphWidget graph)", "full_signature": "public void setGraph(XYGraphWidget graph)", "class_method_signature": "XYPlot.setGraph(XYGraphWidget graph)", "testcase": false, "constructor": false}, {"identifier": "getDomainTitle", "parameters": "()", "modifiers": "public", "return": "TextLabelWidget", "signature": "TextLabelWidget getDomainTitle()", "full_signature": "public TextLabelWidget getDomainTitle()", "class_method_signature": "XYPlot.getDomainTitle()", "testcase": false, "constructor": false}, {"identifier": "setDomainTitle", "parameters": "(TextLabelWidget domainTitle)", "modifiers": "public", "return": "void", "signature": "void setDomainTitle(TextLabelWidget domainTitle)", "full_signature": "public void setDomainTitle(TextLabelWidget domainTitle)", "class_method_signature": "XYPlot.setDomainTitle(TextLabelWidget domainTitle)", "testcase": false, "constructor": false}, {"identifier": "setDomainLabel", "parameters": "(String domainLabel)", "modifiers": "public", "return": "void", "signature": "void setDomainLabel(String domainLabel)", "full_signature": "public void setDomainLabel(String domainLabel)", "class_method_signature": "XYPlot.setDomainLabel(String domainLabel)", "testcase": false, "constructor": false}, {"identifier": "getRangeTitle", "parameters": "()", "modifiers": "public", "return": "TextLabelWidget", "signature": "TextLabelWidget getRangeTitle()", "full_signature": "public TextLabelWidget getRangeTitle()", "class_method_signature": "XYPlot.getRangeTitle()", "testcase": false, "constructor": false}, {"identifier": "setRangeTitle", "parameters": "(TextLabelWidget rangeTitle)", "modifiers": "public", "return": "void", "signature": "void setRangeTitle(TextLabelWidget rangeTitle)", "full_signature": "public void setRangeTitle(TextLabelWidget rangeTitle)", "class_method_signature": "XYPlot.setRangeTitle(TextLabelWidget rangeTitle)", "testcase": false, "constructor": false}, {"identifier": "setRangeLabel", "parameters": "(String rangeLabel)", "modifiers": "public", "return": "void", "signature": "void setRangeLabel(String rangeLabel)", "full_signature": "public void setRangeLabel(String rangeLabel)", "class_method_signature": "XYPlot.setRangeLabel(String rangeLabel)", "testcase": false, "constructor": false}, {"identifier": "setDomainBoundaries", "parameters": "(Number lowerBoundary, Number upperBoundary, BoundaryMode mode)", "modifiers": "public synchronized", "return": "void", "signature": "void setDomainBoundaries(Number lowerBoundary, Number upperBoundary, BoundaryMode mode)", "full_signature": "public synchronized void setDomainBoundaries(Number lowerBoundary, Number upperBoundary, BoundaryMode mode)", "class_method_signature": "XYPlot.setDomainBoundaries(Number lowerBoundary, Number upperBoundary, BoundaryMode mode)", "testcase": false, "constructor": false}, {"identifier": "setDomainBoundaries", "parameters": "(Number lowerBoundary, BoundaryMode lowerBoundaryMode,\n                                                 Number upperBoundary, BoundaryMode upperBoundaryMode)", "modifiers": "public synchronized", "return": "void", "signature": "void setDomainBoundaries(Number lowerBoundary, BoundaryMode lowerBoundaryMode,\n                                                 Number upperBoundary, BoundaryMode upperBoundaryMode)", "full_signature": "public synchronized void setDomainBoundaries(Number lowerBoundary, BoundaryMode lowerBoundaryMode,\n                                                 Number upperBoundary, BoundaryMode upperBoundaryMode)", "class_method_signature": "XYPlot.setDomainBoundaries(Number lowerBoundary, BoundaryMode lowerBoundaryMode,\n                                                 Number upperBoundary, BoundaryMode upperBoundaryMode)", "testcase": false, "constructor": false}, {"identifier": "setRangeBoundaries", "parameters": "(Number lowerBoundary, Number upperBoundary, BoundaryMode mode)", "modifiers": "public synchronized", "return": "void", "signature": "void setRangeBoundaries(Number lowerBoundary, Number upperBoundary, BoundaryMode mode)", "full_signature": "public synchronized void setRangeBoundaries(Number lowerBoundary, Number upperBoundary, BoundaryMode mode)", "class_method_signature": "XYPlot.setRangeBoundaries(Number lowerBoundary, Number upperBoundary, BoundaryMode mode)", "testcase": false, "constructor": false}, {"identifier": "setRangeBoundaries", "parameters": "(Number lowerBoundary, BoundaryMode lowerBoundaryMode,\n                                                Number upperBoundary, BoundaryMode upperBoundaryMode)", "modifiers": "public synchronized", "return": "void", "signature": "void setRangeBoundaries(Number lowerBoundary, BoundaryMode lowerBoundaryMode,\n                                                Number upperBoundary, BoundaryMode upperBoundaryMode)", "full_signature": "public synchronized void setRangeBoundaries(Number lowerBoundary, BoundaryMode lowerBoundaryMode,\n                                                Number upperBoundary, BoundaryMode upperBoundaryMode)", "class_method_signature": "XYPlot.setRangeBoundaries(Number lowerBoundary, BoundaryMode lowerBoundaryMode,\n                                                Number upperBoundary, BoundaryMode upperBoundaryMode)", "testcase": false, "constructor": false}, {"identifier": "setDomainUpperBoundaryMode", "parameters": "(BoundaryMode mode)", "modifiers": "protected synchronized", "return": "void", "signature": "void setDomainUpperBoundaryMode(BoundaryMode mode)", "full_signature": "protected synchronized void setDomainUpperBoundaryMode(BoundaryMode mode)", "class_method_signature": "XYPlot.setDomainUpperBoundaryMode(BoundaryMode mode)", "testcase": false, "constructor": false}, {"identifier": "setUserMaxX", "parameters": "(Number maxX)", "modifiers": "protected synchronized", "return": "void", "signature": "void setUserMaxX(Number maxX)", "full_signature": "protected synchronized void setUserMaxX(Number maxX)", "class_method_signature": "XYPlot.setUserMaxX(Number maxX)", "testcase": false, "constructor": false}, {"identifier": "setDomainUpperBoundary", "parameters": "(Number boundary, BoundaryMode mode)", "modifiers": "public synchronized", "return": "void", "signature": "void setDomainUpperBoundary(Number boundary, BoundaryMode mode)", "full_signature": "public synchronized void setDomainUpperBoundary(Number boundary, BoundaryMode mode)", "class_method_signature": "XYPlot.setDomainUpperBoundary(Number boundary, BoundaryMode mode)", "testcase": false, "constructor": false}, {"identifier": "setDomainLowerBoundaryMode", "parameters": "(BoundaryMode mode)", "modifiers": "protected synchronized", "return": "void", "signature": "void setDomainLowerBoundaryMode(BoundaryMode mode)", "full_signature": "protected synchronized void setDomainLowerBoundaryMode(BoundaryMode mode)", "class_method_signature": "XYPlot.setDomainLowerBoundaryMode(BoundaryMode mode)", "testcase": false, "constructor": false}, {"identifier": "setUserMinX", "parameters": "(Number minX)", "modifiers": "protected synchronized", "return": "void", "signature": "void setUserMinX(Number minX)", "full_signature": "protected synchronized void setUserMinX(Number minX)", "class_method_signature": "XYPlot.setUserMinX(Number minX)", "testcase": false, "constructor": false}, {"identifier": "setDomainLowerBoundary", "parameters": "(Number boundary, BoundaryMode mode)", "modifiers": "public synchronized", "return": "void", "signature": "void setDomainLowerBoundary(Number boundary, BoundaryMode mode)", "full_signature": "public synchronized void setDomainLowerBoundary(Number boundary, BoundaryMode mode)", "class_method_signature": "XYPlot.setDomainLowerBoundary(Number boundary, BoundaryMode mode)", "testcase": false, "constructor": false}, {"identifier": "setRangeUpperBoundaryMode", "parameters": "(BoundaryMode mode)", "modifiers": "protected synchronized", "return": "void", "signature": "void setRangeUpperBoundaryMode(BoundaryMode mode)", "full_signature": "protected synchronized void setRangeUpperBoundaryMode(BoundaryMode mode)", "class_method_signature": "XYPlot.setRangeUpperBoundaryMode(BoundaryMode mode)", "testcase": false, "constructor": false}, {"identifier": "setUserMaxY", "parameters": "(Number maxY)", "modifiers": "protected synchronized", "return": "void", "signature": "void setUserMaxY(Number maxY)", "full_signature": "protected synchronized void setUserMaxY(Number maxY)", "class_method_signature": "XYPlot.setUserMaxY(Number maxY)", "testcase": false, "constructor": false}, {"identifier": "setRangeUpperBoundary", "parameters": "(Number boundary, BoundaryMode mode)", "modifiers": "public synchronized", "return": "void", "signature": "void setRangeUpperBoundary(Number boundary, BoundaryMode mode)", "full_signature": "public synchronized void setRangeUpperBoundary(Number boundary, BoundaryMode mode)", "class_method_signature": "XYPlot.setRangeUpperBoundary(Number boundary, BoundaryMode mode)", "testcase": false, "constructor": false}, {"identifier": "setRangeLowerBoundaryMode", "parameters": "(BoundaryMode mode)", "modifiers": "protected synchronized", "return": "void", "signature": "void setRangeLowerBoundaryMode(BoundaryMode mode)", "full_signature": "protected synchronized void setRangeLowerBoundaryMode(BoundaryMode mode)", "class_method_signature": "XYPlot.setRangeLowerBoundaryMode(BoundaryMode mode)", "testcase": false, "constructor": false}, {"identifier": "setUserMinY", "parameters": "(Number minY)", "modifiers": "protected synchronized", "return": "void", "signature": "void setUserMinY(Number minY)", "full_signature": "protected synchronized void setUserMinY(Number minY)", "class_method_signature": "XYPlot.setUserMinY(Number minY)", "testcase": false, "constructor": false}, {"identifier": "setRangeLowerBoundary", "parameters": "(Number boundary, BoundaryMode mode)", "modifiers": "public synchronized", "return": "void", "signature": "void setRangeLowerBoundary(Number boundary, BoundaryMode mode)", "full_signature": "public synchronized void setRangeLowerBoundary(Number boundary, BoundaryMode mode)", "class_method_signature": "XYPlot.setRangeLowerBoundary(Number boundary, BoundaryMode mode)", "testcase": false, "constructor": false}, {"identifier": "getOrigin", "parameters": "()", "modifiers": "public", "return": "XYCoords", "signature": "XYCoords getOrigin()", "full_signature": "public XYCoords getOrigin()", "class_method_signature": "XYPlot.getOrigin()", "testcase": false, "constructor": false}, {"identifier": "getDomainOrigin", "parameters": "()", "modifiers": "public", "return": "Number", "signature": "Number getDomainOrigin()", "full_signature": "public Number getDomainOrigin()", "class_method_signature": "XYPlot.getDomainOrigin()", "testcase": false, "constructor": false}, {"identifier": "getRangeOrigin", "parameters": "()", "modifiers": "public", "return": "Number", "signature": "Number getRangeOrigin()", "full_signature": "public Number getRangeOrigin()", "class_method_signature": "XYPlot.getRangeOrigin()", "testcase": false, "constructor": false}, {"identifier": "setUserDomainOrigin", "parameters": "(Number origin)", "modifiers": "public synchronized", "return": "void", "signature": "void setUserDomainOrigin(Number origin)", "full_signature": "public synchronized void setUserDomainOrigin(Number origin)", "class_method_signature": "XYPlot.setUserDomainOrigin(Number origin)", "testcase": false, "constructor": false}, {"identifier": "setUserRangeOrigin", "parameters": "(Number origin)", "modifiers": "public synchronized", "return": "void", "signature": "void setUserRangeOrigin(Number origin)", "full_signature": "public synchronized void setUserRangeOrigin(Number origin)", "class_method_signature": "XYPlot.setUserRangeOrigin(Number origin)", "testcase": false, "constructor": false}, {"identifier": "setDomainFramingModel", "parameters": "(@NonNull XYFramingModel model)", "modifiers": "@SuppressWarnings(\"SameParameterValue\") protected", "return": "void", "signature": "void setDomainFramingModel(@NonNull XYFramingModel model)", "full_signature": "@SuppressWarnings(\"SameParameterValue\") protected void setDomainFramingModel(@NonNull XYFramingModel model)", "class_method_signature": "XYPlot.setDomainFramingModel(@NonNull XYFramingModel model)", "testcase": false, "constructor": false}, {"identifier": "setRangeFramingModel", "parameters": "(@NonNull XYFramingModel model)", "modifiers": "@SuppressWarnings(\"SameParameterValue\") protected", "return": "void", "signature": "void setRangeFramingModel(@NonNull XYFramingModel model)", "full_signature": "@SuppressWarnings(\"SameParameterValue\") protected void setRangeFramingModel(@NonNull XYFramingModel model)", "class_method_signature": "XYPlot.setRangeFramingModel(@NonNull XYFramingModel model)", "testcase": false, "constructor": false}, {"identifier": "getBounds", "parameters": "()", "modifiers": "public", "return": "RectRegion", "signature": "RectRegion getBounds()", "full_signature": "public RectRegion getBounds()", "class_method_signature": "XYPlot.getBounds()", "testcase": false, "constructor": false}, {"identifier": "addMarker", "parameters": "(YValueMarker marker)", "modifiers": "public", "return": "boolean", "signature": "boolean addMarker(YValueMarker marker)", "full_signature": "public boolean addMarker(YValueMarker marker)", "class_method_signature": "XYPlot.addMarker(YValueMarker marker)", "testcase": false, "constructor": false}, {"identifier": "removeMarker", "parameters": "(YValueMarker marker)", "modifiers": "public", "return": "YValueMarker", "signature": "YValueMarker removeMarker(YValueMarker marker)", "full_signature": "public YValueMarker removeMarker(YValueMarker marker)", "class_method_signature": "XYPlot.removeMarker(YValueMarker marker)", "testcase": false, "constructor": false}, {"identifier": "removeMarkers", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int removeMarkers()", "full_signature": "public int removeMarkers()", "class_method_signature": "XYPlot.removeMarkers()", "testcase": false, "constructor": false}, {"identifier": "removeYMarkers", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int removeYMarkers()", "full_signature": "public int removeYMarkers()", "class_method_signature": "XYPlot.removeYMarkers()", "testcase": false, "constructor": false}, {"identifier": "addMarker", "parameters": "(XValueMarker marker)", "modifiers": "public", "return": "boolean", "signature": "boolean addMarker(XValueMarker marker)", "full_signature": "public boolean addMarker(XValueMarker marker)", "class_method_signature": "XYPlot.addMarker(XValueMarker marker)", "testcase": false, "constructor": false}, {"identifier": "removeMarker", "parameters": "(XValueMarker marker)", "modifiers": "public", "return": "XValueMarker", "signature": "XValueMarker removeMarker(XValueMarker marker)", "full_signature": "public XValueMarker removeMarker(XValueMarker marker)", "class_method_signature": "XYPlot.removeMarker(XValueMarker marker)", "testcase": false, "constructor": false}, {"identifier": "removeXMarkers", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int removeXMarkers()", "full_signature": "public int removeXMarkers()", "class_method_signature": "XYPlot.removeXMarkers()", "testcase": false, "constructor": false}, {"identifier": "getYValueMarkers", "parameters": "()", "modifiers": "protected", "return": "List<YValueMarker>", "signature": "List<YValueMarker> getYValueMarkers()", "full_signature": "protected List<YValueMarker> getYValueMarkers()", "class_method_signature": "XYPlot.getYValueMarkers()", "testcase": false, "constructor": false}, {"identifier": "getXValueMarkers", "parameters": "()", "modifiers": "protected", "return": "List<XValueMarker>", "signature": "List<XValueMarker> getXValueMarkers()", "full_signature": "protected List<XValueMarker> getXValueMarkers()", "class_method_signature": "XYPlot.getXValueMarkers()", "testcase": false, "constructor": false}, {"identifier": "getInnerLimits", "parameters": "()", "modifiers": "public", "return": "RectRegion", "signature": "RectRegion getInnerLimits()", "full_signature": "public RectRegion getInnerLimits()", "class_method_signature": "XYPlot.getInnerLimits()", "testcase": false, "constructor": false}, {"identifier": "getOuterLimits", "parameters": "()", "modifiers": "public", "return": "RectRegion", "signature": "RectRegion getOuterLimits()", "full_signature": "public RectRegion getOuterLimits()", "class_method_signature": "XYPlot.getOuterLimits()", "testcase": false, "constructor": false}, {"identifier": "getDomainStepModel", "parameters": "()", "modifiers": "public", "return": "StepModel", "signature": "StepModel getDomainStepModel()", "full_signature": "public StepModel getDomainStepModel()", "class_method_signature": "XYPlot.getDomainStepModel()", "testcase": false, "constructor": false}, {"identifier": "setDomainStepModel", "parameters": "(StepModel domainStepModel)", "modifiers": "public", "return": "void", "signature": "void setDomainStepModel(StepModel domainStepModel)", "full_signature": "public void setDomainStepModel(StepModel domainStepModel)", "class_method_signature": "XYPlot.setDomainStepModel(StepModel domainStepModel)", "testcase": false, "constructor": false}, {"identifier": "getRangeStepModel", "parameters": "()", "modifiers": "public", "return": "StepModel", "signature": "StepModel getRangeStepModel()", "full_signature": "public StepModel getRangeStepModel()", "class_method_signature": "XYPlot.getRangeStepModel()", "testcase": false, "constructor": false}, {"identifier": "setRangeStepModel", "parameters": "(StepModel rangeStepModel)", "modifiers": "public", "return": "void", "signature": "void setRangeStepModel(StepModel rangeStepModel)", "full_signature": "public void setRangeStepModel(StepModel rangeStepModel)", "class_method_signature": "XYPlot.setRangeStepModel(StepModel rangeStepModel)", "testcase": false, "constructor": false}, {"identifier": "getRegistryInstance", "parameters": "()", "modifiers": "@Override protected", "return": "XYSeriesRegistry", "signature": "XYSeriesRegistry getRegistryInstance()", "full_signature": "@Override protected XYSeriesRegistry getRegistryInstance()", "class_method_signature": "XYPlot.getRegistryInstance()", "testcase": false, "constructor": false}], "file": "androidplot-core/src/main/java/com/androidplot/xy/XYPlot.java"}, "focal_method": {"identifier": "setRangeLowerBoundary", "parameters": "(Number boundary, BoundaryMode mode)", "modifiers": "public synchronized", "return": "void", "body": "public synchronized void setRangeLowerBoundary(Number boundary, BoundaryMode mode) {\n        setUserMinY((mode == BoundaryMode.FIXED) ? boundary : null);\n        setRangeLowerBoundaryMode(mode);\n        setRangeFramingModel(XYFramingModel.EDGE);\n    }", "signature": "void setRangeLowerBoundary(Number boundary, BoundaryMode mode)", "full_signature": "public synchronized void setRangeLowerBoundary(Number boundary, BoundaryMode mode)", "class_method_signature": "XYPlot.setRangeLowerBoundary(Number boundary, BoundaryMode mode)", "testcase": false, "constructor": false, "invocations": ["setUserMinY", "setRangeLowerBoundaryMode", "setRangeFramingModel"]}, "repository": {"repo_id": 1424783, "url": "https://github.com/halfhp/androidplot", "language": "Java", "is_fork": false, "fork_count": 129, "stargazer_count": 369, "size": 7178, "license": "licensed"}}