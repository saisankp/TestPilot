{"test_class": {"identifier": "FormatterTest", "superclass": "", "interfaces": "", "fields": [], "file": "hbase0.98/hbase-table-stat-0.98/src/test/java/com/kakao/hbase/stat/print/FormatterTest.java"}, "test_case": {"identifier": "testRegion", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRegion() throws Exception {\n        Formatter formatter;\n        String resultString;\n        String expected;\n        Load load = new Load(new LevelClass(RegionName.class));\n\n        load.updateChangeMap();\n        Assert.assertFalse(load.isDiffFromStart());\n\n        formatter = new Formatter(\"testTable\", load);\n        Assert.assertFalse(load.isShowRate());\n        load.toggleShowRate();\n        Assert.assertTrue(load.isShowRate());\n        resultString = formatter.buildString(false, Formatter.Type.ANSI);\n        System.out.println(resultString);\n        expected = \"Region (RS Index)  Reads      Writes     Regions    Files      FileSize   FileSizeUncomp  MemstoreSize  CompactedKVs  \\n\" +\n                \" Total: 0          N/A | N/A  N/A | N/A  N/A | N/A  N/A | N/A  N/A | N/A  N/A | N/A       N/A | N/A     N/A | N/A     \\n\";\n        Assert.assertEquals(expected, Color.clearColor(resultString, Formatter.Type.ANSI));\n    }", "signature": "void testRegion()", "full_signature": "@Test public void testRegion()", "class_method_signature": "FormatterTest.testRegion()", "testcase": true, "constructor": false, "invocations": ["updateChangeMap", "assertFalse", "isDiffFromStart", "assertFalse", "isShowRate", "toggleShowRate", "assertTrue", "isShowRate", "buildString", "println", "assertEquals", "clearColor"]}, "focal_class": {"identifier": "Formatter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final LengthMapBuilder LENGTH_MAP_BUILDER = new LengthMapBuilder();", "modifier": "private static final", "type": "LengthMapBuilder", "declarator": "LENGTH_MAP_BUILDER = new LengthMapBuilder()", "var_name": "LENGTH_MAP_BUILDER"}, {"original_string": "private static final PrintStringBuilder PRINT_STRING_BUILDER = new PrintStringBuilder();", "modifier": "private static final", "type": "PrintStringBuilder", "declarator": "PRINT_STRING_BUILDER = new PrintStringBuilder()", "var_name": "PRINT_STRING_BUILDER"}, {"original_string": "private final String tableName;", "modifier": "private final", "type": "String", "declarator": "tableName", "var_name": "tableName"}, {"original_string": "private final Load load;", "modifier": "private final", "type": "Load", "declarator": "load", "var_name": "load"}, {"original_string": "private Map<Type, String> cache = new HashMap<>();", "modifier": "private", "type": "Map<Type, String>", "declarator": "cache = new HashMap<>()", "var_name": "cache"}], "methods": [{"identifier": "Formatter", "parameters": "(String tableName, Load load)", "modifiers": "public", "return": "", "signature": " Formatter(String tableName, Load load)", "full_signature": "public  Formatter(String tableName, Load load)", "class_method_signature": "Formatter.Formatter(String tableName, Load load)", "testcase": false, "constructor": true}, {"identifier": "generateLengthMap", "parameters": "(Type formatType)", "modifiers": "private", "return": "Map<String, Length>", "signature": "Map<String, Length> generateLengthMap(Type formatType)", "full_signature": "private Map<String, Length> generateLengthMap(Type formatType)", "class_method_signature": "Formatter.generateLengthMap(Type formatType)", "testcase": false, "constructor": false}, {"identifier": "toggleShowChangedOnly", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean toggleShowChangedOnly()", "full_signature": "public boolean toggleShowChangedOnly()", "class_method_signature": "Formatter.toggleShowChangedOnly()", "testcase": false, "constructor": false}, {"identifier": "toggleDiffFromStart", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean toggleDiffFromStart()", "full_signature": "public boolean toggleDiffFromStart()", "class_method_signature": "Formatter.toggleDiffFromStart()", "testcase": false, "constructor": false}, {"identifier": "createRunInformation", "parameters": "()", "modifiers": "private", "return": "java.lang.StringBuilder", "signature": "java.lang.StringBuilder createRunInformation()", "full_signature": "private java.lang.StringBuilder createRunInformation()", "class_method_signature": "Formatter.createRunInformation()", "testcase": false, "constructor": false}, {"identifier": "appendStat", "parameters": "(StringBuilder sb, Type formatType)", "modifiers": "private", "return": "void", "signature": "void appendStat(StringBuilder sb, Type formatType)", "full_signature": "private void appendStat(StringBuilder sb, Type formatType)", "class_method_signature": "Formatter.appendStat(StringBuilder sb, Type formatType)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Formatter.toString()", "testcase": false, "constructor": false}, {"identifier": "toHtmlString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toHtmlString()", "full_signature": "public String toHtmlString()", "class_method_signature": "Formatter.toHtmlString()", "testcase": false, "constructor": false}, {"identifier": "buildString", "parameters": "(boolean withRunInformation, Type formatType)", "modifiers": "@VisibleForTesting public", "return": "String", "signature": "String buildString(boolean withRunInformation, Type formatType)", "full_signature": "@VisibleForTesting public String buildString(boolean withRunInformation, Type formatType)", "class_method_signature": "Formatter.buildString(boolean withRunInformation, Type formatType)", "testcase": false, "constructor": false}, {"identifier": "buildStringInternal", "parameters": "(boolean withRunInformation, Type formatType)", "modifiers": "private", "return": "String", "signature": "String buildStringInternal(boolean withRunInformation, Type formatType)", "full_signature": "private String buildStringInternal(boolean withRunInformation, Type formatType)", "class_method_signature": "Formatter.buildStringInternal(boolean withRunInformation, Type formatType)", "testcase": false, "constructor": false}], "file": "hbase0.98/hbase-table-stat-0.98/src/main/java/com/kakao/hbase/stat/print/Formatter.java"}, "focal_method": {"identifier": "buildString", "parameters": "(boolean withRunInformation, Type formatType)", "modifiers": "@VisibleForTesting public", "return": "String", "body": "@VisibleForTesting\n    public String buildString(boolean withRunInformation, Type formatType) {\n        if (load.isUpdating()) {\n            return cache.get(formatType);\n        } else {\n            cache.put(Type.ANSI, buildStringInternal(withRunInformation, Type.ANSI));\n            cache.put(Type.HTML, buildStringInternal(withRunInformation, Type.HTML));\n            return cache.get(formatType);\n        }\n    }", "signature": "String buildString(boolean withRunInformation, Type formatType)", "full_signature": "@VisibleForTesting public String buildString(boolean withRunInformation, Type formatType)", "class_method_signature": "Formatter.buildString(boolean withRunInformation, Type formatType)", "testcase": false, "constructor": false, "invocations": ["isUpdating", "get", "put", "buildStringInternal", "put", "buildStringInternal", "get"]}, "repository": {"repo_id": 46396068, "url": "https://github.com/kakao/hbase-tools", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 49, "size": 1758, "license": "licensed"}}