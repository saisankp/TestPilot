{"test_class": {"identifier": "JmsPropertyReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static String PROPERTY_PREFIX = \"jms.test\";", "modifier": "private static", "type": "String", "declarator": "PROPERTY_PREFIX = \"jms.test\"", "var_name": "PROPERTY_PREFIX"}, {"original_string": "private static String DEFAULT_QUEUE = \"default-queue\";", "modifier": "private static", "type": "String", "declarator": "DEFAULT_QUEUE = \"default-queue\"", "var_name": "DEFAULT_QUEUE"}, {"original_string": "private static boolean DEFAULT_USE_BACKOFF = true;", "modifier": "private static", "type": "boolean", "declarator": "DEFAULT_USE_BACKOFF = true", "var_name": "DEFAULT_USE_BACKOFF"}, {"original_string": "private static String CUSTOM_QUEUE = \"custom-queue\";", "modifier": "private static", "type": "String", "declarator": "CUSTOM_QUEUE = \"custom-queue\"", "var_name": "CUSTOM_QUEUE"}, {"original_string": "private static boolean CUSTOM_USE_BACKOFF = false;", "modifier": "private static", "type": "boolean", "declarator": "CUSTOM_USE_BACKOFF = false", "var_name": "CUSTOM_USE_BACKOFF"}, {"original_string": "@Mock\n    Environment environment;", "modifier": "@Mock", "type": "Environment", "declarator": "environment", "var_name": "environment"}, {"original_string": "@Mock\n    JmsConfiguration defaultJmsConfiguration;", "modifier": "@Mock", "type": "JmsConfiguration", "declarator": "defaultJmsConfiguration", "var_name": "defaultJmsConfiguration"}, {"original_string": "private JmsPropertyReader jmsPropertyReader;", "modifier": "private", "type": "JmsPropertyReader", "declarator": "jmsPropertyReader", "var_name": "jmsPropertyReader"}], "file": "osgp/shared/shared/src/test/java/org/opensmartgridplatform/shared/application/config/messaging/JmsPropertyReaderTest.java"}, "test_case": {"identifier": "testGetCustomBooleanValueWhenCustomPropertyExists", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetCustomBooleanValueWhenCustomPropertyExists() {\n        // Arrange\n        final String property = \"use.exponential.back.off\";\n        final String propertyName = PROPERTY_PREFIX + \".\" + property;\n        when(this.environment.getProperty(propertyName, boolean.class)).thenReturn(CUSTOM_USE_BACKOFF);\n\n        // Act\n        final boolean actual = this.jmsPropertyReader.get(property, boolean.class);\n\n        // Assert\n        verify(this.environment).getProperty(propertyName, boolean.class);\n        verify(this.defaultJmsConfiguration, never()).isUseExponentialBackOff();\n        assertThat(actual).isEqualTo(CUSTOM_USE_BACKOFF);\n    }", "signature": "void testGetCustomBooleanValueWhenCustomPropertyExists()", "full_signature": "@Test public void testGetCustomBooleanValueWhenCustomPropertyExists()", "class_method_signature": "JmsPropertyReaderTest.testGetCustomBooleanValueWhenCustomPropertyExists()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getProperty", "get", "getProperty", "verify", "isUseExponentialBackOff", "verify", "never", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "JmsPropertyReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(JmsPropertyReader.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(JmsPropertyReader.class)", "var_name": "LOGGER"}, {"original_string": "private final Environment environment;", "modifier": "private final", "type": "Environment", "declarator": "environment", "var_name": "environment"}, {"original_string": "private final String propertyPrefix;", "modifier": "private final", "type": "String", "declarator": "propertyPrefix", "var_name": "propertyPrefix"}, {"original_string": "private final JmsConfiguration defaultJmsConfiguration;", "modifier": "private final", "type": "JmsConfiguration", "declarator": "defaultJmsConfiguration", "var_name": "defaultJmsConfiguration"}], "methods": [{"identifier": "JmsPropertyReader", "parameters": "(final Environment environment, final String propertyPrefix,\n            final JmsConfiguration defaultJmsConfiguration)", "modifiers": "public", "return": "", "signature": " JmsPropertyReader(final Environment environment, final String propertyPrefix,\n            final JmsConfiguration defaultJmsConfiguration)", "full_signature": "public  JmsPropertyReader(final Environment environment, final String propertyPrefix,\n            final JmsConfiguration defaultJmsConfiguration)", "class_method_signature": "JmsPropertyReader.JmsPropertyReader(final Environment environment, final String propertyPrefix,\n            final JmsConfiguration defaultJmsConfiguration)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "(final String propertyName, final Class<T> targetType)", "modifiers": "public", "return": "T", "signature": "T get(final String propertyName, final Class<T> targetType)", "full_signature": "public T get(final String propertyName, final Class<T> targetType)", "class_method_signature": "JmsPropertyReader.get(final String propertyName, final Class<T> targetType)", "testcase": false, "constructor": false}, {"identifier": "getDefault", "parameters": "(final String propertyName, final Class<T> targetType)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "T", "signature": "T getDefault(final String propertyName, final Class<T> targetType)", "full_signature": "@SuppressWarnings(\"unchecked\") private T getDefault(final String propertyName, final Class<T> targetType)", "class_method_signature": "JmsPropertyReader.getDefault(final String propertyName, final Class<T> targetType)", "testcase": false, "constructor": false}, {"identifier": "convertPropertyNameToMethodName", "parameters": "(final String propertyName, final Class<T> targetType)", "modifiers": "private static", "return": "String", "signature": "String convertPropertyNameToMethodName(final String propertyName, final Class<T> targetType)", "full_signature": "private static String convertPropertyNameToMethodName(final String propertyName, final Class<T> targetType)", "class_method_signature": "JmsPropertyReader.convertPropertyNameToMethodName(final String propertyName, final Class<T> targetType)", "testcase": false, "constructor": false}], "file": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/application/config/messaging/JmsPropertyReader.java"}, "focal_method": {"identifier": "get", "parameters": "(final String propertyName, final Class<T> targetType)", "modifiers": "public", "return": "T", "body": "public <T> T get(final String propertyName, final Class<T> targetType) {\n        LOGGER.debug(\"Trying to find property {}.{}\", this.propertyPrefix, propertyName);\n        final String fullPropertyName = this.propertyPrefix + \".\" + propertyName;\n        T property = this.environment.getProperty(fullPropertyName, targetType);\n\n        if (property == null) {\n            LOGGER.debug(\"Property {} not found, trying default property.\", fullPropertyName);\n            property = this.getDefault(propertyName, targetType);\n            LOGGER.debug(\"Found default value {} for property {}\", property, propertyName);\n        } else {\n            LOGGER.debug(\"Found value {} for property {}.{}\", property, this.propertyPrefix, propertyName);\n        }\n\n        return property;\n    }", "signature": "T get(final String propertyName, final Class<T> targetType)", "full_signature": "public T get(final String propertyName, final Class<T> targetType)", "class_method_signature": "JmsPropertyReader.get(final String propertyName, final Class<T> targetType)", "testcase": false, "constructor": false, "invocations": ["debug", "getProperty", "debug", "getDefault", "debug", "debug"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}