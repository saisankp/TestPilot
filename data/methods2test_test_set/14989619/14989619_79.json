{"test_class": {"identifier": "MultiSourceAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mocked\n\tprivate MetricRegistry registry;", "modifier": "@Mocked\n\tprivate", "type": "MetricRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "@Mocked\n\tprivate DataSource dataSource;", "modifier": "@Mocked\n\tprivate", "type": "DataSource", "declarator": "dataSource", "var_name": "dataSource"}, {"original_string": "@Mocked\n\tprivate JsonSourceAdapter jsonSourceAdapter;", "modifier": "@Mocked\n\tprivate", "type": "JsonSourceAdapter", "declarator": "jsonSourceAdapter", "var_name": "jsonSourceAdapter"}, {"original_string": "@Mocked\n\tprivate SourceAdapterFactory sourceAdapterFactory;", "modifier": "@Mocked\n\tprivate", "type": "SourceAdapterFactory", "declarator": "sourceAdapterFactory", "var_name": "sourceAdapterFactory"}, {"original_string": "private static final ArrayNode JSON_ARRAY_1;", "modifier": "private static final", "type": "ArrayNode", "declarator": "JSON_ARRAY_1", "var_name": "JSON_ARRAY_1"}, {"original_string": "private static final ArrayNode JSON_ARRAY_2;", "modifier": "private static final", "type": "ArrayNode", "declarator": "JSON_ARRAY_2", "var_name": "JSON_ARRAY_2"}], "file": "server/src/test/java/org/jvalue/ods/processor/adapter/MultiSourceAdapterTest.java"}, "test_case": {"identifier": "testWithOneSource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testWithOneSource() throws IOException {\n\t\tArrayList<LinkedHashMap<String, Object>> adapters = createAdapterList(1);\n\n\t\tnew Expectations() {{\n\t\t\tjsonSourceAdapter.iterator(); result = JSON_ARRAY_1.iterator();\n\t\t\tsourceAdapterFactory.createJsonSourceAdapter(dataSource, anyString); result = jsonSourceAdapter;\n\t\t}};\n\n\t\tSourceAdapter multiSourceAdapter = new MultiSourceAdapter(sourceAdapterFactory, dataSource, adapters, registry);\n\t\tObjectNode result = multiSourceAdapter.iterator().next();\n\n\t\tAssert.assertFalse(result.get(\"sourceNr1\").isNull());\n\t\tAssert.assertEquals(JSON_ARRAY_1, result.get(\"sourceNr1\"));\n\t}", "signature": "void testWithOneSource()", "full_signature": "@Test public void testWithOneSource()", "class_method_signature": "MultiSourceAdapterTest.testWithOneSource()", "testcase": true, "constructor": false, "invocations": ["createAdapterList", "iterator", "iterator", "createJsonSourceAdapter", "next", "iterator", "assertFalse", "isNull", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "MultiSourceAdapter", "superclass": "", "interfaces": "implements SourceAdapter", "fields": [{"original_string": "private final SourceAdapterFactory adapterFactory;", "modifier": "private final", "type": "SourceAdapterFactory", "declarator": "adapterFactory", "var_name": "adapterFactory"}, {"original_string": "private final DataSource dataSource;", "modifier": "private final", "type": "DataSource", "declarator": "dataSource", "var_name": "dataSource"}, {"original_string": "private final MetricRegistry registry;", "modifier": "private final", "type": "MetricRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private final Map<String, SourceAdapter> adapterMap = new HashMap<>();", "modifier": "private final", "type": "Map<String, SourceAdapter>", "declarator": "adapterMap = new HashMap<>()", "var_name": "adapterMap"}], "methods": [{"identifier": "MultiSourceAdapter", "parameters": "(\n\t\tSourceAdapterFactory adapterFactory,\n\t\t@Assisted DataSource dataSource,\n\t\t@Assisted(SourceAdapterFactory.ARGUMENT_MULTI_SOURCE) ArrayList<LinkedHashMap<String, Object>> sourceAdapters,\n\t\tMetricRegistry registry)", "modifiers": "@Inject public", "return": "", "signature": " MultiSourceAdapter(\n\t\tSourceAdapterFactory adapterFactory,\n\t\t@Assisted DataSource dataSource,\n\t\t@Assisted(SourceAdapterFactory.ARGUMENT_MULTI_SOURCE) ArrayList<LinkedHashMap<String, Object>> sourceAdapters,\n\t\tMetricRegistry registry)", "full_signature": "@Inject public  MultiSourceAdapter(\n\t\tSourceAdapterFactory adapterFactory,\n\t\t@Assisted DataSource dataSource,\n\t\t@Assisted(SourceAdapterFactory.ARGUMENT_MULTI_SOURCE) ArrayList<LinkedHashMap<String, Object>> sourceAdapters,\n\t\tMetricRegistry registry)", "class_method_signature": "MultiSourceAdapter.MultiSourceAdapter(\n\t\tSourceAdapterFactory adapterFactory,\n\t\t@Assisted DataSource dataSource,\n\t\t@Assisted(SourceAdapterFactory.ARGUMENT_MULTI_SOURCE) ArrayList<LinkedHashMap<String, Object>> sourceAdapters,\n\t\tMetricRegistry registry)", "testcase": false, "constructor": true}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<ObjectNode>", "signature": "Iterator<ObjectNode> iterator()", "full_signature": "@Override public Iterator<ObjectNode> iterator()", "class_method_signature": "MultiSourceAdapter.iterator()", "testcase": false, "constructor": false}, {"identifier": "createAdapter", "parameters": "(ProcessorReference reference)", "modifiers": "private", "return": "SourceAdapter", "signature": "SourceAdapter createAdapter(ProcessorReference reference)", "full_signature": "private SourceAdapter createAdapter(ProcessorReference reference)", "class_method_signature": "MultiSourceAdapter.createAdapter(ProcessorReference reference)", "testcase": false, "constructor": false}, {"identifier": "getCreationMethod", "parameters": "(String methodName)", "modifiers": "private", "return": "Method", "signature": "Method getCreationMethod(String methodName)", "full_signature": "private Method getCreationMethod(String methodName)", "class_method_signature": "MultiSourceAdapter.getCreationMethod(String methodName)", "testcase": false, "constructor": false}, {"identifier": "addDataSourceAsFirstArgument", "parameters": "(List<Object> arguments, DataSource dataSource, Method method)", "modifiers": "private", "return": "List<Object>", "signature": "List<Object> addDataSourceAsFirstArgument(List<Object> arguments, DataSource dataSource, Method method)", "full_signature": "private List<Object> addDataSourceAsFirstArgument(List<Object> arguments, DataSource dataSource, Method method)", "class_method_signature": "MultiSourceAdapter.addDataSourceAsFirstArgument(List<Object> arguments, DataSource dataSource, Method method)", "testcase": false, "constructor": false}, {"identifier": "addCustomArguments", "parameters": "(List<Object> arguments, ProcessorReference reference, Method method)", "modifiers": "private", "return": "List<Object>", "signature": "List<Object> addCustomArguments(List<Object> arguments, ProcessorReference reference, Method method)", "full_signature": "private List<Object> addCustomArguments(List<Object> arguments, ProcessorReference reference, Method method)", "class_method_signature": "MultiSourceAdapter.addCustomArguments(List<Object> arguments, ProcessorReference reference, Method method)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/jvalue/ods/processor/adapter/MultiSourceAdapter.java"}, "focal_method": {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<ObjectNode>", "body": "@Override\n\tpublic Iterator<ObjectNode> iterator() throws SourceAdapterException {\n\t\tList<ObjectNode> results = new ArrayList<>();\n\n\t\tObjectNode resultNode = JsonNodeFactory.instance.objectNode();\n\t\tfor (Map.Entry<String, SourceAdapter> entry : adapterMap.entrySet()) {\n\t\t\tString alias = entry.getKey();\n\t\t\tSourceAdapter adapter = entry.getValue();\n\n\t\t\tJsonNode adapterNode = JsonMapper.valueToTree(Lists.newArrayList(adapter.iterator()));\n\t\t\tresultNode.set(alias, adapterNode);\n\t\t}\n\n\t\tresults.add(resultNode);\n\t\treturn results.iterator();\n\t}", "signature": "Iterator<ObjectNode> iterator()", "full_signature": "@Override public Iterator<ObjectNode> iterator()", "class_method_signature": "MultiSourceAdapter.iterator()", "testcase": false, "constructor": false, "invocations": ["objectNode", "entrySet", "getKey", "getValue", "valueToTree", "newArrayList", "iterator", "set", "add", "iterator"]}, "repository": {"repo_id": 14989619, "url": "https://github.com/jvalue/open-data-service-v1", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 4525, "license": "licensed"}}