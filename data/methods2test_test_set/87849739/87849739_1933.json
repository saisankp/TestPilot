{"test_class": {"identifier": "PurgeNamespaceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NAMESPACE = \"com.example.test\";", "modifier": "private static final", "type": "String", "declarator": "NAMESPACE = \"com.example.test\"", "var_name": "NAMESPACE"}, {"original_string": "private static JsonObject knownJsonRepresentation;", "modifier": "private static", "type": "JsonObject", "declarator": "knownJsonRepresentation", "var_name": "knownJsonRepresentation"}, {"original_string": "private static DittoHeaders dittoHeaders;", "modifier": "private static", "type": "DittoHeaders", "declarator": "dittoHeaders", "var_name": "dittoHeaders"}, {"original_string": "private PurgeNamespace underTest;", "modifier": "private", "type": "PurgeNamespace", "declarator": "underTest", "var_name": "underTest"}], "file": "signals/commands/namespaces/src/test/java/org/eclipse/ditto/signals/commands/namespaces/PurgeNamespaceTest.java"}, "test_case": {"identifier": "getEntityIdReturnsNamespace", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getEntityIdReturnsNamespace() {\n        assertThat(underTest.getEntityId().toString()).isEqualTo(underTest.getNamespace());\n    }", "signature": "void getEntityIdReturnsNamespace()", "full_signature": "@Test public void getEntityIdReturnsNamespace()", "class_method_signature": "PurgeNamespaceTest.getEntityIdReturnsNamespace()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "toString", "getEntityId", "getNamespace"]}, "focal_class": {"identifier": "PurgeNamespace", "superclass": "extends AbstractNamespaceCommand<PurgeNamespace>", "interfaces": "", "fields": [{"original_string": "static final String NAME = \"purgeNamespace\";", "modifier": "static final", "type": "String", "declarator": "NAME = \"purgeNamespace\"", "var_name": "NAME"}, {"original_string": "public static final String TYPE = TYPE_PREFIX + NAME;", "modifier": "public static final", "type": "String", "declarator": "TYPE = TYPE_PREFIX + NAME", "var_name": "TYPE"}], "methods": [{"identifier": "PurgeNamespace", "parameters": "(final CharSequence namespace, final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "", "signature": " PurgeNamespace(final CharSequence namespace, final DittoHeaders dittoHeaders)", "full_signature": "private  PurgeNamespace(final CharSequence namespace, final DittoHeaders dittoHeaders)", "class_method_signature": "PurgeNamespace.PurgeNamespace(final CharSequence namespace, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final CharSequence namespace, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "PurgeNamespace", "signature": "PurgeNamespace of(final CharSequence namespace, final DittoHeaders dittoHeaders)", "full_signature": "public static PurgeNamespace of(final CharSequence namespace, final DittoHeaders dittoHeaders)", "class_method_signature": "PurgeNamespace.of(final CharSequence namespace, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "PurgeNamespace", "signature": "PurgeNamespace fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "full_signature": "public static PurgeNamespace fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "class_method_signature": "PurgeNamespace.fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "setDittoHeaders", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "@Override public", "return": "PurgeNamespace", "signature": "PurgeNamespace setDittoHeaders(final DittoHeaders dittoHeaders)", "full_signature": "@Override public PurgeNamespace setDittoHeaders(final DittoHeaders dittoHeaders)", "class_method_signature": "PurgeNamespace.setDittoHeaders(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "canEqual", "parameters": "(@Nullable final Object other)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean canEqual(@Nullable final Object other)", "full_signature": "@Override protected boolean canEqual(@Nullable final Object other)", "class_method_signature": "PurgeNamespace.canEqual(@Nullable final Object other)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PurgeNamespace.toString()", "testcase": false, "constructor": false}], "file": "signals/commands/namespaces/src/main/java/org/eclipse/ditto/signals/commands/namespaces/PurgeNamespace.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        return getClass().getSimpleName() + \"[\" + super.toString() + \"]\";\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PurgeNamespace.toString()", "testcase": false, "constructor": false, "invocations": ["getSimpleName", "getClass", "toString"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}