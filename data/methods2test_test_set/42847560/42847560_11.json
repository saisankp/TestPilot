{"test_class": {"identifier": "MediaTypeHeaderProviderTest", "superclass": "extends Assert", "interfaces": "", "fields": [], "file": "jaxrs-delegates/src/test/java/org/wso2/msf4j/delegates/MediaTypeHeaderProviderTest.java"}, "test_case": {"identifier": "testSimpleToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSimpleToString() {\n        MediaTypeHeaderProvider provider =\n                new MediaTypeHeaderProvider();\n\n        assertEquals(\"text/plain\", provider.toString(new MediaType(\"text\", \"plain\")),\n                \"simple media type is not serialized\");\n    }", "signature": "void testSimpleToString()", "full_signature": "@Test public void testSimpleToString()", "class_method_signature": "MediaTypeHeaderProviderTest.testSimpleToString()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toString"]}, "focal_class": {"identifier": "MediaTypeHeaderProvider", "superclass": "", "interfaces": "implements HeaderDelegate<MediaType>", "fields": [], "methods": [{"identifier": "fromString", "parameters": "(String mType)", "modifiers": "public", "return": "MediaType", "signature": "MediaType fromString(String mType)", "full_signature": "public MediaType fromString(String mType)", "class_method_signature": "MediaTypeHeaderProvider.fromString(String mType)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(MediaType type)", "modifiers": "public", "return": "String", "signature": "String toString(MediaType type)", "full_signature": "public String toString(MediaType type)", "class_method_signature": "MediaTypeHeaderProvider.toString(MediaType type)", "testcase": false, "constructor": false}], "file": "jaxrs-delegates/src/main/java/org/wso2/msf4j/delegates/MediaTypeHeaderProvider.java"}, "focal_method": {"identifier": "toString", "parameters": "(MediaType type)", "modifiers": "public", "return": "String", "body": "public String toString(MediaType type) {\n        if (type == null) {\n            throw new IllegalArgumentException(\"MediaType can not be null\");\n        }\n        return type.getType() + '/' + type.getSubtype();\n    }", "signature": "String toString(MediaType type)", "full_signature": "public String toString(MediaType type)", "class_method_signature": "MediaTypeHeaderProvider.toString(MediaType type)", "testcase": false, "constructor": false, "invocations": ["getType", "getSubtype"]}, "repository": {"repo_id": 42847560, "url": "https://github.com/wso2/msf4j", "language": "Java", "is_fork": false, "fork_count": 337, "stargazer_count": 345, "size": 33285, "license": "licensed"}}