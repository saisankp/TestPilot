{"test_class": {"identifier": "SchemaResolverTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/library/xml/src/test/java/org/geotools/xml/resolver/SchemaResolverTest.java"}, "test_case": {"identifier": "exampleHttp", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void exampleHttp() {\n        String path = SchemaResolver\n                .getSimpleHttpResourcePath(\"http://schemas.example.org/exampleml/exml.xsd\");\n        Assert.assertEquals(\"/org/example/schemas/exampleml/exml.xsd\", path);\n    }", "signature": "void exampleHttp()", "full_signature": "@Test public void exampleHttp()", "class_method_signature": "SchemaResolverTest.exampleHttp()", "testcase": true, "constructor": false, "invocations": ["getSimpleHttpResourcePath", "assertEquals"]}, "focal_class": {"identifier": "SchemaResolver", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = org.geotools.util.logging.Logging\n            .getLogger(SchemaResolver.class.getPackage().getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = org.geotools.util.logging.Logging\n            .getLogger(SchemaResolver.class.getPackage().getName())", "var_name": "LOGGER"}, {"original_string": "private SchemaCatalog catalog;", "modifier": "private", "type": "SchemaCatalog", "declarator": "catalog", "var_name": "catalog"}, {"original_string": "private boolean classpath = true;", "modifier": "private", "type": "boolean", "declarator": "classpath = true", "var_name": "classpath"}, {"original_string": "private SchemaCache cache;", "modifier": "private", "type": "SchemaCache", "declarator": "cache", "var_name": "cache"}, {"original_string": "private Map<String, String> resolvedLocationToOriginalLocationMap = new ConcurrentHashMap<String, String>();", "modifier": "private", "type": "Map<String, String>", "declarator": "resolvedLocationToOriginalLocationMap = new ConcurrentHashMap<String, String>()", "var_name": "resolvedLocationToOriginalLocationMap"}], "methods": [{"identifier": "SchemaResolver", "parameters": "(SchemaCatalog catalog, boolean classpath, SchemaCache cache)", "modifiers": "public", "return": "", "signature": " SchemaResolver(SchemaCatalog catalog, boolean classpath, SchemaCache cache)", "full_signature": "public  SchemaResolver(SchemaCatalog catalog, boolean classpath, SchemaCache cache)", "class_method_signature": "SchemaResolver.SchemaResolver(SchemaCatalog catalog, boolean classpath, SchemaCache cache)", "testcase": false, "constructor": true}, {"identifier": "SchemaResolver", "parameters": "(SchemaCatalog catalog, SchemaCache cache)", "modifiers": "public", "return": "", "signature": " SchemaResolver(SchemaCatalog catalog, SchemaCache cache)", "full_signature": "public  SchemaResolver(SchemaCatalog catalog, SchemaCache cache)", "class_method_signature": "SchemaResolver.SchemaResolver(SchemaCatalog catalog, SchemaCache cache)", "testcase": false, "constructor": true}, {"identifier": "SchemaResolver", "parameters": "()", "modifiers": "public", "return": "", "signature": " SchemaResolver()", "full_signature": "public  SchemaResolver()", "class_method_signature": "SchemaResolver.SchemaResolver()", "testcase": false, "constructor": true}, {"identifier": "SchemaResolver", "parameters": "(SchemaCatalog catalog)", "modifiers": "public", "return": "", "signature": " SchemaResolver(SchemaCatalog catalog)", "full_signature": "public  SchemaResolver(SchemaCatalog catalog)", "class_method_signature": "SchemaResolver.SchemaResolver(SchemaCatalog catalog)", "testcase": false, "constructor": true}, {"identifier": "SchemaResolver", "parameters": "(SchemaCache cache)", "modifiers": "public", "return": "", "signature": " SchemaResolver(SchemaCache cache)", "full_signature": "public  SchemaResolver(SchemaCache cache)", "class_method_signature": "SchemaResolver.SchemaResolver(SchemaCache cache)", "testcase": false, "constructor": true}, {"identifier": "resolve", "parameters": "(String location, String context)", "modifiers": "public", "return": "String", "signature": "String resolve(String location, String context)", "full_signature": "public String resolve(String location, String context)", "class_method_signature": "SchemaResolver.resolve(String location, String context)", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(String location)", "modifiers": "public", "return": "String", "signature": "String resolve(String location)", "full_signature": "public String resolve(String location)", "class_method_signature": "SchemaResolver.resolve(String location)", "testcase": false, "constructor": false}, {"identifier": "getSimpleHttpResourcePath", "parameters": "(String location)", "modifiers": "public static", "return": "String", "signature": "String getSimpleHttpResourcePath(String location)", "full_signature": "public static String getSimpleHttpResourcePath(String location)", "class_method_signature": "SchemaResolver.getSimpleHttpResourcePath(String location)", "testcase": false, "constructor": false}, {"identifier": "getSimpleHttpResourcePath", "parameters": "(String location, boolean keepQuery)", "modifiers": "public static", "return": "String", "signature": "String getSimpleHttpResourcePath(String location, boolean keepQuery)", "full_signature": "public static String getSimpleHttpResourcePath(String location, boolean keepQuery)", "class_method_signature": "SchemaResolver.getSimpleHttpResourcePath(String location, boolean keepQuery)", "testcase": false, "constructor": false}, {"identifier": "getSimpleHttpResourcePath", "parameters": "(URI location)", "modifiers": "public static", "return": "String", "signature": "String getSimpleHttpResourcePath(URI location)", "full_signature": "public static String getSimpleHttpResourcePath(URI location)", "class_method_signature": "SchemaResolver.getSimpleHttpResourcePath(URI location)", "testcase": false, "constructor": false}, {"identifier": "getSimpleHttpResourcePath", "parameters": "(URI location, boolean keepQuery)", "modifiers": "public static", "return": "String", "signature": "String getSimpleHttpResourcePath(URI location, boolean keepQuery)", "full_signature": "public static String getSimpleHttpResourcePath(URI location, boolean keepQuery)", "class_method_signature": "SchemaResolver.getSimpleHttpResourcePath(URI location, boolean keepQuery)", "testcase": false, "constructor": false}, {"identifier": "getClasspathResourceUrl", "parameters": "(String location)", "modifiers": "public static", "return": "URL", "signature": "URL getClasspathResourceUrl(String location)", "full_signature": "public static URL getClasspathResourceUrl(String location)", "class_method_signature": "SchemaResolver.getClasspathResourceUrl(String location)", "testcase": false, "constructor": false}, {"identifier": "resolveClasspathLocation", "parameters": "(String location)", "modifiers": "public static", "return": "String", "signature": "String resolveClasspathLocation(String location)", "full_signature": "public static String resolveClasspathLocation(String location)", "class_method_signature": "SchemaResolver.resolveClasspathLocation(String location)", "testcase": false, "constructor": false}, {"identifier": "stringToMD5String", "parameters": "(String message)", "modifiers": "private static", "return": "String", "signature": "String stringToMD5String(String message)", "full_signature": "private static String stringToMD5String(String message)", "class_method_signature": "SchemaResolver.stringToMD5String(String message)", "testcase": false, "constructor": false}], "file": "modules/library/xml/src/main/java/org/geotools/xml/resolver/SchemaResolver.java"}, "focal_method": {"identifier": "getSimpleHttpResourcePath", "parameters": "(String location)", "modifiers": "public static", "return": "String", "body": "public static String getSimpleHttpResourcePath(String location) {\n        return getSimpleHttpResourcePath(location, false);\n    }", "signature": "String getSimpleHttpResourcePath(String location)", "full_signature": "public static String getSimpleHttpResourcePath(String location)", "class_method_signature": "SchemaResolver.getSimpleHttpResourcePath(String location)", "testcase": false, "constructor": false, "invocations": ["getSimpleHttpResourcePath"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}