{"test_class": {"identifier": "FutureUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "elrond-core/src/test/java/network/elrond/core/FutureUtilTest.java"}, "test_case": {"identifier": "testFutureUtilNoTimeout", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFutureUtilNoTimeout() throws Exception{\n        long startMillis = System.currentTimeMillis();\n\n        int value = FutureUtil.get(() ->{\n            ThreadUtil.sleep(1000);\n            return 1;\n        });\n\n        long endMillis = System.currentTimeMillis();\n\n        System.out.println(String.format(\"Value: %d, took %d ms\", value, endMillis-startMillis));\n\n        TestCase.assertTrue(endMillis-startMillis >= 1000);\n        TestCase.assertEquals(1, value);\n    }", "signature": "void testFutureUtilNoTimeout()", "full_signature": "@Test public void testFutureUtilNoTimeout()", "class_method_signature": "FutureUtilTest.testFutureUtilNoTimeout()", "testcase": true, "constructor": false, "invocations": ["currentTimeMillis", "get", "sleep", "currentTimeMillis", "println", "format", "assertTrue", "assertEquals"]}, "focal_class": {"identifier": "FutureUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "get", "parameters": "(Task<E> task)", "modifiers": "public static", "return": "E", "signature": "E get(Task<E> task)", "full_signature": "public static E get(Task<E> task)", "class_method_signature": "FutureUtil.get(Task<E> task)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Task<E> task, long timeout)", "modifiers": "public static", "return": "E", "signature": "E get(Task<E> task, long timeout)", "full_signature": "public static E get(Task<E> task, long timeout)", "class_method_signature": "FutureUtil.get(Task<E> task, long timeout)", "testcase": false, "constructor": false}], "file": "elrond-core/src/main/java/network/elrond/core/FutureUtil.java"}, "focal_method": {"identifier": "get", "parameters": "(Task<E> task)", "modifiers": "public static", "return": "E", "body": "public static <E> E get(Task<E> task) throws Exception {\n        return get(task, 30L);\n    }", "signature": "E get(Task<E> task)", "full_signature": "public static E get(Task<E> task)", "class_method_signature": "FutureUtil.get(Task<E> task)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 132454935, "url": "https://github.com/ElrondNetwork/elrond-node-prototype", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 16, "size": 16635, "license": "licensed"}}