{"test_class": {"identifier": "DependencyPingerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private WallClock wallClock = new DefaultWallClock();", "modifier": "private", "type": "WallClock", "declarator": "wallClock = new DefaultWallClock()", "var_name": "wallClock"}, {"original_string": "private SystemReporter systemReporter = new SystemReporter(wallClock);", "modifier": "private", "type": "SystemReporter", "declarator": "systemReporter = new SystemReporter(wallClock)", "var_name": "systemReporter"}], "file": "status-core/src/test/java/com/indeed/status/core/DependencyPingerTest.java"}, "test_case": {"identifier": "testListeners", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testListeners() {\n        final StatusUpdateListener listener1 = EasyMock.createMock(StatusUpdateListener.class);\n        final StatusUpdateListener listener2 = EasyMock.createMock(StatusUpdateListener.class);\n        final StatusUpdateListener listener3 = EasyMock.createMock(StatusUpdateListener.class);\n        final ControlledDependency dependency = ControlledDependency.build();\n        dependency.setInError(true);\n        final DependencyPinger pinger = new DependencyPinger(MoreExecutors.newDirectExecutorService(), dependency, systemReporter);\n        pinger.addListener(listener1);\n        pinger.addListener(listener2);\n        pinger.addListener(listener3);\n        final Iterator<StatusUpdateListener> actual = pinger.listeners();\n        assertEquals(ImmutableList.of(listener1, listener2, listener3), Arrays.asList(Iterators.toArray(actual, StatusUpdateListener.class)));\n\n        // verify no ConcurrentModificationException\n        for (final Iterator<StatusUpdateListener> it = pinger.listeners(); it.hasNext() ; it.next()) {\n            pinger.addListener(EasyMock.createMock(StatusUpdateListener.class));\n        }\n    }", "signature": "void testListeners()", "full_signature": "@Test public void testListeners()", "class_method_signature": "DependencyPingerTest.testListeners()", "testcase": true, "constructor": false, "invocations": ["createMock", "createMock", "createMock", "build", "setInError", "newDirectExecutorService", "addListener", "addListener", "addListener", "listeners", "assertEquals", "of", "asList", "toArray", "listeners", "hasNext", "next", "addListener", "createMock"]}, "focal_class": {"identifier": "DependencyPinger", "superclass": "", "interfaces": "implements Dependency, StatusUpdateProducer, Runnable", "fields": [{"original_string": "private static final Logger log = Logger.getLogger(DependencyPinger.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.getLogger(DependencyPinger.class)", "var_name": "log"}, {"original_string": "private final long pingPeriod;", "modifier": "private final", "type": "long", "declarator": "pingPeriod", "var_name": "pingPeriod"}, {"original_string": "@SuppressWarnings ({\"FieldCanBeLocal\"})\n    private final int consecutiveFailureThreshold = 3;", "modifier": "@SuppressWarnings ({\"FieldCanBeLocal\"})\n    private final", "type": "int", "declarator": "consecutiveFailureThreshold = 3", "var_name": "consecutiveFailureThreshold"}, {"original_string": "private final AtomicInteger consecutiveFailures = new AtomicInteger();", "modifier": "private final", "type": "AtomicInteger", "declarator": "consecutiveFailures = new AtomicInteger()", "var_name": "consecutiveFailures"}, {"original_string": "private final AtomicLong totalSuccesses = new AtomicLong();", "modifier": "private final", "type": "AtomicLong", "declarator": "totalSuccesses = new AtomicLong()", "var_name": "totalSuccesses"}, {"original_string": "private final AtomicLong totalFailures = new AtomicLong();", "modifier": "private final", "type": "AtomicLong", "declarator": "totalFailures = new AtomicLong()", "var_name": "totalFailures"}, {"original_string": "private final LongRecentEventsCounter failuresOverTime = new LongRecentEventsCounter(LongRecentEventsCounter.MINUTE_TICKER, 60);", "modifier": "private final", "type": "LongRecentEventsCounter", "declarator": "failuresOverTime = new LongRecentEventsCounter(LongRecentEventsCounter.MINUTE_TICKER, 60)", "var_name": "failuresOverTime"}, {"original_string": "private final StatusUpdateDelegate updateHandler = new StatusUpdateDelegate();", "modifier": "private final", "type": "StatusUpdateDelegate", "declarator": "updateHandler = new StatusUpdateDelegate()", "var_name": "updateHandler"}, {"original_string": "@Nullable\n    private volatile CheckResult lastResult = null;", "modifier": "@Nullable\n    private volatile", "type": "CheckResult", "declarator": "lastResult = null", "var_name": "lastResult"}, {"original_string": "private transient Throwable lastThrown = null;", "modifier": "private transient", "type": "Throwable", "declarator": "lastThrown = null", "var_name": "lastThrown"}, {"original_string": "private transient long lastDuration = 0L;", "modifier": "private transient", "type": "long", "declarator": "lastDuration = 0L", "var_name": "lastDuration"}, {"original_string": "private transient long lastExecuted = 0L;", "modifier": "private transient", "type": "long", "declarator": "lastExecuted = 0L", "var_name": "lastExecuted"}, {"original_string": "private transient long lastKnownGood = 0L;", "modifier": "private transient", "type": "long", "declarator": "lastKnownGood = 0L", "var_name": "lastKnownGood"}, {"original_string": "@Nonnull\n    private final DependencyChecker checker;", "modifier": "@Nonnull\n    private final", "type": "DependencyChecker", "declarator": "checker", "var_name": "checker"}, {"original_string": "@Nonnull\n    private final Dependency dependency;", "modifier": "@Nonnull\n    private final", "type": "Dependency", "declarator": "dependency", "var_name": "dependency"}], "methods": [{"identifier": "DependencyPinger", "parameters": "(@Nonnull final Dependency dependency)", "modifiers": "public", "return": "", "signature": " DependencyPinger(@Nonnull final Dependency dependency)", "full_signature": "public  DependencyPinger(@Nonnull final Dependency dependency)", "class_method_signature": "DependencyPinger.DependencyPinger(@Nonnull final Dependency dependency)", "testcase": false, "constructor": true}, {"identifier": "DependencyPinger", "parameters": "(\n            @Nonnull final Dependency dependency,\n            @Nonnull final SystemReporter systemReporter\n    )", "modifiers": "", "return": "", "signature": " DependencyPinger(\n            @Nonnull final Dependency dependency,\n            @Nonnull final SystemReporter systemReporter\n    )", "full_signature": "  DependencyPinger(\n            @Nonnull final Dependency dependency,\n            @Nonnull final SystemReporter systemReporter\n    )", "class_method_signature": "DependencyPinger.DependencyPinger(\n            @Nonnull final Dependency dependency,\n            @Nonnull final SystemReporter systemReporter\n    )", "testcase": false, "constructor": true}, {"identifier": "DependencyPinger", "parameters": "(\n            @Nonnull final Dependency dependency,\n            @Nonnull final DependencyChecker checker\n    )", "modifiers": "", "return": "", "signature": " DependencyPinger(\n            @Nonnull final Dependency dependency,\n            @Nonnull final DependencyChecker checker\n    )", "full_signature": "  DependencyPinger(\n            @Nonnull final Dependency dependency,\n            @Nonnull final DependencyChecker checker\n    )", "class_method_signature": "DependencyPinger.DependencyPinger(\n            @Nonnull final Dependency dependency,\n            @Nonnull final DependencyChecker checker\n    )", "testcase": false, "constructor": true}, {"identifier": "DependencyPinger", "parameters": "(\n            @Nonnull final ExecutorService executorService,\n            @Nonnull final Dependency dependency,\n            @Nonnull final SystemReporter systemReporter\n    )", "modifiers": "", "return": "", "signature": " DependencyPinger(\n            @Nonnull final ExecutorService executorService,\n            @Nonnull final Dependency dependency,\n            @Nonnull final SystemReporter systemReporter\n    )", "full_signature": "  DependencyPinger(\n            @Nonnull final ExecutorService executorService,\n            @Nonnull final Dependency dependency,\n            @Nonnull final SystemReporter systemReporter\n    )", "class_method_signature": "DependencyPinger.DependencyPinger(\n            @Nonnull final ExecutorService executorService,\n            @Nonnull final Dependency dependency,\n            @Nonnull final SystemReporter systemReporter\n    )", "testcase": false, "constructor": true}, {"identifier": "DependencyPinger", "parameters": "(\n            @Nonnull final ExecutorService executorService,\n            @Nonnull final Dependency dependency,\n            final long pingPeriod,\n            @Nonnull final SystemReporter systemReporter\n    )", "modifiers": "", "return": "", "signature": " DependencyPinger(\n            @Nonnull final ExecutorService executorService,\n            @Nonnull final Dependency dependency,\n            final long pingPeriod,\n            @Nonnull final SystemReporter systemReporter\n    )", "full_signature": "  DependencyPinger(\n            @Nonnull final ExecutorService executorService,\n            @Nonnull final Dependency dependency,\n            final long pingPeriod,\n            @Nonnull final SystemReporter systemReporter\n    )", "class_method_signature": "DependencyPinger.DependencyPinger(\n            @Nonnull final ExecutorService executorService,\n            @Nonnull final Dependency dependency,\n            final long pingPeriod,\n            @Nonnull final SystemReporter systemReporter\n    )", "testcase": false, "constructor": true}, {"identifier": "DependencyPinger", "parameters": "(\n            @Nonnull final Dependency dependency,\n            final long pingPeriod,\n            @Nonnull final DependencyChecker dependencyChecker\n    )", "modifiers": "", "return": "", "signature": " DependencyPinger(\n            @Nonnull final Dependency dependency,\n            final long pingPeriod,\n            @Nonnull final DependencyChecker dependencyChecker\n    )", "full_signature": "  DependencyPinger(\n            @Nonnull final Dependency dependency,\n            final long pingPeriod,\n            @Nonnull final DependencyChecker dependencyChecker\n    )", "class_method_signature": "DependencyPinger.DependencyPinger(\n            @Nonnull final Dependency dependency,\n            final long pingPeriod,\n            @Nonnull final DependencyChecker dependencyChecker\n    )", "testcase": false, "constructor": true}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "DependencyPinger.run()", "testcase": false, "constructor": false}, {"identifier": "call", "parameters": "()", "modifiers": "@Override @Nonnull public", "return": "CheckResult", "signature": "CheckResult call()", "full_signature": "@Override @Nonnull public CheckResult call()", "class_method_signature": "DependencyPinger.call()", "testcase": false, "constructor": false}, {"identifier": "notifyListeners", "parameters": "(@Nonnull final CheckResult currentResult)", "modifiers": "private", "return": "void", "signature": "void notifyListeners(@Nonnull final CheckResult currentResult)", "full_signature": "private void notifyListeners(@Nonnull final CheckResult currentResult)", "class_method_signature": "DependencyPinger.notifyListeners(@Nonnull final CheckResult currentResult)", "testcase": false, "constructor": false}, {"identifier": "handleSuccess", "parameters": "(@Nonnull final CheckResult reportedResult)", "modifiers": "private", "return": "CheckResult", "signature": "CheckResult handleSuccess(@Nonnull final CheckResult reportedResult)", "full_signature": "private CheckResult handleSuccess(@Nonnull final CheckResult reportedResult)", "class_method_signature": "DependencyPinger.handleSuccess(@Nonnull final CheckResult reportedResult)", "testcase": false, "constructor": false}, {"identifier": "handleFailure", "parameters": "(@Nullable final CheckResult reportedResult, @Nullable final Throwable t)", "modifiers": "private", "return": "CheckResult", "signature": "CheckResult handleFailure(@Nullable final CheckResult reportedResult, @Nullable final Throwable t)", "full_signature": "private CheckResult handleFailure(@Nullable final CheckResult reportedResult, @Nullable final Throwable t)", "class_method_signature": "DependencyPinger.handleFailure(@Nullable final CheckResult reportedResult, @Nullable final Throwable t)", "testcase": false, "constructor": false}, {"identifier": "newFailureNotice", "parameters": "(@Nonnull final CheckStatus outageStatus, @Nullable final CheckResult failedResult)", "modifiers": "@Nonnull private", "return": "CheckResult", "signature": "CheckResult newFailureNotice(@Nonnull final CheckStatus outageStatus, @Nullable final CheckResult failedResult)", "full_signature": "@Nonnull private CheckResult newFailureNotice(@Nonnull final CheckStatus outageStatus, @Nullable final CheckResult failedResult)", "class_method_signature": "DependencyPinger.newFailureNotice(@Nonnull final CheckStatus outageStatus, @Nullable final CheckResult failedResult)", "testcase": false, "constructor": false}, {"identifier": "getFailureMessage", "parameters": "(@Nullable final CheckResult result, @Nullable final Throwable thrown)", "modifiers": "@Nonnull private static", "return": "String", "signature": "String getFailureMessage(@Nullable final CheckResult result, @Nullable final Throwable thrown)", "full_signature": "@Nonnull private static String getFailureMessage(@Nullable final CheckResult result, @Nullable final Throwable thrown)", "class_method_signature": "DependencyPinger.getFailureMessage(@Nullable final CheckResult result, @Nullable final Throwable thrown)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Nonnull @Override public", "return": "String", "signature": "String toString()", "full_signature": "@Nonnull @Override public String toString()", "class_method_signature": "DependencyPinger.toString()", "testcase": false, "constructor": false}, {"identifier": "getTotalFailures", "parameters": "()", "modifiers": "@Export(name = \"total-failures\") public", "return": "long", "signature": "long getTotalFailures()", "full_signature": "@Export(name = \"total-failures\") public long getTotalFailures()", "class_method_signature": "DependencyPinger.getTotalFailures()", "testcase": false, "constructor": false}, {"identifier": "getTotalSuccesses", "parameters": "()", "modifiers": "@Export(name = \"total-successes\") public", "return": "long", "signature": "long getTotalSuccesses()", "full_signature": "@Export(name = \"total-successes\") public long getTotalSuccesses()", "class_method_signature": "DependencyPinger.getTotalSuccesses()", "testcase": false, "constructor": false}, {"identifier": "getFailures", "parameters": "()", "modifiers": "@Export(name = \"failures\", doc = \"Rolling count of recent failures\") public", "return": "String", "signature": "String getFailures()", "full_signature": "@Export(name = \"failures\", doc = \"Rolling count of recent failures\") public String getFailures()", "class_method_signature": "DependencyPinger.getFailures()", "testcase": false, "constructor": false}, {"identifier": "getConsecutiveFailures", "parameters": "()", "modifiers": "@Export(name = \"consecutive-failures\", doc = \"Number of times failed consecutively\") public", "return": "int", "signature": "int getConsecutiveFailures()", "full_signature": "@Export(name = \"consecutive-failures\", doc = \"Number of times failed consecutively\") public int getConsecutiveFailures()", "class_method_signature": "DependencyPinger.getConsecutiveFailures()", "testcase": false, "constructor": false}, {"identifier": "getPingPeriod", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getPingPeriod()", "full_signature": "@Override public long getPingPeriod()", "class_method_signature": "DependencyPinger.getPingPeriod()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "DependencyPinger.getId()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDescription()", "full_signature": "@Override public String getDescription()", "class_method_signature": "DependencyPinger.getDescription()", "testcase": false, "constructor": false}, {"identifier": "getDocumentationUrl", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDocumentationUrl()", "full_signature": "@Override public String getDocumentationUrl()", "class_method_signature": "DependencyPinger.getDocumentationUrl()", "testcase": false, "constructor": false}, {"identifier": "getTimeout", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getTimeout()", "full_signature": "@Override public long getTimeout()", "class_method_signature": "DependencyPinger.getTimeout()", "testcase": false, "constructor": false}, {"identifier": "getUrgency", "parameters": "()", "modifiers": "@Override public", "return": "Urgency", "signature": "Urgency getUrgency()", "full_signature": "@Override public Urgency getUrgency()", "class_method_signature": "DependencyPinger.getUrgency()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "DependencyType", "signature": "DependencyType getType()", "full_signature": "@Override public DependencyType getType()", "class_method_signature": "DependencyPinger.getType()", "testcase": false, "constructor": false}, {"identifier": "getServicePool", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getServicePool()", "full_signature": "@Override public String getServicePool()", "class_method_signature": "DependencyPinger.getServicePool()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "DependencyPinger.clear()", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(final StatusUpdateListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void addListener(final StatusUpdateListener listener)", "full_signature": "@Override public void addListener(final StatusUpdateListener listener)", "class_method_signature": "DependencyPinger.addListener(final StatusUpdateListener listener)", "testcase": false, "constructor": false}, {"identifier": "listeners", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<StatusUpdateListener>", "signature": "Iterator<StatusUpdateListener> listeners()", "full_signature": "@Override public Iterator<StatusUpdateListener> listeners()", "class_method_signature": "DependencyPinger.listeners()", "testcase": false, "constructor": false}, {"identifier": "getDependency", "parameters": "()", "modifiers": "@Nonnull public", "return": "Dependency", "signature": "Dependency getDependency()", "full_signature": "@Nonnull public Dependency getDependency()", "class_method_signature": "DependencyPinger.getDependency()", "testcase": false, "constructor": false}], "file": "status-core/src/main/java/com/indeed/status/core/DependencyPinger.java"}, "focal_method": {"identifier": "listeners", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<StatusUpdateListener>", "body": "@Override\n    public Iterator<StatusUpdateListener> listeners() {\n        return updateHandler.listeners();\n    }", "signature": "Iterator<StatusUpdateListener> listeners()", "full_signature": "@Override public Iterator<StatusUpdateListener> listeners()", "class_method_signature": "DependencyPinger.listeners()", "testcase": false, "constructor": false, "invocations": ["listeners"]}, "repository": {"repo_id": 15592774, "url": "https://github.com/indeedeng/status", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 17, "size": 467, "license": "licensed"}}