{"test_class": {"identifier": "LLDPOrganizationalTLVTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final byte[] expected = new byte[] {\n        //  Type: 127, Length: 13\n        (byte) 254, 13,\n        // OpenFlow OUI: 00-26-E1\n        0x0, 0x26, (byte)0xe1,\n        //  SubType: 12\n        0xc,\n        //  Bytes in \"ExtraInfo\"\n        0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f\n    };", "modifier": "private final", "type": "byte[]", "declarator": "expected = new byte[] {\n        //  Type: 127, Length: 13\n        (byte) 254, 13,\n        // OpenFlow OUI: 00-26-E1\n        0x0, 0x26, (byte)0xe1,\n        //  SubType: 12\n        0xc,\n        //  Bytes in \"ExtraInfo\"\n        0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f\n    }", "var_name": "expected"}], "file": "network-level/fl-ho-nl/src/test/java/net/floodlightcontroller/packet/LLDPOrganizationalTLVTest.java"}, "test_case": {"identifier": "testMaxInfoString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMaxInfoString() {\n        LLDPOrganizationalTLV tlv = new LLDPOrganizationalTLV();\n        tlv.setInfoString(new byte[LLDPOrganizationalTLV.MAX_INFOSTRING_LENGTH]);\n    }", "signature": "void testMaxInfoString()", "full_signature": "@Test public void testMaxInfoString()", "class_method_signature": "LLDPOrganizationalTLVTest.testMaxInfoString()", "testcase": true, "constructor": false, "invocations": ["setInfoString"]}, "focal_class": {"identifier": "LLDPOrganizationalTLV", "superclass": "extends LLDPTLV", "interfaces": "", "fields": [{"original_string": "public static final int OUI_LENGTH = 3;", "modifier": "public static final", "type": "int", "declarator": "OUI_LENGTH = 3", "var_name": "OUI_LENGTH"}, {"original_string": "public static final int SUBTYPE_LENGTH = 1;", "modifier": "public static final", "type": "int", "declarator": "SUBTYPE_LENGTH = 1", "var_name": "SUBTYPE_LENGTH"}, {"original_string": "public static final byte ORGANIZATIONAL_TLV_TYPE = 127;", "modifier": "public static final", "type": "byte", "declarator": "ORGANIZATIONAL_TLV_TYPE = 127", "var_name": "ORGANIZATIONAL_TLV_TYPE"}, {"original_string": "public static final int MAX_INFOSTRING_LENGTH = 507;", "modifier": "public static final", "type": "int", "declarator": "MAX_INFOSTRING_LENGTH = 507", "var_name": "MAX_INFOSTRING_LENGTH"}, {"original_string": "protected byte[] oui;", "modifier": "protected", "type": "byte[]", "declarator": "oui", "var_name": "oui"}, {"original_string": "protected byte subType;", "modifier": "protected", "type": "byte", "declarator": "subType", "var_name": "subType"}, {"original_string": "private byte[] infoString;", "modifier": "private", "type": "byte[]", "declarator": "infoString", "var_name": "infoString"}], "methods": [{"identifier": "LLDPOrganizationalTLV", "parameters": "()", "modifiers": "public", "return": "", "signature": " LLDPOrganizationalTLV()", "full_signature": "public  LLDPOrganizationalTLV()", "class_method_signature": "LLDPOrganizationalTLV.LLDPOrganizationalTLV()", "testcase": false, "constructor": true}, {"identifier": "setOUI", "parameters": "(byte[] oui)", "modifiers": "public", "return": "LLDPOrganizationalTLV", "signature": "LLDPOrganizationalTLV setOUI(byte[] oui)", "full_signature": "public LLDPOrganizationalTLV setOUI(byte[] oui)", "class_method_signature": "LLDPOrganizationalTLV.setOUI(byte[] oui)", "testcase": false, "constructor": false}, {"identifier": "getOUI", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getOUI()", "full_signature": "public byte[] getOUI()", "class_method_signature": "LLDPOrganizationalTLV.getOUI()", "testcase": false, "constructor": false}, {"identifier": "setSubType", "parameters": "(byte subType)", "modifiers": "public", "return": "LLDPOrganizationalTLV", "signature": "LLDPOrganizationalTLV setSubType(byte subType)", "full_signature": "public LLDPOrganizationalTLV setSubType(byte subType)", "class_method_signature": "LLDPOrganizationalTLV.setSubType(byte subType)", "testcase": false, "constructor": false}, {"identifier": "getSubType", "parameters": "()", "modifiers": "public", "return": "byte", "signature": "byte getSubType()", "full_signature": "public byte getSubType()", "class_method_signature": "LLDPOrganizationalTLV.getSubType()", "testcase": false, "constructor": false}, {"identifier": "setInfoString", "parameters": "(byte[] infoString)", "modifiers": "public", "return": "LLDPOrganizationalTLV", "signature": "LLDPOrganizationalTLV setInfoString(byte[] infoString)", "full_signature": "public LLDPOrganizationalTLV setInfoString(byte[] infoString)", "class_method_signature": "LLDPOrganizationalTLV.setInfoString(byte[] infoString)", "testcase": false, "constructor": false}, {"identifier": "setInfoString", "parameters": "(String infoString)", "modifiers": "public", "return": "LLDPOrganizationalTLV", "signature": "LLDPOrganizationalTLV setInfoString(String infoString)", "full_signature": "public LLDPOrganizationalTLV setInfoString(String infoString)", "class_method_signature": "LLDPOrganizationalTLV.setInfoString(String infoString)", "testcase": false, "constructor": false}, {"identifier": "getInfoString", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getInfoString()", "full_signature": "public byte[] getInfoString()", "class_method_signature": "LLDPOrganizationalTLV.getInfoString()", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] serialize()", "full_signature": "@Override public byte[] serialize()", "class_method_signature": "LLDPOrganizationalTLV.serialize()", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(ByteBuffer bb)", "modifiers": "@Override public", "return": "LLDPTLV", "signature": "LLDPTLV deserialize(ByteBuffer bb)", "full_signature": "@Override public LLDPTLV deserialize(ByteBuffer bb)", "class_method_signature": "LLDPOrganizationalTLV.deserialize(ByteBuffer bb)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "LLDPOrganizationalTLV.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "LLDPOrganizationalTLV.equals(Object o)", "testcase": false, "constructor": false}], "file": "network-level/fl-ho-nl/src/main/java/net/floodlightcontroller/packet/LLDPOrganizationalTLV.java"}, "focal_method": {"identifier": "setInfoString", "parameters": "(byte[] infoString)", "modifiers": "public", "return": "LLDPOrganizationalTLV", "body": "public LLDPOrganizationalTLV setInfoString(byte[] infoString) {\n        if (infoString.length > MAX_INFOSTRING_LENGTH) {\n            throw new IllegalArgumentException(\"The length of infoString cannot exceed \" + MAX_INFOSTRING_LENGTH);\n        }\n        this.infoString = Arrays.copyOf(infoString, infoString.length);\n        return this;\n    }", "signature": "LLDPOrganizationalTLV setInfoString(byte[] infoString)", "full_signature": "public LLDPOrganizationalTLV setInfoString(byte[] infoString)", "class_method_signature": "LLDPOrganizationalTLV.setInfoString(byte[] infoString)", "testcase": false, "constructor": false, "invocations": ["copyOf"]}, "repository": {"repo_id": 10459637, "url": "https://github.com/rizard/geni-openflow-vertical-handover", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 7, "size": 33971, "license": "licensed"}}