{"test_class": {"identifier": "JaxWsProxySelectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String HTTP_PROXY_HOST = \"http.proxyHost\";", "modifier": "private static final", "type": "String", "declarator": "HTTP_PROXY_HOST = \"http.proxyHost\"", "var_name": "HTTP_PROXY_HOST"}, {"original_string": "private static final String HTTP_PROXY_PORT = \"http.proxyPort\";", "modifier": "private static final", "type": "String", "declarator": "HTTP_PROXY_PORT = \"http.proxyPort\"", "var_name": "HTTP_PROXY_PORT"}, {"original_string": "private static final String HTTPS_PROXY_HOST = \"https.proxyHost\";", "modifier": "private static final", "type": "String", "declarator": "HTTPS_PROXY_HOST = \"https.proxyHost\"", "var_name": "HTTPS_PROXY_HOST"}, {"original_string": "private static final String HTTPS_PROXY_PORT = \"https.proxyPort\";", "modifier": "private static final", "type": "String", "declarator": "HTTPS_PROXY_PORT = \"https.proxyPort\"", "var_name": "HTTPS_PROXY_PORT"}, {"original_string": "private static final String FTP_PROXY_HOST = \"ftp.proxyHost\";", "modifier": "private static final", "type": "String", "declarator": "FTP_PROXY_HOST = \"ftp.proxyHost\"", "var_name": "FTP_PROXY_HOST"}, {"original_string": "private static final String FTP_PROXY_PORT = \"ftp.proxyPort\";", "modifier": "private static final", "type": "String", "declarator": "FTP_PROXY_PORT = \"ftp.proxyPort\"", "var_name": "FTP_PROXY_PORT"}, {"original_string": "private static final String SOCKS_PROXY_HOST = \"socksProxyHost\";", "modifier": "private static final", "type": "String", "declarator": "SOCKS_PROXY_HOST = \"socksProxyHost\"", "var_name": "SOCKS_PROXY_HOST"}, {"original_string": "private static final String SOCKS_PROXY_PORT = \"socksProxyPort\";", "modifier": "private static final", "type": "String", "declarator": "SOCKS_PROXY_PORT = \"socksProxyPort\"", "var_name": "SOCKS_PROXY_PORT"}, {"original_string": "private static final String LOCALHOST = \"127.0.0.1\";", "modifier": "private static final", "type": "String", "declarator": "LOCALHOST = \"127.0.0.1\"", "var_name": "LOCALHOST"}, {"original_string": "private static final int TEST_PORT_NUM = 8888;", "modifier": "private static final", "type": "int", "declarator": "TEST_PORT_NUM = 8888", "var_name": "TEST_PORT_NUM"}, {"original_string": "private static final String TEST_PORT_STR = String.valueOf(TEST_PORT_NUM);", "modifier": "private static final", "type": "String", "declarator": "TEST_PORT_STR = String.valueOf(TEST_PORT_NUM)", "var_name": "TEST_PORT_STR"}, {"original_string": "private static URI testHttpUri;", "modifier": "private static", "type": "URI", "declarator": "testHttpUri", "var_name": "testHttpUri"}, {"original_string": "private static URI testHttpsUri;", "modifier": "private static", "type": "URI", "declarator": "testHttpsUri", "var_name": "testHttpsUri"}, {"original_string": "private static URI testFtpUri;", "modifier": "private static", "type": "URI", "declarator": "testFtpUri", "var_name": "testFtpUri"}, {"original_string": "private static URI testSocksUri;", "modifier": "private static", "type": "URI", "declarator": "testSocksUri", "var_name": "testSocksUri"}, {"original_string": "private static Properties systemProperties;", "modifier": "private static", "type": "Properties", "declarator": "systemProperties", "var_name": "systemProperties"}], "file": "aw-reporting/src/test/java/com/google/api/ads/adwords/awreporting/proxy/JaxWsProxySelectorTest.java"}, "test_case": {"identifier": "testSelect_Direct", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSelect_Direct() {\n    JaxWsProxySelector ps = new JaxWsProxySelector(ProxySelector.getDefault());\n    ProxySelector.setDefault(ps);\n\n    List<Proxy> list = ps.select(testHttpUri);\n    assertEquals(list.get(0), Proxy.NO_PROXY);\n  }", "signature": "void testSelect_Direct()", "full_signature": "@Test public void testSelect_Direct()", "class_method_signature": "JaxWsProxySelectorTest.testSelect_Direct()", "testcase": true, "constructor": false, "invocations": ["getDefault", "setDefault", "select", "assertEquals", "get"]}, "focal_class": {"identifier": "JaxWsProxySelector", "superclass": "extends ProxySelector", "interfaces": "", "fields": [{"original_string": "private static final String PROXY_HOST = \"proxyHost\";", "modifier": "private static final", "type": "String", "declarator": "PROXY_HOST = \"proxyHost\"", "var_name": "PROXY_HOST"}, {"original_string": "private static final String PROXY_PORT = \"proxyPort\";", "modifier": "private static final", "type": "String", "declarator": "PROXY_PORT = \"proxyPort\"", "var_name": "PROXY_PORT"}, {"original_string": "private static final String PROXY_USER = \"proxyUser\";", "modifier": "private static final", "type": "String", "declarator": "PROXY_USER = \"proxyUser\"", "var_name": "PROXY_USER"}, {"original_string": "private static final String PROXY_PASSWORD = \"proxyPassword\";", "modifier": "private static final", "type": "String", "declarator": "PROXY_PASSWORD = \"proxyPassword\"", "var_name": "PROXY_PASSWORD"}, {"original_string": "private static final String SOCKS_PROXY_HOST = \"socksProxyHost\";", "modifier": "private static final", "type": "String", "declarator": "SOCKS_PROXY_HOST = \"socksProxyHost\"", "var_name": "SOCKS_PROXY_HOST"}, {"original_string": "private static final String SOCKS_PROXY_PORT = \"socksProxyPort\";", "modifier": "private static final", "type": "String", "declarator": "SOCKS_PROXY_PORT = \"socksProxyPort\"", "var_name": "SOCKS_PROXY_PORT"}, {"original_string": "private static final String SOCKS_PROXY_USER = \"socksProxyHost\";", "modifier": "private static final", "type": "String", "declarator": "SOCKS_PROXY_USER = \"socksProxyHost\"", "var_name": "SOCKS_PROXY_USER"}, {"original_string": "private static final String SOCKS_PROXY_PASSWORD = \"socksProxyPassword\";", "modifier": "private static final", "type": "String", "declarator": "SOCKS_PROXY_PASSWORD = \"socksProxyPassword\"", "var_name": "SOCKS_PROXY_PASSWORD"}, {"original_string": "private static final Set<String> SUPPORTED_SCHEMES = Sets.newHashSet(\"http\", \"https\", \"ftp\");", "modifier": "private static final", "type": "Set<String>", "declarator": "SUPPORTED_SCHEMES = Sets.newHashSet(\"http\", \"https\", \"ftp\")", "var_name": "SUPPORTED_SCHEMES"}, {"original_string": "private final ProxySelector delegate;", "modifier": "private final", "type": "ProxySelector", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private final Properties proxyProperties;", "modifier": "private final", "type": "Properties", "declarator": "proxyProperties", "var_name": "proxyProperties"}], "methods": [{"identifier": "JaxWsProxySelector", "parameters": "(@Nullable ProxySelector proxySelector, Properties properties)", "modifiers": "public", "return": "", "signature": " JaxWsProxySelector(@Nullable ProxySelector proxySelector, Properties properties)", "full_signature": "public  JaxWsProxySelector(@Nullable ProxySelector proxySelector, Properties properties)", "class_method_signature": "JaxWsProxySelector.JaxWsProxySelector(@Nullable ProxySelector proxySelector, Properties properties)", "testcase": false, "constructor": true}, {"identifier": "JaxWsProxySelector", "parameters": "(@Nullable ProxySelector proxySelector)", "modifiers": "public", "return": "", "signature": " JaxWsProxySelector(@Nullable ProxySelector proxySelector)", "full_signature": "public  JaxWsProxySelector(@Nullable ProxySelector proxySelector)", "class_method_signature": "JaxWsProxySelector.JaxWsProxySelector(@Nullable ProxySelector proxySelector)", "testcase": false, "constructor": true}, {"identifier": "select", "parameters": "(URI uri)", "modifiers": "@Override public", "return": "List<Proxy>", "signature": "List<Proxy> select(URI uri)", "full_signature": "@Override public List<Proxy> select(URI uri)", "class_method_signature": "JaxWsProxySelector.select(URI uri)", "testcase": false, "constructor": false}, {"identifier": "getProxy", "parameters": "(String scheme, String proxyHost, String proxyPort, String proxyUser)", "modifiers": "private", "return": "Proxy", "signature": "Proxy getProxy(String scheme, String proxyHost, String proxyPort, String proxyUser)", "full_signature": "private Proxy getProxy(String scheme, String proxyHost, String proxyPort, String proxyUser)", "class_method_signature": "JaxWsProxySelector.getProxy(String scheme, String proxyHost, String proxyPort, String proxyUser)", "testcase": false, "constructor": false}, {"identifier": "delegateSelect", "parameters": "(URI uri)", "modifiers": "private", "return": "List<Proxy>", "signature": "List<Proxy> delegateSelect(URI uri)", "full_signature": "private List<Proxy> delegateSelect(URI uri)", "class_method_signature": "JaxWsProxySelector.delegateSelect(URI uri)", "testcase": false, "constructor": false}, {"identifier": "connectFailed", "parameters": "(URI uri, SocketAddress socketAddress, IOException ioException)", "modifiers": "@Override public", "return": "void", "signature": "void connectFailed(URI uri, SocketAddress socketAddress, IOException ioException)", "full_signature": "@Override public void connectFailed(URI uri, SocketAddress socketAddress, IOException ioException)", "class_method_signature": "JaxWsProxySelector.connectFailed(URI uri, SocketAddress socketAddress, IOException ioException)", "testcase": false, "constructor": false}], "file": "aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/proxy/JaxWsProxySelector.java"}, "focal_method": {"identifier": "select", "parameters": "(URI uri)", "modifiers": "@Override public", "return": "List<Proxy>", "body": "@Override\n  public List<Proxy> select(URI uri) {\n    List<Proxy> list = Lists.newArrayList();\n\n    if (uri == null) {\n      throw new IllegalArgumentException(\"URI can't be null.\");\n    }\n\n    String scheme = uri.getScheme().toLowerCase();\n    \n    if (SUPPORTED_SCHEMES.contains(scheme)){\n      Proxy proxy = getProxy(scheme, proxyProperties.getProperty(scheme + \".\" + PROXY_HOST),\n          proxyProperties.getProperty(scheme + \".\" + PROXY_PORT), \n          proxyProperties.getProperty(scheme + \".\" + PROXY_USER));\n      \n      if (proxy != null){\n        list.add(proxy);\n      }\n    }\n    \n    if (scheme.startsWith(\"http\") || \"ftp\".equals(scheme) || scheme.startsWith(\"socks\")){\n      Proxy proxy = getProxy(\"socks\", proxyProperties.getProperty(SOCKS_PROXY_HOST),\n          proxyProperties.getProperty(SOCKS_PROXY_PORT), \n          proxyProperties.getProperty(SOCKS_PROXY_USER));\n      \n      if (proxy != null){\n        list.add(proxy);\n      }\n    }\n\n    if (list.size() > 0) {\n      return list;\n    }\n    return delegateSelect(uri);\n  }", "signature": "List<Proxy> select(URI uri)", "full_signature": "@Override public List<Proxy> select(URI uri)", "class_method_signature": "JaxWsProxySelector.select(URI uri)", "testcase": false, "constructor": false, "invocations": ["newArrayList", "toLowerCase", "getScheme", "contains", "getProxy", "getProperty", "getProperty", "getProperty", "add", "startsWith", "equals", "startsWith", "getProxy", "getProperty", "getProperty", "getProperty", "add", "size", "delegateSelect"]}, "repository": {"repo_id": 13736359, "url": "https://github.com/googleads/aw-reporting", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 120, "size": 5133, "license": "licensed"}}