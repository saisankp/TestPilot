{"test_class": {"identifier": "ModulesYamlConfigLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CONFIG_FILE = \"test-module-config\";", "modifier": "private static final", "type": "String", "declarator": "CONFIG_FILE = \"test-module-config\"", "var_name": "CONFIG_FILE"}, {"original_string": "private static final String NULL_PROPERTY = \"null\";", "modifier": "private static final", "type": "String", "declarator": "NULL_PROPERTY = \"null\"", "var_name": "NULL_PROPERTY"}, {"original_string": "private static final String NOT_EXISTING_PROPERTY = \"not-existing\";", "modifier": "private static final", "type": "String", "declarator": "NOT_EXISTING_PROPERTY = \"not-existing\"", "var_name": "NOT_EXISTING_PROPERTY"}, {"original_string": "private final ModulesYamlConfigLoader loader = new ModulesYamlConfigLoader(\"src/test/resources/\");", "modifier": "private final", "type": "ModulesYamlConfigLoader", "declarator": "loader = new ModulesYamlConfigLoader(\"src/test/resources/\")", "var_name": "loader"}], "file": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoaderTest.java"}, "test_case": {"identifier": "testLoadNotExistingStringListThrowsException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testLoadNotExistingStringListThrowsException() {\n\t\tassertThatExceptionOfType(ModulePropertyNotFoundException.class)\n\t\t\t.isThrownBy(() -> loader.loadStringList(CONFIG_FILE, NOT_EXISTING_PROPERTY));\n\t}", "signature": "void testLoadNotExistingStringListThrowsException()", "full_signature": "@Test public void testLoadNotExistingStringListThrowsException()", "class_method_signature": "ModulesYamlConfigLoaderTest.testLoadNotExistingStringListThrowsException()", "testcase": true, "constructor": false, "invocations": ["isThrownBy", "assertThatExceptionOfType", "loadStringList"]}, "focal_class": {"identifier": "ModulesYamlConfigLoader", "superclass": "", "interfaces": "implements ModulesConfigLoader", "fields": [{"original_string": "private final static Logger log = LoggerFactory.getLogger(ModulesYamlConfigLoader.class);", "modifier": "private final static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(ModulesYamlConfigLoader.class)", "var_name": "log"}, {"original_string": "private String modulesDirPath = \"/etc/perun/modules/\";", "modifier": "private", "type": "String", "declarator": "modulesDirPath = \"/etc/perun/modules/\"", "var_name": "modulesDirPath"}], "methods": [{"identifier": "ModulesYamlConfigLoader", "parameters": "()", "modifiers": "public", "return": "", "signature": " ModulesYamlConfigLoader()", "full_signature": "public  ModulesYamlConfigLoader()", "class_method_signature": "ModulesYamlConfigLoader.ModulesYamlConfigLoader()", "testcase": false, "constructor": true}, {"identifier": "ModulesYamlConfigLoader", "parameters": "(String modulesDirPath)", "modifiers": "public", "return": "", "signature": " ModulesYamlConfigLoader(String modulesDirPath)", "full_signature": "public  ModulesYamlConfigLoader(String modulesDirPath)", "class_method_signature": "ModulesYamlConfigLoader.ModulesYamlConfigLoader(String modulesDirPath)", "testcase": false, "constructor": true}, {"identifier": "loadString", "parameters": "(String moduleName, String property)", "modifiers": "@Override public", "return": "String", "signature": "String loadString(String moduleName, String property)", "full_signature": "@Override public String loadString(String moduleName, String property)", "class_method_signature": "ModulesYamlConfigLoader.loadString(String moduleName, String property)", "testcase": false, "constructor": false}, {"identifier": "loadStringOrDefault", "parameters": "(String moduleName, String property, String defaultValue)", "modifiers": "@Override public", "return": "String", "signature": "String loadStringOrDefault(String moduleName, String property, String defaultValue)", "full_signature": "@Override public String loadStringOrDefault(String moduleName, String property, String defaultValue)", "class_method_signature": "ModulesYamlConfigLoader.loadStringOrDefault(String moduleName, String property, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "loadInteger", "parameters": "(String moduleName, String property)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer loadInteger(String moduleName, String property)", "full_signature": "@Override public Integer loadInteger(String moduleName, String property)", "class_method_signature": "ModulesYamlConfigLoader.loadInteger(String moduleName, String property)", "testcase": false, "constructor": false}, {"identifier": "loadIntegerOrDefault", "parameters": "(String moduleName, String property, Integer defaultValue)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer loadIntegerOrDefault(String moduleName, String property, Integer defaultValue)", "full_signature": "@Override public Integer loadIntegerOrDefault(String moduleName, String property, Integer defaultValue)", "class_method_signature": "ModulesYamlConfigLoader.loadIntegerOrDefault(String moduleName, String property, Integer defaultValue)", "testcase": false, "constructor": false}, {"identifier": "loadStringList", "parameters": "(String moduleName, String property)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> loadStringList(String moduleName, String property)", "full_signature": "@Override public List<String> loadStringList(String moduleName, String property)", "class_method_signature": "ModulesYamlConfigLoader.loadStringList(String moduleName, String property)", "testcase": false, "constructor": false}, {"identifier": "loadStringListOrDefault", "parameters": "(String moduleName, String property, List<String> defaultValue)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> loadStringListOrDefault(String moduleName, String property, List<String> defaultValue)", "full_signature": "@Override public List<String> loadStringListOrDefault(String moduleName, String property, List<String> defaultValue)", "class_method_signature": "ModulesYamlConfigLoader.loadStringListOrDefault(String moduleName, String property, List<String> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "loadIntegerList", "parameters": "(String moduleName, String property)", "modifiers": "@Override public", "return": "List<Integer>", "signature": "List<Integer> loadIntegerList(String moduleName, String property)", "full_signature": "@Override public List<Integer> loadIntegerList(String moduleName, String property)", "class_method_signature": "ModulesYamlConfigLoader.loadIntegerList(String moduleName, String property)", "testcase": false, "constructor": false}, {"identifier": "loadIntegerListOrDefault", "parameters": "(String moduleName, String property, List<Integer> defaultValue)", "modifiers": "@Override public", "return": "List<Integer>", "signature": "List<Integer> loadIntegerListOrDefault(String moduleName, String property, List<Integer> defaultValue)", "full_signature": "@Override public List<Integer> loadIntegerListOrDefault(String moduleName, String property, List<Integer> defaultValue)", "class_method_signature": "ModulesYamlConfigLoader.loadIntegerListOrDefault(String moduleName, String property, List<Integer> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "loadPropertyNode", "parameters": "(String moduleName, String propertyName)", "modifiers": "private", "return": "JsonNode", "signature": "JsonNode loadPropertyNode(String moduleName, String propertyName)", "full_signature": "private JsonNode loadPropertyNode(String moduleName, String propertyName)", "class_method_signature": "ModulesYamlConfigLoader.loadPropertyNode(String moduleName, String propertyName)", "testcase": false, "constructor": false}, {"identifier": "parsePropertyNode", "parameters": "(JsonNode root, String propertyName)", "modifiers": "private static", "return": "JsonNode", "signature": "JsonNode parsePropertyNode(JsonNode root, String propertyName)", "full_signature": "private static JsonNode parsePropertyNode(JsonNode root, String propertyName)", "class_method_signature": "ModulesYamlConfigLoader.parsePropertyNode(JsonNode root, String propertyName)", "testcase": false, "constructor": false}, {"identifier": "loadModulesYamlFile", "parameters": "(String path)", "modifiers": "private static", "return": "JsonNode", "signature": "JsonNode loadModulesYamlFile(String path)", "full_signature": "private static JsonNode loadModulesYamlFile(String path)", "class_method_signature": "ModulesYamlConfigLoader.loadModulesYamlFile(String path)", "testcase": false, "constructor": false}], "file": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/ModulesYamlConfigLoader.java"}, "focal_method": {"identifier": "loadStringList", "parameters": "(String moduleName, String property)", "modifiers": "@Override public", "return": "List<String>", "body": "@Override\n\tpublic List<String> loadStringList(String moduleName, String property) {\n\t\tJsonNode propertyNode = loadPropertyNode(moduleName, property);\n\t\tif (propertyNode == null || propertyNode.isNull()) {\n\t\t\tthrow new ModulePropertyNotFoundException(moduleName, property);\n\t\t}\n\t\tList<String> values = new ArrayList<>();\n\t\tpropertyNode.iterator().forEachRemaining(node -> values.add(node.asText()));\n\t\treturn values;\n\t}", "signature": "List<String> loadStringList(String moduleName, String property)", "full_signature": "@Override public List<String> loadStringList(String moduleName, String property)", "class_method_signature": "ModulesYamlConfigLoader.loadStringList(String moduleName, String property)", "testcase": false, "constructor": false, "invocations": ["loadPropertyNode", "isNull", "forEachRemaining", "iterator", "add", "asText"]}, "repository": {"repo_id": 4085998, "url": "https://github.com/CESNET/perun", "stars": 38, "created": "4/20/2012 11:55:38 AM +00:00", "updates": "2020-01-27T09:51:13+00:00", "fork": "False", "license": "licensed"}}