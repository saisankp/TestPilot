{"test_class": {"identifier": "ScopeExtractorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JspContext context;", "modifier": "private", "type": "JspContext", "declarator": "context", "var_name": "context"}, {"original_string": "private ScopeExtractor extractor;", "modifier": "private", "type": "ScopeExtractor", "declarator": "extractor", "var_name": "extractor"}], "file": "tiles-request-jsp/src/test/java/org/apache/tiles/request/jsp/extractor/ScopeExtractorTest.java"}, "test_case": {"identifier": "testGetValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetValue() {\n        expect(context.getAttribute(\"key\", PageContext.PAGE_SCOPE)).andReturn(\"value\");\n\n        replay(context);\n        assertEquals(\"value\", extractor.getValue(\"key\"));\n        verify(context);\n    }", "signature": "void testGetValue()", "full_signature": "@Test public void testGetValue()", "class_method_signature": "ScopeExtractorTest.testGetValue()", "testcase": true, "constructor": false, "invocations": ["andReturn", "expect", "getAttribute", "replay", "assertEquals", "getValue", "verify"]}, "focal_class": {"identifier": "ScopeExtractor", "superclass": "", "interfaces": "implements AttributeExtractor", "fields": [{"original_string": "private JspContext context;", "modifier": "private", "type": "JspContext", "declarator": "context", "var_name": "context"}, {"original_string": "private int scope;", "modifier": "private", "type": "int", "declarator": "scope", "var_name": "scope"}], "methods": [{"identifier": "ScopeExtractor", "parameters": "(JspContext context, int scope)", "modifiers": "public", "return": "", "signature": " ScopeExtractor(JspContext context, int scope)", "full_signature": "public  ScopeExtractor(JspContext context, int scope)", "class_method_signature": "ScopeExtractor.ScopeExtractor(JspContext context, int scope)", "testcase": false, "constructor": true}, {"identifier": "removeValue", "parameters": "(String name)", "modifiers": "@Override public", "return": "void", "signature": "void removeValue(String name)", "full_signature": "@Override public void removeValue(String name)", "class_method_signature": "ScopeExtractor.removeValue(String name)", "testcase": false, "constructor": false}, {"identifier": "getKeys", "parameters": "()", "modifiers": "@Override public", "return": "Enumeration<String>", "signature": "Enumeration<String> getKeys()", "full_signature": "@Override public Enumeration<String> getKeys()", "class_method_signature": "ScopeExtractor.getKeys()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(String key)", "modifiers": "@Override public", "return": "Object", "signature": "Object getValue(String key)", "full_signature": "@Override public Object getValue(String key)", "class_method_signature": "ScopeExtractor.getValue(String key)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(String key, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(String key, Object value)", "full_signature": "@Override public void setValue(String key, Object value)", "class_method_signature": "ScopeExtractor.setValue(String key, Object value)", "testcase": false, "constructor": false}], "file": "tiles-request-jsp/src/main/java/org/apache/tiles/request/jsp/extractor/ScopeExtractor.java"}, "focal_method": {"identifier": "getValue", "parameters": "(String key)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object getValue(String key) {\n        return context.getAttribute(key, scope);\n    }", "signature": "Object getValue(String key)", "full_signature": "@Override public Object getValue(String key)", "class_method_signature": "ScopeExtractor.getValue(String key)", "testcase": false, "constructor": false, "invocations": ["getAttribute"]}, "repository": {"repo_id": 4269155, "url": "https://github.com/apache/tiles-request", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 865, "license": "licensed"}}