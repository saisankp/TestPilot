{"test_class": {"identifier": "ClientDAOTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Inject DSLContext jooqContext;", "modifier": "@Inject", "type": "DSLContext", "declarator": "jooqContext", "var_name": "jooqContext"}, {"original_string": "@Inject ClientDAOFactory clientDAOFactory;", "modifier": "@Inject", "type": "ClientDAOFactory", "declarator": "clientDAOFactory", "var_name": "clientDAOFactory"}, {"original_string": "Client client1, client2;", "modifier": "", "type": "Client", "declarator": "client1", "var_name": "client1"}, {"original_string": "ClientDAO clientDAO;", "modifier": "", "type": "ClientDAO", "declarator": "clientDAO", "var_name": "clientDAO"}], "file": "server/src/test/java/keywhiz/service/daos/ClientDAOTest.java"}, "test_case": {"identifier": "createClientDropsEmptyStringSpiffeId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void createClientDropsEmptyStringSpiffeId() throws Exception {\n    clientDAO.createClient(\"firstWithoutSpiffe\", \"creator2\", \"\", new URI(\"\"));\n    // This creation should not fail, because an empty SPIFFE ID should be converted to null\n    clientDAO.createClient(\"secondWithoutSpiffe\", \"creator2\", \"\", new URI(\"\"));\n  }", "signature": "void createClientDropsEmptyStringSpiffeId()", "full_signature": "@Test public void createClientDropsEmptyStringSpiffeId()", "class_method_signature": "ClientDAOTest.createClientDropsEmptyStringSpiffeId()", "testcase": true, "constructor": false, "invocations": ["createClient", "createClient"]}, "focal_class": {"identifier": "ClientDAO", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static Duration LAST_SEEN_THRESHOLD = Duration.ofSeconds(24 * 60 * 60);", "modifier": "private final static", "type": "Duration", "declarator": "LAST_SEEN_THRESHOLD = Duration.ofSeconds(24 * 60 * 60)", "var_name": "LAST_SEEN_THRESHOLD"}, {"original_string": "private final DSLContext dslContext;", "modifier": "private final", "type": "DSLContext", "declarator": "dslContext", "var_name": "dslContext"}, {"original_string": "private final ClientMapper clientMapper;", "modifier": "private final", "type": "ClientMapper", "declarator": "clientMapper", "var_name": "clientMapper"}, {"original_string": "private final RowHmacGenerator rowHmacGenerator;", "modifier": "private final", "type": "RowHmacGenerator", "declarator": "rowHmacGenerator", "var_name": "rowHmacGenerator"}], "methods": [{"identifier": "ClientDAO", "parameters": "(DSLContext dslContext, ClientMapper clientMapper,\n      RowHmacGenerator rowHmacGenerator)", "modifiers": "private", "return": "", "signature": " ClientDAO(DSLContext dslContext, ClientMapper clientMapper,\n      RowHmacGenerator rowHmacGenerator)", "full_signature": "private  ClientDAO(DSLContext dslContext, ClientMapper clientMapper,\n      RowHmacGenerator rowHmacGenerator)", "class_method_signature": "ClientDAO.ClientDAO(DSLContext dslContext, ClientMapper clientMapper,\n      RowHmacGenerator rowHmacGenerator)", "testcase": false, "constructor": true}, {"identifier": "createClient", "parameters": "(String name, String user, String description,\n      @Nullable URI spiffeId)", "modifiers": "public", "return": "long", "signature": "long createClient(String name, String user, String description,\n      @Nullable URI spiffeId)", "full_signature": "public long createClient(String name, String user, String description,\n      @Nullable URI spiffeId)", "class_method_signature": "ClientDAO.createClient(String name, String user, String description,\n      @Nullable URI spiffeId)", "testcase": false, "constructor": false}, {"identifier": "deleteClient", "parameters": "(Client client)", "modifiers": "public", "return": "void", "signature": "void deleteClient(Client client)", "full_signature": "public void deleteClient(Client client)", "class_method_signature": "ClientDAO.deleteClient(Client client)", "testcase": false, "constructor": false}, {"identifier": "sawClient", "parameters": "(Client client, @Nullable Principal principal)", "modifiers": "public", "return": "void", "signature": "void sawClient(Client client, @Nullable Principal principal)", "full_signature": "public void sawClient(Client client, @Nullable Principal principal)", "class_method_signature": "ClientDAO.sawClient(Client client, @Nullable Principal principal)", "testcase": false, "constructor": false}, {"identifier": "getClientByName", "parameters": "(String name)", "modifiers": "public", "return": "Optional<Client>", "signature": "Optional<Client> getClientByName(String name)", "full_signature": "public Optional<Client> getClientByName(String name)", "class_method_signature": "ClientDAO.getClientByName(String name)", "testcase": false, "constructor": false}, {"identifier": "getClientBySpiffeId", "parameters": "(URI spiffeId)", "modifiers": "public", "return": "Optional<Client>", "signature": "Optional<Client> getClientBySpiffeId(URI spiffeId)", "full_signature": "public Optional<Client> getClientBySpiffeId(URI spiffeId)", "class_method_signature": "ClientDAO.getClientBySpiffeId(URI spiffeId)", "testcase": false, "constructor": false}, {"identifier": "getClientById", "parameters": "(long id)", "modifiers": "public", "return": "Optional<Client>", "signature": "Optional<Client> getClientById(long id)", "full_signature": "public Optional<Client> getClientById(long id)", "class_method_signature": "ClientDAO.getClientById(long id)", "testcase": false, "constructor": false}, {"identifier": "getClients", "parameters": "()", "modifiers": "public", "return": "ImmutableSet<Client>", "signature": "ImmutableSet<Client> getClients()", "full_signature": "public ImmutableSet<Client> getClients()", "class_method_signature": "ClientDAO.getClients()", "testcase": false, "constructor": false}], "file": "server/src/main/java/keywhiz/service/daos/ClientDAO.java"}, "focal_method": {"identifier": "createClient", "parameters": "(String name, String user, String description,\n      @Nullable URI spiffeId)", "modifiers": "public", "return": "long", "body": "public long createClient(String name, String user, String description,\n      @Nullable URI spiffeId) {\n    ClientsRecord r = dslContext.newRecord(CLIENTS);\n\n    long now = OffsetDateTime.now().toEpochSecond();\n\n    long generatedId = rowHmacGenerator.getNextLongSecure();\n    String rowHmac = rowHmacGenerator.computeRowHmac(\n        CLIENTS.getName(), List.of(name, generatedId));\n\n    // Do not allow empty spiffe URIs\n    String spiffeStr = null;\n    if (spiffeId != null && !spiffeId.toASCIIString().isEmpty()) {\n      spiffeStr = spiffeId.toASCIIString();\n    }\n\n    r.setId(generatedId);\n    r.setName(name);\n    r.setCreatedby(user);\n    r.setCreatedat(now);\n    r.setUpdatedby(user);\n    r.setUpdatedat(now);\n    r.setLastseen(null);\n    r.setDescription(description);\n    r.setEnabled(true);\n    r.setAutomationallowed(false);\n    r.setSpiffeId(spiffeStr);\n    r.setRowHmac(rowHmac);\n    r.store();\n\n    return r.getId();\n  }", "signature": "long createClient(String name, String user, String description,\n      @Nullable URI spiffeId)", "full_signature": "public long createClient(String name, String user, String description,\n      @Nullable URI spiffeId)", "class_method_signature": "ClientDAO.createClient(String name, String user, String description,\n      @Nullable URI spiffeId)", "testcase": false, "constructor": false, "invocations": ["newRecord", "toEpochSecond", "now", "getNextLongSecure", "computeRowHmac", "getName", "of", "isEmpty", "toASCIIString", "toASCIIString", "setId", "setName", "setCreatedby", "setCreatedat", "setUpdatedby", "setUpdatedat", "setLastseen", "setDescription", "setEnabled", "setAutomationallowed", "setSpiffeId", "setRowHmac", "store", "getId"]}, "repository": {"repo_id": 32866430, "url": "https://github.com/square/keywhiz", "stars": 2186, "created": "3/25/2015 1:31:39 PM +00:00", "updates": "2020-01-24T18:57:02+00:00", "fork": "False", "license": "licensed"}}