{"test_class": {"identifier": "MatchRuleTest", "superclass": "", "interfaces": "", "fields": [], "file": "services/src/test/java/com/greensopinion/finance/services/domain/MatchRuleTest.java"}, "test_case": {"identifier": "withPattern", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void withPattern() {\n\t\tMatchRule matchRule = MatchRule.withPattern(\"abc\");\n\t\tassertNotNull(matchRule);\n\t\tassertEquals(\"abc\", matchRule.getPattern());\n\t\tassertEquals(\"MatchRule{pattern=abc}\", matchRule.toString());\n\t}", "signature": "void withPattern()", "full_signature": "@Test public void withPattern()", "class_method_signature": "MatchRuleTest.withPattern()", "testcase": true, "constructor": false, "invocations": ["withPattern", "assertNotNull", "assertEquals", "getPattern", "assertEquals", "toString"]}, "focal_class": {"identifier": "MatchRule", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String REGEX_MULTIPLE_SPACES = \"\\\\s+\";", "modifier": "private static final", "type": "String", "declarator": "REGEX_MULTIPLE_SPACES = \"\\\\s+\"", "var_name": "REGEX_MULTIPLE_SPACES"}, {"original_string": "private final String pattern;", "modifier": "private final", "type": "String", "declarator": "pattern", "var_name": "pattern"}, {"original_string": "private transient Pattern $pattern;", "modifier": "private transient", "type": "Pattern", "declarator": "pattern", "var_name": "pattern"}], "methods": [{"identifier": "withPattern", "parameters": "(String pattern)", "modifiers": "public static", "return": "MatchRule", "signature": "MatchRule withPattern(String pattern)", "full_signature": "public static MatchRule withPattern(String pattern)", "class_method_signature": "MatchRule.withPattern(String pattern)", "testcase": false, "constructor": false}, {"identifier": "withPatternFromText", "parameters": "(String matchDescription)", "modifiers": "public static", "return": "MatchRule", "signature": "MatchRule withPatternFromText(String matchDescription)", "full_signature": "public static MatchRule withPatternFromText(String matchDescription)", "class_method_signature": "MatchRule.withPatternFromText(String matchDescription)", "testcase": false, "constructor": false}, {"identifier": "getPattern", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getPattern()", "full_signature": " String getPattern()", "class_method_signature": "MatchRule.getPattern()", "testcase": false, "constructor": false}, {"identifier": "pattern", "parameters": "()", "modifiers": "private", "return": "Pattern", "signature": "Pattern pattern()", "full_signature": "private Pattern pattern()", "class_method_signature": "MatchRule.pattern()", "testcase": false, "constructor": false}, {"identifier": "MatchRule", "parameters": "(String regex)", "modifiers": "private", "return": "", "signature": " MatchRule(String regex)", "full_signature": "private  MatchRule(String regex)", "class_method_signature": "MatchRule.MatchRule(String regex)", "testcase": false, "constructor": true}, {"identifier": "matches", "parameters": "(Transaction transaction)", "modifiers": "public", "return": "boolean", "signature": "boolean matches(Transaction transaction)", "full_signature": "public boolean matches(Transaction transaction)", "class_method_signature": "MatchRule.matches(Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "MatchRule.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "MatchRule.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "MatchRule.toString()", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/greensopinion/finance/services/domain/MatchRule.java"}, "focal_method": {"identifier": "withPattern", "parameters": "(String pattern)", "modifiers": "public static", "return": "MatchRule", "body": "public static MatchRule withPattern(String pattern) {\n\t\treturn new MatchRule(pattern);\n\t}", "signature": "MatchRule withPattern(String pattern)", "full_signature": "public static MatchRule withPattern(String pattern)", "class_method_signature": "MatchRule.withPattern(String pattern)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 54854741, "url": "https://github.com/greensopinion/greenbeans", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 30, "size": 1684, "license": "licensed"}}