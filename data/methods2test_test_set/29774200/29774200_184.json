{"test_class": {"identifier": "MavenTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    fr.norad.visuwall.providers.common.Maven maven = new fr.norad.visuwall.providers.common.Maven();", "modifier": "@InjectMocks", "type": "fr.norad.visuwall.providers.common.Maven", "declarator": "maven = new fr.norad.visuwall.providers.common.Maven()", "var_name": "maven"}, {"original_string": "@Mock\n    fr.norad.visuwall.providers.common.DocumentLoader documentLoader;", "modifier": "@Mock", "type": "fr.norad.visuwall.providers.common.DocumentLoader", "declarator": "documentLoader", "var_name": "documentLoader"}], "file": "component/core/src/test/java/fr/norad/visuwall/providers/common/MavenTest.java"}, "test_case": {"identifier": "should_find_artifact_id", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_find_artifact_id() throws Exception {\n        String pomUrl = fr.norad.visuwall.providers.common.ClasspathFiles.getAbsolutePathFile(\"pom-sample.xml\");\n        Document document = new fr.norad.visuwall.providers.common.DocumentLoader().loadFromUrl(pomUrl);\n        when(documentLoader.loadFromUrl(anyString())).thenReturn(document);\n\n        String artifactId = maven.findMavenIdFrom(\"test-project\");\n        assertEquals(\"fr.norad.visuwall:visuwall-hudsonclient\", artifactId);\n    }", "signature": "void should_find_artifact_id()", "full_signature": "@Test public void should_find_artifact_id()", "class_method_signature": "MavenTest.should_find_artifact_id()", "testcase": true, "constructor": false, "invocations": ["getAbsolutePathFile", "loadFromUrl", "thenReturn", "when", "loadFromUrl", "anyString", "findMavenIdFrom", "assertEquals"]}, "focal_class": {"identifier": "Maven", "superclass": "", "interfaces": "", "fields": [{"original_string": "DocumentLoader documentLoader = new DocumentLoader();", "modifier": "", "type": "DocumentLoader", "declarator": "documentLoader = new DocumentLoader()", "var_name": "documentLoader"}], "methods": [{"identifier": "findMavenIdFrom", "parameters": "(String pomUrl)", "modifiers": "public", "return": "String", "signature": "String findMavenIdFrom(String pomUrl)", "full_signature": "public String findMavenIdFrom(String pomUrl)", "class_method_signature": "Maven.findMavenIdFrom(String pomUrl)", "testcase": false, "constructor": false}, {"identifier": "findMavenIdFromContent", "parameters": "(String pomContent)", "modifiers": "public", "return": "String", "signature": "String findMavenIdFromContent(String pomContent)", "full_signature": "public String findMavenIdFromContent(String pomContent)", "class_method_signature": "Maven.findMavenIdFromContent(String pomContent)", "testcase": false, "constructor": false}, {"identifier": "findMavenId", "parameters": "(Document doc)", "modifiers": "private", "return": "String", "signature": "String findMavenId(Document doc)", "full_signature": "private String findMavenId(Document doc)", "class_method_signature": "Maven.findMavenId(Document doc)", "testcase": false, "constructor": false}, {"identifier": "findValueInFirstLevel", "parameters": "(Document doc, String tagName)", "modifiers": "private", "return": "String", "signature": "String findValueInFirstLevel(Document doc, String tagName)", "full_signature": "private String findValueInFirstLevel(Document doc, String tagName)", "class_method_signature": "Maven.findValueInFirstLevel(Document doc, String tagName)", "testcase": false, "constructor": false}, {"identifier": "isFirstLevel", "parameters": "(String parentName)", "modifiers": "private", "return": "boolean", "signature": "boolean isFirstLevel(String parentName)", "full_signature": "private boolean isFirstLevel(String parentName)", "class_method_signature": "Maven.isFirstLevel(String parentName)", "testcase": false, "constructor": false}], "file": "component/core/src/main/java/fr/norad/visuwall/providers/common/Maven.java"}, "focal_method": {"identifier": "findMavenIdFrom", "parameters": "(String pomUrl)", "modifiers": "public", "return": "String", "body": "public String findMavenIdFrom(String pomUrl) throws MavenIdNotFoundException {\n        try {\n            Document document = documentLoader.loadFromUrl(pomUrl);\n            return findMavenId(document);\n        } catch (DocumentNotLoadedException e) {\n            throw new MavenIdNotFoundException(\"Can't find pom at \" + pomUrl, e);\n        }\n    }", "signature": "String findMavenIdFrom(String pomUrl)", "full_signature": "public String findMavenIdFrom(String pomUrl)", "class_method_signature": "Maven.findMavenIdFrom(String pomUrl)", "testcase": false, "constructor": false, "invocations": ["loadFromUrl", "findMavenId"]}, "repository": {"repo_id": 29774200, "url": "https://github.com/n0rad/visuwall", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 19747, "license": "licensed"}}