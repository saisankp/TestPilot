{"test_class": {"identifier": "UserNotificationTest", "superclass": "extends RobolectricTestWithConfig", "interfaces": "", "fields": [], "file": "app/src/test/java/com/eveningoutpost/dexdrip/Models/UserNotificationTest.java"}, "test_case": {"identifier": "createExtraCalibrationAlertNotification", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createExtraCalibrationAlertNotification() {\n        // :: Setup\n        long timestamp = System.currentTimeMillis();\n        String message = \"testMessage\";\n\n        // :: Act\n        UserNotification userNotification = UserNotification\n                .create(message, \"extra_calibration_alert\", timestamp);\n\n        // :: Verify\n        assertThat(userNotification).isNotNull();\n        assertThat(userNotification.timestamp).isWithin(0).of(timestamp);\n        assertThat(userNotification.extra_calibration_alert).isTrue();\n        assertThat(userNotification.message).isEqualTo(message);\n    }", "signature": "void createExtraCalibrationAlertNotification()", "full_signature": "@Test public void createExtraCalibrationAlertNotification()", "class_method_signature": "UserNotificationTest.createExtraCalibrationAlertNotification()", "testcase": true, "constructor": false, "invocations": ["currentTimeMillis", "create", "isNotNull", "assertThat", "of", "isWithin", "assertThat", "isTrue", "assertThat", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "UserNotification", "superclass": "extends Model", "interfaces": "", "fields": [{"original_string": "@Column(name = \"timestamp\", index = true)\n    public double timestamp;", "modifier": "@Column(name = \"timestamp\", index = true)\n    public", "type": "double", "declarator": "timestamp", "var_name": "timestamp"}, {"original_string": "@Column(name = \"message\")\n    public String message;", "modifier": "@Column(name = \"message\")\n    public", "type": "String", "declarator": "message", "var_name": "message"}, {"original_string": "@Column(name = \"bg_alert\")\n    public boolean bg_alert;", "modifier": "@Column(name = \"bg_alert\")\n    public", "type": "boolean", "declarator": "bg_alert", "var_name": "bg_alert"}, {"original_string": "@Column(name = \"calibration_alert\")\n    public boolean calibration_alert;", "modifier": "@Column(name = \"calibration_alert\")\n    public", "type": "boolean", "declarator": "calibration_alert", "var_name": "calibration_alert"}, {"original_string": "@Column(name = \"double_calibration_alert\")\n    public boolean double_calibration_alert;", "modifier": "@Column(name = \"double_calibration_alert\")\n    public", "type": "boolean", "declarator": "double_calibration_alert", "var_name": "double_calibration_alert"}, {"original_string": "@Column(name = \"extra_calibration_alert\")\n    public boolean extra_calibration_alert;", "modifier": "@Column(name = \"extra_calibration_alert\")\n    public", "type": "boolean", "declarator": "extra_calibration_alert", "var_name": "extra_calibration_alert"}, {"original_string": "@Column(name = \"bg_unclear_readings_alert\")\n    public boolean bg_unclear_readings_alert;", "modifier": "@Column(name = \"bg_unclear_readings_alert\")\n    public", "type": "boolean", "declarator": "bg_unclear_readings_alert", "var_name": "bg_unclear_readings_alert"}, {"original_string": "@Column(name = \"bg_missed_alerts\")\n    public boolean bg_missed_alerts;", "modifier": "@Column(name = \"bg_missed_alerts\")\n    public", "type": "boolean", "declarator": "bg_missed_alerts", "var_name": "bg_missed_alerts"}, {"original_string": "@Column(name = \"bg_rise_alert\")\n    public boolean bg_rise_alert;", "modifier": "@Column(name = \"bg_rise_alert\")\n    public", "type": "boolean", "declarator": "bg_rise_alert", "var_name": "bg_rise_alert"}, {"original_string": "@Column(name = \"bg_fall_alert\")\n    public boolean bg_fall_alert;", "modifier": "@Column(name = \"bg_fall_alert\")\n    public", "type": "boolean", "declarator": "bg_fall_alert", "var_name": "bg_fall_alert"}, {"original_string": "private final static List<String> legacy_types = Arrays.asList(\n            \"bg_alert\", \"calibration_alert\", \"double_calibration_alert\",\n            \"extra_calibration_alert\", \"bg_unclear_readings_alert\",\n            \"bg_missed_alerts\", \"bg_rise_alert\", \"bg_fall_alert\");", "modifier": "private final static", "type": "List<String>", "declarator": "legacy_types = Arrays.asList(\n            \"bg_alert\", \"calibration_alert\", \"double_calibration_alert\",\n            \"extra_calibration_alert\", \"bg_unclear_readings_alert\",\n            \"bg_missed_alerts\", \"bg_rise_alert\", \"bg_fall_alert\")", "var_name": "legacy_types"}, {"original_string": "private final static String TAG = AlertPlayer.class.getSimpleName();", "modifier": "private final static", "type": "String", "declarator": "TAG = AlertPlayer.class.getSimpleName()", "var_name": "TAG"}], "methods": [{"identifier": "lastBgAlert", "parameters": "()", "modifiers": "public static", "return": "UserNotification", "signature": "UserNotification lastBgAlert()", "full_signature": "public static UserNotification lastBgAlert()", "class_method_signature": "UserNotification.lastBgAlert()", "testcase": false, "constructor": false}, {"identifier": "lastCalibrationAlert", "parameters": "()", "modifiers": "public static", "return": "UserNotification", "signature": "UserNotification lastCalibrationAlert()", "full_signature": "public static UserNotification lastCalibrationAlert()", "class_method_signature": "UserNotification.lastCalibrationAlert()", "testcase": false, "constructor": false}, {"identifier": "lastDoubleCalibrationAlert", "parameters": "()", "modifiers": "public static", "return": "UserNotification", "signature": "UserNotification lastDoubleCalibrationAlert()", "full_signature": "public static UserNotification lastDoubleCalibrationAlert()", "class_method_signature": "UserNotification.lastDoubleCalibrationAlert()", "testcase": false, "constructor": false}, {"identifier": "lastExtraCalibrationAlert", "parameters": "()", "modifiers": "public static", "return": "UserNotification", "signature": "UserNotification lastExtraCalibrationAlert()", "full_signature": "public static UserNotification lastExtraCalibrationAlert()", "class_method_signature": "UserNotification.lastExtraCalibrationAlert()", "testcase": false, "constructor": false}, {"identifier": "GetNotificationByType", "parameters": "(String type)", "modifiers": "public static", "return": "UserNotification", "signature": "UserNotification GetNotificationByType(String type)", "full_signature": "public static UserNotification GetNotificationByType(String type)", "class_method_signature": "UserNotification.GetNotificationByType(String type)", "testcase": false, "constructor": false}, {"identifier": "DeleteNotificationByType", "parameters": "(String type)", "modifiers": "public static", "return": "void", "signature": "void DeleteNotificationByType(String type)", "full_signature": "public static void DeleteNotificationByType(String type)", "class_method_signature": "UserNotification.DeleteNotificationByType(String type)", "testcase": false, "constructor": false}, {"identifier": "snoozeAlert", "parameters": "(String type, long snoozeMinutes)", "modifiers": "public static", "return": "void", "signature": "void snoozeAlert(String type, long snoozeMinutes)", "full_signature": "public static void snoozeAlert(String type, long snoozeMinutes)", "class_method_signature": "UserNotification.snoozeAlert(String type, long snoozeMinutes)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String message, String type, long timestamp)", "modifiers": "public static", "return": "UserNotification", "signature": "UserNotification create(String message, String type, long timestamp)", "full_signature": "public static UserNotification create(String message, String type, long timestamp)", "class_method_signature": "UserNotification.create(String message, String type, long timestamp)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/eveningoutpost/dexdrip/Models/UserNotification.java"}, "focal_method": {"identifier": "create", "parameters": "(String message, String type, long timestamp)", "modifiers": "public static", "return": "UserNotification", "body": "public static UserNotification create(String message, String type, long timestamp) {\n        UserNotification userNotification = new UserNotification();\n        userNotification.timestamp = timestamp;\n        userNotification.message = message;\n        switch (type) {\n            case \"bg_alert\":\n                userNotification.bg_alert = true;\n                break;\n            case \"calibration_alert\":\n                userNotification.calibration_alert = true;\n                break;\n            case \"double_calibration_alert\":\n                userNotification.double_calibration_alert = true;\n                break;\n            case \"extra_calibration_alert\":\n                userNotification.extra_calibration_alert = true;\n                break;\n            case \"bg_unclear_readings_alert\":\n                userNotification.bg_unclear_readings_alert = true;\n                break;\n            case \"bg_missed_alerts\":\n                userNotification.bg_missed_alerts = true;\n                break;\n            case \"bg_rise_alert\":\n                userNotification.bg_rise_alert = true;\n                break;\n            case \"bg_fall_alert\":\n                userNotification.bg_fall_alert = true;\n                break;\n            default:\n                Log.d(TAG, \"Saving workaround for: \" + type + \" \" + message);\n                PersistentStore.setString(\"UserNotification:timestamp:\" + type, String.format(Locale.US, \"%d\", (long) timestamp));\n                PersistentStore.setString(\"UserNotification:message:\" + type, message);\n                return null;\n        }\n        userNotification.save();\n        return userNotification;\n\n    }", "signature": "UserNotification create(String message, String type, long timestamp)", "full_signature": "public static UserNotification create(String message, String type, long timestamp)", "class_method_signature": "UserNotification.create(String message, String type, long timestamp)", "testcase": false, "constructor": false, "invocations": ["d", "setString", "format", "setString", "save"]}, "repository": {"repo_id": 49717672, "url": "https://github.com/jamorham/xDrip-plus", "stars": 199, "created": "1/15/2016 12:31:22 PM +00:00", "updates": "2020-01-26T20:46:33+00:00", "fork": "False", "license": "licensed"}}