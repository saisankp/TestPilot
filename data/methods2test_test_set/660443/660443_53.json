{"test_class": {"identifier": "BooleanDifferenceTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "misc/diff/src/test/java/org/openscience/cdk/tools/diff/tree/BooleanDifferenceTest.java"}, "test_case": {"identifier": "testTwoNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTwoNull() {\n        IDifference result = BooleanDifference.construct(\"Foo\", null, null);\n        Assert.assertNull(result);\n    }", "signature": "void testTwoNull()", "full_signature": "@Test public void testTwoNull()", "class_method_signature": "BooleanDifferenceTest.testTwoNull()", "testcase": true, "constructor": false, "invocations": ["construct", "assertNull"]}, "focal_class": {"identifier": "BooleanDifference", "superclass": "", "interfaces": "implements IDifference", "fields": [{"original_string": "private String  name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private Boolean first;", "modifier": "private", "type": "Boolean", "declarator": "first", "var_name": "first"}, {"original_string": "private Boolean second;", "modifier": "private", "type": "Boolean", "declarator": "second", "var_name": "second"}], "methods": [{"identifier": "BooleanDifference", "parameters": "(String name, Boolean first, Boolean second)", "modifiers": "private", "return": "", "signature": " BooleanDifference(String name, Boolean first, Boolean second)", "full_signature": "private  BooleanDifference(String name, Boolean first, Boolean second)", "class_method_signature": "BooleanDifference.BooleanDifference(String name, Boolean first, Boolean second)", "testcase": false, "constructor": true}, {"identifier": "construct", "parameters": "(String name, Boolean first, Boolean second)", "modifiers": "public static", "return": "IDifference", "signature": "IDifference construct(String name, Boolean first, Boolean second)", "full_signature": "public static IDifference construct(String name, Boolean first, Boolean second)", "class_method_signature": "BooleanDifference.construct(String name, Boolean first, Boolean second)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BooleanDifference.toString()", "testcase": false, "constructor": false}], "file": "misc/diff/src/main/java/org/openscience/cdk/tools/diff/tree/BooleanDifference.java"}, "focal_method": {"identifier": "construct", "parameters": "(String name, Boolean first, Boolean second)", "modifiers": "public static", "return": "IDifference", "body": "public static IDifference construct(String name, Boolean first, Boolean second) {\n        if (Objects.equals(first, second)) {\n            return null;\n        }\n        return new BooleanDifference(name, first, second);\n    }", "signature": "IDifference construct(String name, Boolean first, Boolean second)", "full_signature": "public static IDifference construct(String name, Boolean first, Boolean second)", "class_method_signature": "BooleanDifference.construct(String name, Boolean first, Boolean second)", "testcase": false, "constructor": false, "invocations": ["equals"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}