{"test_class": {"identifier": "InclusionExclusionFilenameFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private InclusionExclusionFilenameFilter filter;", "modifier": "private", "type": "InclusionExclusionFilenameFilter", "declarator": "filter", "var_name": "filter"}], "file": "modeshape-jcr/src/test/java/org/modeshape/connector/filesystem/InclusionExclusionFilenameFilterTest.java"}, "test_case": {"identifier": "testEmptyFilter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEmptyFilter() {\n        assertTrue(filter.accept(null, \"anystring\"));\n    }", "signature": "void testEmptyFilter()", "full_signature": "@Test public void testEmptyFilter()", "class_method_signature": "InclusionExclusionFilenameFilterTest.testEmptyFilter()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "accept"]}, "focal_class": {"identifier": "InclusionExclusionFilenameFilter", "superclass": "", "interfaces": "implements java.io.FilenameFilter", "fields": [{"original_string": "private String inclusionPattern = null;", "modifier": "private", "type": "String", "declarator": "inclusionPattern = null", "var_name": "inclusionPattern"}, {"original_string": "private String exclusionPattern = null;", "modifier": "private", "type": "String", "declarator": "exclusionPattern = null", "var_name": "exclusionPattern"}, {"original_string": "private Pattern inclusion;", "modifier": "private", "type": "Pattern", "declarator": "inclusion", "var_name": "inclusion"}, {"original_string": "private Pattern exclusion;", "modifier": "private", "type": "Pattern", "declarator": "exclusion", "var_name": "exclusion"}, {"original_string": "private Pattern extraPropertiesExclusion;", "modifier": "private", "type": "Pattern", "declarator": "extraPropertiesExclusion", "var_name": "extraPropertiesExclusion"}], "methods": [{"identifier": "setExclusionPattern", "parameters": "( String exclusionPattern )", "modifiers": "public", "return": "void", "signature": "void setExclusionPattern( String exclusionPattern )", "full_signature": "public void setExclusionPattern( String exclusionPattern )", "class_method_signature": "InclusionExclusionFilenameFilter.setExclusionPattern( String exclusionPattern )", "testcase": false, "constructor": false}, {"identifier": "setExtraPropertiesExclusionPattern", "parameters": "( String exclusionPattern )", "modifiers": "public", "return": "void", "signature": "void setExtraPropertiesExclusionPattern( String exclusionPattern )", "full_signature": "public void setExtraPropertiesExclusionPattern( String exclusionPattern )", "class_method_signature": "InclusionExclusionFilenameFilter.setExtraPropertiesExclusionPattern( String exclusionPattern )", "testcase": false, "constructor": false}, {"identifier": "setInclusionPattern", "parameters": "( String inclusionPattern )", "modifiers": "public", "return": "void", "signature": "void setInclusionPattern( String inclusionPattern )", "full_signature": "public void setInclusionPattern( String inclusionPattern )", "class_method_signature": "InclusionExclusionFilenameFilter.setInclusionPattern( String inclusionPattern )", "testcase": false, "constructor": false}, {"identifier": "getExclusionPattern", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getExclusionPattern()", "full_signature": "public String getExclusionPattern()", "class_method_signature": "InclusionExclusionFilenameFilter.getExclusionPattern()", "testcase": false, "constructor": false}, {"identifier": "getInclusionPattern", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getInclusionPattern()", "full_signature": "public String getInclusionPattern()", "class_method_signature": "InclusionExclusionFilenameFilter.getInclusionPattern()", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "( File file,\n                           String name )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accept( File file,\n                           String name )", "full_signature": "@Override public boolean accept( File file,\n                           String name )", "class_method_signature": "InclusionExclusionFilenameFilter.accept( File file,\n                           String name )", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/connector/filesystem/InclusionExclusionFilenameFilter.java"}, "focal_method": {"identifier": "accept", "parameters": "( File file,\n                           String name )", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean accept( File file,\n                           String name ) {\n        if (inclusionPattern == null) {\n            // Include unless it matches an exclusion ...\n            if (exclusionPattern != null && exclusion.matcher(name).matches()) return false;\n            if (extraPropertiesExclusion != null && extraPropertiesExclusion.matcher(name).matches()) return false;\n            return true;\n        }\n        // Include ONLY if it matches the inclusion AND not matched by the exclusions ...\n        if (!inclusion.matcher(name).matches()) return false;\n        if (exclusionPattern != null && exclusion.matcher(name).matches()) return false;\n        if (extraPropertiesExclusion != null && extraPropertiesExclusion.matcher(name).matches()) return false;\n        return true;\n    }", "signature": "boolean accept( File file,\n                           String name )", "full_signature": "@Override public boolean accept( File file,\n                           String name )", "class_method_signature": "InclusionExclusionFilenameFilter.accept( File file,\n                           String name )", "testcase": false, "constructor": false, "invocations": ["matches", "matcher", "matches", "matcher", "matches", "matcher", "matches", "matcher", "matches", "matcher"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}