{"test_class": {"identifier": "ExtendedJobSanitizerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int MIN_DISK_SIZE = 10_000;", "modifier": "private static final", "type": "int", "declarator": "MIN_DISK_SIZE = 10_000", "var_name": "MIN_DISK_SIZE"}, {"original_string": "private static final List<String> DEFAULT_SECURITY_GROUPS = asList(\"sg-1\", \"sg-2\");", "modifier": "private static final", "type": "List<String>", "declarator": "DEFAULT_SECURITY_GROUPS = asList(\"sg-1\", \"sg-2\")", "var_name": "DEFAULT_SECURITY_GROUPS"}, {"original_string": "private static final String DEFAULT_IAM_ROLE = \"defaultIamRole\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_IAM_ROLE = \"defaultIamRole\"", "var_name": "DEFAULT_IAM_ROLE"}, {"original_string": "private static final DisruptionBudget SAMPLE_DISRUPTION_BUDGET = DisruptionBudgetGenerator.budget(\n            DisruptionBudgetGenerator.percentageOfHealthyPolicy(80),\n            DisruptionBudgetGenerator.unlimitedRate(),\n            Collections.singletonList(DisruptionBudgetGenerator.officeHourTimeWindow())\n    );", "modifier": "private static final", "type": "DisruptionBudget", "declarator": "SAMPLE_DISRUPTION_BUDGET = DisruptionBudgetGenerator.budget(\n            DisruptionBudgetGenerator.percentageOfHealthyPolicy(80),\n            DisruptionBudgetGenerator.unlimitedRate(),\n            Collections.singletonList(DisruptionBudgetGenerator.officeHourTimeWindow())\n    )", "var_name": "SAMPLE_DISRUPTION_BUDGET"}, {"original_string": "private final TitusRuntime titusRuntime = TitusRuntimes.internal();", "modifier": "private final", "type": "TitusRuntime", "declarator": "titusRuntime = TitusRuntimes.internal()", "var_name": "titusRuntime"}, {"original_string": "private final JobManagerConfiguration configuration = mock(JobManagerConfiguration.class);", "modifier": "private final", "type": "JobManagerConfiguration", "declarator": "configuration = mock(JobManagerConfiguration.class)", "var_name": "configuration"}, {"original_string": "private final DisruptionBudgetSanitizerConfiguration disruptionBudgetSanitizerConfiguration = Archaius2Ext.newConfiguration(\n            DisruptionBudgetSanitizerConfiguration.class,\n            \"titusGateway.disruptionBudgetSanitizer.enabled\", \"true\"\n    );", "modifier": "private final", "type": "DisruptionBudgetSanitizerConfiguration", "declarator": "disruptionBudgetSanitizerConfiguration = Archaius2Ext.newConfiguration(\n            DisruptionBudgetSanitizerConfiguration.class,\n            \"titusGateway.disruptionBudgetSanitizer.enabled\", \"true\"\n    )", "var_name": "disruptionBudgetSanitizerConfiguration"}, {"original_string": "private final JobConfiguration jobConfiguration = mock(JobConfiguration.class);", "modifier": "private final", "type": "JobConfiguration", "declarator": "jobConfiguration = mock(JobConfiguration.class)", "var_name": "jobConfiguration"}, {"original_string": "private final EntitySanitizer entitySanitizer = mock(EntitySanitizer.class);", "modifier": "private final", "type": "EntitySanitizer", "declarator": "entitySanitizer = mock(EntitySanitizer.class)", "var_name": "entitySanitizer"}, {"original_string": "private final DisruptionBudgetSanitizer disruptionBudgetSanitizer = new DisruptionBudgetSanitizer(disruptionBudgetSanitizerConfiguration, titusRuntime);", "modifier": "private final", "type": "DisruptionBudgetSanitizer", "declarator": "disruptionBudgetSanitizer = new DisruptionBudgetSanitizer(disruptionBudgetSanitizerConfiguration, titusRuntime)", "var_name": "disruptionBudgetSanitizer"}, {"original_string": "private final JobAssertions jobAssertions = new JobAssertions(jobConfiguration, instance -> ResourceDimension.empty());", "modifier": "private final", "type": "JobAssertions", "declarator": "jobAssertions = new JobAssertions(jobConfiguration, instance -> ResourceDimension.empty())", "var_name": "jobAssertions"}], "file": "titus-server-gateway/src/test/java/com/netflix/titus/gateway/service/v3/internal/ExtendedJobSanitizerTest.java"}, "test_case": {"identifier": "testLegacyServiceJobDisruptionBudgetRewrite", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLegacyServiceJobDisruptionBudgetRewrite() {\n        JobDescriptor<ServiceJobExt> jobDescriptor = newServiceJob().getValue().toBuilder()\n                .withDisruptionBudget(DisruptionBudget.none())\n                .build();\n        ExtendedJobSanitizer sanitizer = new ExtendedJobSanitizer(configuration, jobAssertions, entitySanitizer, disruptionBudgetSanitizer, jd -> false, jd -> false, titusRuntime);\n\n        Optional<JobDescriptor<ServiceJobExt>> sanitizedOpt = sanitizer.sanitize(jobDescriptor);\n        assertThat(sanitizedOpt).isNotEmpty();\n        JobDescriptor<ServiceJobExt> sanitized = sanitizedOpt.get();\n\n        String nonCompliant = sanitized.getAttributes().get(TITUS_NON_COMPLIANT_FEATURES);\n        assertThat(nonCompliant).contains(JobFeatureComplianceChecks.DISRUPTION_BUDGET_FEATURE);\n\n        SelfManagedDisruptionBudgetPolicy policy = (SelfManagedDisruptionBudgetPolicy) sanitized.getDisruptionBudget().getDisruptionBudgetPolicy();\n        assertThat(policy.getRelocationTimeMs()).isEqualTo(DisruptionBudgetSanitizer.DEFAULT_SERVICE_RELOCATION_TIME_MS);\n    }", "signature": "void testLegacyServiceJobDisruptionBudgetRewrite()", "full_signature": "@Test public void testLegacyServiceJobDisruptionBudgetRewrite()", "class_method_signature": "ExtendedJobSanitizerTest.testLegacyServiceJobDisruptionBudgetRewrite()", "testcase": true, "constructor": false, "invocations": ["build", "withDisruptionBudget", "toBuilder", "getValue", "newServiceJob", "none", "sanitize", "isNotEmpty", "assertThat", "get", "get", "getAttributes", "contains", "assertThat", "getDisruptionBudgetPolicy", "getDisruptionBudget", "isEqualTo", "assertThat", "getRelocationTimeMs"]}, "focal_class": {"identifier": "ExtendedJobSanitizer", "superclass": "", "interfaces": "implements EntitySanitizer", "fields": [{"original_string": "private static final String TITUS_NON_COMPLIANT_ROOT_NAME = \"titus.noncompliant\";", "modifier": "private static final", "type": "String", "declarator": "TITUS_NON_COMPLIANT_ROOT_NAME = \"titus.noncompliant\"", "var_name": "TITUS_NON_COMPLIANT_ROOT_NAME"}, {"original_string": "private static final String TITUS_NON_COMPLIANT = TITUS_NON_COMPLIANT_ROOT_NAME + \".\";", "modifier": "private static final", "type": "String", "declarator": "TITUS_NON_COMPLIANT = TITUS_NON_COMPLIANT_ROOT_NAME + \".\"", "var_name": "TITUS_NON_COMPLIANT"}, {"original_string": "@VisibleForTesting\n    static final String TITUS_NON_COMPLIANT_FEATURES = TITUS_NON_COMPLIANT + \"features\";", "modifier": "@VisibleForTesting\n    static final", "type": "String", "declarator": "TITUS_NON_COMPLIANT_FEATURES = TITUS_NON_COMPLIANT + \"features\"", "var_name": "TITUS_NON_COMPLIANT_FEATURES"}, {"original_string": "private final JobManagerConfiguration jobManagerConfiguration;", "modifier": "private final", "type": "JobManagerConfiguration", "declarator": "jobManagerConfiguration", "var_name": "jobManagerConfiguration"}, {"original_string": "private final EntitySanitizer entitySanitizer;", "modifier": "private final", "type": "EntitySanitizer", "declarator": "entitySanitizer", "var_name": "entitySanitizer"}, {"original_string": "private final DisruptionBudgetSanitizer disruptionBudgetSanitizer;", "modifier": "private final", "type": "DisruptionBudgetSanitizer", "declarator": "disruptionBudgetSanitizer", "var_name": "disruptionBudgetSanitizer"}, {"original_string": "private final Predicate<JobDescriptor> securityGroupsRequiredPredicate;", "modifier": "private final", "type": "Predicate<JobDescriptor>", "declarator": "securityGroupsRequiredPredicate", "var_name": "securityGroupsRequiredPredicate"}, {"original_string": "private final Predicate<JobDescriptor> environmentVariableNamesStrictValidationPredicate;", "modifier": "private final", "type": "Predicate<JobDescriptor>", "declarator": "environmentVariableNamesStrictValidationPredicate", "var_name": "environmentVariableNamesStrictValidationPredicate"}, {"original_string": "private final FeatureCompliance<JobDescriptor<?>> jobComplianceChecker;", "modifier": "private final", "type": "FeatureCompliance<JobDescriptor<?>>", "declarator": "jobComplianceChecker", "var_name": "jobComplianceChecker"}], "methods": [{"identifier": "ExtendedJobSanitizer", "parameters": "(JobManagerConfiguration jobManagerConfiguration,\n                                JobAssertions jobAssertions,\n                                @Named(JOB_STRICT_SANITIZER) EntitySanitizer entitySanitizer,\n                                DisruptionBudgetSanitizer disruptionBudgetSanitizer,\n                                @Named(SECURITY_GROUPS_REQUIRED_FEATURE) Predicate<JobDescriptor> securityGroupsRequiredPredicate,\n                                @Named(ENVIRONMENT_VARIABLE_NAMES_STRICT_VALIDATION_FEATURE) Predicate<JobDescriptor> environmentVariableNamesStrictValidationPredicate,\n                                TitusRuntime titusRuntime)", "modifiers": "public", "return": "", "signature": " ExtendedJobSanitizer(JobManagerConfiguration jobManagerConfiguration,\n                                JobAssertions jobAssertions,\n                                @Named(JOB_STRICT_SANITIZER) EntitySanitizer entitySanitizer,\n                                DisruptionBudgetSanitizer disruptionBudgetSanitizer,\n                                @Named(SECURITY_GROUPS_REQUIRED_FEATURE) Predicate<JobDescriptor> securityGroupsRequiredPredicate,\n                                @Named(ENVIRONMENT_VARIABLE_NAMES_STRICT_VALIDATION_FEATURE) Predicate<JobDescriptor> environmentVariableNamesStrictValidationPredicate,\n                                TitusRuntime titusRuntime)", "full_signature": "public  ExtendedJobSanitizer(JobManagerConfiguration jobManagerConfiguration,\n                                JobAssertions jobAssertions,\n                                @Named(JOB_STRICT_SANITIZER) EntitySanitizer entitySanitizer,\n                                DisruptionBudgetSanitizer disruptionBudgetSanitizer,\n                                @Named(SECURITY_GROUPS_REQUIRED_FEATURE) Predicate<JobDescriptor> securityGroupsRequiredPredicate,\n                                @Named(ENVIRONMENT_VARIABLE_NAMES_STRICT_VALIDATION_FEATURE) Predicate<JobDescriptor> environmentVariableNamesStrictValidationPredicate,\n                                TitusRuntime titusRuntime)", "class_method_signature": "ExtendedJobSanitizer.ExtendedJobSanitizer(JobManagerConfiguration jobManagerConfiguration,\n                                JobAssertions jobAssertions,\n                                @Named(JOB_STRICT_SANITIZER) EntitySanitizer entitySanitizer,\n                                DisruptionBudgetSanitizer disruptionBudgetSanitizer,\n                                @Named(SECURITY_GROUPS_REQUIRED_FEATURE) Predicate<JobDescriptor> securityGroupsRequiredPredicate,\n                                @Named(ENVIRONMENT_VARIABLE_NAMES_STRICT_VALIDATION_FEATURE) Predicate<JobDescriptor> environmentVariableNamesStrictValidationPredicate,\n                                TitusRuntime titusRuntime)", "testcase": false, "constructor": true}, {"identifier": "validate", "parameters": "(T entity)", "modifiers": "@Override public", "return": "Set<ValidationError>", "signature": "Set<ValidationError> validate(T entity)", "full_signature": "@Override public Set<ValidationError> validate(T entity)", "class_method_signature": "ExtendedJobSanitizer.validate(T entity)", "testcase": false, "constructor": false}, {"identifier": "sanitize", "parameters": "(T entity)", "modifiers": "@Override public", "return": "Optional<T>", "signature": "Optional<T> sanitize(T entity)", "full_signature": "@Override public Optional<T> sanitize(T entity)", "class_method_signature": "ExtendedJobSanitizer.sanitize(T entity)", "testcase": false, "constructor": false}, {"identifier": "sanitizeJobDescriptor", "parameters": "(JobDescriptor<?> providedJobDescriptor)", "modifiers": "private", "return": "JobDescriptor<?>", "signature": "JobDescriptor<?> sanitizeJobDescriptor(JobDescriptor<?> providedJobDescriptor)", "full_signature": "private JobDescriptor<?> sanitizeJobDescriptor(JobDescriptor<?> providedJobDescriptor)", "class_method_signature": "ExtendedJobSanitizer.sanitizeJobDescriptor(JobDescriptor<?> providedJobDescriptor)", "testcase": false, "constructor": false}, {"identifier": "resetAttributes", "parameters": "(JobDescriptor<?> jobDescriptor)", "modifiers": "private", "return": "JobDescriptor<?>", "signature": "JobDescriptor<?> resetAttributes(JobDescriptor<?> jobDescriptor)", "full_signature": "private JobDescriptor<?> resetAttributes(JobDescriptor<?> jobDescriptor)", "class_method_signature": "ExtendedJobSanitizer.resetAttributes(JobDescriptor<?> jobDescriptor)", "testcase": false, "constructor": false}, {"identifier": "buildNonComplianceJobAttributeMap", "parameters": "(FeatureCompliance.NonComplianceList<JobDescriptor<?>> violations)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> buildNonComplianceJobAttributeMap(FeatureCompliance.NonComplianceList<JobDescriptor<?>> violations)", "full_signature": "private Map<String, String> buildNonComplianceJobAttributeMap(FeatureCompliance.NonComplianceList<JobDescriptor<?>> violations)", "class_method_signature": "ExtendedJobSanitizer.buildNonComplianceJobAttributeMap(FeatureCompliance.NonComplianceList<JobDescriptor<?>> violations)", "testcase": false, "constructor": false}], "file": "titus-server-gateway/src/main/java/com/netflix/titus/gateway/service/v3/internal/ExtendedJobSanitizer.java"}, "focal_method": {"identifier": "sanitize", "parameters": "(T entity)", "modifiers": "@Override public", "return": "Optional<T>", "body": "@Override\n    public <T> Optional<T> sanitize(T entity) {\n        T sanitized = entitySanitizer.sanitize(entity).orElse(entity);\n\n        if (sanitized instanceof com.netflix.titus.api.jobmanager.model.job.JobDescriptor) {\n            sanitized = (T) sanitizeJobDescriptor((JobDescriptor) sanitized);\n        }\n\n        return entity == sanitized ? Optional.empty() : Optional.of(sanitized);\n    }", "signature": "Optional<T> sanitize(T entity)", "full_signature": "@Override public Optional<T> sanitize(T entity)", "class_method_signature": "ExtendedJobSanitizer.sanitize(T entity)", "testcase": false, "constructor": false, "invocations": ["orElse", "sanitize", "sanitizeJobDescriptor", "empty", "of"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}