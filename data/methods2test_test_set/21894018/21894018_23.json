{"test_class": {"identifier": "BalanceBooksTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(BalanceBooksTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(BalanceBooksTest.class)", "var_name": "LOG"}, {"original_string": "private static HBaseTestingUtility testUtil;", "modifier": "private static", "type": "HBaseTestingUtility", "declarator": "testUtil", "var_name": "testUtil"}, {"original_string": "private static TransactionService txService;", "modifier": "private static", "type": "TransactionService", "declarator": "txService", "var_name": "txService"}, {"original_string": "private static ZKClientService zkClientService;", "modifier": "private static", "type": "ZKClientService", "declarator": "zkClientService", "var_name": "zkClientService"}], "file": "tephra-examples/src/test/java/co/cask/tephra/examples/BalanceBooksTest.java"}, "test_case": {"identifier": "testBalanceBooks", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testBalanceBooks() throws Exception {\n    BalanceBooks bb = new BalanceBooks(5, 100, testUtil.getConfiguration());\n    try {\n      bb.init();\n      bb.run();\n      assertTrue(bb.verify());\n    } finally {\n      bb.close();\n    }\n  }", "signature": "void testBalanceBooks()", "full_signature": "@Test public void testBalanceBooks()", "class_method_signature": "BalanceBooksTest.testBalanceBooks()", "testcase": true, "constructor": false, "invocations": ["getConfiguration", "init", "run", "assertTrue", "verify", "close"]}, "focal_class": {"identifier": "BalanceBooks", "superclass": "", "interfaces": "implements Closeable", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(BalanceBooks.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(BalanceBooks.class)", "var_name": "LOG"}, {"original_string": "private static final int MAX_AMOUNT = 100;", "modifier": "private static final", "type": "int", "declarator": "MAX_AMOUNT = 100", "var_name": "MAX_AMOUNT"}, {"original_string": "private static final byte[] TABLE = Bytes.toBytes(\"testbalances\");", "modifier": "private static final", "type": "byte[]", "declarator": "TABLE = Bytes.toBytes(\"testbalances\")", "var_name": "TABLE"}, {"original_string": "private static final byte[] FAMILY = Bytes.toBytes(\"f\");", "modifier": "private static final", "type": "byte[]", "declarator": "FAMILY = Bytes.toBytes(\"f\")", "var_name": "FAMILY"}, {"original_string": "private static final byte[] COL = Bytes.toBytes(\"b\");", "modifier": "private static final", "type": "byte[]", "declarator": "COL = Bytes.toBytes(\"b\")", "var_name": "COL"}, {"original_string": "private final int totalClients;", "modifier": "private final", "type": "int", "declarator": "totalClients", "var_name": "totalClients"}, {"original_string": "private final int iterations;", "modifier": "private final", "type": "int", "declarator": "iterations", "var_name": "iterations"}, {"original_string": "private Configuration conf;", "modifier": "private", "type": "Configuration", "declarator": "conf", "var_name": "conf"}, {"original_string": "private ZKClientService zkClient;", "modifier": "private", "type": "ZKClientService", "declarator": "zkClient", "var_name": "zkClient"}, {"original_string": "private TransactionServiceClient txClient;", "modifier": "private", "type": "TransactionServiceClient", "declarator": "txClient", "var_name": "txClient"}, {"original_string": "private HConnection conn;", "modifier": "private", "type": "HConnection", "declarator": "conn", "var_name": "conn"}], "methods": [{"identifier": "BalanceBooks", "parameters": "(int totalClients, int iterations)", "modifiers": "public", "return": "", "signature": " BalanceBooks(int totalClients, int iterations)", "full_signature": "public  BalanceBooks(int totalClients, int iterations)", "class_method_signature": "BalanceBooks.BalanceBooks(int totalClients, int iterations)", "testcase": false, "constructor": true}, {"identifier": "BalanceBooks", "parameters": "(int totalClients, int iterations, Configuration conf)", "modifiers": "public", "return": "", "signature": " BalanceBooks(int totalClients, int iterations, Configuration conf)", "full_signature": "public  BalanceBooks(int totalClients, int iterations, Configuration conf)", "class_method_signature": "BalanceBooks.BalanceBooks(int totalClients, int iterations, Configuration conf)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void init()", "full_signature": "public void init()", "class_method_signature": "BalanceBooks.init()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void run()", "full_signature": "public void run()", "class_method_signature": "BalanceBooks.run()", "testcase": false, "constructor": false}, {"identifier": "verify", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean verify()", "full_signature": "public boolean verify()", "class_method_signature": "BalanceBooks.verify()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "BalanceBooks.close()", "testcase": false, "constructor": false}, {"identifier": "createTableIfNotExists", "parameters": "(Configuration conf, byte[] tableName, byte[][] columnFamilies)", "modifiers": "protected", "return": "void", "signature": "void createTableIfNotExists(Configuration conf, byte[] tableName, byte[][] columnFamilies)", "full_signature": "protected void createTableIfNotExists(Configuration conf, byte[] tableName, byte[][] columnFamilies)", "class_method_signature": "BalanceBooks.createTableIfNotExists(Configuration conf, byte[] tableName, byte[][] columnFamilies)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "BalanceBooks.main(String[] args)", "testcase": false, "constructor": false}], "file": "tephra-examples/src/main/java/co/cask/tephra/examples/BalanceBooks.java"}, "focal_method": {"identifier": "BalanceBooks", "parameters": "(int totalClients, int iterations)", "modifiers": "public", "return": "", "body": "public BalanceBooks(int totalClients, int iterations) {\n    this(totalClients, iterations, new ConfigurationFactory().get());\n  }", "signature": " BalanceBooks(int totalClients, int iterations)", "full_signature": "public  BalanceBooks(int totalClients, int iterations)", "class_method_signature": "BalanceBooks.BalanceBooks(int totalClients, int iterations)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 21894018, "url": "https://github.com/cdapio/tephra", "language": "Java", "is_fork": false, "fork_count": 43, "stargazer_count": 157, "size": 1415, "license": "licensed"}}