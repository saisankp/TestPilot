{"test_class": {"identifier": "QuorumBeanTest", "superclass": "", "interfaces": "", "fields": [], "file": "zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumBeanTest.java"}, "test_case": {"identifier": "testGetQuorumSizeProperty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetQuorumSizeProperty() {\n        QuorumPeer qpMock = mock(QuorumPeer.class);\n        QuorumBean qb = new QuorumBean(qpMock);\n\n        when(qpMock.getQuorumSize()).thenReturn(5);\n        assertThat(\"getQuorumSize property should return value of peet.getQuorumSize()\", qb.getQuorumSize(), equalTo(5));\n    }", "signature": "void testGetQuorumSizeProperty()", "full_signature": "@Test public void testGetQuorumSizeProperty()", "class_method_signature": "QuorumBeanTest.testGetQuorumSizeProperty()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getQuorumSize", "assertThat", "getQuorumSize", "equalTo"]}, "focal_class": {"identifier": "QuorumBean", "superclass": "", "interfaces": "implements QuorumMXBean, ZKMBeanInfo", "fields": [{"original_string": "private final QuorumPeer peer;", "modifier": "private final", "type": "QuorumPeer", "declarator": "peer", "var_name": "peer"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "QuorumBean", "parameters": "(QuorumPeer peer)", "modifiers": "public", "return": "", "signature": " QuorumBean(QuorumPeer peer)", "full_signature": "public  QuorumBean(QuorumPeer peer)", "class_method_signature": "QuorumBean.QuorumBean(QuorumPeer peer)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "QuorumBean.getName()", "testcase": false, "constructor": false}, {"identifier": "isHidden", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isHidden()", "full_signature": "@Override public boolean isHidden()", "class_method_signature": "QuorumBean.isHidden()", "testcase": false, "constructor": false}, {"identifier": "getQuorumSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getQuorumSize()", "full_signature": "@Override public int getQuorumSize()", "class_method_signature": "QuorumBean.getQuorumSize()", "testcase": false, "constructor": false}, {"identifier": "isSslQuorum", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSslQuorum()", "full_signature": "@Override public boolean isSslQuorum()", "class_method_signature": "QuorumBean.isSslQuorum()", "testcase": false, "constructor": false}, {"identifier": "isPortUnification", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isPortUnification()", "full_signature": "@Override public boolean isPortUnification()", "class_method_signature": "QuorumBean.isPortUnification()", "testcase": false, "constructor": false}], "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumBean.java"}, "focal_method": {"identifier": "getQuorumSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int getQuorumSize() {\n        return peer.getQuorumSize();\n    }", "signature": "int getQuorumSize()", "full_signature": "@Override public int getQuorumSize()", "class_method_signature": "QuorumBean.getQuorumSize()", "testcase": false, "constructor": false, "invocations": ["getQuorumSize"]}, "repository": {"repo_id": 230430206, "url": "https://github.com/boomblog/zookeeper-vip2", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 10, "size": 3105, "license": "licensed"}}