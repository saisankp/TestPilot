{"test_class": {"identifier": "RoleChangeListenerActorTest", "superclass": "extends AbstractActorTest", "interfaces": "", "fields": [], "file": "opendaylight/md-sal/sal-distributed-datastore/src/test/java/org/opendaylight/controller/cluster/sharding/RoleChangeListenerActorTest.java"}, "test_case": {"identifier": "testOnDataTreeChanged", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnDataTreeChanged() {\n        final LeaderLocationListener listener = mock(LeaderLocationListener.class);\n        doNothing().when(listener).onLeaderLocationChanged(any());\n        final Props props = RoleChangeListenerActor.props(getSystem().deadLetters(), listener);\n\n        final ActorRef subject = getSystem().actorOf(props, \"testDataTreeChangedChanged\");\n\n        subject.tell(new LeaderStateChanged(\"member-1\", null, (short) 0), noSender());\n        verify(listener, timeout(5000)).onLeaderLocationChanged(eq(LeaderLocation.UNKNOWN));\n\n        subject.tell(new LeaderStateChanged(\"member-1\", \"member-1\", (short) 0), noSender());\n        verify(listener, timeout(5000)).onLeaderLocationChanged(eq(LeaderLocation.LOCAL));\n\n        subject.tell(new LeaderStateChanged(\"member-1\", \"member-2\", (short) 0), noSender());\n        verify(listener, timeout(5000)).onLeaderLocationChanged(eq(LeaderLocation.REMOTE));\n    }", "signature": "void testOnDataTreeChanged()", "full_signature": "@Test public void testOnDataTreeChanged()", "class_method_signature": "RoleChangeListenerActorTest.testOnDataTreeChanged()", "testcase": true, "constructor": false, "invocations": ["mock", "onLeaderLocationChanged", "when", "doNothing", "any", "props", "deadLetters", "getSystem", "actorOf", "getSystem", "tell", "noSender", "onLeaderLocationChanged", "verify", "timeout", "eq", "tell", "noSender", "onLeaderLocationChanged", "verify", "timeout", "eq", "tell", "noSender", "onLeaderLocationChanged", "verify", "timeout", "eq"]}, "focal_class": {"identifier": "RoleChangeListenerActor", "superclass": "extends AbstractUntypedActor", "interfaces": "", "fields": [{"original_string": "private final LeaderLocationListener leaderLocationListener;", "modifier": "private final", "type": "LeaderLocationListener", "declarator": "leaderLocationListener", "var_name": "leaderLocationListener"}, {"original_string": "private final ActorRef roleChangeNotifier;", "modifier": "private final", "type": "ActorRef", "declarator": "roleChangeNotifier", "var_name": "roleChangeNotifier"}], "methods": [{"identifier": "RoleChangeListenerActor", "parameters": "(final ActorRef roleChangeNotifier, final LeaderLocationListener listener)", "modifiers": "private", "return": "", "signature": " RoleChangeListenerActor(final ActorRef roleChangeNotifier, final LeaderLocationListener listener)", "full_signature": "private  RoleChangeListenerActor(final ActorRef roleChangeNotifier, final LeaderLocationListener listener)", "class_method_signature": "RoleChangeListenerActor.RoleChangeListenerActor(final ActorRef roleChangeNotifier, final LeaderLocationListener listener)", "testcase": false, "constructor": true}, {"identifier": "preStart", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void preStart()", "full_signature": "@Override public void preStart()", "class_method_signature": "RoleChangeListenerActor.preStart()", "testcase": false, "constructor": false}, {"identifier": "handleReceive", "parameters": "(final Object message)", "modifiers": "@Override protected", "return": "void", "signature": "void handleReceive(final Object message)", "full_signature": "@Override protected void handleReceive(final Object message)", "class_method_signature": "RoleChangeListenerActor.handleReceive(final Object message)", "testcase": false, "constructor": false}, {"identifier": "onLeaderStateChanged", "parameters": "(final LeaderStateChanged message)", "modifiers": "private", "return": "void", "signature": "void onLeaderStateChanged(final LeaderStateChanged message)", "full_signature": "private void onLeaderStateChanged(final LeaderStateChanged message)", "class_method_signature": "RoleChangeListenerActor.onLeaderStateChanged(final LeaderStateChanged message)", "testcase": false, "constructor": false}, {"identifier": "props", "parameters": "(final ActorRef roleChangeNotifier, final LeaderLocationListener listener)", "modifiers": "public static", "return": "Props", "signature": "Props props(final ActorRef roleChangeNotifier, final LeaderLocationListener listener)", "full_signature": "public static Props props(final ActorRef roleChangeNotifier, final LeaderLocationListener listener)", "class_method_signature": "RoleChangeListenerActor.props(final ActorRef roleChangeNotifier, final LeaderLocationListener listener)", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/sharding/RoleChangeListenerActor.java"}, "focal_method": {"identifier": "props", "parameters": "(final ActorRef roleChangeNotifier, final LeaderLocationListener listener)", "modifiers": "public static", "return": "Props", "body": "public static Props props(final ActorRef roleChangeNotifier, final LeaderLocationListener listener) {\n        return Props.create(RoleChangeListenerActor.class, roleChangeNotifier, listener);\n    }", "signature": "Props props(final ActorRef roleChangeNotifier, final LeaderLocationListener listener)", "full_signature": "public static Props props(final ActorRef roleChangeNotifier, final LeaderLocationListener listener)", "class_method_signature": "RoleChangeListenerActor.props(final ActorRef roleChangeNotifier, final LeaderLocationListener listener)", "testcase": false, "constructor": false, "invocations": ["create"]}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}