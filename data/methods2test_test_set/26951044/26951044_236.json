{"test_class": {"identifier": "MapPropertySourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Map<String,String> sourceMap;", "modifier": "private", "type": "Map<String,String>", "declarator": "sourceMap", "var_name": "sourceMap"}, {"original_string": "private Properties sourceProperties;", "modifier": "private", "type": "Properties", "declarator": "sourceProperties", "var_name": "sourceProperties"}], "file": "code/spi-support/src/test/java/org/apache/tamaya/spisupport/propertysource/MapPropertySourceTest.java"}, "test_case": {"identifier": "sourceWillProperlyInitializedWithMapWithoutPrefix", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void sourceWillProperlyInitializedWithMapWithoutPrefix() throws Exception {\n        MapPropertySource propertySource = new MapPropertySource(\"UT\", sourceMap);\n\n        assertThat(propertySource.getProperties()).describedAs(\"Should contain exactly 2 properties.\")\n                                                  .hasSize(2);\n        assertThat(propertySource.get(\"a\")).isNotNull();\n        assertThat(propertySource.get(\"b\")).isNotNull();\n    }", "signature": "void sourceWillProperlyInitializedWithMapWithoutPrefix()", "full_signature": "@Test public void sourceWillProperlyInitializedWithMapWithoutPrefix()", "class_method_signature": "MapPropertySourceTest.sourceWillProperlyInitializedWithMapWithoutPrefix()", "testcase": true, "constructor": false, "invocations": ["hasSize", "describedAs", "assertThat", "getProperties", "isNotNull", "assertThat", "get", "isNotNull", "assertThat", "get"]}, "focal_class": {"identifier": "MapPropertySource", "superclass": "extends BasePropertySource", "interfaces": "", "fields": [{"original_string": "private String prefix;", "modifier": "private", "type": "String", "declarator": "prefix", "var_name": "prefix"}, {"original_string": "private final Map<String, PropertyValue> props = new HashMap<>();", "modifier": "private final", "type": "Map<String, PropertyValue>", "declarator": "props = new HashMap<>()", "var_name": "props"}], "methods": [{"identifier": "MapPropertySource", "parameters": "(String name, Map<String, String> props)", "modifiers": "public", "return": "", "signature": " MapPropertySource(String name, Map<String, String> props)", "full_signature": "public  MapPropertySource(String name, Map<String, String> props)", "class_method_signature": "MapPropertySource.MapPropertySource(String name, Map<String, String> props)", "testcase": false, "constructor": true}, {"identifier": "MapPropertySource", "parameters": "(String name, Properties props, String prefix)", "modifiers": "public", "return": "", "signature": " MapPropertySource(String name, Properties props, String prefix)", "full_signature": "public  MapPropertySource(String name, Properties props, String prefix)", "class_method_signature": "MapPropertySource.MapPropertySource(String name, Properties props, String prefix)", "testcase": false, "constructor": true}, {"identifier": "MapPropertySource", "parameters": "(String name, Map<String, String> props, String prefix)", "modifiers": "public", "return": "", "signature": " MapPropertySource(String name, Map<String, String> props, String prefix)", "full_signature": "public  MapPropertySource(String name, Map<String, String> props, String prefix)", "class_method_signature": "MapPropertySource.MapPropertySource(String name, Map<String, String> props, String prefix)", "testcase": false, "constructor": true}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, PropertyValue>", "signature": "Map<String, PropertyValue> getProperties()", "full_signature": "@Override public Map<String, PropertyValue> getProperties()", "class_method_signature": "MapPropertySource.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getMap", "parameters": "(Properties props)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> getMap(Properties props)", "full_signature": "public static Map<String, String> getMap(Properties props)", "class_method_signature": "MapPropertySource.getMap(Properties props)", "testcase": false, "constructor": false}, {"identifier": "getChangeSupport", "parameters": "()", "modifiers": "@Override public", "return": "ChangeSupport", "signature": "ChangeSupport getChangeSupport()", "full_signature": "@Override public ChangeSupport getChangeSupport()", "class_method_signature": "MapPropertySource.getChangeSupport()", "testcase": false, "constructor": false}, {"identifier": "getPrefix", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPrefix()", "full_signature": "public String getPrefix()", "class_method_signature": "MapPropertySource.getPrefix()", "testcase": false, "constructor": false}, {"identifier": "setPrefix", "parameters": "(String prefix)", "modifiers": "public", "return": "void", "signature": "void setPrefix(String prefix)", "full_signature": "public void setPrefix(String prefix)", "class_method_signature": "MapPropertySource.setPrefix(String prefix)", "testcase": false, "constructor": false}, {"identifier": "mapProperties", "parameters": "(Map<String, String> props, long timestamp)", "modifiers": "protected", "return": "Map<String,PropertyValue>", "signature": "Map<String,PropertyValue> mapProperties(Map<String, String> props, long timestamp)", "full_signature": "protected Map<String,PropertyValue> mapProperties(Map<String, String> props, long timestamp)", "class_method_signature": "MapPropertySource.mapProperties(Map<String, String> props, long timestamp)", "testcase": false, "constructor": false}, {"identifier": "toStringValues", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String toStringValues()", "full_signature": "protected String toStringValues()", "class_method_signature": "MapPropertySource.toStringValues()", "testcase": false, "constructor": false}], "file": "code/spi-support/src/main/java/org/apache/tamaya/spisupport/propertysource/MapPropertySource.java"}, "focal_method": {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, PropertyValue>", "body": "@Override\n    public Map<String, PropertyValue> getProperties() {\n        return Collections.unmodifiableMap(this.props);\n    }", "signature": "Map<String, PropertyValue> getProperties()", "full_signature": "@Override public Map<String, PropertyValue> getProperties()", "class_method_signature": "MapPropertySource.getProperties()", "testcase": false, "constructor": false, "invocations": ["unmodifiableMap"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}