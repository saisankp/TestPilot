{"test_class": {"identifier": "MappingFunctionTest", "superclass": "", "interfaces": "", "fields": [], "file": "web-framework/src/test/java/org/unidal/web/jsp/function/MappingFunctionTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void test() {\n      String codes = \"1|2|3\";\n      String values = \"one|two|three\";\n      String defaultValue = \"not found\";\n\n      Assert.assertEquals(\"one\", MappingFunction.translate(\"1\", codes, values, defaultValue));\n      Assert.assertEquals(\"two\", MappingFunction.translate(\"2\", codes, values, defaultValue));\n      Assert.assertEquals(\"three\", MappingFunction.translate(\"3\", codes, values, defaultValue));\n      Assert.assertEquals(defaultValue, MappingFunction.translate(\"4\", codes, values, defaultValue));\n\n      Assert.assertEquals(defaultValue, MappingFunction.translate(\"1\", codes, null, defaultValue));\n      Assert.assertEquals(defaultValue, MappingFunction.translate(\"1\", null, values, defaultValue));\n      Assert.assertEquals(defaultValue, MappingFunction.translate(\"1\", \"\", \"\", defaultValue));\n      \n      Assert.assertEquals(\"2\", MappingFunction.translate(\"TWO\", \"ONE|TWO|THREE\", \"1|2\", defaultValue));\n      Assert.assertEquals(defaultValue, MappingFunction.translate(\"THREE\", \"ONE|TWO|THREE\", \"1|2\", defaultValue));\n   }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "MappingFunctionTest.test()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "translate", "assertEquals", "translate", "assertEquals", "translate", "assertEquals", "translate", "assertEquals", "translate", "assertEquals", "translate", "assertEquals", "translate", "assertEquals", "translate", "assertEquals", "translate"]}, "focal_class": {"identifier": "MappingFunction", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "translate", "parameters": "(String code, String codes, String values, String defaultValue)", "modifiers": "@FunctionMeta(description = \"Translate code based on a mapping table\", example = \"${w:translate('2', '1|2|3', 'one|two|three', 'not found')}\") public static", "return": "String", "signature": "String translate(String code, String codes, String values, String defaultValue)", "full_signature": "@FunctionMeta(description = \"Translate code based on a mapping table\", example = \"${w:translate('2', '1|2|3', 'one|two|three', 'not found')}\") public static String translate(String code, String codes, String values, String defaultValue)", "class_method_signature": "MappingFunction.translate(String code, String codes, String values, String defaultValue)", "testcase": false, "constructor": false}], "file": "web-framework/src/main/java/org/unidal/web/jsp/function/MappingFunction.java"}, "focal_method": {"identifier": "translate", "parameters": "(String code, String codes, String values, String defaultValue)", "modifiers": "@FunctionMeta(description = \"Translate code based on a mapping table\", example = \"${w:translate('2', '1|2|3', 'one|two|three', 'not found')}\") public static", "return": "String", "body": "@FunctionMeta(description = \"Translate code based on a mapping table\", example = \"${w:translate('2', '1|2|3', 'one|two|three', 'not found')}\")\n   public static String translate(String code, String codes, String values, String defaultValue) {\n      List<String> codeList = Splitters.by('|').trim().split(codes);\n      List<String> valueList = Splitters.by('|').trim().split(values);\n\n      if (codeList != null && valueList != null) {\n         int index = 0;\n\n         for (String codeItem : codeList) {\n            if (codeItem.equals(code)) {\n               if (index < valueList.size()) {\n                  return valueList.get(index);\n               } else {\n                  break;\n               }\n            }\n\n            index++;\n         }\n      }\n\n      return defaultValue;\n   }", "signature": "String translate(String code, String codes, String values, String defaultValue)", "full_signature": "@FunctionMeta(description = \"Translate code based on a mapping table\", example = \"${w:translate('2', '1|2|3', 'one|two|three', 'not found')}\") public static String translate(String code, String codes, String values, String defaultValue)", "class_method_signature": "MappingFunction.translate(String code, String codes, String values, String defaultValue)", "testcase": false, "constructor": false, "invocations": ["split", "trim", "by", "split", "trim", "by", "equals", "size", "get"]}, "repository": {"repo_id": 6627230, "url": "https://github.com/unidal/frameworks", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 100, "size": 3009, "license": "licensed"}}