{"test_class": {"identifier": "ObjectsSectionProcessingStrategyTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [{"original_string": "private IReceiverObjectListener listenerMock;", "modifier": "private", "type": "IReceiverObjectListener", "declarator": "listenerMock", "var_name": "listenerMock"}, {"original_string": "private IReceiverObjectCreator[] creatorMocks;", "modifier": "private", "type": "IReceiverObjectCreator[]", "declarator": "creatorMocks", "var_name": "creatorMocks"}, {"original_string": "private IObject[] objectConfigMocks;", "modifier": "private", "type": "IObject[]", "declarator": "objectConfigMocks", "var_name": "objectConfigMocks"}, {"original_string": "private IObject configMock;", "modifier": "private", "type": "IObject", "declarator": "configMock", "var_name": "configMock"}, {"original_string": "private IResolveDependencyStrategy fullCreatorResolutionStrategy;", "modifier": "private", "type": "IResolveDependencyStrategy", "declarator": "fullCreatorResolutionStrategy", "var_name": "fullCreatorResolutionStrategy"}], "file": "Starters/CoreServiceStarter/CoreStarter/src/test/java/info/smart_tools/smartactors/core_service_starter/core_starter/ObjectsSectionProcessingStrategyTest.java"}, "test_case": {"identifier": "Should_wrapCreationExceptions", "parameters": "()", "modifiers": "@Test(expected = ConfigurationProcessingException.class) public", "return": "void", "body": "@Test(expected = ConfigurationProcessingException.class)\n    public void Should_wrapCreationExceptions()\n            throws Exception {\n        doThrow(ReceiverObjectCreatorException.class).when(creatorMocks[0]).create(any(), any(), any());\n\n        new ObjectsSectionProcessingStrategy().onLoadConfig(configMock);\n    }", "signature": "void Should_wrapCreationExceptions()", "full_signature": "@Test(expected = ConfigurationProcessingException.class) public void Should_wrapCreationExceptions()", "class_method_signature": "ObjectsSectionProcessingStrategyTest.Should_wrapCreationExceptions()", "testcase": true, "constructor": false, "invocations": ["create", "when", "doThrow", "any", "any", "any", "onLoadConfig"]}, "focal_class": {"identifier": "ObjectsSectionProcessingStrategy", "superclass": "", "interfaces": "implements ISectionStrategy", "fields": [{"original_string": "private final IFieldName name;", "modifier": "private final", "type": "IFieldName", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "ObjectsSectionProcessingStrategy", "parameters": "()", "modifiers": "public", "return": "", "signature": " ObjectsSectionProcessingStrategy()", "full_signature": "public  ObjectsSectionProcessingStrategy()", "class_method_signature": "ObjectsSectionProcessingStrategy.ObjectsSectionProcessingStrategy()", "testcase": false, "constructor": true}, {"identifier": "onLoadConfig", "parameters": "(final IObject config)", "modifiers": "@Override public", "return": "void", "signature": "void onLoadConfig(final IObject config)", "full_signature": "@Override public void onLoadConfig(final IObject config)", "class_method_signature": "ObjectsSectionProcessingStrategy.onLoadConfig(final IObject config)", "testcase": false, "constructor": false}, {"identifier": "getSectionName", "parameters": "()", "modifiers": "@Override public", "return": "IFieldName", "signature": "IFieldName getSectionName()", "full_signature": "@Override public IFieldName getSectionName()", "class_method_signature": "ObjectsSectionProcessingStrategy.getSectionName()", "testcase": false, "constructor": false}], "file": "Starters/CoreServiceStarter/CoreStarter/src/main/java/info/smart_tools/smartactors/core_service_starter/core_starter/ObjectsSectionProcessingStrategy.java"}, "focal_method": {"identifier": "onLoadConfig", "parameters": "(final IObject config)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onLoadConfig(final IObject config) throws ConfigurationProcessingException {\n        try {\n            List<IObject> section = (List<IObject>) config.getValue(name);\n\n            for (IObject objDesc : section) {\n                IReceiverObjectListener listener = IOC.resolve(Keys.getOrAdd(\"global router registration receiver object listener\"));\n                IReceiverObjectCreator creator = IOC.resolve(Keys.getOrAdd(\"full receiver object creator\"), objDesc);\n                IObject context = IOC.resolve(Keys.getOrAdd(\"info.smart_tools.smartactors.iobject.iobject.IObject\"));\n                creator.create(listener, objDesc, context);\n            }\n        } catch (InvalidReceiverPipelineException | ResolutionException | InvalidArgumentException | ReadValueException\n                | ReceiverObjectCreatorException | ReceiverObjectListenerException e) {\n            throw new ConfigurationProcessingException(\"Error occurred loading \\\"objects\\\" configuration section.\", e);\n        }\n    }", "signature": "void onLoadConfig(final IObject config)", "full_signature": "@Override public void onLoadConfig(final IObject config)", "class_method_signature": "ObjectsSectionProcessingStrategy.onLoadConfig(final IObject config)", "testcase": false, "constructor": false, "invocations": ["getValue", "resolve", "getOrAdd", "resolve", "getOrAdd", "resolve", "getOrAdd", "create"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}