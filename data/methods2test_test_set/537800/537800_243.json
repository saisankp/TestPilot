{"test_class": {"identifier": "RatioGaugeTest", "superclass": "", "interfaces": "", "fields": [], "file": "metrics-core/src/test/java/com/codahale/metrics/RatioGaugeTest.java"}, "test_case": {"identifier": "calculatesTheRatioOfTheNumeratorToTheDenominator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void calculatesTheRatioOfTheNumeratorToTheDenominator() {\n        final RatioGauge regular = new RatioGauge() {\n            @Override\n            protected Ratio getRatio() {\n                return RatioGauge.Ratio.of(2, 4);\n            }\n        };\n\n        assertThat(regular.getValue())\n                .isEqualTo(0.5);\n    }", "signature": "void calculatesTheRatioOfTheNumeratorToTheDenominator()", "full_signature": "@Test public void calculatesTheRatioOfTheNumeratorToTheDenominator()", "class_method_signature": "RatioGaugeTest.calculatesTheRatioOfTheNumeratorToTheDenominator()", "testcase": true, "constructor": false, "invocations": ["of", "isEqualTo", "assertThat", "getValue"]}, "focal_class": {"identifier": "RatioGauge", "superclass": "", "interfaces": "implements Gauge<Double>", "fields": [], "methods": [{"identifier": "getRatio", "parameters": "()", "modifiers": "protected abstract", "return": "Ratio", "signature": "Ratio getRatio()", "full_signature": "protected abstract Ratio getRatio()", "class_method_signature": "RatioGauge.getRatio()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "Double", "signature": "Double getValue()", "full_signature": "@Override public Double getValue()", "class_method_signature": "RatioGauge.getValue()", "testcase": false, "constructor": false}], "file": "metrics-core/src/main/java/com/codahale/metrics/RatioGauge.java"}, "focal_method": {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "Double", "body": "@Override\n    public Double getValue() {\n        return getRatio().getValue();\n    }", "signature": "Double getValue()", "full_signature": "@Override public Double getValue()", "class_method_signature": "RatioGauge.getValue()", "testcase": false, "constructor": false, "invocations": ["getValue", "getRatio"]}, "repository": {"repo_id": 537800, "url": "https://github.com/dropwizard/metrics", "stars": 6879, "created": "2/26/2010 7:44:42 PM +00:00", "updates": "2020-01-26T22:33:14+00:00", "fork": "False", "license": "licensed"}}