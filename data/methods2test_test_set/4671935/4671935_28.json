{"test_class": {"identifier": "TasksTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/com/platypii/baseline/cloud/tasks/TasksTest.java"}, "test_case": {"identifier": "removeType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void removeType() throws InterruptedException {\n        Tasks tasks = new Tasks();\n        tasks.start(null);\n        assertEquals(0, tasks.pending.size());\n        TestTask testTask1 = new TestTask(\"id1\");\n        TestTask testTask2 = new TestTask(\"id2\");\n        tasks.add(testTask1);\n        tasks.add(testTask2);\n        assertEquals(2, tasks.pending.size());\n        tasks.removeType(TestTask.taskType);\n        assertEquals(1, tasks.pending.size());\n        testTask1.wait = false;\n        Thread.sleep(60);\n        assertEquals(0, tasks.pending.size());\n    }", "signature": "void removeType()", "full_signature": "@Test public void removeType()", "class_method_signature": "TasksTest.removeType()", "testcase": true, "constructor": false, "invocations": ["start", "assertEquals", "size", "add", "add", "assertEquals", "size", "removeType", "assertEquals", "size", "sleep", "assertEquals", "size"]}, "focal_class": {"identifier": "Tasks", "superclass": "", "interfaces": "implements BaseService", "fields": [{"original_string": "private static final String TAG = \"Tasks\";", "modifier": "private static final", "type": "String", "declarator": "TAG = \"Tasks\"", "var_name": "TAG"}, {"original_string": "private Context context;", "modifier": "private", "type": "Context", "declarator": "context", "var_name": "context"}, {"original_string": "@NonNull\n    final List<Task> pending = new ArrayList<>();", "modifier": "@NonNull\n    final", "type": "List<Task>", "declarator": "pending = new ArrayList<>()", "var_name": "pending"}, {"original_string": "@Nullable\n    private Task running = null;", "modifier": "@Nullable\n    private", "type": "Task", "declarator": "running = null", "var_name": "running"}], "methods": [{"identifier": "start", "parameters": "(@NonNull Context context)", "modifiers": "@Override public", "return": "void", "signature": "void start(@NonNull Context context)", "full_signature": "@Override public void start(@NonNull Context context)", "class_method_signature": "Tasks.start(@NonNull Context context)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(@NonNull Task task)", "modifiers": "public", "return": "void", "signature": "void add(@NonNull Task task)", "full_signature": "public void add(@NonNull Task task)", "class_method_signature": "Tasks.add(@NonNull Task task)", "testcase": false, "constructor": false}, {"identifier": "tendQueue", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void tendQueue()", "full_signature": "public void tendQueue()", "class_method_signature": "Tasks.tendQueue()", "testcase": false, "constructor": false}, {"identifier": "runAsync", "parameters": "(@NonNull Task task)", "modifiers": "private", "return": "void", "signature": "void runAsync(@NonNull Task task)", "full_signature": "private void runAsync(@NonNull Task task)", "class_method_signature": "Tasks.runAsync(@NonNull Task task)", "testcase": false, "constructor": false}, {"identifier": "runSuccess", "parameters": "(@NonNull Task task)", "modifiers": "private", "return": "void", "signature": "void runSuccess(@NonNull Task task)", "full_signature": "private void runSuccess(@NonNull Task task)", "class_method_signature": "Tasks.runSuccess(@NonNull Task task)", "testcase": false, "constructor": false}, {"identifier": "runFailed", "parameters": "(@NonNull Task task, @NonNull Throwable e, boolean networkError)", "modifiers": "private", "return": "void", "signature": "void runFailed(@NonNull Task task, @NonNull Throwable e, boolean networkError)", "full_signature": "private void runFailed(@NonNull Task task, @NonNull Throwable e, boolean networkError)", "class_method_signature": "Tasks.runFailed(@NonNull Task task, @NonNull Throwable e, boolean networkError)", "testcase": false, "constructor": false}, {"identifier": "removeType", "parameters": "(@NonNull TaskType taskType)", "modifiers": "public", "return": "void", "signature": "void removeType(@NonNull TaskType taskType)", "full_signature": "public void removeType(@NonNull TaskType taskType)", "class_method_signature": "Tasks.removeType(@NonNull TaskType taskType)", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "Tasks.stop()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/platypii/baseline/cloud/tasks/Tasks.java"}, "focal_method": {"identifier": "removeType", "parameters": "(@NonNull TaskType taskType)", "modifiers": "public", "return": "void", "body": "public void removeType(@NonNull TaskType taskType) {\n        Exceptions.log(\"Tasks remove type type \" + taskType);\n        synchronized (pending) {\n            final ListIterator<Task> it = pending.listIterator();\n            while (it.hasNext()) {\n                final Task task = it.next();\n                if (!task.equals(running) && task.taskType().name().equals(taskType.name())) {\n                    it.remove();\n                }\n            }\n        }\n    }", "signature": "void removeType(@NonNull TaskType taskType)", "full_signature": "public void removeType(@NonNull TaskType taskType)", "class_method_signature": "Tasks.removeType(@NonNull TaskType taskType)", "testcase": false, "constructor": false, "invocations": ["log", "listIterator", "hasNext", "next", "equals", "equals", "name", "taskType", "name", "remove"]}, "repository": {"repo_id": 4671935, "url": "https://github.com/platypii/BASElineFlightComputer", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 18, "size": 6949, "license": "licensed"}}