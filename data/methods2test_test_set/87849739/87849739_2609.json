{"test_class": {"identifier": "LiveCommandAnswerFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private CommandResponse<?> commandResponseMock;", "modifier": "@Mock\n    private", "type": "CommandResponse<?>", "declarator": "commandResponseMock", "var_name": "commandResponseMock"}, {"original_string": "@Mock\n    private Event<?> eventMock;", "modifier": "@Mock\n    private", "type": "Event<?>", "declarator": "eventMock", "var_name": "eventMock"}], "file": "signals/commands/live/src/test/java/org/eclipse/ditto/signals/commands/live/base/LiveCommandAnswerFactoryTest.java"}, "test_case": {"identifier": "getLiveCommandAnswerInstanceWithNullCommandResponse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getLiveCommandAnswerInstanceWithNullCommandResponse() {\n        final LiveCommandAnswer liveCommandAnswer =\n                LiveCommandAnswerFactory.newLiveCommandAnswer((CommandResponse) null);\n\n        LiveCommandAssertions.assertThat(liveCommandAnswer)\n                .hasNoResponse()\n                .hasNoEvent();\n    }", "signature": "void getLiveCommandAnswerInstanceWithNullCommandResponse()", "full_signature": "@Test public void getLiveCommandAnswerInstanceWithNullCommandResponse()", "class_method_signature": "LiveCommandAnswerFactoryTest.getLiveCommandAnswerInstanceWithNullCommandResponse()", "testcase": true, "constructor": false, "invocations": ["newLiveCommandAnswer", "hasNoEvent", "hasNoResponse", "assertThat"]}, "focal_class": {"identifier": "LiveCommandAnswerFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "LiveCommandAnswerFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " LiveCommandAnswerFactory()", "full_signature": "private  LiveCommandAnswerFactory()", "class_method_signature": "LiveCommandAnswerFactory.LiveCommandAnswerFactory()", "testcase": false, "constructor": true}, {"identifier": "newLiveCommandAnswer", "parameters": "(@Nullable final CommandResponse<?> commandResponse)", "modifiers": "@Nonnull public static", "return": "LiveCommandAnswer", "signature": "LiveCommandAnswer newLiveCommandAnswer(@Nullable final CommandResponse<?> commandResponse)", "full_signature": "@Nonnull public static LiveCommandAnswer newLiveCommandAnswer(@Nullable final CommandResponse<?> commandResponse)", "class_method_signature": "LiveCommandAnswerFactory.newLiveCommandAnswer(@Nullable final CommandResponse<?> commandResponse)", "testcase": false, "constructor": false}, {"identifier": "newLiveCommandAnswer", "parameters": "(@Nullable final Event<?> event)", "modifiers": "@Nonnull public static", "return": "LiveCommandAnswer", "signature": "LiveCommandAnswer newLiveCommandAnswer(@Nullable final Event<?> event)", "full_signature": "@Nonnull public static LiveCommandAnswer newLiveCommandAnswer(@Nullable final Event<?> event)", "class_method_signature": "LiveCommandAnswerFactory.newLiveCommandAnswer(@Nullable final Event<?> event)", "testcase": false, "constructor": false}, {"identifier": "newLiveCommandAnswer", "parameters": "(@Nullable final CommandResponse<?> commandResponse,\n            @Nullable final Event<?> event)", "modifiers": "@Nonnull public static", "return": "LiveCommandAnswer", "signature": "LiveCommandAnswer newLiveCommandAnswer(@Nullable final CommandResponse<?> commandResponse,\n            @Nullable final Event<?> event)", "full_signature": "@Nonnull public static LiveCommandAnswer newLiveCommandAnswer(@Nullable final CommandResponse<?> commandResponse,\n            @Nullable final Event<?> event)", "class_method_signature": "LiveCommandAnswerFactory.newLiveCommandAnswer(@Nullable final CommandResponse<?> commandResponse,\n            @Nullable final Event<?> event)", "testcase": false, "constructor": false}], "file": "signals/commands/live/src/main/java/org/eclipse/ditto/signals/commands/live/base/LiveCommandAnswerFactory.java"}, "focal_method": {"identifier": "newLiveCommandAnswer", "parameters": "(@Nullable final CommandResponse<?> commandResponse)", "modifiers": "@Nonnull public static", "return": "LiveCommandAnswer", "body": "@Nonnull\n    public static LiveCommandAnswer newLiveCommandAnswer(@Nullable final CommandResponse<?> commandResponse) {\n        return ImmutableLiveCommandAnswer.newInstance(commandResponse, null);\n    }", "signature": "LiveCommandAnswer newLiveCommandAnswer(@Nullable final CommandResponse<?> commandResponse)", "full_signature": "@Nonnull public static LiveCommandAnswer newLiveCommandAnswer(@Nullable final CommandResponse<?> commandResponse)", "class_method_signature": "LiveCommandAnswerFactory.newLiveCommandAnswer(@Nullable final CommandResponse<?> commandResponse)", "testcase": false, "constructor": false, "invocations": ["newInstance"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}