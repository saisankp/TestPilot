{"test_class": {"identifier": "TestReport", "superclass": "", "interfaces": "", "fields": [], "file": "CodeSmells/src/reggie/TestReport.java"}, "test_case": {"identifier": "testReport", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testReport() throws Exception {\n\t\tSchedule.deleteAll();\n\n\t\tCourse cs101 = Course.create(\"CS101\", 3);\n\t\tcs101.update();\n\t\tOffering off1 = Offering.create(cs101, \"M10\");\n\t\toff1.update();\n\t\tOffering off2 = Offering.create(cs101, \"T9\");\n\t\toff2.update();\n\n\t\tSchedule s = Schedule.create(\"Bob\");\n\t\ts.add(off1);\n\t\ts.add(off2);\n\t\ts.update();\n\n\t\tSchedule s2 = Schedule.create(\"Alice\");\n\t\ts2.add(off1);\n\t\ts2.update();\n\n\t\tReport report = new Report();\n\n\t\tStringBuffer buffer = new StringBuffer();\n\n\t\treport.write(buffer);\n\n\t\tString result = buffer.toString();\n\t\tString valid1 = \"CS101 M10\\n\\tAlice\\n\\tBob\\n\" + \"CS101 T9\\n\\tBob\\n\"\n\t\t\t\t+ \"Number of scheduled offerings: 2\\n\";\n\n\t\tString valid2 = \"CS101 T9\\n\\tBob\\n\" + \"CS101 M10\\n\\tAlice\\n\\tBob\\n\"\n\t\t\t\t+ \"Number of scheduled offerings: 2\\n\";\n\t\tassertTrue(result.equals(valid1) || result.equals(valid2));\n\t}", "signature": "void testReport()", "full_signature": "@Test public void testReport()", "class_method_signature": "TestReport.testReport()", "testcase": true, "constructor": false, "invocations": ["deleteAll", "create", "update", "create", "update", "create", "update", "create", "add", "add", "update", "create", "add", "update", "write", "toString", "assertTrue", "equals", "equals"]}, "focal_class": {"identifier": "Report", "superclass": "", "interfaces": "", "fields": [{"original_string": "Hashtable<Integer, ArrayList<String>> offeringToName = new Hashtable<Integer, ArrayList<String>>();", "modifier": "", "type": "Hashtable<Integer, ArrayList<String>>", "declarator": "offeringToName = new Hashtable<Integer, ArrayList<String>>()", "var_name": "offeringToName"}], "methods": [{"identifier": "Report", "parameters": "()", "modifiers": "public", "return": "", "signature": " Report()", "full_signature": "public  Report()", "class_method_signature": "Report.Report()", "testcase": false, "constructor": true}, {"identifier": "populateMap", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void populateMap()", "full_signature": "public void populateMap()", "class_method_signature": "Report.populateMap()", "testcase": false, "constructor": false}, {"identifier": "populateMapFor", "parameters": "(Schedule schedule, Offering offering)", "modifiers": "private", "return": "void", "signature": "void populateMapFor(Schedule schedule, Offering offering)", "full_signature": "private void populateMapFor(Schedule schedule, Offering offering)", "class_method_signature": "Report.populateMapFor(Schedule schedule, Offering offering)", "testcase": false, "constructor": false}, {"identifier": "writeOffering", "parameters": "(StringBuffer buffer, ArrayList<String> list,\n\t\t\tOffering offering)", "modifiers": "public", "return": "void", "signature": "void writeOffering(StringBuffer buffer, ArrayList<String> list,\n\t\t\tOffering offering)", "full_signature": "public void writeOffering(StringBuffer buffer, ArrayList<String> list,\n\t\t\tOffering offering)", "class_method_signature": "Report.writeOffering(StringBuffer buffer, ArrayList<String> list,\n\t\t\tOffering offering)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(StringBuffer buffer)", "modifiers": "public", "return": "void", "signature": "void write(StringBuffer buffer)", "full_signature": "public void write(StringBuffer buffer)", "class_method_signature": "Report.write(StringBuffer buffer)", "testcase": false, "constructor": false}], "file": "CodeSmells/src/reggie/Report.java"}, "focal_method": {"identifier": "Report", "parameters": "()", "modifiers": "public", "return": "", "body": "public Report() {\n\t}", "signature": " Report()", "full_signature": "public  Report()", "class_method_signature": "Report.Report()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 643499, "url": "https://github.com/unclebob/Welc", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 210, "license": "licensed"}}