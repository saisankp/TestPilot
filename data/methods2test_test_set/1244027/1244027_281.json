{"test_class": {"identifier": "BasicDocumentTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BasicDocument doc;", "modifier": "private", "type": "BasicDocument", "declarator": "doc", "var_name": "doc"}], "file": "modeshape-schematic/src/test/java/org/modeshape/schematic/internal/document/BasicDocumentTest.java"}, "test_case": {"identifier": "shouldBeCloneable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldBeCloneable() {\n        assertEquals(doc, doc.clone());\n    }", "signature": "void shouldBeCloneable()", "full_signature": "@Test public void shouldBeCloneable()", "class_method_signature": "BasicDocumentTest.shouldBeCloneable()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "clone"]}, "focal_class": {"identifier": "BasicDocument", "superclass": "extends LinkedHashMap<String, Object>", "interfaces": "implements MutableDocument", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private transient Map<String, Object> unmodifiableView;", "modifier": "private transient", "type": "Map<String, Object>", "declarator": "unmodifiableView", "var_name": "unmodifiableView"}], "methods": [{"identifier": "BasicDocument", "parameters": "()", "modifiers": "public", "return": "", "signature": " BasicDocument()", "full_signature": "public  BasicDocument()", "class_method_signature": "BasicDocument.BasicDocument()", "testcase": false, "constructor": true}, {"identifier": "BasicDocument", "parameters": "( Document document )", "modifiers": "public", "return": "", "signature": " BasicDocument( Document document )", "full_signature": "public  BasicDocument( Document document )", "class_method_signature": "BasicDocument.BasicDocument( Document document )", "testcase": false, "constructor": true}, {"identifier": "BasicDocument", "parameters": "( int initialCapacity )", "modifiers": "public", "return": "", "signature": " BasicDocument( int initialCapacity )", "full_signature": "public  BasicDocument( int initialCapacity )", "class_method_signature": "BasicDocument.BasicDocument( int initialCapacity )", "testcase": false, "constructor": true}, {"identifier": "BasicDocument", "parameters": "( String name,\n                          Object value )", "modifiers": "public", "return": "", "signature": " BasicDocument( String name,\n                          Object value )", "full_signature": "public  BasicDocument( String name,\n                          Object value )", "class_method_signature": "BasicDocument.BasicDocument( String name,\n                          Object value )", "testcase": false, "constructor": true}, {"identifier": "BasicDocument", "parameters": "( String name1,\n                          Object value1,\n                          String name2,\n                          Object value2 )", "modifiers": "public", "return": "", "signature": " BasicDocument( String name1,\n                          Object value1,\n                          String name2,\n                          Object value2 )", "full_signature": "public  BasicDocument( String name1,\n                          Object value1,\n                          String name2,\n                          Object value2 )", "class_method_signature": "BasicDocument.BasicDocument( String name1,\n                          Object value1,\n                          String name2,\n                          Object value2 )", "testcase": false, "constructor": true}, {"identifier": "BasicDocument", "parameters": "( String name1,\n                          Object value1,\n                          String name2,\n                          Object value2,\n                          String name3,\n                          Object value3 )", "modifiers": "public", "return": "", "signature": " BasicDocument( String name1,\n                          Object value1,\n                          String name2,\n                          Object value2,\n                          String name3,\n                          Object value3 )", "full_signature": "public  BasicDocument( String name1,\n                          Object value1,\n                          String name2,\n                          Object value2,\n                          String name3,\n                          Object value3 )", "class_method_signature": "BasicDocument.BasicDocument( String name1,\n                          Object value1,\n                          String name2,\n                          Object value2,\n                          String name3,\n                          Object value3 )", "testcase": false, "constructor": true}, {"identifier": "BasicDocument", "parameters": "( String name1,\n                          Object value1,\n                          String name2,\n                          Object value2,\n                          String name3,\n                          Object value3,\n                          String name4,\n                          Object value4 )", "modifiers": "public", "return": "", "signature": " BasicDocument( String name1,\n                          Object value1,\n                          String name2,\n                          Object value2,\n                          String name3,\n                          Object value3,\n                          String name4,\n                          Object value4 )", "full_signature": "public  BasicDocument( String name1,\n                          Object value1,\n                          String name2,\n                          Object value2,\n                          String name3,\n                          Object value3,\n                          String name4,\n                          Object value4 )", "class_method_signature": "BasicDocument.BasicDocument( String name1,\n                          Object value1,\n                          String name2,\n                          Object value2,\n                          String name3,\n                          Object value3,\n                          String name4,\n                          Object value4 )", "testcase": false, "constructor": true}, {"identifier": "containsField", "parameters": "( String name )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsField( String name )", "full_signature": "@Override public boolean containsField( String name )", "class_method_signature": "BasicDocument.containsField( String name )", "testcase": false, "constructor": false}, {"identifier": "containsAll", "parameters": "( Document document )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsAll( Document document )", "full_signature": "@Override public boolean containsAll( Document document )", "class_method_signature": "BasicDocument.containsAll( Document document )", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "( String name )", "modifiers": "@Override public", "return": "Object", "signature": "Object get( String name )", "full_signature": "@Override public Object get( String name )", "class_method_signature": "BasicDocument.get( String name )", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, ?>", "signature": "Map<String, ?> toMap()", "full_signature": "@Override public Map<String, ?> toMap()", "class_method_signature": "BasicDocument.toMap()", "testcase": false, "constructor": false}, {"identifier": "fields", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<Field>", "signature": "Iterable<Field> fields()", "full_signature": "@Override public Iterable<Field> fields()", "class_method_signature": "BasicDocument.fields()", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "( String name )", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean getBoolean( String name )", "full_signature": "@Override public Boolean getBoolean( String name )", "class_method_signature": "BasicDocument.getBoolean( String name )", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "( String name,\n                               boolean defaultValue )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getBoolean( String name,\n                               boolean defaultValue )", "full_signature": "@Override public boolean getBoolean( String name,\n                               boolean defaultValue )", "class_method_signature": "BasicDocument.getBoolean( String name,\n                               boolean defaultValue )", "testcase": false, "constructor": false}, {"identifier": "getInteger", "parameters": "( String name )", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getInteger( String name )", "full_signature": "@Override public Integer getInteger( String name )", "class_method_signature": "BasicDocument.getInteger( String name )", "testcase": false, "constructor": false}, {"identifier": "getInteger", "parameters": "( String name,\n                           int defaultValue )", "modifiers": "@Override public", "return": "int", "signature": "int getInteger( String name,\n                           int defaultValue )", "full_signature": "@Override public int getInteger( String name,\n                           int defaultValue )", "class_method_signature": "BasicDocument.getInteger( String name,\n                           int defaultValue )", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "( String name )", "modifiers": "@Override public", "return": "Long", "signature": "Long getLong( String name )", "full_signature": "@Override public Long getLong( String name )", "class_method_signature": "BasicDocument.getLong( String name )", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "( String name,\n                         long defaultValue )", "modifiers": "@Override public", "return": "long", "signature": "long getLong( String name,\n                         long defaultValue )", "full_signature": "@Override public long getLong( String name,\n                         long defaultValue )", "class_method_signature": "BasicDocument.getLong( String name,\n                         long defaultValue )", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "( String name )", "modifiers": "@Override public", "return": "Double", "signature": "Double getDouble( String name )", "full_signature": "@Override public Double getDouble( String name )", "class_method_signature": "BasicDocument.getDouble( String name )", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "( String name,\n                             double defaultValue )", "modifiers": "@Override public", "return": "double", "signature": "double getDouble( String name,\n                             double defaultValue )", "full_signature": "@Override public double getDouble( String name,\n                             double defaultValue )", "class_method_signature": "BasicDocument.getDouble( String name,\n                             double defaultValue )", "testcase": false, "constructor": false}, {"identifier": "getNumber", "parameters": "( String name )", "modifiers": "@Override public", "return": "Number", "signature": "Number getNumber( String name )", "full_signature": "@Override public Number getNumber( String name )", "class_method_signature": "BasicDocument.getNumber( String name )", "testcase": false, "constructor": false}, {"identifier": "getNumber", "parameters": "( String name,\n                             Number defaultValue )", "modifiers": "@Override public", "return": "Number", "signature": "Number getNumber( String name,\n                             Number defaultValue )", "full_signature": "@Override public Number getNumber( String name,\n                             Number defaultValue )", "class_method_signature": "BasicDocument.getNumber( String name,\n                             Number defaultValue )", "testcase": false, "constructor": false}, {"identifier": "getDate", "parameters": "(String name)", "modifiers": "@Override public", "return": "Date", "signature": "Date getDate(String name)", "full_signature": "@Override public Date getDate(String name)", "class_method_signature": "BasicDocument.getDate(String name)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "( String name )", "modifiers": "@Override public", "return": "String", "signature": "String getString( String name )", "full_signature": "@Override public String getString( String name )", "class_method_signature": "BasicDocument.getString( String name )", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "( String name,\n                             String defaultValue )", "modifiers": "@Override public", "return": "String", "signature": "String getString( String name,\n                             String defaultValue )", "full_signature": "@Override public String getString( String name,\n                             String defaultValue )", "class_method_signature": "BasicDocument.getString( String name,\n                             String defaultValue )", "testcase": false, "constructor": false}, {"identifier": "getArray", "parameters": "( String name )", "modifiers": "@Override public", "return": "List<?>", "signature": "List<?> getArray( String name )", "full_signature": "@Override public List<?> getArray( String name )", "class_method_signature": "BasicDocument.getArray( String name )", "testcase": false, "constructor": false}, {"identifier": "getDocument", "parameters": "( String name )", "modifiers": "@Override public", "return": "Document", "signature": "Document getDocument( String name )", "full_signature": "@Override public Document getDocument( String name )", "class_method_signature": "BasicDocument.getDocument( String name )", "testcase": false, "constructor": false}, {"identifier": "isNull", "parameters": "( String name )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isNull( String name )", "full_signature": "@Override public boolean isNull( String name )", "class_method_signature": "BasicDocument.isNull( String name )", "testcase": false, "constructor": false}, {"identifier": "isNullOrMissing", "parameters": "( String name )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isNullOrMissing( String name )", "full_signature": "@Override public boolean isNullOrMissing( String name )", "class_method_signature": "BasicDocument.isNullOrMissing( String name )", "testcase": false, "constructor": false}, {"identifier": "getMaxKey", "parameters": "( String name )", "modifiers": "@Override public", "return": "MaxKey", "signature": "MaxKey getMaxKey( String name )", "full_signature": "@Override public MaxKey getMaxKey( String name )", "class_method_signature": "BasicDocument.getMaxKey( String name )", "testcase": false, "constructor": false}, {"identifier": "getMinKey", "parameters": "( String name )", "modifiers": "@Override public", "return": "MinKey", "signature": "MinKey getMinKey( String name )", "full_signature": "@Override public MinKey getMinKey( String name )", "class_method_signature": "BasicDocument.getMinKey( String name )", "testcase": false, "constructor": false}, {"identifier": "getCode", "parameters": "( String name )", "modifiers": "@Override public", "return": "Code", "signature": "Code getCode( String name )", "full_signature": "@Override public Code getCode( String name )", "class_method_signature": "BasicDocument.getCode( String name )", "testcase": false, "constructor": false}, {"identifier": "getCodeWithScope", "parameters": "( String name )", "modifiers": "@Override public", "return": "CodeWithScope", "signature": "CodeWithScope getCodeWithScope( String name )", "full_signature": "@Override public CodeWithScope getCodeWithScope( String name )", "class_method_signature": "BasicDocument.getCodeWithScope( String name )", "testcase": false, "constructor": false}, {"identifier": "getObjectId", "parameters": "( String name )", "modifiers": "@Override public", "return": "ObjectId", "signature": "ObjectId getObjectId( String name )", "full_signature": "@Override public ObjectId getObjectId( String name )", "class_method_signature": "BasicDocument.getObjectId( String name )", "testcase": false, "constructor": false}, {"identifier": "getBinary", "parameters": "( String name )", "modifiers": "@Override public", "return": "Binary", "signature": "Binary getBinary( String name )", "full_signature": "@Override public Binary getBinary( String name )", "class_method_signature": "BasicDocument.getBinary( String name )", "testcase": false, "constructor": false}, {"identifier": "getSymbol", "parameters": "( String name )", "modifiers": "@Override public", "return": "Symbol", "signature": "Symbol getSymbol( String name )", "full_signature": "@Override public Symbol getSymbol( String name )", "class_method_signature": "BasicDocument.getSymbol( String name )", "testcase": false, "constructor": false}, {"identifier": "getPattern", "parameters": "( String name )", "modifiers": "@Override public", "return": "Pattern", "signature": "Pattern getPattern( String name )", "full_signature": "@Override public Pattern getPattern( String name )", "class_method_signature": "BasicDocument.getPattern( String name )", "testcase": false, "constructor": false}, {"identifier": "getUuid", "parameters": "( String name )", "modifiers": "@Override public", "return": "UUID", "signature": "UUID getUuid( String name )", "full_signature": "@Override public UUID getUuid( String name )", "class_method_signature": "BasicDocument.getUuid( String name )", "testcase": false, "constructor": false}, {"identifier": "getUuid", "parameters": "( String name,\n                         UUID defaultValue )", "modifiers": "@Override public", "return": "UUID", "signature": "UUID getUuid( String name,\n                         UUID defaultValue )", "full_signature": "@Override public UUID getUuid( String name,\n                         UUID defaultValue )", "class_method_signature": "BasicDocument.getUuid( String name,\n                         UUID defaultValue )", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "( String name )", "modifiers": "@Override public", "return": "int", "signature": "int getType( String name )", "full_signature": "@Override public int getType( String name )", "class_method_signature": "BasicDocument.getType( String name )", "testcase": false, "constructor": false}, {"identifier": "putAll", "parameters": "( Document object )", "modifiers": "@Override public", "return": "void", "signature": "void putAll( Document object )", "full_signature": "@Override public void putAll( Document object )", "class_method_signature": "BasicDocument.putAll( Document object )", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "( String name )", "modifiers": "@Override public", "return": "Object", "signature": "Object remove( String name )", "full_signature": "@Override public Object remove( String name )", "class_method_signature": "BasicDocument.remove( String name )", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void removeAll()", "full_signature": "@Override public void removeAll()", "class_method_signature": "BasicDocument.removeAll()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "BasicDocument.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "( Object obj )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals( Object obj )", "full_signature": "@Override public boolean equals( Object obj )", "class_method_signature": "BasicDocument.equals( Object obj )", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BasicDocument.toString()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "MutableDocument", "signature": "MutableDocument clone()", "full_signature": "@Override public MutableDocument clone()", "class_method_signature": "BasicDocument.clone()", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "( Map<String, Object> changedFields )", "modifiers": "@Override public", "return": "Document", "signature": "Document with( Map<String, Object> changedFields )", "full_signature": "@Override public Document with( Map<String, Object> changedFields )", "class_method_signature": "BasicDocument.with( Map<String, Object> changedFields )", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "( String fieldName,\n                          Object newValue )", "modifiers": "@Override public", "return": "Document", "signature": "Document with( String fieldName,\n                          Object newValue )", "full_signature": "@Override public Document with( String fieldName,\n                          Object newValue )", "class_method_signature": "BasicDocument.with( String fieldName,\n                          Object newValue )", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "( ValueTransformer transformer )", "modifiers": "@Override public", "return": "Document", "signature": "Document with( ValueTransformer transformer )", "full_signature": "@Override public Document with( ValueTransformer transformer )", "class_method_signature": "BasicDocument.with( ValueTransformer transformer )", "testcase": false, "constructor": false}, {"identifier": "withVariablesReplaced", "parameters": "( Properties properties )", "modifiers": "@Override public", "return": "Document", "signature": "Document withVariablesReplaced( Properties properties )", "full_signature": "@Override public Document withVariablesReplaced( Properties properties )", "class_method_signature": "BasicDocument.withVariablesReplaced( Properties properties )", "testcase": false, "constructor": false}, {"identifier": "withVariablesReplacedWithSystemProperties", "parameters": "()", "modifiers": "@Override public", "return": "Document", "signature": "Document withVariablesReplacedWithSystemProperties()", "full_signature": "@Override public Document withVariablesReplacedWithSystemProperties()", "class_method_signature": "BasicDocument.withVariablesReplacedWithSystemProperties()", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "( Object value )", "modifiers": "protected", "return": "Object", "signature": "Object unwrap( Object value )", "full_signature": "protected Object unwrap( Object value )", "class_method_signature": "BasicDocument.unwrap( Object value )", "testcase": false, "constructor": false}], "file": "modeshape-schematic/src/main/java/org/modeshape/schematic/internal/document/BasicDocument.java"}, "focal_method": {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "MutableDocument", "body": "@Override\n    public MutableDocument clone() {\n        BasicDocument clone = new BasicDocument();\n        for (Field field : this.fields()) {\n            Object value = unwrap(field.getValue());\n            if (value instanceof Array) {\n                value = ((Array)value).clone();\n            } else if (value instanceof Document) {\n                value = ((Document)value).clone();\n            }// every other kind of value is immutable\n            clone.put(field.getName(), value);\n        }\n        return clone;\n    }", "signature": "MutableDocument clone()", "full_signature": "@Override public MutableDocument clone()", "class_method_signature": "BasicDocument.clone()", "testcase": false, "constructor": false, "invocations": ["fields", "unwrap", "getValue", "clone", "clone", "put", "getName"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}