{"test_class": {"identifier": "TestAdminHelper", "superclass": "", "interfaces": "", "fields": [], "file": "uReplicator-Manager/src/test/java/com/uber/stream/kafka/mirrormaker/manager/core/TestAdminHelper.java"}, "test_case": {"identifier": "testGetControllerAutobalancing", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetControllerAutobalancing() throws Exception {\n        ControllerHelixManager mockHelixManager = EasyMock.createMock(ControllerHelixManager.class);\n        AdminHelper helper = new AdminHelper(mockHelixManager);\n        Map<String, PriorityQueue<InstanceTopicPartitionHolder>> instanceMap = new HashMap<>();\n        PriorityQueue<InstanceTopicPartitionHolder> sjc1aTosjc1Agg1 = new PriorityQueue<>();\n        String pipeline = ControllerUtils.getPipelineName(\"sjc1a\", \"sjc1-agg1\");\n        InstanceTopicPartitionHolder ith = new InstanceTopicPartitionHolder(\"compute9527-sjc1\",\n            new TopicPartition(pipeline, 0));\n        sjc1aTosjc1Agg1.add(ith);\n        instanceMap.put(pipeline, sjc1aTosjc1Agg1);\n        EasyMock.expect(mockHelixManager.getPipelineToInstanceMap()).andReturn(instanceMap).atLeastOnce();\n        EasyMock.expect(mockHelixManager.getControllerAutobalancingStatus(\"compute9527-sjc1\"))\n            .andReturn(false);\n        EasyMock.replay(mockHelixManager);\n        JSONObject status = helper.getControllerAutobalancingStatus();\n        Assert.assertEquals(status.size(), 1);\n        JSONObject detail = (JSONObject) status.get(\"compute9527-sjc1\");\n        Assert.assertEquals(detail.get(\"autoBalance\"), false);\n        EasyMock.verify(mockHelixManager);\n    }", "signature": "void testGetControllerAutobalancing()", "full_signature": "@Test public void testGetControllerAutobalancing()", "class_method_signature": "TestAdminHelper.testGetControllerAutobalancing()", "testcase": true, "constructor": false, "invocations": ["createMock", "getPipelineName", "add", "put", "atLeastOnce", "andReturn", "expect", "getPipelineToInstanceMap", "andReturn", "expect", "getControllerAutobalancingStatus", "replay", "getControllerAutobalancingStatus", "assertEquals", "size", "get", "assertEquals", "get", "verify"]}, "focal_class": {"identifier": "AdminHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(AdminHelper.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(AdminHelper.class)", "var_name": "LOGGER"}, {"original_string": "private ControllerHelixManager helixManager;", "modifier": "private", "type": "ControllerHelixManager", "declarator": "helixManager", "var_name": "helixManager"}], "methods": [{"identifier": "AdminHelper", "parameters": "(ControllerHelixManager helixManager)", "modifiers": "public", "return": "", "signature": " AdminHelper(ControllerHelixManager helixManager)", "full_signature": "public  AdminHelper(ControllerHelixManager helixManager)", "class_method_signature": "AdminHelper.AdminHelper(ControllerHelixManager helixManager)", "testcase": false, "constructor": true}, {"identifier": "setControllerAutobalancing", "parameters": "(boolean enable)", "modifiers": "public", "return": "Map<String, Boolean>", "signature": "Map<String, Boolean> setControllerAutobalancing(boolean enable)", "full_signature": "public Map<String, Boolean> setControllerAutobalancing(boolean enable)", "class_method_signature": "AdminHelper.setControllerAutobalancing(boolean enable)", "testcase": false, "constructor": false}, {"identifier": "getControllerAutobalancingStatus", "parameters": "()", "modifiers": "public", "return": "JSONObject", "signature": "JSONObject getControllerAutobalancingStatus()", "full_signature": "public JSONObject getControllerAutobalancingStatus()", "class_method_signature": "AdminHelper.getControllerAutobalancingStatus()", "testcase": false, "constructor": false}, {"identifier": "getControllerAutobalancingStatus", "parameters": "(String srcCluster, String dstCluster)", "modifiers": "public", "return": "JSONObject", "signature": "JSONObject getControllerAutobalancingStatus(String srcCluster, String dstCluster)", "full_signature": "public JSONObject getControllerAutobalancingStatus(String srcCluster, String dstCluster)", "class_method_signature": "AdminHelper.getControllerAutobalancingStatus(String srcCluster, String dstCluster)", "testcase": false, "constructor": false}, {"identifier": "setControllerAutobalancing", "parameters": "(String srcCluster, String dstCluster, boolean enable)", "modifiers": "public", "return": "Map<String, Boolean>", "signature": "Map<String, Boolean> setControllerAutobalancing(String srcCluster, String dstCluster, boolean enable)", "full_signature": "public Map<String, Boolean> setControllerAutobalancing(String srcCluster, String dstCluster, boolean enable)", "class_method_signature": "AdminHelper.setControllerAutobalancing(String srcCluster, String dstCluster, boolean enable)", "testcase": false, "constructor": false}], "file": "uReplicator-Manager/src/main/java/com/uber/stream/kafka/mirrormaker/manager/core/AdminHelper.java"}, "focal_method": {"identifier": "getControllerAutobalancingStatus", "parameters": "()", "modifiers": "public", "return": "JSONObject", "body": "public JSONObject getControllerAutobalancingStatus() {\n        return getControllerAutobalancingStatus(\"\", \"\");\n    }", "signature": "JSONObject getControllerAutobalancingStatus()", "full_signature": "public JSONObject getControllerAutobalancingStatus()", "class_method_signature": "AdminHelper.getControllerAutobalancingStatus()", "testcase": false, "constructor": false, "invocations": ["getControllerAutobalancingStatus"]}, "repository": {"repo_id": 60201162, "url": "https://github.com/uber/uReplicator", "language": "Java", "is_fork": false, "fork_count": 148, "stargazer_count": 652, "size": 2223, "license": "licensed"}}