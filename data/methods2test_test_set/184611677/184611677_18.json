{"test_class": {"identifier": "SearchProductServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private SearchProductService searchProductService;", "modifier": "@Autowired\n    private", "type": "SearchProductService", "declarator": "searchProductService", "var_name": "searchProductService"}], "file": "search-service-project/search-service-app/src/test/java/cn/iocoder/mall/searchservice/service/product/SearchProductServiceTest.java"}, "test_case": {"identifier": "testGetSearchCondition", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSearchCondition() {\n        SearchProductConditionBO conditionBO = searchProductService.getSearchProductCondition(\"\u5546\u54c1\", Collections.singletonList(\"category\"));\n        System.out.println(conditionBO);\n    }", "signature": "void testGetSearchCondition()", "full_signature": "@Test public void testGetSearchCondition()", "class_method_signature": "SearchProductServiceTest.testGetSearchCondition()", "testcase": true, "constructor": false, "invocations": ["getSearchProductCondition", "letonList(\"ca", "println"]}, "focal_class": {"identifier": "SearchProductService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ESProductRepository productRepository;", "modifier": "@Autowired\n    private", "type": "ESProductRepository", "declarator": "productRepository", "var_name": "productRepository"}, {"original_string": "@Autowired\n    private ElasticsearchTemplate elasticsearchTemplate;", "modifier": "@Autowired\n    private", "type": "ElasticsearchTemplate", "declarator": "elasticsearchTemplate", "var_name": "elasticsearchTemplate"}], "methods": [{"identifier": "pageSearchProduct", "parameters": "(SearchProductPageQueryBO pageQueryBO)", "modifiers": "public", "return": "PageResult<SearchProductBO>", "signature": "PageResult<SearchProductBO> pageSearchProduct(SearchProductPageQueryBO pageQueryBO)", "full_signature": "public PageResult<SearchProductBO> pageSearchProduct(SearchProductPageQueryBO pageQueryBO)", "class_method_signature": "SearchProductService.pageSearchProduct(SearchProductPageQueryBO pageQueryBO)", "testcase": false, "constructor": false}, {"identifier": "checkSortFieldInvalid", "parameters": "(List<SortingField> sorts)", "modifiers": "private", "return": "void", "signature": "void checkSortFieldInvalid(List<SortingField> sorts)", "full_signature": "private void checkSortFieldInvalid(List<SortingField> sorts)", "class_method_signature": "SearchProductService.checkSortFieldInvalid(List<SortingField> sorts)", "testcase": false, "constructor": false}, {"identifier": "saveSearchProduct", "parameters": "(SearchProductSaveBO saveBO)", "modifiers": "public", "return": "void", "signature": "void saveSearchProduct(SearchProductSaveBO saveBO)", "full_signature": "public void saveSearchProduct(SearchProductSaveBO saveBO)", "class_method_signature": "SearchProductService.saveSearchProduct(SearchProductSaveBO saveBO)", "testcase": false, "constructor": false}, {"identifier": "getSearchProductCondition", "parameters": "(String keyword, Collection<String> fields)", "modifiers": "public", "return": "SearchProductConditionBO", "signature": "SearchProductConditionBO getSearchProductCondition(String keyword, Collection<String> fields)", "full_signature": "public SearchProductConditionBO getSearchProductCondition(String keyword, Collection<String> fields)", "class_method_signature": "SearchProductService.getSearchProductCondition(String keyword, Collection<String> fields)", "testcase": false, "constructor": false}], "file": "search-service-project/search-service-app/src/main/java/cn/iocoder/mall/searchservice/service/product/SearchProductService.java"}, "focal_method": {"identifier": "getSearchProductCondition", "parameters": "(String keyword, Collection<String> fields)", "modifiers": "public", "return": "SearchProductConditionBO", "body": "public SearchProductConditionBO getSearchProductCondition(String keyword, Collection<String> fields) {\n        // \u521b\u5efa ES \u641c\u7d22\u6761\u4ef6\n        NativeSearchQueryBuilder nativeSearchQueryBuilder = new NativeSearchQueryBuilder();\n        // \u7b5b\u9009\n        if (StringUtils.hasText(keyword)) { // \u5982\u679c\u6709 keyword \uff0c\u5c31\u53bb\u5339\u914d\n            nativeSearchQueryBuilder.withQuery(QueryBuilders.multiMatchQuery(keyword,\n                    \"name\", \"sellPoint\", \"categoryName\"));\n        } else {\n            nativeSearchQueryBuilder.withQuery(QueryBuilders.matchAllQuery());\n        }\n        // \u805a\u5408\n        if (fields.contains(\"category\")) { // \u5546\u54c1\u5206\u7c7b\n            nativeSearchQueryBuilder.addAggregation(AggregationBuilders.terms(\"cids\").field(\"cid\"));\n        }\n        // \u6267\u884c\u67e5\u8be2\uff0c\u8fd4\u56de\u7ed3\u679c\n        return elasticsearchTemplate.query(nativeSearchQueryBuilder.build(), response -> {\n            SearchProductConditionBO result = new SearchProductConditionBO();\n            // categoryIds \u805a\u5408\n            Aggregation categoryIdsAggregation = response.getAggregations().get(\"cids\");\n            if (categoryIdsAggregation != null) {\n                result.setCids(new ArrayList<>());\n                for (LongTerms.Bucket bucket  : (((LongTerms) categoryIdsAggregation).getBuckets())) {\n                    result.getCids().add(bucket.getKeyAsNumber().intValue());\n                }\n            }\n            // \u8fd4\u56de\u7ed3\u679c\n            return result;\n        });\n    }", "signature": "SearchProductConditionBO getSearchProductCondition(String keyword, Collection<String> fields)", "full_signature": "public SearchProductConditionBO getSearchProductCondition(String keyword, Collection<String> fields)", "class_method_signature": "SearchProductService.getSearchProductCondition(String keyword, Collection<String> fields)", "testcase": false, "constructor": false, "invocations": ["hasText", "withQuery", "multiMatchQuery", "withQuery", "matchAllQuery", "contains", "addAggregation", "field", "terms", "query", "build", "get", "getAggregations", "setCids", "getBuckets", "add", "getCids", "intValue", "getKeyAsNumber"]}, "repository": {"repo_id": 184611677, "url": "https://github.com/YunaiV/onemall", "language": "Java", "is_fork": false, "fork_count": 1162, "stargazer_count": 2893, "size": 7986, "license": "licensed"}}