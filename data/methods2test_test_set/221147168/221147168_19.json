{"test_class": {"identifier": "BundleImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static BundleImpl bundle;", "modifier": "private static", "type": "BundleImpl", "declarator": "bundle", "var_name": "bundle"}, {"original_string": "private static BundleRegistry registry;", "modifier": "private static", "type": "BundleRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private static Manifest manifest;", "modifier": "private static", "type": "Manifest", "declarator": "manifest", "var_name": "manifest"}, {"original_string": "private static Ripener.Configuration configuration;", "modifier": "private static", "type": "Ripener.Configuration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private static BundleContextImpl context;", "modifier": "private static", "type": "BundleContextImpl", "declarator": "context", "var_name": "context"}], "file": "winegrower-core/src/test/java/org/apache/winegrower/deployer/BundleImplTest.java"}, "test_case": {"identifier": "getEntry", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void getEntry() {\n        assertNotNull(bundle.getEntry(\"org\"));\n    }", "signature": "void getEntry()", "full_signature": "@Test void getEntry()", "class_method_signature": "BundleImplTest.getEntry()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getEntry"]}, "focal_class": {"identifier": "BundleImpl", "superclass": "", "interfaces": "implements Bundle", "fields": [{"original_string": "private final File file;", "modifier": "private final", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "private final ClassLoader loader;", "modifier": "private final", "type": "ClassLoader", "declarator": "loader", "var_name": "loader"}, {"original_string": "private final long id;", "modifier": "private final", "type": "long", "declarator": "id", "var_name": "id"}, {"original_string": "private final BundleContextImpl context;", "modifier": "private final", "type": "BundleContextImpl", "declarator": "context", "var_name": "context"}, {"original_string": "private final Version version;", "modifier": "private final", "type": "Version", "declarator": "version", "var_name": "version"}, {"original_string": "private final String symbolicName;", "modifier": "private final", "type": "String", "declarator": "symbolicName", "var_name": "symbolicName"}, {"original_string": "private final Dictionary<String, String> headers;", "modifier": "private final", "type": "Dictionary<String, String>", "declarator": "headers", "var_name": "headers"}, {"original_string": "private final File dataFileBase;", "modifier": "private final", "type": "File", "declarator": "dataFileBase", "var_name": "dataFileBase"}, {"original_string": "private final Collection<String> includedResources;", "modifier": "private final", "type": "Collection<String>", "declarator": "includedResources", "var_name": "includedResources"}, {"original_string": "private final List<BundleRequirementImpl> requirements;", "modifier": "private final", "type": "List<BundleRequirementImpl>", "declarator": "requirements", "var_name": "requirements"}, {"original_string": "private final List<BundleCapabilityImpl> capabilities;", "modifier": "private final", "type": "List<BundleCapabilityImpl>", "declarator": "capabilities", "var_name": "capabilities"}, {"original_string": "private final BundleRegistry registry;", "modifier": "private final", "type": "BundleRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private volatile BundleRevision bundleRevision;", "modifier": "private volatile", "type": "BundleRevision", "declarator": "bundleRevision", "var_name": "bundleRevision"}, {"original_string": "private volatile BundleWiring bundleWiring;", "modifier": "private volatile", "type": "BundleWiring", "declarator": "bundleWiring", "var_name": "bundleWiring"}, {"original_string": "private int state = Bundle.UNINSTALLED;", "modifier": "private", "type": "int", "declarator": "state = Bundle.UNINSTALLED", "var_name": "state"}], "methods": [{"identifier": "BundleImpl", "parameters": "(final Manifest manifest, final File file, final BundleContextImpl context,\n               final Ripener.Configuration configuration, final long id,\n               final Collection<String> includedResources, final BundleRegistry registry)", "modifiers": "", "return": "", "signature": " BundleImpl(final Manifest manifest, final File file, final BundleContextImpl context,\n               final Ripener.Configuration configuration, final long id,\n               final Collection<String> includedResources, final BundleRegistry registry)", "full_signature": "  BundleImpl(final Manifest manifest, final File file, final BundleContextImpl context,\n               final Ripener.Configuration configuration, final long id,\n               final Collection<String> includedResources, final BundleRegistry registry)", "class_method_signature": "BundleImpl.BundleImpl(final Manifest manifest, final File file, final BundleContextImpl context,\n               final Ripener.Configuration configuration, final long id,\n               final Collection<String> includedResources, final BundleRegistry registry)", "testcase": false, "constructor": true}, {"identifier": "getLoader", "parameters": "()", "modifiers": "", "return": "ClassLoader", "signature": "ClassLoader getLoader()", "full_signature": " ClassLoader getLoader()", "class_method_signature": "BundleImpl.getLoader()", "testcase": false, "constructor": false}, {"identifier": "getRequirements", "parameters": "()", "modifiers": "", "return": "List<BundleRequirementImpl>", "signature": "List<BundleRequirementImpl> getRequirements()", "full_signature": " List<BundleRequirementImpl> getRequirements()", "class_method_signature": "BundleImpl.getRequirements()", "testcase": false, "constructor": false}, {"identifier": "getCapabilities", "parameters": "()", "modifiers": "", "return": "List<BundleCapabilityImpl>", "signature": "List<BundleCapabilityImpl> getCapabilities()", "full_signature": " List<BundleCapabilityImpl> getCapabilities()", "class_method_signature": "BundleImpl.getCapabilities()", "testcase": false, "constructor": false}, {"identifier": "allBundleListeners", "parameters": "()", "modifiers": "private", "return": "Stream<BundleListener>", "signature": "Stream<BundleListener> allBundleListeners()", "full_signature": "private Stream<BundleListener> allBundleListeners()", "class_method_signature": "BundleImpl.allBundleListeners()", "testcase": false, "constructor": false}, {"identifier": "onStart", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onStart()", "full_signature": " void onStart()", "class_method_signature": "BundleImpl.onStart()", "testcase": false, "constructor": false}, {"identifier": "onStop", "parameters": "()", "modifiers": "", "return": "void", "signature": "void onStop()", "full_signature": " void onStop()", "class_method_signature": "BundleImpl.onStop()", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getState()", "full_signature": "@Override public int getState()", "class_method_signature": "BundleImpl.getState()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "(final int options)", "modifiers": "@Override public", "return": "void", "signature": "void start(final int options)", "full_signature": "@Override public void start(final int options)", "class_method_signature": "BundleImpl.start(final int options)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void start()", "full_signature": "@Override public void start()", "class_method_signature": "BundleImpl.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "(final int options)", "modifiers": "@Override public", "return": "void", "signature": "void stop(final int options)", "full_signature": "@Override public void stop(final int options)", "class_method_signature": "BundleImpl.stop(final int options)", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "BundleImpl.stop()", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(final InputStream input)", "modifiers": "@Override public", "return": "void", "signature": "void update(final InputStream input)", "full_signature": "@Override public void update(final InputStream input)", "class_method_signature": "BundleImpl.update(final InputStream input)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void update()", "full_signature": "@Override public void update()", "class_method_signature": "BundleImpl.update()", "testcase": false, "constructor": false}, {"identifier": "uninstall", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void uninstall()", "full_signature": "@Override public void uninstall()", "class_method_signature": "BundleImpl.uninstall()", "testcase": false, "constructor": false}, {"identifier": "getHeaders", "parameters": "()", "modifiers": "@Override public", "return": "Dictionary<String, String>", "signature": "Dictionary<String, String> getHeaders()", "full_signature": "@Override public Dictionary<String, String> getHeaders()", "class_method_signature": "BundleImpl.getHeaders()", "testcase": false, "constructor": false}, {"identifier": "getBundleId", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getBundleId()", "full_signature": "@Override public long getBundleId()", "class_method_signature": "BundleImpl.getBundleId()", "testcase": false, "constructor": false}, {"identifier": "getLocation", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getLocation()", "full_signature": "@Override public String getLocation()", "class_method_signature": "BundleImpl.getLocation()", "testcase": false, "constructor": false}, {"identifier": "getRegisteredServices", "parameters": "()", "modifiers": "@Override public", "return": "ServiceReference<?>[]", "signature": "ServiceReference<?>[] getRegisteredServices()", "full_signature": "@Override public ServiceReference<?>[] getRegisteredServices()", "class_method_signature": "BundleImpl.getRegisteredServices()", "testcase": false, "constructor": false}, {"identifier": "getServicesInUse", "parameters": "()", "modifiers": "@Override public", "return": "ServiceReference<?>[]", "signature": "ServiceReference<?>[] getServicesInUse()", "full_signature": "@Override public ServiceReference<?>[] getServicesInUse()", "class_method_signature": "BundleImpl.getServicesInUse()", "testcase": false, "constructor": false}, {"identifier": "hasPermission", "parameters": "(final Object permission)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasPermission(final Object permission)", "full_signature": "@Override public boolean hasPermission(final Object permission)", "class_method_signature": "BundleImpl.hasPermission(final Object permission)", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "(final String name)", "modifiers": "@Override public", "return": "URL", "signature": "URL getResource(final String name)", "full_signature": "@Override public URL getResource(final String name)", "class_method_signature": "BundleImpl.getResource(final String name)", "testcase": false, "constructor": false}, {"identifier": "getHeaders", "parameters": "(final String locale)", "modifiers": "@Override public", "return": "Dictionary<String, String>", "signature": "Dictionary<String, String> getHeaders(final String locale)", "full_signature": "@Override public Dictionary<String, String> getHeaders(final String locale)", "class_method_signature": "BundleImpl.getHeaders(final String locale)", "testcase": false, "constructor": false}, {"identifier": "getSymbolicName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSymbolicName()", "full_signature": "@Override public String getSymbolicName()", "class_method_signature": "BundleImpl.getSymbolicName()", "testcase": false, "constructor": false}, {"identifier": "loadClass", "parameters": "(final String name)", "modifiers": "@Override public", "return": "Class<?>", "signature": "Class<?> loadClass(final String name)", "full_signature": "@Override public Class<?> loadClass(final String name)", "class_method_signature": "BundleImpl.loadClass(final String name)", "testcase": false, "constructor": false}, {"identifier": "getResources", "parameters": "(final String name)", "modifiers": "@Override public", "return": "Enumeration<URL>", "signature": "Enumeration<URL> getResources(final String name)", "full_signature": "@Override public Enumeration<URL> getResources(final String name)", "class_method_signature": "BundleImpl.getResources(final String name)", "testcase": false, "constructor": false}, {"identifier": "getEntryPaths", "parameters": "(final String path)", "modifiers": "@Override public", "return": "Enumeration<String>", "signature": "Enumeration<String> getEntryPaths(final String path)", "full_signature": "@Override public Enumeration<String> getEntryPaths(final String path)", "class_method_signature": "BundleImpl.getEntryPaths(final String path)", "testcase": false, "constructor": false}, {"identifier": "getEntry", "parameters": "(final String path)", "modifiers": "@Override public", "return": "URL", "signature": "URL getEntry(final String path)", "full_signature": "@Override public URL getEntry(final String path)", "class_method_signature": "BundleImpl.getEntry(final String path)", "testcase": false, "constructor": false}, {"identifier": "getLastModified", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getLastModified()", "full_signature": "@Override public long getLastModified()", "class_method_signature": "BundleImpl.getLastModified()", "testcase": false, "constructor": false}, {"identifier": "findEntries", "parameters": "(final String path, final String filePattern, final boolean recurse)", "modifiers": "@Override public", "return": "Enumeration<URL>", "signature": "Enumeration<URL> findEntries(final String path, final String filePattern, final boolean recurse)", "full_signature": "@Override public Enumeration<URL> findEntries(final String path, final String filePattern, final boolean recurse)", "class_method_signature": "BundleImpl.findEntries(final String path, final String filePattern, final boolean recurse)", "testcase": false, "constructor": false}, {"identifier": "doFilterEntry", "parameters": "(final Filter filter, final String prefix, final String name)", "modifiers": "private", "return": "boolean", "signature": "boolean doFilterEntry(final Filter filter, final String prefix, final String name)", "full_signature": "private boolean doFilterEntry(final Filter filter, final String prefix, final String name)", "class_method_signature": "BundleImpl.doFilterEntry(final Filter filter, final String prefix, final String name)", "testcase": false, "constructor": false}, {"identifier": "getBundleContext", "parameters": "()", "modifiers": "@Override public", "return": "BundleContext", "signature": "BundleContext getBundleContext()", "full_signature": "@Override public BundleContext getBundleContext()", "class_method_signature": "BundleImpl.getBundleContext()", "testcase": false, "constructor": false}, {"identifier": "getSignerCertificates", "parameters": "(final int signersType)", "modifiers": "@Override public", "return": "Map<X509Certificate, List<X509Certificate>>", "signature": "Map<X509Certificate, List<X509Certificate>> getSignerCertificates(final int signersType)", "full_signature": "@Override public Map<X509Certificate, List<X509Certificate>> getSignerCertificates(final int signersType)", "class_method_signature": "BundleImpl.getSignerCertificates(final int signersType)", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Override public", "return": "Version", "signature": "Version getVersion()", "full_signature": "@Override public Version getVersion()", "class_method_signature": "BundleImpl.getVersion()", "testcase": false, "constructor": false}, {"identifier": "adapt", "parameters": "(final Class<A> type)", "modifiers": "@Override public", "return": "A", "signature": "A adapt(final Class<A> type)", "full_signature": "@Override public A adapt(final Class<A> type)", "class_method_signature": "BundleImpl.adapt(final Class<A> type)", "testcase": false, "constructor": false}, {"identifier": "getDataFile", "parameters": "(final String filename)", "modifiers": "@Override public", "return": "File", "signature": "File getDataFile(final String filename)", "full_signature": "@Override public File getDataFile(final String filename)", "class_method_signature": "BundleImpl.getDataFile(final String filename)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(final Bundle o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(final Bundle o)", "full_signature": "@Override public int compareTo(final Bundle o)", "class_method_signature": "BundleImpl.compareTo(final Bundle o)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BundleImpl.toString()", "testcase": false, "constructor": false}], "file": "winegrower-core/src/main/java/org/apache/winegrower/deployer/BundleImpl.java"}, "focal_method": {"identifier": "getEntry", "parameters": "(final String path)", "modifiers": "@Override public", "return": "URL", "body": "@Override\n    public URL getEntry(final String path) {\n        return loader.getResource(path);\n    }", "signature": "URL getEntry(final String path)", "full_signature": "@Override public URL getEntry(final String path)", "class_method_signature": "BundleImpl.getEntry(final String path)", "testcase": false, "constructor": false, "invocations": ["getResource"]}, "repository": {"repo_id": 221147168, "url": "https://github.com/apache/karaf-winegrower", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 8, "size": 390, "license": "licensed"}}