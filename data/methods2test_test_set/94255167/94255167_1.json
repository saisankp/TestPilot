{"test_class": {"identifier": "TextInstructionsTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [{"original_string": "@Rule\n  public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n  public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "osrm-text-instructions/libjava-osrm-instructions/src/test/java/org/project_osrm/instructions/TextInstructionsTest.java"}, "test_case": {"identifier": "testCapitalizeFirstLetter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCapitalizeFirstLetter() {\n    assertEquals(\"Mapbox\", TextInstructions.capitalizeFirstLetter(\"mapbox\"));\n  }", "signature": "void testCapitalizeFirstLetter()", "full_signature": "@Test public void testCapitalizeFirstLetter()", "class_method_signature": "TextInstructionsTest.testCapitalizeFirstLetter()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "capitalizeFirstLetter"]}, "focal_class": {"identifier": "TextInstructions", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(TextInstructions.class.getSimpleName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(TextInstructions.class.getSimpleName())", "var_name": "logger"}, {"original_string": "private TokenizedInstructionHook tokenizedInstructionHook;", "modifier": "private", "type": "TokenizedInstructionHook", "declarator": "tokenizedInstructionHook", "var_name": "tokenizedInstructionHook"}, {"original_string": "private JsonObject rootObject;", "modifier": "private", "type": "JsonObject", "declarator": "rootObject", "var_name": "rootObject"}, {"original_string": "private JsonObject versionObject;", "modifier": "private", "type": "JsonObject", "declarator": "versionObject", "var_name": "versionObject"}], "methods": [{"identifier": "TextInstructions", "parameters": "(String language, String version)", "modifiers": "public", "return": "", "signature": " TextInstructions(String language, String version)", "full_signature": "public  TextInstructions(String language, String version)", "class_method_signature": "TextInstructions.TextInstructions(String language, String version)", "testcase": false, "constructor": true}, {"identifier": "getTokenizedInstructionHook", "parameters": "()", "modifiers": "public", "return": "TokenizedInstructionHook", "signature": "TokenizedInstructionHook getTokenizedInstructionHook()", "full_signature": "public TokenizedInstructionHook getTokenizedInstructionHook()", "class_method_signature": "TextInstructions.getTokenizedInstructionHook()", "testcase": false, "constructor": false}, {"identifier": "setTokenizedInstructionHook", "parameters": "(TokenizedInstructionHook tokenizedInstructionHook)", "modifiers": "public", "return": "void", "signature": "void setTokenizedInstructionHook(TokenizedInstructionHook tokenizedInstructionHook)", "full_signature": "public void setTokenizedInstructionHook(TokenizedInstructionHook tokenizedInstructionHook)", "class_method_signature": "TextInstructions.setTokenizedInstructionHook(TokenizedInstructionHook tokenizedInstructionHook)", "testcase": false, "constructor": false}, {"identifier": "getRootObject", "parameters": "()", "modifiers": "public", "return": "JsonObject", "signature": "JsonObject getRootObject()", "full_signature": "public JsonObject getRootObject()", "class_method_signature": "TextInstructions.getRootObject()", "testcase": false, "constructor": false}, {"identifier": "getVersionObject", "parameters": "()", "modifiers": "public", "return": "JsonObject", "signature": "JsonObject getVersionObject()", "full_signature": "public JsonObject getVersionObject()", "class_method_signature": "TextInstructions.getVersionObject()", "testcase": false, "constructor": false}, {"identifier": "capitalizeFirstLetter", "parameters": "(String text)", "modifiers": "public static", "return": "String", "signature": "String capitalizeFirstLetter(String text)", "full_signature": "public static String capitalizeFirstLetter(String text)", "class_method_signature": "TextInstructions.capitalizeFirstLetter(String text)", "testcase": false, "constructor": false}, {"identifier": "ordinalize", "parameters": "(Integer number)", "modifiers": "public", "return": "String", "signature": "String ordinalize(Integer number)", "full_signature": "public String ordinalize(Integer number)", "class_method_signature": "TextInstructions.ordinalize(Integer number)", "testcase": false, "constructor": false}, {"identifier": "directionFromDegree", "parameters": "(Double degree)", "modifiers": "public", "return": "String", "signature": "String directionFromDegree(Double degree)", "full_signature": "public String directionFromDegree(Double degree)", "class_method_signature": "TextInstructions.directionFromDegree(Double degree)", "testcase": false, "constructor": false}, {"identifier": "laneConfig", "parameters": "(LegStep step)", "modifiers": "public", "return": "String", "signature": "String laneConfig(LegStep step)", "full_signature": "public String laneConfig(LegStep step)", "class_method_signature": "TextInstructions.laneConfig(LegStep step)", "testcase": false, "constructor": false}, {"identifier": "compile", "parameters": "(LegStep step)", "modifiers": "public", "return": "String", "signature": "String compile(LegStep step)", "full_signature": "public String compile(LegStep step)", "class_method_signature": "TextInstructions.compile(LegStep step)", "testcase": false, "constructor": false}], "file": "osrm-text-instructions/libjava-osrm-instructions/src/main/java/org/project_osrm/instructions/TextInstructions.java"}, "focal_method": {"identifier": "capitalizeFirstLetter", "parameters": "(String text)", "modifiers": "public static", "return": "String", "body": "public static String capitalizeFirstLetter(String text) {\n    return text.substring(0, 1).toUpperCase() + text.substring(1);\n  }", "signature": "String capitalizeFirstLetter(String text)", "full_signature": "public static String capitalizeFirstLetter(String text)", "class_method_signature": "TextInstructions.capitalizeFirstLetter(String text)", "testcase": false, "constructor": false, "invocations": ["toUpperCase", "substring", "substring"]}, "repository": {"repo_id": 94255167, "url": "https://github.com/Project-OSRM/osrm-text-instructions.java", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 255, "license": "licensed"}}