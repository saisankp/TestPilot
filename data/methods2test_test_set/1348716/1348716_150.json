{"test_class": {"identifier": "LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LoanDisbursementStrategy loanDisbursementStrategy;", "modifier": "private", "type": "LoanDisbursementStrategy", "declarator": "loanDisbursementStrategy", "var_name": "loanDisbursementStrategy"}, {"original_string": "@Mock private ScheduledEvent scheduledEvent;", "modifier": "@Mock private", "type": "ScheduledEvent", "declarator": "scheduledEvent", "var_name": "scheduledEvent"}], "file": "appdomain/src/test/java/org/mifos/clientportfolio/newloan/domain/LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImplTest.java"}, "test_case": {"identifier": "shouldFindNextMatchingDateInclusiveOfDateProvided", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldFindNextMatchingDateInclusiveOfDateProvided() {\n        \n        // setup\n        LocalDate fromAndInclusiveOf = new LocalDate();\n        DateTime expectedDateTimeToStartSearchFrom = fromAndInclusiveOf.minusDays(1).toDateMidnight().toDateTime();\n        DateTime nextMatchingDate = new DateTime();\n        \n        // stubbing\n        when(scheduledEvent.nextEventDateAfter(expectedDateTimeToStartSearchFrom)).thenReturn(nextMatchingDate);\n        \n        // exercise test\n        LocalDate result = loanDisbursementStrategy.findClosestMatchingDateFromAndInclusiveOf(fromAndInclusiveOf);\n        \n        // verification\n        assertThat(result, is(nextMatchingDate.toLocalDate()));\n    }", "signature": "void shouldFindNextMatchingDateInclusiveOfDateProvided()", "full_signature": "@Test public void shouldFindNextMatchingDateInclusiveOfDateProvided()", "class_method_signature": "LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImplTest.shouldFindNextMatchingDateInclusiveOfDateProvided()", "testcase": true, "constructor": false, "invocations": ["toDateTime", "toDateMidnight", "minusDays", "thenReturn", "when", "nextEventDateAfter", "findClosestMatchingDateFromAndInclusiveOf", "assertThat", "is", "toLocalDate"]}, "focal_class": {"identifier": "LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl", "superclass": "", "interfaces": "implements LoanDisbursementStrategy", "fields": [{"original_string": "private final ScheduledEvent scheduledEvent;", "modifier": "private final", "type": "ScheduledEvent", "declarator": "scheduledEvent", "var_name": "scheduledEvent"}, {"original_string": "private final LocalDate nextValidCustomerMeetingDate;", "modifier": "private final", "type": "LocalDate", "declarator": "nextValidCustomerMeetingDate", "var_name": "nextValidCustomerMeetingDate"}], "methods": [{"identifier": "LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl", "parameters": "(ScheduledEvent scheduledEvent, LocalDate nextValidCustomerMeetingDate)", "modifiers": "public", "return": "", "signature": " LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl(ScheduledEvent scheduledEvent, LocalDate nextValidCustomerMeetingDate)", "full_signature": "public  LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl(ScheduledEvent scheduledEvent, LocalDate nextValidCustomerMeetingDate)", "class_method_signature": "LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl.LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl(ScheduledEvent scheduledEvent, LocalDate nextValidCustomerMeetingDate)", "testcase": false, "constructor": true}, {"identifier": "findClosestMatchingDateFromAndInclusiveOf", "parameters": "(LocalDate fromAndInclusiveOf)", "modifiers": "@Override public", "return": "LocalDate", "signature": "LocalDate findClosestMatchingDateFromAndInclusiveOf(LocalDate fromAndInclusiveOf)", "full_signature": "@Override public LocalDate findClosestMatchingDateFromAndInclusiveOf(LocalDate fromAndInclusiveOf)", "class_method_signature": "LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl.findClosestMatchingDateFromAndInclusiveOf(LocalDate fromAndInclusiveOf)", "testcase": false, "constructor": false}, {"identifier": "isDisbursementDateValidInRelationToSchedule", "parameters": "(LocalDate disbursementDate)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDisbursementDateValidInRelationToSchedule(LocalDate disbursementDate)", "full_signature": "@Override public boolean isDisbursementDateValidInRelationToSchedule(LocalDate disbursementDate)", "class_method_signature": "LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl.isDisbursementDateValidInRelationToSchedule(LocalDate disbursementDate)", "testcase": false, "constructor": false}], "file": "appdomain/src/main/java/org/mifos/clientportfolio/newloan/domain/LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl.java"}, "focal_method": {"identifier": "findClosestMatchingDateFromAndInclusiveOf", "parameters": "(LocalDate fromAndInclusiveOf)", "modifiers": "@Override public", "return": "LocalDate", "body": "@Override\n    public LocalDate findClosestMatchingDateFromAndInclusiveOf(LocalDate fromAndInclusiveOf) {\n        \n        LocalDate closestMatch = nextValidCustomerMeetingDate;\n        if (closestMatch.isBefore(fromAndInclusiveOf)) {\n            closestMatch = new LocalDate(scheduledEvent.nextEventDateAfter(closestMatch.toDateMidnight().toDateTime()));\n            while (closestMatch.isBefore(fromAndInclusiveOf)) {\n                closestMatch = new LocalDate(scheduledEvent.nextEventDateAfter(closestMatch.toDateMidnight().toDateTime()));\n            }\n        }\n        return closestMatch;\n    }", "signature": "LocalDate findClosestMatchingDateFromAndInclusiveOf(LocalDate fromAndInclusiveOf)", "full_signature": "@Override public LocalDate findClosestMatchingDateFromAndInclusiveOf(LocalDate fromAndInclusiveOf)", "class_method_signature": "LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl.findClosestMatchingDateFromAndInclusiveOf(LocalDate fromAndInclusiveOf)", "testcase": false, "constructor": false, "invocations": ["isBefore", "nextEventDateAfter", "toDateTime", "toDateMidnight", "isBefore", "nextEventDateAfter", "toDateTime", "toDateMidnight"]}, "repository": {"repo_id": 1348716, "url": "https://github.com/mifos/head", "language": "Java", "is_fork": false, "fork_count": 91, "stargazer_count": 55, "size": 532732, "license": "licensed"}}