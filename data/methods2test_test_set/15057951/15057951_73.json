{"test_class": {"identifier": "BasicParamEditorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final RepositoryName REPOSITORY_NAME = RepositoryName.from(\"repository\");", "modifier": "private static final", "type": "RepositoryName", "declarator": "REPOSITORY_NAME = RepositoryName.from(\"repository\")", "var_name": "REPOSITORY_NAME"}, {"original_string": "private EditableParamRepository editableRepository;", "modifier": "private", "type": "EditableParamRepository", "declarator": "editableRepository", "var_name": "editableRepository"}, {"original_string": "private PreparedParamCache cache;", "modifier": "private", "type": "PreparedParamCache", "declarator": "cache", "var_name": "cache"}, {"original_string": "private ParamEditor paramEditor;", "modifier": "private", "type": "ParamEditor", "declarator": "paramEditor", "var_name": "paramEditor"}], "file": "smartparam-editor/src/test/java/org/smartparam/editor/core/BasicParamEditorTest.java"}, "test_case": {"identifier": "shouldDeleteEntryFromParameterAndInvalidateCacheForThisParameter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldDeleteEntryFromParameterAndInvalidateCacheForThisParameter() {\n        // given\n        ParameterEntryKey entryKey = new SimpleParameterEntryKey(\"key\");\n\n        // when\n        paramEditor.deleteEntry(REPOSITORY_NAME, \"parameter\", entryKey);\n\n        // then\n        verify(editableRepository).deleteEntry(\"parameter\", entryKey);\n        verify(cache).invalidate(\"parameter\");\n    }", "signature": "void shouldDeleteEntryFromParameterAndInvalidateCacheForThisParameter()", "full_signature": "@Test public void shouldDeleteEntryFromParameterAndInvalidateCacheForThisParameter()", "class_method_signature": "BasicParamEditorTest.shouldDeleteEntryFromParameterAndInvalidateCacheForThisParameter()", "testcase": true, "constructor": false, "invocations": ["deleteEntry", "deleteEntry", "verify", "invalidate", "verify"]}, "focal_class": {"identifier": "BasicParamEditor", "superclass": "", "interfaces": "implements ParamEditor", "fields": [{"original_string": "private final RepositoryStore<EditableParamRepository> repositories;", "modifier": "private final", "type": "RepositoryStore<EditableParamRepository>", "declarator": "repositories", "var_name": "repositories"}, {"original_string": "private final PreparedParamCache parameterCache;", "modifier": "private final", "type": "PreparedParamCache", "declarator": "parameterCache", "var_name": "parameterCache"}, {"original_string": "private final ParameterEntryMapConverter converter;", "modifier": "private final", "type": "ParameterEntryMapConverter", "declarator": "converter", "var_name": "converter"}], "methods": [{"identifier": "BasicParamEditor", "parameters": "(ParamEngine paramEngine, ParameterEntryMapConverter entryMapConverter)", "modifiers": "public", "return": "", "signature": " BasicParamEditor(ParamEngine paramEngine, ParameterEntryMapConverter entryMapConverter)", "full_signature": "public  BasicParamEditor(ParamEngine paramEngine, ParameterEntryMapConverter entryMapConverter)", "class_method_signature": "BasicParamEditor.BasicParamEditor(ParamEngine paramEngine, ParameterEntryMapConverter entryMapConverter)", "testcase": false, "constructor": true}, {"identifier": "repositories", "parameters": "()", "modifiers": "@Override public", "return": "List<RepositoryName>", "signature": "List<RepositoryName> repositories()", "full_signature": "@Override public List<RepositoryName> repositories()", "class_method_signature": "BasicParamEditor.repositories()", "testcase": false, "constructor": false}, {"identifier": "clearCache", "parameters": "(String parameterName)", "modifiers": "private", "return": "void", "signature": "void clearCache(String parameterName)", "full_signature": "private void clearCache(String parameterName)", "class_method_signature": "BasicParamEditor.clearCache(String parameterName)", "testcase": false, "constructor": false}, {"identifier": "createParameter", "parameters": "(RepositoryName in, Parameter parameter)", "modifiers": "@Override public", "return": "ParameterKey", "signature": "ParameterKey createParameter(RepositoryName in, Parameter parameter)", "full_signature": "@Override public ParameterKey createParameter(RepositoryName in, Parameter parameter)", "class_method_signature": "BasicParamEditor.createParameter(RepositoryName in, Parameter parameter)", "testcase": false, "constructor": false}, {"identifier": "updateParameter", "parameters": "(RepositoryName in, String parameterName, Parameter parameter)", "modifiers": "@Override public", "return": "void", "signature": "void updateParameter(RepositoryName in, String parameterName, Parameter parameter)", "full_signature": "@Override public void updateParameter(RepositoryName in, String parameterName, Parameter parameter)", "class_method_signature": "BasicParamEditor.updateParameter(RepositoryName in, String parameterName, Parameter parameter)", "testcase": false, "constructor": false}, {"identifier": "deleteParameter", "parameters": "(RepositoryName in, String parameterName)", "modifiers": "@Override public", "return": "void", "signature": "void deleteParameter(RepositoryName in, String parameterName)", "full_signature": "@Override public void deleteParameter(RepositoryName in, String parameterName)", "class_method_signature": "BasicParamEditor.deleteParameter(RepositoryName in, String parameterName)", "testcase": false, "constructor": false}, {"identifier": "addLevel", "parameters": "(RepositoryName in, String parameterName, Level level)", "modifiers": "@Override public", "return": "DescribedEntity<LevelKey>", "signature": "DescribedEntity<LevelKey> addLevel(RepositoryName in, String parameterName, Level level)", "full_signature": "@Override public DescribedEntity<LevelKey> addLevel(RepositoryName in, String parameterName, Level level)", "class_method_signature": "BasicParamEditor.addLevel(RepositoryName in, String parameterName, Level level)", "testcase": false, "constructor": false}, {"identifier": "reorderLevels", "parameters": "(RepositoryName in, String parameterName, List<LevelKey> orderedLevels)", "modifiers": "@Override public", "return": "void", "signature": "void reorderLevels(RepositoryName in, String parameterName, List<LevelKey> orderedLevels)", "full_signature": "@Override public void reorderLevels(RepositoryName in, String parameterName, List<LevelKey> orderedLevels)", "class_method_signature": "BasicParamEditor.reorderLevels(RepositoryName in, String parameterName, List<LevelKey> orderedLevels)", "testcase": false, "constructor": false}, {"identifier": "updateLevel", "parameters": "(RepositoryName in, String parameterName, LevelKey levelKey, Level level)", "modifiers": "@Override public", "return": "void", "signature": "void updateLevel(RepositoryName in, String parameterName, LevelKey levelKey, Level level)", "full_signature": "@Override public void updateLevel(RepositoryName in, String parameterName, LevelKey levelKey, Level level)", "class_method_signature": "BasicParamEditor.updateLevel(RepositoryName in, String parameterName, LevelKey levelKey, Level level)", "testcase": false, "constructor": false}, {"identifier": "deleteLevel", "parameters": "(RepositoryName in, String parameterName, LevelKey levelKey)", "modifiers": "@Override public", "return": "void", "signature": "void deleteLevel(RepositoryName in, String parameterName, LevelKey levelKey)", "full_signature": "@Override public void deleteLevel(RepositoryName in, String parameterName, LevelKey levelKey)", "class_method_signature": "BasicParamEditor.deleteLevel(RepositoryName in, String parameterName, LevelKey levelKey)", "testcase": false, "constructor": false}, {"identifier": "addEntry", "parameters": "(RepositoryName in, String parameterName, MapEntry entryMap)", "modifiers": "@Override public", "return": "DescribedEntity<ParameterEntryKey>", "signature": "DescribedEntity<ParameterEntryKey> addEntry(RepositoryName in, String parameterName, MapEntry entryMap)", "full_signature": "@Override public DescribedEntity<ParameterEntryKey> addEntry(RepositoryName in, String parameterName, MapEntry entryMap)", "class_method_signature": "BasicParamEditor.addEntry(RepositoryName in, String parameterName, MapEntry entryMap)", "testcase": false, "constructor": false}, {"identifier": "addEntries", "parameters": "(RepositoryName in, String parameterName, Iterable<MapEntry> entries)", "modifiers": "@Override public", "return": "DescribedCollection<ParameterEntryKey>", "signature": "DescribedCollection<ParameterEntryKey> addEntries(RepositoryName in, String parameterName, Iterable<MapEntry> entries)", "full_signature": "@Override public DescribedCollection<ParameterEntryKey> addEntries(RepositoryName in, String parameterName, Iterable<MapEntry> entries)", "class_method_signature": "BasicParamEditor.addEntries(RepositoryName in, String parameterName, Iterable<MapEntry> entries)", "testcase": false, "constructor": false}, {"identifier": "updateEntry", "parameters": "(RepositoryName in, String parameterName, ParameterEntryKey entryKey, MapEntry entryMap)", "modifiers": "@Override public", "return": "void", "signature": "void updateEntry(RepositoryName in, String parameterName, ParameterEntryKey entryKey, MapEntry entryMap)", "full_signature": "@Override public void updateEntry(RepositoryName in, String parameterName, ParameterEntryKey entryKey, MapEntry entryMap)", "class_method_signature": "BasicParamEditor.updateEntry(RepositoryName in, String parameterName, ParameterEntryKey entryKey, MapEntry entryMap)", "testcase": false, "constructor": false}, {"identifier": "deleteEntry", "parameters": "(RepositoryName in, String parameterName, ParameterEntryKey entryKey)", "modifiers": "@Override public", "return": "void", "signature": "void deleteEntry(RepositoryName in, String parameterName, ParameterEntryKey entryKey)", "full_signature": "@Override public void deleteEntry(RepositoryName in, String parameterName, ParameterEntryKey entryKey)", "class_method_signature": "BasicParamEditor.deleteEntry(RepositoryName in, String parameterName, ParameterEntryKey entryKey)", "testcase": false, "constructor": false}, {"identifier": "deleteEntries", "parameters": "(RepositoryName in, String parameterName, Iterable<ParameterEntryKey> entryKeys)", "modifiers": "@Override public", "return": "void", "signature": "void deleteEntries(RepositoryName in, String parameterName, Iterable<ParameterEntryKey> entryKeys)", "full_signature": "@Override public void deleteEntries(RepositoryName in, String parameterName, Iterable<ParameterEntryKey> entryKeys)", "class_method_signature": "BasicParamEditor.deleteEntries(RepositoryName in, String parameterName, Iterable<ParameterEntryKey> entryKeys)", "testcase": false, "constructor": false}, {"identifier": "deleteEntries", "parameters": "(RepositoryName in, String parameterName)", "modifiers": "@Override public", "return": "void", "signature": "void deleteEntries(RepositoryName in, String parameterName)", "full_signature": "@Override public void deleteEntries(RepositoryName in, String parameterName)", "class_method_signature": "BasicParamEditor.deleteEntries(RepositoryName in, String parameterName)", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(EditableParamRepository repository, MapEntry entryMap, String parameterName)", "modifiers": "private", "return": "ParameterEntry", "signature": "ParameterEntry convert(EditableParamRepository repository, MapEntry entryMap, String parameterName)", "full_signature": "private ParameterEntry convert(EditableParamRepository repository, MapEntry entryMap, String parameterName)", "class_method_signature": "BasicParamEditor.convert(EditableParamRepository repository, MapEntry entryMap, String parameterName)", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(EditableParamRepository repository, Iterable<MapEntry> entryMaps, String parameterName)", "modifiers": "private", "return": "List<ParameterEntry>", "signature": "List<ParameterEntry> convert(EditableParamRepository repository, Iterable<MapEntry> entryMaps, String parameterName)", "full_signature": "private List<ParameterEntry> convert(EditableParamRepository repository, Iterable<MapEntry> entryMaps, String parameterName)", "class_method_signature": "BasicParamEditor.convert(EditableParamRepository repository, Iterable<MapEntry> entryMaps, String parameterName)", "testcase": false, "constructor": false}, {"identifier": "normalize", "parameters": "(Parameter metadata, MapEntry denormalizedEntry)", "modifiers": "@Override public", "return": "MapEntry", "signature": "MapEntry normalize(Parameter metadata, MapEntry denormalizedEntry)", "full_signature": "@Override public MapEntry normalize(Parameter metadata, MapEntry denormalizedEntry)", "class_method_signature": "BasicParamEditor.normalize(Parameter metadata, MapEntry denormalizedEntry)", "testcase": false, "constructor": false}, {"identifier": "normalize", "parameters": "(Parameter metadata, Iterable<MapEntry> denormalizedEntries)", "modifiers": "@Override public", "return": "List<MapEntry>", "signature": "List<MapEntry> normalize(Parameter metadata, Iterable<MapEntry> denormalizedEntries)", "full_signature": "@Override public List<MapEntry> normalize(Parameter metadata, Iterable<MapEntry> denormalizedEntries)", "class_method_signature": "BasicParamEditor.normalize(Parameter metadata, Iterable<MapEntry> denormalizedEntries)", "testcase": false, "constructor": false}], "file": "smartparam-editor/src/main/java/org/smartparam/editor/core/BasicParamEditor.java"}, "focal_method": {"identifier": "deleteEntry", "parameters": "(RepositoryName in, String parameterName, ParameterEntryKey entryKey)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void deleteEntry(RepositoryName in, String parameterName, ParameterEntryKey entryKey) {\n        EditableParamRepository repository = repositories.get(in);\n        repository.deleteEntry(parameterName, entryKey);\n        clearCache(parameterName);\n    }", "signature": "void deleteEntry(RepositoryName in, String parameterName, ParameterEntryKey entryKey)", "full_signature": "@Override public void deleteEntry(RepositoryName in, String parameterName, ParameterEntryKey entryKey)", "class_method_signature": "BasicParamEditor.deleteEntry(RepositoryName in, String parameterName, ParameterEntryKey entryKey)", "testcase": false, "constructor": false, "invocations": ["get", "deleteEntry", "clearCache"]}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}