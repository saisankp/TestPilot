{"test_class": {"identifier": "SnapshotActionGroupTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public final AndroidProjectRule myRule = AndroidProjectRule.inMemory();", "modifier": "@Rule\n  public final", "type": "AndroidProjectRule", "declarator": "myRule = AndroidProjectRule.inMemory()", "var_name": "myRule"}, {"original_string": "private DeviceAndSnapshotComboBoxAction myComboBoxAction;", "modifier": "private", "type": "DeviceAndSnapshotComboBoxAction", "declarator": "myComboBoxAction", "var_name": "myComboBoxAction"}, {"original_string": "private Project myProject;", "modifier": "private", "type": "Project", "declarator": "myProject", "var_name": "myProject"}], "file": "android/testSrc/com/android/tools/idea/run/deployment/SnapshotActionGroupTest.java"}, "test_case": {"identifier": "snapshotActionGroup", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void snapshotActionGroup() {\n    // Arrange\n    Device device1 = new VirtualDevice.Builder()\n      .setName(\"Pixel 3 API 29\")\n      .setKey(new Key(\"Pixel_3_API_29/snap_2019-09-27_15-48-09\"))\n      .setAndroidDevice(Mockito.mock(AndroidDevice.class))\n      .build();\n\n    Device device2 = new VirtualDevice.Builder()\n      .setName(\"Pixel 3 API 29\")\n      .setKey(new Key(\"Pixel_3_API_29/snap_2019-09-27_15-49-04\"))\n      .setAndroidDevice(Mockito.mock(AndroidDevice.class))\n      .build();\n\n    List<Device> devices = Arrays.asList(device1, device2);\n\n    // Act\n    AnAction action = new SnapshotActionGroup(devices, myComboBoxAction, myProject);\n\n    // Assert\n    assertEquals(\"Pixel 3 API 29\", action.getTemplatePresentation().getText());\n  }", "signature": "void snapshotActionGroup()", "full_signature": "@Test public void snapshotActionGroup()", "class_method_signature": "SnapshotActionGroupTest.snapshotActionGroup()", "testcase": true, "constructor": false, "invocations": ["build", "setAndroidDevice", "setKey", "setName", "mock", "build", "setAndroidDevice", "setKey", "setName", "mock", "asList", "assertEquals", "getText", "getTemplatePresentation"]}, "focal_class": {"identifier": "SnapshotActionGroup", "superclass": "extends ActionGroup", "interfaces": "", "fields": [{"original_string": "@NotNull\n  private final Collection<Device> myDevices;", "modifier": "@NotNull\n  private final", "type": "Collection<Device>", "declarator": "myDevices", "var_name": "myDevices"}, {"original_string": "@NotNull\n  private final DeviceAndSnapshotComboBoxAction myComboBoxAction;", "modifier": "@NotNull\n  private final", "type": "DeviceAndSnapshotComboBoxAction", "declarator": "myComboBoxAction", "var_name": "myComboBoxAction"}, {"original_string": "@NotNull\n  private final Project myProject;", "modifier": "@NotNull\n  private final", "type": "Project", "declarator": "myProject", "var_name": "myProject"}], "methods": [{"identifier": "SnapshotActionGroup", "parameters": "(@NotNull List<Device> devices, @NotNull DeviceAndSnapshotComboBoxAction comboBoxAction, @NotNull Project project)", "modifiers": "", "return": "", "signature": " SnapshotActionGroup(@NotNull List<Device> devices, @NotNull DeviceAndSnapshotComboBoxAction comboBoxAction, @NotNull Project project)", "full_signature": "  SnapshotActionGroup(@NotNull List<Device> devices, @NotNull DeviceAndSnapshotComboBoxAction comboBoxAction, @NotNull Project project)", "class_method_signature": "SnapshotActionGroup.SnapshotActionGroup(@NotNull List<Device> devices, @NotNull DeviceAndSnapshotComboBoxAction comboBoxAction, @NotNull Project project)", "testcase": false, "constructor": true}, {"identifier": "getText", "parameters": "(@NotNull List<Device> devices)", "modifiers": "@NotNull private static", "return": "String", "signature": "String getText(@NotNull List<Device> devices)", "full_signature": "@NotNull private static String getText(@NotNull List<Device> devices)", "class_method_signature": "SnapshotActionGroup.getText(@NotNull List<Device> devices)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(@NotNull List<Device> devices, @NotNull Function<Device, P> accessor)", "modifiers": "@Nullable private static", "return": "P", "signature": "P getProperty(@NotNull List<Device> devices, @NotNull Function<Device, P> accessor)", "full_signature": "@Nullable private static P getProperty(@NotNull List<Device> devices, @NotNull Function<Device, P> accessor)", "class_method_signature": "SnapshotActionGroup.getProperty(@NotNull List<Device> devices, @NotNull Function<Device, P> accessor)", "testcase": false, "constructor": false}, {"identifier": "getIcon", "parameters": "(@NotNull List<Device> devices)", "modifiers": "@NotNull private static", "return": "Icon", "signature": "Icon getIcon(@NotNull List<Device> devices)", "full_signature": "@NotNull private static Icon getIcon(@NotNull List<Device> devices)", "class_method_signature": "SnapshotActionGroup.getIcon(@NotNull List<Device> devices)", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "(@Nullable AnActionEvent event)", "modifiers": "@NotNull @Override public", "return": "AnAction[]", "signature": "AnAction[] getChildren(@Nullable AnActionEvent event)", "full_signature": "@NotNull @Override public AnAction[] getChildren(@Nullable AnActionEvent event)", "class_method_signature": "SnapshotActionGroup.getChildren(@Nullable AnActionEvent event)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable Object object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(@Nullable Object object)", "full_signature": "@Override public boolean equals(@Nullable Object object)", "class_method_signature": "SnapshotActionGroup.equals(@Nullable Object object)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SnapshotActionGroup.hashCode()", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/run/deployment/SnapshotActionGroup.java"}, "focal_method": {"identifier": "SnapshotActionGroup", "parameters": "(@NotNull List<Device> devices, @NotNull DeviceAndSnapshotComboBoxAction comboBoxAction, @NotNull Project project)", "modifiers": "", "return": "", "body": "SnapshotActionGroup(@NotNull List<Device> devices, @NotNull DeviceAndSnapshotComboBoxAction comboBoxAction, @NotNull Project project) {\n    super(getText(devices), null, getIcon(devices));\n    setPopup(true);\n\n    myDevices = devices;\n    myComboBoxAction = comboBoxAction;\n    myProject = project;\n  }", "signature": " SnapshotActionGroup(@NotNull List<Device> devices, @NotNull DeviceAndSnapshotComboBoxAction comboBoxAction, @NotNull Project project)", "full_signature": "  SnapshotActionGroup(@NotNull List<Device> devices, @NotNull DeviceAndSnapshotComboBoxAction comboBoxAction, @NotNull Project project)", "class_method_signature": "SnapshotActionGroup.SnapshotActionGroup(@NotNull List<Device> devices, @NotNull DeviceAndSnapshotComboBoxAction comboBoxAction, @NotNull Project project)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}