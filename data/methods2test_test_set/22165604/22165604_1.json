{"test_class": {"identifier": "InstalledAppProviderTest", "superclass": "extends FDroidProviderTest", "interfaces": "", "fields": [], "file": "app/src/test/java/org/fdroid/fdroid/data/InstalledAppProviderTest.java"}, "test_case": {"identifier": "testInsert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInsert() {\n\n        assertResultCount(contentResolver, 0, InstalledAppProvider.getContentUri());\n\n        insertInstalledApp(\"com.example.com1\", 1, \"v1\");\n        insertInstalledApp(\"com.example.com2\", 2, \"v2\");\n        insertInstalledApp(\"com.example.com3\", 3, \"v3\");\n\n        assertResultCount(contentResolver, 3, InstalledAppProvider.getContentUri());\n        assertIsInstalledVersionInDb(contentResolver, \"com.example.com1\", 1, \"v1\");\n        assertIsInstalledVersionInDb(contentResolver, \"com.example.com2\", 2, \"v2\");\n        assertIsInstalledVersionInDb(contentResolver, \"com.example.com3\", 3, \"v3\");\n\n        App[] apps = InstalledAppProvider.Helper.all(context);\n        assertEquals(3, apps.length);\n    }", "signature": "void testInsert()", "full_signature": "@Test public void testInsert()", "class_method_signature": "InstalledAppProviderTest.testInsert()", "testcase": true, "constructor": false, "invocations": ["assertResultCount", "getContentUri", "insertInstalledApp", "insertInstalledApp", "insertInstalledApp", "assertResultCount", "getContentUri", "assertIsInstalledVersionInDb", "assertIsInstalledVersionInDb", "assertIsInstalledVersionInDb", "all", "assertEquals"]}, "focal_class": {"identifier": "InstalledAppProvider", "superclass": "extends FDroidProvider", "interfaces": "", "fields": [{"original_string": "private static final String TAG = \"InstalledAppProvider\";", "modifier": "private static final", "type": "String", "declarator": "TAG = \"InstalledAppProvider\"", "var_name": "TAG"}, {"original_string": "private static final String PROVIDER_NAME = \"InstalledAppProvider\";", "modifier": "private static final", "type": "String", "declarator": "PROVIDER_NAME = \"InstalledAppProvider\"", "var_name": "PROVIDER_NAME"}, {"original_string": "private static final String PATH_SEARCH = \"search\";", "modifier": "private static final", "type": "String", "declarator": "PATH_SEARCH = \"search\"", "var_name": "PATH_SEARCH"}, {"original_string": "private static final int CODE_SEARCH = CODE_SINGLE + 1;", "modifier": "private static final", "type": "int", "declarator": "CODE_SEARCH = CODE_SINGLE + 1", "var_name": "CODE_SEARCH"}, {"original_string": "private static final String PATH_ALL_APPS = \"allApps\";", "modifier": "private static final", "type": "String", "declarator": "PATH_ALL_APPS = \"allApps\"", "var_name": "PATH_ALL_APPS"}, {"original_string": "private static final int CODE_ALL_APPS = CODE_SEARCH + 1;", "modifier": "private static final", "type": "int", "declarator": "CODE_ALL_APPS = CODE_SEARCH + 1", "var_name": "CODE_ALL_APPS"}, {"original_string": "private static final UriMatcher MATCHER = new UriMatcher(-1);", "modifier": "private static final", "type": "UriMatcher", "declarator": "MATCHER = new UriMatcher(-1)", "var_name": "MATCHER"}, {"original_string": "private static final String[] SYSTEM_PACKAGES = {\n            \"android\", // platform key\n            \"com.android.email\", // test/release key\n            \"com.android.contacts\", // shared key\n            \"com.android.providers.downloads\", // media key\n    };", "modifier": "private static final", "type": "String[]", "declarator": "SYSTEM_PACKAGES = {\n            \"android\", // platform key\n            \"com.android.email\", // test/release key\n            \"com.android.contacts\", // shared key\n            \"com.android.providers.downloads\", // media key\n    }", "var_name": "SYSTEM_PACKAGES"}, {"original_string": "private static String[] systemSignatures;", "modifier": "private static", "type": "String[]", "declarator": "systemSignatures", "var_name": "systemSignatures"}], "methods": [{"identifier": "getContentUri", "parameters": "()", "modifiers": "public static", "return": "Uri", "signature": "Uri getContentUri()", "full_signature": "public static Uri getContentUri()", "class_method_signature": "InstalledAppProvider.getContentUri()", "testcase": false, "constructor": false}, {"identifier": "getAllAppsUri", "parameters": "()", "modifiers": "public static", "return": "Uri", "signature": "Uri getAllAppsUri()", "full_signature": "public static Uri getAllAppsUri()", "class_method_signature": "InstalledAppProvider.getAllAppsUri()", "testcase": false, "constructor": false}, {"identifier": "getAppUri", "parameters": "(String packageName)", "modifiers": "public static", "return": "Uri", "signature": "Uri getAppUri(String packageName)", "full_signature": "public static Uri getAppUri(String packageName)", "class_method_signature": "InstalledAppProvider.getAppUri(String packageName)", "testcase": false, "constructor": false}, {"identifier": "getSearchUri", "parameters": "(String keywords)", "modifiers": "public static", "return": "Uri", "signature": "Uri getSearchUri(String keywords)", "full_signature": "public static Uri getSearchUri(String keywords)", "class_method_signature": "InstalledAppProvider.getSearchUri(String keywords)", "testcase": false, "constructor": false}, {"identifier": "getApplicationLabel", "parameters": "(Context context, String packageName)", "modifiers": "public static", "return": "String", "signature": "String getApplicationLabel(Context context, String packageName)", "full_signature": "public static String getApplicationLabel(Context context, String packageName)", "class_method_signature": "InstalledAppProvider.getApplicationLabel(Context context, String packageName)", "testcase": false, "constructor": false}, {"identifier": "selectNotSystemSignature", "parameters": "(QuerySelection selection)", "modifiers": "private", "return": "QuerySelection", "signature": "QuerySelection selectNotSystemSignature(QuerySelection selection)", "full_signature": "private QuerySelection selectNotSystemSignature(QuerySelection selection)", "class_method_signature": "InstalledAppProvider.selectNotSystemSignature(QuerySelection selection)", "testcase": false, "constructor": false}, {"identifier": "getTableName", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getTableName()", "full_signature": "@Override protected String getTableName()", "class_method_signature": "InstalledAppProvider.getTableName()", "testcase": false, "constructor": false}, {"identifier": "getProviderName", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getProviderName()", "full_signature": "@Override protected String getProviderName()", "class_method_signature": "InstalledAppProvider.getProviderName()", "testcase": false, "constructor": false}, {"identifier": "getAuthority", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getAuthority()", "full_signature": "public static String getAuthority()", "class_method_signature": "InstalledAppProvider.getAuthority()", "testcase": false, "constructor": false}, {"identifier": "getMatcher", "parameters": "()", "modifiers": "@Override protected", "return": "UriMatcher", "signature": "UriMatcher getMatcher()", "full_signature": "@Override protected UriMatcher getMatcher()", "class_method_signature": "InstalledAppProvider.getMatcher()", "testcase": false, "constructor": false}, {"identifier": "queryApp", "parameters": "(String packageName)", "modifiers": "private", "return": "QuerySelection", "signature": "QuerySelection queryApp(String packageName)", "full_signature": "private QuerySelection queryApp(String packageName)", "class_method_signature": "InstalledAppProvider.queryApp(String packageName)", "testcase": false, "constructor": false}, {"identifier": "queryAppSubQuery", "parameters": "(String packageName)", "modifiers": "private", "return": "QuerySelection", "signature": "QuerySelection queryAppSubQuery(String packageName)", "full_signature": "private QuerySelection queryAppSubQuery(String packageName)", "class_method_signature": "InstalledAppProvider.queryAppSubQuery(String packageName)", "testcase": false, "constructor": false}, {"identifier": "querySearch", "parameters": "(String query)", "modifiers": "private", "return": "QuerySelection", "signature": "QuerySelection querySearch(String query)", "full_signature": "private QuerySelection querySearch(String query)", "class_method_signature": "InstalledAppProvider.querySearch(String query)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(@NonNull Uri uri, String[] projection,\n                        String customSelection, String[] selectionArgs, String sortOrder)", "modifiers": "@Override public", "return": "Cursor", "signature": "Cursor query(@NonNull Uri uri, String[] projection,\n                        String customSelection, String[] selectionArgs, String sortOrder)", "full_signature": "@Override public Cursor query(@NonNull Uri uri, String[] projection,\n                        String customSelection, String[] selectionArgs, String sortOrder)", "class_method_signature": "InstalledAppProvider.query(@NonNull Uri uri, String[] projection,\n                        String customSelection, String[] selectionArgs, String sortOrder)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@NonNull Uri uri, String where, String[] whereArgs)", "modifiers": "@Override public", "return": "int", "signature": "int delete(@NonNull Uri uri, String where, String[] whereArgs)", "full_signature": "@Override public int delete(@NonNull Uri uri, String where, String[] whereArgs)", "class_method_signature": "InstalledAppProvider.delete(@NonNull Uri uri, String where, String[] whereArgs)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(@NonNull Uri uri, ContentValues values)", "modifiers": "@Override public", "return": "Uri", "signature": "Uri insert(@NonNull Uri uri, ContentValues values)", "full_signature": "@Override public Uri insert(@NonNull Uri uri, ContentValues values)", "class_method_signature": "InstalledAppProvider.insert(@NonNull Uri uri, ContentValues values)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(@NonNull Uri uri, ContentValues values, String where, String[] whereArgs)", "modifiers": "@Override public", "return": "int", "signature": "int update(@NonNull Uri uri, ContentValues values, String where, String[] whereArgs)", "full_signature": "@Override public int update(@NonNull Uri uri, ContentValues values, String where, String[] whereArgs)", "class_method_signature": "InstalledAppProvider.update(@NonNull Uri uri, ContentValues values, String where, String[] whereArgs)", "testcase": false, "constructor": false}, {"identifier": "verifyVersionNameNotNull", "parameters": "(ContentValues values)", "modifiers": "private", "return": "void", "signature": "void verifyVersionNameNotNull(ContentValues values)", "full_signature": "private void verifyVersionNameNotNull(ContentValues values)", "class_method_signature": "InstalledAppProvider.verifyVersionNameNotNull(ContentValues values)", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/fdroid/fdroid/data/InstalledAppProvider.java"}, "focal_method": {"identifier": "insert", "parameters": "(@NonNull Uri uri, ContentValues values)", "modifiers": "@Override public", "return": "Uri", "body": "@Override\n    public Uri insert(@NonNull Uri uri, ContentValues values) {\n\n        if (MATCHER.match(uri) != CODE_LIST) {\n            throw new UnsupportedOperationException(\"Insert not supported for \" + uri + \".\");\n        }\n\n        if (!values.containsKey(Cols.Package.NAME)) {\n            throw new IllegalStateException(\"Package name not provided to InstalledAppProvider\");\n        }\n\n        String packageName = values.getAsString(Cols.Package.NAME);\n        long packageId = PackageProvider.Helper.ensureExists(getContext(), packageName);\n        values.remove(Cols.Package.NAME);\n        values.put(Cols.PACKAGE_ID, packageId);\n\n        verifyVersionNameNotNull(values);\n\n        db().replaceOrThrow(getTableName(), null, values);\n\n        AppProvider.Helper.calcSuggestedApk(getContext(), packageName);\n\n        return getAppUri(values.getAsString(Cols.Package.NAME));\n    }", "signature": "Uri insert(@NonNull Uri uri, ContentValues values)", "full_signature": "@Override public Uri insert(@NonNull Uri uri, ContentValues values)", "class_method_signature": "InstalledAppProvider.insert(@NonNull Uri uri, ContentValues values)", "testcase": false, "constructor": false, "invocations": ["match", "containsKey", "getAsString", "ensureExists", "getContext", "remove", "put", "verifyVersionNameNotNull", "replaceOrThrow", "db", "getTableName", "calcSuggestedApk", "getContext", "getAppUri", "getAsString"]}, "repository": {"repo_id": 22165604, "url": "https://github.com/f-droid/fdroidclient", "stars": 331, "created": "7/23/2014 5:46:02 PM +00:00", "updates": "2020-01-25T14:27:31+00:00", "fork": "False", "license": "licensed"}}