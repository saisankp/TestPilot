{"test_class": {"identifier": "AesCtrDrbgFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/dk/alexandra/fresco/framework/util/AesCtrDrbgFactoryTest.java"}, "test_case": {"identifier": "testFromSampledSeed", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testFromSampledSeed() {\n    Drbg drbg = AesCtrDrbgFactory.fromSampledSeed();\n    byte[] bytes = new byte[100];\n    drbg.nextBytes(bytes);\n    // By design these bytes are unpredictable, lets just test that they\n    // at least changed.\n    assertFalse(Arrays.equals(bytes, new byte[100]));\n\n  }", "signature": "void testFromSampledSeed()", "full_signature": "@Test public void testFromSampledSeed()", "class_method_signature": "AesCtrDrbgFactoryTest.testFromSampledSeed()", "testcase": true, "constructor": false, "invocations": ["fromSampledSeed", "nextBytes", "assertFalse", "equals"]}, "focal_class": {"identifier": "AesCtrDrbgFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String HASH_ALGORITHM = \"SHA-256\";", "modifier": "public static final", "type": "String", "declarator": "HASH_ALGORITHM = \"SHA-256\"", "var_name": "HASH_ALGORITHM"}], "methods": [{"identifier": "AesCtrDrbgFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " AesCtrDrbgFactory()", "full_signature": "private  AesCtrDrbgFactory()", "class_method_signature": "AesCtrDrbgFactory.AesCtrDrbgFactory()", "testcase": false, "constructor": true}, {"identifier": "fromDerivedSeed", "parameters": "(final byte... bytes)", "modifiers": "public static", "return": "Drbg", "signature": "Drbg fromDerivedSeed(final byte... bytes)", "full_signature": "public static Drbg fromDerivedSeed(final byte... bytes)", "class_method_signature": "AesCtrDrbgFactory.fromDerivedSeed(final byte... bytes)", "testcase": false, "constructor": false}, {"identifier": "fromRandomSeed", "parameters": "(final byte[] seed)", "modifiers": "public static", "return": "Drbg", "signature": "Drbg fromRandomSeed(final byte[] seed)", "full_signature": "public static Drbg fromRandomSeed(final byte[] seed)", "class_method_signature": "AesCtrDrbgFactory.fromRandomSeed(final byte[] seed)", "testcase": false, "constructor": false}, {"identifier": "fromSampledSeed", "parameters": "()", "modifiers": "public static", "return": "Drbg", "signature": "Drbg fromSampledSeed()", "full_signature": "public static Drbg fromSampledSeed()", "class_method_signature": "AesCtrDrbgFactory.fromSampledSeed()", "testcase": false, "constructor": false}, {"identifier": "hash", "parameters": "(final byte[] bytes)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] hash(final byte[] bytes)", "full_signature": "private static byte[] hash(final byte[] bytes)", "class_method_signature": "AesCtrDrbgFactory.hash(final byte[] bytes)", "testcase": false, "constructor": false}], "file": "core/src/main/java/dk/alexandra/fresco/framework/util/AesCtrDrbgFactory.java"}, "focal_method": {"identifier": "fromSampledSeed", "parameters": "()", "modifiers": "public static", "return": "Drbg", "body": "public static Drbg fromSampledSeed() {\n    return new AesCtrDrbg();\n  }", "signature": "Drbg fromSampledSeed()", "full_signature": "public static Drbg fromSampledSeed()", "class_method_signature": "AesCtrDrbgFactory.fromSampledSeed()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}