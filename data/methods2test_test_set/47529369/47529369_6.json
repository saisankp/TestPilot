{"test_class": {"identifier": "OtpKeyRequestProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final Long CLEAR_CHANNEL_ID = 1234l;", "modifier": "static final", "type": "Long", "declarator": "CLEAR_CHANNEL_ID = 1234l", "var_name": "CLEAR_CHANNEL_ID"}, {"original_string": "static final Integer KEY_SIZE = 64;", "modifier": "static final", "type": "Integer", "declarator": "KEY_SIZE = 64", "var_name": "KEY_SIZE"}, {"original_string": "@Autowired\n  private OtpKeyRequestProcessor processor;", "modifier": "@Autowired\n  private", "type": "OtpKeyRequestProcessor", "declarator": "processor", "var_name": "processor"}, {"original_string": "@Value(\"${otp.maximum.key.size}\")\n  private Integer maxKeySize;", "modifier": "@Value(\"${otp.maximum.key.size}\")\n  private", "type": "Integer", "declarator": "maxKeySize", "var_name": "maxKeySize"}], "file": "GameBoot/src/test/java/com/github/mrstampy/gameboot/otp/processor/OtpKeyRequestProcessorTest.java"}, "test_case": {"identifier": "testNewKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testNewKey() throws Exception {\n    failExpected(null, \"Null message\");\n\n    OtpKeyRequest r = new OtpKeyRequest();\n    failExpected(r, \"mt message\");\n\n    r.setOtpSystemId(CLEAR_CHANNEL_ID);\n    r.setKeyFunction(KeyFunction.NEW);\n\n    r.setKeySize(-32);\n    failExpected(r, \"negative size\");\n\n    r.setKeySize(KEY_SIZE);\n    r.setKeyFunction(null);\n    failExpected(r, \"No key function\");\n\n    r.setKeyFunction(KeyFunction.NEW);\n    r.setKeySize(maxKeySize + 1);\n    failExpected(r, \"> max key size\");\n\n    r.setKeySize(KEY_SIZE);\n\n    Response rep = processor.process(r);\n\n    assertEquals(ResponseCode.SUCCESS, rep.getResponseCode());\n    assertNotNull(rep.getPayload());\n    assertEquals(1, rep.getPayload().length);\n    assertTrue(rep.getPayload()[0] instanceof byte[]);\n\n    byte[] b = (byte[]) rep.getPayload()[0];\n\n    assertEquals(KEY_SIZE.intValue(), b.length);\n  }", "signature": "void testNewKey()", "full_signature": "@Test public void testNewKey()", "class_method_signature": "OtpKeyRequestProcessorTest.testNewKey()", "testcase": true, "constructor": false, "invocations": ["failExpected", "failExpected", "setOtpSystemId", "setKeyFunction", "setKeySize", "failExpected", "setKeySize", "setKeyFunction", "failExpected", "setKeyFunction", "setKeySize", "failExpected", "setKeySize", "process", "assertEquals", "getResponseCode", "assertNotNull", "getPayload", "assertEquals", "getPayload", "assertTrue", "getPayload", "getPayload", "assertEquals", "intValue"]}, "focal_class": {"identifier": "OtpKeyRequestProcessor", "superclass": "extends AbstractGameBootProcessor<OtpKeyRequest>", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass())", "var_name": "log"}, {"original_string": "@Autowired\n  private OtpNewKeyRegistry newKeyRegistry;", "modifier": "@Autowired\n  private", "type": "OtpNewKeyRegistry", "declarator": "newKeyRegistry", "var_name": "newKeyRegistry"}, {"original_string": "@Autowired\n  private KeyRegistry registry;", "modifier": "@Autowired\n  private", "type": "KeyRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "@Autowired\n  private OneTimePad pad;", "modifier": "@Autowired\n  private", "type": "OneTimePad", "declarator": "pad", "var_name": "pad"}, {"original_string": "@Value(\"${otp.default.key.size}\")\n  private Integer defaultKeySize;", "modifier": "@Value(\"${otp.default.key.size}\")\n  private", "type": "Integer", "declarator": "defaultKeySize", "var_name": "defaultKeySize"}, {"original_string": "@Value(\"${otp.maximum.key.size}\")\n  private Integer maxKeySize;", "modifier": "@Value(\"${otp.maximum.key.size}\")\n  private", "type": "Integer", "declarator": "maxKeySize", "var_name": "maxKeySize"}], "methods": [{"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getType()", "full_signature": "@Override public String getType()", "class_method_signature": "OtpKeyRequestProcessor.getType()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(OtpKeyRequest message)", "modifiers": "@Override protected", "return": "void", "signature": "void validate(OtpKeyRequest message)", "full_signature": "@Override protected void validate(OtpKeyRequest message)", "class_method_signature": "OtpKeyRequestProcessor.validate(OtpKeyRequest message)", "testcase": false, "constructor": false}, {"identifier": "processImpl", "parameters": "(OtpKeyRequest message)", "modifiers": "@Override protected", "return": "Response", "signature": "Response processImpl(OtpKeyRequest message)", "full_signature": "@Override protected Response processImpl(OtpKeyRequest message)", "class_method_signature": "OtpKeyRequestProcessor.processImpl(OtpKeyRequest message)", "testcase": false, "constructor": false}, {"identifier": "deleteKey", "parameters": "(OtpMessage message)", "modifiers": "private", "return": "Response", "signature": "Response deleteKey(OtpMessage message)", "full_signature": "private Response deleteKey(OtpMessage message)", "class_method_signature": "OtpKeyRequestProcessor.deleteKey(OtpMessage message)", "testcase": false, "constructor": false}, {"identifier": "newKey", "parameters": "(OtpKeyRequest message)", "modifiers": "private", "return": "Response", "signature": "Response newKey(OtpKeyRequest message)", "full_signature": "private Response newKey(OtpKeyRequest message)", "class_method_signature": "OtpKeyRequestProcessor.newKey(OtpKeyRequest message)", "testcase": false, "constructor": false}], "file": "GameBoot/src/main/java/com/github/mrstampy/gameboot/otp/processor/OtpKeyRequestProcessor.java"}, "focal_method": {"identifier": "newKey", "parameters": "(OtpKeyRequest message)", "modifiers": "private", "return": "Response", "body": "private Response newKey(OtpKeyRequest message) throws Exception {\n    Integer size = message.getKeySize() == null ? defaultKeySize : message.getKeySize();\n    SystemIdKey systemId = new SystemIdKey(message.getOtpSystemId());\n\n    log.debug(\"Creating new OTP key of size {} for {}\", size, systemId);\n\n    byte[] newKey = pad.generateKey(size);\n\n    newKeyRegistry.put(systemId, newKey);\n\n    return new Response(message, ResponseCode.SUCCESS, newKey);\n  }", "signature": "Response newKey(OtpKeyRequest message)", "full_signature": "private Response newKey(OtpKeyRequest message)", "class_method_signature": "OtpKeyRequestProcessor.newKey(OtpKeyRequest message)", "testcase": false, "constructor": false, "invocations": ["getKeySize", "getKeySize", "getOtpSystemId", "debug", "generateKey", "put"]}, "repository": {"repo_id": 47529369, "url": "https://github.com/mrstampy/gameboot", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 15, "size": 1118, "license": "licensed"}}