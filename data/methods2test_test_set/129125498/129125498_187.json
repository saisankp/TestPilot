{"test_class": {"identifier": "GraphiteSourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String EARLIEST_TIME = \"2018-04-01T01:05:00Z\";", "modifier": "private static final", "type": "String", "declarator": "EARLIEST_TIME = \"2018-04-01T01:05:00Z\"", "var_name": "EARLIEST_TIME"}, {"original_string": "@Mock\n    private GraphiteClient client;", "modifier": "@Mock\n    private", "type": "GraphiteClient", "declarator": "client", "var_name": "client"}, {"original_string": "private GraphiteSource sourceUnderTest;", "modifier": "private", "type": "GraphiteSource", "declarator": "sourceUnderTest", "var_name": "sourceUnderTest"}, {"original_string": "private long earliestTimeInEpoch;", "modifier": "private", "type": "long", "declarator": "earliestTimeInEpoch", "var_name": "earliestTimeInEpoch"}, {"original_string": "private int intervalLength = 5 * TimeConstantsUtil.SECONDS_PER_MIN;", "modifier": "private", "type": "int", "declarator": "intervalLength = 5 * TimeConstantsUtil.SECONDS_PER_MIN", "var_name": "intervalLength"}, {"original_string": "private int noOfBinsInADay;", "modifier": "private", "type": "int", "declarator": "noOfBinsInADay", "var_name": "noOfBinsInADay"}, {"original_string": "private List<GraphiteResult> graphiteResults = new ArrayList<>();", "modifier": "private", "type": "List<GraphiteResult>", "declarator": "graphiteResults = new ArrayList<>()", "var_name": "graphiteResults"}, {"original_string": "private List<GraphiteResult> graphiteResults_null = new ArrayList<>();", "modifier": "private", "type": "List<GraphiteResult>", "declarator": "graphiteResults_null = new ArrayList<>()", "var_name": "graphiteResults_null"}, {"original_string": "private List<GraphiteResult> partialGraphiteResults_null = new ArrayList<>();", "modifier": "private", "type": "List<GraphiteResult>", "declarator": "partialGraphiteResults_null = new ArrayList<>()", "var_name": "partialGraphiteResults_null"}], "file": "anomdetect/src/test/java/com/expedia/adaptivealerting/anomdetect/source/data/graphite/GraphiteSourceTest.java"}, "test_case": {"identifier": "testGetMetricData_time_window_less_than_day", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetMetricData_time_window_less_than_day() {\n        val latestTimeInEpoch = earliestTimeInEpoch + TimeConstantsUtil.SECONDS_PER_DAY / 2;\n        val expected = buildExpectedResults(earliestTimeInEpoch, 1);\n        val actual = sourceUnderTest.getMetricData(earliestTimeInEpoch, latestTimeInEpoch, intervalLength, \"metric_name\");\n        assertEquals(expected, actual);\n    }", "signature": "void testGetMetricData_time_window_less_than_day()", "full_signature": "@Test public void testGetMetricData_time_window_less_than_day()", "class_method_signature": "GraphiteSourceTest.testGetMetricData_time_window_less_than_day()", "testcase": true, "constructor": false, "invocations": ["buildExpectedResults", "getMetricData", "assertEquals"]}, "focal_class": {"identifier": "GraphiteSource", "superclass": "", "interfaces": "implements DataSource", "fields": [{"original_string": "public static final Double MISSING_VALUE = Double.NEGATIVE_INFINITY;", "modifier": "public static final", "type": "Double", "declarator": "MISSING_VALUE = Double.NEGATIVE_INFINITY", "var_name": "MISSING_VALUE"}, {"original_string": "@NonNull\n    private GraphiteClient graphiteClient;", "modifier": "@NonNull\n    private", "type": "GraphiteClient", "declarator": "graphiteClient", "var_name": "graphiteClient"}], "methods": [{"identifier": "getMetricData", "parameters": "(long earliestTime, long latestTime, int intervalLength, String target)", "modifiers": "@Override public", "return": "List<DataSourceResult>", "signature": "List<DataSourceResult> getMetricData(long earliestTime, long latestTime, int intervalLength, String target)", "full_signature": "@Override public List<DataSourceResult> getMetricData(long earliestTime, long latestTime, int intervalLength, String target)", "class_method_signature": "GraphiteSource.getMetricData(long earliestTime, long latestTime, int intervalLength, String target)", "testcase": false, "constructor": false}, {"identifier": "buildDataSourceResult", "parameters": "(long earliestTime, long latestTime, int intervalLength, String metric)", "modifiers": "private", "return": "List<DataSourceResult>", "signature": "List<DataSourceResult> buildDataSourceResult(long earliestTime, long latestTime, int intervalLength, String metric)", "full_signature": "private List<DataSourceResult> buildDataSourceResult(long earliestTime, long latestTime, int intervalLength, String metric)", "class_method_signature": "GraphiteSource.buildDataSourceResult(long earliestTime, long latestTime, int intervalLength, String metric)", "testcase": false, "constructor": false}, {"identifier": "getOneDayDataFromGraphite", "parameters": "(long from, int intervalLength, String metric)", "modifiers": "private", "return": "List<GraphiteResult>", "signature": "List<GraphiteResult> getOneDayDataFromGraphite(long from, int intervalLength, String metric)", "full_signature": "private List<GraphiteResult> getOneDayDataFromGraphite(long from, int intervalLength, String metric)", "class_method_signature": "GraphiteSource.getOneDayDataFromGraphite(long from, int intervalLength, String metric)", "testcase": false, "constructor": false}, {"identifier": "epochTimeSnappedToSeconds", "parameters": "(long time, int seconds)", "modifiers": "private", "return": "long", "signature": "long epochTimeSnappedToSeconds(long time, int seconds)", "full_signature": "private long epochTimeSnappedToSeconds(long time, int seconds)", "class_method_signature": "GraphiteSource.epochTimeSnappedToSeconds(long time, int seconds)", "testcase": false, "constructor": false}, {"identifier": "getDataPointValue", "parameters": "(String[][] dataPoints, int index)", "modifiers": "private", "return": "Double", "signature": "Double getDataPointValue(String[][] dataPoints, int index)", "full_signature": "private Double getDataPointValue(String[][] dataPoints, int index)", "class_method_signature": "GraphiteSource.getDataPointValue(String[][] dataPoints, int index)", "testcase": false, "constructor": false}, {"identifier": "logResults", "parameters": "(List<DataSourceResult> results)", "modifiers": "private", "return": "void", "signature": "void logResults(List<DataSourceResult> results)", "full_signature": "private void logResults(List<DataSourceResult> results)", "class_method_signature": "GraphiteSource.logResults(List<DataSourceResult> results)", "testcase": false, "constructor": false}], "file": "anomdetect/src/main/java/com/expedia/adaptivealerting/anomdetect/source/data/graphite/GraphiteSource.java"}, "focal_method": {"identifier": "getMetricData", "parameters": "(long earliestTime, long latestTime, int intervalLength, String target)", "modifiers": "@Override public", "return": "List<DataSourceResult>", "body": "@Override\n    public List<DataSourceResult> getMetricData(long earliestTime, long latestTime, int intervalLength, String target) {\n        return buildDataSourceResult(earliestTime, latestTime, intervalLength, target);\n    }", "signature": "List<DataSourceResult> getMetricData(long earliestTime, long latestTime, int intervalLength, String target)", "full_signature": "@Override public List<DataSourceResult> getMetricData(long earliestTime, long latestTime, int intervalLength, String target)", "class_method_signature": "GraphiteSource.getMetricData(long earliestTime, long latestTime, int intervalLength, String target)", "testcase": false, "constructor": false, "invocations": ["buildDataSourceResult"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}