{"test_class": {"identifier": "FileSecurityInitializerTest", "superclass": "", "interfaces": "", "fields": [], "file": "security/file/src/test/java/cloud/piranha/security/file/FileSecurityInitializerTest.java"}, "test_case": {"identifier": "testOnStartup", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnStartup() throws Exception {\n        DefaultWebApplication webApplication = new DefaultWebApplication();\n        webApplication.addInitializer(new FileSecurityInitializer());\n        webApplication.initialize();\n        DefaultSecurityManager manager = (DefaultSecurityManager) webApplication.getSecurityManager();\n        DefaultWebApplicationRequest request = new DefaultWebApplicationRequest();\n        manager.login(request, \"j2ee\", \"j2ee\");\n        assertTrue(manager.isUserInRole(request, \"Administrator\"));\n    }", "signature": "void testOnStartup()", "full_signature": "@Test public void testOnStartup()", "class_method_signature": "FileSecurityInitializerTest.testOnStartup()", "testcase": true, "constructor": false, "invocations": ["addInitializer", "initialize", "getSecurityManager", "login", "assertTrue", "isUserInRole"]}, "focal_class": {"identifier": "FileSecurityInitializer", "superclass": "", "interfaces": "implements ServletContainerInitializer", "fields": [], "methods": [{"identifier": "onStartup", "parameters": "(Set<Class<?>> classes, ServletContext servletContext)", "modifiers": "@Override public", "return": "void", "signature": "void onStartup(Set<Class<?>> classes, ServletContext servletContext)", "full_signature": "@Override public void onStartup(Set<Class<?>> classes, ServletContext servletContext)", "class_method_signature": "FileSecurityInitializer.onStartup(Set<Class<?>> classes, ServletContext servletContext)", "testcase": false, "constructor": false}], "file": "security/file/src/main/java/cloud/piranha/security/file/FileSecurityInitializer.java"}, "focal_method": {"identifier": "onStartup", "parameters": "(Set<Class<?>> classes, ServletContext servletContext)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onStartup(Set<Class<?>> classes, ServletContext servletContext)\n            throws ServletException {\n\n        WebApplication webApplication = (WebApplication) servletContext;\n        DefaultSecurityManager securityManager = new DefaultSecurityManager();\n        webApplication.setSecurityManager(securityManager);\n\n        File userFile = new File(\"user.properties\");\n        if (!userFile.exists()) {\n            userFile = new File(\"etc/user.properties\");\n        }\n        if (userFile.exists()) {\n            Properties userProperties = new Properties();\n            try (FileInputStream fileInput = new FileInputStream(userFile)) {\n                userProperties.load(fileInput);\n            } catch (IOException ioe) {\n            }\n            userProperties.entrySet().forEach(entry -> {\n                String username = (String) entry.getKey();\n                String password = (String) entry.getValue();\n                securityManager.addUser(username, password);\n            });\n        }\n        \n        File userRoleFile = new File(\"userrole.properties\");\n        if (!userRoleFile.exists()) {\n            userRoleFile = new File(\"etc/userrole.properties\");\n        }\n        if (userRoleFile.exists()) {\n            Properties userRoleProperties = new Properties();\n            try (FileInputStream fileInput = new FileInputStream(userRoleFile)) {\n                userRoleProperties.load(fileInput);\n            } catch (IOException ioe) {\n            }\n            userRoleProperties.entrySet().forEach(entry -> {\n                String username = (String) entry.getKey();\n                String roles = (String) entry.getValue();\n                securityManager.addUserRole(username, roles.split(\",\"));\n            });\n            \n        }\n    }", "signature": "void onStartup(Set<Class<?>> classes, ServletContext servletContext)", "full_signature": "@Override public void onStartup(Set<Class<?>> classes, ServletContext servletContext)", "class_method_signature": "FileSecurityInitializer.onStartup(Set<Class<?>> classes, ServletContext servletContext)", "testcase": false, "constructor": false, "invocations": ["setSecurityManager", "exists", "exists", "load", "forEach", "entrySet", "getKey", "getValue", "addUser", "exists", "exists", "load", "forEach", "entrySet", "getKey", "getValue", "addUserRole", "split"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}