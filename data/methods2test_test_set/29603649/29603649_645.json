{"test_class": {"identifier": "StubConfigSchemaParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String STUB_CONFIG_SCHEMA_LOCATION = \"location\";", "modifier": "private static final", "type": "String", "declarator": "STUB_CONFIG_SCHEMA_LOCATION = \"location\"", "var_name": "STUB_CONFIG_SCHEMA_LOCATION"}, {"original_string": "@Mock\n    private ResourceLoader resourceLoader;", "modifier": "@Mock\n    private", "type": "ResourceLoader", "declarator": "resourceLoader", "var_name": "resourceLoader"}, {"original_string": "@Mock\n    private SchemaFactoryBuilder schemaFactoryBuilder;", "modifier": "@Mock\n    private", "type": "SchemaFactoryBuilder", "declarator": "schemaFactoryBuilder", "var_name": "schemaFactoryBuilder"}, {"original_string": "@InjectMocks\n    private StubConfigSchemaParser underTest;", "modifier": "@InjectMocks\n    private", "type": "StubConfigSchemaParser", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "@Mock\n    private SchemaFactory schemaFactory;", "modifier": "@Mock\n    private", "type": "SchemaFactory", "declarator": "schemaFactory", "var_name": "schemaFactory"}, {"original_string": "@Mock\n    private Schema schema;", "modifier": "@Mock\n    private", "type": "Schema", "declarator": "schema", "var_name": "schema"}, {"original_string": "private URL url;", "modifier": "private", "type": "URL", "declarator": "url", "var_name": "url"}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/test/java/com/epam/wilma/stubconfig/dom/parser/xsd/StubConfigSchemaParserTest.java"}, "test_case": {"identifier": "testParseSchemaShouldThrowDescriptorValidationFailedExceptionWhenSchemaCanNotBeParsed", "parameters": "()", "modifiers": "@Test(expectedExceptions = DescriptorValidationFailedException.class) public", "return": "void", "body": "@Test(expectedExceptions = DescriptorValidationFailedException.class)\n    public void testParseSchemaShouldThrowDescriptorValidationFailedExceptionWhenSchemaCanNotBeParsed() throws SAXException {\n        //GIVEN\n        given(schemaFactoryBuilder.buildSchemaFactory()).willReturn(schemaFactory);\n        given(schemaFactory.newSchema(url)).willThrow(new SAXException());\n        //WHEN\n        underTest.parseSchema();\n        //THEN exception is thrown\n    }", "signature": "void testParseSchemaShouldThrowDescriptorValidationFailedExceptionWhenSchemaCanNotBeParsed()", "full_signature": "@Test(expectedExceptions = DescriptorValidationFailedException.class) public void testParseSchemaShouldThrowDescriptorValidationFailedExceptionWhenSchemaCanNotBeParsed()", "class_method_signature": "StubConfigSchemaParserTest.testParseSchemaShouldThrowDescriptorValidationFailedExceptionWhenSchemaCanNotBeParsed()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "buildSchemaFactory", "willThrow", "given", "newSchema", "parseSchema"]}, "focal_class": {"identifier": "StubConfigSchemaParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    @Qualifier(\"stubConfigSchemaLocation\")\n    private String stubConfigSchemaLocation;", "modifier": "@Autowired\n    @Qualifier(\"stubConfigSchemaLocation\")\n    private", "type": "String", "declarator": "stubConfigSchemaLocation", "var_name": "stubConfigSchemaLocation"}, {"original_string": "@Autowired\n    private ResourceLoader resourceLoader;", "modifier": "@Autowired\n    private", "type": "ResourceLoader", "declarator": "resourceLoader", "var_name": "resourceLoader"}, {"original_string": "@Autowired\n    private SchemaFactoryBuilder schemaFactoryBuilder;", "modifier": "@Autowired\n    private", "type": "SchemaFactoryBuilder", "declarator": "schemaFactoryBuilder", "var_name": "schemaFactoryBuilder"}], "methods": [{"identifier": "parseSchema", "parameters": "()", "modifiers": "public", "return": "Schema", "signature": "Schema parseSchema()", "full_signature": "public Schema parseSchema()", "class_method_signature": "StubConfigSchemaParser.parseSchema()", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/main/java/com/epam/wilma/stubconfig/dom/parser/xsd/StubConfigSchemaParser.java"}, "focal_method": {"identifier": "parseSchema", "parameters": "()", "modifiers": "public", "return": "Schema", "body": "public Schema parseSchema() {\n        Schema result;\n        try {\n            URL schemaFile = resourceLoader.loadResource(stubConfigSchemaLocation);\n            SchemaFactory schemaFactory = schemaFactoryBuilder.buildSchemaFactory();\n            result = schemaFactory.newSchema(schemaFile);\n        } catch (SAXException e) {\n            throw new DescriptorValidationFailedException(\"Parsing of stub config XSD failed.\", e);\n        }\n        return result;\n    }", "signature": "Schema parseSchema()", "full_signature": "public Schema parseSchema()", "class_method_signature": "StubConfigSchemaParser.parseSchema()", "testcase": false, "constructor": false, "invocations": ["loadResource", "buildSchemaFactory", "newSchema"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}