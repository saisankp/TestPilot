{"test_class": {"identifier": "IdentityUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected TopicMapIF    topicmap;", "modifier": "protected", "type": "TopicMapIF", "declarator": "topicmap", "var_name": "topicmap"}, {"original_string": "protected TopicMapBuilderIF builder;", "modifier": "protected", "type": "TopicMapBuilderIF", "declarator": "builder", "var_name": "builder"}], "file": "ontopia-engine/src/test/java/net/ontopia/topicmaps/utils/IdentityUtilsTest.java"}, "test_case": {"identifier": "testGetSymbolicIdLocator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetSymbolicIdLocator() {\n    String symbolicId = \"foo\";\n    LocatorIF base = topicmap.getStore().getBaseAddress();\n    LocatorIF loc = base.resolveAbsolute(\"#\" + symbolicId);\n    LocatorIF loc2 = IdentityUtils.getSymbolicIdLocator(topicmap, symbolicId);\n    Assert.assertEquals(\"Symbolic locators not equal\", loc, loc2);\n  }", "signature": "void testGetSymbolicIdLocator()", "full_signature": "@Test public void testGetSymbolicIdLocator()", "class_method_signature": "IdentityUtilsTest.testGetSymbolicIdLocator()", "testcase": true, "constructor": false, "invocations": ["getBaseAddress", "getStore", "resolveAbsolute", "getSymbolicIdLocator", "assertEquals"]}, "focal_class": {"identifier": "IdentityUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getObjectBySymbolicId", "parameters": "(TopicMapIF topicmap, String symbolicId)", "modifiers": "public static", "return": "TMObjectIF", "signature": "TMObjectIF getObjectBySymbolicId(TopicMapIF topicmap, String symbolicId)", "full_signature": "public static TMObjectIF getObjectBySymbolicId(TopicMapIF topicmap, String symbolicId)", "class_method_signature": "IdentityUtils.getObjectBySymbolicId(TopicMapIF topicmap, String symbolicId)", "testcase": false, "constructor": false}, {"identifier": "getSymbolicIdLocator", "parameters": "(TopicMapIF topicmap, String symbolicId)", "modifiers": "public static", "return": "LocatorIF", "signature": "LocatorIF getSymbolicIdLocator(TopicMapIF topicmap, String symbolicId)", "full_signature": "public static LocatorIF getSymbolicIdLocator(TopicMapIF topicmap, String symbolicId)", "class_method_signature": "IdentityUtils.getSymbolicIdLocator(TopicMapIF topicmap, String symbolicId)", "testcase": false, "constructor": false}, {"identifier": "findSameTopic", "parameters": "(TopicMapIF topicmap, TopicIF topic)", "modifiers": "public static", "return": "Collection<TopicIF>", "signature": "Collection<TopicIF> findSameTopic(TopicMapIF topicmap, TopicIF topic)", "full_signature": "public static Collection<TopicIF> findSameTopic(TopicMapIF topicmap, TopicIF topic)", "class_method_signature": "IdentityUtils.findSameTopic(TopicMapIF topicmap, TopicIF topic)", "testcase": false, "constructor": false}], "file": "ontopia-engine/src/main/java/net/ontopia/topicmaps/utils/IdentityUtils.java"}, "focal_method": {"identifier": "getSymbolicIdLocator", "parameters": "(TopicMapIF topicmap, String symbolicId)", "modifiers": "public static", "return": "LocatorIF", "body": "public static LocatorIF getSymbolicIdLocator(TopicMapIF topicmap, String symbolicId) {\n    LocatorIF base = topicmap.getStore().getBaseAddress();\n    if (base != null)\n      return base.resolveAbsolute('#' + symbolicId);\n    else\n      return null;\n  }", "signature": "LocatorIF getSymbolicIdLocator(TopicMapIF topicmap, String symbolicId)", "full_signature": "public static LocatorIF getSymbolicIdLocator(TopicMapIF topicmap, String symbolicId)", "class_method_signature": "IdentityUtils.getSymbolicIdLocator(TopicMapIF topicmap, String symbolicId)", "testcase": false, "constructor": false, "invocations": ["getBaseAddress", "getStore", "resolveAbsolute"]}, "repository": {"repo_id": 32357795, "url": "https://github.com/ontopia/ontopia", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 35, "size": 68637, "license": "licensed"}}