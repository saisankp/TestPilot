{"test_class": {"identifier": "BlackListFileLoaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "codec/codec-sofa-hessian/src/test/java/com/alipay/sofa/rpc/codec/sofahessian/BlackListFileLoaderTest.java"}, "test_case": {"identifier": "overrideBlackList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void overrideBlackList() {\n        List<String> origin = buildOriginList();\n        BlackListFileLoader.overrideBlackList(origin, \"-*\");\n        Assert.assertTrue(origin.size() == 0);\n        origin = buildOriginList();\n        BlackListFileLoader.overrideBlackList(origin, \"!*\");\n        Assert.assertTrue(origin.size() == 0);\n        origin = buildOriginList();\n        BlackListFileLoader.overrideBlackList(origin, \"-default\");\n        Assert.assertTrue(origin.size() == 0);\n        origin = buildOriginList();\n        BlackListFileLoader.overrideBlackList(origin, \"!default\");\n        Assert.assertTrue(origin.size() == 0);\n\n        origin = buildOriginList();\n        BlackListFileLoader.overrideBlackList(origin, \"-*,-com.xxx\");\n        Assert.assertTrue(origin.size() == 0);\n\n        origin = buildOriginList();\n        BlackListFileLoader.overrideBlackList(origin, \"aaa,-*,-com.xxx\");\n        Assert.assertTrue(origin.size() == 1);\n        origin = buildOriginList();\n        BlackListFileLoader.overrideBlackList(origin, \"-*,aaa\");\n        Assert.assertTrue(origin.size() == 1);\n\n        origin = buildOriginList();\n        BlackListFileLoader.overrideBlackList(origin, \"-com.xxx\");\n        Assert.assertTrue(origin.size() == 2);\n\n        origin = buildOriginList();\n        BlackListFileLoader.overrideBlackList(origin, \"-com.xxx,-com.yyy\");\n        Assert.assertTrue(origin.size() == 1);\n\n        origin = buildOriginList();\n        BlackListFileLoader.overrideBlackList(origin, \"com.xxx,-com.yyy\");\n        Assert.assertTrue(origin.size() == 2);\n        origin = buildOriginList();\n        BlackListFileLoader.overrideBlackList(origin, \"com.aaa,-com.yyy\");\n        Assert.assertTrue(origin.size() == 3);\n        origin = buildOriginList();\n        BlackListFileLoader.overrideBlackList(origin, \"com.aaa\");\n        Assert.assertTrue(origin.size() == 4);\n        origin = buildOriginList();\n        BlackListFileLoader.overrideBlackList(origin, \"com.xxx;com.yyy;com.zzz\");\n        Assert.assertTrue(origin.size() == 3);\n        origin = buildOriginList();\n        BlackListFileLoader.overrideBlackList(origin, \"com.aaa,com.bbb,com.ccc\");\n        Assert.assertTrue(origin.size() == 6);\n    }", "signature": "void overrideBlackList()", "full_signature": "@Test public void overrideBlackList()", "class_method_signature": "BlackListFileLoaderTest.overrideBlackList()", "testcase": true, "constructor": false, "invocations": ["buildOriginList", "overrideBlackList", "assertTrue", "size", "buildOriginList", "overrideBlackList", "assertTrue", "size", "buildOriginList", "overrideBlackList", "assertTrue", "size", "buildOriginList", "overrideBlackList", "assertTrue", "size", "buildOriginList", "overrideBlackList", "assertTrue", "size", "buildOriginList", "overrideBlackList", "assertTrue", "size", "buildOriginList", "overrideBlackList", "assertTrue", "size", "buildOriginList", "overrideBlackList", "assertTrue", "size", "buildOriginList", "overrideBlackList", "assertTrue", "size", "buildOriginList", "overrideBlackList", "assertTrue", "size", "buildOriginList", "overrideBlackList", "assertTrue", "size", "buildOriginList", "overrideBlackList", "assertTrue", "size", "buildOriginList", "overrideBlackList", "assertTrue", "size", "buildOriginList", "overrideBlackList", "assertTrue", "size"]}, "focal_class": {"identifier": "BlackListFileLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger      LOGGER                    = LoggerFactory.getLogger(BlackListFileLoader.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER                    = LoggerFactory.getLogger(BlackListFileLoader.class)", "var_name": "LOGGER"}, {"original_string": "public static final List<String> SOFA_SERIALIZE_BLACK_LIST = loadFile(\"/sofa-rpc/serialize_blacklist.txt\");", "modifier": "public static final", "type": "List<String>", "declarator": "SOFA_SERIALIZE_BLACK_LIST = loadFile(\"/sofa-rpc/serialize_blacklist.txt\")", "var_name": "SOFA_SERIALIZE_BLACK_LIST"}], "methods": [{"identifier": "loadFile", "parameters": "(String path)", "modifiers": "static", "return": "List<String>", "signature": "List<String> loadFile(String path)", "full_signature": "static List<String> loadFile(String path)", "class_method_signature": "BlackListFileLoader.loadFile(String path)", "testcase": false, "constructor": false}, {"identifier": "readToList", "parameters": "(InputStream input, String encoding, List<String> blackPrefixList)", "modifiers": "private static", "return": "void", "signature": "void readToList(InputStream input, String encoding, List<String> blackPrefixList)", "full_signature": "private static void readToList(InputStream input, String encoding, List<String> blackPrefixList)", "class_method_signature": "BlackListFileLoader.readToList(InputStream input, String encoding, List<String> blackPrefixList)", "testcase": false, "constructor": false}, {"identifier": "overrideBlackList", "parameters": "(List<String> originList, String overrideStr)", "modifiers": "static", "return": "void", "signature": "void overrideBlackList(List<String> originList, String overrideStr)", "full_signature": "static void overrideBlackList(List<String> originList, String overrideStr)", "class_method_signature": "BlackListFileLoader.overrideBlackList(List<String> originList, String overrideStr)", "testcase": false, "constructor": false}], "file": "codec/codec-sofa-hessian/src/main/java/com/alipay/sofa/rpc/codec/sofahessian/BlackListFileLoader.java"}, "focal_method": {"identifier": "overrideBlackList", "parameters": "(List<String> originList, String overrideStr)", "modifiers": "static", "return": "void", "body": "static void overrideBlackList(List<String> originList, String overrideStr) {\n        List<String> adds = new ArrayList<String>();\n        String[] overrideItems = StringUtils.splitWithCommaOrSemicolon(overrideStr);\n        for (String overrideItem : overrideItems) {\n            if (StringUtils.isNotBlank(overrideItem)) {\n                if (overrideItem.startsWith(\"!\") || overrideItem.startsWith(\"-\")) {\n                    overrideItem = overrideItem.substring(1);\n                    if (\"*\".equals(overrideItem) || \"default\".equals(overrideItem)) {\n                        originList.clear();\n                    } else {\n                        originList.remove(overrideItem);\n                    }\n                } else {\n                    if (!originList.contains(overrideItem)) {\n                        adds.add(overrideItem);\n                    }\n                }\n            }\n        }\n        if (adds.size() > 0) {\n            originList.addAll(adds);\n        }\n    }", "signature": "void overrideBlackList(List<String> originList, String overrideStr)", "full_signature": "static void overrideBlackList(List<String> originList, String overrideStr)", "class_method_signature": "BlackListFileLoader.overrideBlackList(List<String> originList, String overrideStr)", "testcase": false, "constructor": false, "invocations": ["splitWithCommaOrSemicolon", "isNotBlank", "startsWith", "startsWith", "substring", "equals", "equals", "clear", "remove", "contains", "add", "size", "addAll"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}