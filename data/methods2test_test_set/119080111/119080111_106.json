{"test_class": {"identifier": "UnboundedArchiveTest", "superclass": "", "interfaces": "", "fields": [], "file": "opt4j-core/src/test/java/org/opt4j/core/common/archive/UnboundedArchiveTest.java"}, "test_case": {"identifier": "updateWithNondominated", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void updateWithNondominated() {\n\t\tIndividual individual = mock(Individual.class);\n\n\t\tUnboundedArchive archive = new UnboundedArchive();\n\t\tAssert.assertFalse(archive.iterator().hasNext());\n\t\tAssert.assertTrue(archive.updateWithNondominated(Collections.singleton(individual)));\n\t\tAssert.assertTrue(archive.iterator().hasNext());\n\t\tAssert.assertEquals(archive.iterator().next(), individual);\n\t}", "signature": "void updateWithNondominated()", "full_signature": "@Test public void updateWithNondominated()", "class_method_signature": "UnboundedArchiveTest.updateWithNondominated()", "testcase": true, "constructor": false, "invocations": ["mock", "assertFalse", "hasNext", "iterator", "assertTrue", "updateWithNondominated", "singleton", "assertTrue", "hasNext", "iterator", "assertEquals", "next", "iterator"]}, "focal_class": {"identifier": "UnboundedArchive", "superclass": "extends AbstractArchive", "interfaces": "", "fields": [], "methods": [{"identifier": "updateWithNondominated", "parameters": "(Collection<Individual> candidates)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean updateWithNondominated(Collection<Individual> candidates)", "full_signature": "@Override protected boolean updateWithNondominated(Collection<Individual> candidates)", "class_method_signature": "UnboundedArchive.updateWithNondominated(Collection<Individual> candidates)", "testcase": false, "constructor": false}], "file": "opt4j-core/src/main/java/org/opt4j/core/common/archive/UnboundedArchive.java"}, "focal_method": {"identifier": "updateWithNondominated", "parameters": "(Collection<Individual> candidates)", "modifiers": "@Override protected", "return": "boolean", "body": "@Override\n\tprotected boolean updateWithNondominated(Collection<Individual> candidates) {\n\t\tboolean changed = false;\n\t\tfor (Individual i : candidates) {\n\t\t\tif (!contains(i)) {\n\t\t\t\tchanged |= addCheckedIndividual(i);\n\t\t\t}\n\t\t}\n\t\treturn changed;\n\t}", "signature": "boolean updateWithNondominated(Collection<Individual> candidates)", "full_signature": "@Override protected boolean updateWithNondominated(Collection<Individual> candidates)", "class_method_signature": "UnboundedArchive.updateWithNondominated(Collection<Individual> candidates)", "testcase": false, "constructor": false, "invocations": ["contains", "addCheckedIndividual"]}, "repository": {"repo_id": 119080111, "url": "https://github.com/felixreimann/opt4j", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 11, "size": 8771, "license": "licensed"}}