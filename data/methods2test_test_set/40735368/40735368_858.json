{"test_class": {"identifier": "BBOXImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "FilterFactory2 ff = CommonFactoryFinder.getFilterFactory2();", "modifier": "", "type": "FilterFactory2", "declarator": "ff = CommonFactoryFinder.getFilterFactory2()", "var_name": "ff"}], "file": "modules/library/main/src/test/java/org/geotools/filter/spatial/BBOXImplTest.java"}, "test_case": {"identifier": "testPreserveOriginalSRS", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPreserveOriginalSRS() throws NoSuchAuthorityCodeException, FactoryException {\n        String srs = \"AUTO:42004,9001,0,33\";\n        CoordinateReferenceSystem crs = CRS.decode(srs);\n        BBOX bbox = ff.bbox(ff.property(\"\"), 0, 1000, 2000, 3000, srs);\n        Geometry geom = bbox.getExpression2().evaluate(null, Geometry.class);\n        assertEquals(crs, geom.getUserData());\n        assertEquals(srs, bbox.getSRS());\n    }", "signature": "void testPreserveOriginalSRS()", "full_signature": "@Test public void testPreserveOriginalSRS()", "class_method_signature": "BBOXImplTest.testPreserveOriginalSRS()", "testcase": true, "constructor": false, "invocations": ["decode", "bbox", "property", "evaluate", "getExpression2", "assertEquals", "getUserData", "assertEquals", "getSRS"]}, "focal_class": {"identifier": "BBOXImpl", "superclass": "extends AbstractPreparedGeometryFilter", "interfaces": "implements BBOX", "fields": [{"original_string": "double minx, miny, maxx, maxy;", "modifier": "", "type": "double", "declarator": "minx", "var_name": "minx"}, {"original_string": "String srs;", "modifier": "", "type": "String", "declarator": "srs", "var_name": "srs"}], "methods": [{"identifier": "BBOXImpl", "parameters": "(Expression e1, Expression e2)", "modifiers": "public", "return": "", "signature": " BBOXImpl(Expression e1, Expression e2)", "full_signature": "public  BBOXImpl(Expression e1, Expression e2)", "class_method_signature": "BBOXImpl.BBOXImpl(Expression e1, Expression e2)", "testcase": false, "constructor": true}, {"identifier": "BBOXImpl", "parameters": "(Expression name, double minx, double miny, double maxx, double maxy, String srs)", "modifiers": "public", "return": "", "signature": " BBOXImpl(Expression name, double minx, double miny, double maxx, double maxy, String srs)", "full_signature": "public  BBOXImpl(Expression name, double minx, double miny, double maxx, double maxy, String srs)", "class_method_signature": "BBOXImpl.BBOXImpl(Expression name, double minx, double miny, double maxx, double maxy, String srs)", "testcase": false, "constructor": true}, {"identifier": "BBOXImpl", "parameters": "(Expression e1, Expression e2, MatchAction matchAction)", "modifiers": "public", "return": "", "signature": " BBOXImpl(Expression e1, Expression e2, MatchAction matchAction)", "full_signature": "public  BBOXImpl(Expression e1, Expression e2, MatchAction matchAction)", "class_method_signature": "BBOXImpl.BBOXImpl(Expression e1, Expression e2, MatchAction matchAction)", "testcase": false, "constructor": true}, {"identifier": "BBOXImpl", "parameters": "(Expression name, double minx, double miny, double maxx, double maxy,\n            String srs, MatchAction matchAction)", "modifiers": "public", "return": "", "signature": " BBOXImpl(Expression name, double minx, double miny, double maxx, double maxy,\n            String srs, MatchAction matchAction)", "full_signature": "public  BBOXImpl(Expression name, double minx, double miny, double maxx, double maxy,\n            String srs, MatchAction matchAction)", "class_method_signature": "BBOXImpl.BBOXImpl(Expression name, double minx, double miny, double maxx, double maxy,\n            String srs, MatchAction matchAction)", "testcase": false, "constructor": true}, {"identifier": "getPropertyName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPropertyName()", "full_signature": "public String getPropertyName()", "class_method_signature": "BBOXImpl.getPropertyName()", "testcase": false, "constructor": false}, {"identifier": "setPropertyName", "parameters": "(String propertyName)", "modifiers": "public", "return": "void", "signature": "void setPropertyName(String propertyName)", "full_signature": "public void setPropertyName(String propertyName)", "class_method_signature": "BBOXImpl.setPropertyName(String propertyName)", "testcase": false, "constructor": false}, {"identifier": "getSRS", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSRS()", "full_signature": "public String getSRS()", "class_method_signature": "BBOXImpl.getSRS()", "testcase": false, "constructor": false}, {"identifier": "setSRS", "parameters": "(String srs)", "modifiers": "public", "return": "void", "signature": "void setSRS(String srs)", "full_signature": "public void setSRS(String srs)", "class_method_signature": "BBOXImpl.setSRS(String srs)", "testcase": false, "constructor": false}, {"identifier": "getMinX", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getMinX()", "full_signature": "public double getMinX()", "class_method_signature": "BBOXImpl.getMinX()", "testcase": false, "constructor": false}, {"identifier": "setMinX", "parameters": "(double minx)", "modifiers": "public", "return": "void", "signature": "void setMinX(double minx)", "full_signature": "public void setMinX(double minx)", "class_method_signature": "BBOXImpl.setMinX(double minx)", "testcase": false, "constructor": false}, {"identifier": "getMinY", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getMinY()", "full_signature": "public double getMinY()", "class_method_signature": "BBOXImpl.getMinY()", "testcase": false, "constructor": false}, {"identifier": "setMinY", "parameters": "(double miny)", "modifiers": "public", "return": "void", "signature": "void setMinY(double miny)", "full_signature": "public void setMinY(double miny)", "class_method_signature": "BBOXImpl.setMinY(double miny)", "testcase": false, "constructor": false}, {"identifier": "getMaxX", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getMaxX()", "full_signature": "public double getMaxX()", "class_method_signature": "BBOXImpl.getMaxX()", "testcase": false, "constructor": false}, {"identifier": "setMaxX", "parameters": "(double maxx)", "modifiers": "public", "return": "void", "signature": "void setMaxX(double maxx)", "full_signature": "public void setMaxX(double maxx)", "class_method_signature": "BBOXImpl.setMaxX(double maxx)", "testcase": false, "constructor": false}, {"identifier": "getMaxY", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getMaxY()", "full_signature": "public double getMaxY()", "class_method_signature": "BBOXImpl.getMaxY()", "testcase": false, "constructor": false}, {"identifier": "setMaxY", "parameters": "(double maxy)", "modifiers": "public", "return": "void", "signature": "void setMaxY(double maxy)", "full_signature": "public void setMaxY(double maxy)", "class_method_signature": "BBOXImpl.setMaxY(double maxy)", "testcase": false, "constructor": false}, {"identifier": "updateExpression2", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updateExpression2()", "full_signature": "private void updateExpression2()", "class_method_signature": "BBOXImpl.updateExpression2()", "testcase": false, "constructor": false}, {"identifier": "evaluateInternal", "parameters": "(Geometry left, Geometry right)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean evaluateInternal(Geometry left, Geometry right)", "full_signature": "@Override public boolean evaluateInternal(Geometry left, Geometry right)", "class_method_signature": "BBOXImpl.evaluateInternal(Geometry left, Geometry right)", "testcase": false, "constructor": false}, {"identifier": "basicEvaluate", "parameters": "(Geometry left, Geometry right)", "modifiers": "protected", "return": "boolean", "signature": "boolean basicEvaluate(Geometry left, Geometry right)", "full_signature": "protected boolean basicEvaluate(Geometry left, Geometry right)", "class_method_signature": "BBOXImpl.basicEvaluate(Geometry left, Geometry right)", "testcase": false, "constructor": false}, {"identifier": "preppedEvaluate", "parameters": "(PreparedGeometry prepped, Geometry other)", "modifiers": "private", "return": "boolean", "signature": "boolean preppedEvaluate(PreparedGeometry prepped, Geometry other)", "full_signature": "private boolean preppedEvaluate(PreparedGeometry prepped, Geometry other)", "class_method_signature": "BBOXImpl.preppedEvaluate(PreparedGeometry prepped, Geometry other)", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(FilterVisitor visitor, Object extraData)", "modifiers": "public", "return": "Object", "signature": "Object accept(FilterVisitor visitor, Object extraData)", "full_signature": "public Object accept(FilterVisitor visitor, Object extraData)", "class_method_signature": "BBOXImpl.accept(FilterVisitor visitor, Object extraData)", "testcase": false, "constructor": false}, {"identifier": "setExpression1", "parameters": "(Expression expression)", "modifiers": "public", "return": "void", "signature": "void setExpression1(Expression expression)", "full_signature": "public void setExpression1(Expression expression)", "class_method_signature": "BBOXImpl.setExpression1(Expression expression)", "testcase": false, "constructor": false}, {"identifier": "setExpression2", "parameters": "(Expression expression)", "modifiers": "public", "return": "void", "signature": "void setExpression2(Expression expression)", "full_signature": "public void setExpression2(Expression expression)", "class_method_signature": "BBOXImpl.setExpression2(Expression expression)", "testcase": false, "constructor": false}, {"identifier": "updateMinMaxFields", "parameters": "(Expression expression)", "modifiers": "private", "return": "void", "signature": "void updateMinMaxFields(Expression expression)", "full_signature": "private void updateMinMaxFields(Expression expression)", "class_method_signature": "BBOXImpl.updateMinMaxFields(Expression expression)", "testcase": false, "constructor": false}, {"identifier": "boundingPolygon", "parameters": "( Envelope env )", "modifiers": "public static", "return": "Polygon", "signature": "Polygon boundingPolygon( Envelope env )", "full_signature": "public static Polygon boundingPolygon( Envelope env )", "class_method_signature": "BBOXImpl.boundingPolygon( Envelope env )", "testcase": false, "constructor": false}, {"identifier": "buildEnvelope", "parameters": "(double minx, double maxx, double miny, double maxy, String srs)", "modifiers": "private static", "return": "ReferencedEnvelope", "signature": "ReferencedEnvelope buildEnvelope(double minx, double maxx, double miny, double maxy, String srs)", "full_signature": "private static ReferencedEnvelope buildEnvelope(double minx, double maxx, double miny, double maxy, String srs)", "class_method_signature": "BBOXImpl.buildEnvelope(double minx, double maxx, double miny, double maxy, String srs)", "testcase": false, "constructor": false}, {"identifier": "getBounds", "parameters": "()", "modifiers": "@Override public", "return": "BoundingBox", "signature": "BoundingBox getBounds()", "full_signature": "@Override public BoundingBox getBounds()", "class_method_signature": "BBOXImpl.getBounds()", "testcase": false, "constructor": false}], "file": "modules/library/main/src/main/java/org/geotools/filter/spatial/BBOXImpl.java"}, "focal_method": {"identifier": "getSRS", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getSRS() {\n        return srs;\n    }", "signature": "String getSRS()", "full_signature": "public String getSRS()", "class_method_signature": "BBOXImpl.getSRS()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}