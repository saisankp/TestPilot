{"test_class": {"identifier": "Interpolate2RealTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundles/core-map/src/test/java/org/orbisgis/coremap/renderer/se/parameter/real/Interpolate2RealTest.java"}, "test_case": {"identifier": "testInterpolateWKN", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n        public void testInterpolateWKN() throws Exception {\n                ModeType.fromValue(Interpolate.InterpolationMode.COSINE.toString().toLowerCase());\n                ModeType.fromValue(Interpolate.InterpolationMode.LINEAR.toString().toLowerCase());\n                ModeType.fromValue(Interpolate.InterpolationMode.CUBIC.toString().toLowerCase());\n                try{\n                        ModeType.fromValue(Interpolate.InterpolationMode.COSINE.toString());\n                        fail();\n                } catch (IllegalArgumentException e){\n                }\n                try{\n                        ModeType.fromValue(Interpolate.InterpolationMode.LINEAR.toString());\n                        fail();\n                } catch (IllegalArgumentException e){\n                }\n                try{\n                        ModeType.fromValue(Interpolate.InterpolationMode.CUBIC.toString());\n                        fail();\n                } catch (IllegalArgumentException e){\n                }\n                assertTrue(true);\n        }", "signature": "void testInterpolateWKN()", "full_signature": "@Test public void testInterpolateWKN()", "class_method_signature": "Interpolate2RealTest.testInterpolateWKN()", "testcase": true, "constructor": false, "invocations": ["fromValue", "toLowerCase", "toString", "fromValue", "toLowerCase", "toString", "fromValue", "toLowerCase", "toString", "fromValue", "toString", "fail", "fromValue", "toString", "fail", "fromValue", "toString", "fail", "assertTrue"]}, "focal_class": {"identifier": "Interpolate2Real", "superclass": "extends Interpolate<RealParameter, RealLiteral>", "interfaces": "implements RealParameter", "fields": [{"original_string": "private RealParameterContext ctx;", "modifier": "private", "type": "RealParameterContext", "declarator": "ctx", "var_name": "ctx"}], "methods": [{"identifier": "Interpolate2Real", "parameters": "(RealLiteral fallback)", "modifiers": "public", "return": "", "signature": " Interpolate2Real(RealLiteral fallback)", "full_signature": "public  Interpolate2Real(RealLiteral fallback)", "class_method_signature": "Interpolate2Real.Interpolate2Real(RealLiteral fallback)", "testcase": false, "constructor": true}, {"identifier": "Interpolate2Real", "parameters": "(InterpolateType expr)", "modifiers": "public", "return": "", "signature": " Interpolate2Real(InterpolateType expr)", "full_signature": "public  Interpolate2Real(InterpolateType expr)", "class_method_signature": "Interpolate2Real.Interpolate2Real(InterpolateType expr)", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "(ResultSet rs, long fid)", "modifiers": "@Override public", "return": "Double", "signature": "Double getValue(ResultSet rs, long fid)", "full_signature": "@Override public Double getValue(ResultSet rs, long fid)", "class_method_signature": "Interpolate2Real.getValue(ResultSet rs, long fid)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(Map<String,Object> map)", "modifiers": "@Override public", "return": "Double", "signature": "Double getValue(Map<String,Object> map)", "full_signature": "@Override public Double getValue(Map<String,Object> map)", "class_method_signature": "Interpolate2Real.getValue(Map<String,Object> map)", "testcase": false, "constructor": false}, {"identifier": "setFallbackValue", "parameters": "(RealLiteral l)", "modifiers": "@Override public", "return": "void", "signature": "void setFallbackValue(RealLiteral l)", "full_signature": "@Override public void setFallbackValue(RealLiteral l)", "class_method_signature": "Interpolate2Real.setFallbackValue(RealLiteral l)", "testcase": false, "constructor": false}, {"identifier": "addInterpolationPoint", "parameters": "(InterpolationPoint<RealParameter> point)", "modifiers": "@Override public", "return": "void", "signature": "void addInterpolationPoint(InterpolationPoint<RealParameter> point)", "full_signature": "@Override public void addInterpolationPoint(InterpolationPoint<RealParameter> point)", "class_method_signature": "Interpolate2Real.addInterpolationPoint(InterpolationPoint<RealParameter> point)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Interpolate2Real.toString()", "testcase": false, "constructor": false}, {"identifier": "setContext", "parameters": "(RealParameterContext ctx)", "modifiers": "@Override public", "return": "void", "signature": "void setContext(RealParameterContext ctx)", "full_signature": "@Override public void setContext(RealParameterContext ctx)", "class_method_signature": "Interpolate2Real.setContext(RealParameterContext ctx)", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "()", "modifiers": "@Override public", "return": "RealParameterContext", "signature": "RealParameterContext getContext()", "full_signature": "@Override public RealParameterContext getContext()", "class_method_signature": "Interpolate2Real.getContext()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Object o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(Object o)", "full_signature": "@Override public int compareTo(Object o)", "class_method_signature": "Interpolate2Real.compareTo(Object o)", "testcase": false, "constructor": false}], "file": "bundles/core-map/src/main/java/org/orbisgis/coremap/renderer/se/parameter/real/Interpolate2Real.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n        public String toString() {\n                return \"NA\";\n        }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Interpolate2Real.toString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}