{"test_class": {"identifier": "JpaUnitCdiExtensionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ProcessProducer<Object, EntityManager> producer;", "modifier": "@Mock\n    private", "type": "ProcessProducer<Object, EntityManager>", "declarator": "producer", "var_name": "producer"}, {"original_string": "@Captor\n    private ArgumentCaptor<Producer<EntityManager>> producerCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<Producer<EntityManager>>", "declarator": "producerCaptor", "var_name": "producerCaptor"}], "file": "cdi/src/test/java/eu/drus/jpa/unit/cdi/JpaUnitCdiExtensionTest.java"}, "test_case": {"identifier": "testRegisterProducer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRegisterProducer() {\n        // GIVEN\n        final JpaUnitCdiExtension extension = new JpaUnitCdiExtension();\n\n        // WHEN\n        extension.registerProducer(producer);\n\n        // THEN\n        verify(producer).getProducer();\n        verify(producer).setProducer(producerCaptor.capture());\n        verifyNoMoreInteractions(producer);\n\n        final Producer<EntityManager> captured = producerCaptor.getValue();\n        assertThat(captured, not(nullValue()));\n        assertThat(captured, instanceOf(EntityManagerProducerProxy.class));\n    }", "signature": "void testRegisterProducer()", "full_signature": "@Test public void testRegisterProducer()", "class_method_signature": "JpaUnitCdiExtensionTest.testRegisterProducer()", "testcase": true, "constructor": false, "invocations": ["registerProducer", "getProducer", "verify", "setProducer", "verify", "capture", "verifyNoMoreInteractions", "getValue", "assertThat", "not", "nullValue", "assertThat", "instanceOf"]}, "focal_class": {"identifier": "JpaUnitCdiExtension", "superclass": "", "interfaces": "implements Extension", "fields": [], "methods": [{"identifier": "registerProducer", "parameters": "(@Observes final ProcessProducer<T, EntityManager> pb)", "modifiers": "public", "return": "void", "signature": "void registerProducer(@Observes final ProcessProducer<T, EntityManager> pb)", "full_signature": "public void registerProducer(@Observes final ProcessProducer<T, EntityManager> pb)", "class_method_signature": "JpaUnitCdiExtension.registerProducer(@Observes final ProcessProducer<T, EntityManager> pb)", "testcase": false, "constructor": false}], "file": "cdi/src/main/java/eu/drus/jpa/unit/cdi/JpaUnitCdiExtension.java"}, "focal_method": {"identifier": "registerProducer", "parameters": "(@Observes final ProcessProducer<T, EntityManager> pb)", "modifiers": "public", "return": "void", "body": "public <T> void registerProducer(@Observes final ProcessProducer<T, EntityManager> pb) {\n        pb.setProducer(new EntityManagerProducerProxy(pb.getProducer()));\n    }", "signature": "void registerProducer(@Observes final ProcessProducer<T, EntityManager> pb)", "full_signature": "public void registerProducer(@Observes final ProcessProducer<T, EntityManager> pb)", "class_method_signature": "JpaUnitCdiExtension.registerProducer(@Observes final ProcessProducer<T, EntityManager> pb)", "testcase": false, "constructor": false, "invocations": ["setProducer", "getProducer"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}