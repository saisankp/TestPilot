{"test_class": {"identifier": "JavaExecutorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CLASS_NAME = \"group.artifact.OneClass\";", "modifier": "private static final", "type": "String", "declarator": "CLASS_NAME = \"group.artifact.OneClass\"", "var_name": "CLASS_NAME"}, {"original_string": "private static final String METHOD_NAME = \"getVersion\";", "modifier": "private static final", "type": "String", "declarator": "METHOD_NAME = \"getVersion\"", "var_name": "METHOD_NAME"}, {"original_string": "private static final JavaExecutionParametersProvider PARAM_PROVIDER = new JavaExecutionParametersProvider() {\n        @Override\n        public Object[] getExecutionParameters(Method executionMethod) {\n            return new Object[0];\n        }\n    };", "modifier": "private static final", "type": "JavaExecutionParametersProvider", "declarator": "PARAM_PROVIDER = new JavaExecutionParametersProvider() {\n        @Override\n        public Object[] getExecutionParameters(Method executionMethod) {\n            return new Object[0];\n        }\n    }", "var_name": "PARAM_PROVIDER"}, {"original_string": "@Rule\n    public ExpectedException expectedEx = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedEx = ExpectedException.none()", "var_name": "expectedEx"}], "file": "runtime-management/runtime-management-impl/src/test/java/io/cloudslang/runtime/impl/java/JavaExecutorTest.java"}, "test_case": {"identifier": "testJavaExecutorMissingDependency", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testJavaExecutorMissingDependency() {\n        expectedEx.expect(RuntimeException.class);\n        expectedEx.expectMessage(\"Method [getVersion] invocation of class [group.artifact.OneClass] failed: null\");\n\n        File one = new File(getClass().getClassLoader().getResource(\"one1.zip\").getFile());\n\n        JavaExecutor javaExecutor = new JavaExecutor(new HashSet<>(Arrays.asList(one.getAbsolutePath())));\n\n        javaExecutor.execute(CLASS_NAME, METHOD_NAME, PARAM_PROVIDER).toString();\n    }", "signature": "void testJavaExecutorMissingDependency()", "full_signature": "@Test public void testJavaExecutorMissingDependency()", "class_method_signature": "JavaExecutorTest.testJavaExecutorMissingDependency()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "getFile", "getResource", "getClassLoader", "getClass", "asList", "getAbsolutePath", "toString", "execute"]}, "focal_class": {"identifier": "JavaExecutor", "superclass": "", "interfaces": "implements Executor", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(JavaExecutor.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(JavaExecutor.class)", "var_name": "logger"}, {"original_string": "private static final String SCORE_CONTENT_SDK_JAR = \"score-content-sdk*.jar\";", "modifier": "private static final", "type": "String", "declarator": "SCORE_CONTENT_SDK_JAR = \"score-content-sdk*.jar\"", "var_name": "SCORE_CONTENT_SDK_JAR"}, {"original_string": "private static final String APP_HOME = \"app.home\";", "modifier": "private static final", "type": "String", "declarator": "APP_HOME = \"app.home\"", "var_name": "APP_HOME"}, {"original_string": "private static final ClassLoader PARENT_CLASS_LOADER;", "modifier": "private static final", "type": "ClassLoader", "declarator": "PARENT_CLASS_LOADER", "var_name": "PARENT_CLASS_LOADER"}, {"original_string": "private final ClassLoader classLoader;", "modifier": "private final", "type": "ClassLoader", "declarator": "classLoader", "var_name": "classLoader"}], "methods": [{"identifier": "JavaExecutor", "parameters": "(Set<String> filePaths)", "modifiers": "", "return": "", "signature": " JavaExecutor(Set<String> filePaths)", "full_signature": "  JavaExecutor(Set<String> filePaths)", "class_method_signature": "JavaExecutor.JavaExecutor(Set<String> filePaths)", "testcase": false, "constructor": true}, {"identifier": "getParentClassLoader", "parameters": "()", "modifiers": "public static", "return": "ClassLoader", "signature": "ClassLoader getParentClassLoader()", "full_signature": "public static ClassLoader getParentClassLoader()", "class_method_signature": "JavaExecutor.getParentClassLoader()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(String className, String methodName, JavaExecutionParametersProvider parametersProvider)", "modifiers": "", "return": "Object", "signature": "Object execute(String className, String methodName, JavaExecutionParametersProvider parametersProvider)", "full_signature": " Object execute(String className, String methodName, JavaExecutionParametersProvider parametersProvider)", "class_method_signature": "JavaExecutor.execute(String className, String methodName, JavaExecutionParametersProvider parametersProvider)", "testcase": false, "constructor": false}, {"identifier": "transformExecutionParameters", "parameters": "(Object[] oldExecutionParameters, Method executionMethod)", "modifiers": "private", "return": "Object[]", "signature": "Object[] transformExecutionParameters(Object[] oldExecutionParameters, Method executionMethod)", "full_signature": "private Object[] transformExecutionParameters(Object[] oldExecutionParameters, Method executionMethod)", "class_method_signature": "JavaExecutor.transformExecutionParameters(Object[] oldExecutionParameters, Method executionMethod)", "testcase": false, "constructor": false}, {"identifier": "getFieldValue", "parameters": "(String fieldName, Class<?> currentParameterClass, Object currentParameter)", "modifiers": "private", "return": "Object", "signature": "Object getFieldValue(String fieldName, Class<?> currentParameterClass, Object currentParameter)", "full_signature": "private Object getFieldValue(String fieldName, Class<?> currentParameterClass, Object currentParameter)", "class_method_signature": "JavaExecutor.getFieldValue(String fieldName, Class<?> currentParameterClass, Object currentParameter)", "testcase": false, "constructor": false}, {"identifier": "getFieldValueFromSuperClass", "parameters": "(String fieldName, Class<?> currentParameterClass,\n                                               Object currentParameter)", "modifiers": "private", "return": "Object", "signature": "Object getFieldValueFromSuperClass(String fieldName, Class<?> currentParameterClass,\n                                               Object currentParameter)", "full_signature": "private Object getFieldValueFromSuperClass(String fieldName, Class<?> currentParameterClass,\n                                               Object currentParameter)", "class_method_signature": "JavaExecutor.getFieldValueFromSuperClass(String fieldName, Class<?> currentParameterClass,\n                                               Object currentParameter)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(Object value, Class<?> currentParameterClass, Object currentParameter)", "modifiers": "private", "return": "void", "signature": "void setValue(Object value, Class<?> currentParameterClass, Object currentParameter)", "full_signature": "private void setValue(Object value, Class<?> currentParameterClass, Object currentParameter)", "class_method_signature": "JavaExecutor.setValue(Object value, Class<?> currentParameterClass, Object currentParameter)", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(Object name, Class<?> currentParameterClass, Object currentParameter)", "modifiers": "private", "return": "void", "signature": "void setName(Object name, Class<?> currentParameterClass, Object currentParameter)", "full_signature": "private void setName(Object name, Class<?> currentParameterClass, Object currentParameter)", "class_method_signature": "JavaExecutor.setName(Object name, Class<?> currentParameterClass, Object currentParameter)", "testcase": false, "constructor": false}, {"identifier": "setField", "parameters": "(String fieldId, Object fieldValue, Class<?> fieldType, Class<?> currentParameterClass,\n                          Object currentParameter)", "modifiers": "private", "return": "void", "signature": "void setField(String fieldId, Object fieldValue, Class<?> fieldType, Class<?> currentParameterClass,\n                          Object currentParameter)", "full_signature": "private void setField(String fieldId, Object fieldValue, Class<?> fieldType, Class<?> currentParameterClass,\n                          Object currentParameter)", "class_method_signature": "JavaExecutor.setField(String fieldId, Object fieldValue, Class<?> fieldType, Class<?> currentParameterClass,\n                          Object currentParameter)", "testcase": false, "constructor": false}, {"identifier": "isSerializableSessionObjectMismatch", "parameters": "(Class<?> expectedClass, Class<?> currentParameterClass)", "modifiers": "private", "return": "boolean", "signature": "boolean isSerializableSessionObjectMismatch(Class<?> expectedClass, Class<?> currentParameterClass)", "full_signature": "private boolean isSerializableSessionObjectMismatch(Class<?> expectedClass, Class<?> currentParameterClass)", "class_method_signature": "JavaExecutor.isSerializableSessionObjectMismatch(Class<?> expectedClass, Class<?> currentParameterClass)", "testcase": false, "constructor": false}, {"identifier": "getActionClass", "parameters": "(String className)", "modifiers": "private", "return": "Class", "signature": "Class getActionClass(String className)", "full_signature": "private Class getActionClass(String className)", "class_method_signature": "JavaExecutor.getActionClass(String className)", "testcase": false, "constructor": false}, {"identifier": "getMethodByName", "parameters": "(Class actionClass, String methodName)", "modifiers": "private", "return": "Method", "signature": "Method getMethodByName(Class actionClass, String methodName)", "full_signature": "private Method getMethodByName(Class actionClass, String methodName)", "class_method_signature": "JavaExecutor.getMethodByName(Class actionClass, String methodName)", "testcase": false, "constructor": false}, {"identifier": "allocate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void allocate()", "full_signature": "@Override public void allocate()", "class_method_signature": "JavaExecutor.allocate()", "testcase": false, "constructor": false}, {"identifier": "release", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void release()", "full_signature": "@Override public void release()", "class_method_signature": "JavaExecutor.release()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "JavaExecutor.close()", "testcase": false, "constructor": false}], "file": "runtime-management/runtime-management-impl/src/main/java/io/cloudslang/runtime/impl/java/JavaExecutor.java"}, "focal_method": {"identifier": "execute", "parameters": "(String className, String methodName, JavaExecutionParametersProvider parametersProvider)", "modifiers": "", "return": "Object", "body": "Object execute(String className, String methodName, JavaExecutionParametersProvider parametersProvider) {\n        ClassLoader origCL = Thread.currentThread().getContextClassLoader();\n        try {\n            Thread.currentThread().setContextClassLoader(classLoader);\n            Class actionClass = getActionClass(className);\n            Method executionMethod = getMethodByName(actionClass, methodName);\n\n            Object[] executionParameters = parametersProvider.getExecutionParameters(executionMethod);\n            Object[] transformedExecutionParameters = transformExecutionParameters(executionParameters,\n                    executionMethod);\n\n            return executionMethod.invoke(actionClass.newInstance(), transformedExecutionParameters);\n        } catch (Exception e) {\n            throw new RuntimeException(\n                    \"Method [\" + methodName + \"] invocation of class [\" + className + \"] failed: \" + e.getMessage(), e);\n        } finally {\n            Thread.currentThread().setContextClassLoader(origCL);\n        }\n    }", "signature": "Object execute(String className, String methodName, JavaExecutionParametersProvider parametersProvider)", "full_signature": " Object execute(String className, String methodName, JavaExecutionParametersProvider parametersProvider)", "class_method_signature": "JavaExecutor.execute(String className, String methodName, JavaExecutionParametersProvider parametersProvider)", "testcase": false, "constructor": false, "invocations": ["getContextClassLoader", "currentThread", "setContextClassLoader", "currentThread", "getActionClass", "getMethodByName", "getExecutionParameters", "transformExecutionParameters", "invoke", "newInstance", "getMessage", "setContextClassLoader", "currentThread"]}, "repository": {"repo_id": 28394156, "url": "https://github.com/CloudSlang/score", "stars": 76, "created": "12/23/2014 11:19:26 AM +00:00", "updates": "2020-01-27T14:36:32+00:00", "fork": "False", "license": "licensed"}}