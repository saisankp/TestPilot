{"test_class": {"identifier": "BitmapLruCacheTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [{"original_string": "private static final int DEFAULT_SIZE = 15 * 1024 * 1024;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_SIZE = 15 * 1024 * 1024", "var_name": "DEFAULT_SIZE"}], "file": "library/src/test/java/com/climate/mirage/cache/memory/BitmapLruCacheTest.java"}, "test_case": {"identifier": "testSimpleOnNullKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSimpleOnNullKey() {\n\t\tBitmapLruCache cache = new BitmapLruCache(DEFAULT_SIZE);\n\t\tAssert.assertFalse(cache.has(null));\n\t}", "signature": "void testSimpleOnNullKey()", "full_signature": "@Test public void testSimpleOnNullKey()", "class_method_signature": "BitmapLruCacheTest.testSimpleOnNullKey()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "has"]}, "focal_class": {"identifier": "BitmapLruCache", "superclass": "extends LruCacheAdapter<String, Bitmap>", "interfaces": "", "fields": [{"original_string": "private LruCache<String, Bitmap> impl;", "modifier": "private", "type": "LruCache<String, Bitmap>", "declarator": "impl", "var_name": "impl"}], "methods": [{"identifier": "BitmapLruCache", "parameters": "(float percentOfAvailableMemory)", "modifiers": "public", "return": "", "signature": " BitmapLruCache(float percentOfAvailableMemory)", "full_signature": "public  BitmapLruCache(float percentOfAvailableMemory)", "class_method_signature": "BitmapLruCache.BitmapLruCache(float percentOfAvailableMemory)", "testcase": false, "constructor": true}, {"identifier": "BitmapLruCache", "parameters": "(int maxSize)", "modifiers": "public", "return": "", "signature": " BitmapLruCache(int maxSize)", "full_signature": "public  BitmapLruCache(int maxSize)", "class_method_signature": "BitmapLruCache.BitmapLruCache(int maxSize)", "testcase": false, "constructor": true}, {"identifier": "has", "parameters": "(String key)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean has(String key)", "full_signature": "@Override public boolean has(String key)", "class_method_signature": "BitmapLruCache.has(String key)", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/climate/mirage/cache/memory/BitmapLruCache.java"}, "focal_method": {"identifier": "has", "parameters": "(String key)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean has(String key) {\n\t\tif (key == null) return false;\n\t\tBitmap value = get(key);\n\t\treturn (value != null && !value.isRecycled());\n\t}", "signature": "boolean has(String key)", "full_signature": "@Override public boolean has(String key)", "class_method_signature": "BitmapLruCache.has(String key)", "testcase": false, "constructor": false, "invocations": ["get", "isRecycled"]}, "repository": {"repo_id": 35564219, "url": "https://github.com/TheClimateCorporation/mirage", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 3928, "license": "licensed"}}