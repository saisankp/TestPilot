{"test_class": {"identifier": "DataSourceDeployerTest", "superclass": "", "interfaces": "", "fields": [], "file": "mycontainer-components/mycontainer-datasource/src/test/java/com/googlecode/mycontainer/datasource/DataSourceDeployerTest.java"}, "test_case": {"identifier": "testConnection", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testConnection() throws Exception {\n\t\tInitialContext ic = new InitialContext();\n\n\t\tTransactionManager tm = (TransactionManager) ic\n\t\t\t\t.lookup(\"TransactionManager\");\n\t\tDataSource ds = (DataSource) ic.lookup(\"TestDS\");\n\t\tassertNotNull(ds);\n\n\t\tConnection conn = null;\n\t\ttm.begin();\n\t\ttry {\n\t\t\tconn = (Connection) ds.getConnection();\n\t\t\tassertNotNull(conn);\n\n\t\t\tConnection conn1 = ds.getConnection();\n\t\t\tds = (DataSource) ic.lookup(\"TestDS\");\n\t\t\tConnection conn2 = ds.getConnection();\n\t\t\tassertEquals(conn, conn1);\n\t\t\tassertEquals(conn, conn2);\n\n\t\t\tTransaction tx = tm.suspend();\n\t\t\ttm.begin();\n\t\t\tconn2 = ds.getConnection();\n\t\t\tassertFalse(conn.equals(conn2));\n\t\t\ttm.commit();\n\t\t\ttm.resume(tx);\n\n\t\t\tds = (DataSource) ic.lookup(\"TestDS\");\n\t\t\tconn1 = ds.getConnection();\n\t\t\tds = (DataSource) ic.lookup(\"OtherTestDS\");\n\t\t\tconn2 = ds.getConnection();\n\t\t\tassertEquals(conn, conn1);\n\t\t\tassertFalse(conn.equals(conn2));\n\t\t} finally {\n\t\t\tif (conn != null) {\n\t\t\t\tconn.close();\n\t\t\t}\n\t\t}\n\t\ttm.commit();\n\t}", "signature": "void testConnection()", "full_signature": "@Test public void testConnection()", "class_method_signature": "DataSourceDeployerTest.testConnection()", "testcase": true, "constructor": false, "invocations": ["lookup", "lookup", "assertNotNull", "begin", "getConnection", "assertNotNull", "getConnection", "lookup", "getConnection", "assertEquals", "assertEquals", "suspend", "begin", "getConnection", "assertFalse", "equals", "commit", "resume", "lookup", "getConnection", "lookup", "getConnection", "assertEquals", "assertFalse", "equals", "close", "commit"]}, "focal_class": {"identifier": "DataSourceDeployer", "superclass": "extends Deployer", "interfaces": "implements ShutdownHook, DataSource", "fields": [{"original_string": "private static final long serialVersionUID = -2510091316151254781L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -2510091316151254781L", "var_name": "serialVersionUID"}, {"original_string": "private static final org.slf4j.Logger LOG = org.slf4j.LoggerFactory.getLogger(DataSourceDeployer.class);", "modifier": "private static final", "type": "org.slf4j.Logger", "declarator": "LOG = org.slf4j.LoggerFactory.getLogger(DataSourceDeployer.class)", "var_name": "LOG"}, {"original_string": "private String transcationManagerName = \"TransactionManager\";", "modifier": "private", "type": "String", "declarator": "transcationManagerName = \"TransactionManager\"", "var_name": "transcationManagerName"}, {"original_string": "private String driver;", "modifier": "private", "type": "String", "declarator": "driver", "var_name": "driver"}, {"original_string": "private String url;", "modifier": "private", "type": "String", "declarator": "url", "var_name": "url"}, {"original_string": "private String user;", "modifier": "private", "type": "String", "declarator": "user", "var_name": "user"}, {"original_string": "private String pass;", "modifier": "private", "type": "String", "declarator": "pass", "var_name": "pass"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String newConnectionSql;", "modifier": "private", "type": "String", "declarator": "newConnectionSql", "var_name": "newConnectionSql"}, {"original_string": "private PrintWriter logWriter;", "modifier": "private", "type": "PrintWriter", "declarator": "logWriter", "var_name": "logWriter"}, {"original_string": "private int loginTimeout;", "modifier": "private", "type": "int", "declarator": "loginTimeout", "var_name": "loginTimeout"}], "methods": [{"identifier": "setTranscationManagerName", "parameters": "(String transcationManagerName)", "modifiers": "public", "return": "void", "signature": "void setTranscationManagerName(String transcationManagerName)", "full_signature": "public void setTranscationManagerName(String transcationManagerName)", "class_method_signature": "DataSourceDeployer.setTranscationManagerName(String transcationManagerName)", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void setName(String name)", "full_signature": "public void setName(String name)", "class_method_signature": "DataSourceDeployer.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "setDriver", "parameters": "(String driver)", "modifiers": "public", "return": "void", "signature": "void setDriver(String driver)", "full_signature": "public void setDriver(String driver)", "class_method_signature": "DataSourceDeployer.setDriver(String driver)", "testcase": false, "constructor": false}, {"identifier": "setUrl", "parameters": "(String url)", "modifiers": "public", "return": "void", "signature": "void setUrl(String url)", "full_signature": "public void setUrl(String url)", "class_method_signature": "DataSourceDeployer.setUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "setUser", "parameters": "(String user)", "modifiers": "public", "return": "void", "signature": "void setUser(String user)", "full_signature": "public void setUser(String user)", "class_method_signature": "DataSourceDeployer.setUser(String user)", "testcase": false, "constructor": false}, {"identifier": "setPass", "parameters": "(String pass)", "modifiers": "public", "return": "void", "signature": "void setPass(String pass)", "full_signature": "public void setPass(String pass)", "class_method_signature": "DataSourceDeployer.setPass(String pass)", "testcase": false, "constructor": false}, {"identifier": "setNewConnectionSql", "parameters": "(String newConnectionSql)", "modifiers": "public", "return": "void", "signature": "void setNewConnectionSql(String newConnectionSql)", "full_signature": "public void setNewConnectionSql(String newConnectionSql)", "class_method_signature": "DataSourceDeployer.setNewConnectionSql(String newConnectionSql)", "testcase": false, "constructor": false}, {"identifier": "deploy", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void deploy()", "full_signature": "public void deploy()", "class_method_signature": "DataSourceDeployer.deploy()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void shutdown()", "full_signature": "public void shutdown()", "class_method_signature": "DataSourceDeployer.shutdown()", "testcase": false, "constructor": false}, {"identifier": "getConnection", "parameters": "()", "modifiers": "public", "return": "Connection", "signature": "Connection getConnection()", "full_signature": "public Connection getConnection()", "class_method_signature": "DataSourceDeployer.getConnection()", "testcase": false, "constructor": false}, {"identifier": "getConnection", "parameters": "(String username, String password)", "modifiers": "public", "return": "Connection", "signature": "Connection getConnection(String username, String password)", "full_signature": "public Connection getConnection(String username, String password)", "class_method_signature": "DataSourceDeployer.getConnection(String username, String password)", "testcase": false, "constructor": false}, {"identifier": "createConnection", "parameters": "()", "modifiers": "private", "return": "Connection", "signature": "Connection createConnection()", "full_signature": "private Connection createConnection()", "class_method_signature": "DataSourceDeployer.createConnection()", "testcase": false, "constructor": false}, {"identifier": "handleNewConnection", "parameters": "(Connection con)", "modifiers": "private", "return": "void", "signature": "void handleNewConnection(Connection con)", "full_signature": "private void handleNewConnection(Connection con)", "class_method_signature": "DataSourceDeployer.handleNewConnection(Connection con)", "testcase": false, "constructor": false}, {"identifier": "lookupConnections", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "Map<TxEntry, Connection>", "signature": "Map<TxEntry, Connection> lookupConnections()", "full_signature": "@SuppressWarnings(\"unchecked\") private Map<TxEntry, Connection> lookupConnections()", "class_method_signature": "DataSourceDeployer.lookupConnections()", "testcase": false, "constructor": false}, {"identifier": "rollbackAndClose", "parameters": "(Connection ret)", "modifiers": "private", "return": "void", "signature": "void rollbackAndClose(Connection ret)", "full_signature": "private void rollbackAndClose(Connection ret)", "class_method_signature": "DataSourceDeployer.rollbackAndClose(Connection ret)", "testcase": false, "constructor": false}, {"identifier": "enlist", "parameters": "(Connection ret, Transaction tx)", "modifiers": "private", "return": "Connection", "signature": "Connection enlist(Connection ret, Transaction tx)", "full_signature": "private Connection enlist(Connection ret, Transaction tx)", "class_method_signature": "DataSourceDeployer.enlist(Connection ret, Transaction tx)", "testcase": false, "constructor": false}, {"identifier": "getLogWriter", "parameters": "()", "modifiers": "public", "return": "PrintWriter", "signature": "PrintWriter getLogWriter()", "full_signature": "public PrintWriter getLogWriter()", "class_method_signature": "DataSourceDeployer.getLogWriter()", "testcase": false, "constructor": false}, {"identifier": "getLoginTimeout", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLoginTimeout()", "full_signature": "public int getLoginTimeout()", "class_method_signature": "DataSourceDeployer.getLoginTimeout()", "testcase": false, "constructor": false}, {"identifier": "setLogWriter", "parameters": "(PrintWriter out)", "modifiers": "public", "return": "void", "signature": "void setLogWriter(PrintWriter out)", "full_signature": "public void setLogWriter(PrintWriter out)", "class_method_signature": "DataSourceDeployer.setLogWriter(PrintWriter out)", "testcase": false, "constructor": false}, {"identifier": "setLoginTimeout", "parameters": "(int seconds)", "modifiers": "public", "return": "void", "signature": "void setLoginTimeout(int seconds)", "full_signature": "public void setLoginTimeout(int seconds)", "class_method_signature": "DataSourceDeployer.setLoginTimeout(int seconds)", "testcase": false, "constructor": false}, {"identifier": "isWrapperFor", "parameters": "(Class<?> iface)", "modifiers": "public", "return": "boolean", "signature": "boolean isWrapperFor(Class<?> iface)", "full_signature": "public boolean isWrapperFor(Class<?> iface)", "class_method_signature": "DataSourceDeployer.isWrapperFor(Class<?> iface)", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "(Class<T> iface)", "modifiers": "public", "return": "T", "signature": "T unwrap(Class<T> iface)", "full_signature": "public T unwrap(Class<T> iface)", "class_method_signature": "DataSourceDeployer.unwrap(Class<T> iface)", "testcase": false, "constructor": false}, {"identifier": "getParentLogger", "parameters": "()", "modifiers": "public", "return": "Logger", "signature": "Logger getParentLogger()", "full_signature": "public Logger getParentLogger()", "class_method_signature": "DataSourceDeployer.getParentLogger()", "testcase": false, "constructor": false}], "file": "mycontainer-components/mycontainer-datasource/src/main/java/com/googlecode/mycontainer/datasource/DataSourceDeployer.java"}, "focal_method": {"identifier": "getConnection", "parameters": "()", "modifiers": "public", "return": "Connection", "body": "public Connection getConnection() throws SQLException {\n\t\treturn getConnection(user, pass);\n\t}", "signature": "Connection getConnection()", "full_signature": "public Connection getConnection()", "class_method_signature": "DataSourceDeployer.getConnection()", "testcase": false, "constructor": false, "invocations": ["getConnection"]}, "repository": {"repo_id": 9149127, "url": "https://github.com/murer/mycontainer", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 13, "size": 1353, "license": "licensed"}}