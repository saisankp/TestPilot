{"test_class": {"identifier": "OAuthDialogFragmentTest", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "library/src/test/java/com/wuman/android/auth/OAuthDialogFragmentTest.java"}, "test_case": {"identifier": "testRedirectUriDetection", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRedirectUriDetection() {\n        String r1 = \"http://localhost\";\n        String r2 = \"http://localhost:8080\";\n        String r3 = \"http://localhost:8080/path\";\n        String r4 = \"http://localhost:8080/path?a=1&b=2\";\n        String r5 = \"http://localhost:8080/path#frag\";\n\n        assertTrue(OAuthDialogFragment.isRedirectUriFound(r1, r1));\n        assertTrue(OAuthDialogFragment.isRedirectUriFound(r2, r2));\n        assertTrue(OAuthDialogFragment.isRedirectUriFound(r3, r2));\n        assertTrue(OAuthDialogFragment.isRedirectUriFound(r4, r2));\n        assertTrue(OAuthDialogFragment.isRedirectUriFound(r5, r2));\n        assertTrue(OAuthDialogFragment.isRedirectUriFound(r4, r3));\n        assertTrue(OAuthDialogFragment.isRedirectUriFound(r5, r3));\n        assertTrue(OAuthDialogFragment.isRedirectUriFound(r4, r4));\n        assertTrue(OAuthDialogFragment.isRedirectUriFound(r5, r5));\n\n        assertFalse(OAuthDialogFragment.isRedirectUriFound(r1, r2));\n        assertFalse(OAuthDialogFragment.isRedirectUriFound(r1, r3));\n        assertFalse(OAuthDialogFragment.isRedirectUriFound(r1, r4));\n        assertFalse(OAuthDialogFragment.isRedirectUriFound(r1, r5));\n        assertFalse(OAuthDialogFragment.isRedirectUriFound(r2, r1));\n        assertFalse(OAuthDialogFragment.isRedirectUriFound(r2, r3));\n        assertFalse(OAuthDialogFragment.isRedirectUriFound(r2, r4));\n        assertFalse(OAuthDialogFragment.isRedirectUriFound(r2, r5));\n        assertFalse(OAuthDialogFragment.isRedirectUriFound(r3, r1));\n        assertFalse(OAuthDialogFragment.isRedirectUriFound(r3, r4));\n        assertFalse(OAuthDialogFragment.isRedirectUriFound(r3, r5));\n        assertFalse(OAuthDialogFragment.isRedirectUriFound(r4, r1));\n        assertFalse(OAuthDialogFragment.isRedirectUriFound(r4, r5));\n        assertFalse(OAuthDialogFragment.isRedirectUriFound(r5, r1));\n        assertFalse(OAuthDialogFragment.isRedirectUriFound(r5, r4));\n\n        assertTrue(OAuthDialogFragment.isRedirectUriFound(r4 + \"&c=3\", r4));\n        assertTrue(OAuthDialogFragment.isRedirectUriFound(\"http://localhost:8080/path?b=2&a=1\", r4));\n        assertTrue(OAuthDialogFragment.isRedirectUriFound(\"http://localhost:8080/path?c=3&b=2&a=1\", r4));\n    }", "signature": "void testRedirectUriDetection()", "full_signature": "@Test public void testRedirectUriDetection()", "class_method_signature": "OAuthDialogFragmentTest.testRedirectUriDetection()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isRedirectUriFound", "assertTrue", "isRedirectUriFound", "assertTrue", "isRedirectUriFound", "assertTrue", "isRedirectUriFound", "assertTrue", "isRedirectUriFound", "assertTrue", "isRedirectUriFound", "assertTrue", "isRedirectUriFound", "assertTrue", "isRedirectUriFound", "assertTrue", "isRedirectUriFound", "assertFalse", "isRedirectUriFound", "assertFalse", "isRedirectUriFound", "assertFalse", "isRedirectUriFound", "assertFalse", "isRedirectUriFound", "assertFalse", "isRedirectUriFound", "assertFalse", "isRedirectUriFound", "assertFalse", "isRedirectUriFound", "assertFalse", "isRedirectUriFound", "assertFalse", "isRedirectUriFound", "assertFalse", "isRedirectUriFound", "assertFalse", "isRedirectUriFound", "assertFalse", "isRedirectUriFound", "assertFalse", "isRedirectUriFound", "assertFalse", "isRedirectUriFound", "assertFalse", "isRedirectUriFound", "assertTrue", "isRedirectUriFound", "assertTrue", "isRedirectUriFound", "assertTrue", "isRedirectUriFound"]}, "focal_class": {"identifier": "OAuthDialogFragment", "superclass": "extends DialogFragmentCompat", "interfaces": "", "fields": [{"original_string": "static final Logger LOGGER = Logger.getLogger(OAuthConstants.TAG);", "modifier": "static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(OAuthConstants.TAG)", "var_name": "LOGGER"}, {"original_string": "private static final String ARG_AUTHORIZATION_REQUEST_URL = \"authRequestUrl\";", "modifier": "private static final", "type": "String", "declarator": "ARG_AUTHORIZATION_REQUEST_URL = \"authRequestUrl\"", "var_name": "ARG_AUTHORIZATION_REQUEST_URL"}, {"original_string": "private static final String ARG_AUTHORIZATION_TYPE = \"authType\";", "modifier": "private static final", "type": "String", "declarator": "ARG_AUTHORIZATION_TYPE = \"authType\"", "var_name": "ARG_AUTHORIZATION_TYPE"}, {"original_string": "private static final String AUTHORIZATION_10A = \"10a\";", "modifier": "private static final", "type": "String", "declarator": "AUTHORIZATION_10A = \"10a\"", "var_name": "AUTHORIZATION_10A"}, {"original_string": "private static final String AUTHORIZATION_EXPLICIT = \"explicit\";", "modifier": "private static final", "type": "String", "declarator": "AUTHORIZATION_EXPLICIT = \"explicit\"", "var_name": "AUTHORIZATION_EXPLICIT"}, {"original_string": "private static final String AUTHORIZATION_IMPLICIT = \"implicit\";", "modifier": "private static final", "type": "String", "declarator": "AUTHORIZATION_IMPLICIT = \"implicit\"", "var_name": "AUTHORIZATION_IMPLICIT"}, {"original_string": "private AuthorizationDialogController mController;", "modifier": "private", "type": "AuthorizationDialogController", "declarator": "mController", "var_name": "mController"}, {"original_string": "private boolean mFullScreen;", "modifier": "private", "type": "boolean", "declarator": "mFullScreen", "var_name": "mFullScreen"}, {"original_string": "private boolean mHorizontalProgress;", "modifier": "private", "type": "boolean", "declarator": "mHorizontalProgress", "var_name": "mHorizontalProgress"}, {"original_string": "private boolean mHideFullScreenTitle;", "modifier": "private", "type": "boolean", "declarator": "mHideFullScreenTitle", "var_name": "mHideFullScreenTitle"}], "methods": [{"identifier": "OAuthDialogFragment", "parameters": "(android.app.DialogFragment fragment, boolean fullScreen,\n        boolean horizontalProgress, boolean hideFullScreenTitle)", "modifiers": "private", "return": "", "signature": " OAuthDialogFragment(android.app.DialogFragment fragment, boolean fullScreen,\n        boolean horizontalProgress, boolean hideFullScreenTitle)", "full_signature": "private  OAuthDialogFragment(android.app.DialogFragment fragment, boolean fullScreen,\n        boolean horizontalProgress, boolean hideFullScreenTitle)", "class_method_signature": "OAuthDialogFragment.OAuthDialogFragment(android.app.DialogFragment fragment, boolean fullScreen,\n        boolean horizontalProgress, boolean hideFullScreenTitle)", "testcase": false, "constructor": true}, {"identifier": "OAuthDialogFragment", "parameters": "(android.support.v4.app.DialogFragment fragment,\n        boolean fullScreen, boolean horizontalProgress, boolean hideFullScreenTitle)", "modifiers": "private", "return": "", "signature": " OAuthDialogFragment(android.support.v4.app.DialogFragment fragment,\n        boolean fullScreen, boolean horizontalProgress, boolean hideFullScreenTitle)", "full_signature": "private  OAuthDialogFragment(android.support.v4.app.DialogFragment fragment,\n        boolean fullScreen, boolean horizontalProgress, boolean hideFullScreenTitle)", "class_method_signature": "OAuthDialogFragment.OAuthDialogFragment(android.support.v4.app.DialogFragment fragment,\n        boolean fullScreen, boolean horizontalProgress, boolean hideFullScreenTitle)", "testcase": false, "constructor": true}, {"identifier": "setController", "parameters": "(AuthorizationDialogController controller)", "modifiers": "final", "return": "void", "signature": "void setController(AuthorizationDialogController controller)", "full_signature": "final void setController(AuthorizationDialogController controller)", "class_method_signature": "OAuthDialogFragment.setController(AuthorizationDialogController controller)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(\n            GenericUrl authorizationRequestUrl,\n            DialogFragmentController controller)", "modifiers": "@TargetApi(HONEYCOMB) public static final", "return": "OAuthDialogFragment", "signature": "OAuthDialogFragment newInstance(\n            GenericUrl authorizationRequestUrl,\n            DialogFragmentController controller)", "full_signature": "@TargetApi(HONEYCOMB) public static final OAuthDialogFragment newInstance(\n            GenericUrl authorizationRequestUrl,\n            DialogFragmentController controller)", "class_method_signature": "OAuthDialogFragment.newInstance(\n            GenericUrl authorizationRequestUrl,\n            DialogFragmentController controller)", "testcase": false, "constructor": false}, {"identifier": "onCreateDialog", "parameters": "(Bundle savedInstanceState)", "modifiers": "@Override", "return": "Dialog", "signature": "Dialog onCreateDialog(Bundle savedInstanceState)", "full_signature": "@Override Dialog onCreateDialog(Bundle savedInstanceState)", "class_method_signature": "OAuthDialogFragment.onCreateDialog(Bundle savedInstanceState)", "testcase": false, "constructor": false}, {"identifier": "onCreateView", "parameters": "(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)", "modifiers": "@Override", "return": "View", "signature": "View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)", "full_signature": "@Override View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)", "class_method_signature": "OAuthDialogFragment.onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)", "testcase": false, "constructor": false}, {"identifier": "isRedirectUriFound", "parameters": "(String uri, String redirectUri)", "modifiers": "static", "return": "boolean", "signature": "boolean isRedirectUriFound(String uri, String redirectUri)", "full_signature": "static boolean isRedirectUriFound(String uri, String redirectUri)", "class_method_signature": "OAuthDialogFragment.isRedirectUriFound(String uri, String redirectUri)", "testcase": false, "constructor": false}, {"identifier": "onViewCreated", "parameters": "(View view, Bundle savedInstanceState)", "modifiers": "@SuppressLint(\"SetJavaScriptEnabled\") @Override", "return": "void", "signature": "void onViewCreated(View view, Bundle savedInstanceState)", "full_signature": "@SuppressLint(\"SetJavaScriptEnabled\") @Override void onViewCreated(View view, Bundle savedInstanceState)", "class_method_signature": "OAuthDialogFragment.onViewCreated(View view, Bundle savedInstanceState)", "testcase": false, "constructor": false}, {"identifier": "onActivityCreated", "parameters": "(Bundle savedInstanceState)", "modifiers": "@Override", "return": "void", "signature": "void onActivityCreated(Bundle savedInstanceState)", "full_signature": "@Override void onActivityCreated(Bundle savedInstanceState)", "class_method_signature": "OAuthDialogFragment.onActivityCreated(Bundle savedInstanceState)", "testcase": false, "constructor": false}, {"identifier": "onDestroy", "parameters": "()", "modifiers": "@Override", "return": "void", "signature": "void onDestroy()", "full_signature": "@Override void onDestroy()", "class_method_signature": "OAuthDialogFragment.onDestroy()", "testcase": false, "constructor": false}, {"identifier": "onCancel", "parameters": "(DialogInterface dialog)", "modifiers": "@Override", "return": "void", "signature": "void onCancel(DialogInterface dialog)", "full_signature": "@Override void onCancel(DialogInterface dialog)", "class_method_signature": "OAuthDialogFragment.onCancel(DialogInterface dialog)", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(String errorMessage)", "modifiers": "private", "return": "void", "signature": "void onError(String errorMessage)", "full_signature": "private void onError(String errorMessage)", "class_method_signature": "OAuthDialogFragment.onError(String errorMessage)", "testcase": false, "constructor": false}, {"identifier": "setProgressShown", "parameters": "(String url, View view, int newProgress)", "modifiers": "private", "return": "void", "signature": "void setProgressShown(String url, View view, int newProgress)", "full_signature": "private void setProgressShown(String url, View view, int newProgress)", "class_method_signature": "OAuthDialogFragment.setProgressShown(String url, View view, int newProgress)", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/wuman/android/auth/OAuthDialogFragment.java"}, "focal_method": {"identifier": "isRedirectUriFound", "parameters": "(String uri, String redirectUri)", "modifiers": "static", "return": "boolean", "body": "static boolean isRedirectUriFound(String uri, String redirectUri) {\n        Uri u = null;\n        Uri r = null;\n        try {\n            u = Uri.parse(uri);\n            r = Uri.parse(redirectUri);\n        } catch (NullPointerException e) {\n            return false;\n        }\n        if (u == null || r == null) {\n            return false;\n        }\n        boolean rOpaque = r.isOpaque();\n        boolean uOpaque = u.isOpaque();\n        if (rOpaque != uOpaque) {\n            return false;\n        }\n        if (rOpaque) {\n            return TextUtils.equals(uri, redirectUri);\n        }\n        if (!TextUtils.equals(r.getScheme(), u.getScheme())) {\n            return false;\n        }\n        if (!TextUtils.equals(r.getAuthority(), u.getAuthority())) {\n            return false;\n        }\n        if (r.getPort() != u.getPort()) {\n            return false;\n        }\n        if (!TextUtils.isEmpty(r.getPath()) && !TextUtils.equals(r.getPath(), u.getPath())) {\n            return false;\n        }\n        Set<String> paramKeys = CompatUri.getQueryParameterNames(r);\n        for (String key : paramKeys) {\n            if (!TextUtils.equals(r.getQueryParameter(key), u.getQueryParameter(key))) {\n                return false;\n            }\n        }\n        String frag = r.getFragment();\n        if (!TextUtils.isEmpty(frag)\n                && !TextUtils.equals(frag, u.getFragment())) {\n            return false;\n        }\n        return true;\n    }", "signature": "boolean isRedirectUriFound(String uri, String redirectUri)", "full_signature": "static boolean isRedirectUriFound(String uri, String redirectUri)", "class_method_signature": "OAuthDialogFragment.isRedirectUriFound(String uri, String redirectUri)", "testcase": false, "constructor": false, "invocations": ["parse", "parse", "isOpaque", "isOpaque", "equals", "equals", "getScheme", "getScheme", "equals", "getAuthority", "getAuthority", "getPort", "getPort", "isEmpty", "getPath", "equals", "getPath", "getPath", "getQueryParameterNames", "equals", "getQueryParameter", "getQueryParameter", "getFragment", "isEmpty", "equals", "getFragment"]}, "repository": {"repo_id": 10984947, "url": "https://github.com/wuman/android-oauth-client", "language": "Java", "is_fork": false, "fork_count": 112, "stargazer_count": 422, "size": 515, "license": "licensed"}}