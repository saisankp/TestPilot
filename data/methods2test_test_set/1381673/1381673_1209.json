{"test_class": {"identifier": "KiePMMLTreeModelNodeASTFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SOURCE_GOLFING = \"TreeSample.pmml\";", "modifier": "private static final", "type": "String", "declarator": "SOURCE_GOLFING = \"TreeSample.pmml\"", "var_name": "SOURCE_GOLFING"}, {"original_string": "private static final String SOURCE_IRIS = \"irisTree.pmml\";", "modifier": "private static final", "type": "String", "declarator": "SOURCE_IRIS = \"irisTree.pmml\"", "var_name": "SOURCE_IRIS"}, {"original_string": "private PMML golfingPmml;", "modifier": "private", "type": "PMML", "declarator": "golfingPmml", "var_name": "golfingPmml"}, {"original_string": "private TreeModel golfingModel;", "modifier": "private", "type": "TreeModel", "declarator": "golfingModel", "var_name": "golfingModel"}, {"original_string": "private PMML irisPmml;", "modifier": "private", "type": "PMML", "declarator": "irisPmml", "var_name": "irisPmml"}, {"original_string": "private TreeModel irisModel;", "modifier": "private", "type": "TreeModel", "declarator": "irisModel", "var_name": "irisModel"}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-compiler/src/test/java/org/kie/pmml/models/drools/tree/compiler/factories/KiePMMLTreeModelNodeASTFactoryTest.java"}, "test_case": {"identifier": "isFinalLeaf", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isFinalLeaf() {\n        Node node = new LeafNode();\n        DATA_TYPE targetType = DATA_TYPE.STRING;\n        KiePMMLTreeModelNodeASTFactory.factory(new HashMap<>(), Collections.emptyList(), TreeModel.NoTrueChildStrategy.RETURN_NULL_PREDICTION, targetType).isFinalLeaf(node);\n        assertTrue(KiePMMLTreeModelNodeASTFactory.factory(new HashMap<>(), Collections.emptyList(), TreeModel.NoTrueChildStrategy.RETURN_NULL_PREDICTION, targetType).isFinalLeaf(node));\n        node = new ClassifierNode();\n        assertTrue(KiePMMLTreeModelNodeASTFactory.factory(new HashMap<>(), Collections.emptyList(), TreeModel.NoTrueChildStrategy.RETURN_NULL_PREDICTION, targetType).isFinalLeaf(node));\n        node.addNodes(new LeafNode());\n        assertFalse(KiePMMLTreeModelNodeASTFactory.factory(new HashMap<>(), Collections.emptyList(), TreeModel.NoTrueChildStrategy.RETURN_NULL_PREDICTION, targetType).isFinalLeaf(node));\n    }", "signature": "void isFinalLeaf()", "full_signature": "@Test public void isFinalLeaf()", "class_method_signature": "KiePMMLTreeModelNodeASTFactoryTest.isFinalLeaf()", "testcase": true, "constructor": false, "invocations": ["isFinalLeaf", "factory", "emptyList", "assertTrue", "isFinalLeaf", "factory", "emptyList", "assertTrue", "isFinalLeaf", "factory", "emptyList", "addNodes", "assertFalse", "isFinalLeaf", "factory", "emptyList"]}, "focal_class": {"identifier": "KiePMMLTreeModelNodeASTFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(KiePMMLTreeModelNodeASTFactory.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(KiePMMLTreeModelNodeASTFactory.class.getName())", "var_name": "logger"}, {"original_string": "private final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap;", "modifier": "private final", "type": "Map<String, KiePMMLOriginalTypeGeneratedType>", "declarator": "fieldTypeMap", "var_name": "fieldTypeMap"}, {"original_string": "private final List<KiePMMLOutputField> outputFields;", "modifier": "private final", "type": "List<KiePMMLOutputField>", "declarator": "outputFields", "var_name": "outputFields"}, {"original_string": "private final TreeModel.NoTrueChildStrategy noTrueChildStrategy;", "modifier": "private final", "type": "TreeModel.NoTrueChildStrategy", "declarator": "noTrueChildStrategy", "var_name": "noTrueChildStrategy"}, {"original_string": "private final DATA_TYPE targetType;", "modifier": "private final", "type": "DATA_TYPE", "declarator": "targetType", "var_name": "targetType"}], "methods": [{"identifier": "KiePMMLTreeModelNodeASTFactory", "parameters": "(final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final List<KiePMMLOutputField> outputFields, final TreeModel.NoTrueChildStrategy noTrueChildStrategy, final DATA_TYPE targetType)", "modifiers": "private", "return": "", "signature": " KiePMMLTreeModelNodeASTFactory(final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final List<KiePMMLOutputField> outputFields, final TreeModel.NoTrueChildStrategy noTrueChildStrategy, final DATA_TYPE targetType)", "full_signature": "private  KiePMMLTreeModelNodeASTFactory(final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final List<KiePMMLOutputField> outputFields, final TreeModel.NoTrueChildStrategy noTrueChildStrategy, final DATA_TYPE targetType)", "class_method_signature": "KiePMMLTreeModelNodeASTFactory.KiePMMLTreeModelNodeASTFactory(final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final List<KiePMMLOutputField> outputFields, final TreeModel.NoTrueChildStrategy noTrueChildStrategy, final DATA_TYPE targetType)", "testcase": false, "constructor": true}, {"identifier": "factory", "parameters": "(final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final List<KiePMMLOutputField> outputFields, final TreeModel.NoTrueChildStrategy noTrueChildStrategy, final DATA_TYPE targetType)", "modifiers": "public static", "return": "KiePMMLTreeModelNodeASTFactory", "signature": "KiePMMLTreeModelNodeASTFactory factory(final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final List<KiePMMLOutputField> outputFields, final TreeModel.NoTrueChildStrategy noTrueChildStrategy, final DATA_TYPE targetType)", "full_signature": "public static KiePMMLTreeModelNodeASTFactory factory(final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final List<KiePMMLOutputField> outputFields, final TreeModel.NoTrueChildStrategy noTrueChildStrategy, final DATA_TYPE targetType)", "class_method_signature": "KiePMMLTreeModelNodeASTFactory.factory(final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap, final List<KiePMMLOutputField> outputFields, final TreeModel.NoTrueChildStrategy noTrueChildStrategy, final DATA_TYPE targetType)", "testcase": false, "constructor": false}, {"identifier": "declareRulesFromRootNode", "parameters": "(final Node node, final String parentPath)", "modifiers": "public", "return": "List<KiePMMLDroolsRule>", "signature": "List<KiePMMLDroolsRule> declareRulesFromRootNode(final Node node, final String parentPath)", "full_signature": "public List<KiePMMLDroolsRule> declareRulesFromRootNode(final Node node, final String parentPath)", "class_method_signature": "KiePMMLTreeModelNodeASTFactory.declareRulesFromRootNode(final Node node, final String parentPath)", "testcase": false, "constructor": false}, {"identifier": "declareRuleFromNode", "parameters": "(final Node node, final String parentPath,\n                                       final List<KiePMMLDroolsRule> rules)", "modifiers": "protected", "return": "void", "signature": "void declareRuleFromNode(final Node node, final String parentPath,\n                                       final List<KiePMMLDroolsRule> rules)", "full_signature": "protected void declareRuleFromNode(final Node node, final String parentPath,\n                                       final List<KiePMMLDroolsRule> rules)", "class_method_signature": "KiePMMLTreeModelNodeASTFactory.declareRuleFromNode(final Node node, final String parentPath,\n                                       final List<KiePMMLDroolsRule> rules)", "testcase": false, "constructor": false}, {"identifier": "declareFinalRuleFromNode", "parameters": "(final Node node,\n                                            final String parentPath,\n                                            final List<KiePMMLDroolsRule> rules)", "modifiers": "protected", "return": "void", "signature": "void declareFinalRuleFromNode(final Node node,\n                                            final String parentPath,\n                                            final List<KiePMMLDroolsRule> rules)", "full_signature": "protected void declareFinalRuleFromNode(final Node node,\n                                            final String parentPath,\n                                            final List<KiePMMLDroolsRule> rules)", "class_method_signature": "KiePMMLTreeModelNodeASTFactory.declareFinalRuleFromNode(final Node node,\n                                            final String parentPath,\n                                            final List<KiePMMLDroolsRule> rules)", "testcase": false, "constructor": false}, {"identifier": "declareIntermediateRuleFromNode", "parameters": "(final Node node,\n                                                   final String parentPath,\n                                                   final List<KiePMMLDroolsRule> rules)", "modifiers": "protected", "return": "void", "signature": "void declareIntermediateRuleFromNode(final Node node,\n                                                   final String parentPath,\n                                                   final List<KiePMMLDroolsRule> rules)", "full_signature": "protected void declareIntermediateRuleFromNode(final Node node,\n                                                   final String parentPath,\n                                                   final List<KiePMMLDroolsRule> rules)", "class_method_signature": "KiePMMLTreeModelNodeASTFactory.declareIntermediateRuleFromNode(final Node node,\n                                                   final String parentPath,\n                                                   final List<KiePMMLDroolsRule> rules)", "testcase": false, "constructor": false}, {"identifier": "declareDefaultRuleFromNode", "parameters": "(final Node node,\n                                              final String parentPath,\n                                              final List<KiePMMLDroolsRule> rules)", "modifiers": "protected", "return": "void", "signature": "void declareDefaultRuleFromNode(final Node node,\n                                              final String parentPath,\n                                              final List<KiePMMLDroolsRule> rules)", "full_signature": "protected void declareDefaultRuleFromNode(final Node node,\n                                              final String parentPath,\n                                              final List<KiePMMLDroolsRule> rules)", "class_method_signature": "KiePMMLTreeModelNodeASTFactory.declareDefaultRuleFromNode(final Node node,\n                                              final String parentPath,\n                                              final List<KiePMMLDroolsRule> rules)", "testcase": false, "constructor": false}, {"identifier": "isFinalLeaf", "parameters": "(final Node node)", "modifiers": "protected", "return": "boolean", "signature": "boolean isFinalLeaf(final Node node)", "full_signature": "protected boolean isFinalLeaf(final Node node)", "class_method_signature": "KiePMMLTreeModelNodeASTFactory.isFinalLeaf(final Node node)", "testcase": false, "constructor": false}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-compiler/src/main/java/org/kie/pmml/models/drools/tree/compiler/factories/KiePMMLTreeModelNodeASTFactory.java"}, "focal_method": {"identifier": "isFinalLeaf", "parameters": "(final Node node)", "modifiers": "protected", "return": "boolean", "body": "protected boolean isFinalLeaf(final Node node) {\n        return node instanceof LeafNode || node.getNodes() == null || node.getNodes().isEmpty();\n    }", "signature": "boolean isFinalLeaf(final Node node)", "full_signature": "protected boolean isFinalLeaf(final Node node)", "class_method_signature": "KiePMMLTreeModelNodeASTFactory.isFinalLeaf(final Node node)", "testcase": false, "constructor": false, "invocations": ["getNodes", "isEmpty", "getNodes"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}