{"test_class": {"identifier": "ItemEventFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ItemEventFactory factory = new ItemEventFactory();", "modifier": "private final", "type": "ItemEventFactory", "declarator": "factory = new ItemEventFactory()", "var_name": "factory"}, {"original_string": "private static final String ITEM_NAME = \"ItemA\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_NAME = \"ItemA\"", "var_name": "ITEM_NAME"}, {"original_string": "private static final Item ITEM = new SwitchItem(ITEM_NAME);", "modifier": "private static final", "type": "Item", "declarator": "ITEM = new SwitchItem(ITEM_NAME)", "var_name": "ITEM"}, {"original_string": "private static final String GROUP_NAME = \"GroupA\";", "modifier": "private static final", "type": "String", "declarator": "GROUP_NAME = \"GroupA\"", "var_name": "GROUP_NAME"}, {"original_string": "private static final String SOURCE = \"binding:type:id:channel\";", "modifier": "private static final", "type": "String", "declarator": "SOURCE = \"binding:type:id:channel\"", "var_name": "SOURCE"}, {"original_string": "private static final String ITEM_COMMAND_EVENT_TYPE = ItemCommandEvent.TYPE;", "modifier": "private static final", "type": "String", "declarator": "ITEM_COMMAND_EVENT_TYPE = ItemCommandEvent.TYPE", "var_name": "ITEM_COMMAND_EVENT_TYPE"}, {"original_string": "private static final String ITEM_STATE_EVENT_TYPE = ItemStateEvent.TYPE;", "modifier": "private static final", "type": "String", "declarator": "ITEM_STATE_EVENT_TYPE = ItemStateEvent.TYPE", "var_name": "ITEM_STATE_EVENT_TYPE"}, {"original_string": "private static final String ITEM_STATE_PREDICTED_EVENT_TYPE = ItemStatePredictedEvent.TYPE;", "modifier": "private static final", "type": "String", "declarator": "ITEM_STATE_PREDICTED_EVENT_TYPE = ItemStatePredictedEvent.TYPE", "var_name": "ITEM_STATE_PREDICTED_EVENT_TYPE"}, {"original_string": "private static final String ITEM_ADDED_EVENT_TYPE = ItemAddedEvent.TYPE;", "modifier": "private static final", "type": "String", "declarator": "ITEM_ADDED_EVENT_TYPE = ItemAddedEvent.TYPE", "var_name": "ITEM_ADDED_EVENT_TYPE"}, {"original_string": "private static final String GROUPITEM_CHANGED_EVENT_TYPE = GroupItemStateChangedEvent.TYPE;", "modifier": "private static final", "type": "String", "declarator": "GROUPITEM_CHANGED_EVENT_TYPE = GroupItemStateChangedEvent.TYPE", "var_name": "GROUPITEM_CHANGED_EVENT_TYPE"}, {"original_string": "private static final String ITEM_COMMAND_EVENT_TOPIC = \"openhab/items/\" + ITEM_NAME + \"/command\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_COMMAND_EVENT_TOPIC = \"openhab/items/\" + ITEM_NAME + \"/command\"", "var_name": "ITEM_COMMAND_EVENT_TOPIC"}, {"original_string": "private static final String ITEM_STATE_EVENT_TOPIC = \"openhab/items/\" + ITEM_NAME + \"/state\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_STATE_EVENT_TOPIC = \"openhab/items/\" + ITEM_NAME + \"/state\"", "var_name": "ITEM_STATE_EVENT_TOPIC"}, {"original_string": "private static final String ITEM_STATE_PREDICTED_EVENT_TOPIC = \"openhab/items/\" + ITEM_NAME + \"/statepredicted\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_STATE_PREDICTED_EVENT_TOPIC = \"openhab/items/\" + ITEM_NAME + \"/statepredicted\"", "var_name": "ITEM_STATE_PREDICTED_EVENT_TOPIC"}, {"original_string": "private static final String ITEM_ADDED_EVENT_TOPIC = \"openhab/items/\" + ITEM_NAME + \"/added\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_ADDED_EVENT_TOPIC = \"openhab/items/\" + ITEM_NAME + \"/added\"", "var_name": "ITEM_ADDED_EVENT_TOPIC"}, {"original_string": "private static final String GROUPITEM_STATE_CHANGED_EVENT_TOPIC = \"openhab/items/\" + GROUP_NAME + \"/\" + ITEM_NAME\n            + \"/statechanged\";", "modifier": "private static final", "type": "String", "declarator": "GROUPITEM_STATE_CHANGED_EVENT_TOPIC = \"openhab/items/\" + GROUP_NAME + \"/\" + ITEM_NAME\n            + \"/statechanged\"", "var_name": "GROUPITEM_STATE_CHANGED_EVENT_TOPIC"}, {"original_string": "private static final Command ITEM_COMMAND = OnOffType.ON;", "modifier": "private static final", "type": "Command", "declarator": "ITEM_COMMAND = OnOffType.ON", "var_name": "ITEM_COMMAND"}, {"original_string": "private static final String ITEM_COMMAND_EVENT_PAYLOAD = \"{\\\"type\\\":\\\"OnOff\\\",\\\"value\\\":\\\"ON\\\"}\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_COMMAND_EVENT_PAYLOAD = \"{\\\"type\\\":\\\"OnOff\\\",\\\"value\\\":\\\"ON\\\"}\"", "var_name": "ITEM_COMMAND_EVENT_PAYLOAD"}, {"original_string": "private static final String ITEM_REFRESH_COMMAND_EVENT_PAYLOAD = \"{\\\"type\\\":\\\"Refresh\\\", \\\"value\\\": \\\"REFRESH\\\"}\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_REFRESH_COMMAND_EVENT_PAYLOAD = \"{\\\"type\\\":\\\"Refresh\\\", \\\"value\\\": \\\"REFRESH\\\"}\"", "var_name": "ITEM_REFRESH_COMMAND_EVENT_PAYLOAD"}, {"original_string": "private static final String ITEM_UNDEF_STATE_EVENT_PAYLOAD = \"{\\\"type\\\":\\\"UnDef\\\", \\\"value\\\": \\\"UNDEF\\\"}\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_UNDEF_STATE_EVENT_PAYLOAD = \"{\\\"type\\\":\\\"UnDef\\\", \\\"value\\\": \\\"UNDEF\\\"}\"", "var_name": "ITEM_UNDEF_STATE_EVENT_PAYLOAD"}, {"original_string": "private static final State ITEM_STATE = OnOffType.OFF;", "modifier": "private static final", "type": "State", "declarator": "ITEM_STATE = OnOffType.OFF", "var_name": "ITEM_STATE"}, {"original_string": "private static final State NEW_ITEM_STATE = OnOffType.ON;", "modifier": "private static final", "type": "State", "declarator": "NEW_ITEM_STATE = OnOffType.ON", "var_name": "NEW_ITEM_STATE"}, {"original_string": "private static final String ITEM_STATE_EVENT_PAYLOAD = \"{\\\"type\\\":\\\"OnOff\\\",\\\"value\\\":\\\"OFF\\\"}\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_STATE_EVENT_PAYLOAD = \"{\\\"type\\\":\\\"OnOff\\\",\\\"value\\\":\\\"OFF\\\"}\"", "var_name": "ITEM_STATE_EVENT_PAYLOAD"}, {"original_string": "private static final String ITEM_STATE_PREDICTED_EVENT_PAYLOAD = \"{\\\"predictedType\\\":\\\"OnOff\\\",\\\"predictedValue\\\":\\\"OFF\\\",\\\"isConfirmation\\\":\\\"false\\\"}\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_STATE_PREDICTED_EVENT_PAYLOAD = \"{\\\"predictedType\\\":\\\"OnOff\\\",\\\"predictedValue\\\":\\\"OFF\\\",\\\"isConfirmation\\\":\\\"false\\\"}\"", "var_name": "ITEM_STATE_PREDICTED_EVENT_PAYLOAD"}, {"original_string": "private static final String ITEM_ADDED_EVENT_PAYLOAD = new Gson().toJson(ItemDTOMapper.map(ITEM));", "modifier": "private static final", "type": "String", "declarator": "ITEM_ADDED_EVENT_PAYLOAD = new Gson().toJson(ItemDTOMapper.map(ITEM))", "var_name": "ITEM_ADDED_EVENT_PAYLOAD"}, {"original_string": "private static final String ITEM_STATE_CHANGED_EVENT_PAYLOAD = \"{\\\"type\\\":\\\"OnOff\\\", \\\"value\\\": \\\"ON\\\", \\\"oldType\\\":\\\"OnOff\\\", \\\"oldValue\\\": \\\"OFF\\\"}\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_STATE_CHANGED_EVENT_PAYLOAD = \"{\\\"type\\\":\\\"OnOff\\\", \\\"value\\\": \\\"ON\\\", \\\"oldType\\\":\\\"OnOff\\\", \\\"oldValue\\\": \\\"OFF\\\"}\"", "var_name": "ITEM_STATE_CHANGED_EVENT_PAYLOAD"}, {"original_string": "private static final State RAW_ITEM_STATE = new RawType(new byte[] { 1, 2, 3, 4, 5 }, RawType.DEFAULT_MIME_TYPE);", "modifier": "private static final", "type": "State", "declarator": "RAW_ITEM_STATE = new RawType(new byte[] { 1, 2, 3, 4, 5 }, RawType.DEFAULT_MIME_TYPE)", "var_name": "RAW_ITEM_STATE"}, {"original_string": "private static final State NEW_RAW_ITEM_STATE = new RawType(new byte[] { 5, 4, 3, 2, 1 },\n            RawType.DEFAULT_MIME_TYPE);", "modifier": "private static final", "type": "State", "declarator": "NEW_RAW_ITEM_STATE = new RawType(new byte[] { 5, 4, 3, 2, 1 },\n            RawType.DEFAULT_MIME_TYPE)", "var_name": "NEW_RAW_ITEM_STATE"}], "file": "bundles/org.openhab.core/src/test/java/org/openhab/core/items/events/ItemEventFactoryTest.java"}, "test_case": {"identifier": "testCreateEventItemStatePredictedEventOnOffType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateEventItemStatePredictedEventOnOffType() throws Exception {\n        Event event = factory.createEvent(ITEM_STATE_PREDICTED_EVENT_TYPE, ITEM_STATE_PREDICTED_EVENT_TOPIC,\n                ITEM_STATE_PREDICTED_EVENT_PAYLOAD, SOURCE);\n\n        assertEquals(ItemStatePredictedEvent.class, event.getClass());\n        ItemStatePredictedEvent itemStatePredictedEvent = (ItemStatePredictedEvent) event;\n        assertEquals(ITEM_STATE_PREDICTED_EVENT_TYPE, itemStatePredictedEvent.getType());\n        assertEquals(ITEM_STATE_PREDICTED_EVENT_TOPIC, itemStatePredictedEvent.getTopic());\n        assertEquals(ITEM_STATE_PREDICTED_EVENT_PAYLOAD, itemStatePredictedEvent.getPayload());\n        assertEquals(ITEM_NAME, itemStatePredictedEvent.getItemName());\n        assertEquals(OnOffType.class, itemStatePredictedEvent.getPredictedState().getClass());\n        assertEquals(ITEM_STATE, itemStatePredictedEvent.getPredictedState());\n    }", "signature": "void testCreateEventItemStatePredictedEventOnOffType()", "full_signature": "@Test public void testCreateEventItemStatePredictedEventOnOffType()", "class_method_signature": "ItemEventFactoryTest.testCreateEventItemStatePredictedEventOnOffType()", "testcase": true, "constructor": false, "invocations": ["createEvent", "assertEquals", "getClass", "assertEquals", "getType", "assertEquals", "getTopic", "assertEquals", "getPayload", "assertEquals", "getItemName", "assertEquals", "getClass", "getPredictedState", "assertEquals", "getPredictedState"]}, "focal_class": {"identifier": "ItemEventFactory", "superclass": "extends AbstractEventFactory", "interfaces": "", "fields": [{"original_string": "private static final String TYPE_POSTFIX = \"Type\";", "modifier": "private static final", "type": "String", "declarator": "TYPE_POSTFIX = \"Type\"", "var_name": "TYPE_POSTFIX"}, {"original_string": "private static final String CORE_LIBRARY_PACKAGE = \"org.openhab.core.library.types.\";", "modifier": "private static final", "type": "String", "declarator": "CORE_LIBRARY_PACKAGE = \"org.openhab.core.library.types.\"", "var_name": "CORE_LIBRARY_PACKAGE"}, {"original_string": "private static final String ITEM_COMAND_EVENT_TOPIC = \"openhab/items/{itemName}/command\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_COMAND_EVENT_TOPIC = \"openhab/items/{itemName}/command\"", "var_name": "ITEM_COMAND_EVENT_TOPIC"}, {"original_string": "private static final String ITEM_STATE_EVENT_TOPIC = \"openhab/items/{itemName}/state\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_STATE_EVENT_TOPIC = \"openhab/items/{itemName}/state\"", "var_name": "ITEM_STATE_EVENT_TOPIC"}, {"original_string": "private static final String ITEM_STATE_PREDICTED_EVENT_TOPIC = \"openhab/items/{itemName}/statepredicted\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_STATE_PREDICTED_EVENT_TOPIC = \"openhab/items/{itemName}/statepredicted\"", "var_name": "ITEM_STATE_PREDICTED_EVENT_TOPIC"}, {"original_string": "private static final String ITEM_STATE_CHANGED_EVENT_TOPIC = \"openhab/items/{itemName}/statechanged\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_STATE_CHANGED_EVENT_TOPIC = \"openhab/items/{itemName}/statechanged\"", "var_name": "ITEM_STATE_CHANGED_EVENT_TOPIC"}, {"original_string": "private static final String GROUPITEM_STATE_CHANGED_EVENT_TOPIC = \"openhab/items/{itemName}/{memberName}/statechanged\";", "modifier": "private static final", "type": "String", "declarator": "GROUPITEM_STATE_CHANGED_EVENT_TOPIC = \"openhab/items/{itemName}/{memberName}/statechanged\"", "var_name": "GROUPITEM_STATE_CHANGED_EVENT_TOPIC"}, {"original_string": "private static final String ITEM_ADDED_EVENT_TOPIC = \"openhab/items/{itemName}/added\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_ADDED_EVENT_TOPIC = \"openhab/items/{itemName}/added\"", "var_name": "ITEM_ADDED_EVENT_TOPIC"}, {"original_string": "private static final String ITEM_REMOVED_EVENT_TOPIC = \"openhab/items/{itemName}/removed\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_REMOVED_EVENT_TOPIC = \"openhab/items/{itemName}/removed\"", "var_name": "ITEM_REMOVED_EVENT_TOPIC"}, {"original_string": "private static final String ITEM_UPDATED_EVENT_TOPIC = \"openhab/items/{itemName}/updated\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_UPDATED_EVENT_TOPIC = \"openhab/items/{itemName}/updated\"", "var_name": "ITEM_UPDATED_EVENT_TOPIC"}], "methods": [{"identifier": "ItemEventFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " ItemEventFactory()", "full_signature": "public  ItemEventFactory()", "class_method_signature": "ItemEventFactory.ItemEventFactory()", "testcase": false, "constructor": true}, {"identifier": "createEventByType", "parameters": "(String eventType, String topic, String payload, String source)", "modifiers": "@Override protected", "return": "Event", "signature": "Event createEventByType(String eventType, String topic, String payload, String source)", "full_signature": "@Override protected Event createEventByType(String eventType, String topic, String payload, String source)", "class_method_signature": "ItemEventFactory.createEventByType(String eventType, String topic, String payload, String source)", "testcase": false, "constructor": false}, {"identifier": "createGroupStateChangedEvent", "parameters": "(String topic, String payload)", "modifiers": "private", "return": "Event", "signature": "Event createGroupStateChangedEvent(String topic, String payload)", "full_signature": "private Event createGroupStateChangedEvent(String topic, String payload)", "class_method_signature": "ItemEventFactory.createGroupStateChangedEvent(String topic, String payload)", "testcase": false, "constructor": false}, {"identifier": "createCommandEvent", "parameters": "(String topic, String payload, String source)", "modifiers": "private", "return": "Event", "signature": "Event createCommandEvent(String topic, String payload, String source)", "full_signature": "private Event createCommandEvent(String topic, String payload, String source)", "class_method_signature": "ItemEventFactory.createCommandEvent(String topic, String payload, String source)", "testcase": false, "constructor": false}, {"identifier": "createStateEvent", "parameters": "(String topic, String payload, String source)", "modifiers": "private", "return": "Event", "signature": "Event createStateEvent(String topic, String payload, String source)", "full_signature": "private Event createStateEvent(String topic, String payload, String source)", "class_method_signature": "ItemEventFactory.createStateEvent(String topic, String payload, String source)", "testcase": false, "constructor": false}, {"identifier": "createStatePredictedEvent", "parameters": "(String topic, String payload, String source)", "modifiers": "private", "return": "Event", "signature": "Event createStatePredictedEvent(String topic, String payload, String source)", "full_signature": "private Event createStatePredictedEvent(String topic, String payload, String source)", "class_method_signature": "ItemEventFactory.createStatePredictedEvent(String topic, String payload, String source)", "testcase": false, "constructor": false}, {"identifier": "createStateChangedEvent", "parameters": "(String topic, String payload)", "modifiers": "private", "return": "Event", "signature": "Event createStateChangedEvent(String topic, String payload)", "full_signature": "private Event createStateChangedEvent(String topic, String payload)", "class_method_signature": "ItemEventFactory.createStateChangedEvent(String topic, String payload)", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "(String type, String value)", "modifiers": "private", "return": "State", "signature": "State getState(String type, String value)", "full_signature": "private State getState(String type, String value)", "class_method_signature": "ItemEventFactory.getState(String type, String value)", "testcase": false, "constructor": false}, {"identifier": "getItemName", "parameters": "(String topic)", "modifiers": "private", "return": "String", "signature": "String getItemName(String topic)", "full_signature": "private String getItemName(String topic)", "class_method_signature": "ItemEventFactory.getItemName(String topic)", "testcase": false, "constructor": false}, {"identifier": "getMemberName", "parameters": "(String topic)", "modifiers": "private", "return": "String", "signature": "String getMemberName(String topic)", "full_signature": "private String getMemberName(String topic)", "class_method_signature": "ItemEventFactory.getMemberName(String topic)", "testcase": false, "constructor": false}, {"identifier": "parseType", "parameters": "(String typeName, String valueToParse, Class<T> desiredClass)", "modifiers": "private", "return": "T", "signature": "T parseType(String typeName, String valueToParse, Class<T> desiredClass)", "full_signature": "private T parseType(String typeName, String valueToParse, Class<T> desiredClass)", "class_method_signature": "ItemEventFactory.parseType(String typeName, String valueToParse, Class<T> desiredClass)", "testcase": false, "constructor": false}, {"identifier": "parseSimpleClassName", "parameters": "(String simpleClassName, String valueToParse)", "modifiers": "private", "return": "Object", "signature": "Object parseSimpleClassName(String simpleClassName, String valueToParse)", "full_signature": "private Object parseSimpleClassName(String simpleClassName, String valueToParse)", "class_method_signature": "ItemEventFactory.parseSimpleClassName(String simpleClassName, String valueToParse)", "testcase": false, "constructor": false}, {"identifier": "createAddedEvent", "parameters": "(String topic, String payload)", "modifiers": "private", "return": "Event", "signature": "Event createAddedEvent(String topic, String payload)", "full_signature": "private Event createAddedEvent(String topic, String payload)", "class_method_signature": "ItemEventFactory.createAddedEvent(String topic, String payload)", "testcase": false, "constructor": false}, {"identifier": "createRemovedEvent", "parameters": "(String topic, String payload)", "modifiers": "private", "return": "Event", "signature": "Event createRemovedEvent(String topic, String payload)", "full_signature": "private Event createRemovedEvent(String topic, String payload)", "class_method_signature": "ItemEventFactory.createRemovedEvent(String topic, String payload)", "testcase": false, "constructor": false}, {"identifier": "createUpdatedEvent", "parameters": "(String topic, String payload)", "modifiers": "private", "return": "Event", "signature": "Event createUpdatedEvent(String topic, String payload)", "full_signature": "private Event createUpdatedEvent(String topic, String payload)", "class_method_signature": "ItemEventFactory.createUpdatedEvent(String topic, String payload)", "testcase": false, "constructor": false}, {"identifier": "createCommandEvent", "parameters": "(String itemName, Command command, String source)", "modifiers": "public static", "return": "ItemCommandEvent", "signature": "ItemCommandEvent createCommandEvent(String itemName, Command command, String source)", "full_signature": "public static ItemCommandEvent createCommandEvent(String itemName, Command command, String source)", "class_method_signature": "ItemEventFactory.createCommandEvent(String itemName, Command command, String source)", "testcase": false, "constructor": false}, {"identifier": "createCommandEvent", "parameters": "(String itemName, Command command)", "modifiers": "public static", "return": "ItemCommandEvent", "signature": "ItemCommandEvent createCommandEvent(String itemName, Command command)", "full_signature": "public static ItemCommandEvent createCommandEvent(String itemName, Command command)", "class_method_signature": "ItemEventFactory.createCommandEvent(String itemName, Command command)", "testcase": false, "constructor": false}, {"identifier": "createStateEvent", "parameters": "(String itemName, State state, String source)", "modifiers": "public static", "return": "ItemStateEvent", "signature": "ItemStateEvent createStateEvent(String itemName, State state, String source)", "full_signature": "public static ItemStateEvent createStateEvent(String itemName, State state, String source)", "class_method_signature": "ItemEventFactory.createStateEvent(String itemName, State state, String source)", "testcase": false, "constructor": false}, {"identifier": "createStateEvent", "parameters": "(String itemName, State state)", "modifiers": "public static", "return": "ItemStateEvent", "signature": "ItemStateEvent createStateEvent(String itemName, State state)", "full_signature": "public static ItemStateEvent createStateEvent(String itemName, State state)", "class_method_signature": "ItemEventFactory.createStateEvent(String itemName, State state)", "testcase": false, "constructor": false}, {"identifier": "createStatePredictedEvent", "parameters": "(String itemName, State state,\n            boolean isConfirmation)", "modifiers": "public static", "return": "ItemStatePredictedEvent", "signature": "ItemStatePredictedEvent createStatePredictedEvent(String itemName, State state,\n            boolean isConfirmation)", "full_signature": "public static ItemStatePredictedEvent createStatePredictedEvent(String itemName, State state,\n            boolean isConfirmation)", "class_method_signature": "ItemEventFactory.createStatePredictedEvent(String itemName, State state,\n            boolean isConfirmation)", "testcase": false, "constructor": false}, {"identifier": "createStateChangedEvent", "parameters": "(String itemName, State newState, State oldState)", "modifiers": "public static", "return": "ItemStateChangedEvent", "signature": "ItemStateChangedEvent createStateChangedEvent(String itemName, State newState, State oldState)", "full_signature": "public static ItemStateChangedEvent createStateChangedEvent(String itemName, State newState, State oldState)", "class_method_signature": "ItemEventFactory.createStateChangedEvent(String itemName, State newState, State oldState)", "testcase": false, "constructor": false}, {"identifier": "createGroupStateChangedEvent", "parameters": "(String itemName, String memberName,\n            State newState, State oldState)", "modifiers": "public static", "return": "GroupItemStateChangedEvent", "signature": "GroupItemStateChangedEvent createGroupStateChangedEvent(String itemName, String memberName,\n            State newState, State oldState)", "full_signature": "public static GroupItemStateChangedEvent createGroupStateChangedEvent(String itemName, String memberName,\n            State newState, State oldState)", "class_method_signature": "ItemEventFactory.createGroupStateChangedEvent(String itemName, String memberName,\n            State newState, State oldState)", "testcase": false, "constructor": false}, {"identifier": "createAddedEvent", "parameters": "(Item item)", "modifiers": "public static", "return": "ItemAddedEvent", "signature": "ItemAddedEvent createAddedEvent(Item item)", "full_signature": "public static ItemAddedEvent createAddedEvent(Item item)", "class_method_signature": "ItemEventFactory.createAddedEvent(Item item)", "testcase": false, "constructor": false}, {"identifier": "createRemovedEvent", "parameters": "(Item item)", "modifiers": "public static", "return": "ItemRemovedEvent", "signature": "ItemRemovedEvent createRemovedEvent(Item item)", "full_signature": "public static ItemRemovedEvent createRemovedEvent(Item item)", "class_method_signature": "ItemEventFactory.createRemovedEvent(Item item)", "testcase": false, "constructor": false}, {"identifier": "createUpdateEvent", "parameters": "(Item item, Item oldItem)", "modifiers": "public static", "return": "ItemUpdatedEvent", "signature": "ItemUpdatedEvent createUpdateEvent(Item item, Item oldItem)", "full_signature": "public static ItemUpdatedEvent createUpdateEvent(Item item, Item oldItem)", "class_method_signature": "ItemEventFactory.createUpdateEvent(Item item, Item oldItem)", "testcase": false, "constructor": false}, {"identifier": "buildTopic", "parameters": "(String topic, String itemName)", "modifiers": "private static", "return": "String", "signature": "String buildTopic(String topic, String itemName)", "full_signature": "private static String buildTopic(String topic, String itemName)", "class_method_signature": "ItemEventFactory.buildTopic(String topic, String itemName)", "testcase": false, "constructor": false}, {"identifier": "buildGroupTopic", "parameters": "(String topic, String itemName, String memberName)", "modifiers": "private static", "return": "String", "signature": "String buildGroupTopic(String topic, String itemName, String memberName)", "full_signature": "private static String buildGroupTopic(String topic, String itemName, String memberName)", "class_method_signature": "ItemEventFactory.buildGroupTopic(String topic, String itemName, String memberName)", "testcase": false, "constructor": false}, {"identifier": "map", "parameters": "(Item item)", "modifiers": "private static", "return": "ItemDTO", "signature": "ItemDTO map(Item item)", "full_signature": "private static ItemDTO map(Item item)", "class_method_signature": "ItemEventFactory.map(Item item)", "testcase": false, "constructor": false}, {"identifier": "getStateType", "parameters": "(State state)", "modifiers": "private static", "return": "String", "signature": "String getStateType(State state)", "full_signature": "private static String getStateType(State state)", "class_method_signature": "ItemEventFactory.getStateType(State state)", "testcase": false, "constructor": false}, {"identifier": "getCommandType", "parameters": "(Command command)", "modifiers": "private static", "return": "String", "signature": "String getCommandType(Command command)", "full_signature": "private static String getCommandType(Command command)", "class_method_signature": "ItemEventFactory.getCommandType(Command command)", "testcase": false, "constructor": false}, {"identifier": "assertValidArguments", "parameters": "(String itemName, Type type, String typeArgumentName)", "modifiers": "private static", "return": "void", "signature": "void assertValidArguments(String itemName, Type type, String typeArgumentName)", "full_signature": "private static void assertValidArguments(String itemName, Type type, String typeArgumentName)", "class_method_signature": "ItemEventFactory.assertValidArguments(String itemName, Type type, String typeArgumentName)", "testcase": false, "constructor": false}, {"identifier": "assertValidArguments", "parameters": "(String itemName, String memberName, Type type, String typeArgumentName)", "modifiers": "private static", "return": "void", "signature": "void assertValidArguments(String itemName, String memberName, Type type, String typeArgumentName)", "full_signature": "private static void assertValidArguments(String itemName, String memberName, Type type, String typeArgumentName)", "class_method_signature": "ItemEventFactory.assertValidArguments(String itemName, String memberName, Type type, String typeArgumentName)", "testcase": false, "constructor": false}, {"identifier": "assertValidArgument", "parameters": "(Item item, String argumentName)", "modifiers": "private static", "return": "void", "signature": "void assertValidArgument(Item item, String argumentName)", "full_signature": "private static void assertValidArgument(Item item, String argumentName)", "class_method_signature": "ItemEventFactory.assertValidArgument(Item item, String argumentName)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core/src/main/java/org/openhab/core/items/events/ItemEventFactory.java"}, "focal_method": {"identifier": "getItemName", "parameters": "(String topic)", "modifiers": "private", "return": "String", "body": "private String getItemName(String topic) {\n        String[] topicElements = getTopicElements(topic);\n        if (topicElements.length < 4) {\n            throw new IllegalArgumentException(\"Event creation failed, invalid topic: \" + topic);\n        }\n        return topicElements[2];\n    }", "signature": "String getItemName(String topic)", "full_signature": "private String getItemName(String topic)", "class_method_signature": "ItemEventFactory.getItemName(String topic)", "testcase": false, "constructor": false, "invocations": ["getTopicElements"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}