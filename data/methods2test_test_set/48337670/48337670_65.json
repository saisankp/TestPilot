{"test_class": {"identifier": "ItemUIRegistryImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final char SEP = (new DecimalFormatSymbols().getDecimalSeparator());", "modifier": "private static final", "type": "char", "declarator": "SEP = (new DecimalFormatSymbols().getDecimalSeparator())", "var_name": "SEP"}, {"original_string": "private static final String ITEM_NAME = \"Item\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_NAME = \"Item\"", "var_name": "ITEM_NAME"}, {"original_string": "private ItemUIRegistryImpl uiRegistry;", "modifier": "private", "type": "ItemUIRegistryImpl", "declarator": "uiRegistry", "var_name": "uiRegistry"}, {"original_string": "private @Mock ItemRegistry registry;", "modifier": "private @Mock", "type": "ItemRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private @Mock Widget widget;", "modifier": "private @Mock", "type": "Widget", "declarator": "widget", "var_name": "widget"}, {"original_string": "private @Mock Item item;", "modifier": "private @Mock", "type": "Item", "declarator": "item", "var_name": "item"}, {"original_string": "private @Mock UnitProvider unitProvider;", "modifier": "private @Mock", "type": "UnitProvider", "declarator": "unitProvider", "var_name": "unitProvider"}], "file": "bundles/org.openhab.core.ui/src/test/java/org/openhab/core/ui/internal/items/ItemUIRegistryImplTest.java"}, "test_case": {"identifier": "getLabelLabelWithStaticValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getLabelLabelWithStaticValue() {\n        String testLabel = \"Label [value]\";\n\n        when(widget.getLabel()).thenReturn(testLabel);\n        String label = uiRegistry.getLabel(widget);\n        assertEquals(\"Label [value]\", label);\n    }", "signature": "void getLabelLabelWithStaticValue()", "full_signature": "@Test public void getLabelLabelWithStaticValue()", "class_method_signature": "ItemUIRegistryImplTest.getLabelLabelWithStaticValue()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getLabel", "getLabel", "assertEquals"]}, "focal_class": {"identifier": "ItemUIRegistryImpl", "superclass": "", "interfaces": "implements ItemUIRegistry", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(ItemUIRegistryImpl.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ItemUIRegistryImpl.class)", "var_name": "logger"}, {"original_string": "protected static final String IMAGE_LOCATION = \"./webapps/images/\";", "modifier": "protected static final", "type": "String", "declarator": "IMAGE_LOCATION = \"./webapps/images/\"", "var_name": "IMAGE_LOCATION"}, {"original_string": "protected static final Pattern EXTRACT_TRANSFORMFUNCTION_PATTERN = Pattern.compile(\"(.*?)\\\\((.*)\\\\):(.*)\");", "modifier": "protected static final", "type": "Pattern", "declarator": "EXTRACT_TRANSFORMFUNCTION_PATTERN = Pattern.compile(\"(.*?)\\\\((.*)\\\\):(.*)\")", "var_name": "EXTRACT_TRANSFORMFUNCTION_PATTERN"}, {"original_string": "protected static final String IDENTIFY_FORMAT_PATTERN_PATTERN = \"%((unit%)|((\\\\d+\\\\$)?([-#+ 0,(\\\\<]*)?(\\\\d+)?(\\\\.\\\\d+)?([tT])?([a-zA-Z])))\";", "modifier": "protected static final", "type": "String", "declarator": "IDENTIFY_FORMAT_PATTERN_PATTERN = \"%((unit%)|((\\\\d+\\\\$)?([-#+ 0,(\\\\<]*)?(\\\\d+)?(\\\\.\\\\d+)?([tT])?([a-zA-Z])))\"", "var_name": "IDENTIFY_FORMAT_PATTERN_PATTERN"}, {"original_string": "private static final Pattern LABEL_PATTERN = Pattern.compile(\".*?\\\\[.*? (.*?)\\\\]\");", "modifier": "private static final", "type": "Pattern", "declarator": "LABEL_PATTERN = Pattern.compile(\".*?\\\\[.*? (.*?)\\\\]\")", "var_name": "LABEL_PATTERN"}, {"original_string": "private static final int MAX_BUTTONS = 4;", "modifier": "private static final", "type": "int", "declarator": "MAX_BUTTONS = 4", "var_name": "MAX_BUTTONS"}, {"original_string": "protected final Set<ItemUIProvider> itemUIProviders = new HashSet<>();", "modifier": "protected final", "type": "Set<ItemUIProvider>", "declarator": "itemUIProviders = new HashSet<>()", "var_name": "itemUIProviders"}, {"original_string": "private final ItemRegistry itemRegistry;", "modifier": "private final", "type": "ItemRegistry", "declarator": "itemRegistry", "var_name": "itemRegistry"}, {"original_string": "private final Map<Widget, Widget> defaultWidgets = Collections.synchronizedMap(new WeakHashMap<>());", "modifier": "private final", "type": "Map<Widget, Widget>", "declarator": "defaultWidgets = Collections.synchronizedMap(new WeakHashMap<>())", "var_name": "defaultWidgets"}], "methods": [{"identifier": "ItemUIRegistryImpl", "parameters": "(@Reference ItemRegistry itemRegistry)", "modifiers": "@Activate public", "return": "", "signature": " ItemUIRegistryImpl(@Reference ItemRegistry itemRegistry)", "full_signature": "@Activate public  ItemUIRegistryImpl(@Reference ItemRegistry itemRegistry)", "class_method_signature": "ItemUIRegistryImpl.ItemUIRegistryImpl(@Reference ItemRegistry itemRegistry)", "testcase": false, "constructor": true}, {"identifier": "addItemUIProvider", "parameters": "(ItemUIProvider itemUIProvider)", "modifiers": "@Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC) public", "return": "void", "signature": "void addItemUIProvider(ItemUIProvider itemUIProvider)", "full_signature": "@Reference(cardinality = ReferenceCardinality.MULTIPLE, policy = ReferencePolicy.DYNAMIC) public void addItemUIProvider(ItemUIProvider itemUIProvider)", "class_method_signature": "ItemUIRegistryImpl.addItemUIProvider(ItemUIProvider itemUIProvider)", "testcase": false, "constructor": false}, {"identifier": "removeItemUIProvider", "parameters": "(ItemUIProvider itemUIProvider)", "modifiers": "public", "return": "void", "signature": "void removeItemUIProvider(ItemUIProvider itemUIProvider)", "full_signature": "public void removeItemUIProvider(ItemUIProvider itemUIProvider)", "class_method_signature": "ItemUIRegistryImpl.removeItemUIProvider(ItemUIProvider itemUIProvider)", "testcase": false, "constructor": false}, {"identifier": "getCategory", "parameters": "(String itemName)", "modifiers": "@Override public @Nullable", "return": "String", "signature": "String getCategory(String itemName)", "full_signature": "@Override public @Nullable String getCategory(String itemName)", "class_method_signature": "ItemUIRegistryImpl.getCategory(String itemName)", "testcase": false, "constructor": false}, {"identifier": "getLabel", "parameters": "(String itemName)", "modifiers": "@Override public @Nullable", "return": "String", "signature": "String getLabel(String itemName)", "full_signature": "@Override public @Nullable String getLabel(String itemName)", "class_method_signature": "ItemUIRegistryImpl.getLabel(String itemName)", "testcase": false, "constructor": false}, {"identifier": "getWidget", "parameters": "(String itemName)", "modifiers": "@Override public @Nullable", "return": "Widget", "signature": "Widget getWidget(String itemName)", "full_signature": "@Override public @Nullable Widget getWidget(String itemName)", "class_method_signature": "ItemUIRegistryImpl.getWidget(String itemName)", "testcase": false, "constructor": false}, {"identifier": "getDefaultWidget", "parameters": "(@Nullable Class<? extends Item> targetItemType, String itemName)", "modifiers": "@Override public @Nullable", "return": "Widget", "signature": "Widget getDefaultWidget(@Nullable Class<? extends Item> targetItemType, String itemName)", "full_signature": "@Override public @Nullable Widget getDefaultWidget(@Nullable Class<? extends Item> targetItemType, String itemName)", "class_method_signature": "ItemUIRegistryImpl.getDefaultWidget(@Nullable Class<? extends Item> targetItemType, String itemName)", "testcase": false, "constructor": false}, {"identifier": "createPlayerButtons", "parameters": "()", "modifiers": "private", "return": "Switch", "signature": "Switch createPlayerButtons()", "full_signature": "private Switch createPlayerButtons()", "class_method_signature": "ItemUIRegistryImpl.createPlayerButtons()", "testcase": false, "constructor": false}, {"identifier": "getLabel", "parameters": "(Widget w)", "modifiers": "@Override public @Nullable", "return": "String", "signature": "String getLabel(Widget w)", "full_signature": "@Override public @Nullable String getLabel(Widget w)", "class_method_signature": "ItemUIRegistryImpl.getLabel(Widget w)", "testcase": false, "constructor": false}, {"identifier": "convertStateToWidgetUnit", "parameters": "(QuantityType<?> quantityState, Widget w)", "modifiers": "private @Nullable", "return": "QuantityType<?>", "signature": "QuantityType<?> convertStateToWidgetUnit(QuantityType<?> quantityState, Widget w)", "full_signature": "private @Nullable QuantityType<?> convertStateToWidgetUnit(QuantityType<?> quantityState, Widget w)", "class_method_signature": "ItemUIRegistryImpl.convertStateToWidgetUnit(QuantityType<?> quantityState, Widget w)", "testcase": false, "constructor": false}, {"identifier": "getFormatPattern", "parameters": "(@Nullable String label)", "modifiers": "private @Nullable", "return": "String", "signature": "String getFormatPattern(@Nullable String label)", "full_signature": "private @Nullable String getFormatPattern(@Nullable String label)", "class_method_signature": "ItemUIRegistryImpl.getFormatPattern(@Nullable String label)", "testcase": false, "constructor": false}, {"identifier": "getLabelFromWidget", "parameters": "(Widget w)", "modifiers": "private", "return": "String", "signature": "String getLabelFromWidget(Widget w)", "full_signature": "private String getLabelFromWidget(Widget w)", "class_method_signature": "ItemUIRegistryImpl.getLabelFromWidget(Widget w)", "testcase": false, "constructor": false}, {"identifier": "formatUndefined", "parameters": "(String formatPattern)", "modifiers": "protected", "return": "String", "signature": "String formatUndefined(String formatPattern)", "full_signature": "protected String formatUndefined(String formatPattern)", "class_method_signature": "ItemUIRegistryImpl.formatUndefined(String formatPattern)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(String label, boolean matchTransform, @Nullable String labelMappedOption)", "modifiers": "private", "return": "String", "signature": "String transform(String label, boolean matchTransform, @Nullable String labelMappedOption)", "full_signature": "private String transform(String label, boolean matchTransform, @Nullable String labelMappedOption)", "class_method_signature": "ItemUIRegistryImpl.transform(String label, boolean matchTransform, @Nullable String labelMappedOption)", "testcase": false, "constructor": false}, {"identifier": "getCategory", "parameters": "(Widget w)", "modifiers": "@Override public @Nullable", "return": "String", "signature": "String getCategory(Widget w)", "full_signature": "@Override public @Nullable String getCategory(Widget w)", "class_method_signature": "ItemUIRegistryImpl.getCategory(Widget w)", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "(Widget w)", "modifiers": "@Override public @Nullable", "return": "State", "signature": "State getState(Widget w)", "full_signature": "@Override public @Nullable State getState(Widget w)", "class_method_signature": "ItemUIRegistryImpl.getState(Widget w)", "testcase": false, "constructor": false}, {"identifier": "convertState", "parameters": "(Widget w, Item i, State state)", "modifiers": "@Override public @Nullable", "return": "State", "signature": "State convertState(Widget w, Item i, State state)", "full_signature": "@Override public @Nullable State convertState(Widget w, Item i, State state)", "class_method_signature": "ItemUIRegistryImpl.convertState(Widget w, Item i, State state)", "testcase": false, "constructor": false}, {"identifier": "getWidget", "parameters": "(Sitemap sitemap, String id)", "modifiers": "@Override public @Nullable", "return": "Widget", "signature": "Widget getWidget(Sitemap sitemap, String id)", "full_signature": "@Override public @Nullable Widget getWidget(Sitemap sitemap, String id)", "class_method_signature": "ItemUIRegistryImpl.getWidget(Sitemap sitemap, String id)", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "(Sitemap sitemap)", "modifiers": "@Override public", "return": "EList<Widget>", "signature": "EList<Widget> getChildren(Sitemap sitemap)", "full_signature": "@Override public EList<Widget> getChildren(Sitemap sitemap)", "class_method_signature": "ItemUIRegistryImpl.getChildren(Sitemap sitemap)", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "(LinkableWidget w)", "modifiers": "@Override public", "return": "EList<Widget>", "signature": "EList<Widget> getChildren(LinkableWidget w)", "full_signature": "@Override public EList<Widget> getChildren(LinkableWidget w)", "class_method_signature": "ItemUIRegistryImpl.getChildren(LinkableWidget w)", "testcase": false, "constructor": false}, {"identifier": "getParent", "parameters": "(Widget w)", "modifiers": "@Override public @Nullable", "return": "EObject", "signature": "EObject getParent(Widget w)", "full_signature": "@Override public @Nullable EObject getParent(Widget w)", "class_method_signature": "ItemUIRegistryImpl.getParent(Widget w)", "testcase": false, "constructor": false}, {"identifier": "resolveDefault", "parameters": "(@Nullable Widget widget)", "modifiers": "private @Nullable", "return": "Widget", "signature": "Widget resolveDefault(@Nullable Widget widget)", "full_signature": "private @Nullable Widget resolveDefault(@Nullable Widget widget)", "class_method_signature": "ItemUIRegistryImpl.resolveDefault(@Nullable Widget widget)", "testcase": false, "constructor": false}, {"identifier": "copyProperties", "parameters": "(Widget source, Widget target)", "modifiers": "private", "return": "void", "signature": "void copyProperties(Widget source, Widget target)", "full_signature": "private void copyProperties(Widget source, Widget target)", "class_method_signature": "ItemUIRegistryImpl.copyProperties(Widget source, Widget target)", "testcase": false, "constructor": false}, {"identifier": "getDynamicGroupChildren", "parameters": "(Group group)", "modifiers": "private", "return": "EList<Widget>", "signature": "EList<Widget> getDynamicGroupChildren(Group group)", "full_signature": "private EList<Widget> getDynamicGroupChildren(Group group)", "class_method_signature": "ItemUIRegistryImpl.getDynamicGroupChildren(Group group)", "testcase": false, "constructor": false}, {"identifier": "isReadOnly", "parameters": "(String itemName)", "modifiers": "private", "return": "boolean", "signature": "boolean isReadOnly(String itemName)", "full_signature": "private boolean isReadOnly(String itemName)", "class_method_signature": "ItemUIRegistryImpl.isReadOnly(String itemName)", "testcase": false, "constructor": false}, {"identifier": "hasStateOptions", "parameters": "(String itemName)", "modifiers": "private", "return": "boolean", "signature": "boolean hasStateOptions(String itemName)", "full_signature": "private boolean hasStateOptions(String itemName)", "class_method_signature": "ItemUIRegistryImpl.hasStateOptions(String itemName)", "testcase": false, "constructor": false}, {"identifier": "getCommandOptionsSize", "parameters": "(String itemName)", "modifiers": "private", "return": "int", "signature": "int getCommandOptionsSize(String itemName)", "full_signature": "private int getCommandOptionsSize(String itemName)", "class_method_signature": "ItemUIRegistryImpl.getCommandOptionsSize(String itemName)", "testcase": false, "constructor": false}, {"identifier": "getItemType", "parameters": "(String itemName)", "modifiers": "private @Nullable", "return": "Class<? extends Item>", "signature": "Class<? extends Item> getItemType(String itemName)", "full_signature": "private @Nullable Class<? extends Item> getItemType(String itemName)", "class_method_signature": "ItemUIRegistryImpl.getItemType(String itemName)", "testcase": false, "constructor": false}, {"identifier": "getItemState", "parameters": "(String itemName)", "modifiers": "@Override public @Nullable", "return": "State", "signature": "State getItemState(String itemName)", "full_signature": "@Override public @Nullable State getItemState(String itemName)", "class_method_signature": "ItemUIRegistryImpl.getItemState(String itemName)", "testcase": false, "constructor": false}, {"identifier": "getItemCategory", "parameters": "(String itemName)", "modifiers": "public @Nullable", "return": "String", "signature": "String getItemCategory(String itemName)", "full_signature": "public @Nullable String getItemCategory(String itemName)", "class_method_signature": "ItemUIRegistryImpl.getItemCategory(String itemName)", "testcase": false, "constructor": false}, {"identifier": "getItem", "parameters": "(String name)", "modifiers": "@Override public", "return": "Item", "signature": "Item getItem(String name)", "full_signature": "@Override public Item getItem(String name)", "class_method_signature": "ItemUIRegistryImpl.getItem(String name)", "testcase": false, "constructor": false}, {"identifier": "getItemByPattern", "parameters": "(String name)", "modifiers": "@Override public", "return": "Item", "signature": "Item getItemByPattern(String name)", "full_signature": "@Override public Item getItemByPattern(String name)", "class_method_signature": "ItemUIRegistryImpl.getItemByPattern(String name)", "testcase": false, "constructor": false}, {"identifier": "getItems", "parameters": "()", "modifiers": "@Override public", "return": "Collection<Item>", "signature": "Collection<Item> getItems()", "full_signature": "@Override public Collection<Item> getItems()", "class_method_signature": "ItemUIRegistryImpl.getItems()", "testcase": false, "constructor": false}, {"identifier": "getItemsOfType", "parameters": "(String type)", "modifiers": "@Override public", "return": "Collection<Item>", "signature": "Collection<Item> getItemsOfType(String type)", "full_signature": "@Override public Collection<Item> getItemsOfType(String type)", "class_method_signature": "ItemUIRegistryImpl.getItemsOfType(String type)", "testcase": false, "constructor": false}, {"identifier": "getItems", "parameters": "(String pattern)", "modifiers": "@Override public", "return": "Collection<Item>", "signature": "Collection<Item> getItems(String pattern)", "full_signature": "@Override public Collection<Item> getItems(String pattern)", "class_method_signature": "ItemUIRegistryImpl.getItems(String pattern)", "testcase": false, "constructor": false}, {"identifier": "addRegistryChangeListener", "parameters": "(RegistryChangeListener<Item> listener)", "modifiers": "@Override public", "return": "void", "signature": "void addRegistryChangeListener(RegistryChangeListener<Item> listener)", "full_signature": "@Override public void addRegistryChangeListener(RegistryChangeListener<Item> listener)", "class_method_signature": "ItemUIRegistryImpl.addRegistryChangeListener(RegistryChangeListener<Item> listener)", "testcase": false, "constructor": false}, {"identifier": "removeRegistryChangeListener", "parameters": "(RegistryChangeListener<Item> listener)", "modifiers": "@Override public", "return": "void", "signature": "void removeRegistryChangeListener(RegistryChangeListener<Item> listener)", "full_signature": "@Override public void removeRegistryChangeListener(RegistryChangeListener<Item> listener)", "class_method_signature": "ItemUIRegistryImpl.removeRegistryChangeListener(RegistryChangeListener<Item> listener)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "@Override public", "return": "Collection<Item>", "signature": "Collection<Item> getAll()", "full_signature": "@Override public Collection<Item> getAll()", "class_method_signature": "ItemUIRegistryImpl.getAll()", "testcase": false, "constructor": false}, {"identifier": "stream", "parameters": "()", "modifiers": "@Override public", "return": "Stream<Item>", "signature": "Stream<Item> stream()", "full_signature": "@Override public Stream<Item> stream()", "class_method_signature": "ItemUIRegistryImpl.stream()", "testcase": false, "constructor": false}, {"identifier": "getWidgetId", "parameters": "(Widget widget)", "modifiers": "@Override public", "return": "String", "signature": "String getWidgetId(Widget widget)", "full_signature": "@Override public String getWidgetId(Widget widget)", "class_method_signature": "ItemUIRegistryImpl.getWidgetId(Widget widget)", "testcase": false, "constructor": false}, {"identifier": "matchStateToValue", "parameters": "(State state, String value, @Nullable String matchCondition)", "modifiers": "private", "return": "boolean", "signature": "boolean matchStateToValue(State state, String value, @Nullable String matchCondition)", "full_signature": "private boolean matchStateToValue(State state, String value, @Nullable String matchCondition)", "class_method_signature": "ItemUIRegistryImpl.matchStateToValue(State state, String value, @Nullable String matchCondition)", "testcase": false, "constructor": false}, {"identifier": "processColorDefinition", "parameters": "(@Nullable State state, @Nullable List<ColorArray> colorList)", "modifiers": "private @Nullable", "return": "String", "signature": "String processColorDefinition(@Nullable State state, @Nullable List<ColorArray> colorList)", "full_signature": "private @Nullable String processColorDefinition(@Nullable State state, @Nullable List<ColorArray> colorList)", "class_method_signature": "ItemUIRegistryImpl.processColorDefinition(@Nullable State state, @Nullable List<ColorArray> colorList)", "testcase": false, "constructor": false}, {"identifier": "getLabelColor", "parameters": "(Widget w)", "modifiers": "@Override public @Nullable", "return": "String", "signature": "String getLabelColor(Widget w)", "full_signature": "@Override public @Nullable String getLabelColor(Widget w)", "class_method_signature": "ItemUIRegistryImpl.getLabelColor(Widget w)", "testcase": false, "constructor": false}, {"identifier": "getValueColor", "parameters": "(Widget w)", "modifiers": "@Override public @Nullable", "return": "String", "signature": "String getValueColor(Widget w)", "full_signature": "@Override public @Nullable String getValueColor(Widget w)", "class_method_signature": "ItemUIRegistryImpl.getValueColor(Widget w)", "testcase": false, "constructor": false}, {"identifier": "getVisiblity", "parameters": "(Widget w)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getVisiblity(Widget w)", "full_signature": "@Override public boolean getVisiblity(Widget w)", "class_method_signature": "ItemUIRegistryImpl.getVisiblity(Widget w)", "testcase": false, "constructor": false}, {"identifier": "getItemsByTag", "parameters": "(String... tags)", "modifiers": "@Override public", "return": "Collection<Item>", "signature": "Collection<Item> getItemsByTag(String... tags)", "full_signature": "@Override public Collection<Item> getItemsByTag(String... tags)", "class_method_signature": "ItemUIRegistryImpl.getItemsByTag(String... tags)", "testcase": false, "constructor": false}, {"identifier": "getItemsByTagAndType", "parameters": "(String type, String... tags)", "modifiers": "@Override public", "return": "Collection<Item>", "signature": "Collection<Item> getItemsByTagAndType(String type, String... tags)", "full_signature": "@Override public Collection<Item> getItemsByTagAndType(String type, String... tags)", "class_method_signature": "ItemUIRegistryImpl.getItemsByTagAndType(String type, String... tags)", "testcase": false, "constructor": false}, {"identifier": "getItemsByTag", "parameters": "(Class<T> typeFilter, String... tags)", "modifiers": "@Override public", "return": "Collection<T>", "signature": "Collection<T> getItemsByTag(Class<T> typeFilter, String... tags)", "full_signature": "@Override public Collection<T> getItemsByTag(Class<T> typeFilter, String... tags)", "class_method_signature": "ItemUIRegistryImpl.getItemsByTag(Class<T> typeFilter, String... tags)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Item element)", "modifiers": "@Override public", "return": "Item", "signature": "Item add(Item element)", "full_signature": "@Override public Item add(Item element)", "class_method_signature": "ItemUIRegistryImpl.add(Item element)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Item element)", "modifiers": "@Override public @Nullable", "return": "Item", "signature": "Item update(Item element)", "full_signature": "@Override public @Nullable Item update(Item element)", "class_method_signature": "ItemUIRegistryImpl.update(Item element)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String key)", "modifiers": "@Override public @Nullable", "return": "Item", "signature": "Item remove(String key)", "full_signature": "@Override public @Nullable Item remove(String key)", "class_method_signature": "ItemUIRegistryImpl.remove(String key)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String key)", "modifiers": "@Override public @Nullable", "return": "Item", "signature": "Item get(String key)", "full_signature": "@Override public @Nullable Item get(String key)", "class_method_signature": "ItemUIRegistryImpl.get(String key)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String itemName, boolean recursive)", "modifiers": "@Override public @Nullable", "return": "Item", "signature": "Item remove(String itemName, boolean recursive)", "full_signature": "@Override public @Nullable Item remove(String itemName, boolean recursive)", "class_method_signature": "ItemUIRegistryImpl.remove(String itemName, boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "addRegistryHook", "parameters": "(RegistryHook<Item> hook)", "modifiers": "@Override public", "return": "void", "signature": "void addRegistryHook(RegistryHook<Item> hook)", "full_signature": "@Override public void addRegistryHook(RegistryHook<Item> hook)", "class_method_signature": "ItemUIRegistryImpl.addRegistryHook(RegistryHook<Item> hook)", "testcase": false, "constructor": false}, {"identifier": "removeRegistryHook", "parameters": "(RegistryHook<Item> hook)", "modifiers": "@Override public", "return": "void", "signature": "void removeRegistryHook(RegistryHook<Item> hook)", "full_signature": "@Override public void removeRegistryHook(RegistryHook<Item> hook)", "class_method_signature": "ItemUIRegistryImpl.removeRegistryHook(RegistryHook<Item> hook)", "testcase": false, "constructor": false}, {"identifier": "getUnitForWidget", "parameters": "(Widget w)", "modifiers": "@Override public @Nullable", "return": "String", "signature": "String getUnitForWidget(Widget w)", "full_signature": "@Override public @Nullable String getUnitForWidget(Widget w)", "class_method_signature": "ItemUIRegistryImpl.getUnitForWidget(Widget w)", "testcase": false, "constructor": false}, {"identifier": "convertStateToLabelUnit", "parameters": "(QuantityType<?> state, String label)", "modifiers": "@Override public @Nullable", "return": "State", "signature": "State convertStateToLabelUnit(QuantityType<?> state, String label)", "full_signature": "@Override public @Nullable State convertStateToLabelUnit(QuantityType<?> state, String label)", "class_method_signature": "ItemUIRegistryImpl.convertStateToLabelUnit(QuantityType<?> state, String label)", "testcase": false, "constructor": false}, {"identifier": "getUnitFromLabel", "parameters": "(@Nullable String label)", "modifiers": "private @Nullable", "return": "String", "signature": "String getUnitFromLabel(@Nullable String label)", "full_signature": "private @Nullable String getUnitFromLabel(@Nullable String label)", "class_method_signature": "ItemUIRegistryImpl.getUnitFromLabel(@Nullable String label)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/items/ItemUIRegistryImpl.java"}, "focal_method": {"identifier": "getLabel", "parameters": "(String itemName)", "modifiers": "@Override public @Nullable", "return": "String", "body": "@Override\n    public @Nullable String getLabel(String itemName) {\n        for (ItemUIProvider provider : itemUIProviders) {\n            String currentLabel = provider.getLabel(itemName);\n            if (currentLabel != null) {\n                return currentLabel;\n            }\n        }\n        try {\n            Item item = getItem(itemName);\n            if (item.getLabel() != null) {\n                return item.getLabel();\n            }\n        } catch (ItemNotFoundException e) {\n        }\n\n        return null;\n    }", "signature": "String getLabel(String itemName)", "full_signature": "@Override public @Nullable String getLabel(String itemName)", "class_method_signature": "ItemUIRegistryImpl.getLabel(String itemName)", "testcase": false, "constructor": false, "invocations": ["getLabel", "getItem", "getLabel", "getLabel"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}