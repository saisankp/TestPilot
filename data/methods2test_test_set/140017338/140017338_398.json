{"test_class": {"identifier": "RequestBodyBuilderImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ObjectMapper mapper;", "modifier": "private", "type": "ObjectMapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "private RequestBodyBuilderImpl bodyBuilder;", "modifier": "private", "type": "RequestBodyBuilderImpl", "declarator": "bodyBuilder", "var_name": "bodyBuilder"}], "file": "http-support/src/test/java/org/eclipse/sw360/antenna/http/RequestBodyBuilderImplTest.java"}, "test_case": {"identifier": "testHandlingOfJsonProcessingException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHandlingOfJsonProcessingException() throws JsonProcessingException {\n        Object data = new Object();\n        JsonProcessingException exception = mock(JsonProcessingException.class);\n        when(mapper.writeValueAsString(data)).thenThrow(exception);\n\n        try {\n            bodyBuilder.json(data);\n            fail(\"No exception thrown!\");\n        } catch (IllegalStateException iex) {\n            assertThat(iex.getCause()).isEqualTo(exception);\n        }\n    }", "signature": "void testHandlingOfJsonProcessingException()", "full_signature": "@Test public void testHandlingOfJsonProcessingException()", "class_method_signature": "RequestBodyBuilderImplTest.testHandlingOfJsonProcessingException()", "testcase": true, "constructor": false, "invocations": ["mock", "thenThrow", "when", "writeValueAsString", "json", "fail", "isEqualTo", "assertThat", "getCause"]}, "focal_class": {"identifier": "RequestBodyBuilderImpl", "superclass": "", "interfaces": "implements RequestBodyBuilder", "fields": [{"original_string": "private final ObjectMapper mapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "private RequestBody body;", "modifier": "private", "type": "RequestBody", "declarator": "body", "var_name": "body"}, {"original_string": "private String fileName;", "modifier": "private", "type": "String", "declarator": "fileName", "var_name": "fileName"}], "methods": [{"identifier": "RequestBodyBuilderImpl", "parameters": "(ObjectMapper mapper)", "modifiers": "public", "return": "", "signature": " RequestBodyBuilderImpl(ObjectMapper mapper)", "full_signature": "public  RequestBodyBuilderImpl(ObjectMapper mapper)", "class_method_signature": "RequestBodyBuilderImpl.RequestBodyBuilderImpl(ObjectMapper mapper)", "testcase": false, "constructor": true}, {"identifier": "string", "parameters": "(String str, String mediaType)", "modifiers": "@Override public", "return": "void", "signature": "void string(String str, String mediaType)", "full_signature": "@Override public void string(String str, String mediaType)", "class_method_signature": "RequestBodyBuilderImpl.string(String str, String mediaType)", "testcase": false, "constructor": false}, {"identifier": "file", "parameters": "(Path path, String mediaType)", "modifiers": "@Override public", "return": "void", "signature": "void file(Path path, String mediaType)", "full_signature": "@Override public void file(Path path, String mediaType)", "class_method_signature": "RequestBodyBuilderImpl.file(Path path, String mediaType)", "testcase": false, "constructor": false}, {"identifier": "json", "parameters": "(Object payload)", "modifiers": "@Override public", "return": "void", "signature": "void json(Object payload)", "full_signature": "@Override public void json(Object payload)", "class_method_signature": "RequestBodyBuilderImpl.json(Object payload)", "testcase": false, "constructor": false}, {"identifier": "getBody", "parameters": "()", "modifiers": "public", "return": "RequestBody", "signature": "RequestBody getBody()", "full_signature": "public RequestBody getBody()", "class_method_signature": "RequestBodyBuilderImpl.getBody()", "testcase": false, "constructor": false}, {"identifier": "getFileName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFileName()", "full_signature": "public String getFileName()", "class_method_signature": "RequestBodyBuilderImpl.getFileName()", "testcase": false, "constructor": false}, {"identifier": "initBody", "parameters": "(RequestBody b)", "modifiers": "private", "return": "void", "signature": "void initBody(RequestBody b)", "full_signature": "private void initBody(RequestBody b)", "class_method_signature": "RequestBodyBuilderImpl.initBody(RequestBody b)", "testcase": false, "constructor": false}], "file": "http-support/src/main/java/org/eclipse/sw360/antenna/http/RequestBodyBuilderImpl.java"}, "focal_method": {"identifier": "json", "parameters": "(Object payload)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void json(Object payload) {\n        try {\n            string(mapper.writeValueAsString(payload), \"application/json\");\n        } catch (JsonProcessingException e) {\n            throw new IllegalStateException(e);\n        }\n    }", "signature": "void json(Object payload)", "full_signature": "@Override public void json(Object payload)", "class_method_signature": "RequestBodyBuilderImpl.json(Object payload)", "testcase": false, "constructor": false, "invocations": ["string", "writeValueAsString"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}