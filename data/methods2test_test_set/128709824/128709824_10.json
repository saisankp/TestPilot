{"test_class": {"identifier": "GenericSingleClassLoaderSofaSerializerFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "GenericSingleClassLoaderSofaSerializerFactory factory = new GenericSingleClassLoaderSofaSerializerFactory();", "modifier": "", "type": "GenericSingleClassLoaderSofaSerializerFactory", "declarator": "factory = new GenericSingleClassLoaderSofaSerializerFactory()", "var_name": "factory"}], "file": "codec/codec-sofa-hessian/src/test/java/com/alipay/sofa/rpc/codec/sofahessian/GenericSingleClassLoaderSofaSerializerFactoryTest.java"}, "test_case": {"identifier": "getDeserializer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getDeserializer() throws Exception {\n        Assert.assertEquals(GenericClassDeserializer.class,\n            factory.getDeserializer(Class.class.getCanonicalName()).getClass());\n        Assert.assertEquals(GenericDeserializer.class,\n            factory.getDeserializer(GenericObject.class.getCanonicalName()).getClass());\n    }", "signature": "void getDeserializer()", "full_signature": "@Test public void getDeserializer()", "class_method_signature": "GenericSingleClassLoaderSofaSerializerFactoryTest.getDeserializer()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getClass", "getDeserializer", "getCanonicalName", "assertEquals", "getClass", "getDeserializer", "getCanonicalName"]}, "focal_class": {"identifier": "GenericSingleClassLoaderSofaSerializerFactory", "superclass": "extends SingleClassLoaderSofaSerializerFactory", "interfaces": "", "fields": [{"original_string": "private static final char                                ARRAY_PREFIX     = '[';", "modifier": "private static final", "type": "char", "declarator": "ARRAY_PREFIX     = '['", "var_name": "ARRAY_PREFIX"}, {"original_string": "private static final ConcurrentMap<String, Deserializer> DESERIALIZER_MAP = new ConcurrentHashMap<String, Deserializer>();", "modifier": "private static final", "type": "ConcurrentMap<String, Deserializer>", "declarator": "DESERIALIZER_MAP = new ConcurrentHashMap<String, Deserializer>()", "var_name": "DESERIALIZER_MAP"}], "methods": [{"identifier": "getSerializer", "parameters": "(Class cl)", "modifiers": "@Override public", "return": "Serializer", "signature": "Serializer getSerializer(Class cl)", "full_signature": "@Override public Serializer getSerializer(Class cl)", "class_method_signature": "GenericSingleClassLoaderSofaSerializerFactory.getSerializer(Class cl)", "testcase": false, "constructor": false}, {"identifier": "getDeserializer", "parameters": "(String type)", "modifiers": "@Override public", "return": "Deserializer", "signature": "Deserializer getDeserializer(String type)", "full_signature": "@Override public Deserializer getDeserializer(String type)", "class_method_signature": "GenericSingleClassLoaderSofaSerializerFactory.getDeserializer(String type)", "testcase": false, "constructor": false}], "file": "codec/codec-sofa-hessian/src/main/java/com/alipay/sofa/rpc/codec/sofahessian/GenericSingleClassLoaderSofaSerializerFactory.java"}, "focal_method": {"identifier": "getDeserializer", "parameters": "(String type)", "modifiers": "@Override public", "return": "Deserializer", "body": "@Override\n    public Deserializer getDeserializer(String type) throws HessianProtocolException {\n\n        // \u5982\u679c\u7c7b\u578b\u5728\u8fc7\u6ee4\u5217\u8868, \u8bf4\u660e\u662fjdk\u81ea\u5e26\u7c7b, \u76f4\u63a5\u59d4\u6258\u7236\u7c7b\u5904\u7406\n        if (StringUtils.isEmpty(type) || ClassFilter.filterExcludeClass(type)) {\n            return super.getDeserializer(type);\n        }\n\n        // \u5982\u679c\u662f\u6570\u7ec4\u7c7b\u578b, \u4e14\u5728name\u8fc7\u6ee4\u5217\u8868, \u8bf4\u660ejdk\u7c7b, \u76f4\u63a5\u59d4\u6258\u7236\u7c7b\u5904\u7406\n        if (type.charAt(0) == ARRAY_PREFIX && ClassFilter.arrayFilter(type)) {\n            return super.getDeserializer(type);\n        }\n\n        // \u67e5\u770b\u662f\u5426\u5df2\u7ecf\u5305\u542b\u53cd\u5e8f\u5217\u5316\u5668\n        Deserializer deserializer = DESERIALIZER_MAP.get(type);\n        if (deserializer != null) {\n            return deserializer;\n        }\n\n        // \u65b0\u5efa\u53cd\u5e8f\u5217\u5316\u5668, \u5982\u679c\u662fjava.lang.Class\u4f7f\u7528GenericClassDeserializer,\u5426\u5219\u4f7f\u7528GenericDeserializer\n        if (ClassFilter.CLASS_NAME.equals(type)) {\n            deserializer = GenericClassDeserializer.getInstance();\n        } else {\n            deserializer = new GenericDeserializer(type);\n        }\n\n        DESERIALIZER_MAP.putIfAbsent(type, deserializer);\n        return deserializer;\n    }", "signature": "Deserializer getDeserializer(String type)", "full_signature": "@Override public Deserializer getDeserializer(String type)", "class_method_signature": "GenericSingleClassLoaderSofaSerializerFactory.getDeserializer(String type)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "filterExcludeClass", "getDeserializer", "charAt", "arrayFilter", "getDeserializer", "get", "equals", "getInstance", "putIfAbsent"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}