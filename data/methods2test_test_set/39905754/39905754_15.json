{"test_class": {"identifier": "EightQueensTest", "superclass": "", "interfaces": "", "fields": [], "file": "Paris/2015/2015-04-16-EightQueens-Java/src/test/java/game/EightQueensTest.java"}, "test_case": {"identifier": "it_should_accept_three_nice_queens", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void\n    it_should_accept_three_nice_queens(){\n        List<Position> board = asList(pos(0, 0), pos(1, 3), pos(2,7));\n        assertTrue(EightQueens.isSolution(board));\n    }", "signature": "void it_should_accept_three_nice_queens()", "full_signature": "@Test public void it_should_accept_three_nice_queens()", "class_method_signature": "EightQueensTest.it_should_accept_three_nice_queens()", "testcase": true, "constructor": false, "invocations": ["asList", "pos", "pos", "pos", "assertTrue", "isSolution"]}, "focal_class": {"identifier": "EightQueens", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "isSolution", "parameters": "(List<Position> board)", "modifiers": "static", "return": "boolean", "signature": "boolean isSolution(List<Position> board)", "full_signature": "static boolean isSolution(List<Position> board)", "class_method_signature": "EightQueens.isSolution(List<Position> board)", "testcase": false, "constructor": false}, {"identifier": "findSolution", "parameters": "(int boardSize)", "modifiers": "public static", "return": "List<Position>", "signature": "List<Position> findSolution(int boardSize)", "full_signature": "public static List<Position> findSolution(int boardSize)", "class_method_signature": "EightQueens.findSolution(int boardSize)", "testcase": false, "constructor": false}, {"identifier": "generate", "parameters": "(int size)", "modifiers": "private static", "return": "List<Position>", "signature": "List<Position> generate(int size)", "full_signature": "private static List<Position> generate(int size)", "class_method_signature": "EightQueens.generate(int size)", "testcase": false, "constructor": false}], "file": "Paris/2015/2015-04-16-EightQueens-Java/src/main/java/game/EightQueens.java"}, "focal_method": {"identifier": "isSolution", "parameters": "(List<Position> board)", "modifiers": "static", "return": "boolean", "body": "static boolean isSolution(List<Position> board) {\n        int size = board.size();\n        for (int i = 0; i < size; i++) {\n            Position firstPosition = board.get(i);\n            if (firstPosition.intersectPositions(board, i)) {\n                return false;\n            }\n        }\n        return true;\n    }", "signature": "boolean isSolution(List<Position> board)", "full_signature": "static boolean isSolution(List<Position> board)", "class_method_signature": "EightQueens.isSolution(List<Position> board)", "testcase": false, "constructor": false, "invocations": ["size", "get", "intersectPositions"]}, "repository": {"repo_id": 39905754, "url": "https://github.com/murex/murex-coding-dojo", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 1700, "license": "licensed"}}