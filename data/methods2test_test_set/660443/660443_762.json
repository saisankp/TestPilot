{"test_class": {"identifier": "CycleBasisTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [{"original_string": "CycleBasis  basis;", "modifier": "", "type": "CycleBasis", "declarator": "basis", "var_name": "basis"}, {"original_string": "SimpleGraph g;", "modifier": "", "type": "SimpleGraph", "declarator": "g", "var_name": "g"}], "file": "legacy/src/test/java/org/openscience/cdk/ringsearch/cyclebasis/CycleBasisTest.java"}, "test_case": {"identifier": "testEssentialCycles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEssentialCycles() {\n        Assert.assertEquals(4, basis.essentialCycles().size());\n    }", "signature": "void testEssentialCycles()", "full_signature": "@Test public void testEssentialCycles()", "class_method_signature": "CycleBasisTest.testEssentialCycles()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "size", "essentialCycles"]}, "focal_class": {"identifier": "CycleBasis", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<SimpleCycle>      mulitEdgeCycles = new ArrayList<SimpleCycle>();", "modifier": "private", "type": "List<SimpleCycle>", "declarator": "mulitEdgeCycles = new ArrayList<SimpleCycle>()", "var_name": "mulitEdgeCycles"}, {"original_string": "private List<Edge>             multiEdgeList   = new ArrayList<Edge>();", "modifier": "private", "type": "List<Edge>", "declarator": "multiEdgeList   = new ArrayList<Edge>()", "var_name": "multiEdgeList"}, {"original_string": "private SimpleCycleBasis       cachedCycleBasis;", "modifier": "private", "type": "SimpleCycleBasis", "declarator": "cachedCycleBasis", "var_name": "cachedCycleBasis"}, {"original_string": "private UndirectedGraph        baseGraph;", "modifier": "private", "type": "UndirectedGraph", "declarator": "baseGraph", "var_name": "baseGraph"}, {"original_string": "private List<SimpleCycleBasis> subgraphBases   = new ArrayList<SimpleCycleBasis>();", "modifier": "private", "type": "List<SimpleCycleBasis>", "declarator": "subgraphBases   = new ArrayList<SimpleCycleBasis>()", "var_name": "subgraphBases"}], "methods": [{"identifier": "CycleBasis", "parameters": "(UndirectedGraph g)", "modifiers": "public", "return": "", "signature": " CycleBasis(UndirectedGraph g)", "full_signature": "public  CycleBasis(UndirectedGraph g)", "class_method_signature": "CycleBasis.CycleBasis(UndirectedGraph g)", "testcase": false, "constructor": true}, {"identifier": "weightVector", "parameters": "()", "modifiers": "public", "return": "int[]", "signature": "int[] weightVector()", "full_signature": "public int[] weightVector()", "class_method_signature": "CycleBasis.weightVector()", "testcase": false, "constructor": false}, {"identifier": "simpleBasis", "parameters": "()", "modifiers": "private", "return": "SimpleCycleBasis", "signature": "SimpleCycleBasis simpleBasis()", "full_signature": "private SimpleCycleBasis simpleBasis()", "class_method_signature": "CycleBasis.simpleBasis()", "testcase": false, "constructor": false}, {"identifier": "cycles", "parameters": "()", "modifiers": "public", "return": "Collection", "signature": "Collection cycles()", "full_signature": "public Collection cycles()", "class_method_signature": "CycleBasis.cycles()", "testcase": false, "constructor": false}, {"identifier": "essentialCycles", "parameters": "()", "modifiers": "public", "return": "Collection", "signature": "Collection essentialCycles()", "full_signature": "public Collection essentialCycles()", "class_method_signature": "CycleBasis.essentialCycles()", "testcase": false, "constructor": false}, {"identifier": "relevantCycles", "parameters": "()", "modifiers": "public", "return": "Map", "signature": "Map relevantCycles()", "full_signature": "public Map relevantCycles()", "class_method_signature": "CycleBasis.relevantCycles()", "testcase": false, "constructor": false}, {"identifier": "equivalenceClasses", "parameters": "()", "modifiers": "public", "return": "List", "signature": "List equivalenceClasses()", "full_signature": "public List equivalenceClasses()", "class_method_signature": "CycleBasis.equivalenceClasses()", "testcase": false, "constructor": false}], "file": "legacy/src/main/java/org/openscience/cdk/ringsearch/cyclebasis/CycleBasis.java"}, "focal_method": {"identifier": "essentialCycles", "parameters": "()", "modifiers": "public", "return": "Collection", "body": "public Collection essentialCycles() {\n        Collection result = new HashSet();\n        //minimize();\n\n        for (Object subgraphBase : subgraphBases) {\n            SimpleCycleBasis cycleBasis = (SimpleCycleBasis) subgraphBase;\n            result.addAll(cycleBasis.essentialCycles());\n        }\n\n        return result;\n    }", "signature": "Collection essentialCycles()", "full_signature": "public Collection essentialCycles()", "class_method_signature": "CycleBasis.essentialCycles()", "testcase": false, "constructor": false, "invocations": ["addAll", "essentialCycles"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}