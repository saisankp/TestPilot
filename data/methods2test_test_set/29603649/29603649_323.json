{"test_class": {"identifier": "HandlerKeyValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String HANDLER_NAME = \"Teszt\";", "modifier": "private static final", "type": "String", "declarator": "HANDLER_NAME = \"Teszt\"", "var_name": "HANDLER_NAME"}, {"original_string": "private HandlerKeyValidator underTest = new HandlerKeyValidator();", "modifier": "private", "type": "HandlerKeyValidator", "declarator": "underTest = new HandlerKeyValidator()", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-message-sequence/src/test/java/com/epam/wilma/sequence/validator/HandlerKeyValidatorTest.java"}, "test_case": {"identifier": "testCheckRequestShouldThrowValidationExceptionWhenHandlerKeyIsNull", "parameters": "()", "modifiers": "@Test(expectedExceptions = SequenceHandlerKeyValidationException.class) public", "return": "void", "body": "@Test(expectedExceptions = SequenceHandlerKeyValidationException.class)\n    public void testCheckRequestShouldThrowValidationExceptionWhenHandlerKeyIsNull() {\n        //GIVEN\n        //WHEN\n        underTest.validateGeneratedKey(null, HANDLER_NAME);\n        //THEN except an EXCEPTION\n    }", "signature": "void testCheckRequestShouldThrowValidationExceptionWhenHandlerKeyIsNull()", "full_signature": "@Test(expectedExceptions = SequenceHandlerKeyValidationException.class) public void testCheckRequestShouldThrowValidationExceptionWhenHandlerKeyIsNull()", "class_method_signature": "HandlerKeyValidatorTest.testCheckRequestShouldThrowValidationExceptionWhenHandlerKeyIsNull()", "testcase": true, "constructor": false, "invocations": ["validateGeneratedKey"]}, "focal_class": {"identifier": "HandlerKeyValidator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "validateGeneratedKey", "parameters": "(final String handlerKey, final String handlerClassName)", "modifiers": "public", "return": "void", "signature": "void validateGeneratedKey(final String handlerKey, final String handlerClassName)", "full_signature": "public void validateGeneratedKey(final String handlerKey, final String handlerClassName)", "class_method_signature": "HandlerKeyValidator.validateGeneratedKey(final String handlerKey, final String handlerClassName)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-message-sequence/src/main/java/com/epam/wilma/sequence/validator/HandlerKeyValidator.java"}, "focal_method": {"identifier": "validateGeneratedKey", "parameters": "(final String handlerKey, final String handlerClassName)", "modifiers": "public", "return": "void", "body": "public void validateGeneratedKey(final String handlerKey, final String handlerClassName) {\n        if (handlerKey == null || (handlerKey.contains(SequenceConstants.SEQUENCE_KEY_SEPARATOR.getConstant())\n                || handlerKey.contains(SequenceConstants.SEQUENCE_ID_SEPARATOR.getConstant()))) {\n            throw new SequenceHandlerKeyValidationException(handlerKey + \" is not valid, handler(\" + handlerClassName + \"). Forbidden charaters: \"\n                    + SequenceConstants.SEQUENCE_KEY_SEPARATOR.getConstant() + \" \" + SequenceConstants.SEQUENCE_ID_SEPARATOR.getConstant());\n        }\n    }", "signature": "void validateGeneratedKey(final String handlerKey, final String handlerClassName)", "full_signature": "public void validateGeneratedKey(final String handlerKey, final String handlerClassName)", "class_method_signature": "HandlerKeyValidator.validateGeneratedKey(final String handlerKey, final String handlerClassName)", "testcase": false, "constructor": false, "invocations": ["contains", "getConstant", "contains", "getConstant", "getConstant", "getConstant"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}