{"test_class": {"identifier": "DeduplicationControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private DeduplicationService deduplicationService;", "modifier": "@Mock\n    private", "type": "DeduplicationService", "declarator": "deduplicationService", "var_name": "deduplicationService"}, {"original_string": "@Mock\n    private TrackedEntityInstanceService trackedEntityInstanceService;", "modifier": "@Mock\n    private", "type": "TrackedEntityInstanceService", "declarator": "trackedEntityInstanceService", "var_name": "trackedEntityInstanceService"}, {"original_string": "@Mock\n    private TrackerAccessManager trackerAccessManager;", "modifier": "@Mock\n    private", "type": "TrackerAccessManager", "declarator": "trackerAccessManager", "var_name": "trackerAccessManager"}, {"original_string": "@Mock\n    private CurrentUserService currentUserService;", "modifier": "@Mock\n    private", "type": "CurrentUserService", "declarator": "currentUserService", "var_name": "currentUserService"}, {"original_string": "@Mock\n    private FieldFilterService fieldFilterService;", "modifier": "@Mock\n    private", "type": "FieldFilterService", "declarator": "fieldFilterService", "var_name": "fieldFilterService"}, {"original_string": "@Mock\n    private ContextService contextService;", "modifier": "@Mock\n    private", "type": "ContextService", "declarator": "contextService", "var_name": "contextService"}, {"original_string": "@InjectMocks\n    private DeduplicationController controller;", "modifier": "@InjectMocks\n    private", "type": "DeduplicationController", "declarator": "controller", "var_name": "controller"}, {"original_string": "@Rule\n    public MockitoRule mockitoRule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = MockitoJUnit.rule()", "var_name": "mockitoRule"}], "file": "dhis-2/dhis-web/dhis-web-api/src/test/java/org/hisp/dhis/webapi/controller/DeduplicationControllerTest.java"}, "test_case": {"identifier": "getPotentialDuplicateNotFound", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getPotentialDuplicateNotFound()\n    {\n        Mockito.when( deduplicationService.getPotentialDuplicateByUid( Mockito.eq( \"0\" ) ) ).thenReturn( null );\n\n        try\n        {\n            controller.getPotentialDuplicate( \"0\" );\n        }\n        catch ( WebMessageException e )\n        {\n            WebMessage wm = e.getWebMessage();\n            assertEquals( \"Not Found\", wm.getHttpStatus() );\n            assertEquals( 404, wm.getHttpStatusCode().intValue() );\n            assertEquals( Status.ERROR, wm.getStatus() );\n            assertEquals( \"No potentialDuplicate records found with id '0'.\", wm.getMessage() );\n        }\n\n    }", "signature": "void getPotentialDuplicateNotFound()", "full_signature": "@Test public void getPotentialDuplicateNotFound()", "class_method_signature": "DeduplicationControllerTest.getPotentialDuplicateNotFound()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getPotentialDuplicateByUid", "eq", "getPotentialDuplicate", "getWebMessage", "assertEquals", "getHttpStatus", "assertEquals", "intValue", "getHttpStatusCode", "assertEquals", "getStatus", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "DeduplicationController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final DeduplicationService deduplicationService;", "modifier": "private final", "type": "DeduplicationService", "declarator": "deduplicationService", "var_name": "deduplicationService"}, {"original_string": "private final TrackedEntityInstanceService trackedEntityInstanceService;", "modifier": "private final", "type": "TrackedEntityInstanceService", "declarator": "trackedEntityInstanceService", "var_name": "trackedEntityInstanceService"}, {"original_string": "private final TrackerAccessManager trackerAccessManager;", "modifier": "private final", "type": "TrackerAccessManager", "declarator": "trackerAccessManager", "var_name": "trackerAccessManager"}, {"original_string": "private final CurrentUserService currentUserService;", "modifier": "private final", "type": "CurrentUserService", "declarator": "currentUserService", "var_name": "currentUserService"}, {"original_string": "private final FieldFilterService fieldFilterService;", "modifier": "private final", "type": "FieldFilterService", "declarator": "fieldFilterService", "var_name": "fieldFilterService"}, {"original_string": "private final ContextService contextService;", "modifier": "private final", "type": "ContextService", "declarator": "contextService", "var_name": "contextService"}], "methods": [{"identifier": "DeduplicationController", "parameters": "( DeduplicationService deduplicationService,\n        TrackedEntityInstanceService trackedEntityInstanceService,\n        TrackerAccessManager trackerAccessManager, CurrentUserService currentUserService,\n        FieldFilterService fieldFilterService,\n        ContextService contextService )", "modifiers": "public", "return": "", "signature": " DeduplicationController( DeduplicationService deduplicationService,\n        TrackedEntityInstanceService trackedEntityInstanceService,\n        TrackerAccessManager trackerAccessManager, CurrentUserService currentUserService,\n        FieldFilterService fieldFilterService,\n        ContextService contextService )", "full_signature": "public  DeduplicationController( DeduplicationService deduplicationService,\n        TrackedEntityInstanceService trackedEntityInstanceService,\n        TrackerAccessManager trackerAccessManager, CurrentUserService currentUserService,\n        FieldFilterService fieldFilterService,\n        ContextService contextService )", "class_method_signature": "DeduplicationController.DeduplicationController( DeduplicationService deduplicationService,\n        TrackedEntityInstanceService trackedEntityInstanceService,\n        TrackerAccessManager trackerAccessManager, CurrentUserService currentUserService,\n        FieldFilterService fieldFilterService,\n        ContextService contextService )", "testcase": false, "constructor": true}, {"identifier": "getAll", "parameters": "(\n        PotentialDuplicateQuery query,\n        HttpServletResponse response\n    )", "modifiers": "@GetMapping public", "return": "Node", "signature": "Node getAll(\n        PotentialDuplicateQuery query,\n        HttpServletResponse response\n    )", "full_signature": "@GetMapping public Node getAll(\n        PotentialDuplicateQuery query,\n        HttpServletResponse response\n    )", "class_method_signature": "DeduplicationController.getAll(\n        PotentialDuplicateQuery query,\n        HttpServletResponse response\n    )", "testcase": false, "constructor": false}, {"identifier": "getPotentialDuplicate", "parameters": "(\n        @PathVariable String id\n    )", "modifiers": "@GetMapping( value = \"/{id}\" ) public", "return": "PotentialDuplicate", "signature": "PotentialDuplicate getPotentialDuplicate(\n        @PathVariable String id\n    )", "full_signature": "@GetMapping( value = \"/{id}\" ) public PotentialDuplicate getPotentialDuplicate(\n        @PathVariable String id\n    )", "class_method_signature": "DeduplicationController.getPotentialDuplicate(\n        @PathVariable String id\n    )", "testcase": false, "constructor": false}, {"identifier": "postPotentialDuplicate", "parameters": "(\n        @RequestBody PotentialDuplicate potentialDuplicate\n    )", "modifiers": "@PostMapping public", "return": "PotentialDuplicate", "signature": "PotentialDuplicate postPotentialDuplicate(\n        @RequestBody PotentialDuplicate potentialDuplicate\n    )", "full_signature": "@PostMapping public PotentialDuplicate postPotentialDuplicate(\n        @RequestBody PotentialDuplicate potentialDuplicate\n    )", "class_method_signature": "DeduplicationController.postPotentialDuplicate(\n        @RequestBody PotentialDuplicate potentialDuplicate\n    )", "testcase": false, "constructor": false}, {"identifier": "markPotentialDuplicateInvalid", "parameters": "(\n        @PathVariable String id\n    )", "modifiers": "@RequestMapping( method = { RequestMethod.PUT, RequestMethod.POST }, value = \"/{id}/invalidation\" ) public", "return": "void", "signature": "void markPotentialDuplicateInvalid(\n        @PathVariable String id\n    )", "full_signature": "@RequestMapping( method = { RequestMethod.PUT, RequestMethod.POST }, value = \"/{id}/invalidation\" ) public void markPotentialDuplicateInvalid(\n        @PathVariable String id\n    )", "class_method_signature": "DeduplicationController.markPotentialDuplicateInvalid(\n        @PathVariable String id\n    )", "testcase": false, "constructor": false}, {"identifier": "deletePotentialDuplicate", "parameters": "(\n        @PathVariable String id\n    )", "modifiers": "@DeleteMapping( value = \"/{id}\" ) public", "return": "void", "signature": "void deletePotentialDuplicate(\n        @PathVariable String id\n    )", "full_signature": "@DeleteMapping( value = \"/{id}\" ) public void deletePotentialDuplicate(\n        @PathVariable String id\n    )", "class_method_signature": "DeduplicationController.deletePotentialDuplicate(\n        @PathVariable String id\n    )", "testcase": false, "constructor": false}, {"identifier": "validatePotentialDuplicate", "parameters": "( PotentialDuplicate potentialDuplicate )", "modifiers": "private", "return": "void", "signature": "void validatePotentialDuplicate( PotentialDuplicate potentialDuplicate )", "full_signature": "private void validatePotentialDuplicate( PotentialDuplicate potentialDuplicate )", "class_method_signature": "DeduplicationController.validatePotentialDuplicate( PotentialDuplicate potentialDuplicate )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-web/dhis-web-api/src/main/java/org/hisp/dhis/webapi/controller/DeduplicationController.java"}, "focal_method": {"identifier": "getPotentialDuplicate", "parameters": "(\n        @PathVariable String id\n    )", "modifiers": "@GetMapping( value = \"/{id}\" ) public", "return": "PotentialDuplicate", "body": "@GetMapping( value = \"/{id}\" )\n    public PotentialDuplicate getPotentialDuplicate(\n        @PathVariable String id\n    )\n        throws WebMessageException\n    {\n        PotentialDuplicate potentialDuplicate = deduplicationService.getPotentialDuplicateByUid( id );\n\n        if ( potentialDuplicate == null )\n        {\n            throw new WebMessageException( notFound( \"No potentialDuplicate records found with id '\" + id + \"'.\" ) );\n        }\n\n        return potentialDuplicate;\n    }", "signature": "PotentialDuplicate getPotentialDuplicate(\n        @PathVariable String id\n    )", "full_signature": "@GetMapping( value = \"/{id}\" ) public PotentialDuplicate getPotentialDuplicate(\n        @PathVariable String id\n    )", "class_method_signature": "DeduplicationController.getPotentialDuplicate(\n        @PathVariable String id\n    )", "testcase": false, "constructor": false, "invocations": ["getPotentialDuplicateByUid", "notFound"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}