{"test_class": {"identifier": "TracingListPresenterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    TracingService tracingService;", "modifier": "@Mock", "type": "TracingService", "declarator": "tracingService", "var_name": "tracingService"}, {"original_string": "@Mock\n    TracingFormService tracingFormService;", "modifier": "@Mock", "type": "TracingFormService", "declarator": "tracingFormService", "var_name": "tracingFormService"}, {"original_string": "@InjectMocks\n    TracingListPresenter tracingListPresenter;", "modifier": "@InjectMocks", "type": "TracingListPresenter", "declarator": "tracingListPresenter", "var_name": "tracingListPresenter"}], "file": "app/src/test/java/org/unicef/rapidreg/tracing/tracinglist/TracingListPresenterTest.java"}, "test_case": {"identifier": "should_return_true_if_tracing_form_is_ready", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_return_true_if_tracing_form_is_ready() throws Exception {\n        when(tracingFormService.isReady()).thenReturn(true);\n\n        assertThat(\"Should return true if tracing form is ready\", tracingListPresenter\n                .isFormReady(), is(true));\n    }", "signature": "void should_return_true_if_tracing_form_is_ready()", "full_signature": "@Test public void should_return_true_if_tracing_form_is_ready()", "class_method_signature": "TracingListPresenterTest.should_return_true_if_tracing_form_is_ready()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "isReady", "assertThat", "isFormReady", "is"]}, "focal_class": {"identifier": "TracingListPresenter", "superclass": "extends RecordListPresenter", "interfaces": "", "fields": [{"original_string": "private TracingService tracingService;", "modifier": "private", "type": "TracingService", "declarator": "tracingService", "var_name": "tracingService"}, {"original_string": "private TracingFormService tracingFormService;", "modifier": "private", "type": "TracingFormService", "declarator": "tracingFormService", "var_name": "tracingFormService"}], "methods": [{"identifier": "TracingListPresenter", "parameters": "(TracingService tracingService, TracingFormService tracingFormService, RecordService recordService)", "modifiers": "@Inject public", "return": "", "signature": " TracingListPresenter(TracingService tracingService, TracingFormService tracingFormService, RecordService recordService)", "full_signature": "@Inject public  TracingListPresenter(TracingService tracingService, TracingFormService tracingFormService, RecordService recordService)", "class_method_signature": "TracingListPresenter.TracingListPresenter(TracingService tracingService, TracingFormService tracingFormService, RecordService recordService)", "testcase": false, "constructor": true}, {"identifier": "isFormReady", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isFormReady()", "full_signature": "@Override public boolean isFormReady()", "class_method_signature": "TracingListPresenter.isFormReady()", "testcase": false, "constructor": false}, {"identifier": "calculateDisplayedIndex", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int calculateDisplayedIndex()", "full_signature": "@Override public int calculateDisplayedIndex()", "class_method_signature": "TracingListPresenter.calculateDisplayedIndex()", "testcase": false, "constructor": false}, {"identifier": "getRecordsByFilter", "parameters": "(SpinnerState spinnerState)", "modifiers": "@Override public", "return": "List<Long>", "signature": "List<Long> getRecordsByFilter(SpinnerState spinnerState)", "full_signature": "@Override public List<Long> getRecordsByFilter(SpinnerState spinnerState)", "class_method_signature": "TracingListPresenter.getRecordsByFilter(SpinnerState spinnerState)", "testcase": false, "constructor": false}, {"identifier": "getSyncedRecords", "parameters": "()", "modifiers": "@Override public", "return": "List<Long>", "signature": "List<Long> getSyncedRecords()", "full_signature": "@Override public List<Long> getSyncedRecords()", "class_method_signature": "TracingListPresenter.getSyncedRecords()", "testcase": false, "constructor": false}, {"identifier": "getSyncedRecordsCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSyncedRecordsCount()", "full_signature": "@Override public int getSyncedRecordsCount()", "class_method_signature": "TracingListPresenter.getSyncedRecordsCount()", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/unicef/rapidreg/tracing/tracinglist/TracingListPresenter.java"}, "focal_method": {"identifier": "isFormReady", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isFormReady() {\n        return tracingFormService.isReady();\n    }", "signature": "boolean isFormReady()", "full_signature": "@Override public boolean isFormReady()", "class_method_signature": "TracingListPresenter.isFormReady()", "testcase": false, "constructor": false, "invocations": ["isReady"]}, "repository": {"repo_id": 59507570, "url": "https://github.com/UnicefNY/RapidReg", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 10753, "license": "Other"}}