{"test_class": {"identifier": "CorruptionRiskDashboardIndicatorsStatsControllerTest", "superclass": "extends AbstractEndPointControllerTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private CorruptionRiskDashboardIndicatorsStatsController corruptionRiskDashboardIndicatorsStatsController;", "modifier": "@Autowired\n    private", "type": "CorruptionRiskDashboardIndicatorsStatsController", "declarator": "corruptionRiskDashboardIndicatorsStatsController", "var_name": "corruptionRiskDashboardIndicatorsStatsController"}, {"original_string": "@Autowired\n    private ReleaseFlaggingService releaseFlaggingService;", "modifier": "@Autowired\n    private", "type": "ReleaseFlaggingService", "declarator": "releaseFlaggingService", "var_name": "releaseFlaggingService"}, {"original_string": "@Autowired\n    private FlaggedReleaseRepository releaseRepository;", "modifier": "@Autowired\n    private", "type": "FlaggedReleaseRepository", "declarator": "releaseRepository", "var_name": "releaseRepository"}, {"original_string": "@Autowired\n    private ObjectMapper objectMapper;", "modifier": "@Autowired\n    private", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}], "file": "web/src/test/java/org/devgateway/ocds/web/rest/controller/CorruptionRiskDashboardIndicatorsStatsControllerTest.java"}, "test_case": {"identifier": "totalProjectsByYearTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void totalProjectsByYearTest() throws Exception {\n        final List<Document> result = corruptionRiskDashboardIndicatorsStatsController\n                .totalProjectsByYear(new YearFilterPagingRequest());\n        Assert.assertEquals(2, result.size());\n\n        Assert.assertEquals(2014, result.get(0).get(CorruptionRiskDashboardIndicatorsStatsController.Keys.YEAR));\n        Assert.assertEquals(1, result.get(0).get(CorruptionRiskDashboardIndicatorsStatsController.Keys.PROJECT_COUNT));\n\n        Assert.assertEquals(2015, result.get(1).get(CorruptionRiskDashboardIndicatorsStatsController.Keys.YEAR));\n        Assert.assertEquals(2, result.get(1).get(CorruptionRiskDashboardIndicatorsStatsController.Keys.PROJECT_COUNT));\n    }", "signature": "void totalProjectsByYearTest()", "full_signature": "@Test public void totalProjectsByYearTest()", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsControllerTest.totalProjectsByYearTest()", "testcase": true, "constructor": false, "invocations": ["totalProjectsByYear", "assertEquals", "size", "assertEquals", "get", "get", "assertEquals", "get", "get", "assertEquals", "get", "get", "assertEquals", "get", "get"]}, "focal_class": {"identifier": "CorruptionRiskDashboardIndicatorsStatsController", "superclass": "extends GenericOCDSController", "interfaces": "", "fields": [{"original_string": "private static final String ELIGIBLE_STATS = \"eligibleStats\";", "modifier": "private static final", "type": "String", "declarator": "ELIGIBLE_STATS = \"eligibleStats\"", "var_name": "ELIGIBLE_STATS"}, {"original_string": "private static final String FLAGGED_STATS = \"flaggedStats\";", "modifier": "private static final", "type": "String", "declarator": "FLAGGED_STATS = \"flaggedStats\"", "var_name": "FLAGGED_STATS"}], "methods": [{"identifier": "totalFlaggedIndicatorsByIndicatorType", "parameters": "(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Counts the indicators flagged, and groups them by indicator type. \" + \"An indicator that has two types it will be counted twice, once in each group.\") @RequestMapping(value = \"/api/totalFlaggedIndicatorsByIndicatorType\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> totalFlaggedIndicatorsByIndicatorType(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Counts the indicators flagged, and groups them by indicator type. \" + \"An indicator that has two types it will be counted twice, once in each group.\") @RequestMapping(value = \"/api/totalFlaggedIndicatorsByIndicatorType\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> totalFlaggedIndicatorsByIndicatorType(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsController.totalFlaggedIndicatorsByIndicatorType(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "totalEligibleIndicatorsByIndicatorType", "parameters": "(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Counts the indicators eligible, and groups them by indicator type. \" + \"An indicator that has two types it will be counted twice, once in each group.\") @RequestMapping(value = \"/api/totalEligibleIndicatorsByIndicatorType\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> totalEligibleIndicatorsByIndicatorType(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Counts the indicators eligible, and groups them by indicator type. \" + \"An indicator that has two types it will be counted twice, once in each group.\") @RequestMapping(value = \"/api/totalEligibleIndicatorsByIndicatorType\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> totalEligibleIndicatorsByIndicatorType(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsController.totalEligibleIndicatorsByIndicatorType(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "totalFlags", "parameters": "(final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Counts the indicators that are flagged, across all releases. If one \" + \"indicator has multiple types is only counted once, so this is different from flaggedStats and \" + \"cannot be reproduced by just summing up all types in flaggedStats!\") @RequestMapping(value = \"/api/totalFlags\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> totalFlags(final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Counts the indicators that are flagged, across all releases. If one \" + \"indicator has multiple types is only counted once, so this is different from flaggedStats and \" + \"cannot be reproduced by just summing up all types in flaggedStats!\") @RequestMapping(value = \"/api/totalFlags\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> totalFlags(final YearFilterPagingRequest filter)", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsController.totalFlags(final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "totalIndicatorsByIndicatorType", "parameters": "(String statsProperty,\n                                                          final YearFilterPagingRequest filter)", "modifiers": "private", "return": "List<Document>", "signature": "List<Document> totalIndicatorsByIndicatorType(String statsProperty,\n                                                          final YearFilterPagingRequest filter)", "full_signature": "private List<Document> totalIndicatorsByIndicatorType(String statsProperty,\n                                                          final YearFilterPagingRequest filter)", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsController.totalIndicatorsByIndicatorType(String statsProperty,\n                                                          final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "totalFlaggedIndicatorsByIndicatorTypeByYear", "parameters": "(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Counts the indicators flagged, and groups them by indicator type and by year/month. \" + \"An indicator that has two types it will be counted twice, once in each group.\") @RequestMapping(value = \"/api/totalFlaggedIndicatorsByIndicatorTypeByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> totalFlaggedIndicatorsByIndicatorTypeByYear(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Counts the indicators flagged, and groups them by indicator type and by year/month. \" + \"An indicator that has two types it will be counted twice, once in each group.\") @RequestMapping(value = \"/api/totalFlaggedIndicatorsByIndicatorTypeByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> totalFlaggedIndicatorsByIndicatorTypeByYear(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsController.totalFlaggedIndicatorsByIndicatorTypeByYear(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "totalEligibleIndicatorsByIndicatorTypeByYear", "parameters": "(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Counts the indicators eligible, and groups them by indicator type and by year/month. \" + \"An indicator that has two types it will be counted twice, once in each group.\") @RequestMapping(value = \"/api/totalEligibleIndicatorsByIndicatorTypeByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> totalEligibleIndicatorsByIndicatorTypeByYear(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Counts the indicators eligible, and groups them by indicator type and by year/month. \" + \"An indicator that has two types it will be counted twice, once in each group.\") @RequestMapping(value = \"/api/totalEligibleIndicatorsByIndicatorTypeByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> totalEligibleIndicatorsByIndicatorTypeByYear(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsController.totalEligibleIndicatorsByIndicatorTypeByYear(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "totalIndicatorsByIndicatorTypeByYear", "parameters": "(String statsProperty,\n                                                                final YearFilterPagingRequest filter)", "modifiers": "private", "return": "List<Document>", "signature": "List<Document> totalIndicatorsByIndicatorTypeByYear(String statsProperty,\n                                                                final YearFilterPagingRequest filter)", "full_signature": "private List<Document> totalIndicatorsByIndicatorTypeByYear(String statsProperty,\n                                                                final YearFilterPagingRequest filter)", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsController.totalIndicatorsByIndicatorTypeByYear(String statsProperty,\n                                                                final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "totalFlaggedProjectsByIndicatorTypeByYear", "parameters": "(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Counts the projects and the indicators flagged, grouped by indicator type. \" + \"The 'count' represents the number of indicators flagged, the 'projectCount' represents the number\" + \" of projects flagged.\") @RequestMapping(value = \"/api/totalFlaggedProjectsByIndicatorTypeByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> totalFlaggedProjectsByIndicatorTypeByYear(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Counts the projects and the indicators flagged, grouped by indicator type. \" + \"The 'count' represents the number of indicators flagged, the 'projectCount' represents the number\" + \" of projects flagged.\") @RequestMapping(value = \"/api/totalFlaggedProjectsByIndicatorTypeByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> totalFlaggedProjectsByIndicatorTypeByYear(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsController.totalFlaggedProjectsByIndicatorTypeByYear(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "totalEligibleProjectsByIndicatorTypeByYear", "parameters": "(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Counts the projects and the indicators eligible, grouped by indicator type. \" + \"The 'count' represents the number of indicators eligible, the 'projectCount' represents the number\" + \" of projects eligible.\") @RequestMapping(value = \"/api/totalEligibleProjectsByIndicatorTypeByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> totalEligibleProjectsByIndicatorTypeByYear(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Counts the projects and the indicators eligible, grouped by indicator type. \" + \"The 'count' represents the number of indicators eligible, the 'projectCount' represents the number\" + \" of projects eligible.\") @RequestMapping(value = \"/api/totalEligibleProjectsByIndicatorTypeByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> totalEligibleProjectsByIndicatorTypeByYear(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsController.totalEligibleProjectsByIndicatorTypeByYear(\n            @ModelAttribute @Valid final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "totalProjectsByIndicatorTypeByYear", "parameters": "(String statsProperty,\n                                                              final YearFilterPagingRequest filter)", "modifiers": "private", "return": "List<Document>", "signature": "List<Document> totalProjectsByIndicatorTypeByYear(String statsProperty,\n                                                              final YearFilterPagingRequest filter)", "full_signature": "private List<Document> totalProjectsByIndicatorTypeByYear(String statsProperty,\n                                                              final YearFilterPagingRequest filter)", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsController.totalProjectsByIndicatorTypeByYear(String statsProperty,\n                                                              final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "totalProjectsByYear", "parameters": "(final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Count total projects by year/month.\") @RequestMapping(value = \"/api/totalProjectsByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> totalProjectsByYear(final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Count total projects by year/month.\") @RequestMapping(value = \"/api/totalProjectsByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> totalProjectsByYear(final YearFilterPagingRequest filter)", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsController.totalProjectsByYear(final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "findByYearAndTypeAndMonth", "parameters": "(List<Document> source, Integer year, String type, Integer month)", "modifiers": "private", "return": "List<Document>", "signature": "List<Document> findByYearAndTypeAndMonth(List<Document> source, Integer year, String type, Integer month)", "full_signature": "private List<Document> findByYearAndTypeAndMonth(List<Document> source, Integer year, String type, Integer month)", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsController.findByYearAndTypeAndMonth(List<Document> source, Integer year, String type, Integer month)", "testcase": false, "constructor": false}, {"identifier": "percentTotalProjectsFlaggedByYear", "parameters": "(final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Percent of total projects flagged (denominator is total projects)\") @RequestMapping(value = \"/api/percentTotalProjectsFlaggedByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> percentTotalProjectsFlaggedByYear(final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Percent of total projects flagged (denominator is total projects)\") @RequestMapping(value = \"/api/percentTotalProjectsFlaggedByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> percentTotalProjectsFlaggedByYear(final YearFilterPagingRequest filter)", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsController.percentTotalProjectsFlaggedByYear(final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "percentTotalProjectsEligibleByYear", "parameters": "(final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Percent of total projects eligible (denominator is total projects)\") @RequestMapping(value = \"/api/percentTotalProjectsEligibleByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> percentTotalProjectsEligibleByYear(final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Percent of total projects eligible (denominator is total projects)\") @RequestMapping(value = \"/api/percentTotalProjectsEligibleByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> percentTotalProjectsEligibleByYear(final YearFilterPagingRequest filter)", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsController.percentTotalProjectsEligibleByYear(final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}, {"identifier": "percentOfEligibleProjectsFlaggedByYear", "parameters": "(final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Percent of eligible projects flagged (denominator is number of eligible projects)\") @RequestMapping(value = \"/api/percentOfEligibleProjectsFlaggedByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "signature": "List<Document> percentOfEligibleProjectsFlaggedByYear(final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Percent of eligible projects flagged (denominator is number of eligible projects)\") @RequestMapping(value = \"/api/percentOfEligibleProjectsFlaggedByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> percentOfEligibleProjectsFlaggedByYear(final YearFilterPagingRequest filter)", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsController.percentOfEligibleProjectsFlaggedByYear(final YearFilterPagingRequest filter)", "testcase": false, "constructor": false}], "file": "web/src/main/java/org/devgateway/ocds/web/rest/controller/CorruptionRiskDashboardIndicatorsStatsController.java"}, "focal_method": {"identifier": "totalProjectsByYear", "parameters": "(final YearFilterPagingRequest filter)", "modifiers": "@ApiOperation(value = \"Count total projects by year/month.\") @RequestMapping(value = \"/api/totalProjectsByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public", "return": "List<Document>", "body": "@ApiOperation(value = \"Count total projects by year/month.\")\n    @RequestMapping(value = \"/api/totalProjectsByYear\",\n            method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\")\n    public List<Document> totalProjectsByYear(final YearFilterPagingRequest filter) {\n\n        DBObject project1 = new BasicDBObject();\n        addYearlyMonthlyProjection(filter, project1, ref(MongoConstants.FieldNames.TENDER_PERIOD_START_DATE));\n        project1.put(Fields.UNDERSCORE_ID, 0);\n\n        Aggregation agg = newAggregation(\n                match(where(MongoConstants.FieldNames.TENDER_PERIOD_START_DATE).exists(true).\n                        andOperator(getYearDefaultFilterCriteria(filter,\n                                MongoConstants.FieldNames.TENDER_PERIOD_START_DATE))),\n                new CustomProjectionOperation(project1),\n                group(getYearlyMonthlyGroupingFields(filter)).\n                        count().as(Keys.PROJECT_COUNT),\n                transformYearlyGrouping(filter).andInclude(Keys.PROJECT_COUNT),\n                getSortByYearMonth(filter)\n        );\n\n       return releaseAgg(agg);\n    }", "signature": "List<Document> totalProjectsByYear(final YearFilterPagingRequest filter)", "full_signature": "@ApiOperation(value = \"Count total projects by year/month.\") @RequestMapping(value = \"/api/totalProjectsByYear\", method = {RequestMethod.POST, RequestMethod.GET}, produces = \"application/json\") public List<Document> totalProjectsByYear(final YearFilterPagingRequest filter)", "class_method_signature": "CorruptionRiskDashboardIndicatorsStatsController.totalProjectsByYear(final YearFilterPagingRequest filter)", "testcase": false, "constructor": false, "invocations": ["addYearlyMonthlyProjection", "ref", "put", "newAggregation", "match", "andOperator", "exists", "where", "getYearDefaultFilterCriteria", "as", "count", "group", "getYearlyMonthlyGroupingFields", "andInclude", "transformYearlyGrouping", "getSortByYearMonth", "releaseAgg"]}, "repository": {"repo_id": 59118773, "url": "https://github.com/devgateway/oc-explorer", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 9004, "license": "licensed"}}