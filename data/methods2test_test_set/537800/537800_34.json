{"test_class": {"identifier": "BufferPoolMetricSetTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final MBeanServer mBeanServer = mock(MBeanServer.class);", "modifier": "private final", "type": "MBeanServer", "declarator": "mBeanServer = mock(MBeanServer.class)", "var_name": "mBeanServer"}, {"original_string": "private final BufferPoolMetricSet buffers = new BufferPoolMetricSet(mBeanServer);", "modifier": "private final", "type": "BufferPoolMetricSet", "declarator": "buffers = new BufferPoolMetricSet(mBeanServer)", "var_name": "buffers"}, {"original_string": "private ObjectName mapped;", "modifier": "private", "type": "ObjectName", "declarator": "mapped", "var_name": "mapped"}, {"original_string": "private ObjectName direct;", "modifier": "private", "type": "ObjectName", "declarator": "direct", "var_name": "direct"}], "file": "metrics-jvm/src/test/java/com/codahale/metrics/jvm/BufferPoolMetricSetTest.java"}, "test_case": {"identifier": "includesAGaugeForDirectMemoryUsed", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void includesAGaugeForDirectMemoryUsed() throws Exception {\n        final Gauge gauge = (Gauge) buffers.getMetrics().get(\"direct.used\");\n\n        when(mBeanServer.getAttribute(direct, \"MemoryUsed\")).thenReturn(100);\n\n        assertThat(gauge.getValue())\n                .isEqualTo(100);\n    }", "signature": "void includesAGaugeForDirectMemoryUsed()", "full_signature": "@Test public void includesAGaugeForDirectMemoryUsed()", "class_method_signature": "BufferPoolMetricSetTest.includesAGaugeForDirectMemoryUsed()", "testcase": true, "constructor": false, "invocations": ["get", "getMetrics", "thenReturn", "when", "getAttribute", "isEqualTo", "assertThat", "getValue"]}, "focal_class": {"identifier": "BufferPoolMetricSet", "superclass": "", "interfaces": "implements MetricSet", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(BufferPoolMetricSet.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(BufferPoolMetricSet.class)", "var_name": "LOGGER"}, {"original_string": "private static final String[] ATTRIBUTES = {\"Count\", \"MemoryUsed\", \"TotalCapacity\"};", "modifier": "private static final", "type": "String[]", "declarator": "ATTRIBUTES = {\"Count\", \"MemoryUsed\", \"TotalCapacity\"}", "var_name": "ATTRIBUTES"}, {"original_string": "private static final String[] NAMES = {\"count\", \"used\", \"capacity\"};", "modifier": "private static final", "type": "String[]", "declarator": "NAMES = {\"count\", \"used\", \"capacity\"}", "var_name": "NAMES"}, {"original_string": "private static final String[] POOLS = {\"direct\", \"mapped\"};", "modifier": "private static final", "type": "String[]", "declarator": "POOLS = {\"direct\", \"mapped\"}", "var_name": "POOLS"}, {"original_string": "private final MBeanServer mBeanServer;", "modifier": "private final", "type": "MBeanServer", "declarator": "mBeanServer", "var_name": "mBeanServer"}], "methods": [{"identifier": "BufferPoolMetricSet", "parameters": "(MBeanServer mBeanServer)", "modifiers": "public", "return": "", "signature": " BufferPoolMetricSet(MBeanServer mBeanServer)", "full_signature": "public  BufferPoolMetricSet(MBeanServer mBeanServer)", "class_method_signature": "BufferPoolMetricSet.BufferPoolMetricSet(MBeanServer mBeanServer)", "testcase": false, "constructor": true}, {"identifier": "getMetrics", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Metric>", "signature": "Map<String, Metric> getMetrics()", "full_signature": "@Override public Map<String, Metric> getMetrics()", "class_method_signature": "BufferPoolMetricSet.getMetrics()", "testcase": false, "constructor": false}], "file": "metrics-jvm/src/main/java/com/codahale/metrics/jvm/BufferPoolMetricSet.java"}, "focal_method": {"identifier": "getMetrics", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Metric>", "body": "@Override\n    public Map<String, Metric> getMetrics() {\n        final Map<String, Metric> gauges = new HashMap<>();\n        for (String pool : POOLS) {\n            for (int i = 0; i < ATTRIBUTES.length; i++) {\n                final String attribute = ATTRIBUTES[i];\n                final String name = NAMES[i];\n                try {\n                    final ObjectName on = new ObjectName(\"java.nio:type=BufferPool,name=\" + pool);\n                    mBeanServer.getMBeanInfo(on);\n                    gauges.put(name(pool, name), new JmxAttributeGauge(mBeanServer, on, attribute));\n                } catch (JMException ignored) {\n                    LOGGER.debug(\"Unable to load buffer pool MBeans, possibly running on Java 6\");\n                }\n            }\n        }\n        return Collections.unmodifiableMap(gauges);\n    }", "signature": "Map<String, Metric> getMetrics()", "full_signature": "@Override public Map<String, Metric> getMetrics()", "class_method_signature": "BufferPoolMetricSet.getMetrics()", "testcase": false, "constructor": false, "invocations": ["getMBeanInfo", "put", "name", "debug", "unmodifiableMap"]}, "repository": {"repo_id": 537800, "url": "https://github.com/dropwizard/metrics", "stars": 6879, "created": "2/26/2010 7:44:42 PM +00:00", "updates": "2020-01-26T22:33:14+00:00", "fork": "False", "license": "licensed"}}