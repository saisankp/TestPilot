{"test_class": {"identifier": "ExcelFieldServiceTest", "superclass": "", "interfaces": "", "fields": [], "file": "persistence/src/test/java/org/devgateway/toolkit/persistence/excel/ExcelFieldServiceTest.java"}, "test_case": {"identifier": "getObjectID", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getObjectID() throws Exception {\n        final OtherClass otherClass = new OtherClass();\n        Assert.assertEquals(\"Check object ID\", Long.valueOf(-1), ExcelFieldService.getObjectID(otherClass));\n\n        final TestClass testclass = new TestClass((long) 10);\n        Assert.assertEquals(\"Check object ID\", Long.valueOf(10), ExcelFieldService.getObjectID(testclass));\n    }", "signature": "void getObjectID()", "full_signature": "@Test public void getObjectID()", "class_method_signature": "ExcelFieldServiceTest.getObjectID()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "valueOf", "getObjectID", "assertEquals", "valueOf", "getObjectID"]}, "focal_class": {"identifier": "ExcelFieldService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ExcelFieldService.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ExcelFieldService.class)", "var_name": "logger"}, {"original_string": "private static Map<Field, FieldType> fieldsTypeCache;", "modifier": "private static", "type": "Map<Field, FieldType>", "declarator": "fieldsTypeCache", "var_name": "fieldsTypeCache"}, {"original_string": "private static Map<Field, Class> fieldsClassCache;", "modifier": "private static", "type": "Map<Field, Class>", "declarator": "fieldsClassCache", "var_name": "fieldsClassCache"}, {"original_string": "private static Map<Class, List<Field>> fieldsCache;", "modifier": "private static", "type": "Map<Class, List<Field>>", "declarator": "fieldsCache", "var_name": "fieldsCache"}], "methods": [{"identifier": "ExcelFieldService", "parameters": "()", "modifiers": "private", "return": "", "signature": " ExcelFieldService()", "full_signature": "private  ExcelFieldService()", "class_method_signature": "ExcelFieldService.ExcelFieldService()", "testcase": false, "constructor": true}, {"identifier": "getFieldType", "parameters": "(final Field field)", "modifiers": "public static", "return": "FieldType", "signature": "FieldType getFieldType(final Field field)", "full_signature": "public static FieldType getFieldType(final Field field)", "class_method_signature": "ExcelFieldService.getFieldType(final Field field)", "testcase": false, "constructor": false}, {"identifier": "getFieldClass", "parameters": "(final Field field)", "modifiers": "public static", "return": "Class", "signature": "Class getFieldClass(final Field field)", "full_signature": "public static Class getFieldClass(final Field field)", "class_method_signature": "ExcelFieldService.getFieldClass(final Field field)", "testcase": false, "constructor": false}, {"identifier": "getFields", "parameters": "(final Class clazz)", "modifiers": "public static", "return": "Iterator<Field>", "signature": "Iterator<Field> getFields(final Class clazz)", "full_signature": "public static Iterator<Field> getFields(final Class clazz)", "class_method_signature": "ExcelFieldService.getFields(final Class clazz)", "testcase": false, "constructor": false}, {"identifier": "getObjectID", "parameters": "(final Object object)", "modifiers": "public static", "return": "Long", "signature": "Long getObjectID(final Object object)", "full_signature": "public static Long getObjectID(final Object object)", "class_method_signature": "ExcelFieldService.getObjectID(final Object object)", "testcase": false, "constructor": false}, {"identifier": "getFieldName", "parameters": "(final Class clazz, final Field field, final TranslateService translateService)", "modifiers": "public static", "return": "String", "signature": "String getFieldName(final Class clazz, final Field field, final TranslateService translateService)", "full_signature": "public static String getFieldName(final Class clazz, final Field field, final TranslateService translateService)", "class_method_signature": "ExcelFieldService.getFieldName(final Class clazz, final Field field, final TranslateService translateService)", "testcase": false, "constructor": false}, {"identifier": "getFieldClazz", "parameters": "(final Field field)", "modifiers": "public static", "return": "Class[]", "signature": "Class[] getFieldClazz(final Field field)", "full_signature": "public static Class[] getFieldClazz(final Field field)", "class_method_signature": "ExcelFieldService.getFieldClazz(final Field field)", "testcase": false, "constructor": false}, {"identifier": "isCollection", "parameters": "(final Field field)", "modifiers": "public static", "return": "Boolean", "signature": "Boolean isCollection(final Field field)", "full_signature": "public static Boolean isCollection(final Field field)", "class_method_signature": "ExcelFieldService.isCollection(final Field field)", "testcase": false, "constructor": false}], "file": "persistence/src/main/java/org/devgateway/toolkit/persistence/excel/ExcelFieldService.java"}, "focal_method": {"identifier": "getObjectID", "parameters": "(final Object object)", "modifiers": "public static", "return": "Long", "body": "public static Long getObjectID(final Object object) {\n        Long objectId = Long.valueOf(-1);\n\n        if (object == null || !(Persistable.class.isAssignableFrom(object.getClass()))) {\n            return Long.valueOf(-1);\n        }\n\n        try {\n            final Method idMethod = object.getClass().getMethod(\"getId\");\n            if (idMethod != null) {\n                objectId = (Long) idMethod.invoke(object);\n            }\n        } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {\n            logger.error(\"getObjectID error\", e);\n        }\n\n        return objectId;\n    }", "signature": "Long getObjectID(final Object object)", "full_signature": "public static Long getObjectID(final Object object)", "class_method_signature": "ExcelFieldService.getObjectID(final Object object)", "testcase": false, "constructor": false, "invocations": ["valueOf", "isAssignableFrom", "getClass", "valueOf", "getMethod", "getClass", "invoke", "error"]}, "repository": {"repo_id": 59118773, "url": "https://github.com/devgateway/oc-explorer", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 9004, "license": "licensed"}}