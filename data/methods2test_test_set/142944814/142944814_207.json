{"test_class": {"identifier": "ECDSAKeyTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "protected static final String PRIVATE_KEY = \"CSKko9uZtJA1C4kcEECTjgKfswn6dc9aShpsvS73jk9n\";", "modifier": "protected static final", "type": "String", "declarator": "PRIVATE_KEY = \"CSKko9uZtJA1C4kcEECTjgKfswn6dc9aShpsvS73jk9n\"", "var_name": "PRIVATE_KEY"}, {"original_string": "protected static final String MESSAGE = \"BhtkwAaxoHmjGCLp5GncvCR6AggBxRB4iRxTMGJbrVYz\";", "modifier": "protected static final", "type": "String", "declarator": "MESSAGE = \"BhtkwAaxoHmjGCLp5GncvCR6AggBxRB4iRxTMGJbrVYz\"", "var_name": "MESSAGE"}], "file": "core/util/src/test/java/hera/util/pki/ECDSAKeyTest.java"}, "test_case": {"identifier": "testVerify", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testVerify() throws Exception {\n    final ECDSAKey key =\n        new ECDSAKeyGenerator().create(new BigInteger(1, Base58Utils.decode(PRIVATE_KEY)));\n    final byte[] message = Base58Utils.decode(MESSAGE);\n    final ECDSASignature signature = new ECDSASignature(\n        new BigInteger(\n            \"112903116466171247254957852742074885675578841047850429300671823964741881940578\"),\n        new BigInteger(\n            \"48378612163565051950304976934001209911695304131357129876678389874012900275807\"));\n    assertTrue(key.verify(message, signature));\n  }", "signature": "void testVerify()", "full_signature": "@Test public void testVerify()", "class_method_signature": "ECDSAKeyTest.testVerify()", "testcase": true, "constructor": false, "invocations": ["create", "decode", "decode", "assertTrue", "verify"]}, "focal_class": {"identifier": "ECDSAKey", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected final transient Logger logger = getLogger(getClass());", "modifier": "protected final transient", "type": "Logger", "declarator": "logger = getLogger(getClass())", "var_name": "logger"}, {"original_string": "@Getter\n  protected final PrivateKey privateKey;", "modifier": "@Getter\n  protected final", "type": "PrivateKey", "declarator": "privateKey", "var_name": "privateKey"}, {"original_string": "@Getter\n  protected final PublicKey publicKey;", "modifier": "@Getter\n  protected final", "type": "PublicKey", "declarator": "publicKey", "var_name": "publicKey"}, {"original_string": "@Getter\n  protected final ECDomainParameters params;", "modifier": "@Getter\n  protected final", "type": "ECDomainParameters", "declarator": "params", "var_name": "params"}, {"original_string": "@Getter\n  protected final ECDSAVerifier verifier;", "modifier": "@Getter\n  protected final", "type": "ECDSAVerifier", "declarator": "verifier", "var_name": "verifier"}], "methods": [{"identifier": "of", "parameters": "(final PrivateKey privateKey, final PublicKey publicKey,\n      final ECDomainParameters ecParams)", "modifiers": "public static", "return": "ECDSAKey", "signature": "ECDSAKey of(final PrivateKey privateKey, final PublicKey publicKey,\n      final ECDomainParameters ecParams)", "full_signature": "public static ECDSAKey of(final PrivateKey privateKey, final PublicKey publicKey,\n      final ECDomainParameters ecParams)", "class_method_signature": "ECDSAKey.of(final PrivateKey privateKey, final PublicKey publicKey,\n      final ECDomainParameters ecParams)", "testcase": false, "constructor": false}, {"identifier": "ECDSAKey", "parameters": "(final PrivateKey privateKey, final PublicKey publicKey,\n      final ECDomainParameters ecParams)", "modifiers": "protected", "return": "", "signature": " ECDSAKey(final PrivateKey privateKey, final PublicKey publicKey,\n      final ECDomainParameters ecParams)", "full_signature": "protected  ECDSAKey(final PrivateKey privateKey, final PublicKey publicKey,\n      final ECDomainParameters ecParams)", "class_method_signature": "ECDSAKey.ECDSAKey(final PrivateKey privateKey, final PublicKey publicKey,\n      final ECDomainParameters ecParams)", "testcase": false, "constructor": true}, {"identifier": "sign", "parameters": "(final byte[] hashedMessage)", "modifiers": "public", "return": "ECDSASignature", "signature": "ECDSASignature sign(final byte[] hashedMessage)", "full_signature": "public ECDSASignature sign(final byte[] hashedMessage)", "class_method_signature": "ECDSAKey.sign(final byte[] hashedMessage)", "testcase": false, "constructor": false}, {"identifier": "sign", "parameters": "(final PrivateKey privateKey, final byte[] message)", "modifiers": "protected", "return": "ECDSASignature", "signature": "ECDSASignature sign(final PrivateKey privateKey, final byte[] message)", "full_signature": "protected ECDSASignature sign(final PrivateKey privateKey, final byte[] message)", "class_method_signature": "ECDSAKey.sign(final PrivateKey privateKey, final byte[] message)", "testcase": false, "constructor": false}, {"identifier": "verify", "parameters": "(final byte[] hashedMessage, final ECDSASignature signature)", "modifiers": "public", "return": "boolean", "signature": "boolean verify(final byte[] hashedMessage, final ECDSASignature signature)", "full_signature": "public boolean verify(final byte[] hashedMessage, final ECDSASignature signature)", "class_method_signature": "ECDSAKey.verify(final byte[] hashedMessage, final ECDSASignature signature)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ECDSAKey.toString()", "testcase": false, "constructor": false}], "file": "core/util/src/main/java/hera/util/pki/ECDSAKey.java"}, "focal_method": {"identifier": "verify", "parameters": "(final byte[] hashedMessage, final ECDSASignature signature)", "modifiers": "public", "return": "boolean", "body": "public boolean verify(final byte[] hashedMessage, final ECDSASignature signature) {\n    try {\n      return verifier.verify(getPublicKey(), hashedMessage, signature);\n    } catch (final Throwable e) {\n      throw new IllegalStateException(e);\n    }\n  }", "signature": "boolean verify(final byte[] hashedMessage, final ECDSASignature signature)", "full_signature": "public boolean verify(final byte[] hashedMessage, final ECDSASignature signature)", "class_method_signature": "ECDSAKey.verify(final byte[] hashedMessage, final ECDSASignature signature)", "testcase": false, "constructor": false, "invocations": ["verify", "getPublicKey"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}