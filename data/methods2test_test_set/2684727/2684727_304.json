{"test_class": {"identifier": "CsvReportWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "CsvReportWriter writer;", "modifier": "", "type": "CsvReportWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "File outputFile = new File(\"csv.csv\");", "modifier": "", "type": "File", "declarator": "outputFile = new File(\"csv.csv\")", "var_name": "outputFile"}], "file": "app/src/test/java/co/smartreceipts/android/workers/reports/csv/CsvReportWriterTest.java"}, "test_case": {"identifier": "write", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void write() throws Exception {\n        final String csv = \"column1, column2, column3, column4,\\nhello, \u05e9\u05dc\u05d5\u05dd, \u043f\u0440\u0438\u0432\u0435\u0442, hello,\";\n        writer.write(csv);\n\n        try (BOMInputStream bomInputStream = new BOMInputStream(new FileInputStream(outputFile))) {\n            final String fileString = IOUtils.toString(bomInputStream, \"UTF-8\");\n            assertEquals(fileString, csv);\n            assertTrue(bomInputStream.hasBOM());\n        }\n    }", "signature": "void write()", "full_signature": "@Test public void write()", "class_method_signature": "CsvReportWriterTest.write()", "testcase": true, "constructor": false, "invocations": ["write", "toString", "assertEquals", "assertTrue", "hasBOM"]}, "focal_class": {"identifier": "CsvReportWriter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final File outputFile;", "modifier": "private final", "type": "File", "declarator": "outputFile", "var_name": "outputFile"}], "methods": [{"identifier": "CsvReportWriter", "parameters": "(@NonNull File outputFile)", "modifiers": "public", "return": "", "signature": " CsvReportWriter(@NonNull File outputFile)", "full_signature": "public  CsvReportWriter(@NonNull File outputFile)", "class_method_signature": "CsvReportWriter.CsvReportWriter(@NonNull File outputFile)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(@NonNull String csv)", "modifiers": "public", "return": "void", "signature": "void write(@NonNull String csv)", "full_signature": "public void write(@NonNull String csv)", "class_method_signature": "CsvReportWriter.write(@NonNull String csv)", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/workers/reports/csv/CsvReportWriter.java"}, "focal_method": {"identifier": "write", "parameters": "(@NonNull String csv)", "modifiers": "public", "return": "void", "body": "public void write(@NonNull String csv) throws IOException {\n        try (FileOutputStream fileOutputStream = new FileOutputStream(this.outputFile)) {\n            IOUtils.write(ByteOrderMark.UTF_8.getBytes(), fileOutputStream);\n            IOUtils.write(csv, fileOutputStream, \"UTF-8\");\n        }\n    }", "signature": "void write(@NonNull String csv)", "full_signature": "public void write(@NonNull String csv)", "class_method_signature": "CsvReportWriter.write(@NonNull String csv)", "testcase": false, "constructor": false, "invocations": ["write", "getBytes", "write"]}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}