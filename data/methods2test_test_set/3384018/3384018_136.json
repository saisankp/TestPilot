{"test_class": {"identifier": "TestURLEncodedUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int SWISS_GERMAN_HELLO [] = {\n        0x47, 0x72, 0xFC, 0x65, 0x7A, 0x69, 0x5F, 0x7A, 0xE4, 0x6D, 0xE4\n    };", "modifier": "private static final", "type": "int", "declarator": "SWISS_GERMAN_HELLO [] = {\n        0x47, 0x72, 0xFC, 0x65, 0x7A, 0x69, 0x5F, 0x7A, 0xE4, 0x6D, 0xE4\n    }", "var_name": "SWISS_GERMAN_HELLO"}, {"original_string": "private static final int RUSSIAN_HELLO [] = {\n        0x412, 0x441, 0x435, 0x43C, 0x5F, 0x43F, 0x440, 0x438,\n        0x432, 0x435, 0x442\n    };", "modifier": "private static final", "type": "int", "declarator": "RUSSIAN_HELLO [] = {\n        0x412, 0x441, 0x435, 0x43C, 0x5F, 0x43F, 0x440, 0x438,\n        0x432, 0x435, 0x442\n    }", "var_name": "RUSSIAN_HELLO"}], "file": "external_sources/httpclient-4.1.1/httpclient/src/test/java/org/apache/ogt/http/client/utils/TestURLEncodedUtils.java"}, "test_case": {"identifier": "testIsEncoded", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsEncoded () throws Exception {\n        final StringEntity entity = new StringEntity(\"...\", null);\n\n        entity.setContentType(URLEncodedUtils.CONTENT_TYPE);\n        Assert.assertTrue(URLEncodedUtils.isEncoded(entity));\n\n        entity.setContentType(URLEncodedUtils.CONTENT_TYPE + \"; charset=US-ASCII\");\n        Assert.assertTrue(URLEncodedUtils.isEncoded(entity));\n\n        entity.setContentType(\"text/test\");\n        Assert.assertFalse(URLEncodedUtils.isEncoded(entity));\n    }", "signature": "void testIsEncoded()", "full_signature": "@Test public void testIsEncoded()", "class_method_signature": "TestURLEncodedUtils.testIsEncoded()", "testcase": true, "constructor": false, "invocations": ["setContentType", "assertTrue", "isEncoded", "setContentType", "assertTrue", "isEncoded", "setContentType", "assertFalse", "isEncoded"]}, "focal_class": {"identifier": "URLEncodedUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String CONTENT_TYPE = \"application/x-www-form-urlencoded\";", "modifier": "public static final", "type": "String", "declarator": "CONTENT_TYPE = \"application/x-www-form-urlencoded\"", "var_name": "CONTENT_TYPE"}, {"original_string": "private static final String PARAMETER_SEPARATOR = \"&\";", "modifier": "private static final", "type": "String", "declarator": "PARAMETER_SEPARATOR = \"&\"", "var_name": "PARAMETER_SEPARATOR"}, {"original_string": "private static final String NAME_VALUE_SEPARATOR = \"=\";", "modifier": "private static final", "type": "String", "declarator": "NAME_VALUE_SEPARATOR = \"=\"", "var_name": "NAME_VALUE_SEPARATOR"}], "methods": [{"identifier": "parse", "parameters": "(final URI uri, final String encoding)", "modifiers": "public static", "return": "List <NameValuePair>", "signature": "List <NameValuePair> parse(final URI uri, final String encoding)", "full_signature": "public static List <NameValuePair> parse(final URI uri, final String encoding)", "class_method_signature": "URLEncodedUtils.parse(final URI uri, final String encoding)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(\n            final HttpEntity entity)", "modifiers": "public static", "return": "List <NameValuePair>", "signature": "List <NameValuePair> parse(\n            final HttpEntity entity)", "full_signature": "public static List <NameValuePair> parse(\n            final HttpEntity entity)", "class_method_signature": "URLEncodedUtils.parse(\n            final HttpEntity entity)", "testcase": false, "constructor": false}, {"identifier": "isEncoded", "parameters": "(final HttpEntity entity)", "modifiers": "public static", "return": "boolean", "signature": "boolean isEncoded(final HttpEntity entity)", "full_signature": "public static boolean isEncoded(final HttpEntity entity)", "class_method_signature": "URLEncodedUtils.isEncoded(final HttpEntity entity)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(\n            final List <NameValuePair> parameters,\n            final Scanner scanner,\n            final String encoding)", "modifiers": "public static", "return": "void", "signature": "void parse(\n            final List <NameValuePair> parameters,\n            final Scanner scanner,\n            final String encoding)", "full_signature": "public static void parse(\n            final List <NameValuePair> parameters,\n            final Scanner scanner,\n            final String encoding)", "class_method_signature": "URLEncodedUtils.parse(\n            final List <NameValuePair> parameters,\n            final Scanner scanner,\n            final String encoding)", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "(\n            final List <? extends NameValuePair> parameters,\n            final String encoding)", "modifiers": "public static", "return": "String", "signature": "String format(\n            final List <? extends NameValuePair> parameters,\n            final String encoding)", "full_signature": "public static String format(\n            final List <? extends NameValuePair> parameters,\n            final String encoding)", "class_method_signature": "URLEncodedUtils.format(\n            final List <? extends NameValuePair> parameters,\n            final String encoding)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(final String content, final String encoding)", "modifiers": "private static", "return": "String", "signature": "String decode(final String content, final String encoding)", "full_signature": "private static String decode(final String content, final String encoding)", "class_method_signature": "URLEncodedUtils.decode(final String content, final String encoding)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(final String content, final String encoding)", "modifiers": "private static", "return": "String", "signature": "String encode(final String content, final String encoding)", "full_signature": "private static String encode(final String content, final String encoding)", "class_method_signature": "URLEncodedUtils.encode(final String content, final String encoding)", "testcase": false, "constructor": false}], "file": "external_sources/httpclient-4.1.1/httpclient/src/main/java/org/apache/ogt/http/client/utils/URLEncodedUtils.java"}, "focal_method": {"identifier": "isEncoded", "parameters": "(final HttpEntity entity)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isEncoded (final HttpEntity entity) {\n        Header h = entity.getContentType();\n        if (h != null) {\n            HeaderElement[] elems = h.getElements();\n            if (elems.length > 0) {\n                String contentType = elems[0].getName();\n                return contentType.equalsIgnoreCase(CONTENT_TYPE);\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    }", "signature": "boolean isEncoded(final HttpEntity entity)", "full_signature": "public static boolean isEncoded(final HttpEntity entity)", "class_method_signature": "URLEncodedUtils.isEncoded(final HttpEntity entity)", "testcase": false, "constructor": false, "invocations": ["getContentType", "getElements", "getName", "equalsIgnoreCase"]}, "repository": {"repo_id": 3384018, "url": "https://github.com/f8full/open-bixi-gpstracker", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 2028, "license": "licensed"}}