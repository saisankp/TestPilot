{"test_class": {"identifier": "AuthorizableFacadeTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/jcrfacade/security/user/AuthorizableFacadeTest.java"}, "test_case": {"identifier": "testRORemoveProperty", "parameters": "()", "modifiers": "@Test(expected = ListenerReadOnlyException.class) public", "return": "void", "body": "@Test(expected = ListenerReadOnlyException.class)\n    public void testRORemoveProperty() throws Exception {\n        Authorizable delegate = mock(Authorizable.class);\n        AuthorizableFacade<Authorizable> facade = getFacade(delegate);\n        facade.removeProperty(\"\");\n    }", "signature": "void testRORemoveProperty()", "full_signature": "@Test(expected = ListenerReadOnlyException.class) public void testRORemoveProperty()", "class_method_signature": "AuthorizableFacadeTest.testRORemoveProperty()", "testcase": true, "constructor": false, "invocations": ["mock", "getFacade", "removeProperty"]}, "focal_class": {"identifier": "AuthorizableFacade", "superclass": "", "interfaces": "implements Authorizable", "fields": [{"original_string": "protected final @NotNull A delegate;", "modifier": "protected final @NotNull", "type": "A", "declarator": "delegate", "var_name": "delegate"}], "methods": [{"identifier": "AuthorizableFacade", "parameters": "(final @NotNull A delegate)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public", "return": "", "signature": " AuthorizableFacade(final @NotNull A delegate)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public  AuthorizableFacade(final @NotNull A delegate)", "class_method_signature": "AuthorizableFacade.AuthorizableFacade(final @NotNull A delegate)", "testcase": false, "constructor": true}, {"identifier": "ensureBestWrapper", "parameters": "(final @Nullable Authorizable authorizable)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public static @Nullable", "return": "Authorizable", "signature": "Authorizable ensureBestWrapper(final @Nullable Authorizable authorizable)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public static @Nullable Authorizable ensureBestWrapper(final @Nullable Authorizable authorizable)", "class_method_signature": "AuthorizableFacade.ensureBestWrapper(final @Nullable Authorizable authorizable)", "testcase": false, "constructor": false}, {"identifier": "getID", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getID()", "full_signature": "@Override public String getID()", "class_method_signature": "AuthorizableFacade.getID()", "testcase": false, "constructor": false}, {"identifier": "isGroup", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isGroup()", "full_signature": "@Override public boolean isGroup()", "class_method_signature": "AuthorizableFacade.isGroup()", "testcase": false, "constructor": false}, {"identifier": "getPrincipal", "parameters": "()", "modifiers": "@Override public", "return": "Principal", "signature": "Principal getPrincipal()", "full_signature": "@Override public Principal getPrincipal()", "class_method_signature": "AuthorizableFacade.getPrincipal()", "testcase": false, "constructor": false}, {"identifier": "getPropertyNames", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<String>", "signature": "Iterator<String> getPropertyNames()", "full_signature": "@Override public Iterator<String> getPropertyNames()", "class_method_signature": "AuthorizableFacade.getPropertyNames()", "testcase": false, "constructor": false}, {"identifier": "getPropertyNames", "parameters": "(final String relPath)", "modifiers": "@Override public", "return": "Iterator<String>", "signature": "Iterator<String> getPropertyNames(final String relPath)", "full_signature": "@Override public Iterator<String> getPropertyNames(final String relPath)", "class_method_signature": "AuthorizableFacade.getPropertyNames(final String relPath)", "testcase": false, "constructor": false}, {"identifier": "hasProperty", "parameters": "(final String relPath)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasProperty(final String relPath)", "full_signature": "@Override public boolean hasProperty(final String relPath)", "class_method_signature": "AuthorizableFacade.hasProperty(final String relPath)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(final String relPath)", "modifiers": "@Override public", "return": "Value[]", "signature": "Value[] getProperty(final String relPath)", "full_signature": "@Override public Value[] getProperty(final String relPath)", "class_method_signature": "AuthorizableFacade.getProperty(final String relPath)", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPath()", "full_signature": "@Override public String getPath()", "class_method_signature": "AuthorizableFacade.getPath()", "testcase": false, "constructor": false}, {"identifier": "declaredMemberOf", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Group>", "signature": "Iterator<Group> declaredMemberOf()", "full_signature": "@Override public Iterator<Group> declaredMemberOf()", "class_method_signature": "AuthorizableFacade.declaredMemberOf()", "testcase": false, "constructor": false}, {"identifier": "memberOf", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Group>", "signature": "Iterator<Group> memberOf()", "full_signature": "@Override public Iterator<Group> memberOf()", "class_method_signature": "AuthorizableFacade.memberOf()", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(final String relPath, final Value value)", "modifiers": "@Override public final", "return": "void", "signature": "void setProperty(final String relPath, final Value value)", "full_signature": "@Override public final void setProperty(final String relPath, final Value value)", "class_method_signature": "AuthorizableFacade.setProperty(final String relPath, final Value value)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(final String relPath, final Value[] value)", "modifiers": "@Override public final", "return": "void", "signature": "void setProperty(final String relPath, final Value[] value)", "full_signature": "@Override public final void setProperty(final String relPath, final Value[] value)", "class_method_signature": "AuthorizableFacade.setProperty(final String relPath, final Value[] value)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "()", "modifiers": "@Override public final", "return": "void", "signature": "void remove()", "full_signature": "@Override public final void remove()", "class_method_signature": "AuthorizableFacade.remove()", "testcase": false, "constructor": false}, {"identifier": "removeProperty", "parameters": "(final String relPath)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean removeProperty(final String relPath)", "full_signature": "@Override public final boolean removeProperty(final String relPath)", "class_method_signature": "AuthorizableFacade.removeProperty(final String relPath)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/jcrfacade/security/user/AuthorizableFacade.java"}, "focal_method": {"identifier": "removeProperty", "parameters": "(final String relPath)", "modifiers": "@Override public final", "return": "boolean", "body": "@Override\n    public final boolean removeProperty(final String relPath) throws RepositoryException {\n        throw new ListenerReadOnlyException();\n    }", "signature": "boolean removeProperty(final String relPath)", "full_signature": "@Override public final boolean removeProperty(final String relPath)", "class_method_signature": "AuthorizableFacade.removeProperty(final String relPath)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}