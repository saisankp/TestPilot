{"test_class": {"identifier": "BlueReaderTest", "superclass": "extends RobolectricTestWithConfig", "interfaces": "", "fields": [{"original_string": "private ByteArrayOutputStream _out;", "modifier": "private", "type": "ByteArrayOutputStream", "declarator": "_out", "var_name": "_out"}], "file": "app/src/test/java/com/eveningoutpost/dexdrip/Models/BlueReaderTest.java"}, "test_case": {"identifier": "isBlueReader_NoDevice", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isBlueReader_NoDevice() {\n        // :: Act\n        boolean isBlueReader = blueReader.isblueReader();\n\n        // :: Verify\n        assertThat(isBlueReader).isFalse();\n    }", "signature": "void isBlueReader_NoDevice()", "full_signature": "@Test public void isBlueReader_NoDevice()", "class_method_signature": "BlueReaderTest.isBlueReader_NoDevice()", "testcase": true, "constructor": false, "invocations": ["isblueReader", "isFalse", "assertThat"]}, "focal_class": {"identifier": "blueReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TAG = \"blueReader\";", "modifier": "private static final", "type": "String", "declarator": "TAG = \"blueReader\"", "var_name": "TAG"}, {"original_string": "private static final String BatLog=\"/BatteryLog.csv\";", "modifier": "private static final", "type": "String", "declarator": "BatLog=\"/BatteryLog.csv\"", "var_name": "BatLog"}, {"original_string": "private static int counterHibernated = 0;", "modifier": "private static", "type": "int", "declarator": "counterHibernated = 0", "var_name": "counterHibernated"}, {"original_string": "private static Matcher tempVers;", "modifier": "private static", "type": "Matcher", "declarator": "tempVers", "var_name": "tempVers"}, {"original_string": "private static final byte[] shutdown = new byte[]{0x6B};", "modifier": "private static final", "type": "byte[]", "declarator": "shutdown = new byte[]{0x6B}", "var_name": "shutdown"}, {"original_string": "private static final byte[] requestValue = new byte[]{0x6C};", "modifier": "private static final", "type": "byte[]", "declarator": "requestValue = new byte[]{0x6C}", "var_name": "requestValue"}, {"original_string": "private static final byte[] goHybernate = new byte[]{0x68};", "modifier": "private static final", "type": "byte[]", "declarator": "goHybernate = new byte[]{0x68}", "var_name": "goHybernate"}, {"original_string": "private static final byte[] restart = new byte[]{0x79};", "modifier": "private static final", "type": "byte[]", "declarator": "restart = new byte[]{0x79}", "var_name": "restart"}], "methods": [{"identifier": "isblueReader", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isblueReader()", "full_signature": "public static boolean isblueReader()", "class_method_signature": "blueReader.isblueReader()", "testcase": false, "constructor": false}, {"identifier": "decodeblueReaderPacket", "parameters": "(byte[] buffer, int len)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] decodeblueReaderPacket(byte[] buffer, int len)", "full_signature": "public static byte[] decodeblueReaderPacket(byte[] buffer, int len)", "class_method_signature": "blueReader.decodeblueReaderPacket(byte[] buffer, int len)", "testcase": false, "constructor": false}, {"identifier": "processNewTransmitterData", "parameters": "(TransmitterData transmitterData, long timestamp)", "modifiers": "private static synchronized", "return": "void", "signature": "void processNewTransmitterData(TransmitterData transmitterData, long timestamp)", "full_signature": "private static synchronized void processNewTransmitterData(TransmitterData transmitterData, long timestamp)", "class_method_signature": "blueReader.processNewTransmitterData(TransmitterData transmitterData, long timestamp)", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "()", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer initialize()", "full_signature": "public static ByteBuffer initialize()", "class_method_signature": "blueReader.initialize()", "testcase": false, "constructor": false}, {"identifier": "writeLog", "parameters": "(String logFile, String logLine)", "modifiers": "private static", "return": "void", "signature": "void writeLog(String logFile, String logLine)", "full_signature": "private static void writeLog(String logFile, String logLine)", "class_method_signature": "blueReader.writeLog(String logFile, String logLine)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/eveningoutpost/dexdrip/Models/blueReader.java"}, "focal_method": {"identifier": "isblueReader", "parameters": "()", "modifiers": "public static", "return": "boolean", "body": "public static boolean isblueReader() {\n        final ActiveBluetoothDevice activeBluetoothDevice = ActiveBluetoothDevice.first();\n        try {\n            return activeBluetoothDevice.name.contentEquals(\"blueReader\");\n        } catch (NullPointerException e) {\n            return false;\n        }\n    }", "signature": "boolean isblueReader()", "full_signature": "public static boolean isblueReader()", "class_method_signature": "blueReader.isblueReader()", "testcase": false, "constructor": false, "invocations": ["first", "contentEquals"]}, "repository": {"repo_id": 49717672, "url": "https://github.com/jamorham/xDrip-plus", "stars": 199, "created": "1/15/2016 12:31:22 PM +00:00", "updates": "2020-01-26T20:46:33+00:00", "fork": "False", "license": "licensed"}}