{"test_class": {"identifier": "PredictionRuleMapperGeneratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "kogito-codegen/src/test/java/org/kie/kogito/codegen/prediction/PredictionRuleMapperGeneratorTest.java"}, "test_case": {"identifier": "getPredictionRuleMapperSourceWithoutPackage", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void getPredictionRuleMapperSourceWithoutPackage() {\n        final String fullRuleName = \"FULL_RULE_NAME\";\n        String retrieved = PredictionRuleMapperGenerator.getPredictionRuleMapperSource(fullRuleName);\n        assertNotNull(retrieved);\n        String expected = String.format(\"public final static Model model = new %s();\", fullRuleName);\n        assertTrue(retrieved.contains(expected));\n    }", "signature": "void getPredictionRuleMapperSourceWithoutPackage()", "full_signature": "@Test void getPredictionRuleMapperSourceWithoutPackage()", "class_method_signature": "PredictionRuleMapperGeneratorTest.getPredictionRuleMapperSourceWithoutPackage()", "testcase": true, "constructor": false, "invocations": ["getPredictionRuleMapperSource", "assertNotNull", "format", "assertTrue", "contains"]}, "focal_class": {"identifier": "PredictionRuleMapperGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEMPLATE_JAVA = \"/class-templates/PMMLRuleMapperTemplate.java\";", "modifier": "private static final", "type": "String", "declarator": "TEMPLATE_JAVA = \"/class-templates/PMMLRuleMapperTemplate.java\"", "var_name": "TEMPLATE_JAVA"}], "methods": [{"identifier": "PredictionRuleMapperGenerator", "parameters": "()", "modifiers": "private", "return": "", "signature": " PredictionRuleMapperGenerator()", "full_signature": "private  PredictionRuleMapperGenerator()", "class_method_signature": "PredictionRuleMapperGenerator.PredictionRuleMapperGenerator()", "testcase": false, "constructor": true}, {"identifier": "getPredictionRuleMapperSource", "parameters": "(final String fullRuleName)", "modifiers": "public static", "return": "String", "signature": "String getPredictionRuleMapperSource(final String fullRuleName)", "full_signature": "public static String getPredictionRuleMapperSource(final String fullRuleName)", "class_method_signature": "PredictionRuleMapperGenerator.getPredictionRuleMapperSource(final String fullRuleName)", "testcase": false, "constructor": false}], "file": "kogito-codegen/src/main/java/org/kie/kogito/codegen/prediction/PredictionRuleMapperGenerator.java"}, "focal_method": {"identifier": "getPredictionRuleMapperSource", "parameters": "(final String fullRuleName)", "modifiers": "public static", "return": "String", "body": "public static String getPredictionRuleMapperSource(final String fullRuleName) {\n        final String packageName = fullRuleName.contains(\".\") ? fullRuleName.substring(0,\n                                                                                       fullRuleName.lastIndexOf('.')) : \"\";\n        CompilationUnit clazz =\n                StaticJavaParser.parse(PredictionRuleMapperGenerator.class.getResourceAsStream(TEMPLATE_JAVA)).clone();\n        if (!packageName.isEmpty()) {\n            clazz.setPackageDeclaration(packageName);\n        }\n        ClassOrInterfaceDeclaration typeDeclaration = (ClassOrInterfaceDeclaration) clazz.getTypes().get(0);\n        FieldDeclaration ruleNameField =\n                typeDeclaration.getFieldByName(\"model\").orElseThrow(() -> new RuntimeException(\"The template \" + TEMPLATE_JAVA + \" has been modified.\"));\n        ObjectCreationExpr objectCreationExpr = new ObjectCreationExpr();\n        objectCreationExpr.setType(fullRuleName);\n        ruleNameField.getVariables().get(0).setInitializer(objectCreationExpr);\n        return clazz.toString();\n    }", "signature": "String getPredictionRuleMapperSource(final String fullRuleName)", "full_signature": "public static String getPredictionRuleMapperSource(final String fullRuleName)", "class_method_signature": "PredictionRuleMapperGenerator.getPredictionRuleMapperSource(final String fullRuleName)", "testcase": false, "constructor": false, "invocations": ["contains", "substring", "lastIndexOf", "clone", "parse", "getResourceAsStream", "isEmpty", "setPackageDeclaration", "get", "getTypes", "orElseThrow", "getFieldByName", "setType", "setInitializer", "get", "getVariables", "toString"]}, "repository": {"repo_id": 174306645, "url": "https://github.com/kiegroup/kogito-runtimes", "stars": 78, "created": "3/7/2019 8:49:09 AM +00:00", "updates": "2020-01-26T20:41:49+00:00", "fork": "False", "license": "licensed"}}