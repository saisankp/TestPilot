{"test_class": {"identifier": "DeploymentServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource(name = \"alien-monitor-es-dao\")\n    private IGenericSearchDAO alienMonitorDao;", "modifier": "@Resource(name = \"alien-monitor-es-dao\")\n    private", "type": "IGenericSearchDAO", "declarator": "alienMonitorDao", "var_name": "alienMonitorDao"}, {"original_string": "@Inject\n    private DeploymentService deploymentService;", "modifier": "@Inject\n    private", "type": "DeploymentService", "declarator": "deploymentService", "var_name": "deploymentService"}], "file": "alien4cloud-core/src/test/java/alien4cloud/deployment/DeploymentServiceTest.java"}, "test_case": {"identifier": "isArchiveDeployedTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isArchiveDeployedTest() {\n        DeploymentTopology deploymentTopology = new DeploymentTopology();\n        deploymentTopology.setId(\"id\");\n        deploymentTopology.setDeployed(false);\n        deploymentTopology.setDependencies(Sets.newHashSet(new CSARDependency(\"toto\", \"2.0.0\")));\n        alienMonitorDao.save(deploymentTopology);\n\n        deploymentTopology.setId(\"id2\");\n        deploymentTopology.setDeployed(true);\n        deploymentTopology.setDependencies(Sets.newHashSet(new CSARDependency(\"tata\", \"1.0.0\")));\n        alienMonitorDao.save(deploymentTopology);\n\n        deploymentTopology.setId(\"id3\");\n        deploymentTopology.setDeployed(true);\n        deploymentTopology.setDependencies(Sets.newHashSet(new CSARDependency(\"toto\", \"1.0.0\")));\n        alienMonitorDao.save(deploymentTopology);\n\n        Assert.assertFalse(deploymentService.isArchiveDeployed(\"toto\", \"2.0.0\"));\n\n        deploymentTopology.setId(\"id\");\n        deploymentTopology.setDeployed(true);\n        deploymentTopology.setDependencies(Sets.newHashSet(new CSARDependency(\"toto\", \"2.0.0\")));\n        alienMonitorDao.save(deploymentTopology);\n\n        Assert.assertTrue(deploymentService.isArchiveDeployed(\"toto\", \"2.0.0\"));\n    }", "signature": "void isArchiveDeployedTest()", "full_signature": "@Test public void isArchiveDeployedTest()", "class_method_signature": "DeploymentServiceTest.isArchiveDeployedTest()", "testcase": true, "constructor": false, "invocations": ["setId", "setDeployed", "setDependencies", "newHashSet", "save", "setId", "setDeployed", "setDependencies", "newHashSet", "save", "setId", "setDeployed", "setDependencies", "newHashSet", "save", "assertFalse", "isArchiveDeployed", "setId", "setDeployed", "setDependencies", "newHashSet", "save", "assertTrue", "isArchiveDeployed"]}, "focal_class": {"identifier": "DeploymentService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource(name = \"alien-es-dao\")\n    private IGenericSearchDAO alienDao;", "modifier": "@Resource(name = \"alien-es-dao\")\n    private", "type": "IGenericSearchDAO", "declarator": "alienDao", "var_name": "alienDao"}, {"original_string": "@Resource(name = \"alien-monitor-es-dao\")\n    private IGenericSearchDAO alienMonitorDao;", "modifier": "@Resource(name = \"alien-monitor-es-dao\")\n    private", "type": "IGenericSearchDAO", "declarator": "alienMonitorDao", "var_name": "alienMonitorDao"}, {"original_string": "@Inject\n    private DeploymentRuntimeStateService deploymentRuntimeStateService;", "modifier": "@Inject\n    private", "type": "DeploymentRuntimeStateService", "declarator": "deploymentRuntimeStateService", "var_name": "deploymentRuntimeStateService"}, {"original_string": "@Inject\n    private DeploymentContextService deploymentContextService;", "modifier": "@Inject\n    private", "type": "DeploymentContextService", "declarator": "deploymentContextService", "var_name": "deploymentContextService"}, {"original_string": "@Inject\n    private DeploymentTopologyService deploymentTopologyService;", "modifier": "@Inject\n    private", "type": "DeploymentTopologyService", "declarator": "deploymentTopologyService", "var_name": "deploymentTopologyService"}, {"original_string": "@Inject\n    private ApplicationEventPublisher eventPublisher;", "modifier": "@Inject\n    private", "type": "ApplicationEventPublisher", "declarator": "eventPublisher", "var_name": "eventPublisher"}], "methods": [{"identifier": "getActiveDeployments", "parameters": "()", "modifiers": "public", "return": "Deployment[]", "signature": "Deployment[] getActiveDeployments()", "full_signature": "public Deployment[] getActiveDeployments()", "class_method_signature": "DeploymentService.getActiveDeployments()", "testcase": false, "constructor": false}, {"identifier": "getDeployments", "parameters": "(String orchestratorId, String sourceId, String environmentId, int from, int size)", "modifiers": "public", "return": "Deployment[]", "signature": "Deployment[] getDeployments(String orchestratorId, String sourceId, String environmentId, int from, int size)", "full_signature": "public Deployment[] getDeployments(String orchestratorId, String sourceId, String environmentId, int from, int size)", "class_method_signature": "DeploymentService.getDeployments(String orchestratorId, String sourceId, String environmentId, int from, int size)", "testcase": false, "constructor": false}, {"identifier": "searchDeployments", "parameters": "(String query, String orchestratorId, String environmentId, String sourceId, int from, int size)", "modifiers": "public", "return": "FacetedSearchResult", "signature": "FacetedSearchResult searchDeployments(String query, String orchestratorId, String environmentId, String sourceId, int from, int size)", "full_signature": "public FacetedSearchResult searchDeployments(String query, String orchestratorId, String environmentId, String sourceId, int from, int size)", "class_method_signature": "DeploymentService.searchDeployments(String query, String orchestratorId, String environmentId, String sourceId, int from, int size)", "testcase": false, "constructor": false}, {"identifier": "buildDeploymentFilters", "parameters": "(String orchestratorId, String sourceId, String environmentId)", "modifiers": "private", "return": "FilterBuilder", "signature": "FilterBuilder buildDeploymentFilters(String orchestratorId, String sourceId, String environmentId)", "full_signature": "private FilterBuilder buildDeploymentFilters(String orchestratorId, String sourceId, String environmentId)", "class_method_signature": "DeploymentService.buildDeploymentFilters(String orchestratorId, String sourceId, String environmentId)", "testcase": false, "constructor": false}, {"identifier": "getActiveDeployments", "parameters": "(String orchestratorId, String sourceId, int from, int size)", "modifiers": "public", "return": "Deployment[]", "signature": "Deployment[] getActiveDeployments(String orchestratorId, String sourceId, int from, int size)", "full_signature": "public Deployment[] getActiveDeployments(String orchestratorId, String sourceId, int from, int size)", "class_method_signature": "DeploymentService.getActiveDeployments(String orchestratorId, String sourceId, int from, int size)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String id)", "modifiers": "public", "return": "Deployment", "signature": "Deployment get(String id)", "full_signature": "public Deployment get(String id)", "class_method_signature": "DeploymentService.get(String id)", "testcase": false, "constructor": false}, {"identifier": "getOrfail", "parameters": "(String id)", "modifiers": "public", "return": "Deployment", "signature": "Deployment getOrfail(String id)", "full_signature": "public Deployment getOrfail(String id)", "class_method_signature": "DeploymentService.getOrfail(String id)", "testcase": false, "constructor": false}, {"identifier": "getActiveDeploymentOrFail", "parameters": "(String environmentId)", "modifiers": "public", "return": "Deployment", "signature": "Deployment getActiveDeploymentOrFail(String environmentId)", "full_signature": "public Deployment getActiveDeploymentOrFail(String environmentId)", "class_method_signature": "DeploymentService.getActiveDeploymentOrFail(String environmentId)", "testcase": false, "constructor": false}, {"identifier": "getDeployment", "parameters": "(String applicationEnvironmentId)", "modifiers": "public", "return": "Deployment", "signature": "Deployment getDeployment(String applicationEnvironmentId)", "full_signature": "public Deployment getDeployment(String applicationEnvironmentId)", "class_method_signature": "DeploymentService.getDeployment(String applicationEnvironmentId)", "testcase": false, "constructor": false}, {"identifier": "getActiveDeployment", "parameters": "(String applicationEnvironmentId)", "modifiers": "public", "return": "Deployment", "signature": "Deployment getActiveDeployment(String applicationEnvironmentId)", "full_signature": "public Deployment getActiveDeployment(String applicationEnvironmentId)", "class_method_signature": "DeploymentService.getActiveDeployment(String applicationEnvironmentId)", "testcase": false, "constructor": false}, {"identifier": "getActiveDeploymentOrFail", "parameters": "(String topologyId, String orchestratorId)", "modifiers": "public", "return": "Deployment", "signature": "Deployment getActiveDeploymentOrFail(String topologyId, String orchestratorId)", "full_signature": "public Deployment getActiveDeploymentOrFail(String topologyId, String orchestratorId)", "class_method_signature": "DeploymentService.getActiveDeploymentOrFail(String topologyId, String orchestratorId)", "testcase": false, "constructor": false}, {"identifier": "getActiveDeployment", "parameters": "(String orchestratorId, String topologyId)", "modifiers": "public", "return": "Deployment", "signature": "Deployment getActiveDeployment(String orchestratorId, String topologyId)", "full_signature": "public Deployment getActiveDeployment(String orchestratorId, String topologyId)", "class_method_signature": "DeploymentService.getActiveDeployment(String orchestratorId, String topologyId)", "testcase": false, "constructor": false}, {"identifier": "isActiveDeployment", "parameters": "(String orchestratorId, String orchestratorDeploymentId)", "modifiers": "public", "return": "boolean", "signature": "boolean isActiveDeployment(String orchestratorId, String orchestratorDeploymentId)", "full_signature": "public boolean isActiveDeployment(String orchestratorId, String orchestratorDeploymentId)", "class_method_signature": "DeploymentService.isActiveDeployment(String orchestratorId, String orchestratorDeploymentId)", "testcase": false, "constructor": false}, {"identifier": "getCloudActiveDeploymentContexts", "parameters": "(String orchestratorId)", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getCloudActiveDeploymentContexts(String orchestratorId)", "full_signature": "public Map<String, String> getCloudActiveDeploymentContexts(String orchestratorId)", "class_method_signature": "DeploymentService.getCloudActiveDeploymentContexts(String orchestratorId)", "testcase": false, "constructor": false}, {"identifier": "getOrchestratorActiveDeployments", "parameters": "(String orchestratorId)", "modifiers": "public", "return": "Deployment[]", "signature": "Deployment[] getOrchestratorActiveDeployments(String orchestratorId)", "full_signature": "public Deployment[] getOrchestratorActiveDeployments(String orchestratorId)", "class_method_signature": "DeploymentService.getOrchestratorActiveDeployments(String orchestratorId)", "testcase": false, "constructor": false}, {"identifier": "getOrchestratorDeploymentIdsByOrchestratorId", "parameters": "(String applicationEnvironmentId)", "modifiers": "public", "return": "Map<String, Set<String>>", "signature": "Map<String, Set<String>> getOrchestratorDeploymentIdsByOrchestratorId(String applicationEnvironmentId)", "full_signature": "public Map<String, Set<String>> getOrchestratorDeploymentIdsByOrchestratorId(String applicationEnvironmentId)", "class_method_signature": "DeploymentService.getOrchestratorDeploymentIdsByOrchestratorId(String applicationEnvironmentId)", "testcase": false, "constructor": false}, {"identifier": "markUndeployed", "parameters": "(Deployment deployment)", "modifiers": "public", "return": "void", "signature": "void markUndeployed(Deployment deployment)", "full_signature": "public void markUndeployed(Deployment deployment)", "class_method_signature": "DeploymentService.markUndeployed(Deployment deployment)", "testcase": false, "constructor": false}, {"identifier": "isArchiveDeployed", "parameters": "(String archiveName, String archiveVersion)", "modifiers": "public", "return": "boolean", "signature": "boolean isArchiveDeployed(String archiveName, String archiveVersion)", "full_signature": "public boolean isArchiveDeployed(String archiveName, String archiveVersion)", "class_method_signature": "DeploymentService.isArchiveDeployed(String archiveName, String archiveVersion)", "testcase": false, "constructor": false}, {"identifier": "checkDeploymentUpdateFeasibility", "parameters": "(Deployment deployment, DeploymentTopology deploymentTopology)", "modifiers": "public", "return": "void", "signature": "void checkDeploymentUpdateFeasibility(Deployment deployment, DeploymentTopology deploymentTopology)", "full_signature": "public void checkDeploymentUpdateFeasibility(Deployment deployment, DeploymentTopology deploymentTopology)", "class_method_signature": "DeploymentService.checkDeploymentUpdateFeasibility(Deployment deployment, DeploymentTopology deploymentTopology)", "testcase": false, "constructor": false}], "file": "alien4cloud-core/src/main/java/alien4cloud/deployment/DeploymentService.java"}, "focal_method": {"identifier": "isArchiveDeployed", "parameters": "(String archiveName, String archiveVersion)", "modifiers": "public", "return": "boolean", "body": "public boolean isArchiveDeployed(String archiveName, String archiveVersion) {\n        return alienMonitorDao.buildQuery(DeploymentTopology.class).prepareSearch()\n                .setFilters(fromKeyValueCouples(\"deployed\", \"true\", \"dependencies.name\", archiveName, \"dependencies.version\", archiveVersion)).count() > 0;\n    }", "signature": "boolean isArchiveDeployed(String archiveName, String archiveVersion)", "full_signature": "public boolean isArchiveDeployed(String archiveName, String archiveVersion)", "class_method_signature": "DeploymentService.isArchiveDeployed(String archiveName, String archiveVersion)", "testcase": false, "constructor": false, "invocations": ["count", "setFilters", "prepareSearch", "buildQuery", "fromKeyValueCouples"]}, "repository": {"repo_id": 24750302, "url": "https://github.com/alien4cloud/alien4cloud", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 67, "size": 27647, "license": "licensed"}}