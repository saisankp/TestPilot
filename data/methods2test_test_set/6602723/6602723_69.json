{"test_class": {"identifier": "TestAnnotatedMethodFilter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MetadataReader mockMetadataReader;", "modifier": "private", "type": "MetadataReader", "declarator": "mockMetadataReader", "var_name": "mockMetadataReader"}, {"original_string": "private MetadataReaderFactory mockMetadataReaderFactory;", "modifier": "private", "type": "MetadataReaderFactory", "declarator": "mockMetadataReaderFactory", "var_name": "mockMetadataReaderFactory"}, {"original_string": "private AnnotationMetadata mockAnnotationMetadata;", "modifier": "private", "type": "AnnotationMetadata", "declarator": "mockAnnotationMetadata", "var_name": "mockAnnotationMetadata"}, {"original_string": "private MethodMetadata mockMethodMetadata;", "modifier": "private", "type": "MethodMetadata", "declarator": "mockMethodMetadata", "var_name": "mockMethodMetadata"}, {"original_string": "private AnnotatedMethodFilter impl;", "modifier": "private", "type": "AnnotatedMethodFilter", "declarator": "impl", "var_name": "impl"}], "file": "jrugged-spring/src/test/java/org/fishwife/jrugged/spring/TestAnnotatedMethodFilter.java"}, "test_case": {"identifier": "testMatchReturnsFalseIfAnnotatedMethodsFound", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMatchReturnsFalseIfAnnotatedMethodsFound() throws IOException {\n        Set<MethodMetadata> foundMethods = new HashSet<MethodMetadata>();\n        foundMethods.add(mockMethodMetadata);\n\n        expect(mockAnnotationMetadata.getAnnotatedMethods(SomeAnno.class.getCanonicalName())).andReturn(foundMethods);\n\n        replayMocks();\n        assertTrue(impl.match(mockMetadataReader, mockMetadataReaderFactory));\n        verifyMocks();\n    }", "signature": "void testMatchReturnsFalseIfAnnotatedMethodsFound()", "full_signature": "@Test public void testMatchReturnsFalseIfAnnotatedMethodsFound()", "class_method_signature": "TestAnnotatedMethodFilter.testMatchReturnsFalseIfAnnotatedMethodsFound()", "testcase": true, "constructor": false, "invocations": ["add", "andReturn", "expect", "getAnnotatedMethods", "getCanonicalName", "replayMocks", "assertTrue", "match", "verifyMocks"]}, "focal_class": {"identifier": "AnnotatedMethodFilter", "superclass": "", "interfaces": "implements TypeFilter", "fields": [{"original_string": "private final Class<? extends Annotation> annotatedClass;", "modifier": "private final", "type": "Class<? extends Annotation>", "declarator": "annotatedClass", "var_name": "annotatedClass"}], "methods": [{"identifier": "AnnotatedMethodFilter", "parameters": "(Class<? extends Annotation> annotatedClass)", "modifiers": "public", "return": "", "signature": " AnnotatedMethodFilter(Class<? extends Annotation> annotatedClass)", "full_signature": "public  AnnotatedMethodFilter(Class<? extends Annotation> annotatedClass)", "class_method_signature": "AnnotatedMethodFilter.AnnotatedMethodFilter(Class<? extends Annotation> annotatedClass)", "testcase": false, "constructor": true}, {"identifier": "match", "parameters": "(MetadataReader metadataReader,\n            MetadataReaderFactory metadataReaderFactory)", "modifiers": "public", "return": "boolean", "signature": "boolean match(MetadataReader metadataReader,\n            MetadataReaderFactory metadataReaderFactory)", "full_signature": "public boolean match(MetadataReader metadataReader,\n            MetadataReaderFactory metadataReaderFactory)", "class_method_signature": "AnnotatedMethodFilter.match(MetadataReader metadataReader,\n            MetadataReaderFactory metadataReaderFactory)", "testcase": false, "constructor": false}], "file": "jrugged-spring/src/main/java/org/fishwife/jrugged/spring/AnnotatedMethodFilter.java"}, "focal_method": {"identifier": "match", "parameters": "(MetadataReader metadataReader,\n            MetadataReaderFactory metadataReaderFactory)", "modifiers": "public", "return": "boolean", "body": "public boolean match(MetadataReader metadataReader,\n            MetadataReaderFactory metadataReaderFactory) throws IOException {\n        AnnotationMetadata annotationMetadata = metadataReader.getAnnotationMetadata();\n        Set<MethodMetadata> annotatedMethods = annotationMetadata\n                .getAnnotatedMethods(annotatedClass.getCanonicalName());\n        return !annotatedMethods.isEmpty();\n    }", "signature": "boolean match(MetadataReader metadataReader,\n            MetadataReaderFactory metadataReaderFactory)", "full_signature": "public boolean match(MetadataReader metadataReader,\n            MetadataReaderFactory metadataReaderFactory)", "class_method_signature": "AnnotatedMethodFilter.match(MetadataReader metadataReader,\n            MetadataReaderFactory metadataReaderFactory)", "testcase": false, "constructor": false, "invocations": ["getAnnotationMetadata", "getAnnotatedMethods", "getCanonicalName", "isEmpty"]}, "repository": {"repo_id": 6602723, "url": "https://github.com/Comcast/jrugged", "language": "Java", "is_fork": false, "fork_count": 90, "stargazer_count": 236, "size": 1302, "license": "licensed"}}