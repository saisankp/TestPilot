{"test_class": {"identifier": "BaseDocumentationTest", "superclass": "", "interfaces": "", "fields": [], "file": "geoclient-core/src/test/java/gov/nyc/doitt/gis/geoclient/doc/BaseDocumentationTest.java"}, "test_case": {"identifier": "testHasText", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHasText()\n    {\n        BaseDocumentation bd = new BaseDocumentation();\n        assertFalse(bd.hasText());\n        Description desc = new Description(\"xx\");\n        assertTrue(desc.hasText());\n        bd.setDescription(desc);\n        assertTrue(bd.hasText());\n    }", "signature": "void testHasText()", "full_signature": "@Test public void testHasText()", "class_method_signature": "BaseDocumentationTest.testHasText()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "hasText", "assertTrue", "hasText", "setDescription", "assertTrue", "hasText"]}, "focal_class": {"identifier": "BaseDocumentation", "superclass": "", "interfaces": "implements Comparable<BaseDocumentation>", "fields": [{"original_string": "private String id;", "modifier": "private", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private Description description;", "modifier": "private", "type": "Description", "declarator": "description", "var_name": "description"}], "methods": [{"identifier": "BaseDocumentation", "parameters": "()", "modifiers": "public", "return": "", "signature": " BaseDocumentation()", "full_signature": "public  BaseDocumentation()", "class_method_signature": "BaseDocumentation.BaseDocumentation()", "testcase": false, "constructor": true}, {"identifier": "BaseDocumentation", "parameters": "(String id, Description description)", "modifiers": "public", "return": "", "signature": " BaseDocumentation(String id, Description description)", "full_signature": "public  BaseDocumentation(String id, Description description)", "class_method_signature": "BaseDocumentation.BaseDocumentation(String id, Description description)", "testcase": false, "constructor": true}, {"identifier": "isDocumented", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDocumented()", "full_signature": "public boolean isDocumented()", "class_method_signature": "BaseDocumentation.isDocumented()", "testcase": false, "constructor": false}, {"identifier": "hasText", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasText()", "full_signature": "public boolean hasText()", "class_method_signature": "BaseDocumentation.hasText()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "BaseDocumentation.getId()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "public", "return": "Description", "signature": "Description getDescription()", "full_signature": "public Description getDescription()", "class_method_signature": "BaseDocumentation.getDescription()", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(String id)", "modifiers": "public", "return": "void", "signature": "void setId(String id)", "full_signature": "public void setId(String id)", "class_method_signature": "BaseDocumentation.setId(String id)", "testcase": false, "constructor": false}, {"identifier": "setDescription", "parameters": "(Description description)", "modifiers": "public", "return": "void", "signature": "void setDescription(Description description)", "full_signature": "public void setDescription(Description description)", "class_method_signature": "BaseDocumentation.setDescription(Description description)", "testcase": false, "constructor": false}, {"identifier": "summarize", "parameters": "(int length)", "modifiers": "public", "return": "String", "signature": "String summarize(int length)", "full_signature": "public String summarize(int length)", "class_method_signature": "BaseDocumentation.summarize(int length)", "testcase": false, "constructor": false}, {"identifier": "joinDescriptionText", "parameters": "(String between)", "modifiers": "public", "return": "String", "signature": "String joinDescriptionText(String between)", "full_signature": "public String joinDescriptionText(String between)", "class_method_signature": "BaseDocumentation.joinDescriptionText(String between)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "BaseDocumentation.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "BaseDocumentation.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(BaseDocumentation o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(BaseDocumentation o)", "full_signature": "@Override public int compareTo(BaseDocumentation o)", "class_method_signature": "BaseDocumentation.compareTo(BaseDocumentation o)", "testcase": false, "constructor": false}], "file": "geoclient-core/src/main/java/gov/nyc/doitt/gis/geoclient/doc/BaseDocumentation.java"}, "focal_method": {"identifier": "hasText", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean hasText()\n    {\n        return this.description != null && this.description.hasText();\n    }", "signature": "boolean hasText()", "full_signature": "public boolean hasText()", "class_method_signature": "BaseDocumentation.hasText()", "testcase": false, "constructor": false, "invocations": ["hasText"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}