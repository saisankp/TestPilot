{"test_class": {"identifier": "BigQueryOutputConfigurationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_PROJECT_ID = \"google.com:my-project\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_PROJECT_ID = \"google.com:my-project\"", "var_name": "DEFAULT_PROJECT_ID"}, {"original_string": "private static final String TEST_PROJECT_ID = \"domain:project\";", "modifier": "private static final", "type": "String", "declarator": "TEST_PROJECT_ID = \"domain:project\"", "var_name": "TEST_PROJECT_ID"}, {"original_string": "private static final String TEST_LOAD_PROJECT_ID = \"domain:load-project\";", "modifier": "private static final", "type": "String", "declarator": "TEST_LOAD_PROJECT_ID = \"domain:load-project\"", "var_name": "TEST_LOAD_PROJECT_ID"}, {"original_string": "private static final String TEST_DATASET_ID = \"dataset\";", "modifier": "private static final", "type": "String", "declarator": "TEST_DATASET_ID = \"dataset\"", "var_name": "TEST_DATASET_ID"}, {"original_string": "private static final String TEST_TABLE_ID = \"table\";", "modifier": "private static final", "type": "String", "declarator": "TEST_TABLE_ID = \"table\"", "var_name": "TEST_TABLE_ID"}, {"original_string": "private static final String QUALIFIED_TABLE_ID =\n      String.format(\"%s:%s.%s\", TEST_PROJECT_ID, TEST_DATASET_ID, TEST_TABLE_ID);", "modifier": "private static final", "type": "String", "declarator": "QUALIFIED_TABLE_ID =\n      String.format(\"%s:%s.%s\", TEST_PROJECT_ID, TEST_DATASET_ID, TEST_TABLE_ID)", "var_name": "QUALIFIED_TABLE_ID"}, {"original_string": "private static final String QUALIFIED_TABLE_ID_WITHOUT_PROJECT =\n      String.format(\"%s.%s\", TEST_DATASET_ID, TEST_TABLE_ID);", "modifier": "private static final", "type": "String", "declarator": "QUALIFIED_TABLE_ID_WITHOUT_PROJECT =\n      String.format(\"%s.%s\", TEST_DATASET_ID, TEST_TABLE_ID)", "var_name": "QUALIFIED_TABLE_ID_WITHOUT_PROJECT"}, {"original_string": "private static final TableReference TEST_TABLE_REF =\n      new TableReference()\n          .setProjectId(TEST_PROJECT_ID)\n          .setDatasetId(TEST_DATASET_ID)\n          .setTableId(TEST_TABLE_ID);", "modifier": "private static final", "type": "TableReference", "declarator": "TEST_TABLE_REF =\n      new TableReference()\n          .setProjectId(TEST_PROJECT_ID)\n          .setDatasetId(TEST_DATASET_ID)\n          .setTableId(TEST_TABLE_ID)", "var_name": "TEST_TABLE_REF"}, {"original_string": "private static final String TEST_OUTPUT_PATH_STRING = \"gs://test_bucket/test_directory\";", "modifier": "private static final", "type": "String", "declarator": "TEST_OUTPUT_PATH_STRING = \"gs://test_bucket/test_directory\"", "var_name": "TEST_OUTPUT_PATH_STRING"}, {"original_string": "private static final BigQueryFileFormat TEST_FILE_FORMAT =\n      BigQueryFileFormat.NEWLINE_DELIMITED_JSON;", "modifier": "private static final", "type": "BigQueryFileFormat", "declarator": "TEST_FILE_FORMAT =\n      BigQueryFileFormat.NEWLINE_DELIMITED_JSON", "var_name": "TEST_FILE_FORMAT"}, {"original_string": "@SuppressWarnings(\"rawtypes\")\n  private static final Class<? extends FileOutputFormat> TEST_OUTPUT_CLASS = TextOutputFormat.class;", "modifier": "@SuppressWarnings(\"rawtypes\")\n  private static final", "type": "Class<? extends FileOutputFormat>", "declarator": "TEST_OUTPUT_CLASS = TextOutputFormat.class", "var_name": "TEST_OUTPUT_CLASS"}, {"original_string": "private static final BigQueryTableSchema TEST_TABLE_SCHEMA =\n      new BigQueryTableSchema()\n          .setFields(\n              ImmutableList.of(\n                  new BigQueryTableFieldSchema().setName(\"A\").setType(\"STRING\"),\n                  new BigQueryTableFieldSchema().setName(\"B\").setType(\"INTEGER\")));", "modifier": "private static final", "type": "BigQueryTableSchema", "declarator": "TEST_TABLE_SCHEMA =\n      new BigQueryTableSchema()\n          .setFields(\n              ImmutableList.of(\n                  new BigQueryTableFieldSchema().setName(\"A\").setType(\"STRING\"),\n                  new BigQueryTableFieldSchema().setName(\"B\").setType(\"INTEGER\")))", "var_name": "TEST_TABLE_SCHEMA"}, {"original_string": "private static final String TEST_TABLE_SCHEMA_STRING =\n      \"[{\\\"name\\\":\\\"A\\\",\\\"type\\\":\\\"STRING\\\"},{\\\"name\\\":\\\"B\\\",\\\"type\\\":\\\"INTEGER\\\"}]\";", "modifier": "private static final", "type": "String", "declarator": "TEST_TABLE_SCHEMA_STRING =\n      \"[{\\\"name\\\":\\\"A\\\",\\\"type\\\":\\\"STRING\\\"},{\\\"name\\\":\\\"B\\\",\\\"type\\\":\\\"INTEGER\\\"}]\"", "var_name": "TEST_TABLE_SCHEMA_STRING"}, {"original_string": "private static final String TEST_BAD_TABLE_SCHEMA_STRING =\n      \"[{\\\"name\\\":\\\"A\\\",\\\"type\\\":\\\"STRING\\\"},{'name':\\\"B\\\",\\\"type\\\":\\\"INTEGER\\\"}]\";", "modifier": "private static final", "type": "String", "declarator": "TEST_BAD_TABLE_SCHEMA_STRING =\n      \"[{\\\"name\\\":\\\"A\\\",\\\"type\\\":\\\"STRING\\\"},{'name':\\\"B\\\",\\\"type\\\":\\\"INTEGER\\\"}]\"", "var_name": "TEST_BAD_TABLE_SCHEMA_STRING"}, {"original_string": "private static Configuration conf;", "modifier": "private static", "type": "Configuration", "declarator": "conf", "var_name": "conf"}, {"original_string": "@Mock private JobID mockJobID;", "modifier": "@Mock private", "type": "JobID", "declarator": "mockJobID", "var_name": "mockJobID"}], "file": "bigquery/src/test/java/com/google/cloud/hadoop/io/bigquery/output/BigQueryOutputConfigurationTest.java"}, "test_case": {"identifier": "testConfigure", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testConfigure() throws IOException {\n    BigQueryOutputConfiguration.configure(\n        conf,\n        QUALIFIED_TABLE_ID,\n        TEST_TABLE_SCHEMA,\n        TEST_OUTPUT_PATH_STRING,\n        TEST_FILE_FORMAT,\n        TEST_OUTPUT_CLASS);\n\n    assertThat(BigQueryConfiguration.OUTPUT_PROJECT_ID.get(conf, conf::get))\n        .isEqualTo(TEST_PROJECT_ID);\n    assertThat(BigQueryConfiguration.OUTPUT_DATASET_ID.get(conf, conf::get))\n        .isEqualTo(TEST_DATASET_ID);\n    assertThat(BigQueryConfiguration.OUTPUT_TABLE_ID.get(conf, conf::get)).isEqualTo(TEST_TABLE_ID);\n    assertThat(BigQueryConfiguration.OUTPUT_FILE_FORMAT.get(conf, conf::get))\n        .isEqualTo(TEST_FILE_FORMAT.name());\n    assertThat(BigQueryConfiguration.OUTPUT_FORMAT_CLASS.get(conf, conf::getClass))\n        .isEqualTo(TEST_OUTPUT_CLASS);\n    assertThat(BigQueryConfiguration.OUTPUT_TABLE_SCHEMA.get(conf, conf::get))\n        .isEqualTo(TEST_TABLE_SCHEMA_STRING);\n    assertThat(BigQueryOutputConfiguration.getGcsOutputPath(conf).toString())\n        .isEqualTo(TEST_OUTPUT_PATH_STRING);\n  }", "signature": "void testConfigure()", "full_signature": "@Test public void testConfigure()", "class_method_signature": "BigQueryOutputConfigurationTest.testConfigure()", "testcase": true, "constructor": false, "invocations": ["configure", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get", "name", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "toString", "getGcsOutputPath"]}, "focal_class": {"identifier": "BigQueryOutputConfiguration", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final List<HadoopConfigurationProperty<?>> REQUIRED_PROPERTIES =\n      ImmutableList.of(OUTPUT_DATASET_ID, OUTPUT_TABLE_ID, OUTPUT_FILE_FORMAT, OUTPUT_FORMAT_CLASS);", "modifier": "public static final", "type": "List<HadoopConfigurationProperty<?>>", "declarator": "REQUIRED_PROPERTIES =\n      ImmutableList.of(OUTPUT_DATASET_ID, OUTPUT_TABLE_ID, OUTPUT_FILE_FORMAT, OUTPUT_FORMAT_CLASS)", "var_name": "REQUIRED_PROPERTIES"}], "methods": [{"identifier": "configure", "parameters": "(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      String outputTableSchemaJson,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "modifiers": "@SuppressWarnings(\"rawtypes\") public static", "return": "void", "signature": "void configure(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      String outputTableSchemaJson,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "full_signature": "@SuppressWarnings(\"rawtypes\") public static void configure(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      String outputTableSchemaJson,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "class_method_signature": "BigQueryOutputConfiguration.configure(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      String outputTableSchemaJson,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(\n      Configuration conf,\n      String outputProjectId,\n      String outputDatasetId,\n      String outputTableId,\n      Optional<String> outputTableSchemaJson,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "modifiers": "@SuppressWarnings(\"rawtypes\") private static", "return": "void", "signature": "void configure(\n      Configuration conf,\n      String outputProjectId,\n      String outputDatasetId,\n      String outputTableId,\n      Optional<String> outputTableSchemaJson,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "full_signature": "@SuppressWarnings(\"rawtypes\") private static void configure(\n      Configuration conf,\n      String outputProjectId,\n      String outputDatasetId,\n      String outputTableId,\n      Optional<String> outputTableSchemaJson,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "class_method_signature": "BigQueryOutputConfiguration.configure(\n      Configuration conf,\n      String outputProjectId,\n      String outputDatasetId,\n      String outputTableId,\n      Optional<String> outputTableSchemaJson,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      BigQueryTableSchema outputTableSchema,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "modifiers": "@SuppressWarnings(\"rawtypes\") public static", "return": "void", "signature": "void configure(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      BigQueryTableSchema outputTableSchema,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "full_signature": "@SuppressWarnings(\"rawtypes\") public static void configure(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      BigQueryTableSchema outputTableSchema,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "class_method_signature": "BigQueryOutputConfiguration.configure(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      BigQueryTableSchema outputTableSchema,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "testcase": false, "constructor": false}, {"identifier": "configureWithAutoSchema", "parameters": "(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "modifiers": "@SuppressWarnings(\"rawtypes\") public static", "return": "void", "signature": "void configureWithAutoSchema(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "full_signature": "@SuppressWarnings(\"rawtypes\") public static void configureWithAutoSchema(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "class_method_signature": "BigQueryOutputConfiguration.configureWithAutoSchema(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "testcase": false, "constructor": false}, {"identifier": "setKmsKeyName", "parameters": "(Configuration conf, String kmsKeyName)", "modifiers": "public static", "return": "void", "signature": "void setKmsKeyName(Configuration conf, String kmsKeyName)", "full_signature": "public static void setKmsKeyName(Configuration conf, String kmsKeyName)", "class_method_signature": "BigQueryOutputConfiguration.setKmsKeyName(Configuration conf, String kmsKeyName)", "testcase": false, "constructor": false}, {"identifier": "validateConfiguration", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "void", "signature": "void validateConfiguration(Configuration conf)", "full_signature": "public static void validateConfiguration(Configuration conf)", "class_method_signature": "BigQueryOutputConfiguration.validateConfiguration(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getCleanupTemporaryDataFlag", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "boolean", "signature": "boolean getCleanupTemporaryDataFlag(Configuration conf)", "full_signature": "public static boolean getCleanupTemporaryDataFlag(Configuration conf)", "class_method_signature": "BigQueryOutputConfiguration.getCleanupTemporaryDataFlag(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getProjectId", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "String", "signature": "String getProjectId(Configuration conf)", "full_signature": "public static String getProjectId(Configuration conf)", "class_method_signature": "BigQueryOutputConfiguration.getProjectId(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getJobProjectId", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "String", "signature": "String getJobProjectId(Configuration conf)", "full_signature": "public static String getJobProjectId(Configuration conf)", "class_method_signature": "BigQueryOutputConfiguration.getJobProjectId(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getTableReference", "parameters": "(Configuration conf)", "modifiers": "static", "return": "TableReference", "signature": "TableReference getTableReference(Configuration conf)", "full_signature": "static TableReference getTableReference(Configuration conf)", "class_method_signature": "BigQueryOutputConfiguration.getTableReference(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getTableSchema", "parameters": "(Configuration conf)", "modifiers": "static", "return": "Optional<BigQueryTableSchema>", "signature": "Optional<BigQueryTableSchema> getTableSchema(Configuration conf)", "full_signature": "static Optional<BigQueryTableSchema> getTableSchema(Configuration conf)", "class_method_signature": "BigQueryOutputConfiguration.getTableSchema(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getTablePartitioning", "parameters": "(Configuration conf)", "modifiers": "static", "return": "Optional<BigQueryTimePartitioning>", "signature": "Optional<BigQueryTimePartitioning> getTablePartitioning(Configuration conf)", "full_signature": "static Optional<BigQueryTimePartitioning> getTablePartitioning(Configuration conf)", "class_method_signature": "BigQueryOutputConfiguration.getTablePartitioning(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getKmsKeyName", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "String", "signature": "String getKmsKeyName(Configuration conf)", "full_signature": "public static String getKmsKeyName(Configuration conf)", "class_method_signature": "BigQueryOutputConfiguration.getKmsKeyName(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getFileFormat", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "BigQueryFileFormat", "signature": "BigQueryFileFormat getFileFormat(Configuration conf)", "full_signature": "public static BigQueryFileFormat getFileFormat(Configuration conf)", "class_method_signature": "BigQueryOutputConfiguration.getFileFormat(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getFileOutputFormat", "parameters": "(Configuration conf)", "modifiers": "@SuppressWarnings(\"rawtypes\") public static", "return": "FileOutputFormat", "signature": "FileOutputFormat getFileOutputFormat(Configuration conf)", "full_signature": "@SuppressWarnings(\"rawtypes\") public static FileOutputFormat getFileOutputFormat(Configuration conf)", "class_method_signature": "BigQueryOutputConfiguration.getFileOutputFormat(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getGcsOutputPath", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "Path", "signature": "Path getGcsOutputPath(Configuration conf)", "full_signature": "public static Path getGcsOutputPath(Configuration conf)", "class_method_signature": "BigQueryOutputConfiguration.getGcsOutputPath(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getCreateDisposition", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "String", "signature": "String getCreateDisposition(Configuration conf)", "full_signature": "public static String getCreateDisposition(Configuration conf)", "class_method_signature": "BigQueryOutputConfiguration.getCreateDisposition(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "getWriteDisposition", "parameters": "(Configuration conf)", "modifiers": "public static", "return": "String", "signature": "String getWriteDisposition(Configuration conf)", "full_signature": "public static String getWriteDisposition(Configuration conf)", "class_method_signature": "BigQueryOutputConfiguration.getWriteDisposition(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "setFileOutputFormatOutputPath", "parameters": "(Configuration conf, String outputPath)", "modifiers": "@VisibleForTesting static", "return": "void", "signature": "void setFileOutputFormatOutputPath(Configuration conf, String outputPath)", "full_signature": "@VisibleForTesting static void setFileOutputFormatOutputPath(Configuration conf, String outputPath)", "class_method_signature": "BigQueryOutputConfiguration.setFileOutputFormatOutputPath(Configuration conf, String outputPath)", "testcase": false, "constructor": false}], "file": "bigquery/src/main/java/com/google/cloud/hadoop/io/bigquery/output/BigQueryOutputConfiguration.java"}, "focal_method": {"identifier": "configure", "parameters": "(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      String outputTableSchemaJson,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "modifiers": "@SuppressWarnings(\"rawtypes\") public static", "return": "void", "body": "@SuppressWarnings(\"rawtypes\")\n  public static void configure(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      String outputTableSchemaJson,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)\n      throws IOException {\n    Preconditions.checkArgument(\n        !Strings.isNullOrEmpty(outputTableSchemaJson),\n        \"outputTableSchemaJson must not be null or empty.\");\n    TableReference outputTable = BigQueryStrings.parseTableReference(qualifiedOutputTableId);\n    configure(\n        conf,\n        outputTable.getProjectId(),\n        outputTable.getDatasetId(),\n        outputTable.getTableId(),\n        Optional.of(outputTableSchemaJson),\n        outputGcsPath,\n        outputFileFormat,\n        outputFormatClass);\n  }", "signature": "void configure(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      String outputTableSchemaJson,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "full_signature": "@SuppressWarnings(\"rawtypes\") public static void configure(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      String outputTableSchemaJson,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "class_method_signature": "BigQueryOutputConfiguration.configure(\n      Configuration conf,\n      String qualifiedOutputTableId,\n      String outputTableSchemaJson,\n      String outputGcsPath,\n      BigQueryFileFormat outputFileFormat,\n      Class<? extends FileOutputFormat> outputFormatClass)", "testcase": false, "constructor": false, "invocations": ["checkArgument", "isNullOrEmpty", "parseTableReference", "configure", "getProjectId", "getDatasetId", "getTableId", "of"]}, "repository": {"repo_id": 19684359, "url": "https://github.com/GoogleCloudDataproc/bigdata-interop", "stars": 178, "created": "5/12/2014 3:11:55 AM +00:00", "updates": "2020-01-23T23:10:40+00:00", "fork": "False", "license": "licensed"}}