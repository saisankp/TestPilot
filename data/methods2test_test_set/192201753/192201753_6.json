{"test_class": {"identifier": "AllowDataTest", "superclass": "", "interfaces": "", "fields": [], "file": "checker/src/test/java/com/fooock/robotstxt/api/model/AllowDataTest.java"}, "test_case": {"identifier": "testAgent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAgent() {\n        AllowData d1 = new AllowData();\n        d1.setAgent(null);\n        assertFalse(d1.isAgentValid());\n\n        AllowData d2 = new AllowData();\n        d2.setAgent(\"\");\n        assertFalse(d2.isAgentValid());\n\n        AllowData d3 = new AllowData();\n        d3.setAgent(\"AwesomeBot\");\n        assertTrue(d3.isAgentValid());\n    }", "signature": "void testAgent()", "full_signature": "@Test public void testAgent()", "class_method_signature": "AllowDataTest.testAgent()", "testcase": true, "constructor": false, "invocations": ["setAgent", "assertFalse", "isAgentValid", "setAgent", "assertFalse", "isAgentValid", "setAgent", "assertTrue", "isAgentValid"]}, "focal_class": {"identifier": "AllowData", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "@NotEmpty(message = \"URL cannot be empty or null\")\n    private String url;", "modifier": "@NotEmpty(message = \"URL cannot be empty or null\")\n    private", "type": "String", "declarator": "url", "var_name": "url"}, {"original_string": "private String agent;", "modifier": "private", "type": "String", "declarator": "agent", "var_name": "agent"}], "methods": [{"identifier": "isAgentValid", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAgentValid()", "full_signature": "public boolean isAgentValid()", "class_method_signature": "AllowData.isAgentValid()", "testcase": false, "constructor": false}], "file": "checker/src/main/java/com/fooock/robotstxt/api/model/AllowData.java"}, "focal_method": {"identifier": "isAgentValid", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isAgentValid() {\n        return agent != null && !agent.isEmpty();\n    }", "signature": "boolean isAgentValid()", "full_signature": "public boolean isAgentValid()", "class_method_signature": "AllowData.isAgentValid()", "testcase": false, "constructor": false, "invocations": ["isEmpty"]}, "repository": {"repo_id": 192201753, "url": "https://github.com/fooock/robots.txt", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 13, "size": 2005, "license": "licensed"}}