{"test_class": {"identifier": "StateReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/de/lise/terradoc/core/state/StateReaderTest.java"}, "test_case": {"identifier": "readShouldParseStateJsonCorrectly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void readShouldParseStateJsonCorrectly() throws IOException {\n        // Arrange\n        StateReader reader = new StateReader();\n        TerraformState terraformState;\n\n        // Act\n        try(InputStream in = StateReader.class.getClassLoader().getResourceAsStream(\"test-state.json\")) {\n            terraformState = reader.read(in);\n        }\n\n        // Assert\n        assertThat(terraformState).isNotNull();\n        assertThat(terraformState.getValues()).isNotNull();\n        assertThat(terraformState.getValues().getRootModule()).isNotNull();\n        assertThat(terraformState.getValues().getRootModule().getAddress()).isNull();\n    }", "signature": "void readShouldParseStateJsonCorrectly()", "full_signature": "@Test public void readShouldParseStateJsonCorrectly()", "class_method_signature": "StateReaderTest.readShouldParseStateJsonCorrectly()", "testcase": true, "constructor": false, "invocations": ["getResourceAsStream", "getClassLoader", "read", "isNotNull", "assertThat", "isNotNull", "assertThat", "getValues", "isNotNull", "assertThat", "getRootModule", "getValues", "isNull", "assertThat", "getAddress", "getRootModule", "getValues"]}, "focal_class": {"identifier": "StateReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Gson gson;", "modifier": "private final", "type": "Gson", "declarator": "gson", "var_name": "gson"}, {"original_string": "private static final Charset DEFAULT_CHARSET = StandardCharsets.UTF_8;", "modifier": "private static final", "type": "Charset", "declarator": "DEFAULT_CHARSET = StandardCharsets.UTF_8", "var_name": "DEFAULT_CHARSET"}], "methods": [{"identifier": "StateReader", "parameters": "()", "modifiers": "public", "return": "", "signature": " StateReader()", "full_signature": "public  StateReader()", "class_method_signature": "StateReader.StateReader()", "testcase": false, "constructor": true}, {"identifier": "read", "parameters": "(InputStream in)", "modifiers": "public", "return": "TerraformState", "signature": "TerraformState read(InputStream in)", "full_signature": "public TerraformState read(InputStream in)", "class_method_signature": "StateReader.read(InputStream in)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(Reader reader)", "modifiers": "public", "return": "TerraformState", "signature": "TerraformState read(Reader reader)", "full_signature": "public TerraformState read(Reader reader)", "class_method_signature": "StateReader.read(Reader reader)", "testcase": false, "constructor": false}], "file": "core/src/main/java/de/lise/terradoc/core/state/StateReader.java"}, "focal_method": {"identifier": "read", "parameters": "(InputStream in)", "modifiers": "public", "return": "TerraformState", "body": "public TerraformState read(InputStream in) throws IOException {\n        try(InputStreamReader reader = new InputStreamReader(in, DEFAULT_CHARSET)){\n            return read(reader);\n        }\n    }", "signature": "TerraformState read(InputStream in)", "full_signature": "public TerraformState read(InputStream in)", "class_method_signature": "StateReader.read(InputStream in)", "testcase": false, "constructor": false, "invocations": ["read"]}, "repository": {"repo_id": 209830490, "url": "https://github.com/lisegmbh/terradoc", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 117, "license": "licensed"}}