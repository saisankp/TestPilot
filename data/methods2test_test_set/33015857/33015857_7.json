{"test_class": {"identifier": "LngTest", "superclass": "", "interfaces": "", "fields": [], "file": "reflekt/src/test/java/io/advantageous/boon/primitive/LngTest.java"}, "test_case": {"identifier": "testSliceOf", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSliceOf() {\n        long[] array = Lng.array(0, 1, 2, 3, 4, 5, 6);\n        long[] array2 = Lng.sliceOf(array, 0, 100);\n        Lng.equalsOrDie(array, array2);\n\n    }", "signature": "void testSliceOf()", "full_signature": "@Test public void testSliceOf()", "class_method_signature": "LngTest.testSliceOf()", "testcase": true, "constructor": false, "invocations": ["array", "sliceOf", "equalsOrDie"]}, "focal_class": {"identifier": "Lng", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "str", "parameters": "( long value )", "modifiers": "public static", "return": "String", "signature": "String str( long value )", "full_signature": "public static String str( long value )", "class_method_signature": "Lng.str( long value )", "testcase": false, "constructor": false}, {"identifier": "grow", "parameters": "( long[] array, final int size )", "modifiers": "public static", "return": "long[]", "signature": "long[] grow( long[] array, final int size )", "full_signature": "public static long[] grow( long[] array, final int size )", "class_method_signature": "Lng.grow( long[] array, final int size )", "testcase": false, "constructor": false}, {"identifier": "grow", "parameters": "( long[] array )", "modifiers": "public static", "return": "long[]", "signature": "long[] grow( long[] array )", "full_signature": "public static long[] grow( long[] array )", "class_method_signature": "Lng.grow( long[] array )", "testcase": false, "constructor": false}, {"identifier": "shrink", "parameters": "( long[] array, int size )", "modifiers": "public static", "return": "long[]", "signature": "long[] shrink( long[] array, int size )", "full_signature": "public static long[] shrink( long[] array, int size )", "class_method_signature": "Lng.shrink( long[] array, int size )", "testcase": false, "constructor": false}, {"identifier": "compact", "parameters": "( long[] array )", "modifiers": "public static", "return": "long[]", "signature": "long[] compact( long[] array )", "full_signature": "public static long[] compact( long[] array )", "class_method_signature": "Lng.compact( long[] array )", "testcase": false, "constructor": false}, {"identifier": "arrayOfLong", "parameters": "( final int size )", "modifiers": "public static", "return": "long[]", "signature": "long[] arrayOfLong( final int size )", "full_signature": "public static long[] arrayOfLong( final int size )", "class_method_signature": "Lng.arrayOfLong( final int size )", "testcase": false, "constructor": false}, {"identifier": "array", "parameters": "( final long... array )", "modifiers": "public static", "return": "long[]", "signature": "long[] array( final long... array )", "full_signature": "public static long[] array( final long... array )", "class_method_signature": "Lng.array( final long... array )", "testcase": false, "constructor": false}, {"identifier": "len", "parameters": "( long[] array )", "modifiers": "public static", "return": "int", "signature": "int len( long[] array )", "full_signature": "public static int len( long[] array )", "class_method_signature": "Lng.len( long[] array )", "testcase": false, "constructor": false}, {"identifier": "lengthOf", "parameters": "( long[] array )", "modifiers": "public static", "return": "int", "signature": "int lengthOf( long[] array )", "full_signature": "public static int lengthOf( long[] array )", "class_method_signature": "Lng.lengthOf( long[] array )", "testcase": false, "constructor": false}, {"identifier": "idx", "parameters": "( final long[] array, final int index )", "modifiers": "public static", "return": "long", "signature": "long idx( final long[] array, final int index )", "full_signature": "public static long idx( final long[] array, final int index )", "class_method_signature": "Lng.idx( final long[] array, final int index )", "testcase": false, "constructor": false}, {"identifier": "atIndex", "parameters": "( final long[] array, final int index )", "modifiers": "public static", "return": "long", "signature": "long atIndex( final long[] array, final int index )", "full_signature": "public static long atIndex( final long[] array, final int index )", "class_method_signature": "Lng.atIndex( final long[] array, final int index )", "testcase": false, "constructor": false}, {"identifier": "idx", "parameters": "( final long[] array, int index, long value )", "modifiers": "public static", "return": "void", "signature": "void idx( final long[] array, int index, long value )", "full_signature": "public static void idx( final long[] array, int index, long value )", "class_method_signature": "Lng.idx( final long[] array, int index, long value )", "testcase": false, "constructor": false}, {"identifier": "atIndex", "parameters": "( final long[] array, int index, long value )", "modifiers": "public static", "return": "void", "signature": "void atIndex( final long[] array, int index, long value )", "full_signature": "public static void atIndex( final long[] array, int index, long value )", "class_method_signature": "Lng.atIndex( final long[] array, int index, long value )", "testcase": false, "constructor": false}, {"identifier": "slc", "parameters": "( long[] array, int startIndex, int endIndex )", "modifiers": "public static", "return": "long[]", "signature": "long[] slc( long[] array, int startIndex, int endIndex )", "full_signature": "public static long[] slc( long[] array, int startIndex, int endIndex )", "class_method_signature": "Lng.slc( long[] array, int startIndex, int endIndex )", "testcase": false, "constructor": false}, {"identifier": "sliceOf", "parameters": "( long[] array, int startIndex, int endIndex )", "modifiers": "public static", "return": "long[]", "signature": "long[] sliceOf( long[] array, int startIndex, int endIndex )", "full_signature": "public static long[] sliceOf( long[] array, int startIndex, int endIndex )", "class_method_signature": "Lng.sliceOf( long[] array, int startIndex, int endIndex )", "testcase": false, "constructor": false}, {"identifier": "slc", "parameters": "( long[] array, int startIndex )", "modifiers": "public static", "return": "long[]", "signature": "long[] slc( long[] array, int startIndex )", "full_signature": "public static long[] slc( long[] array, int startIndex )", "class_method_signature": "Lng.slc( long[] array, int startIndex )", "testcase": false, "constructor": false}, {"identifier": "sliceOf", "parameters": "( long[] array, int startIndex )", "modifiers": "public static", "return": "long[]", "signature": "long[] sliceOf( long[] array, int startIndex )", "full_signature": "public static long[] sliceOf( long[] array, int startIndex )", "class_method_signature": "Lng.sliceOf( long[] array, int startIndex )", "testcase": false, "constructor": false}, {"identifier": "slcEnd", "parameters": "( long[] array, int endIndex )", "modifiers": "public static", "return": "long[]", "signature": "long[] slcEnd( long[] array, int endIndex )", "full_signature": "public static long[] slcEnd( long[] array, int endIndex )", "class_method_signature": "Lng.slcEnd( long[] array, int endIndex )", "testcase": false, "constructor": false}, {"identifier": "endSliceOf", "parameters": "( long[] array, int endIndex )", "modifiers": "public static", "return": "long[]", "signature": "long[] endSliceOf( long[] array, int endIndex )", "full_signature": "public static long[] endSliceOf( long[] array, int endIndex )", "class_method_signature": "Lng.endSliceOf( long[] array, int endIndex )", "testcase": false, "constructor": false}, {"identifier": "in", "parameters": "( long value, long[] array )", "modifiers": "public static", "return": "boolean", "signature": "boolean in( long value, long[] array )", "full_signature": "public static boolean in( long value, long[] array )", "class_method_signature": "Lng.in( long value, long[] array )", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "( long[] array )", "modifiers": "public static", "return": "long[]", "signature": "long[] copy( long[] array )", "full_signature": "public static long[] copy( long[] array )", "class_method_signature": "Lng.copy( long[] array )", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "( long[] array, long v )", "modifiers": "public static", "return": "long[]", "signature": "long[] add( long[] array, long v )", "full_signature": "public static long[] add( long[] array, long v )", "class_method_signature": "Lng.add( long[] array, long v )", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "( long[] array, long[] array2 )", "modifiers": "public static", "return": "long[]", "signature": "long[] add( long[] array, long[] array2 )", "full_signature": "public static long[] add( long[] array, long[] array2 )", "class_method_signature": "Lng.add( long[] array, long[] array2 )", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "( final long[] array, final int idx, final long v )", "modifiers": "public static", "return": "long[]", "signature": "long[] insert( final long[] array, final int idx, final long v )", "full_signature": "public static long[] insert( final long[] array, final int idx, final long v )", "class_method_signature": "Lng.insert( final long[] array, final int idx, final long v )", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "( final long[] array, final int fromIndex, final long[] values )", "modifiers": "public static", "return": "long[]", "signature": "long[] insert( final long[] array, final int fromIndex, final long[] values )", "full_signature": "public static long[] insert( final long[] array, final int fromIndex, final long[] values )", "class_method_signature": "Lng.insert( final long[] array, final int fromIndex, final long[] values )", "testcase": false, "constructor": false}, {"identifier": "calculateIndex", "parameters": "( long[] array, int originalIndex )", "modifiers": "private static", "return": "int", "signature": "int calculateIndex( long[] array, int originalIndex )", "full_signature": "private static int calculateIndex( long[] array, int originalIndex )", "class_method_signature": "Lng.calculateIndex( long[] array, int originalIndex )", "testcase": false, "constructor": false}, {"identifier": "calculateEndIndex", "parameters": "( long[] array, int originalIndex )", "modifiers": "private static", "return": "int", "signature": "int calculateEndIndex( long[] array, int originalIndex )", "full_signature": "private static int calculateEndIndex( long[] array, int originalIndex )", "class_method_signature": "Lng.calculateEndIndex( long[] array, int originalIndex )", "testcase": false, "constructor": false}, {"identifier": "reduceBy", "parameters": "( final long[] array, ReduceBy reduceBy )", "modifiers": "public static", "return": "long", "signature": "long reduceBy( final long[] array, ReduceBy reduceBy )", "full_signature": "public static long reduceBy( final long[] array, ReduceBy reduceBy )", "class_method_signature": "Lng.reduceBy( final long[] array, ReduceBy reduceBy )", "testcase": false, "constructor": false}, {"identifier": "reduceBy", "parameters": "( final long[] array, final int start, final int length, ReduceBy reduceBy )", "modifiers": "public static", "return": "long", "signature": "long reduceBy( final long[] array, final int start, final int length, ReduceBy reduceBy )", "full_signature": "public static long reduceBy( final long[] array, final int start, final int length, ReduceBy reduceBy )", "class_method_signature": "Lng.reduceBy( final long[] array, final int start, final int length, ReduceBy reduceBy )", "testcase": false, "constructor": false}, {"identifier": "reduceBy", "parameters": "( final long[] array, final int length, ReduceBy reduceBy )", "modifiers": "public static", "return": "long", "signature": "long reduceBy( final long[] array, final int length, ReduceBy reduceBy )", "full_signature": "public static long reduceBy( final long[] array, final int length, ReduceBy reduceBy )", "class_method_signature": "Lng.reduceBy( final long[] array, final int length, ReduceBy reduceBy )", "testcase": false, "constructor": false}, {"identifier": "reduceBy", "parameters": "( final long[] array, T object )", "modifiers": "public static", "return": "long", "signature": "long reduceBy( final long[] array, T object )", "full_signature": "public static long reduceBy( final long[] array, T object )", "class_method_signature": "Lng.reduceBy( final long[] array, T object )", "testcase": false, "constructor": false}, {"identifier": "reduceBy", "parameters": "( final long[] array, T object, String methodName )", "modifiers": "public static", "return": "long", "signature": "long reduceBy( final long[] array, T object, String methodName )", "full_signature": "public static long reduceBy( final long[] array, T object, String methodName )", "class_method_signature": "Lng.reduceBy( final long[] array, T object, String methodName )", "testcase": false, "constructor": false}, {"identifier": "reduceByR", "parameters": "( final long[] array, T object )", "modifiers": "private static", "return": "long", "signature": "long reduceByR( final long[] array, T object )", "full_signature": "private static long reduceByR( final long[] array, T object )", "class_method_signature": "Lng.reduceByR( final long[] array, T object )", "testcase": false, "constructor": false}, {"identifier": "reduceByR", "parameters": "( final long[] array, T object, String methodName )", "modifiers": "private static", "return": "long", "signature": "long reduceByR( final long[] array, T object, String methodName )", "full_signature": "private static long reduceByR( final long[] array, T object, String methodName )", "class_method_signature": "Lng.reduceByR( final long[] array, T object, String methodName )", "testcase": false, "constructor": false}, {"identifier": "reduceByR", "parameters": "( final long[] array, int length, T object, String methodName )", "modifiers": "private static", "return": "long", "signature": "long reduceByR( final long[] array, int length, T object, String methodName )", "full_signature": "private static long reduceByR( final long[] array, int length, T object, String methodName )", "class_method_signature": "Lng.reduceByR( final long[] array, int length, T object, String methodName )", "testcase": false, "constructor": false}, {"identifier": "reduceByR", "parameters": "( final long[] array, int length, T object )", "modifiers": "private static", "return": "long", "signature": "long reduceByR( final long[] array, int length, T object )", "full_signature": "private static long reduceByR( final long[] array, int length, T object )", "class_method_signature": "Lng.reduceByR( final long[] array, int length, T object )", "testcase": false, "constructor": false}, {"identifier": "reduceBy", "parameters": "( final long[] array,  int length,\n                                 Object object )", "modifiers": "public static", "return": "long", "signature": "long reduceBy( final long[] array,  int length,\n                                 Object object )", "full_signature": "public static long reduceBy( final long[] array,  int length,\n                                 Object object )", "class_method_signature": "Lng.reduceBy( final long[] array,  int length,\n                                 Object object )", "testcase": false, "constructor": false}, {"identifier": "reduceBy", "parameters": "( final long[] array,  int length,\n                                 Object function, String functionName )", "modifiers": "public static", "return": "long", "signature": "long reduceBy( final long[] array,  int length,\n                                 Object function, String functionName )", "full_signature": "public static long reduceBy( final long[] array,  int length,\n                                 Object function, String functionName )", "class_method_signature": "Lng.reduceBy( final long[] array,  int length,\n                                 Object function, String functionName )", "testcase": false, "constructor": false}, {"identifier": "reduceBy", "parameters": "( final long[] array, int start, int length,\n                                 Object object )", "modifiers": "public static", "return": "long", "signature": "long reduceBy( final long[] array, int start, int length,\n                                 Object object )", "full_signature": "public static long reduceBy( final long[] array, int start, int length,\n                                 Object object )", "class_method_signature": "Lng.reduceBy( final long[] array, int start, int length,\n                                 Object object )", "testcase": false, "constructor": false}, {"identifier": "equalsOrDie", "parameters": "(long expected, long got)", "modifiers": "public static", "return": "boolean", "signature": "boolean equalsOrDie(long expected, long got)", "full_signature": "public static boolean equalsOrDie(long expected, long got)", "class_method_signature": "Lng.equalsOrDie(long expected, long got)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(long expected, long got)", "modifiers": "public static", "return": "boolean", "signature": "boolean equals(long expected, long got)", "full_signature": "public static boolean equals(long expected, long got)", "class_method_signature": "Lng.equals(long expected, long got)", "testcase": false, "constructor": false}, {"identifier": "sum", "parameters": "( long[] values )", "modifiers": "public static", "return": "long", "signature": "long sum( long[] values )", "full_signature": "public static long sum( long[] values )", "class_method_signature": "Lng.sum( long[] values )", "testcase": false, "constructor": false}, {"identifier": "sum", "parameters": "( long[] values,  int length )", "modifiers": "public static", "return": "long", "signature": "long sum( long[] values,  int length )", "full_signature": "public static long sum( long[] values,  int length )", "class_method_signature": "Lng.sum( long[] values,  int length )", "testcase": false, "constructor": false}, {"identifier": "sum", "parameters": "( long[] values, int start, int length )", "modifiers": "public static", "return": "long", "signature": "long sum( long[] values, int start, int length )", "full_signature": "public static long sum( long[] values, int start, int length )", "class_method_signature": "Lng.sum( long[] values, int start, int length )", "testcase": false, "constructor": false}, {"identifier": "max", "parameters": "( long[] values, final int start, final int length )", "modifiers": "public static", "return": "long", "signature": "long max( long[] values, final int start, final int length )", "full_signature": "public static long max( long[] values, final int start, final int length )", "class_method_signature": "Lng.max( long[] values, final int start, final int length )", "testcase": false, "constructor": false}, {"identifier": "max", "parameters": "( long[] values )", "modifiers": "public static", "return": "long", "signature": "long max( long[] values )", "full_signature": "public static long max( long[] values )", "class_method_signature": "Lng.max( long[] values )", "testcase": false, "constructor": false}, {"identifier": "max", "parameters": "( long[] values, int length )", "modifiers": "public static", "return": "long", "signature": "long max( long[] values, int length )", "full_signature": "public static long max( long[] values, int length )", "class_method_signature": "Lng.max( long[] values, int length )", "testcase": false, "constructor": false}, {"identifier": "min", "parameters": "( long[] values, final int start, final int length )", "modifiers": "public static", "return": "long", "signature": "long min( long[] values, final int start, final int length )", "full_signature": "public static long min( long[] values, final int start, final int length )", "class_method_signature": "Lng.min( long[] values, final int start, final int length )", "testcase": false, "constructor": false}, {"identifier": "min", "parameters": "( long[] values )", "modifiers": "public static", "return": "long", "signature": "long min( long[] values )", "full_signature": "public static long min( long[] values )", "class_method_signature": "Lng.min( long[] values )", "testcase": false, "constructor": false}, {"identifier": "min", "parameters": "( long[] values, int length )", "modifiers": "public static", "return": "long", "signature": "long min( long[] values, int length )", "full_signature": "public static long min( long[] values, int length )", "class_method_signature": "Lng.min( long[] values, int length )", "testcase": false, "constructor": false}, {"identifier": "mean", "parameters": "( long[] values, final int start, final int length )", "modifiers": "public static", "return": "long", "signature": "long mean( long[] values, final int start, final int length )", "full_signature": "public static long mean( long[] values, final int start, final int length )", "class_method_signature": "Lng.mean( long[] values, final int start, final int length )", "testcase": false, "constructor": false}, {"identifier": "mean", "parameters": "( long[] values, final int length )", "modifiers": "public static", "return": "long", "signature": "long mean( long[] values, final int length )", "full_signature": "public static long mean( long[] values, final int length )", "class_method_signature": "Lng.mean( long[] values, final int length )", "testcase": false, "constructor": false}, {"identifier": "mean", "parameters": "( long[] values )", "modifiers": "public static", "return": "long", "signature": "long mean( long[] values )", "full_signature": "public static long mean( long[] values )", "class_method_signature": "Lng.mean( long[] values )", "testcase": false, "constructor": false}, {"identifier": "variance", "parameters": "(long[] values, final int start, final int length)", "modifiers": "public static", "return": "long", "signature": "long variance(long[] values, final int start, final int length)", "full_signature": "public static long variance(long[] values, final int start, final int length)", "class_method_signature": "Lng.variance(long[] values, final int start, final int length)", "testcase": false, "constructor": false}, {"identifier": "meanDouble", "parameters": "( long[] values, final int start, final int length )", "modifiers": "public static", "return": "double", "signature": "double meanDouble( long[] values, final int start, final int length )", "full_signature": "public static double meanDouble( long[] values, final int start, final int length )", "class_method_signature": "Lng.meanDouble( long[] values, final int start, final int length )", "testcase": false, "constructor": false}, {"identifier": "varianceDouble", "parameters": "(long[] values, final int start, final int length)", "modifiers": "public static", "return": "double", "signature": "double varianceDouble(long[] values, final int start, final int length)", "full_signature": "public static double varianceDouble(long[] values, final int start, final int length)", "class_method_signature": "Lng.varianceDouble(long[] values, final int start, final int length)", "testcase": false, "constructor": false}, {"identifier": "variance", "parameters": "(long[] values,  final int length)", "modifiers": "public static", "return": "long", "signature": "long variance(long[] values,  final int length)", "full_signature": "public static long variance(long[] values,  final int length)", "class_method_signature": "Lng.variance(long[] values,  final int length)", "testcase": false, "constructor": false}, {"identifier": "variance", "parameters": "(long[] values)", "modifiers": "public static", "return": "long", "signature": "long variance(long[] values)", "full_signature": "public static long variance(long[] values)", "class_method_signature": "Lng.variance(long[] values)", "testcase": false, "constructor": false}, {"identifier": "standardDeviation", "parameters": "(long[] values, final int start, final int length)", "modifiers": "public static", "return": "long", "signature": "long standardDeviation(long[] values, final int start, final int length)", "full_signature": "public static long standardDeviation(long[] values, final int start, final int length)", "class_method_signature": "Lng.standardDeviation(long[] values, final int start, final int length)", "testcase": false, "constructor": false}, {"identifier": "standardDeviation", "parameters": "(long[] values,  final int length)", "modifiers": "public static", "return": "long", "signature": "long standardDeviation(long[] values,  final int length)", "full_signature": "public static long standardDeviation(long[] values,  final int length)", "class_method_signature": "Lng.standardDeviation(long[] values,  final int length)", "testcase": false, "constructor": false}, {"identifier": "standardDeviation", "parameters": "(long[] values)", "modifiers": "public static", "return": "int", "signature": "int standardDeviation(long[] values)", "full_signature": "public static int standardDeviation(long[] values)", "class_method_signature": "Lng.standardDeviation(long[] values)", "testcase": false, "constructor": false}, {"identifier": "median", "parameters": "(long[] values, final int start, final int length)", "modifiers": "public static", "return": "long", "signature": "long median(long[] values, final int start, final int length)", "full_signature": "public static long median(long[] values, final int start, final int length)", "class_method_signature": "Lng.median(long[] values, final int start, final int length)", "testcase": false, "constructor": false}, {"identifier": "median", "parameters": "(long[] values, final int length)", "modifiers": "public static", "return": "long", "signature": "long median(long[] values, final int length)", "full_signature": "public static long median(long[] values, final int length)", "class_method_signature": "Lng.median(long[] values, final int length)", "testcase": false, "constructor": false}, {"identifier": "median", "parameters": "(long[] values)", "modifiers": "public static", "return": "long", "signature": "long median(long[] values)", "full_signature": "public static long median(long[] values)", "class_method_signature": "Lng.median(long[] values)", "testcase": false, "constructor": false}, {"identifier": "equalsOrDie", "parameters": "(long[] expected, long[] got)", "modifiers": "public static", "return": "boolean", "signature": "boolean equalsOrDie(long[] expected, long[] got)", "full_signature": "public static boolean equalsOrDie(long[] expected, long[] got)", "class_method_signature": "Lng.equalsOrDie(long[] expected, long[] got)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(long[] expected, long[] got)", "modifiers": "public static", "return": "boolean", "signature": "boolean equals(long[] expected, long[] got)", "full_signature": "public static boolean equals(long[] expected, long[] got)", "class_method_signature": "Lng.equals(long[] expected, long[] got)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(int start, int end, long[] expected, long[] got)", "modifiers": "public static", "return": "boolean", "signature": "boolean equals(int start, int end, long[] expected, long[] got)", "full_signature": "public static boolean equals(int start, int end, long[] expected, long[] got)", "class_method_signature": "Lng.equals(int start, int end, long[] expected, long[] got)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "(long array[])", "modifiers": "public static", "return": "int", "signature": "int hashCode(long array[])", "full_signature": "public static int hashCode(long array[])", "class_method_signature": "Lng.hashCode(long array[])", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "(int start, int end, long array[])", "modifiers": "public static", "return": "int", "signature": "int hashCode(int start, int end, long array[])", "full_signature": "public static int hashCode(int start, int end, long array[])", "class_method_signature": "Lng.hashCode(int start, int end, long array[])", "testcase": false, "constructor": false}], "file": "reflekt/src/main/java/io/advantageous/boon/primitive/Lng.java"}, "focal_method": {"identifier": "sliceOf", "parameters": "( long[] array, int startIndex, int endIndex )", "modifiers": "public static", "return": "long[]", "body": "public static long[] sliceOf( long[] array, int startIndex, int endIndex ) {\n\n        final int start = calculateIndex( array, startIndex );\n        final int end = calculateEndIndex( array, endIndex );\n        final int newLength = end - start;\n\n        if ( newLength < 0 ) {\n            throw new ArrayIndexOutOfBoundsException(\n                    String.format( \"start index %d, end index %d, length %d\",\n                            startIndex, endIndex, array.length )\n            );\n        }\n\n        long[] newArray = new long[ newLength ];\n        System.arraycopy( array, start, newArray, 0, newLength );\n        return newArray;\n    }", "signature": "long[] sliceOf( long[] array, int startIndex, int endIndex )", "full_signature": "public static long[] sliceOf( long[] array, int startIndex, int endIndex )", "class_method_signature": "Lng.sliceOf( long[] array, int startIndex, int endIndex )", "testcase": false, "constructor": false, "invocations": ["calculateIndex", "calculateEndIndex", "format", "arraycopy"]}, "repository": {"repo_id": 33015857, "url": "https://github.com/advantageous/boon", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 18, "size": 6174, "license": "licensed"}}