{"test_class": {"identifier": "PathPrefixUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "common/src/test/java/com/gentics/mesh/core/webroot/PathPrefixUtilTest.java"}, "test_case": {"identifier": "testStrip", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testStrip() {\n\t\tBranch branch = Mockito.mock(Branch.class);\n\t\twhen(branch.getPathPrefix()).thenReturn(\"\");\n\t\tassertEquals(\"\", PathPrefixUtil.strip(branch, \"\"));\n\n\t\twhen(branch.getPathPrefix()).thenReturn(\"abc\");\n\t\tassertEquals(\"\", PathPrefixUtil.strip(branch, \"\"));\n\t\tassertEquals(\"\", PathPrefixUtil.strip(branch, \"/abc\"));\n\t}", "signature": "void testStrip()", "full_signature": "@Test public void testStrip()", "class_method_signature": "PathPrefixUtilTest.testStrip()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getPathPrefix", "assertEquals", "strip", "thenReturn", "when", "getPathPrefix", "assertEquals", "strip", "assertEquals", "strip"]}, "focal_class": {"identifier": "PathPrefixUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "PathPrefixUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " PathPrefixUtil()", "full_signature": "private  PathPrefixUtil()", "class_method_signature": "PathPrefixUtil.PathPrefixUtil()", "testcase": false, "constructor": true}, {"identifier": "sanitize", "parameters": "(String prefix)", "modifiers": "public static", "return": "String", "signature": "String sanitize(String prefix)", "full_signature": "public static String sanitize(String prefix)", "class_method_signature": "PathPrefixUtil.sanitize(String prefix)", "testcase": false, "constructor": false}, {"identifier": "strip", "parameters": "(HibBranch branch, String path)", "modifiers": "public static", "return": "String", "signature": "String strip(HibBranch branch, String path)", "full_signature": "public static String strip(HibBranch branch, String path)", "class_method_signature": "PathPrefixUtil.strip(HibBranch branch, String path)", "testcase": false, "constructor": false}, {"identifier": "startsWithPrefix", "parameters": "(HibBranch branch, String path)", "modifiers": "public static", "return": "boolean", "signature": "boolean startsWithPrefix(HibBranch branch, String path)", "full_signature": "public static boolean startsWithPrefix(HibBranch branch, String path)", "class_method_signature": "PathPrefixUtil.startsWithPrefix(HibBranch branch, String path)", "testcase": false, "constructor": false}], "file": "common/src/main/java/com/gentics/mesh/core/webroot/PathPrefixUtil.java"}, "focal_method": {"identifier": "strip", "parameters": "(HibBranch branch, String path)", "modifiers": "public static", "return": "String", "body": "public static String strip(HibBranch branch, String path) {\n\t\tString prefix = branch.getPathPrefix();\n\t\tprefix = sanitize(prefix);\n\t\treturn !startsWithPrefix(branch, path) ? path : path.substring(prefix.length());\n\t}", "signature": "String strip(HibBranch branch, String path)", "full_signature": "public static String strip(HibBranch branch, String path)", "class_method_signature": "PathPrefixUtil.strip(HibBranch branch, String path)", "testcase": false, "constructor": false, "invocations": ["getPathPrefix", "sanitize", "startsWithPrefix", "substring", "length"]}, "repository": {"repo_id": 67999496, "url": "https://github.com/gentics/mesh", "stars": 412, "created": "9/12/2016 10:28:41 AM +00:00", "updates": "2020-01-27T10:25:42+00:00", "fork": "False", "license": "licensed"}}