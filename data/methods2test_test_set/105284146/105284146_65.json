{"test_class": {"identifier": "XmlUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String XML = String.join(System.lineSeparator(),\n            \"<a>\",\n            \"    <b>\",\n            \"        <c/>\",\n            \"    </b>\",\n            \"    <d/>\",\n            \"</a>\");", "modifier": "private static final", "type": "String", "declarator": "XML = String.join(System.lineSeparator(),\n            \"<a>\",\n            \"    <b>\",\n            \"        <c/>\",\n            \"    </b>\",\n            \"    <d/>\",\n            \"</a>\")", "var_name": "XML"}], "file": "commons/src/test/java/com/powsybl/commons/xml/XmlUtilTest.java"}, "test_case": {"identifier": "readUntilStartElementTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void readUntilStartElementTest() throws XMLStreamException {\n        readUntilStartElementTest(\"/a\", \"a\");\n        readUntilStartElementTest(\"/a/b/c\", \"c\");\n        readUntilStartElementTest(\"/a/d\", \"d\");\n\n        readUntilStartElementNotFoundTest(\"/a/e\", \"a\");\n        readUntilStartElementNotFoundTest(\"/a/b/a\", \"b\");\n\n        try {\n            readUntilStartElementTest(\"/b\", null);\n        } catch (PowsyblException e) {\n            assertEquals(\"Unable to find b: end of document has been reached\", e.getMessage());\n        }\n    }", "signature": "void readUntilStartElementTest()", "full_signature": "@Test public void readUntilStartElementTest()", "class_method_signature": "XmlUtilTest.readUntilStartElementTest()", "testcase": true, "constructor": false, "invocations": ["readUntilStartElementTest", "readUntilStartElementTest", "readUntilStartElementTest", "readUntilStartElementNotFoundTest", "readUntilStartElementNotFoundTest", "readUntilStartElementTest", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "XmlUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Supplier<XMLOutputFactory> XML_OUTPUT_FACTORY_SUPPLIER = Suppliers.memoize(XMLOutputFactory::newFactory);", "modifier": "private static final", "type": "Supplier<XMLOutputFactory>", "declarator": "XML_OUTPUT_FACTORY_SUPPLIER = Suppliers.memoize(XMLOutputFactory::newFactory)", "var_name": "XML_OUTPUT_FACTORY_SUPPLIER"}], "methods": [{"identifier": "XmlUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " XmlUtil()", "full_signature": "private  XmlUtil()", "class_method_signature": "XmlUtil.XmlUtil()", "testcase": false, "constructor": true}, {"identifier": "readUntilStartElement", "parameters": "(String path, XMLStreamReader reader, XmlEventHandler handler)", "modifiers": "public static", "return": "void", "signature": "void readUntilStartElement(String path, XMLStreamReader reader, XmlEventHandler handler)", "full_signature": "public static void readUntilStartElement(String path, XMLStreamReader reader, XmlEventHandler handler)", "class_method_signature": "XmlUtil.readUntilStartElement(String path, XMLStreamReader reader, XmlEventHandler handler)", "testcase": false, "constructor": false}, {"identifier": "readUntilStartElement", "parameters": "(String[] elements, XMLStreamReader reader, XmlEventHandler handler)", "modifiers": "public static", "return": "void", "signature": "void readUntilStartElement(String[] elements, XMLStreamReader reader, XmlEventHandler handler)", "full_signature": "public static void readUntilStartElement(String[] elements, XMLStreamReader reader, XmlEventHandler handler)", "class_method_signature": "XmlUtil.readUntilStartElement(String[] elements, XMLStreamReader reader, XmlEventHandler handler)", "testcase": false, "constructor": false}, {"identifier": "readUntilStartElement", "parameters": "(String startElement, String endElement, XMLStreamReader reader)", "modifiers": "private static", "return": "boolean", "signature": "boolean readUntilStartElement(String startElement, String endElement, XMLStreamReader reader)", "full_signature": "private static boolean readUntilStartElement(String startElement, String endElement, XMLStreamReader reader)", "class_method_signature": "XmlUtil.readUntilStartElement(String startElement, String endElement, XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "readUntilEndElement", "parameters": "(String endElementName, XMLStreamReader reader, XmlEventHandler eventHandler)", "modifiers": "public static", "return": "String", "signature": "String readUntilEndElement(String endElementName, XMLStreamReader reader, XmlEventHandler eventHandler)", "full_signature": "public static String readUntilEndElement(String endElementName, XMLStreamReader reader, XmlEventHandler eventHandler)", "class_method_signature": "XmlUtil.readUntilEndElement(String endElementName, XMLStreamReader reader, XmlEventHandler eventHandler)", "testcase": false, "constructor": false}, {"identifier": "readUntilEndElementWithDepth", "parameters": "(String endElementName, XMLStreamReader reader, XmlEventHandlerWithDepth eventHandler)", "modifiers": "public static", "return": "String", "signature": "String readUntilEndElementWithDepth(String endElementName, XMLStreamReader reader, XmlEventHandlerWithDepth eventHandler)", "full_signature": "public static String readUntilEndElementWithDepth(String endElementName, XMLStreamReader reader, XmlEventHandlerWithDepth eventHandler)", "class_method_signature": "XmlUtil.readUntilEndElementWithDepth(String endElementName, XMLStreamReader reader, XmlEventHandlerWithDepth eventHandler)", "testcase": false, "constructor": false}, {"identifier": "readText", "parameters": "(String endElementName, XMLStreamReader reader)", "modifiers": "public static", "return": "String", "signature": "String readText(String endElementName, XMLStreamReader reader)", "full_signature": "public static String readText(String endElementName, XMLStreamReader reader)", "class_method_signature": "XmlUtil.readText(String endElementName, XMLStreamReader reader)", "testcase": false, "constructor": false}, {"identifier": "writeOptionalBoolean", "parameters": "(String name, boolean value, boolean absentValue, XMLStreamWriter writer)", "modifiers": "public static", "return": "void", "signature": "void writeOptionalBoolean(String name, boolean value, boolean absentValue, XMLStreamWriter writer)", "full_signature": "public static void writeOptionalBoolean(String name, boolean value, boolean absentValue, XMLStreamWriter writer)", "class_method_signature": "XmlUtil.writeOptionalBoolean(String name, boolean value, boolean absentValue, XMLStreamWriter writer)", "testcase": false, "constructor": false}, {"identifier": "writeDouble", "parameters": "(String name, double value, XMLStreamWriter writer)", "modifiers": "public static", "return": "void", "signature": "void writeDouble(String name, double value, XMLStreamWriter writer)", "full_signature": "public static void writeDouble(String name, double value, XMLStreamWriter writer)", "class_method_signature": "XmlUtil.writeDouble(String name, double value, XMLStreamWriter writer)", "testcase": false, "constructor": false}, {"identifier": "writeOptionalDouble", "parameters": "(String name, double value, double absentValue, XMLStreamWriter writer)", "modifiers": "public static", "return": "void", "signature": "void writeOptionalDouble(String name, double value, double absentValue, XMLStreamWriter writer)", "full_signature": "public static void writeOptionalDouble(String name, double value, double absentValue, XMLStreamWriter writer)", "class_method_signature": "XmlUtil.writeOptionalDouble(String name, double value, double absentValue, XMLStreamWriter writer)", "testcase": false, "constructor": false}, {"identifier": "writeFloat", "parameters": "(String name, float value, XMLStreamWriter writer)", "modifiers": "public static", "return": "void", "signature": "void writeFloat(String name, float value, XMLStreamWriter writer)", "full_signature": "public static void writeFloat(String name, float value, XMLStreamWriter writer)", "class_method_signature": "XmlUtil.writeFloat(String name, float value, XMLStreamWriter writer)", "testcase": false, "constructor": false}, {"identifier": "writeOptionalFloat", "parameters": "(String name, float value, float absentValue, XMLStreamWriter writer)", "modifiers": "public static", "return": "void", "signature": "void writeOptionalFloat(String name, float value, float absentValue, XMLStreamWriter writer)", "full_signature": "public static void writeOptionalFloat(String name, float value, float absentValue, XMLStreamWriter writer)", "class_method_signature": "XmlUtil.writeOptionalFloat(String name, float value, float absentValue, XMLStreamWriter writer)", "testcase": false, "constructor": false}, {"identifier": "writeInt", "parameters": "(String name, int value, XMLStreamWriter writer)", "modifiers": "public static", "return": "void", "signature": "void writeInt(String name, int value, XMLStreamWriter writer)", "full_signature": "public static void writeInt(String name, int value, XMLStreamWriter writer)", "class_method_signature": "XmlUtil.writeInt(String name, int value, XMLStreamWriter writer)", "testcase": false, "constructor": false}, {"identifier": "writeOptionalInt", "parameters": "(String name, int value, int absentValue, XMLStreamWriter writer)", "modifiers": "public static", "return": "void", "signature": "void writeOptionalInt(String name, int value, int absentValue, XMLStreamWriter writer)", "full_signature": "public static void writeOptionalInt(String name, int value, int absentValue, XMLStreamWriter writer)", "class_method_signature": "XmlUtil.writeOptionalInt(String name, int value, int absentValue, XMLStreamWriter writer)", "testcase": false, "constructor": false}, {"identifier": "writeOptionalString", "parameters": "(String name, String value, XMLStreamWriter writer)", "modifiers": "public static", "return": "void", "signature": "void writeOptionalString(String name, String value, XMLStreamWriter writer)", "full_signature": "public static void writeOptionalString(String name, String value, XMLStreamWriter writer)", "class_method_signature": "XmlUtil.writeOptionalString(String name, String value, XMLStreamWriter writer)", "testcase": false, "constructor": false}, {"identifier": "readIntAttribute", "parameters": "(XMLStreamReader reader, String attributeName)", "modifiers": "public static", "return": "int", "signature": "int readIntAttribute(XMLStreamReader reader, String attributeName)", "full_signature": "public static int readIntAttribute(XMLStreamReader reader, String attributeName)", "class_method_signature": "XmlUtil.readIntAttribute(XMLStreamReader reader, String attributeName)", "testcase": false, "constructor": false}, {"identifier": "readBoolAttribute", "parameters": "(XMLStreamReader reader, String attributeName)", "modifiers": "public static", "return": "boolean", "signature": "boolean readBoolAttribute(XMLStreamReader reader, String attributeName)", "full_signature": "public static boolean readBoolAttribute(XMLStreamReader reader, String attributeName)", "class_method_signature": "XmlUtil.readBoolAttribute(XMLStreamReader reader, String attributeName)", "testcase": false, "constructor": false}, {"identifier": "readOptionalBoolAttribute", "parameters": "(XMLStreamReader reader, String attributeName, boolean defaultValue)", "modifiers": "public static", "return": "boolean", "signature": "boolean readOptionalBoolAttribute(XMLStreamReader reader, String attributeName, boolean defaultValue)", "full_signature": "public static boolean readOptionalBoolAttribute(XMLStreamReader reader, String attributeName, boolean defaultValue)", "class_method_signature": "XmlUtil.readOptionalBoolAttribute(XMLStreamReader reader, String attributeName, boolean defaultValue)", "testcase": false, "constructor": false}, {"identifier": "readDoubleAttribute", "parameters": "(XMLStreamReader reader, String attributeName)", "modifiers": "public static", "return": "double", "signature": "double readDoubleAttribute(XMLStreamReader reader, String attributeName)", "full_signature": "public static double readDoubleAttribute(XMLStreamReader reader, String attributeName)", "class_method_signature": "XmlUtil.readDoubleAttribute(XMLStreamReader reader, String attributeName)", "testcase": false, "constructor": false}, {"identifier": "readOptionalDoubleAttribute", "parameters": "(XMLStreamReader reader, String attributeName)", "modifiers": "public static", "return": "double", "signature": "double readOptionalDoubleAttribute(XMLStreamReader reader, String attributeName)", "full_signature": "public static double readOptionalDoubleAttribute(XMLStreamReader reader, String attributeName)", "class_method_signature": "XmlUtil.readOptionalDoubleAttribute(XMLStreamReader reader, String attributeName)", "testcase": false, "constructor": false}, {"identifier": "readOptionalDoubleAttribute", "parameters": "(XMLStreamReader reader, String attributeName, double defaultValue)", "modifiers": "public static", "return": "double", "signature": "double readOptionalDoubleAttribute(XMLStreamReader reader, String attributeName, double defaultValue)", "full_signature": "public static double readOptionalDoubleAttribute(XMLStreamReader reader, String attributeName, double defaultValue)", "class_method_signature": "XmlUtil.readOptionalDoubleAttribute(XMLStreamReader reader, String attributeName, double defaultValue)", "testcase": false, "constructor": false}, {"identifier": "readOptionalIntegerAttribute", "parameters": "(XMLStreamReader reader, String attributeName)", "modifiers": "public static", "return": "Integer", "signature": "Integer readOptionalIntegerAttribute(XMLStreamReader reader, String attributeName)", "full_signature": "public static Integer readOptionalIntegerAttribute(XMLStreamReader reader, String attributeName)", "class_method_signature": "XmlUtil.readOptionalIntegerAttribute(XMLStreamReader reader, String attributeName)", "testcase": false, "constructor": false}, {"identifier": "readOptionalIntegerAttribute", "parameters": "(XMLStreamReader reader, String attributeName, int defaultValue)", "modifiers": "public static", "return": "int", "signature": "int readOptionalIntegerAttribute(XMLStreamReader reader, String attributeName, int defaultValue)", "full_signature": "public static int readOptionalIntegerAttribute(XMLStreamReader reader, String attributeName, int defaultValue)", "class_method_signature": "XmlUtil.readOptionalIntegerAttribute(XMLStreamReader reader, String attributeName, int defaultValue)", "testcase": false, "constructor": false}, {"identifier": "readFloatAttribute", "parameters": "(XMLStreamReader reader, String attributeName)", "modifiers": "public static", "return": "float", "signature": "float readFloatAttribute(XMLStreamReader reader, String attributeName)", "full_signature": "public static float readFloatAttribute(XMLStreamReader reader, String attributeName)", "class_method_signature": "XmlUtil.readFloatAttribute(XMLStreamReader reader, String attributeName)", "testcase": false, "constructor": false}, {"identifier": "readOptionalFloatAttribute", "parameters": "(XMLStreamReader reader, String attributeName)", "modifiers": "public static", "return": "float", "signature": "float readOptionalFloatAttribute(XMLStreamReader reader, String attributeName)", "full_signature": "public static float readOptionalFloatAttribute(XMLStreamReader reader, String attributeName)", "class_method_signature": "XmlUtil.readOptionalFloatAttribute(XMLStreamReader reader, String attributeName)", "testcase": false, "constructor": false}, {"identifier": "readOptionalFloatAttribute", "parameters": "(XMLStreamReader reader, String attributeName, float defaultValue)", "modifiers": "public static", "return": "float", "signature": "float readOptionalFloatAttribute(XMLStreamReader reader, String attributeName, float defaultValue)", "full_signature": "public static float readOptionalFloatAttribute(XMLStreamReader reader, String attributeName, float defaultValue)", "class_method_signature": "XmlUtil.readOptionalFloatAttribute(XMLStreamReader reader, String attributeName, float defaultValue)", "testcase": false, "constructor": false}, {"identifier": "initializeWriter", "parameters": "(boolean indent, String indentString, OutputStream os)", "modifiers": "public static", "return": "XMLStreamWriter", "signature": "XMLStreamWriter initializeWriter(boolean indent, String indentString, OutputStream os)", "full_signature": "public static XMLStreamWriter initializeWriter(boolean indent, String indentString, OutputStream os)", "class_method_signature": "XmlUtil.initializeWriter(boolean indent, String indentString, OutputStream os)", "testcase": false, "constructor": false}], "file": "commons/src/main/java/com/powsybl/commons/xml/XmlUtil.java"}, "focal_method": {"identifier": "readUntilStartElement", "parameters": "(String path, XMLStreamReader reader, XmlEventHandler handler)", "modifiers": "public static", "return": "void", "body": "public static void readUntilStartElement(String path, XMLStreamReader reader, XmlEventHandler handler) throws XMLStreamException {\n        Objects.requireNonNull(path);\n        String[] elements = path.split(\"/\");\n        readUntilStartElement(elements, reader, handler);\n    }", "signature": "void readUntilStartElement(String path, XMLStreamReader reader, XmlEventHandler handler)", "full_signature": "public static void readUntilStartElement(String path, XMLStreamReader reader, XmlEventHandler handler)", "class_method_signature": "XmlUtil.readUntilStartElement(String path, XMLStreamReader reader, XmlEventHandler handler)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "split", "readUntilStartElement"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}