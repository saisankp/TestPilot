{"test_class": {"identifier": "ToggleStateActionTest", "superclass": "", "interfaces": "", "fields": [], "file": "designer/testSrc/com/android/tools/idea/uibuilder/statelist/ToggleStateActionTest.java"}, "test_case": {"identifier": "setSelectedImageIsPressed", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void setSelectedImageIsPressed() {\n    ImageView image = mockImage(new int[]{State.PRESSED.getIntValue()});\n    ToggleAction action = new ToggleStateAction(State.PRESSED, mockSurface(image));\n\n    action.setSelected(new AnActionEvent(null, dataId -> null, \"sdsd\", action.getTemplatePresentation(), ActionManager.getInstance(), -1), false);\n    Mockito.verify(image).setImageState(new int[0], false);\n  }", "signature": "void setSelectedImageIsPressed()", "full_signature": "@Test public void setSelectedImageIsPressed()", "class_method_signature": "ToggleStateActionTest.setSelectedImageIsPressed()", "testcase": true, "constructor": false, "invocations": ["mockImage", "getIntValue", "mockSurface", "setSelected", "getTemplatePresentation", "getInstance", "setImageState", "verify"]}, "focal_class": {"identifier": "ToggleStateAction", "superclass": "extends ToggleAction", "interfaces": "", "fields": [{"original_string": "private final State myState;", "modifier": "private final", "type": "State", "declarator": "myState", "var_name": "myState"}, {"original_string": "private final DesignSurface mySurface;", "modifier": "private final", "type": "DesignSurface", "declarator": "mySurface", "var_name": "mySurface"}], "methods": [{"identifier": "ToggleStateAction", "parameters": "(@NotNull State state, @NotNull DesignSurface surface)", "modifiers": "", "return": "", "signature": " ToggleStateAction(@NotNull State state, @NotNull DesignSurface surface)", "full_signature": "  ToggleStateAction(@NotNull State state, @NotNull DesignSurface surface)", "class_method_signature": "ToggleStateAction.ToggleStateAction(@NotNull State state, @NotNull DesignSurface surface)", "testcase": false, "constructor": true}, {"identifier": "isSelected", "parameters": "(@NotNull AnActionEvent event)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSelected(@NotNull AnActionEvent event)", "full_signature": "@Override public boolean isSelected(@NotNull AnActionEvent event)", "class_method_signature": "ToggleStateAction.isSelected(@NotNull AnActionEvent event)", "testcase": false, "constructor": false}, {"identifier": "setSelected", "parameters": "(@NotNull AnActionEvent event, boolean selected)", "modifiers": "@Override public", "return": "void", "signature": "void setSelected(@NotNull AnActionEvent event, boolean selected)", "full_signature": "@Override public void setSelected(@NotNull AnActionEvent event, boolean selected)", "class_method_signature": "ToggleStateAction.setSelected(@NotNull AnActionEvent event, boolean selected)", "testcase": false, "constructor": false}, {"identifier": "getImageView", "parameters": "()", "modifiers": "@Nullable private", "return": "ImageView", "signature": "ImageView getImageView()", "full_signature": "@Nullable private ImageView getImageView()", "class_method_signature": "ToggleStateAction.getImageView()", "testcase": false, "constructor": false}, {"identifier": "displayTextInToolbar", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean displayTextInToolbar()", "full_signature": "@Override public boolean displayTextInToolbar()", "class_method_signature": "ToggleStateAction.displayTextInToolbar()", "testcase": false, "constructor": false}], "file": "designer/src/com/android/tools/idea/uibuilder/statelist/ToggleStateAction.java"}, "focal_method": {"identifier": "setSelected", "parameters": "(@NotNull AnActionEvent event, boolean selected)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void setSelected(@NotNull AnActionEvent event, boolean selected) {\n    ImageView image = getImageView();\n\n    if (image == null) {\n      return;\n    }\n\n    int[] states = image.getDrawableState();\n    int state = myState.getIntValue();\n\n    // image.setImageState(states, true) didn't work as expected. So I'm doing it this way.\n\n    if (selected) {\n      assert !Ints.contains(states, state);\n      image.setImageState(ArrayUtil.append(states, state), false);\n    }\n    else {\n      assert Ints.contains(states, state);\n\n      int i = Ints.indexOf(states, state);\n      image.setImageState(ArrayUtil.remove(states, i), false);\n    }\n\n    SceneManager manager = mySurface.getSceneManager();\n\n    if (manager == null) {\n      return;\n    }\n\n    manager.requestRender();\n  }", "signature": "void setSelected(@NotNull AnActionEvent event, boolean selected)", "full_signature": "@Override public void setSelected(@NotNull AnActionEvent event, boolean selected)", "class_method_signature": "ToggleStateAction.setSelected(@NotNull AnActionEvent event, boolean selected)", "testcase": false, "constructor": false, "invocations": ["getImageView", "getDrawableState", "getIntValue", "contains", "setImageState", "append", "contains", "indexOf", "setImageState", "remove", "getSceneManager", "requestRender"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}