{"test_class": {"identifier": "GzipCompressorProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String HEADER_VALUE_GZIP = \"gzip\";", "modifier": "private static final", "type": "String", "declarator": "HEADER_VALUE_GZIP = \"gzip\"", "var_name": "HEADER_VALUE_GZIP"}, {"original_string": "private static final String HEADER_KEY_ACCEPT_ENCODING = \"Accept-Encoding\";", "modifier": "private static final", "type": "String", "declarator": "HEADER_KEY_ACCEPT_ENCODING = \"Accept-Encoding\"", "var_name": "HEADER_KEY_ACCEPT_ENCODING"}, {"original_string": "private static final String HEADER_KEY_CONTENT_ENCODING = \"Content-Encoding\";", "modifier": "private static final", "type": "String", "declarator": "HEADER_KEY_CONTENT_ENCODING = \"Content-Encoding\"", "var_name": "HEADER_KEY_CONTENT_ENCODING"}, {"original_string": "private byte[] responseBody;", "modifier": "private", "type": "byte[]", "declarator": "responseBody", "var_name": "responseBody"}, {"original_string": "@Mock\n    private HttpServletRequest req;", "modifier": "@Mock\n    private", "type": "HttpServletRequest", "declarator": "req", "var_name": "req"}, {"original_string": "@Mock\n    private HttpServletResponse resp;", "modifier": "@Mock\n    private", "type": "HttpServletResponse", "declarator": "resp", "var_name": "resp"}, {"original_string": "@Mock\n    private GzipCompressionService gzipCompressor;", "modifier": "@Mock\n    private", "type": "GzipCompressionService", "declarator": "gzipCompressor", "var_name": "gzipCompressor"}, {"original_string": "@Mock\n    private ByteArrayInputStreamFactory inputStreamFactory;", "modifier": "@Mock\n    private", "type": "ByteArrayInputStreamFactory", "declarator": "inputStreamFactory", "var_name": "inputStreamFactory"}, {"original_string": "@Mock\n    private ByteArrayOutputStream outputStream;", "modifier": "@Mock\n    private", "type": "ByteArrayOutputStream", "declarator": "outputStream", "var_name": "outputStream"}, {"original_string": "@InjectMocks\n    private GzipCompressorProcessor underTest;", "modifier": "@InjectMocks\n    private", "type": "GzipCompressorProcessor", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-webapp/src/test/java/com/epam/wilma/webapp/stub/response/processor/gzip/GzipCompressorProcessorTest.java"}, "test_case": {"identifier": "testProcessShouldCheckTheAcceptEncodingHeaderInTheRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcessShouldCheckTheAcceptEncodingHeaderInTheRequest() {\n        //GIVEN in setUp\n        //WHEN\n        underTest.process(req, resp, responseBody);\n        //THEN\n        verify(req).getHeader(HEADER_KEY_ACCEPT_ENCODING);\n    }", "signature": "void testProcessShouldCheckTheAcceptEncodingHeaderInTheRequest()", "full_signature": "@Test public void testProcessShouldCheckTheAcceptEncodingHeaderInTheRequest()", "class_method_signature": "GzipCompressorProcessorTest.testProcessShouldCheckTheAcceptEncodingHeaderInTheRequest()", "testcase": true, "constructor": false, "invocations": ["process", "getHeader", "verify"]}, "focal_class": {"identifier": "GzipCompressorProcessor", "superclass": "", "interfaces": "implements ResponseProcessor", "fields": [{"original_string": "private static final String HEADER_VALUE_GZIP = \"gzip\";", "modifier": "private static final", "type": "String", "declarator": "HEADER_VALUE_GZIP = \"gzip\"", "var_name": "HEADER_VALUE_GZIP"}, {"original_string": "private static final String HEADER_KEY_ACCEPT_ENCODING = \"Accept-Encoding\";", "modifier": "private static final", "type": "String", "declarator": "HEADER_KEY_ACCEPT_ENCODING = \"Accept-Encoding\"", "var_name": "HEADER_KEY_ACCEPT_ENCODING"}, {"original_string": "private static final String HEADER_KEY_CONTENT_ENCODING = \"Content-Encoding\";", "modifier": "private static final", "type": "String", "declarator": "HEADER_KEY_CONTENT_ENCODING = \"Content-Encoding\"", "var_name": "HEADER_KEY_CONTENT_ENCODING"}, {"original_string": "private static final String HEADER_KEY_SUPPRESS_ENCODING = \"Wilma-Suppress-Encoding\";", "modifier": "private static final", "type": "String", "declarator": "HEADER_KEY_SUPPRESS_ENCODING = \"Wilma-Suppress-Encoding\"", "var_name": "HEADER_KEY_SUPPRESS_ENCODING"}, {"original_string": "@Autowired\n    private GzipCompressionService gzipCompressor;", "modifier": "@Autowired\n    private", "type": "GzipCompressionService", "declarator": "gzipCompressor", "var_name": "gzipCompressor"}, {"original_string": "@Autowired\n    private ByteArrayInputStreamFactory inputStreamFactory;", "modifier": "@Autowired\n    private", "type": "ByteArrayInputStreamFactory", "declarator": "inputStreamFactory", "var_name": "inputStreamFactory"}], "methods": [{"identifier": "process", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] process(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody)", "full_signature": "@Override public byte[] process(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody)", "class_method_signature": "GzipCompressorProcessor.process(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody)", "testcase": false, "constructor": false}, {"identifier": "isGzipCompressionNeeded", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp)", "modifiers": "private", "return": "boolean", "signature": "boolean isGzipCompressionNeeded(final HttpServletRequest req, final HttpServletResponse resp)", "full_signature": "private boolean isGzipCompressionNeeded(final HttpServletRequest req, final HttpServletResponse resp)", "class_method_signature": "GzipCompressorProcessor.isGzipCompressionNeeded(final HttpServletRequest req, final HttpServletResponse resp)", "testcase": false, "constructor": false}, {"identifier": "compressResponseStreamWithGzip", "parameters": "(final InputStream inputStream)", "modifiers": "private", "return": "byte[]", "signature": "byte[] compressResponseStreamWithGzip(final InputStream inputStream)", "full_signature": "private byte[] compressResponseStreamWithGzip(final InputStream inputStream)", "class_method_signature": "GzipCompressorProcessor.compressResponseStreamWithGzip(final InputStream inputStream)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-webapp/src/main/java/com/epam/wilma/webapp/stub/response/processor/gzip/GzipCompressorProcessor.java"}, "focal_method": {"identifier": "process", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody)", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n    public byte[] process(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody) {\n        byte[] result = responseBody;\n        if (isGzipCompressionNeeded(req, resp)) {\n            resp.addHeader(HEADER_KEY_CONTENT_ENCODING, HEADER_VALUE_GZIP);\n            result = compressResponseStreamWithGzip(inputStreamFactory.createByteArrayInputStream(responseBody));\n        }\n        return result;\n    }", "signature": "byte[] process(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody)", "full_signature": "@Override public byte[] process(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody)", "class_method_signature": "GzipCompressorProcessor.process(final HttpServletRequest req, final HttpServletResponse resp, final byte[] responseBody)", "testcase": false, "constructor": false, "invocations": ["isGzipCompressionNeeded", "addHeader", "compressResponseStreamWithGzip", "createByteArrayInputStream"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}