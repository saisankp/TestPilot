{"test_class": {"identifier": "DictionaryBasedSentenceTypeDetectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DictionaryBasedSentenceTypeDetector detector = new DictionaryBasedSentenceTypeDetector();", "modifier": "private", "type": "DictionaryBasedSentenceTypeDetector", "declarator": "detector = new DictionaryBasedSentenceTypeDetector()", "var_name": "detector"}, {"original_string": "private SimpleTokenizer tokenizer = new SimpleTokenizer();", "modifier": "private", "type": "SimpleTokenizer", "declarator": "tokenizer = new SimpleTokenizer()", "var_name": "tokenizer"}], "file": "dialog/src/test/java/roboy/linguistics/sentenceanalysis/DictionaryBasedSentenceTypeDetectorTest.java"}, "test_case": {"identifier": "testWhatIs", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testWhatIs() {\n\t\tInterpretation interpretation = new Interpretation(\"What is area code of Germany?\");\n\t\tinterpretation = tokenizer.analyze(interpretation);\n\t\tinterpretation = detector.analyze(interpretation);\n\t\tassertTrue(interpretation.getSentenceType() == SentenceType.WHAT);\n\t\t\n//\t\tinterpretation = new Interpretation(\"Hey Roboy, what is area code of Germany?\");\n//\t\tinterpretation = tokenizer.analyze(interpretation);\n//\t\tinterpretation = detector.analyze(interpretation);\n//\t\tassertTrue(interpretation.getSentenceType()==SENTENCE_TYPE.WHAT);\n\t}", "signature": "void testWhatIs()", "full_signature": "@Test public void testWhatIs()", "class_method_signature": "DictionaryBasedSentenceTypeDetectorTest.testWhatIs()", "testcase": true, "constructor": false, "invocations": ["analyze", "analyze", "assertTrue", "getSentenceType"]}, "focal_class": {"identifier": "DictionaryBasedSentenceTypeDetector", "superclass": "", "interfaces": "implements Analyzer", "fields": [], "methods": [{"identifier": "analyze", "parameters": "(Interpretation interpretation)", "modifiers": "@Override public", "return": "Interpretation", "signature": "Interpretation analyze(Interpretation interpretation)", "full_signature": "@Override public Interpretation analyze(Interpretation interpretation)", "class_method_signature": "DictionaryBasedSentenceTypeDetector.analyze(Interpretation interpretation)", "testcase": false, "constructor": false}, {"identifier": "determineSentenceType", "parameters": "(List<String> tokens, String[] posTags)", "modifiers": "private", "return": "SentenceType", "signature": "SentenceType determineSentenceType(List<String> tokens, String[] posTags)", "full_signature": "private SentenceType determineSentenceType(List<String> tokens, String[] posTags)", "class_method_signature": "DictionaryBasedSentenceTypeDetector.determineSentenceType(List<String> tokens, String[] posTags)", "testcase": false, "constructor": false}], "file": "dialog/src/main/java/roboy/linguistics/sentenceanalysis/DictionaryBasedSentenceTypeDetector.java"}, "focal_method": {"identifier": "analyze", "parameters": "(Interpretation interpretation)", "modifiers": "@Override public", "return": "Interpretation", "body": "@Override\n\tpublic Interpretation analyze(Interpretation interpretation) {\n\t\tList<String> tokens = interpretation.getTokens();\n\t\tString[] posTags = interpretation.getPosTags();\n\n\t\t//Sentence Types shall be handled in Semantic Parser Analyzer. This is a fallback, in the event that SPA does not detect the sentence type\n\t\tif(interpretation.getSentenceType().equals(SentenceType.STATEMENT)){\n\t\t    SentenceType sentenceType = determineSentenceType(tokens, posTags);\n            interpretation.setSentenceType(sentenceType);\n\n        }\n\t\treturn interpretation;\n\t}", "signature": "Interpretation analyze(Interpretation interpretation)", "full_signature": "@Override public Interpretation analyze(Interpretation interpretation)", "class_method_signature": "DictionaryBasedSentenceTypeDetector.analyze(Interpretation interpretation)", "testcase": false, "constructor": false, "invocations": ["getTokens", "getPosTags", "equals", "getSentenceType", "determineSentenceType", "setSentenceType"]}, "repository": {"repo_id": 61996222, "url": "https://github.com/Roboy/roboy_dialog", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 9, "size": 96226, "license": "licensed"}}