{"test_class": {"identifier": "CopyFileTest", "superclass": "extends TransformationUtilityTestHelper", "interfaces": "", "fields": [], "file": "butterfly-utilities/src/test/java/com/paypal/butterfly/utilities/operations/file/CopyFileTest.java"}, "test_case": {"identifier": "nonExistentToFolderTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void nonExistentToFolderTest() throws IOException {\n        File fromFile = new File(transformedAppFolder, \"foo.xml\");\n        File toFile = new File(transformedAppFolder, \"fooFolder/foo.xml\");\n\n        assertTrue(fromFile.exists());\n        assertFalse(fromFile.isDirectory());\n        assertFalse(toFile.exists());\n        assertFalse(toFile.getParentFile().exists());\n\n        CopyFile copyFile = new CopyFile().relative(\"foo.xml\").setToRelative(\"fooFolder\");\n        TOExecutionResult executionResult = copyFile.execution(transformedAppFolder, transformationContext);\n        assertEquals(executionResult.getType(), TOExecutionResult.Type.SUCCESS);\n        assertEquals(copyFile.getDescription(), \"Copy file foo.xml to fooFolder\");\n        assertEquals(executionResult.getDetails(), \"File 'foo.xml' has been copied to '/fooFolder'\");\n\n        assertTrue(fromFile.exists());\n        assertTrue(toFile.exists());\n        assertTrue(FileUtils.contentEquals(fromFile, toFile));\n    }", "signature": "void nonExistentToFolderTest()", "full_signature": "@Test public void nonExistentToFolderTest()", "class_method_signature": "CopyFileTest.nonExistentToFolderTest()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "exists", "assertFalse", "isDirectory", "assertFalse", "exists", "assertFalse", "exists", "getParentFile", "setToRelative", "relative", "execution", "assertEquals", "getType", "assertEquals", "getDescription", "assertEquals", "getDetails", "assertTrue", "exists", "assertTrue", "exists", "assertTrue", "contentEquals"]}, "focal_class": {"identifier": "CopyFile", "superclass": "extends AbstractToOperation<CopyFile>", "interfaces": "", "fields": [{"original_string": "private static final String DESCRIPTION = \"Copy file %s to %s\";", "modifier": "private static final", "type": "String", "declarator": "DESCRIPTION = \"Copy file %s to %s\"", "var_name": "DESCRIPTION"}], "methods": [{"identifier": "CopyFile", "parameters": "()", "modifiers": "public", "return": "", "signature": " CopyFile()", "full_signature": "public  CopyFile()", "class_method_signature": "CopyFile.CopyFile()", "testcase": false, "constructor": true}, {"identifier": "execution", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "@Override protected", "return": "TOExecutionResult", "signature": "TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "@Override protected TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "CopyFile.execution(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false}], "file": "butterfly-utilities/src/main/java/com/paypal/butterfly/utilities/operations/file/CopyFile.java"}, "focal_method": {"identifier": "execution", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "@Override protected", "return": "TOExecutionResult", "body": "@Override\n    protected TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext) {\n        // TODO Validation must be done here!!!\n\n        File fileFrom = getAbsoluteFile(transformedAppFolder, transformationContext);\n        File fileTo = getFileTo(transformedAppFolder, transformationContext);\n        TOExecutionResult result;\n\n        try {\n            if (fileFrom.isDirectory()) {\n                IOException ex = new IOException(getRelativePath(transformedAppFolder, fileFrom) + \" (Is a directory)\");\n                result = TOExecutionResult.error(this, new TransformationOperationException(\"File could not be copied\", ex));\n            } else {\n                String details = String.format(\"File '%s' has been copied to '%s'\", getRelativePath(), getRelativePath(transformedAppFolder, fileTo));\n                FileUtils.copyFileToDirectory(fileFrom, fileTo);\n                result = TOExecutionResult.success(this, details);\n            }\n        } catch (IOException e) {\n            result = TOExecutionResult.error(this, new TransformationOperationException(\"File could not be copied\", e));\n        }\n\n        return result;\n    }", "signature": "TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "@Override protected TOExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "CopyFile.execution(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false, "invocations": ["getAbsoluteFile", "getFileTo", "isDirectory", "getRelativePath", "error", "format", "getRelativePath", "getRelativePath", "copyFileToDirectory", "success", "error"]}, "repository": {"repo_id": 104398040, "url": "https://github.com/paypal/butterfly", "language": "Java", "is_fork": false, "fork_count": 42, "stargazer_count": 26, "size": 6906, "license": "licensed"}}