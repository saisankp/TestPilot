{"test_class": {"identifier": "XmlApplicationConfigParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private XmlApplicationConfigParser xmlApplicationConfigParser = new XmlApplicationConfigParser();", "modifier": "private", "type": "XmlApplicationConfigParser", "declarator": "xmlApplicationConfigParser = new XmlApplicationConfigParser()", "var_name": "xmlApplicationConfigParser"}], "file": "tavern-core/src/test/java/com/dianping/tavern/config/XmlApplicationConfigParserTest.java"}, "test_case": {"identifier": "testParser", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParser(){\n        InputStream resourceAsStream = getClass().getClassLoader().getResourceAsStream(\"app.xml\");\n        ApplicationConfig config = xmlApplicationConfigParser.parse(resourceAsStream);\n        assertEquals(\"tavern\", config.getName());\n        assertEquals(\"classpath*:spring/appcontext-*.xml\", config.getContextPath());\n        assertEquals(\"com.dianping.tavern\", config.getPackageBase());\n        assertNull(config.getParent());\n    }", "signature": "void testParser()", "full_signature": "@Test public void testParser()", "class_method_signature": "XmlApplicationConfigParserTest.testParser()", "testcase": true, "constructor": false, "invocations": ["getResourceAsStream", "getClassLoader", "getClass", "parse", "assertEquals", "getName", "assertEquals", "getContextPath", "assertEquals", "getPackageBase", "assertNull", "getParent"]}, "focal_class": {"identifier": "XmlApplicationConfigParser", "superclass": "", "interfaces": "implements ApplicationConfigParser", "fields": [{"original_string": "private String[] fiedlds = new String[] { \"name\", \"packageBase\", \"parent\", \"contextPath\" };", "modifier": "private", "type": "String[]", "declarator": "fiedlds = new String[] { \"name\", \"packageBase\", \"parent\", \"contextPath\" }", "var_name": "fiedlds"}], "methods": [{"identifier": "parse", "parameters": "(InputStream inputStream)", "modifiers": "@Override public", "return": "ApplicationConfig", "signature": "ApplicationConfig parse(InputStream inputStream)", "full_signature": "@Override public ApplicationConfig parse(InputStream inputStream)", "class_method_signature": "XmlApplicationConfigParser.parse(InputStream inputStream)", "testcase": false, "constructor": false}], "file": "tavern-core/src/main/java/com/dianping/tavern/config/XmlApplicationConfigParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(InputStream inputStream)", "modifiers": "@Override public", "return": "ApplicationConfig", "body": "@Override\n\tpublic ApplicationConfig parse(InputStream inputStream) {\n\t\tDigester digester = new Digester();\n\t\tdigester.addObjectCreate(\"Application\", ApplicationConfig.class);\n        for (String filed : fiedlds) {\n            digester.addBeanPropertySetter(\"Application/\"+filed);\n        }\n        try {\n\t\t\treturn (ApplicationConfig) digester.parse(inputStream);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (SAXException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn null;\n\t}", "signature": "ApplicationConfig parse(InputStream inputStream)", "full_signature": "@Override public ApplicationConfig parse(InputStream inputStream)", "class_method_signature": "XmlApplicationConfigParser.parse(InputStream inputStream)", "testcase": false, "constructor": false, "invocations": ["addObjectCreate", "addBeanPropertySetter", "parse", "printStackTrace", "printStackTrace"]}, "repository": {"repo_id": 15026183, "url": "https://github.com/code4craft/tavern", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 224, "license": "licensed"}}