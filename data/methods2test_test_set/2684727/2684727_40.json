{"test_class": {"identifier": "DistanceCurrencyCodeSupplierTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    Trip trip;", "modifier": "@Mock", "type": "Trip", "declarator": "trip", "var_name": "trip"}, {"original_string": "@Mock\n    Distance distance;", "modifier": "@Mock", "type": "Distance", "declarator": "distance", "var_name": "distance"}, {"original_string": "@Mock\n    Price price;", "modifier": "@Mock", "type": "Price", "declarator": "price", "var_name": "price"}], "file": "app/src/test/java/co/smartreceipts/android/distance/editor/currency/DistanceCurrencyCodeSupplierTest.java"}, "test_case": {"identifier": "get", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void get() throws Exception {\n        when(trip.getDefaultCurrencyCode()).thenReturn(\"trip\");\n        when(price.getCurrencyCode()).thenReturn(\"distance\");\n        final DistanceCurrencyCodeSupplier nullDistanceSupplier = new DistanceCurrencyCodeSupplier(trip, null);\n        final DistanceCurrencyCodeSupplier validDistanceSupplier = new DistanceCurrencyCodeSupplier(trip, distance);\n        assertEquals(nullDistanceSupplier.get(), \"trip\");\n        assertEquals(validDistanceSupplier.get(), \"distance\");\n    }", "signature": "void get()", "full_signature": "@Test public void get()", "class_method_signature": "DistanceCurrencyCodeSupplierTest.get()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getDefaultCurrencyCode", "thenReturn", "when", "getCurrencyCode", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "DistanceCurrencyCodeSupplier", "superclass": "", "interfaces": "implements CurrencyCodeSupplier", "fields": [{"original_string": "private final Trip trip;", "modifier": "private final", "type": "Trip", "declarator": "trip", "var_name": "trip"}, {"original_string": "private final Distance distance;", "modifier": "private final", "type": "Distance", "declarator": "distance", "var_name": "distance"}], "methods": [{"identifier": "DistanceCurrencyCodeSupplier", "parameters": "(@NonNull Trip trip, @Nullable Distance distance)", "modifiers": "public", "return": "", "signature": " DistanceCurrencyCodeSupplier(@NonNull Trip trip, @Nullable Distance distance)", "full_signature": "public  DistanceCurrencyCodeSupplier(@NonNull Trip trip, @Nullable Distance distance)", "class_method_signature": "DistanceCurrencyCodeSupplier.DistanceCurrencyCodeSupplier(@NonNull Trip trip, @Nullable Distance distance)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "()", "modifiers": "@NonNull @Override public", "return": "String", "signature": "String get()", "full_signature": "@NonNull @Override public String get()", "class_method_signature": "DistanceCurrencyCodeSupplier.get()", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/distance/editor/currency/DistanceCurrencyCodeSupplier.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "@NonNull @Override public", "return": "String", "body": "@NonNull\n    @Override\n    public String get() {\n        if (distance != null) {\n            return distance.getPrice().getCurrencyCode();\n        } else {\n            return trip.getDefaultCurrencyCode();\n        }\n    }", "signature": "String get()", "full_signature": "@NonNull @Override public String get()", "class_method_signature": "DistanceCurrencyCodeSupplier.get()", "testcase": false, "constructor": false, "invocations": ["getCurrencyCode", "getPrice", "getDefaultCurrencyCode"]}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}