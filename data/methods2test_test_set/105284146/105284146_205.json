{"test_class": {"identifier": "ThreadInterruptedCompletableFutureTest", "superclass": "", "interfaces": "", "fields": [], "file": "computation/src/test/java/com/powsybl/computation/ThreadInterruptedCompletableFutureTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test() throws Exception {\n        ThreadInterruptedCompletableFuture<?> foo = new ThreadInterruptedCompletableFuture<>();\n        boolean[] result = new boolean[2];\n        Thread t = new Thread() {\n            @Override\n            public void run() {\n                result[0] = foo.cancel(true);\n                result[1] = Thread.currentThread().isInterrupted();\n            }\n        };\n        t.start();\n        t.interrupt();\n        t.join(100);\n        assertFalse(result[0]);\n        assertTrue(result[1]);\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "ThreadInterruptedCompletableFutureTest.test()", "testcase": true, "constructor": false, "invocations": ["cancel", "isInterrupted", "currentThread", "start", "interrupt", "join", "assertFalse", "assertTrue"]}, "focal_class": {"identifier": "ThreadInterruptedCompletableFuture", "superclass": "extends CompletableFuture<R>", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ThreadInterruptedCompletableFuture.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ThreadInterruptedCompletableFuture.class)", "var_name": "LOGGER"}, {"original_string": "protected volatile boolean cancel = false;", "modifier": "protected volatile", "type": "boolean", "declarator": "cancel = false", "var_name": "cancel"}, {"original_string": "protected Thread thread;", "modifier": "protected", "type": "Thread", "declarator": "thread", "var_name": "thread"}], "methods": [{"identifier": "setThread", "parameters": "(Thread t)", "modifiers": "public", "return": "void", "signature": "void setThread(Thread t)", "full_signature": "public void setThread(Thread t)", "class_method_signature": "ThreadInterruptedCompletableFuture.setThread(Thread t)", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "(boolean mayInterruptIfRunning)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean cancel(boolean mayInterruptIfRunning)", "full_signature": "@Override public boolean cancel(boolean mayInterruptIfRunning)", "class_method_signature": "ThreadInterruptedCompletableFuture.cancel(boolean mayInterruptIfRunning)", "testcase": false, "constructor": false}, {"identifier": "isCancelled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCancelled()", "full_signature": "@Override public boolean isCancelled()", "class_method_signature": "ThreadInterruptedCompletableFuture.isCancelled()", "testcase": false, "constructor": false}], "file": "computation/src/main/java/com/powsybl/computation/ThreadInterruptedCompletableFuture.java"}, "focal_method": {"identifier": "cancel", "parameters": "(boolean mayInterruptIfRunning)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean cancel(boolean mayInterruptIfRunning) {\n        cancel = true;\n\n        if (this.isDone() || this.isCompletedExceptionally()) {\n            LOGGER.warn(\"Can not be canceled because the caller future isDone or isCompletedExceptionally\");\n            return false;\n        }\n\n        while (thread == null) {\n            try {\n                LOGGER.warn(\"Waiting 1s for taskThread to be set...\");\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n                LOGGER.warn(e.toString(), e);\n                Thread.currentThread().interrupt();\n                return false;\n            }\n        }\n\n        thread.interrupt();\n        return true;\n    }", "signature": "boolean cancel(boolean mayInterruptIfRunning)", "full_signature": "@Override public boolean cancel(boolean mayInterruptIfRunning)", "class_method_signature": "ThreadInterruptedCompletableFuture.cancel(boolean mayInterruptIfRunning)", "testcase": false, "constructor": false, "invocations": ["isDone", "isCompletedExceptionally", "warn", "warn", "sleep", "warn", "toString", "interrupt", "currentThread", "interrupt"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}