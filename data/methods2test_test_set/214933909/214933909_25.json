{"test_class": {"identifier": "ConvertUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "das-client/src/test/java/com/ppdai/das/util/ConvertUtilsTest.java"}, "test_case": {"identifier": "testFillMeta", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFillMeta() {\n        EntityList entityList = new EntityList();\n        TesttableMySQL pojo = createMySQLPOJO();\n        EntityMeta meta = DasRemoteDelegate.extract(pojo.getClass());\n        entityList.setEntityMeta(meta);\n        Entity entity = new Entity();\n        entity.setValue(new Gson().toJson(pojo));\n        entityList.addToRows(new Entity());\n\n        DasRequest dasRequest = new DasRequest().setEntityList(entityList);\n        Entity entity1 = ConvertUtils.fillMeta(dasRequest);\n        List<Entity> entity2 = ConvertUtils.fillMetas(dasRequest);\n        Assert.assertNotNull(dasRequest.getEntityList().getRows().get(0).getEntityMeta());\n    }", "signature": "void testFillMeta()", "full_signature": "@Test public void testFillMeta()", "class_method_signature": "ConvertUtilsTest.testFillMeta()", "testcase": true, "constructor": false, "invocations": ["createMySQLPOJO", "extract", "getClass", "setEntityMeta", "setValue", "toJson", "addToRows", "setEntityList", "fillMeta", "fillMetas", "assertNotNull", "getEntityMeta", "get", "getRows", "getEntityList"]}, "focal_class": {"identifier": "ConvertUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "pojo2Entity", "parameters": "(Object row, EntityMeta meta)", "modifiers": "public static", "return": "Entity", "signature": "Entity pojo2Entity(Object row, EntityMeta meta)", "full_signature": "public static Entity pojo2Entity(Object row, EntityMeta meta)", "class_method_signature": "ConvertUtils.pojo2Entity(Object row, EntityMeta meta)", "testcase": false, "constructor": false}, {"identifier": "pojo2Entities", "parameters": "(List rows, EntityMeta meta)", "modifiers": "public static", "return": "List<Entity>", "signature": "List<Entity> pojo2Entities(List rows, EntityMeta meta)", "full_signature": "public static List<Entity> pojo2Entities(List rows, EntityMeta meta)", "class_method_signature": "ConvertUtils.pojo2Entities(List rows, EntityMeta meta)", "testcase": false, "constructor": false}, {"identifier": "queryEntity", "parameters": "(Object obj, Map<String, Object> map, EntityMeta meta, Class clz)", "modifiers": "private static", "return": "void", "signature": "void queryEntity(Object obj, Map<String, Object> map, EntityMeta meta, Class clz)", "full_signature": "private static void queryEntity(Object obj, Map<String, Object> map, EntityMeta meta, Class clz)", "class_method_signature": "ConvertUtils.queryEntity(Object obj, Map<String, Object> map, EntityMeta meta, Class clz)", "testcase": false, "constructor": false}, {"identifier": "entity2POJO", "parameters": "(Entity r, EntityMeta meta, Class clz)", "modifiers": "public static", "return": "T", "signature": "T entity2POJO(Entity r, EntityMeta meta, Class clz)", "full_signature": "public static T entity2POJO(Entity r, EntityMeta meta, Class clz)", "class_method_signature": "ConvertUtils.entity2POJO(Entity r, EntityMeta meta, Class clz)", "testcase": false, "constructor": false}, {"identifier": "entity2POJOs", "parameters": "(List<Entity> rows, EntityMeta meta, Class clz)", "modifiers": "public static", "return": "List<T>", "signature": "List<T> entity2POJOs(List<Entity> rows, EntityMeta meta, Class clz)", "full_signature": "public static List<T> entity2POJOs(List<Entity> rows, EntityMeta meta, Class clz)", "class_method_signature": "ConvertUtils.entity2POJOs(List<Entity> rows, EntityMeta meta, Class clz)", "testcase": false, "constructor": false}, {"identifier": "fillMeta", "parameters": "(DasRequest request)", "modifiers": "public static", "return": "Entity", "signature": "Entity fillMeta(DasRequest request)", "full_signature": "public static Entity fillMeta(DasRequest request)", "class_method_signature": "ConvertUtils.fillMeta(DasRequest request)", "testcase": false, "constructor": false}, {"identifier": "fillMetas", "parameters": "(DasRequest request)", "modifiers": "public static", "return": "List<Entity>", "signature": "List<Entity> fillMetas(DasRequest request)", "full_signature": "public static List<Entity> fillMetas(DasRequest request)", "class_method_signature": "ConvertUtils.fillMetas(DasRequest request)", "testcase": false, "constructor": false}], "file": "das-client/src/main/java/com/ppdai/das/util/ConvertUtils.java"}, "focal_method": {"identifier": "fillMeta", "parameters": "(DasRequest request)", "modifiers": "public static", "return": "Entity", "body": "public static Entity fillMeta(DasRequest request) {\n        EntityMeta meta = request.getEntityList().getEntityMeta();\n        Entity entity = request.getEntityList().getRows().get(0);\n        return entity.setEntityMeta(meta);\n    }", "signature": "Entity fillMeta(DasRequest request)", "full_signature": "public static Entity fillMeta(DasRequest request)", "class_method_signature": "ConvertUtils.fillMeta(DasRequest request)", "testcase": false, "constructor": false, "invocations": ["getEntityMeta", "getEntityList", "get", "getRows", "getEntityList", "setEntityMeta"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}