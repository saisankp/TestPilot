{"test_class": {"identifier": "PomAddPluginTest", "superclass": "extends TransformationUtilityTestHelper", "interfaces": "", "fields": [], "file": "butterfly-utilities/src/test/java/com/paypal/butterfly/utilities/operations/pom/PomAddPluginTest.java"}, "test_case": {"identifier": "addPluginWithVersionTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void addPluginWithVersionTest() throws IOException, XmlPullParserException {\n\t\tModel pomModelBeforeChange = getOriginalPomModel(\"pom.xml\");\n\t\tassertEquals(pomModelBeforeChange.getBuild().getPlugins().size(), 3);\n\t\tassertEquals(pomModelBeforeChange.getBuild().getPlugins().get(0).getGroupId(), \"org.codehaus.mojo\");\n\t\tassertEquals(pomModelBeforeChange.getBuild().getPlugins().get(0).getArtifactId(), \"cobertura-maven-plugin\");\n\n        PomAddPlugin pomAddPlugin = new PomAddPlugin(\"org.apache.maven.plugins\", \"maven-javadoc-plugin\", \"2.10.4\").relative(\"pom.xml\");\n\t\tTOExecutionResult executionResult = pomAddPlugin.execution(transformedAppFolder, transformationContext);\n\t\tassertEquals(executionResult.getType(), TOExecutionResult.Type.SUCCESS);\n\n\t\tModel pomModelAfterChange = getTransformedPomModel(\"pom.xml\");\n\t\tassertEquals(pomModelAfterChange.getBuild().getPlugins().size(), 4);\n        Plugin plugin = new Plugin();\n        plugin.setGroupId(\"org.apache.maven.plugins\");\n        plugin.setArtifactId(\"maven-javadoc-plugin\");\n        assertTrue(pomModelAfterChange.getBuild().getPlugins().contains(plugin));\n        assertEquals(pomModelAfterChange.getBuild().getPluginsAsMap().get(\"org.apache.maven.plugins:maven-javadoc-plugin\").getVersion(), \"2.10.4\");\n\t}", "signature": "void addPluginWithVersionTest()", "full_signature": "@Test public void addPluginWithVersionTest()", "class_method_signature": "PomAddPluginTest.addPluginWithVersionTest()", "testcase": true, "constructor": false, "invocations": ["getOriginalPomModel", "assertEquals", "size", "getPlugins", "getBuild", "assertEquals", "getGroupId", "get", "getPlugins", "getBuild", "assertEquals", "getArtifactId", "get", "getPlugins", "getBuild", "relative", "execution", "assertEquals", "getType", "getTransformedPomModel", "assertEquals", "size", "getPlugins", "getBuild", "setGroupId", "setArtifactId", "assertTrue", "contains", "getPlugins", "getBuild", "assertEquals", "getVersion", "get", "getPluginsAsMap", "getBuild"]}, "focal_class": {"identifier": "PomAddPlugin", "superclass": "extends AbstractArtifactPomOperation<PomAddPlugin>", "interfaces": "implements AddElement<PomAddPlugin>", "fields": [{"original_string": "private static final String DESCRIPTION = \"Add plugin %s:%s to POM file %s\";", "modifier": "private static final", "type": "String", "declarator": "DESCRIPTION = \"Add plugin %s:%s to POM file %s\"", "var_name": "DESCRIPTION"}, {"original_string": "private String version;", "modifier": "private", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "private IfPresent ifPresent = IfPresent.Fail;", "modifier": "private", "type": "IfPresent", "declarator": "ifPresent = IfPresent.Fail", "var_name": "ifPresent"}], "methods": [{"identifier": "PomAddPlugin", "parameters": "()", "modifiers": "public", "return": "", "signature": " PomAddPlugin()", "full_signature": "public  PomAddPlugin()", "class_method_signature": "PomAddPlugin.PomAddPlugin()", "testcase": false, "constructor": true}, {"identifier": "PomAddPlugin", "parameters": "(String groupId, String artifactId)", "modifiers": "public", "return": "", "signature": " PomAddPlugin(String groupId, String artifactId)", "full_signature": "public  PomAddPlugin(String groupId, String artifactId)", "class_method_signature": "PomAddPlugin.PomAddPlugin(String groupId, String artifactId)", "testcase": false, "constructor": true}, {"identifier": "PomAddPlugin", "parameters": "(String groupId, String artifactId, String version)", "modifiers": "public", "return": "", "signature": " PomAddPlugin(String groupId, String artifactId, String version)", "full_signature": "public  PomAddPlugin(String groupId, String artifactId, String version)", "class_method_signature": "PomAddPlugin.PomAddPlugin(String groupId, String artifactId, String version)", "testcase": false, "constructor": true}, {"identifier": "setVersion", "parameters": "(String version)", "modifiers": "public", "return": "PomAddPlugin", "signature": "PomAddPlugin setVersion(String version)", "full_signature": "public PomAddPlugin setVersion(String version)", "class_method_signature": "PomAddPlugin.setVersion(String version)", "testcase": false, "constructor": false}, {"identifier": "failIfPresent", "parameters": "()", "modifiers": "@Override public", "return": "PomAddPlugin", "signature": "PomAddPlugin failIfPresent()", "full_signature": "@Override public PomAddPlugin failIfPresent()", "class_method_signature": "PomAddPlugin.failIfPresent()", "testcase": false, "constructor": false}, {"identifier": "warnNotAddIfPresent", "parameters": "()", "modifiers": "@Override public", "return": "PomAddPlugin", "signature": "PomAddPlugin warnNotAddIfPresent()", "full_signature": "@Override public PomAddPlugin warnNotAddIfPresent()", "class_method_signature": "PomAddPlugin.warnNotAddIfPresent()", "testcase": false, "constructor": false}, {"identifier": "warnButAddIfPresent", "parameters": "()", "modifiers": "@Override public", "return": "PomAddPlugin", "signature": "PomAddPlugin warnButAddIfPresent()", "full_signature": "@Override public PomAddPlugin warnButAddIfPresent()", "class_method_signature": "PomAddPlugin.warnButAddIfPresent()", "testcase": false, "constructor": false}, {"identifier": "noOpIfPresent", "parameters": "()", "modifiers": "@Override public", "return": "PomAddPlugin", "signature": "PomAddPlugin noOpIfPresent()", "full_signature": "@Override public PomAddPlugin noOpIfPresent()", "class_method_signature": "PomAddPlugin.noOpIfPresent()", "testcase": false, "constructor": false}, {"identifier": "overwriteIfPresent", "parameters": "()", "modifiers": "@Override public", "return": "PomAddPlugin", "signature": "PomAddPlugin overwriteIfPresent()", "full_signature": "@Override public PomAddPlugin overwriteIfPresent()", "class_method_signature": "PomAddPlugin.overwriteIfPresent()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "PomAddPlugin.getVersion()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDescription()", "full_signature": "@Override public String getDescription()", "class_method_signature": "PomAddPlugin.getDescription()", "testcase": false, "constructor": false}, {"identifier": "pomExecution", "parameters": "(String relativePomFile, Model model)", "modifiers": "@Override protected", "return": "TOExecutionResult", "signature": "TOExecutionResult pomExecution(String relativePomFile, Model model)", "full_signature": "@Override protected TOExecutionResult pomExecution(String relativePomFile, Model model)", "class_method_signature": "PomAddPlugin.pomExecution(String relativePomFile, Model model)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "PomAddPlugin.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PomAddPlugin.hashCode()", "testcase": false, "constructor": false}], "file": "butterfly-utilities/src/main/java/com/paypal/butterfly/utilities/operations/pom/PomAddPlugin.java"}, "focal_method": {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getVersion() {\n        return version;\n    }", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "PomAddPlugin.getVersion()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 104398040, "url": "https://github.com/paypal/butterfly", "language": "Java", "is_fork": false, "fork_count": 42, "stargazer_count": 26, "size": 6906, "license": "licensed"}}