{"test_class": {"identifier": "TestUInt32", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final UInt32 left = new UInt32(42);", "modifier": "private final", "type": "UInt32", "declarator": "left = new UInt32(42)", "var_name": "left"}, {"original_string": "private final UInt32 right = new UInt32(123);", "modifier": "private final", "type": "UInt32", "declarator": "right = new UInt32(123)", "var_name": "right"}], "file": "suite/spdz2k/src/test/java/dk/alexandra/fresco/suite/spdz2k/datatypes/TestUInt32.java"}, "test_case": {"identifier": "isZero", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void isZero() {\n    Assert.assertFalse(left.isZero());\n    Assert.assertTrue(new UInt32(0).isZero());\n  }", "signature": "void isZero()", "full_signature": "@Test public void isZero()", "class_method_signature": "TestUInt32.isZero()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isZero", "assertTrue", "isZero"]}, "focal_class": {"identifier": "UInt32", "superclass": "", "interfaces": "implements UInt<UInt32>", "fields": [{"original_string": "private final int value;", "modifier": "private final", "type": "int", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "UInt32", "parameters": "(int value)", "modifiers": "public", "return": "", "signature": " UInt32(int value)", "full_signature": "public  UInt32(int value)", "class_method_signature": "UInt32.UInt32(int value)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(UInt32 other)", "modifiers": "@Override public", "return": "UInt32", "signature": "UInt32 add(UInt32 other)", "full_signature": "@Override public UInt32 add(UInt32 other)", "class_method_signature": "UInt32.add(UInt32 other)", "testcase": false, "constructor": false}, {"identifier": "multiply", "parameters": "(UInt32 other)", "modifiers": "@Override public", "return": "UInt32", "signature": "UInt32 multiply(UInt32 other)", "full_signature": "@Override public UInt32 multiply(UInt32 other)", "class_method_signature": "UInt32.multiply(UInt32 other)", "testcase": false, "constructor": false}, {"identifier": "subtract", "parameters": "(UInt32 other)", "modifiers": "@Override public", "return": "UInt32", "signature": "UInt32 subtract(UInt32 other)", "full_signature": "@Override public UInt32 subtract(UInt32 other)", "class_method_signature": "UInt32.subtract(UInt32 other)", "testcase": false, "constructor": false}, {"identifier": "negateUInt", "parameters": "()", "modifiers": "@Override public", "return": "UInt32", "signature": "UInt32 negateUInt()", "full_signature": "@Override public UInt32 negateUInt()", "class_method_signature": "UInt32.negateUInt()", "testcase": false, "constructor": false}, {"identifier": "isZero", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isZero()", "full_signature": "@Override public boolean isZero()", "class_method_signature": "UInt32.isZero()", "testcase": false, "constructor": false}, {"identifier": "getBitLength", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getBitLength()", "full_signature": "@Override public int getBitLength()", "class_method_signature": "UInt32.getBitLength()", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] toByteArray()", "full_signature": "@Override public byte[] toByteArray()", "class_method_signature": "UInt32.toByteArray()", "testcase": false, "constructor": false}, {"identifier": "toBigInteger", "parameters": "()", "modifiers": "@Override public", "return": "BigInteger", "signature": "BigInteger toBigInteger()", "full_signature": "@Override public BigInteger toBigInteger()", "class_method_signature": "UInt32.toBigInteger()", "testcase": false, "constructor": false}, {"identifier": "toLong", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long toLong()", "full_signature": "@Override public long toLong()", "class_method_signature": "UInt32.toLong()", "testcase": false, "constructor": false}, {"identifier": "toInt", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int toInt()", "full_signature": "@Override public int toInt()", "class_method_signature": "UInt32.toInt()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "UInt32.toString()", "testcase": false, "constructor": false}], "file": "suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/UInt32.java"}, "focal_method": {"identifier": "isZero", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean isZero() {\n    return value == 0;\n  }", "signature": "boolean isZero()", "full_signature": "@Override public boolean isZero()", "class_method_signature": "UInt32.isZero()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}