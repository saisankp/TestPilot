{"test_class": {"identifier": "ThreadFactoryBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Runnable TEST_RUNNABLE = () -> {\n    };", "modifier": "private static final", "type": "Runnable", "declarator": "TEST_RUNNABLE = () -> {\n    }", "var_name": "TEST_RUNNABLE"}], "file": "bundles/org.openhab.core/src/test/java/org/openhab/core/common/ThreadFactoryBuilderTest.java"}, "test_case": {"identifier": "testWithDaemonThreads", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWithDaemonThreads() {\n        ThreadFactory threadFactory = ThreadFactoryBuilder.create().withDaemonThreads(true).build();\n        assertThat(threadFactory.newThread(TEST_RUNNABLE).isDaemon(), is(true));\n\n        threadFactory = ThreadFactoryBuilder.create().withDaemonThreads(false).build();\n        assertThat(threadFactory.newThread(TEST_RUNNABLE).isDaemon(), is(false));\n    }", "signature": "void testWithDaemonThreads()", "full_signature": "@Test public void testWithDaemonThreads()", "class_method_signature": "ThreadFactoryBuilderTest.testWithDaemonThreads()", "testcase": true, "constructor": false, "invocations": ["build", "withDaemonThreads", "create", "assertThat", "isDaemon", "newThread", "is", "build", "withDaemonThreads", "create", "assertThat", "isDaemon", "newThread", "is"]}, "focal_class": {"identifier": "ThreadFactoryBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_NAME_PREFIX = \"OH\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_NAME_PREFIX = \"OH\"", "var_name": "DEFAULT_NAME_PREFIX"}, {"original_string": "private @Nullable ThreadFactory wrappedThreadFactory;", "modifier": "private @Nullable", "type": "ThreadFactory", "declarator": "wrappedThreadFactory", "var_name": "wrappedThreadFactory"}, {"original_string": "private @Nullable String name;", "modifier": "private @Nullable", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private @Nullable String namePrefix = DEFAULT_NAME_PREFIX;", "modifier": "private @Nullable", "type": "String", "declarator": "namePrefix = DEFAULT_NAME_PREFIX", "var_name": "namePrefix"}, {"original_string": "private boolean daemonThreads;", "modifier": "private", "type": "boolean", "declarator": "daemonThreads", "var_name": "daemonThreads"}, {"original_string": "private @Nullable UncaughtExceptionHandler uncaughtExceptionHandler;", "modifier": "private @Nullable", "type": "UncaughtExceptionHandler", "declarator": "uncaughtExceptionHandler", "var_name": "uncaughtExceptionHandler"}, {"original_string": "private @Nullable Integer priority;", "modifier": "private @Nullable", "type": "Integer", "declarator": "priority", "var_name": "priority"}], "methods": [{"identifier": "create", "parameters": "()", "modifiers": "public static", "return": "ThreadFactoryBuilder", "signature": "ThreadFactoryBuilder create()", "full_signature": "public static ThreadFactoryBuilder create()", "class_method_signature": "ThreadFactoryBuilder.create()", "testcase": false, "constructor": false}, {"identifier": "ThreadFactoryBuilder", "parameters": "()", "modifiers": "private", "return": "", "signature": " ThreadFactoryBuilder()", "full_signature": "private  ThreadFactoryBuilder()", "class_method_signature": "ThreadFactoryBuilder.ThreadFactoryBuilder()", "testcase": false, "constructor": true}, {"identifier": "withWrappedThreadFactory", "parameters": "(@Nullable ThreadFactory wrappedThreadFactory)", "modifiers": "public", "return": "ThreadFactoryBuilder", "signature": "ThreadFactoryBuilder withWrappedThreadFactory(@Nullable ThreadFactory wrappedThreadFactory)", "full_signature": "public ThreadFactoryBuilder withWrappedThreadFactory(@Nullable ThreadFactory wrappedThreadFactory)", "class_method_signature": "ThreadFactoryBuilder.withWrappedThreadFactory(@Nullable ThreadFactory wrappedThreadFactory)", "testcase": false, "constructor": false}, {"identifier": "withName", "parameters": "(@Nullable String name)", "modifiers": "public", "return": "ThreadFactoryBuilder", "signature": "ThreadFactoryBuilder withName(@Nullable String name)", "full_signature": "public ThreadFactoryBuilder withName(@Nullable String name)", "class_method_signature": "ThreadFactoryBuilder.withName(@Nullable String name)", "testcase": false, "constructor": false}, {"identifier": "withNamePrefix", "parameters": "(@Nullable String namePrefix)", "modifiers": "public", "return": "ThreadFactoryBuilder", "signature": "ThreadFactoryBuilder withNamePrefix(@Nullable String namePrefix)", "full_signature": "public ThreadFactoryBuilder withNamePrefix(@Nullable String namePrefix)", "class_method_signature": "ThreadFactoryBuilder.withNamePrefix(@Nullable String namePrefix)", "testcase": false, "constructor": false}, {"identifier": "withDaemonThreads", "parameters": "(boolean daemonThreads)", "modifiers": "public", "return": "ThreadFactoryBuilder", "signature": "ThreadFactoryBuilder withDaemonThreads(boolean daemonThreads)", "full_signature": "public ThreadFactoryBuilder withDaemonThreads(boolean daemonThreads)", "class_method_signature": "ThreadFactoryBuilder.withDaemonThreads(boolean daemonThreads)", "testcase": false, "constructor": false}, {"identifier": "withUncaughtExceptionHandler", "parameters": "(\n            @Nullable UncaughtExceptionHandler uncaughtExceptionHandler)", "modifiers": "public", "return": "ThreadFactoryBuilder", "signature": "ThreadFactoryBuilder withUncaughtExceptionHandler(\n            @Nullable UncaughtExceptionHandler uncaughtExceptionHandler)", "full_signature": "public ThreadFactoryBuilder withUncaughtExceptionHandler(\n            @Nullable UncaughtExceptionHandler uncaughtExceptionHandler)", "class_method_signature": "ThreadFactoryBuilder.withUncaughtExceptionHandler(\n            @Nullable UncaughtExceptionHandler uncaughtExceptionHandler)", "testcase": false, "constructor": false}, {"identifier": "withPriority", "parameters": "(@Nullable Integer priority)", "modifiers": "public", "return": "ThreadFactoryBuilder", "signature": "ThreadFactoryBuilder withPriority(@Nullable Integer priority)", "full_signature": "public ThreadFactoryBuilder withPriority(@Nullable Integer priority)", "class_method_signature": "ThreadFactoryBuilder.withPriority(@Nullable Integer priority)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "ThreadFactory", "signature": "ThreadFactory build()", "full_signature": "public ThreadFactory build()", "class_method_signature": "ThreadFactoryBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(ThreadFactory wrappedThreadFactory, @Nullable String namePrefix,\n            @Nullable String name, boolean daemonThreads, @Nullable UncaughtExceptionHandler uncaughtExceptionHandler,\n            @Nullable Integer priority)", "modifiers": "private static", "return": "ThreadFactory", "signature": "ThreadFactory build(ThreadFactory wrappedThreadFactory, @Nullable String namePrefix,\n            @Nullable String name, boolean daemonThreads, @Nullable UncaughtExceptionHandler uncaughtExceptionHandler,\n            @Nullable Integer priority)", "full_signature": "private static ThreadFactory build(ThreadFactory wrappedThreadFactory, @Nullable String namePrefix,\n            @Nullable String name, boolean daemonThreads, @Nullable UncaughtExceptionHandler uncaughtExceptionHandler,\n            @Nullable Integer priority)", "class_method_signature": "ThreadFactoryBuilder.build(ThreadFactory wrappedThreadFactory, @Nullable String namePrefix,\n            @Nullable String name, boolean daemonThreads, @Nullable UncaughtExceptionHandler uncaughtExceptionHandler,\n            @Nullable Integer priority)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core/src/main/java/org/openhab/core/common/ThreadFactoryBuilder.java"}, "focal_method": {"identifier": "withDaemonThreads", "parameters": "(boolean daemonThreads)", "modifiers": "public", "return": "ThreadFactoryBuilder", "body": "public ThreadFactoryBuilder withDaemonThreads(boolean daemonThreads) {\n        this.daemonThreads = daemonThreads;\n        return this;\n    }", "signature": "ThreadFactoryBuilder withDaemonThreads(boolean daemonThreads)", "full_signature": "public ThreadFactoryBuilder withDaemonThreads(boolean daemonThreads)", "class_method_signature": "ThreadFactoryBuilder.withDaemonThreads(boolean daemonThreads)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}