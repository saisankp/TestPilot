{"test_class": {"identifier": "ExceptionUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "utils/src/test/java/com/cloud/utils/exception/ExceptionUtilTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test() throws Exception {\n        FileNotFoundException fnfe = new FileNotFoundException();\n        try {\n            ExceptionUtil.rethrow(fnfe, IOException.class);\n            fail();\n        } catch (IOException e) {\n            assertTrue(\"we won !?!\", true);\n        }\n\n        ExceptionUtil.rethrow(fnfe, ClassNotFoundException.class);\n\n        try {\n            ExceptionUtil.rethrow(fnfe, FileNotFoundException.class);\n            fail();\n        } catch (FileNotFoundException e) {\n            assertTrue(\"we won !?!\", true);\n        }\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "ExceptionUtilTest.test()", "testcase": true, "constructor": false, "invocations": ["rethrow", "fail", "assertTrue", "rethrow", "rethrow", "fail", "assertTrue"]}, "focal_class": {"identifier": "ExceptionUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "toString", "parameters": "(Throwable th)", "modifiers": "public static", "return": "String", "signature": "String toString(Throwable th)", "full_signature": "public static String toString(Throwable th)", "class_method_signature": "ExceptionUtil.toString(Throwable th)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(Throwable th, boolean printStack)", "modifiers": "public static", "return": "String", "signature": "String toString(Throwable th, boolean printStack)", "full_signature": "public static String toString(Throwable th, boolean printStack)", "class_method_signature": "ExceptionUtil.toString(Throwable th, boolean printStack)", "testcase": false, "constructor": false}, {"identifier": "rethrow", "parameters": "(Throwable t, Class<T> clz)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "void", "signature": "void rethrow(Throwable t, Class<T> clz)", "full_signature": "@SuppressWarnings(\"unchecked\") public static void rethrow(Throwable t, Class<T> clz)", "class_method_signature": "ExceptionUtil.rethrow(Throwable t, Class<T> clz)", "testcase": false, "constructor": false}, {"identifier": "rethrowRuntime", "parameters": "(Throwable t)", "modifiers": "public static", "return": "void", "signature": "void rethrowRuntime(Throwable t)", "full_signature": "public static void rethrowRuntime(Throwable t)", "class_method_signature": "ExceptionUtil.rethrowRuntime(Throwable t)", "testcase": false, "constructor": false}], "file": "utils/src/main/java/com/cloud/utils/exception/ExceptionUtil.java"}, "focal_method": {"identifier": "rethrow", "parameters": "(Throwable t, Class<T> clz)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "void", "body": "@SuppressWarnings(\"unchecked\")\n    public static <T extends Throwable> void rethrow(Throwable t, Class<T> clz) throws T {\n        if (clz.isAssignableFrom(t.getClass()))\n            throw (T)t;\n    }", "signature": "void rethrow(Throwable t, Class<T> clz)", "full_signature": "@SuppressWarnings(\"unchecked\") public static void rethrow(Throwable t, Class<T> clz)", "class_method_signature": "ExceptionUtil.rethrow(Throwable t, Class<T> clz)", "testcase": false, "constructor": false, "invocations": ["isAssignableFrom", "getClass"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}