{"test_class": {"identifier": "LongValueConverterTest", "superclass": "extends ValueConverterTestCase<Long>", "interfaces": "", "fields": [], "file": "rdf-orm/com.mobi.rdf.orm/src/test/java/com/mobi/rdf/orm/conversion/impl/LongValueConverterTest.java"}, "test_case": {"identifier": "badTest", "parameters": "()", "modifiers": "@Test(expected = ValueConversionException.class) public", "return": "void", "body": "@Test(expected = ValueConversionException.class)\n    public void badTest() {\n        valueConverter.convertValue(valueFactory.createLiteral(\"3.141592\"), null, Long.class);\n    }", "signature": "void badTest()", "full_signature": "@Test(expected = ValueConversionException.class) public void badTest()", "class_method_signature": "LongValueConverterTest.badTest()", "testcase": true, "constructor": false, "invocations": ["convertValue", "createLiteral"]}, "focal_class": {"identifier": "LongValueConverter", "superclass": "extends AbstractValueConverter<Long>", "interfaces": "", "fields": [], "methods": [{"identifier": "LongValueConverter", "parameters": "()", "modifiers": "public", "return": "", "signature": " LongValueConverter()", "full_signature": "public  LongValueConverter()", "class_method_signature": "LongValueConverter.LongValueConverter()", "testcase": false, "constructor": true}, {"identifier": "convertValue", "parameters": "(@Nonnull Value value, @Nonnull Thing thing, @Nonnull Class<? extends Long> desiredType)", "modifiers": "@Override public", "return": "Long", "signature": "Long convertValue(@Nonnull Value value, @Nonnull Thing thing, @Nonnull Class<? extends Long> desiredType)", "full_signature": "@Override public Long convertValue(@Nonnull Value value, @Nonnull Thing thing, @Nonnull Class<? extends Long> desiredType)", "class_method_signature": "LongValueConverter.convertValue(@Nonnull Value value, @Nonnull Thing thing, @Nonnull Class<? extends Long> desiredType)", "testcase": false, "constructor": false}, {"identifier": "convertType", "parameters": "(@Nonnull Long type, @Nonnull Thing thing)", "modifiers": "@Override public", "return": "Value", "signature": "Value convertType(@Nonnull Long type, @Nonnull Thing thing)", "full_signature": "@Override public Value convertType(@Nonnull Long type, @Nonnull Thing thing)", "class_method_signature": "LongValueConverter.convertType(@Nonnull Long type, @Nonnull Thing thing)", "testcase": false, "constructor": false}], "file": "rdf-orm/com.mobi.rdf.orm/src/main/java/com/mobi/rdf/orm/conversion/impl/LongValueConverter.java"}, "focal_method": {"identifier": "convertValue", "parameters": "(@Nonnull Value value, @Nonnull Thing thing, @Nonnull Class<? extends Long> desiredType)", "modifiers": "@Override public", "return": "Long", "body": "@Override\n    public Long convertValue(@Nonnull Value value, @Nonnull Thing thing, @Nonnull Class<? extends Long> desiredType) throws ValueConversionException {\n        try {\n            return ((Literal) value).longValue();\n        } catch (Exception e) {\n            throw new ValueConversionException(\"Issue converting value '\" + value + \"' into a long\", e);\n        }\n    }", "signature": "Long convertValue(@Nonnull Value value, @Nonnull Thing thing, @Nonnull Class<? extends Long> desiredType)", "full_signature": "@Override public Long convertValue(@Nonnull Value value, @Nonnull Thing thing, @Nonnull Class<? extends Long> desiredType)", "class_method_signature": "LongValueConverter.convertValue(@Nonnull Value value, @Nonnull Thing thing, @Nonnull Class<? extends Long> desiredType)", "testcase": false, "constructor": false, "invocations": ["longValue"]}, "repository": {"repo_id": 62253355, "url": "https://github.com/inovexcorp/mobi", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 30, "size": 54070, "license": "licensed"}}