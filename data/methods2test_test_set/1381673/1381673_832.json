{"test_class": {"identifier": "SingleFieldConstraintEBLeftSideTest", "superclass": "", "interfaces": "", "fields": [], "file": "drools-workbench-models/drools-workbench-models-datamodel-api/src/test/java/org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSideTest.java"}, "test_case": {"identifier": "testHashCode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHashCode() {\n        final FactPattern fp = new FactPattern();\n        fp.setFactType( \"Applicant\" );\n        fp.setBoundName( \"$a\" );\n        final SingleFieldConstraintEBLeftSide con = new SingleFieldConstraintEBLeftSide();\n        con.setConstraintValueType( SingleFieldConstraint.TYPE_UNDEFINED );\n        fp.addConstraint( con );\n        con.setExpressionLeftSide( new ExpressionFormLine( new ExpressionUnboundFact( fp.getFactType() ) ) );\n        assertNotEquals( 0,\n                         con.hashCode() );\n    }", "signature": "void testHashCode()", "full_signature": "@Test public void testHashCode()", "class_method_signature": "SingleFieldConstraintEBLeftSideTest.testHashCode()", "testcase": true, "constructor": false, "invocations": ["setFactType", "setBoundName", "setConstraintValueType", "addConstraint", "setExpressionLeftSide", "getFactType", "assertNotEquals", "hashCode"]}, "focal_class": {"identifier": "SingleFieldConstraintEBLeftSide", "superclass": "extends SingleFieldConstraint", "interfaces": "", "fields": [{"original_string": "private ExpressionFormLine expLeftSide = new ExpressionFormLine();", "modifier": "private", "type": "ExpressionFormLine", "declarator": "expLeftSide = new ExpressionFormLine()", "var_name": "expLeftSide"}], "methods": [{"identifier": "SingleFieldConstraintEBLeftSide", "parameters": "()", "modifiers": "public", "return": "", "signature": " SingleFieldConstraintEBLeftSide()", "full_signature": "public  SingleFieldConstraintEBLeftSide()", "class_method_signature": "SingleFieldConstraintEBLeftSide.SingleFieldConstraintEBLeftSide()", "testcase": false, "constructor": true}, {"identifier": "SingleFieldConstraintEBLeftSide", "parameters": "( String factType,\n                                            String fieldName,\n                                            String fieldType,\n                                            FieldConstraint parent )", "modifiers": "public", "return": "", "signature": " SingleFieldConstraintEBLeftSide( String factType,\n                                            String fieldName,\n                                            String fieldType,\n                                            FieldConstraint parent )", "full_signature": "public  SingleFieldConstraintEBLeftSide( String factType,\n                                            String fieldName,\n                                            String fieldType,\n                                            FieldConstraint parent )", "class_method_signature": "SingleFieldConstraintEBLeftSide.SingleFieldConstraintEBLeftSide( String factType,\n                                            String fieldName,\n                                            String fieldType,\n                                            FieldConstraint parent )", "testcase": false, "constructor": true}, {"identifier": "SingleFieldConstraintEBLeftSide", "parameters": "( String field )", "modifiers": "public", "return": "", "signature": " SingleFieldConstraintEBLeftSide( String field )", "full_signature": "public  SingleFieldConstraintEBLeftSide( String field )", "class_method_signature": "SingleFieldConstraintEBLeftSide.SingleFieldConstraintEBLeftSide( String field )", "testcase": false, "constructor": true}, {"identifier": "isBound", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isBound()", "full_signature": "public boolean isBound()", "class_method_signature": "SingleFieldConstraintEBLeftSide.isBound()", "testcase": false, "constructor": false}, {"identifier": "getExpressionLeftSide", "parameters": "()", "modifiers": "public", "return": "ExpressionFormLine", "signature": "ExpressionFormLine getExpressionLeftSide()", "full_signature": "public ExpressionFormLine getExpressionLeftSide()", "class_method_signature": "SingleFieldConstraintEBLeftSide.getExpressionLeftSide()", "testcase": false, "constructor": false}, {"identifier": "setExpressionLeftSide", "parameters": "( ExpressionFormLine expression )", "modifiers": "public", "return": "void", "signature": "void setExpressionLeftSide( ExpressionFormLine expression )", "full_signature": "public void setExpressionLeftSide( ExpressionFormLine expression )", "class_method_signature": "SingleFieldConstraintEBLeftSide.setExpressionLeftSide( ExpressionFormLine expression )", "testcase": false, "constructor": false}, {"identifier": "getFieldBinding", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getFieldBinding()", "full_signature": "@Override public String getFieldBinding()", "class_method_signature": "SingleFieldConstraintEBLeftSide.getFieldBinding()", "testcase": false, "constructor": false}, {"identifier": "setFieldBinding", "parameters": "( String fieldBinding )", "modifiers": "@Override public", "return": "void", "signature": "void setFieldBinding( String fieldBinding )", "full_signature": "@Override public void setFieldBinding( String fieldBinding )", "class_method_signature": "SingleFieldConstraintEBLeftSide.setFieldBinding( String fieldBinding )", "testcase": false, "constructor": false}, {"identifier": "getFieldType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getFieldType()", "full_signature": "@Override public String getFieldType()", "class_method_signature": "SingleFieldConstraintEBLeftSide.getFieldType()", "testcase": false, "constructor": false}, {"identifier": "getFieldName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getFieldName()", "full_signature": "@Override public String getFieldName()", "class_method_signature": "SingleFieldConstraintEBLeftSide.getFieldName()", "testcase": false, "constructor": false}, {"identifier": "addNewConnective", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void addNewConnective()", "full_signature": "@Override public void addNewConnective()", "class_method_signature": "SingleFieldConstraintEBLeftSide.addNewConnective()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "SingleFieldConstraintEBLeftSide.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SingleFieldConstraintEBLeftSide.hashCode()", "testcase": false, "constructor": false}], "file": "drools-workbench-models/drools-workbench-models-datamodel-api/src/main/java/org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int hashCode() {\n        int result = super.hashCode();\n        result = ~~result;\n        result = 31 * result + (expLeftSide != null ? expLeftSide.hashCode() : 0);\n        result = ~~result;\n        return result;\n    }", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SingleFieldConstraintEBLeftSide.hashCode()", "testcase": false, "constructor": false, "invocations": ["hashCode", "hashCode"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}