{"test_class": {"identifier": "BDTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static char[] mdp;", "modifier": "private static", "type": "char[]", "declarator": "mdp", "var_name": "mdp"}, {"original_string": "private static String login;", "modifier": "private static", "type": "String", "declarator": "login", "var_name": "login"}, {"original_string": "private static String nologin;", "modifier": "private static", "type": "String", "declarator": "nologin", "var_name": "nologin"}, {"original_string": "private static String mail;", "modifier": "private static", "type": "String", "declarator": "mail", "var_name": "mail"}], "file": "GTDClientGil/src/test/java/fr/alma/modele/persistance/BDTest.java"}, "test_case": {"identifier": "testRecupererProjetRacine", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRecupererProjetRacine() {\n        System.out.println(\"recupererProjetRacine\");\n        BD instance = new BD();\n        IProjet expResult = null;\n        IProjet result = instance.recupererProjetRacine();\n        assertEquals(expResult, result);\n    }", "signature": "void testRecupererProjetRacine()", "full_signature": "@Test public void testRecupererProjetRacine()", "class_method_signature": "BDTest.testRecupererProjetRacine()", "testcase": true, "constructor": false, "invocations": ["println", "recupererProjetRacine", "assertEquals"]}, "focal_class": {"identifier": "BD", "superclass": "extends AbstractDao<EntiteGTD>", "interfaces": "implements IGestionnaireComptes, ICopieLocale", "fields": [], "methods": [{"identifier": "BD", "parameters": "()", "modifiers": "public", "return": "", "signature": " BD()", "full_signature": "public  BD()", "class_method_signature": "BD.BD()", "testcase": false, "constructor": true}, {"identifier": "existeUtilisateur", "parameters": "(String login)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean existeUtilisateur(String login)", "full_signature": "@Override public Boolean existeUtilisateur(String login)", "class_method_signature": "BD.existeUtilisateur(String login)", "testcase": false, "constructor": false}, {"identifier": "existeUtilisateur", "parameters": "(String login, char[] mdp)", "modifiers": "@Override public", "return": "Long", "signature": "Long existeUtilisateur(String login, char[] mdp)", "full_signature": "@Override public Long existeUtilisateur(String login, char[] mdp)", "class_method_signature": "BD.existeUtilisateur(String login, char[] mdp)", "testcase": false, "constructor": false}, {"identifier": "getIdUtilisateur", "parameters": "(String login)", "modifiers": "@Override public", "return": "Long", "signature": "Long getIdUtilisateur(String login)", "full_signature": "@Override public Long getIdUtilisateur(String login)", "class_method_signature": "BD.getIdUtilisateur(String login)", "testcase": false, "constructor": false}, {"identifier": "creerCompte", "parameters": "(String login, char[] password, String email)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean creerCompte(String login, char[] password, String email)", "full_signature": "@Override public Boolean creerCompte(String login, char[] password, String email)", "class_method_signature": "BD.creerCompte(String login, char[] password, String email)", "testcase": false, "constructor": false}, {"identifier": "existeServer", "parameters": "(String login)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean existeServer(String login)", "full_signature": "@Override public Boolean existeServer(String login)", "class_method_signature": "BD.existeServer(String login)", "testcase": false, "constructor": false}, {"identifier": "setServer", "parameters": "(String login, Boolean value)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean setServer(String login, Boolean value)", "full_signature": "@Override public Boolean setServer(String login, Boolean value)", "class_method_signature": "BD.setServer(String login, Boolean value)", "testcase": false, "constructor": false}, {"identifier": "ajouterProjetBD", "parameters": "(IProjet projet, Long idProjet)", "modifiers": "@Override public", "return": "Long", "signature": "Long ajouterProjetBD(IProjet projet, Long idProjet)", "full_signature": "@Override public Long ajouterProjetBD(IProjet projet, Long idProjet)", "class_method_signature": "BD.ajouterProjetBD(IProjet projet, Long idProjet)", "testcase": false, "constructor": false}, {"identifier": "ajouterTacheBD", "parameters": "(ITache tache, IProjet projet)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean ajouterTacheBD(ITache tache, IProjet projet)", "full_signature": "@Override public Boolean ajouterTacheBD(ITache tache, IProjet projet)", "class_method_signature": "BD.ajouterTacheBD(ITache tache, IProjet projet)", "testcase": false, "constructor": false}, {"identifier": "modifierTache", "parameters": "(ITache t)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean modifierTache(ITache t)", "full_signature": "@Override public Boolean modifierTache(ITache t)", "class_method_signature": "BD.modifierTache(ITache t)", "testcase": false, "constructor": false}, {"identifier": "modifierProjet", "parameters": "(IProjet projet)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean modifierProjet(IProjet projet)", "full_signature": "@Override public Boolean modifierProjet(IProjet projet)", "class_method_signature": "BD.modifierProjet(IProjet projet)", "testcase": false, "constructor": false}, {"identifier": "supprimerContact", "parameters": "(IContact contact)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean supprimerContact(IContact contact)", "full_signature": "@Override public Boolean supprimerContact(IContact contact)", "class_method_signature": "BD.supprimerContact(IContact contact)", "testcase": false, "constructor": false}, {"identifier": "supprimerTache", "parameters": "(ITache tache)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean supprimerTache(ITache tache)", "full_signature": "@Override public Boolean supprimerTache(ITache tache)", "class_method_signature": "BD.supprimerTache(ITache tache)", "testcase": false, "constructor": false}, {"identifier": "supprimerProjet", "parameters": "(IProjet projet)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean supprimerProjet(IProjet projet)", "full_signature": "@Override public Boolean supprimerProjet(IProjet projet)", "class_method_signature": "BD.supprimerProjet(IProjet projet)", "testcase": false, "constructor": false}, {"identifier": "ajouterContactBD", "parameters": "(IContact contact)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean ajouterContactBD(IContact contact)", "full_signature": "@Override public Boolean ajouterContactBD(IContact contact)", "class_method_signature": "BD.ajouterContactBD(IContact contact)", "testcase": false, "constructor": false}, {"identifier": "recupererProjetRacine", "parameters": "()", "modifiers": "public", "return": "IProjet", "signature": "IProjet recupererProjetRacine()", "full_signature": "public IProjet recupererProjetRacine()", "class_method_signature": "BD.recupererProjetRacine()", "testcase": false, "constructor": false}, {"identifier": "mettreDansCorbeille", "parameters": "(IProjet p)", "modifiers": "@Override public", "return": "void", "signature": "void mettreDansCorbeille(IProjet p)", "full_signature": "@Override public void mettreDansCorbeille(IProjet p)", "class_method_signature": "BD.mettreDansCorbeille(IProjet p)", "testcase": false, "constructor": false}, {"identifier": "mettreDansCorbeille", "parameters": "(ITache t)", "modifiers": "@Override public", "return": "void", "signature": "void mettreDansCorbeille(ITache t)", "full_signature": "@Override public void mettreDansCorbeille(ITache t)", "class_method_signature": "BD.mettreDansCorbeille(ITache t)", "testcase": false, "constructor": false}, {"identifier": "viderCorbeille", "parameters": "(IProjet corbeille)", "modifiers": "@Override public", "return": "void", "signature": "void viderCorbeille(IProjet corbeille)", "full_signature": "@Override public void viderCorbeille(IProjet corbeille)", "class_method_signature": "BD.viderCorbeille(IProjet corbeille)", "testcase": false, "constructor": false}], "file": "GTDClientGil/src/main/java/fr/alma/modele/persistance/BD.java"}, "focal_method": {"identifier": "recupererProjetRacine", "parameters": "()", "modifiers": "public", "return": "IProjet", "body": "public IProjet recupererProjetRacine() {\n\t\tProjetDao dao = DaoFactory.createProjetDao();\n\t\tProjet p = dao.recupererProjetRacine();\n\t\treturn p;\n\t}", "signature": "IProjet recupererProjetRacine()", "full_signature": "public IProjet recupererProjetRacine()", "class_method_signature": "BD.recupererProjetRacine()", "testcase": false, "constructor": false, "invocations": ["createProjetDao", "recupererProjetRacine"]}, "repository": {"repo_id": 552448, "url": "https://github.com/sunye/AlmaGTD", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 27723, "license": "licensed"}}