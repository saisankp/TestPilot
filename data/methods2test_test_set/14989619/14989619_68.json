{"test_class": {"identifier": "AddTimestampFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mocked\n\tprivate MetricRegistry registry;", "modifier": "@Mocked\n\tprivate", "type": "MetricRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private DataSource source;", "modifier": "private", "type": "DataSource", "declarator": "source", "var_name": "source"}, {"original_string": "private ObjectNode baseNode;", "modifier": "private", "type": "ObjectNode", "declarator": "baseNode", "var_name": "baseNode"}], "file": "server/src/test/java/org/jvalue/ods/processor/filter/AddTimestampFilterTest.java"}, "test_case": {"identifier": "testFilterException", "parameters": "()", "modifiers": "@Test(expected = FilterException.class) public", "return": "void", "body": "@Test(expected = FilterException.class)\n\tpublic void testFilterException() throws FilterException {\n\t\tnew AddTimestampFilter(source, registry).doFilter(null);\n\t}", "signature": "void testFilterException()", "full_signature": "@Test(expected = FilterException.class) public void testFilterException()", "class_method_signature": "AddTimestampFilterTest.testFilterException()", "testcase": true, "constructor": false, "invocations": ["doFilter"]}, "focal_class": {"identifier": "AddTimestampFilter", "superclass": "extends AbstractFilter<ObjectNode, ObjectNode>", "interfaces": "", "fields": [{"original_string": "public static final String DEFAULT_KEY_NAME = \"created_at\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_KEY_NAME = \"created_at\"", "var_name": "DEFAULT_KEY_NAME"}], "methods": [{"identifier": "AddTimestampFilter", "parameters": "(\n\t\t\t@Assisted DataSource source,\n\t\t\tMetricRegistry registry)", "modifiers": "@Inject", "return": "", "signature": " AddTimestampFilter(\n\t\t\t@Assisted DataSource source,\n\t\t\tMetricRegistry registry)", "full_signature": "@Inject  AddTimestampFilter(\n\t\t\t@Assisted DataSource source,\n\t\t\tMetricRegistry registry)", "class_method_signature": "AddTimestampFilter.AddTimestampFilter(\n\t\t\t@Assisted DataSource source,\n\t\t\tMetricRegistry registry)", "testcase": false, "constructor": true}, {"identifier": "doFilter", "parameters": "(ObjectNode node)", "modifiers": "@Override protected", "return": "ObjectNode", "signature": "ObjectNode doFilter(ObjectNode node)", "full_signature": "@Override protected ObjectNode doFilter(ObjectNode node)", "class_method_signature": "AddTimestampFilter.doFilter(ObjectNode node)", "testcase": false, "constructor": false}, {"identifier": "doOnComplete", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void doOnComplete()", "full_signature": "@Override protected void doOnComplete()", "class_method_signature": "AddTimestampFilter.doOnComplete()", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/jvalue/ods/processor/filter/AddTimestampFilter.java"}, "focal_method": {"identifier": "doFilter", "parameters": "(ObjectNode node)", "modifiers": "@Override protected", "return": "ObjectNode", "body": "@Override\n\tprotected ObjectNode doFilter(ObjectNode node) throws FilterException {\n\t\ttry {\n\t\t\tnode.put(DEFAULT_KEY_NAME, LocalDateTime.now().truncatedTo(ChronoUnit.SECONDS).toString());\n\t\t} catch (Exception ex) {\n\t\t\tthrow new FilterException(\"Unable to add timestamp to object node\", ex);\n\t\t}\n\t\treturn node;\n\t}", "signature": "ObjectNode doFilter(ObjectNode node)", "full_signature": "@Override protected ObjectNode doFilter(ObjectNode node)", "class_method_signature": "AddTimestampFilter.doFilter(ObjectNode node)", "testcase": false, "constructor": false, "invocations": ["put", "toString", "truncatedTo", "now"]}, "repository": {"repo_id": 14989619, "url": "https://github.com/jvalue/open-data-service-v1", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 4525, "license": "licensed"}}