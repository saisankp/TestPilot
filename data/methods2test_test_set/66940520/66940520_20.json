{"test_class": {"identifier": "TrackerSideEffectDataBundleTest", "superclass": "", "interfaces": "", "fields": [], "file": "dhis-2/dhis-services/dhis-service-tracker/src/test/java/org/hisp/dhis/tracker/job/TrackerSideEffectDataBundleTest.java"}, "test_case": {"identifier": "testSideEffectDataBundleForEnrollment", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSideEffectDataBundleForEnrollment()\n    {\n        Enrollment enrollment = new Enrollment();\n        enrollment.setEnrollment( \"test-enrollment\" );\n\n        Map<String, List<TrackerRuleEngineSideEffect>> enrollmentRuleEffects = new HashMap<>();\n        enrollmentRuleEffects.put( enrollment.getEnrollment(), Lists.newArrayList() );\n\n        ProgramInstance programInstance = new ProgramInstance();\n        programInstance.setAutoFields();\n\n        TrackerSideEffectDataBundle bundle = TrackerSideEffectDataBundle.builder()\n            .enrollmentRuleEffects( enrollmentRuleEffects )\n            .accessedBy( \"testUser\" )\n            .importStrategy( TrackerImportStrategy.CREATE )\n            .object( programInstance.getUid() )\n            .klass( ProgramInstance.class )\n            .build();\n\n        assertEquals( programInstance.getUid(), bundle.getObject() );\n        assertEquals( ProgramInstance.class, bundle.getKlass() );\n        assertTrue( bundle.getEnrollmentRuleEffects().containsKey( \"test-enrollment\" ) );\n        assertTrue( bundle.getEventRuleEffects().isEmpty() );\n        assertEquals( TrackerImportStrategy.CREATE, bundle.getImportStrategy() );\n        assertEquals( MessageType.TRACKER_SIDE_EFFECT, bundle.getMessageType() );\n    }", "signature": "void testSideEffectDataBundleForEnrollment()", "full_signature": "@Test public void testSideEffectDataBundleForEnrollment()", "class_method_signature": "TrackerSideEffectDataBundleTest.testSideEffectDataBundleForEnrollment()", "testcase": true, "constructor": false, "invocations": ["setEnrollment", "put", "getEnrollment", "newArrayList", "setAutoFields", "build", "klass", "object", "importStrategy", "accessedBy", "enrollmentRuleEffects", "builder", "getUid", "assertEquals", "getUid", "getObject", "assertEquals", "getKlass", "assertTrue", "containsKey", "getEnrollmentRuleEffects", "assertTrue", "isEmpty", "getEventRuleEffects", "assertEquals", "getImportStrategy", "assertEquals", "getMessageType"]}, "focal_class": {"identifier": "TrackerSideEffectDataBundle", "superclass": "", "interfaces": "implements Message", "fields": [{"original_string": "@JsonProperty\n    private String uid;", "modifier": "@JsonProperty\n    private", "type": "String", "declarator": "uid", "var_name": "uid"}, {"original_string": "@JsonProperty\n    private Class<? extends BaseIdentifiableObject> klass;", "modifier": "@JsonProperty\n    private", "type": "Class<? extends BaseIdentifiableObject>", "declarator": "klass", "var_name": "klass"}, {"original_string": "@JsonProperty\n    private String object;", "modifier": "@JsonProperty\n    private", "type": "String", "declarator": "object", "var_name": "object"}, {"original_string": "@JsonProperty\n    private JobConfiguration jobConfiguration;", "modifier": "@JsonProperty\n    private", "type": "JobConfiguration", "declarator": "jobConfiguration", "var_name": "jobConfiguration"}, {"original_string": "@JsonProperty\n    @Builder.Default\n    private Map<String, List<TrackerRuleEngineSideEffect>> enrollmentRuleEffects = new HashMap<>();", "modifier": "@JsonProperty\n    @Builder.Default\n    private", "type": "Map<String, List<TrackerRuleEngineSideEffect>>", "declarator": "enrollmentRuleEffects = new HashMap<>()", "var_name": "enrollmentRuleEffects"}, {"original_string": "@JsonProperty\n    @Builder.Default\n    private Map<String, List<TrackerRuleEngineSideEffect>> eventRuleEffects = new HashMap<>();", "modifier": "@JsonProperty\n    @Builder.Default\n    private", "type": "Map<String, List<TrackerRuleEngineSideEffect>>", "declarator": "eventRuleEffects = new HashMap<>()", "var_name": "eventRuleEffects"}, {"original_string": "@JsonProperty\n    private TrackerImportStrategy importStrategy;", "modifier": "@JsonProperty\n    private", "type": "TrackerImportStrategy", "declarator": "importStrategy", "var_name": "importStrategy"}, {"original_string": "@JsonProperty\n    private String accessedBy;", "modifier": "@JsonProperty\n    private", "type": "String", "declarator": "accessedBy", "var_name": "accessedBy"}, {"original_string": "@JsonProperty\n    private String jobId;", "modifier": "@JsonProperty\n    private", "type": "String", "declarator": "jobId", "var_name": "jobId"}], "methods": [{"identifier": "getMessageType", "parameters": "()", "modifiers": "@Override @JsonProperty public", "return": "MessageType", "signature": "MessageType getMessageType()", "full_signature": "@Override @JsonProperty public MessageType getMessageType()", "class_method_signature": "TrackerSideEffectDataBundle.getMessageType()", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/job/TrackerSideEffectDataBundle.java"}, "focal_method": {"identifier": "getMessageType", "parameters": "()", "modifiers": "@Override @JsonProperty public", "return": "MessageType", "body": "@Override\n    @JsonProperty\n    public MessageType getMessageType()\n    {\n        return MessageType.TRACKER_SIDE_EFFECT;\n    }", "signature": "MessageType getMessageType()", "full_signature": "@Override @JsonProperty public MessageType getMessageType()", "class_method_signature": "TrackerSideEffectDataBundle.getMessageType()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}