{"test_class": {"identifier": "RegisterExceptionHandlerTest", "superclass": "", "interfaces": "", "fields": [], "file": "elastic-config-core/src/test/java/com/github/config/exception/RegisterExceptionHandlerTest.java"}, "test_case": {"identifier": "assertHandleExceptionWithInterruptedException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void assertHandleExceptionWithInterruptedException() {\n\n        RegisterExceptionHandler.handleException(new InterruptedException());\n    }", "signature": "void assertHandleExceptionWithInterruptedException()", "full_signature": "@Test public void assertHandleExceptionWithInterruptedException()", "class_method_signature": "RegisterExceptionHandlerTest.assertHandleExceptionWithInterruptedException()", "testcase": true, "constructor": false, "invocations": ["handleException"]}, "focal_class": {"identifier": "RegisterExceptionHandler", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "handleException", "parameters": "(final Exception cause)", "modifiers": "public static", "return": "void", "signature": "void handleException(final Exception cause)", "full_signature": "public static void handleException(final Exception cause)", "class_method_signature": "RegisterExceptionHandler.handleException(final Exception cause)", "testcase": false, "constructor": false}, {"identifier": "isIgnoredException", "parameters": "(final Throwable cause)", "modifiers": "private static", "return": "boolean", "signature": "boolean isIgnoredException(final Throwable cause)", "full_signature": "private static boolean isIgnoredException(final Throwable cause)", "class_method_signature": "RegisterExceptionHandler.isIgnoredException(final Throwable cause)", "testcase": false, "constructor": false}], "file": "elastic-config-core/src/main/java/com/github/config/exception/RegisterExceptionHandler.java"}, "focal_method": {"identifier": "handleException", "parameters": "(final Exception cause)", "modifiers": "public static", "return": "void", "body": "public static void handleException(final Exception cause) {\n        if (isIgnoredException(cause) || isIgnoredException(cause.getCause())) {\n            log.debug(\"Elastic config: ignored exception for: {}\", cause.getMessage());\n        }\n        else if (cause instanceof InterruptedException) {\n            Thread.currentThread().interrupt();\n        }\n        else {\n            throw new RegisterException(cause);\n        }\n    }", "signature": "void handleException(final Exception cause)", "full_signature": "public static void handleException(final Exception cause)", "class_method_signature": "RegisterExceptionHandler.handleException(final Exception cause)", "testcase": false, "constructor": false, "invocations": ["isIgnoredException", "isIgnoredException", "getCause", "debug", "getMessage", "interrupt", "currentThread"]}, "repository": {"repo_id": 73767658, "url": "https://github.com/ErinDavid/elastic-config", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 156, "license": "licensed"}}