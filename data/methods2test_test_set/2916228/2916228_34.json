{"test_class": {"identifier": "QueryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Repository repository;", "modifier": "private", "type": "Repository", "declarator": "repository", "var_name": "repository"}], "file": "propoid-db/src/test/java/propoid/db/operation/QueryTest.java"}, "test_case": {"identifier": "testFooSingle", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testFooSingle() {\n\t\ttry {\n\t\t\trepository.query(new Foo()).single();\n\t\t} catch (RepositoryException expected) {\n\t\t}\n\n\t\trepository.query(new FooEx()).single();\n\t}", "signature": "void testFooSingle()", "full_signature": "@Test public void testFooSingle()", "class_method_signature": "QueryTest.testFooSingle()", "testcase": true, "constructor": false, "invocations": ["single", "query", "single", "query"]}, "focal_class": {"identifier": "Query", "superclass": "extends Operation", "interfaces": "", "fields": [], "methods": [{"identifier": "Query", "parameters": "(Repository repository)", "modifiers": "public", "return": "", "signature": " Query(Repository repository)", "full_signature": "public  Query(Repository repository)", "class_method_signature": "Query.Query(Repository repository)", "testcase": false, "constructor": true}, {"identifier": "now", "parameters": "(Propoid propoid, Where where)", "modifiers": "public", "return": "Match<Propoid>", "signature": "Match<Propoid> now(Propoid propoid, Where where)", "full_signature": "public Match<Propoid> now(Propoid propoid, Where where)", "class_method_signature": "Query.now(Propoid propoid, Where where)", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "(Class<? extends Propoid> type)", "modifiers": "public static", "return": "Uri", "signature": "Uri getUri(Class<? extends Propoid> type)", "full_signature": "public static Uri getUri(Class<? extends Propoid> type)", "class_method_signature": "Query.getUri(Class<? extends Propoid> type)", "testcase": false, "constructor": false}], "file": "propoid-db/src/main/java/propoid/db/operation/Query.java"}, "focal_method": {"identifier": "Query", "parameters": "(Repository repository)", "modifiers": "public", "return": "", "body": "public Query(Repository repository) {\n\t\tsuper(repository);\n\t}", "signature": " Query(Repository repository)", "full_signature": "public  Query(Repository repository)", "class_method_signature": "Query.Query(Repository repository)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 2916228, "url": "https://github.com/svenmeier/propoid", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 7, "size": 475, "license": "licensed"}}