{"test_class": {"identifier": "CDAR2ParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CDAR2Parser parser;", "modifier": "private", "type": "CDAR2Parser", "declarator": "parser", "var_name": "parser"}], "file": "modules/cda/oht/src/test/java/org/openehealth/ipf/modules/cda/CDAR2ParserTest.java"}, "test_case": {"identifier": "testParseSampleCCDDocument", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParseSampleCCDDocument() throws IOException {\n        InputStream is = getClass().getResourceAsStream(\n                \"/builders/content/document/SampleCCDDocument.xml\");\n        POCDMT000040ClinicalDocument clinicalDocument = parser.parse(is);\n        Assert.assertNotNull(clinicalDocument);\n    }", "signature": "void testParseSampleCCDDocument()", "full_signature": "@Test public void testParseSampleCCDDocument()", "class_method_signature": "CDAR2ParserTest.testParseSampleCCDDocument()", "testcase": true, "constructor": false, "invocations": ["getResourceAsStream", "getClass", "parse", "assertNotNull"]}, "focal_class": {"identifier": "CDAR2Parser", "superclass": "", "interfaces": "implements Parser<POCDMT000040ClinicalDocument>", "fields": [], "methods": [{"identifier": "parse", "parameters": "(String s, Object... options)", "modifiers": "public", "return": "POCDMT000040ClinicalDocument", "signature": "POCDMT000040ClinicalDocument parse(String s, Object... options)", "full_signature": "public POCDMT000040ClinicalDocument parse(String s, Object... options)", "class_method_signature": "CDAR2Parser.parse(String s, Object... options)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(InputStream is, Object... options)", "modifiers": "public", "return": "POCDMT000040ClinicalDocument", "signature": "POCDMT000040ClinicalDocument parse(InputStream is, Object... options)", "full_signature": "public POCDMT000040ClinicalDocument parse(InputStream is, Object... options)", "class_method_signature": "CDAR2Parser.parse(InputStream is, Object... options)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(Source source, Object... options)", "modifiers": "public", "return": "POCDMT000040ClinicalDocument", "signature": "POCDMT000040ClinicalDocument parse(Source source, Object... options)", "full_signature": "public POCDMT000040ClinicalDocument parse(Source source, Object... options)", "class_method_signature": "CDAR2Parser.parse(Source source, Object... options)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(Reader reader, Object... options)", "modifiers": "public", "return": "POCDMT000040ClinicalDocument", "signature": "POCDMT000040ClinicalDocument parse(Reader reader, Object... options)", "full_signature": "public POCDMT000040ClinicalDocument parse(Reader reader, Object... options)", "class_method_signature": "CDAR2Parser.parse(Reader reader, Object... options)", "testcase": false, "constructor": false}], "file": "modules/cda/oht/src/main/java/org/openehealth/ipf/modules/cda/CDAR2Parser.java"}, "focal_method": {"identifier": "parse", "parameters": "(String s, Object... options)", "modifiers": "public", "return": "POCDMT000040ClinicalDocument", "body": "public POCDMT000040ClinicalDocument parse(String s, Object... options) {\n        try {\n            return parse(new ByteArrayInputStream(s.getBytes()), options);\n        } catch (IOException e) {\n            throw new ParseException(e);\n        }\n    }", "signature": "POCDMT000040ClinicalDocument parse(String s, Object... options)", "full_signature": "public POCDMT000040ClinicalDocument parse(String s, Object... options)", "class_method_signature": "CDAR2Parser.parse(String s, Object... options)", "testcase": false, "constructor": false, "invocations": ["parse", "getBytes"]}, "repository": {"repo_id": 793164, "url": "https://github.com/krasserm/ipf", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 30233, "license": "licensed"}}