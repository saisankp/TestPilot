{"test_class": {"identifier": "RelationalTableRegistrationHelperServiceImplTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Mock\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@Mock\n    private BusinessObjectDataDao businessObjectDataDao;", "modifier": "@Mock\n    private", "type": "BusinessObjectDataDao", "declarator": "businessObjectDataDao", "var_name": "businessObjectDataDao"}, {"original_string": "@Mock\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Mock\n    private BusinessObjectDataStatusDaoHelper businessObjectDataStatusDaoHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectDataStatusDaoHelper", "declarator": "businessObjectDataStatusDaoHelper", "var_name": "businessObjectDataStatusDaoHelper"}, {"original_string": "@Mock\n    private BusinessObjectDefinitionDao businessObjectDefinitionDao;", "modifier": "@Mock\n    private", "type": "BusinessObjectDefinitionDao", "declarator": "businessObjectDefinitionDao", "var_name": "businessObjectDefinitionDao"}, {"original_string": "@Mock\n    private BusinessObjectDefinitionDaoHelper businessObjectDefinitionDaoHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectDefinitionDaoHelper", "declarator": "businessObjectDefinitionDaoHelper", "var_name": "businessObjectDefinitionDaoHelper"}, {"original_string": "@Mock\n    private BusinessObjectFormatDaoHelper businessObjectFormatDaoHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectFormatDaoHelper", "declarator": "businessObjectFormatDaoHelper", "var_name": "businessObjectFormatDaoHelper"}, {"original_string": "@Mock\n    private BusinessObjectFormatHelper businessObjectFormatHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectFormatHelper", "declarator": "businessObjectFormatHelper", "var_name": "businessObjectFormatHelper"}, {"original_string": "@Mock\n    private BusinessObjectFormatService businessObjectFormatService;", "modifier": "@Mock\n    private", "type": "BusinessObjectFormatService", "declarator": "businessObjectFormatService", "var_name": "businessObjectFormatService"}, {"original_string": "@Mock\n    private ConfigurationHelper configurationHelper;", "modifier": "@Mock\n    private", "type": "ConfigurationHelper", "declarator": "configurationHelper", "var_name": "configurationHelper"}, {"original_string": "@Mock\n    private CredStashHelper credStashHelper;", "modifier": "@Mock\n    private", "type": "CredStashHelper", "declarator": "credStashHelper", "var_name": "credStashHelper"}, {"original_string": "@Mock\n    private DataProviderDaoHelper dataProviderDaoHelper;", "modifier": "@Mock\n    private", "type": "DataProviderDaoHelper", "declarator": "dataProviderDaoHelper", "var_name": "dataProviderDaoHelper"}, {"original_string": "@Mock\n    private MessageNotificationEventService messageNotificationEventService;", "modifier": "@Mock\n    private", "type": "MessageNotificationEventService", "declarator": "messageNotificationEventService", "var_name": "messageNotificationEventService"}, {"original_string": "@Mock\n    private NamespaceDaoHelper namespaceDaoHelper;", "modifier": "@Mock\n    private", "type": "NamespaceDaoHelper", "declarator": "namespaceDaoHelper", "var_name": "namespaceDaoHelper"}, {"original_string": "@InjectMocks\n    private RelationalTableRegistrationHelperServiceImpl relationalTableRegistrationHelperServiceImpl;", "modifier": "@InjectMocks\n    private", "type": "RelationalTableRegistrationHelperServiceImpl", "declarator": "relationalTableRegistrationHelperServiceImpl", "var_name": "relationalTableRegistrationHelperServiceImpl"}, {"original_string": "@Mock\n    private SearchIndexUpdateHelper searchIndexUpdateHelper;", "modifier": "@Mock\n    private", "type": "SearchIndexUpdateHelper", "declarator": "searchIndexUpdateHelper", "var_name": "searchIndexUpdateHelper"}, {"original_string": "@Mock\n    private StorageDaoHelper storageDaoHelper;", "modifier": "@Mock\n    private", "type": "StorageDaoHelper", "declarator": "storageDaoHelper", "var_name": "storageDaoHelper"}, {"original_string": "@Mock\n    private StorageHelper storageHelper;", "modifier": "@Mock\n    private", "type": "StorageHelper", "declarator": "storageHelper", "var_name": "storageHelper"}, {"original_string": "@Mock\n    private StorageUnitStatusDaoHelper storageUnitStatusDaoHelper;", "modifier": "@Mock\n    private", "type": "StorageUnitStatusDaoHelper", "declarator": "storageUnitStatusDaoHelper", "var_name": "storageUnitStatusDaoHelper"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/impl/RelationalTableRegistrationHelperServiceImplTest.java"}, "test_case": {"identifier": "testGetPasswordCredStashException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetPasswordCredStashException() throws Exception\n    {\n        // Mock the external calls.\n        when(configurationHelper.getProperty(ConfigurationValue.CREDSTASH_RELATIONAL_STORAGE_ENCRYPTION_CONTEXT)).thenReturn(CREDSTASH_ENCRYPTION_CONTEXT);\n        when(credStashHelper.getCredentialFromCredStash(CREDSTASH_ENCRYPTION_CONTEXT, USER_CREDENTIAL_NAME))\n            .thenThrow(new CredStashGetCredentialFailedException(ERROR_MESSAGE));\n\n        // Try to call the method under test.\n        try\n        {\n            relationalTableRegistrationHelperServiceImpl.getPassword(new RelationalStorageAttributesDto(JDBC_URL, USERNAME, USER_CREDENTIAL_NAME));\n            fail();\n        }\n        catch (IllegalStateException e)\n        {\n            assertEquals(String.format(\"%s: %s\", CredStashGetCredentialFailedException.class.getName(), ERROR_MESSAGE), e.getMessage());\n        }\n\n        // Verify the external calls.\n        verify(configurationHelper).getProperty(ConfigurationValue.CREDSTASH_RELATIONAL_STORAGE_ENCRYPTION_CONTEXT);\n        verify(credStashHelper).getCredentialFromCredStash(CREDSTASH_ENCRYPTION_CONTEXT, USER_CREDENTIAL_NAME);\n        verifyNoMoreInteractionsHelper();\n    }", "signature": "void testGetPasswordCredStashException()", "full_signature": "@Test public void testGetPasswordCredStashException()", "class_method_signature": "RelationalTableRegistrationHelperServiceImplTest.testGetPasswordCredStashException()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getProperty", "thenThrow", "when", "getCredentialFromCredStash", "getPassword", "fail", "assertEquals", "format", "getName", "getMessage", "getProperty", "verify", "getCredentialFromCredStash", "verify", "verifyNoMoreInteractionsHelper"]}, "focal_class": {"identifier": "RelationalTableRegistrationHelperServiceImpl", "superclass": "", "interfaces": "implements RelationalTableRegistrationHelperService", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(RelationalTableRegistrationHelperServiceImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(RelationalTableRegistrationHelperServiceImpl.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Autowired\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@Autowired\n    private BusinessObjectDataDao businessObjectDataDao;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataDao", "declarator": "businessObjectDataDao", "var_name": "businessObjectDataDao"}, {"original_string": "@Autowired\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Autowired\n    private BusinessObjectDataStatusDaoHelper businessObjectDataStatusDaoHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataStatusDaoHelper", "declarator": "businessObjectDataStatusDaoHelper", "var_name": "businessObjectDataStatusDaoHelper"}, {"original_string": "@Autowired\n    private BusinessObjectDefinitionDao businessObjectDefinitionDao;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDefinitionDao", "declarator": "businessObjectDefinitionDao", "var_name": "businessObjectDefinitionDao"}, {"original_string": "@Autowired\n    private BusinessObjectDefinitionDaoHelper businessObjectDefinitionDaoHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDefinitionDaoHelper", "declarator": "businessObjectDefinitionDaoHelper", "var_name": "businessObjectDefinitionDaoHelper"}, {"original_string": "@Autowired\n    private BusinessObjectFormatDao businessObjectFormatDao;", "modifier": "@Autowired\n    private", "type": "BusinessObjectFormatDao", "declarator": "businessObjectFormatDao", "var_name": "businessObjectFormatDao"}, {"original_string": "@Autowired\n    private BusinessObjectFormatDaoHelper businessObjectFormatDaoHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectFormatDaoHelper", "declarator": "businessObjectFormatDaoHelper", "var_name": "businessObjectFormatDaoHelper"}, {"original_string": "@Autowired\n    private BusinessObjectFormatHelper businessObjectFormatHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectFormatHelper", "declarator": "businessObjectFormatHelper", "var_name": "businessObjectFormatHelper"}, {"original_string": "@Autowired\n    private BusinessObjectFormatService businessObjectFormatService;", "modifier": "@Autowired\n    private", "type": "BusinessObjectFormatService", "declarator": "businessObjectFormatService", "var_name": "businessObjectFormatService"}, {"original_string": "@Autowired\n    private ConfigurationHelper configurationHelper;", "modifier": "@Autowired\n    private", "type": "ConfigurationHelper", "declarator": "configurationHelper", "var_name": "configurationHelper"}, {"original_string": "@Autowired\n    private CredStashHelper credStashHelper;", "modifier": "@Autowired\n    private", "type": "CredStashHelper", "declarator": "credStashHelper", "var_name": "credStashHelper"}, {"original_string": "@Autowired\n    private DataProviderDaoHelper dataProviderDaoHelper;", "modifier": "@Autowired\n    private", "type": "DataProviderDaoHelper", "declarator": "dataProviderDaoHelper", "var_name": "dataProviderDaoHelper"}, {"original_string": "@Autowired\n    private JsonHelper jsonHelper;", "modifier": "@Autowired\n    private", "type": "JsonHelper", "declarator": "jsonHelper", "var_name": "jsonHelper"}, {"original_string": "@Autowired\n    private MessageNotificationEventService messageNotificationEventService;", "modifier": "@Autowired\n    private", "type": "MessageNotificationEventService", "declarator": "messageNotificationEventService", "var_name": "messageNotificationEventService"}, {"original_string": "@Autowired\n    private NamespaceDaoHelper namespaceDaoHelper;", "modifier": "@Autowired\n    private", "type": "NamespaceDaoHelper", "declarator": "namespaceDaoHelper", "var_name": "namespaceDaoHelper"}, {"original_string": "@Autowired\n    private RelationalTableRegistrationHelper relationalTableRegistrationHelper;", "modifier": "@Autowired\n    private", "type": "RelationalTableRegistrationHelper", "declarator": "relationalTableRegistrationHelper", "var_name": "relationalTableRegistrationHelper"}, {"original_string": "@Autowired\n    private SearchIndexUpdateHelper searchIndexUpdateHelper;", "modifier": "@Autowired\n    private", "type": "SearchIndexUpdateHelper", "declarator": "searchIndexUpdateHelper", "var_name": "searchIndexUpdateHelper"}, {"original_string": "@Autowired\n    private StorageDaoHelper storageDaoHelper;", "modifier": "@Autowired\n    private", "type": "StorageDaoHelper", "declarator": "storageDaoHelper", "var_name": "storageDaoHelper"}, {"original_string": "@Autowired\n    private StorageHelper storageHelper;", "modifier": "@Autowired\n    private", "type": "StorageHelper", "declarator": "storageHelper", "var_name": "storageHelper"}, {"original_string": "@Autowired\n    private StorageUnitDaoHelper storageUnitDaoHelper;", "modifier": "@Autowired\n    private", "type": "StorageUnitDaoHelper", "declarator": "storageUnitDaoHelper", "var_name": "storageUnitDaoHelper"}, {"original_string": "@Autowired\n    private StorageUnitStatusDaoHelper storageUnitStatusDaoHelper;", "modifier": "@Autowired\n    private", "type": "StorageUnitStatusDaoHelper", "declarator": "storageUnitStatusDaoHelper", "var_name": "storageUnitStatusDaoHelper"}], "methods": [{"identifier": "prepareForRelationalTableRegistration", "parameters": "(\n        RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest, Boolean appendToExistingBusinessObjectDefinition)", "modifiers": "@Override @Transactional(propagation = Propagation.REQUIRES_NEW) public", "return": "RelationalStorageAttributesDto", "signature": "RelationalStorageAttributesDto prepareForRelationalTableRegistration(\n        RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest, Boolean appendToExistingBusinessObjectDefinition)", "full_signature": "@Override @Transactional(propagation = Propagation.REQUIRES_NEW) public RelationalStorageAttributesDto prepareForRelationalTableRegistration(\n        RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest, Boolean appendToExistingBusinessObjectDefinition)", "class_method_signature": "RelationalTableRegistrationHelperServiceImpl.prepareForRelationalTableRegistration(\n        RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest, Boolean appendToExistingBusinessObjectDefinition)", "testcase": false, "constructor": false}, {"identifier": "prepareForRelationalTableSchemaUpdate", "parameters": "(BusinessObjectDataStorageUnitKey storageUnitKey)", "modifiers": "@Override @Transactional(propagation = Propagation.REQUIRES_NEW) public", "return": "RelationalTableRegistrationDto", "signature": "RelationalTableRegistrationDto prepareForRelationalTableSchemaUpdate(BusinessObjectDataStorageUnitKey storageUnitKey)", "full_signature": "@Override @Transactional(propagation = Propagation.REQUIRES_NEW) public RelationalTableRegistrationDto prepareForRelationalTableSchemaUpdate(BusinessObjectDataStorageUnitKey storageUnitKey)", "class_method_signature": "RelationalTableRegistrationHelperServiceImpl.prepareForRelationalTableSchemaUpdate(BusinessObjectDataStorageUnitKey storageUnitKey)", "testcase": false, "constructor": false}, {"identifier": "registerRelationalTable", "parameters": "(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest,\n        List<SchemaColumn> schemaColumns, Boolean appendToExistingBusinessObjectDefinition)", "modifiers": "@PublishNotificationMessages @Override @Transactional(propagation = Propagation.REQUIRES_NEW) public", "return": "BusinessObjectData", "signature": "BusinessObjectData registerRelationalTable(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest,\n        List<SchemaColumn> schemaColumns, Boolean appendToExistingBusinessObjectDefinition)", "full_signature": "@PublishNotificationMessages @Override @Transactional(propagation = Propagation.REQUIRES_NEW) public BusinessObjectData registerRelationalTable(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest,\n        List<SchemaColumn> schemaColumns, Boolean appendToExistingBusinessObjectDefinition)", "class_method_signature": "RelationalTableRegistrationHelperServiceImpl.registerRelationalTable(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest,\n        List<SchemaColumn> schemaColumns, Boolean appendToExistingBusinessObjectDefinition)", "testcase": false, "constructor": false}, {"identifier": "retrieveRelationalTableColumns", "parameters": "(RelationalStorageAttributesDto relationalStorageAttributesDto, String relationalSchemaName,\n        String relationalTableName)", "modifiers": "@Override @Transactional(propagation = Propagation.NOT_SUPPORTED) public", "return": "List<SchemaColumn>", "signature": "List<SchemaColumn> retrieveRelationalTableColumns(RelationalStorageAttributesDto relationalStorageAttributesDto, String relationalSchemaName,\n        String relationalTableName)", "full_signature": "@Override @Transactional(propagation = Propagation.NOT_SUPPORTED) public List<SchemaColumn> retrieveRelationalTableColumns(RelationalStorageAttributesDto relationalStorageAttributesDto, String relationalSchemaName,\n        String relationalTableName)", "class_method_signature": "RelationalTableRegistrationHelperServiceImpl.retrieveRelationalTableColumns(RelationalStorageAttributesDto relationalStorageAttributesDto, String relationalSchemaName,\n        String relationalTableName)", "testcase": false, "constructor": false}, {"identifier": "updateRelationalTableSchema", "parameters": "(RelationalTableRegistrationDto relationalTableRegistrationDto, List<SchemaColumn> schemaColumns)", "modifiers": "@PublishNotificationMessages @Override @Transactional(propagation = Propagation.REQUIRES_NEW) public", "return": "BusinessObjectData", "signature": "BusinessObjectData updateRelationalTableSchema(RelationalTableRegistrationDto relationalTableRegistrationDto, List<SchemaColumn> schemaColumns)", "full_signature": "@PublishNotificationMessages @Override @Transactional(propagation = Propagation.REQUIRES_NEW) public BusinessObjectData updateRelationalTableSchema(RelationalTableRegistrationDto relationalTableRegistrationDto, List<SchemaColumn> schemaColumns)", "class_method_signature": "RelationalTableRegistrationHelperServiceImpl.updateRelationalTableSchema(RelationalTableRegistrationDto relationalTableRegistrationDto, List<SchemaColumn> schemaColumns)", "testcase": false, "constructor": false}, {"identifier": "validateAndTrimRelationalTableRegistrationCreateRequest", "parameters": "(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest)", "modifiers": "@Override @Transactional(propagation = Propagation.NOT_SUPPORTED) public", "return": "void", "signature": "void validateAndTrimRelationalTableRegistrationCreateRequest(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest)", "full_signature": "@Override @Transactional(propagation = Propagation.NOT_SUPPORTED) public void validateAndTrimRelationalTableRegistrationCreateRequest(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest)", "class_method_signature": "RelationalTableRegistrationHelperServiceImpl.validateAndTrimRelationalTableRegistrationCreateRequest(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest)", "testcase": false, "constructor": false}, {"identifier": "getPassword", "parameters": "(RelationalStorageAttributesDto relationalStorageAttributesDto)", "modifiers": "", "return": "String", "signature": "String getPassword(RelationalStorageAttributesDto relationalStorageAttributesDto)", "full_signature": " String getPassword(RelationalStorageAttributesDto relationalStorageAttributesDto)", "class_method_signature": "RelationalTableRegistrationHelperServiceImpl.getPassword(RelationalStorageAttributesDto relationalStorageAttributesDto)", "testcase": false, "constructor": false}, {"identifier": "prepareForRelationalTableRegistrationImpl", "parameters": "(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest,\n        Boolean appendToExistingBusinessObjectDefinition)", "modifiers": "", "return": "RelationalStorageAttributesDto", "signature": "RelationalStorageAttributesDto prepareForRelationalTableRegistrationImpl(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest,\n        Boolean appendToExistingBusinessObjectDefinition)", "full_signature": " RelationalStorageAttributesDto prepareForRelationalTableRegistrationImpl(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest,\n        Boolean appendToExistingBusinessObjectDefinition)", "class_method_signature": "RelationalTableRegistrationHelperServiceImpl.prepareForRelationalTableRegistrationImpl(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest,\n        Boolean appendToExistingBusinessObjectDefinition)", "testcase": false, "constructor": false}, {"identifier": "prepareForRelationalTableSchemaUpdateImpl", "parameters": "(BusinessObjectDataStorageUnitKey storageUnitKey)", "modifiers": "", "return": "RelationalTableRegistrationDto", "signature": "RelationalTableRegistrationDto prepareForRelationalTableSchemaUpdateImpl(BusinessObjectDataStorageUnitKey storageUnitKey)", "full_signature": " RelationalTableRegistrationDto prepareForRelationalTableSchemaUpdateImpl(BusinessObjectDataStorageUnitKey storageUnitKey)", "class_method_signature": "RelationalTableRegistrationHelperServiceImpl.prepareForRelationalTableSchemaUpdateImpl(BusinessObjectDataStorageUnitKey storageUnitKey)", "testcase": false, "constructor": false}, {"identifier": "registerRelationalTableImpl", "parameters": "(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest,\n        List<SchemaColumn> schemaColumns, Boolean appendToExistingBusinessObjectDefinition)", "modifiers": "", "return": "BusinessObjectData", "signature": "BusinessObjectData registerRelationalTableImpl(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest,\n        List<SchemaColumn> schemaColumns, Boolean appendToExistingBusinessObjectDefinition)", "full_signature": " BusinessObjectData registerRelationalTableImpl(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest,\n        List<SchemaColumn> schemaColumns, Boolean appendToExistingBusinessObjectDefinition)", "class_method_signature": "RelationalTableRegistrationHelperServiceImpl.registerRelationalTableImpl(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest,\n        List<SchemaColumn> schemaColumns, Boolean appendToExistingBusinessObjectDefinition)", "testcase": false, "constructor": false}, {"identifier": "retrieveRelationalTableColumnsImpl", "parameters": "(RelationalStorageAttributesDto relationalStorageAttributesDto, String relationalSchemaName,\n        String relationalTableName)", "modifiers": "", "return": "List<SchemaColumn>", "signature": "List<SchemaColumn> retrieveRelationalTableColumnsImpl(RelationalStorageAttributesDto relationalStorageAttributesDto, String relationalSchemaName,\n        String relationalTableName)", "full_signature": " List<SchemaColumn> retrieveRelationalTableColumnsImpl(RelationalStorageAttributesDto relationalStorageAttributesDto, String relationalSchemaName,\n        String relationalTableName)", "class_method_signature": "RelationalTableRegistrationHelperServiceImpl.retrieveRelationalTableColumnsImpl(RelationalStorageAttributesDto relationalStorageAttributesDto, String relationalSchemaName,\n        String relationalTableName)", "testcase": false, "constructor": false}, {"identifier": "updateRelationalTableSchemaImpl", "parameters": "(RelationalTableRegistrationDto relationalTableRegistrationDto, List<SchemaColumn> schemaColumns)", "modifiers": "", "return": "BusinessObjectData", "signature": "BusinessObjectData updateRelationalTableSchemaImpl(RelationalTableRegistrationDto relationalTableRegistrationDto, List<SchemaColumn> schemaColumns)", "full_signature": " BusinessObjectData updateRelationalTableSchemaImpl(RelationalTableRegistrationDto relationalTableRegistrationDto, List<SchemaColumn> schemaColumns)", "class_method_signature": "RelationalTableRegistrationHelperServiceImpl.updateRelationalTableSchemaImpl(RelationalTableRegistrationDto relationalTableRegistrationDto, List<SchemaColumn> schemaColumns)", "testcase": false, "constructor": false}, {"identifier": "validateAndTrimRelationalTableRegistrationCreateRequestImpl", "parameters": "(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest)", "modifiers": "", "return": "void", "signature": "void validateAndTrimRelationalTableRegistrationCreateRequestImpl(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest)", "full_signature": " void validateAndTrimRelationalTableRegistrationCreateRequestImpl(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest)", "class_method_signature": "RelationalTableRegistrationHelperServiceImpl.validateAndTrimRelationalTableRegistrationCreateRequestImpl(RelationalTableRegistrationCreateRequest relationalTableRegistrationCreateRequest)", "testcase": false, "constructor": false}, {"identifier": "getRelationalStorageAttributes", "parameters": "(StorageEntity storageEntity)", "modifiers": "private", "return": "RelationalStorageAttributesDto", "signature": "RelationalStorageAttributesDto getRelationalStorageAttributes(StorageEntity storageEntity)", "full_signature": "private RelationalStorageAttributesDto getRelationalStorageAttributes(StorageEntity storageEntity)", "class_method_signature": "RelationalTableRegistrationHelperServiceImpl.getRelationalStorageAttributes(StorageEntity storageEntity)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/impl/RelationalTableRegistrationHelperServiceImpl.java"}, "focal_method": {"identifier": "getPassword", "parameters": "(RelationalStorageAttributesDto relationalStorageAttributesDto)", "modifiers": "", "return": "String", "body": "String getPassword(RelationalStorageAttributesDto relationalStorageAttributesDto)\n    {\n        // Default password value to null.\n        String password = null;\n\n        // Check if we need to get a password value from the credstash.\n        if (StringUtils.isNotBlank(relationalStorageAttributesDto.getJdbcUserCredentialName()))\n        {\n            final String credStashEncryptionContext = configurationHelper.getProperty(ConfigurationValue.CREDSTASH_RELATIONAL_STORAGE_ENCRYPTION_CONTEXT);\n\n            try\n            {\n                password = credStashHelper.getCredentialFromCredStash(credStashEncryptionContext, relationalStorageAttributesDto.getJdbcUserCredentialName());\n            }\n            catch (CredStashGetCredentialFailedException e)\n            {\n                throw new IllegalStateException(e);\n            }\n        }\n\n        return password;\n    }", "signature": "String getPassword(RelationalStorageAttributesDto relationalStorageAttributesDto)", "full_signature": " String getPassword(RelationalStorageAttributesDto relationalStorageAttributesDto)", "class_method_signature": "RelationalTableRegistrationHelperServiceImpl.getPassword(RelationalStorageAttributesDto relationalStorageAttributesDto)", "testcase": false, "constructor": false, "invocations": ["isNotBlank", "getJdbcUserCredentialName", "getProperty", "getCredentialFromCredStash", "getJdbcUserCredentialName"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}