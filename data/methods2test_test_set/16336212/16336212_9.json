{"test_class": {"identifier": "ReflectionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "agent/plugin-api/src/test/java/org/glowroot/agent/plugin/api/util/ReflectionTest.java"}, "test_case": {"identifier": "shouldReturnNullMethodWhenMethodNotFound", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnNullMethodWhenMethodNotFound() {\n        assertThat(Reflection.getMethod(String.class, \"thereWillNeverBeMethodWithThisName\"))\n                .isNull();\n    }", "signature": "void shouldReturnNullMethodWhenMethodNotFound()", "full_signature": "@Test public void shouldReturnNullMethodWhenMethodNotFound()", "class_method_signature": "ReflectionTest.shouldReturnNullMethodWhenMethodNotFound()", "testcase": true, "constructor": false, "invocations": ["isNull", "assertThat", "getMethod"]}, "focal_class": {"identifier": "Reflection", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(Reflection.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(Reflection.class)", "var_name": "logger"}], "methods": [{"identifier": "Reflection", "parameters": "()", "modifiers": "private", "return": "", "signature": " Reflection()", "full_signature": "private  Reflection()", "class_method_signature": "Reflection.Reflection()", "testcase": false, "constructor": true}, {"identifier": "getClass", "parameters": "(String name, @Nullable ClassLoader loader)", "modifiers": "public static @Nullable", "return": "Class<?>", "signature": "Class<?> getClass(String name, @Nullable ClassLoader loader)", "full_signature": "public static @Nullable Class<?> getClass(String name, @Nullable ClassLoader loader)", "class_method_signature": "Reflection.getClass(String name, @Nullable ClassLoader loader)", "testcase": false, "constructor": false}, {"identifier": "getClassWithWarnIfNotFound", "parameters": "(String name,\n            @Nullable ClassLoader loader)", "modifiers": "public static @Nullable", "return": "Class<?>", "signature": "Class<?> getClassWithWarnIfNotFound(String name,\n            @Nullable ClassLoader loader)", "full_signature": "public static @Nullable Class<?> getClassWithWarnIfNotFound(String name,\n            @Nullable ClassLoader loader)", "class_method_signature": "Reflection.getClassWithWarnIfNotFound(String name,\n            @Nullable ClassLoader loader)", "testcase": false, "constructor": false}, {"identifier": "getMethod", "parameters": "(@Nullable Class<?> clazz, String methodName,\n            Class<?>... parameterTypes)", "modifiers": "public static @Nullable", "return": "Method", "signature": "Method getMethod(@Nullable Class<?> clazz, String methodName,\n            Class<?>... parameterTypes)", "full_signature": "public static @Nullable Method getMethod(@Nullable Class<?> clazz, String methodName,\n            Class<?>... parameterTypes)", "class_method_signature": "Reflection.getMethod(@Nullable Class<?> clazz, String methodName,\n            Class<?>... parameterTypes)", "testcase": false, "constructor": false}, {"identifier": "getDeclaredField", "parameters": "(@Nullable Class<?> clazz, String fieldName)", "modifiers": "public static @Nullable", "return": "Field", "signature": "Field getDeclaredField(@Nullable Class<?> clazz, String fieldName)", "full_signature": "public static @Nullable Field getDeclaredField(@Nullable Class<?> clazz, String fieldName)", "class_method_signature": "Reflection.getDeclaredField(@Nullable Class<?> clazz, String fieldName)", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(@Nullable Method method, Object obj,\n            @Nullable Object... args)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "T", "signature": "T invoke(@Nullable Method method, Object obj,\n            @Nullable Object... args)", "full_signature": "@SuppressWarnings(\"unchecked\") public static T invoke(@Nullable Method method, Object obj,\n            @Nullable Object... args)", "class_method_signature": "Reflection.invoke(@Nullable Method method, Object obj,\n            @Nullable Object... args)", "testcase": false, "constructor": false}, {"identifier": "invokeWithDefault", "parameters": "(@Nullable Method method, Object obj, T defaultValue,\n            @Nullable Object... args)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "T", "signature": "T invokeWithDefault(@Nullable Method method, Object obj, T defaultValue,\n            @Nullable Object... args)", "full_signature": "@SuppressWarnings(\"unchecked\") public static T invokeWithDefault(@Nullable Method method, Object obj, T defaultValue,\n            @Nullable Object... args)", "class_method_signature": "Reflection.invokeWithDefault(@Nullable Method method, Object obj, T defaultValue,\n            @Nullable Object... args)", "testcase": false, "constructor": false}, {"identifier": "getFieldValue", "parameters": "(@Nullable Field field, Object obj)", "modifiers": "public static @Nullable", "return": "Object", "signature": "Object getFieldValue(@Nullable Field field, Object obj)", "full_signature": "public static @Nullable Object getFieldValue(@Nullable Field field, Object obj)", "class_method_signature": "Reflection.getFieldValue(@Nullable Field field, Object obj)", "testcase": false, "constructor": false}, {"identifier": "getClass", "parameters": "(String name, @Nullable ClassLoader loader,\n            boolean warnIfNotFound)", "modifiers": "private static @Nullable", "return": "Class<?>", "signature": "Class<?> getClass(String name, @Nullable ClassLoader loader,\n            boolean warnIfNotFound)", "full_signature": "private static @Nullable Class<?> getClass(String name, @Nullable ClassLoader loader,\n            boolean warnIfNotFound)", "class_method_signature": "Reflection.getClass(String name, @Nullable ClassLoader loader,\n            boolean warnIfNotFound)", "testcase": false, "constructor": false}], "file": "agent/plugin-api/src/main/java/org/glowroot/agent/plugin/api/util/Reflection.java"}, "focal_method": {"identifier": "getMethod", "parameters": "(@Nullable Class<?> clazz, String methodName,\n            Class<?>... parameterTypes)", "modifiers": "public static @Nullable", "return": "Method", "body": "public static @Nullable Method getMethod(@Nullable Class<?> clazz, String methodName,\n            Class<?>... parameterTypes) {\n        if (clazz == null) {\n            return null;\n        }\n        try {\n            return clazz.getMethod(methodName, parameterTypes);\n        } catch (NoSuchMethodException e) {\n            logger.debug(e.getMessage(), e);\n            return null;\n        } catch (Throwable t) {\n            logger.warn(t.getMessage(), t);\n            return null;\n        }\n    }", "signature": "Method getMethod(@Nullable Class<?> clazz, String methodName,\n            Class<?>... parameterTypes)", "full_signature": "public static @Nullable Method getMethod(@Nullable Class<?> clazz, String methodName,\n            Class<?>... parameterTypes)", "class_method_signature": "Reflection.getMethod(@Nullable Class<?> clazz, String methodName,\n            Class<?>... parameterTypes)", "testcase": false, "constructor": false, "invocations": ["getMethod", "debug", "getMessage", "warn", "getMessage"]}, "repository": {"repo_id": 16336212, "url": "https://github.com/glowroot/glowroot", "stars": 736, "created": "1/29/2014 5:25:58 AM +00:00", "updates": "2020-01-24T11:13:42+00:00", "fork": "False", "license": "licensed"}}