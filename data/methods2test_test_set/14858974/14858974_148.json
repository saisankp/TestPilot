{"test_class": {"identifier": "LicenseResourceTest", "superclass": "extends ResourceTest", "interfaces": "", "fields": [{"original_string": "private RepositoryHandler repositoryHandler;", "modifier": "private", "type": "RepositoryHandler", "declarator": "repositoryHandler", "var_name": "repositoryHandler"}], "file": "server/src/test/java/org/axway/grapes/server/webapp/resources/LicenseResourceTest.java"}, "test_case": {"identifier": "getDocumentation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getDocumentation(){\t\t\n\t\tWebResource resource = client().resource(\"/\" + ServerAPI.LICENSE_RESOURCE);\n\t\tClientResponse response = resource.type(MediaType.TEXT_HTML).get(ClientResponse.class);\n        \n\t\tassertNotNull(response);\n\t\tassertEquals(HttpStatus.OK_200, response.getStatus());\n\t}", "signature": "void getDocumentation()", "full_signature": "@Test public void getDocumentation()", "class_method_signature": "LicenseResourceTest.getDocumentation()", "testcase": true, "constructor": false, "invocations": ["resource", "client", "get", "type", "assertNotNull", "assertEquals", "getStatus"]}, "focal_class": {"identifier": "LicenseResource", "superclass": "extends AbstractResource", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(LicenseResource.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(LicenseResource.class)", "var_name": "LOG"}, {"original_string": "private CacheUtils cacheUtils = new CacheUtils();", "modifier": "private", "type": "CacheUtils", "declarator": "cacheUtils = new CacheUtils()", "var_name": "cacheUtils"}], "methods": [{"identifier": "LicenseResource", "parameters": "(final RepositoryHandler repoHandler, final GrapesServerConfig dmConfig)", "modifiers": "public", "return": "", "signature": " LicenseResource(final RepositoryHandler repoHandler, final GrapesServerConfig dmConfig)", "full_signature": "public  LicenseResource(final RepositoryHandler repoHandler, final GrapesServerConfig dmConfig)", "class_method_signature": "LicenseResource.LicenseResource(final RepositoryHandler repoHandler, final GrapesServerConfig dmConfig)", "testcase": false, "constructor": true}, {"identifier": "postLicense", "parameters": "(@Auth final DbCredential credential, final License license)", "modifiers": "@POST public", "return": "Response", "signature": "Response postLicense(@Auth final DbCredential credential, final License license)", "full_signature": "@POST public Response postLicense(@Auth final DbCredential credential, final License license)", "class_method_signature": "LicenseResource.postLicense(@Auth final DbCredential credential, final License license)", "testcase": false, "constructor": false}, {"identifier": "getNames", "parameters": "(@Context final UriInfo uriInfo)", "modifiers": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(ServerAPI.GET_NAMES) public", "return": "Response", "signature": "Response getNames(@Context final UriInfo uriInfo)", "full_signature": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(ServerAPI.GET_NAMES) public Response getNames(@Context final UriInfo uriInfo)", "class_method_signature": "LicenseResource.getNames(@Context final UriInfo uriInfo)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(@PathParam(\"name\") final String name)", "modifiers": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{name}\") public", "return": "Response", "signature": "Response get(@PathParam(\"name\") final String name)", "full_signature": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{name}\") public Response get(@PathParam(\"name\") final String name)", "class_method_signature": "LicenseResource.get(@PathParam(\"name\") final String name)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@Auth final DbCredential credential, @PathParam(\"name\") final String name)", "modifiers": "@DELETE @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{name}\") public", "return": "Response", "signature": "Response delete(@Auth final DbCredential credential, @PathParam(\"name\") final String name)", "full_signature": "@DELETE @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{name}\") public Response delete(@Auth final DbCredential credential, @PathParam(\"name\") final String name)", "class_method_signature": "LicenseResource.delete(@Auth final DbCredential credential, @PathParam(\"name\") final String name)", "testcase": false, "constructor": false}, {"identifier": "approve", "parameters": "(@Auth final DbCredential credential, @PathParam(\"name\") final String name, @QueryParam(ServerAPI.APPROVED_PARAM) final BooleanParam approved)", "modifiers": "@POST @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{name}\") public", "return": "Response", "signature": "Response approve(@Auth final DbCredential credential, @PathParam(\"name\") final String name, @QueryParam(ServerAPI.APPROVED_PARAM) final BooleanParam approved)", "full_signature": "@POST @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{name}\") public Response approve(@Auth final DbCredential credential, @PathParam(\"name\") final String name, @QueryParam(ServerAPI.APPROVED_PARAM) final BooleanParam approved)", "class_method_signature": "LicenseResource.approve(@Auth final DbCredential credential, @PathParam(\"name\") final String name, @QueryParam(ServerAPI.APPROVED_PARAM) final BooleanParam approved)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/axway/grapes/server/webapp/resources/LicenseResource.java"}, "focal_method": {"identifier": "get", "parameters": "(@PathParam(\"name\") final String name)", "modifiers": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{name}\") public", "return": "Response", "body": "@GET\n    @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON})\n    @Path(\"/{name}\")\n    public Response get(@PathParam(\"name\") final String name){\n        LOG.info(\"Got a get license request.\");\n        final LicenseView view = new LicenseView();\n\n        final DbLicense dbLicense = getLicenseHandler().getLicense(name);\n        final License license = getModelMapper().getLicense(dbLicense);\n        view.setLicense(license);\n\n        return Response.ok(view).build();\n    }", "signature": "Response get(@PathParam(\"name\") final String name)", "full_signature": "@GET @Produces({MediaType.TEXT_HTML, MediaType.APPLICATION_JSON}) @Path(\"/{name}\") public Response get(@PathParam(\"name\") final String name)", "class_method_signature": "LicenseResource.get(@PathParam(\"name\") final String name)", "testcase": false, "constructor": false, "invocations": ["info", "getLicense", "getLicenseHandler", "getLicense", "getModelMapper", "setLicense", "build", "ok"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}