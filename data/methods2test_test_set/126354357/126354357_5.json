{"test_class": {"identifier": "DeliveryNotificationSenderManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DeliveryNotificationSenderManager deliveryNotificationSenderManager;", "modifier": "private", "type": "DeliveryNotificationSenderManager", "declarator": "deliveryNotificationSenderManager", "var_name": "deliveryNotificationSenderManager"}, {"original_string": "private DeliveryNotificationSenderFactory deliveryNotificationSenderFactory;", "modifier": "private", "type": "DeliveryNotificationSenderFactory", "declarator": "deliveryNotificationSenderFactory", "var_name": "deliveryNotificationSenderFactory"}, {"original_string": "@Mock\n    private DeliveryKakaoNotificationSender deliveryKakaoNotificationSender;", "modifier": "@Mock\n    private", "type": "DeliveryKakaoNotificationSender", "declarator": "deliveryKakaoNotificationSender", "var_name": "deliveryKakaoNotificationSender"}, {"original_string": "@Mock\n    private DeliverySmsNotificationSender deliverySmsNotificationSender;", "modifier": "@Mock\n    private", "type": "DeliverySmsNotificationSender", "declarator": "deliverySmsNotificationSender", "var_name": "deliverySmsNotificationSender"}, {"original_string": "@Mock\n    private DeliveryEmailNotificationSender deliveryEmailNotificationSender;", "modifier": "@Mock\n    private", "type": "DeliveryEmailNotificationSender", "declarator": "deliveryEmailNotificationSender", "var_name": "deliveryEmailNotificationSender"}, {"original_string": "private Delivery delivery;", "modifier": "private", "type": "Delivery", "declarator": "delivery", "var_name": "delivery"}], "file": "notification/src/test/java/com/cheese/notification/notificaion/delivery/DeliveryNotificationSenderManagerTest.java"}, "test_case": {"identifier": "sendMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void sendMessage() {\n\n        //given\n\n        //when\n        deliveryNotificationSenderManager.sendMessage(delivery);\n\n        //then\n        verify(deliveryKakaoNotificationSender, atLeastOnce()).send(any(DeliveryMessageDto.Message.class));\n        verify(deliverySmsNotificationSender, atLeastOnce()).send(any(DeliveryMessageDto.Message.class));\n\n\n\n\n    }", "signature": "void sendMessage()", "full_signature": "@Test public void sendMessage()", "class_method_signature": "DeliveryNotificationSenderManagerTest.sendMessage()", "testcase": true, "constructor": false, "invocations": ["sendMessage", "send", "verify", "atLeastOnce", "any", "send", "verify", "atLeastOnce", "any"]}, "focal_class": {"identifier": "DeliveryNotificationSenderManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final DeliveryNotificationSenderFactory deliveryNotificationSenderFactory;", "modifier": "private final", "type": "DeliveryNotificationSenderFactory", "declarator": "deliveryNotificationSenderFactory", "var_name": "deliveryNotificationSenderFactory"}], "methods": [{"identifier": "DeliveryNotificationSenderManager", "parameters": "(DeliveryNotificationSenderFactory deliveryNotificationSenderFactory)", "modifiers": "@Autowired public", "return": "", "signature": " DeliveryNotificationSenderManager(DeliveryNotificationSenderFactory deliveryNotificationSenderFactory)", "full_signature": "@Autowired public  DeliveryNotificationSenderManager(DeliveryNotificationSenderFactory deliveryNotificationSenderFactory)", "class_method_signature": "DeliveryNotificationSenderManager.DeliveryNotificationSenderManager(DeliveryNotificationSenderFactory deliveryNotificationSenderFactory)", "testcase": false, "constructor": true}, {"identifier": "sendMessage", "parameters": "(Delivery delivery)", "modifiers": "public", "return": "void", "signature": "void sendMessage(Delivery delivery)", "full_signature": "public void sendMessage(Delivery delivery)", "class_method_signature": "DeliveryNotificationSenderManager.sendMessage(Delivery delivery)", "testcase": false, "constructor": false}, {"identifier": "buildMessage", "parameters": "(Delivery delivery)", "modifiers": "private", "return": "DeliveryMessageDto.Message", "signature": "DeliveryMessageDto.Message buildMessage(Delivery delivery)", "full_signature": "private DeliveryMessageDto.Message buildMessage(Delivery delivery)", "class_method_signature": "DeliveryNotificationSenderManager.buildMessage(Delivery delivery)", "testcase": false, "constructor": false}, {"identifier": "getInstanceByType", "parameters": "(DeliveryNotificationType type)", "modifiers": "private", "return": "DeliveryNotificationSender", "signature": "DeliveryNotificationSender getInstanceByType(DeliveryNotificationType type)", "full_signature": "private DeliveryNotificationSender getInstanceByType(DeliveryNotificationType type)", "class_method_signature": "DeliveryNotificationSenderManager.getInstanceByType(DeliveryNotificationType type)", "testcase": false, "constructor": false}], "file": "notification/src/main/java/com/cheese/notification/notificaion/delivery/DeliveryNotificationSenderManager.java"}, "focal_method": {"identifier": "sendMessage", "parameters": "(Delivery delivery)", "modifiers": "public", "return": "void", "body": "public void sendMessage(Delivery delivery) {\n        final List<DeliveryNotificationType> notifications = delivery.getDeliveryNotificationTypes();\n\n        if (!notifications.isEmpty())\n            for (DeliveryNotificationType type : notifications)\n                getInstanceByType(type).send(buildMessage(delivery));\n    }", "signature": "void sendMessage(Delivery delivery)", "full_signature": "public void sendMessage(Delivery delivery)", "class_method_signature": "DeliveryNotificationSenderManager.sendMessage(Delivery delivery)", "testcase": false, "constructor": false, "invocations": ["getDeliveryNotificationTypes", "isEmpty", "send", "getInstanceByType", "buildMessage"]}, "repository": {"repo_id": 126354357, "url": "https://github.com/cheese10yun/blog-sample", "stars": 111, "created": "3/22/2018 3:16:21 PM +00:00", "updates": "2020-01-27T11:54:09+00:00", "fork": "False", "license": "licensed"}}