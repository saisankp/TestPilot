{"test_class": {"identifier": "DownloadCompleteNotificationTest", "superclass": "extends BaseNotificationTest", "interfaces": "", "fields": [], "file": "library/src/test/java/io/ona/kujaku/notifications/DownloadCompleteNotificationTest.java"}, "test_case": {"identifier": "displayNotificationShouldShowValidNotificationWhenGivenTitleAndContent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void displayNotificationShouldShowValidNotificationWhenGivenTitleAndContent() {\n        DownloadCompleteNotification downloadCompleteNotification = new DownloadCompleteNotification(context);\n\n        String title = \"This is a sample title\";\n        String content = \"content text\";\n        int notificationId = 209234;\n\n        downloadCompleteNotification.displayNotification(title, content, notificationId);\n\n        ShadowNotificationManager shadowNotificationManager = Shadows.shadowOf((NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE));\n        Notification actualNotification = shadowNotificationManager.getNotification(notificationId);\n        ShadowNotification shadowNotification = Shadows.shadowOf(actualNotification);\n\n        assertNotNull(actualNotification);\n        assertEquals(title, shadowNotification.getContentTitle());\n        assertEquals(content, shadowNotification.getContentText());\n    }", "signature": "void displayNotificationShouldShowValidNotificationWhenGivenTitleAndContent()", "full_signature": "@Test public void displayNotificationShouldShowValidNotificationWhenGivenTitleAndContent()", "class_method_signature": "DownloadCompleteNotificationTest.displayNotificationShouldShowValidNotificationWhenGivenTitleAndContent()", "testcase": true, "constructor": false, "invocations": ["displayNotification", "shadowOf", "getSystemService", "getNotification", "shadowOf", "assertNotNull", "assertEquals", "getContentTitle", "assertEquals", "getContentText"]}, "focal_class": {"identifier": "DownloadCompleteNotification", "superclass": "extends KujakuNotification", "interfaces": "", "fields": [{"original_string": "public static final String CHANNEL_ID = \"KUJAKU_DOWNLOAD_COMPLETE_CHANNEL\";", "modifier": "public static final", "type": "String", "declarator": "CHANNEL_ID = \"KUJAKU_DOWNLOAD_COMPLETE_CHANNEL\"", "var_name": "CHANNEL_ID"}, {"original_string": "public static final int NOTIFICATION_COLOR = Color.BLUE;", "modifier": "public static final", "type": "int", "declarator": "NOTIFICATION_COLOR = Color.BLUE", "var_name": "NOTIFICATION_COLOR"}, {"original_string": "public static final long[] VIBRATION_PATTERN = new long[]{200, 600, 300, 600};", "modifier": "public static final", "type": "long[]", "declarator": "VIBRATION_PATTERN = new long[]{200, 600, 300, 600}", "var_name": "VIBRATION_PATTERN"}], "methods": [{"identifier": "DownloadCompleteNotification", "parameters": "(Context context)", "modifiers": "public", "return": "", "signature": " DownloadCompleteNotification(Context context)", "full_signature": "public  DownloadCompleteNotification(Context context)", "class_method_signature": "DownloadCompleteNotification.DownloadCompleteNotification(Context context)", "testcase": false, "constructor": true}, {"identifier": "displayNotification", "parameters": "(String title, String content, int notificationId)", "modifiers": "public", "return": "void", "signature": "void displayNotification(String title, String content, int notificationId)", "full_signature": "public void displayNotification(String title, String content, int notificationId)", "class_method_signature": "DownloadCompleteNotification.displayNotification(String title, String content, int notificationId)", "testcase": false, "constructor": false}], "file": "library/src/main/java/io/ona/kujaku/notifications/DownloadCompleteNotification.java"}, "focal_method": {"identifier": "displayNotification", "parameters": "(String title, String content, int notificationId)", "modifiers": "public", "return": "void", "body": "public void displayNotification(String title, String content, int notificationId) {\n        NotificationCompat.Builder notificationBuilder = createNotification(title, content);\n        displayNotification(notificationBuilder, notificationId);\n    }", "signature": "void displayNotification(String title, String content, int notificationId)", "full_signature": "public void displayNotification(String title, String content, int notificationId)", "class_method_signature": "DownloadCompleteNotification.displayNotification(String title, String content, int notificationId)", "testcase": false, "constructor": false, "invocations": ["createNotification", "displayNotification"]}, "repository": {"repo_id": 109667968, "url": "https://github.com/onaio/kujaku", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 4778, "license": "licensed"}}