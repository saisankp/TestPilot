{"test_class": {"identifier": "SortedTableLogReporterTest", "superclass": "extends MetricsReporterTestHelper", "interfaces": "", "fields": [{"original_string": "private static final TimeUnit DURATION_UNIT = TimeUnit.MICROSECONDS;", "modifier": "private static final", "type": "TimeUnit", "declarator": "DURATION_UNIT = TimeUnit.MICROSECONDS", "var_name": "DURATION_UNIT"}, {"original_string": "private static final double DURATION_FACTOR = 1.0 / DURATION_UNIT.toNanos(1);", "modifier": "private static final", "type": "double", "declarator": "DURATION_FACTOR = 1.0 / DURATION_UNIT.toNanos(1)", "var_name": "DURATION_FACTOR"}, {"original_string": "private Logger logger;", "modifier": "private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "private SortedTableLogReporter reporter;", "modifier": "private", "type": "SortedTableLogReporter", "declarator": "reporter", "var_name": "reporter"}], "file": "stagemonitor-core/src/test/java/org/stagemonitor/core/metrics/SortedTableLogReporterTest.java"}, "test_case": {"identifier": "reportsTimerValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void reportsTimerValues() throws Exception {\n\n\t\treporter.reportMetrics(map(),\n\t\t\t\tmap(),\n\t\t\t\tmap(),\n\t\t\t\tmap(),\n\t\t\t\tmap(name(\"timer1\").build(), timer(400)).add(name(\"timer2\").build(), timer(200)).add(name(\"timer3\").build(), timer(300)));\n\n\t\tverify(logger).info(\"Metrics ========================================================================\\n\" +\n\t\t\t\t\"\\n\" +\n\t\t\t\t\"-- Timers ----------------------------------------------------------------------\\n\" +\n\t\t\t\t\"name   | count     | mean      | min       | max       | stddev    | p50       | p75       | p95       | p98       | p99       | p999      | mean_rate | m1_rate   | m5_rate   | m15_rate  | rate_unit     | duration_unit\\n\" +\n\t\t\t\t\"timer1 |         1 |      0.40 |      0.40 |      0.20 |      0.50 |      0.60 |      0.70 |      0.80 |      0.90 |      1.00 |      1.10 |      2.00 |      3.00 |      4.00 |      5.00 | second        | microseconds\\n\" +\n\t\t\t\t\"timer3 |         1 |      0.30 |      0.40 |      0.20 |      0.50 |      0.60 |      0.70 |      0.80 |      0.90 |      1.00 |      1.10 |      2.00 |      3.00 |      4.00 |      5.00 | second        | microseconds\\n\" +\n\t\t\t\t\"timer2 |         1 |      0.20 |      0.40 |      0.20 |      0.50 |      0.60 |      0.70 |      0.80 |      0.90 |      1.00 |      1.10 |      2.00 |      3.00 |      4.00 |      5.00 | second        | microseconds\\n\" +\n\t\t\t\t\"\\n\" +\n\t\t\t\t\"\\n\");\n\t}", "signature": "void reportsTimerValues()", "full_signature": "@Test public void reportsTimerValues()", "class_method_signature": "SortedTableLogReporterTest.reportsTimerValues()", "testcase": true, "constructor": false, "invocations": ["reportMetrics", "map", "map", "map", "map", "add", "add", "map", "build", "name", "timer", "build", "name", "timer", "build", "name", "timer", "info", "verify"]}, "focal_class": {"identifier": "SortedTableLogReporter", "superclass": "extends ScheduledMetrics2Reporter", "interfaces": "", "fields": [{"original_string": "private static final int CONSOLE_WIDTH = 80;", "modifier": "private static final", "type": "int", "declarator": "CONSOLE_WIDTH = 80", "var_name": "CONSOLE_WIDTH"}, {"original_string": "private static final MetricName reportingTimeMetricName = name(\"reporting_time\").tag(\"reporter\", \"log\").build();", "modifier": "private static final", "type": "MetricName", "declarator": "reportingTimeMetricName = name(\"reporting_time\").tag(\"reporter\", \"log\").build()", "var_name": "reportingTimeMetricName"}, {"original_string": "private final Locale locale;", "modifier": "private final", "type": "Locale", "declarator": "locale", "var_name": "locale"}, {"original_string": "private final Logger log;", "modifier": "private final", "type": "Logger", "declarator": "log", "var_name": "log"}], "methods": [{"identifier": "forRegistry", "parameters": "(Metric2Registry registry)", "modifiers": "public static", "return": "Builder", "signature": "Builder forRegistry(Metric2Registry registry)", "full_signature": "public static Builder forRegistry(Metric2Registry registry)", "class_method_signature": "SortedTableLogReporter.forRegistry(Metric2Registry registry)", "testcase": false, "constructor": false}, {"identifier": "SortedTableLogReporter", "parameters": "(Builder builder)", "modifiers": "private", "return": "", "signature": " SortedTableLogReporter(Builder builder)", "full_signature": "private  SortedTableLogReporter(Builder builder)", "class_method_signature": "SortedTableLogReporter.SortedTableLogReporter(Builder builder)", "testcase": false, "constructor": true}, {"identifier": "reportMetrics", "parameters": "(Map<MetricName, Gauge> gauges,\n\t\t\t\t\t\t\t  Map<MetricName, Counter> counters,\n\t\t\t\t\t\t\t  Map<MetricName, Histogram> histograms,\n\t\t\t\t\t\t\t  Map<MetricName, Meter> meters,\n\t\t\t\t\t\t\t  Map<MetricName, Timer> timers)", "modifiers": "@Override public", "return": "void", "signature": "void reportMetrics(Map<MetricName, Gauge> gauges,\n\t\t\t\t\t\t\t  Map<MetricName, Counter> counters,\n\t\t\t\t\t\t\t  Map<MetricName, Histogram> histograms,\n\t\t\t\t\t\t\t  Map<MetricName, Meter> meters,\n\t\t\t\t\t\t\t  Map<MetricName, Timer> timers)", "full_signature": "@Override public void reportMetrics(Map<MetricName, Gauge> gauges,\n\t\t\t\t\t\t\t  Map<MetricName, Counter> counters,\n\t\t\t\t\t\t\t  Map<MetricName, Histogram> histograms,\n\t\t\t\t\t\t\t  Map<MetricName, Meter> meters,\n\t\t\t\t\t\t\t  Map<MetricName, Timer> timers)", "class_method_signature": "SortedTableLogReporter.reportMetrics(Map<MetricName, Gauge> gauges,\n\t\t\t\t\t\t\t  Map<MetricName, Counter> counters,\n\t\t\t\t\t\t\t  Map<MetricName, Histogram> histograms,\n\t\t\t\t\t\t\t  Map<MetricName, Meter> meters,\n\t\t\t\t\t\t\t  Map<MetricName, Timer> timers)", "testcase": false, "constructor": false}, {"identifier": "logGauges", "parameters": "(Map<MetricName, Gauge> gauges, StringBuilder sb)", "modifiers": "private", "return": "void", "signature": "void logGauges(Map<MetricName, Gauge> gauges, StringBuilder sb)", "full_signature": "private void logGauges(Map<MetricName, Gauge> gauges, StringBuilder sb)", "class_method_signature": "SortedTableLogReporter.logGauges(Map<MetricName, Gauge> gauges, StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "logCounters", "parameters": "(Map<MetricName, Counter> counters, StringBuilder sb)", "modifiers": "private", "return": "void", "signature": "void logCounters(Map<MetricName, Counter> counters, StringBuilder sb)", "full_signature": "private void logCounters(Map<MetricName, Counter> counters, StringBuilder sb)", "class_method_signature": "SortedTableLogReporter.logCounters(Map<MetricName, Counter> counters, StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "logHistograms", "parameters": "(Map<MetricName, Histogram> histograms, StringBuilder sb)", "modifiers": "private", "return": "void", "signature": "void logHistograms(Map<MetricName, Histogram> histograms, StringBuilder sb)", "full_signature": "private void logHistograms(Map<MetricName, Histogram> histograms, StringBuilder sb)", "class_method_signature": "SortedTableLogReporter.logHistograms(Map<MetricName, Histogram> histograms, StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "logMeters", "parameters": "(Map<MetricName, Meter> meters, StringBuilder sb)", "modifiers": "private", "return": "void", "signature": "void logMeters(Map<MetricName, Meter> meters, StringBuilder sb)", "full_signature": "private void logMeters(Map<MetricName, Meter> meters, StringBuilder sb)", "class_method_signature": "SortedTableLogReporter.logMeters(Map<MetricName, Meter> meters, StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "logTimers", "parameters": "(Map<MetricName, Timer> timers, StringBuilder sb)", "modifiers": "private", "return": "void", "signature": "void logTimers(Map<MetricName, Timer> timers, StringBuilder sb)", "full_signature": "private void logTimers(Map<MetricName, Timer> timers, StringBuilder sb)", "class_method_signature": "SortedTableLogReporter.logTimers(Map<MetricName, Timer> timers, StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "sortByValue", "parameters": "(Map<K, V> map, final Comparator<V> valueComparator)", "modifiers": "private static", "return": "Map<K, V>", "signature": "Map<K, V> sortByValue(Map<K, V> map, final Comparator<V> valueComparator)", "full_signature": "private static Map<K, V> sortByValue(Map<K, V> map, final Comparator<V> valueComparator)", "class_method_signature": "SortedTableLogReporter.sortByValue(Map<K, V> map, final Comparator<V> valueComparator)", "testcase": false, "constructor": false}, {"identifier": "getMaxLengthOfKeys", "parameters": "(Map<MetricName, ?> map)", "modifiers": "private static", "return": "int", "signature": "int getMaxLengthOfKeys(Map<MetricName, ?> map)", "full_signature": "private static int getMaxLengthOfKeys(Map<MetricName, ?> map)", "class_method_signature": "SortedTableLogReporter.getMaxLengthOfKeys(Map<MetricName, ?> map)", "testcase": false, "constructor": false}, {"identifier": "printGauge", "parameters": "(String name, Gauge gauge, int maxNameLength, StringBuilder sb)", "modifiers": "private", "return": "void", "signature": "void printGauge(String name, Gauge gauge, int maxNameLength, StringBuilder sb)", "full_signature": "private void printGauge(String name, Gauge gauge, int maxNameLength, StringBuilder sb)", "class_method_signature": "SortedTableLogReporter.printGauge(String name, Gauge gauge, int maxNameLength, StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "printCounter", "parameters": "(String name, Counter counter, int maxNameLength, StringBuilder sb)", "modifiers": "private", "return": "void", "signature": "void printCounter(String name, Counter counter, int maxNameLength, StringBuilder sb)", "full_signature": "private void printCounter(String name, Counter counter, int maxNameLength, StringBuilder sb)", "class_method_signature": "SortedTableLogReporter.printCounter(String name, Counter counter, int maxNameLength, StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "printMeter", "parameters": "(String name, Meter meter, int maxNameLength, StringBuilder sb)", "modifiers": "private", "return": "void", "signature": "void printMeter(String name, Meter meter, int maxNameLength, StringBuilder sb)", "full_signature": "private void printMeter(String name, Meter meter, int maxNameLength, StringBuilder sb)", "class_method_signature": "SortedTableLogReporter.printMeter(String name, Meter meter, int maxNameLength, StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "printMetered", "parameters": "(Metered metered, StringBuilder sb)", "modifiers": "private", "return": "void", "signature": "void printMetered(Metered metered, StringBuilder sb)", "full_signature": "private void printMetered(Metered metered, StringBuilder sb)", "class_method_signature": "SortedTableLogReporter.printMetered(Metered metered, StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "printHistogram", "parameters": "(String name, Histogram histogram, int maxNameLength, StringBuilder sb)", "modifiers": "private", "return": "void", "signature": "void printHistogram(String name, Histogram histogram, int maxNameLength, StringBuilder sb)", "full_signature": "private void printHistogram(String name, Histogram histogram, int maxNameLength, StringBuilder sb)", "class_method_signature": "SortedTableLogReporter.printHistogram(String name, Histogram histogram, int maxNameLength, StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "printTimerSnapshot", "parameters": "(Snapshot snapshot, StringBuilder sb)", "modifiers": "private", "return": "void", "signature": "void printTimerSnapshot(Snapshot snapshot, StringBuilder sb)", "full_signature": "private void printTimerSnapshot(Snapshot snapshot, StringBuilder sb)", "class_method_signature": "SortedTableLogReporter.printTimerSnapshot(Snapshot snapshot, StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "printHistogramSnapshot", "parameters": "(Snapshot snapshot, StringBuilder sb)", "modifiers": "private", "return": "void", "signature": "void printHistogramSnapshot(Snapshot snapshot, StringBuilder sb)", "full_signature": "private void printHistogramSnapshot(Snapshot snapshot, StringBuilder sb)", "class_method_signature": "SortedTableLogReporter.printHistogramSnapshot(Snapshot snapshot, StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "printTimer", "parameters": "(String name, Timer timer, int maxNameLength, StringBuilder sb)", "modifiers": "private", "return": "void", "signature": "void printTimer(String name, Timer timer, int maxNameLength, StringBuilder sb)", "full_signature": "private void printTimer(String name, Timer timer, int maxNameLength, StringBuilder sb)", "class_method_signature": "SortedTableLogReporter.printTimer(String name, Timer timer, int maxNameLength, StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "formatCount", "parameters": "(long count)", "modifiers": "private", "return": "String", "signature": "String formatCount(long count)", "full_signature": "private String formatCount(long count)", "class_method_signature": "SortedTableLogReporter.formatCount(long count)", "testcase": false, "constructor": false}, {"identifier": "printDouble", "parameters": "(double d, StringBuilder sb)", "modifiers": "public", "return": "void", "signature": "void printDouble(double d, StringBuilder sb)", "full_signature": "public void printDouble(double d, StringBuilder sb)", "class_method_signature": "SortedTableLogReporter.printDouble(double d, StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "printWithBanner", "parameters": "(String s, char c, StringBuilder sb)", "modifiers": "private", "return": "void", "signature": "void printWithBanner(String s, char c, StringBuilder sb)", "full_signature": "private void printWithBanner(String s, char c, StringBuilder sb)", "class_method_signature": "SortedTableLogReporter.printWithBanner(String s, char c, StringBuilder sb)", "testcase": false, "constructor": false}], "file": "stagemonitor-core/src/main/java/org/stagemonitor/core/metrics/SortedTableLogReporter.java"}, "focal_method": {"identifier": "reportMetrics", "parameters": "(Map<MetricName, Gauge> gauges,\n\t\t\t\t\t\t\t  Map<MetricName, Counter> counters,\n\t\t\t\t\t\t\t  Map<MetricName, Histogram> histograms,\n\t\t\t\t\t\t\t  Map<MetricName, Meter> meters,\n\t\t\t\t\t\t\t  Map<MetricName, Timer> timers)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void reportMetrics(Map<MetricName, Gauge> gauges,\n\t\t\t\t\t\t\t  Map<MetricName, Counter> counters,\n\t\t\t\t\t\t\t  Map<MetricName, Histogram> histograms,\n\t\t\t\t\t\t\t  Map<MetricName, Meter> meters,\n\t\t\t\t\t\t\t  Map<MetricName, Timer> timers) {\n\n\t\tfinal Timer.Context time = Stagemonitor.getMetric2Registry().timer(reportingTimeMetricName).time();\n\n\t\tStringBuilder sb = new StringBuilder(1000);\n\t\tprintWithBanner(\"Metrics\", '=', sb);\n\t\tsb.append('\\n');\n\n\t\ttry {\n\t\t\tlogGauges(gauges, sb);\n\t\t\tlogCounters(counters, sb);\n\t\t\tlogHistograms(histograms, sb);\n\t\t\tlogMeters(meters, sb);\n\t\t\tlogTimers(timers, sb);\n\t\t\tsb.append('\\n');\n\t\t} catch (Exception e) {\n\t\t\tlog.error(e.getMessage(), e);\n\t\t} finally {\n\t\t\tlog.info(sb.toString());\n\t\t\ttime.stop();\n\t\t}\n\t}", "signature": "void reportMetrics(Map<MetricName, Gauge> gauges,\n\t\t\t\t\t\t\t  Map<MetricName, Counter> counters,\n\t\t\t\t\t\t\t  Map<MetricName, Histogram> histograms,\n\t\t\t\t\t\t\t  Map<MetricName, Meter> meters,\n\t\t\t\t\t\t\t  Map<MetricName, Timer> timers)", "full_signature": "@Override public void reportMetrics(Map<MetricName, Gauge> gauges,\n\t\t\t\t\t\t\t  Map<MetricName, Counter> counters,\n\t\t\t\t\t\t\t  Map<MetricName, Histogram> histograms,\n\t\t\t\t\t\t\t  Map<MetricName, Meter> meters,\n\t\t\t\t\t\t\t  Map<MetricName, Timer> timers)", "class_method_signature": "SortedTableLogReporter.reportMetrics(Map<MetricName, Gauge> gauges,\n\t\t\t\t\t\t\t  Map<MetricName, Counter> counters,\n\t\t\t\t\t\t\t  Map<MetricName, Histogram> histograms,\n\t\t\t\t\t\t\t  Map<MetricName, Meter> meters,\n\t\t\t\t\t\t\t  Map<MetricName, Timer> timers)", "testcase": false, "constructor": false, "invocations": ["time", "timer", "getMetric2Registry", "printWithBanner", "append", "logGauges", "logCounters", "logHistograms", "logMeters", "logTimers", "append", "error", "getMessage", "info", "toString", "stop"]}, "repository": {"repo_id": 11845993, "url": "https://github.com/stagemonitor/stagemonitor", "language": "Java", "is_fork": false, "fork_count": 268, "stargazer_count": 1585, "size": 10342, "license": "licensed"}}