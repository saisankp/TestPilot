{"test_class": {"identifier": "GenericMultipleClassLoaderSofaSerializerFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "codec/codec-sofa-hessian/src/test/java/com/alipay/sofa/rpc/codec/sofahessian/GenericMultipleClassLoaderSofaSerializerFactoryTest.java"}, "test_case": {"identifier": "getSerializer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getSerializer() throws Exception {\n        GenericMultipleClassLoaderSofaSerializerFactory factory = new GenericMultipleClassLoaderSofaSerializerFactory();\n        Assert.assertEquals(factory.getSerializer(GenericObject.class).getClass(), GenericObjectSerializer.class);\n        Assert.assertEquals(factory.getSerializer(GenericArray.class).getClass(), GenericArraySerializer.class);\n        Assert.assertEquals(factory.getSerializer(GenericCollection.class).getClass(),\n            GenericCollectionSerializer.class);\n        Assert.assertEquals(factory.getSerializer(GenericMap.class).getClass(), GenericMapSerializer.class);\n        Assert.assertEquals(factory.getSerializer(GenericClass.class).getClass(), GenericClassSerializer.class);\n    }", "signature": "void getSerializer()", "full_signature": "@Test public void getSerializer()", "class_method_signature": "GenericMultipleClassLoaderSofaSerializerFactoryTest.getSerializer()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getClass", "getSerializer", "assertEquals", "getClass", "getSerializer", "assertEquals", "getClass", "getSerializer", "assertEquals", "getClass", "getSerializer", "assertEquals", "getClass", "getSerializer"]}, "focal_class": {"identifier": "GenericMultipleClassLoaderSofaSerializerFactory", "superclass": "extends MultipleClassLoaderSofaSerializerFactory", "interfaces": "", "fields": [{"original_string": "private static final char                                ARRAY_PREFIX     = '[';", "modifier": "private static final", "type": "char", "declarator": "ARRAY_PREFIX     = '['", "var_name": "ARRAY_PREFIX"}, {"original_string": "private static final ConcurrentMap<String, Deserializer> DESERIALIZER_MAP = new ConcurrentHashMap<String, Deserializer>();", "modifier": "private static final", "type": "ConcurrentMap<String, Deserializer>", "declarator": "DESERIALIZER_MAP = new ConcurrentHashMap<String, Deserializer>()", "var_name": "DESERIALIZER_MAP"}], "methods": [{"identifier": "getSerializer", "parameters": "(Class cl)", "modifiers": "@Override public", "return": "Serializer", "signature": "Serializer getSerializer(Class cl)", "full_signature": "@Override public Serializer getSerializer(Class cl)", "class_method_signature": "GenericMultipleClassLoaderSofaSerializerFactory.getSerializer(Class cl)", "testcase": false, "constructor": false}, {"identifier": "getDeserializer", "parameters": "(String type)", "modifiers": "@Override public", "return": "Deserializer", "signature": "Deserializer getDeserializer(String type)", "full_signature": "@Override public Deserializer getDeserializer(String type)", "class_method_signature": "GenericMultipleClassLoaderSofaSerializerFactory.getDeserializer(String type)", "testcase": false, "constructor": false}], "file": "codec/codec-sofa-hessian/src/main/java/com/alipay/sofa/rpc/codec/sofahessian/GenericMultipleClassLoaderSofaSerializerFactory.java"}, "focal_method": {"identifier": "getSerializer", "parameters": "(Class cl)", "modifiers": "@Override public", "return": "Serializer", "body": "@Override\n    public Serializer getSerializer(Class cl) throws HessianProtocolException {\n\n        if (GenericObject.class == cl) {\n            return GenericObjectSerializer.getInstance();\n        }\n\n        if (GenericArray.class == cl) {\n            return GenericArraySerializer.getInstance();\n        }\n\n        if (GenericCollection.class == cl) {\n            return GenericCollectionSerializer.getInstance();\n        }\n\n        if (GenericMap.class == cl) {\n            return GenericMapSerializer.getInstance();\n        }\n\n        if (GenericClass.class == cl) {\n            return GenericClassSerializer.getInstance();\n        }\n\n        return super.getSerializer(cl);\n    }", "signature": "Serializer getSerializer(Class cl)", "full_signature": "@Override public Serializer getSerializer(Class cl)", "class_method_signature": "GenericMultipleClassLoaderSofaSerializerFactory.getSerializer(Class cl)", "testcase": false, "constructor": false, "invocations": ["getInstance", "getInstance", "getInstance", "getInstance", "getInstance", "getSerializer"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}