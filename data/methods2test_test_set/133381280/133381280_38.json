{"test_class": {"identifier": "LogObserverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static String str;", "modifier": "private static", "type": "String", "declarator": "str", "var_name": "str"}], "file": "client/lookout-core/src/test/java/com/alipay/lookout/report/LogObserverTest.java"}, "test_case": {"identifier": "testLogObserverEnable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLogObserverEnable() {\n        LogObserver logObserver = new LogObserver();\n        Assert.assertTrue(logObserver.isEnable());\n    }", "signature": "void testLogObserverEnable()", "full_signature": "@Test public void testLogObserverEnable()", "class_method_signature": "LogObserverTest.testLogObserverEnable()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isEnable"]}, "focal_class": {"identifier": "LogObserver", "superclass": "", "interfaces": "implements MetricObserver<LookoutMeasurement>", "fields": [{"original_string": "private Logger logger = LookoutLoggerFactory.getLogger(\"LOOKOUT-LOG-REPORTER\");", "modifier": "private", "type": "Logger", "declarator": "logger = LookoutLoggerFactory.getLogger(\"LOOKOUT-LOG-REPORTER\")", "var_name": "logger"}], "methods": [{"identifier": "LogObserver", "parameters": "()", "modifiers": "public", "return": "", "signature": " LogObserver()", "full_signature": "public  LogObserver()", "class_method_signature": "LogObserver.LogObserver()", "testcase": false, "constructor": true}, {"identifier": "LogObserver", "parameters": "(Logger logger)", "modifiers": "public", "return": "", "signature": " LogObserver(Logger logger)", "full_signature": "public  LogObserver(Logger logger)", "class_method_signature": "LogObserver.LogObserver(Logger logger)", "testcase": false, "constructor": true}, {"identifier": "isEnable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEnable()", "full_signature": "@Override public boolean isEnable()", "class_method_signature": "LogObserver.isEnable()", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(List<LookoutMeasurement> measures, Map<String, String> metadata)", "modifiers": "@Override public", "return": "void", "signature": "void update(List<LookoutMeasurement> measures, Map<String, String> metadata)", "full_signature": "@Override public void update(List<LookoutMeasurement> measures, Map<String, String> metadata)", "class_method_signature": "LogObserver.update(List<LookoutMeasurement> measures, Map<String, String> metadata)", "testcase": false, "constructor": false}], "file": "client/lookout-core/src/main/java/com/alipay/lookout/report/LogObserver.java"}, "focal_method": {"identifier": "isEnable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isEnable() {\n        return true;\n    }", "signature": "boolean isEnable()", "full_signature": "@Override public boolean isEnable()", "class_method_signature": "LogObserver.isEnable()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}