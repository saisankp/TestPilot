{"test_class": {"identifier": "PolicyCacheImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PolicyCacheImpl service;", "modifier": "private", "type": "PolicyCacheImpl", "declarator": "service", "var_name": "service"}, {"original_string": "@Mock\n    private CacheManager cacheManager;", "modifier": "@Mock\n    private", "type": "CacheManager", "declarator": "cacheManager", "var_name": "cacheManager"}, {"original_string": "@Mock\n    private Cache<String, Policy> cache;", "modifier": "@Mock\n    private", "type": "Cache<String, Policy>", "declarator": "cache", "var_name": "cache"}], "file": "com.mobi.security.policy.impl.core/src/test/java/com/mobi/security/policy/impl/core/cache/PolicyCacheImplTest.java"}, "test_case": {"identifier": "getPolicyCacheTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getPolicyCacheTest() {\n        Optional<Cache<String, Policy>> result = service.getPolicyCache();\n        assertTrue(result.isPresent());\n        assertEquals(cache, result.get());\n    }", "signature": "void getPolicyCacheTest()", "full_signature": "@Test public void getPolicyCacheTest()", "class_method_signature": "PolicyCacheImplTest.getPolicyCacheTest()", "testcase": true, "constructor": false, "invocations": ["getPolicyCache", "assertTrue", "isPresent", "assertEquals", "get"]}, "focal_class": {"identifier": "PolicyCacheImpl", "superclass": "", "interfaces": "implements PolicyCache", "fields": [{"original_string": "private final String CACHE_NAME = \"policyCache\";", "modifier": "private final", "type": "String", "declarator": "CACHE_NAME = \"policyCache\"", "var_name": "CACHE_NAME"}, {"original_string": "private CacheManager cacheManager;", "modifier": "private", "type": "CacheManager", "declarator": "cacheManager", "var_name": "cacheManager"}], "methods": [{"identifier": "setCacheManager", "parameters": "(CacheManager cacheManager)", "modifiers": "@Reference", "return": "void", "signature": "void setCacheManager(CacheManager cacheManager)", "full_signature": "@Reference void setCacheManager(CacheManager cacheManager)", "class_method_signature": "PolicyCacheImpl.setCacheManager(CacheManager cacheManager)", "testcase": false, "constructor": false}, {"identifier": "getPolicyCache", "parameters": "()", "modifiers": "@Override public", "return": "Optional<Cache<String, Policy>>", "signature": "Optional<Cache<String, Policy>> getPolicyCache()", "full_signature": "@Override public Optional<Cache<String, Policy>> getPolicyCache()", "class_method_signature": "PolicyCacheImpl.getPolicyCache()", "testcase": false, "constructor": false}], "file": "com.mobi.security.policy.impl.core/src/main/java/com/mobi/security/policy/impl/core/cache/PolicyCacheImpl.java"}, "focal_method": {"identifier": "getPolicyCache", "parameters": "()", "modifiers": "@Override public", "return": "Optional<Cache<String, Policy>>", "body": "@Override\n    public Optional<Cache<String, Policy>> getPolicyCache() {\n        return cacheManager.getCache(CACHE_NAME, String.class, Policy.class);\n    }", "signature": "Optional<Cache<String, Policy>> getPolicyCache()", "full_signature": "@Override public Optional<Cache<String, Policy>> getPolicyCache()", "class_method_signature": "PolicyCacheImpl.getPolicyCache()", "testcase": false, "constructor": false, "invocations": ["getCache"]}, "repository": {"repo_id": 62253355, "url": "https://github.com/inovexcorp/mobi", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 30, "size": 54070, "license": "licensed"}}