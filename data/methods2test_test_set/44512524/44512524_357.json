{"test_class": {"identifier": "ExpandTest", "superclass": "", "interfaces": "", "fields": [], "file": "storm/storm-benchmark/src/test/java/storm/benchmark/lib/operation/ExpandTest.java"}, "test_case": {"identifier": "testExpand", "parameters": "(Iterable iterable, int size)", "modifiers": "@Test (dataProvider = \"getIterable\") public", "return": "void", "body": "@Test (dataProvider = \"getIterable\")\n  public void testExpand(Iterable iterable, int size)  {\n    final TridentTuple tuple = mock(TridentTuple.class);\n    final TridentCollector collector = mock(TridentCollector.class);\n    when(tuple.getValue(0)).thenReturn(iterable);\n    Expand expand = new Expand();\n    expand.execute(tuple, collector);\n\n    verify(tuple, times(1)).getValue(0);\n    verify(collector, times(size)).emit(any(Values.class));\n  }", "signature": "void testExpand(Iterable iterable, int size)", "full_signature": "@Test (dataProvider = \"getIterable\") public void testExpand(Iterable iterable, int size)", "class_method_signature": "ExpandTest.testExpand(Iterable iterable, int size)", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getValue", "execute", "getValue", "verify", "times", "emit", "verify", "times", "any"]}, "focal_class": {"identifier": "Expand", "superclass": "extends BaseFunction", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = -8912233679276693760L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -8912233679276693760L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "execute", "parameters": "(TridentTuple tuple, TridentCollector collector)", "modifiers": "@Override public", "return": "void", "signature": "void execute(TridentTuple tuple, TridentCollector collector)", "full_signature": "@Override public void execute(TridentTuple tuple, TridentCollector collector)", "class_method_signature": "Expand.execute(TridentTuple tuple, TridentCollector collector)", "testcase": false, "constructor": false}], "file": "storm/storm-benchmark/src/main/java/storm/benchmark/lib/operation/Expand.java"}, "focal_method": {"identifier": "execute", "parameters": "(TridentTuple tuple, TridentCollector collector)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void execute(TridentTuple tuple, TridentCollector collector) {\n    Iterable iterable = (Iterable) tuple.getValue(0);\n    Iterator iterator = iterable.iterator();\n    while (iterator.hasNext()) {\n     collector.emit(new Values(iterator.next()));\n    }\n  }", "signature": "void execute(TridentTuple tuple, TridentCollector collector)", "full_signature": "@Override public void execute(TridentTuple tuple, TridentCollector collector)", "class_method_signature": "Expand.execute(TridentTuple tuple, TridentCollector collector)", "testcase": false, "constructor": false, "invocations": ["getValue", "iterator", "hasNext", "emit", "next"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}