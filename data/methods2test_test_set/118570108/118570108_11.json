{"test_class": {"identifier": "ResourceSpeakerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger log = Logger.getLogger(ResourceSpeakerTest.class.getName());", "modifier": "private final", "type": "Logger", "declarator": "log = Logger.getLogger(ResourceSpeakerTest.class.getName())", "var_name": "log"}, {"original_string": "@ArquillianResource\n    private URL url;", "modifier": "@ArquillianResource\n    private", "type": "URL", "declarator": "url", "var_name": "url"}], "file": "KubernetesJavaWorkshop/speaker-app/src/test/java/io/microprofile/showcase/speaker/rest/ResourceSpeakerTest.java"}, "test_case": {"identifier": "testUpdate", "parameters": "()", "modifiers": "@Test @RunAsClient public", "return": "void", "body": "@Test\n    @RunAsClient\n    public void testUpdate() {\n\n        final Speaker search = new Speaker();\n        search.setNameFirst(\"Charlie\");\n        search.setNameLast(\"Hunt\");\n\n        final Set<Speaker> speakers = this.getWebTarget(\"speaker/search\").request(MediaType.APPLICATION_JSON_TYPE)\n                .put(Entity.json(search))\n                .readEntity(new GenericType<Set<Speaker>>() {\n                });\n\n        final Speaker found = speakers.iterator().next();\n        final String id = found.getId();\n\n        Assert.assertEquals(\"Oracle\", found.getOrganization());\n\n        found.setOrganization(\"Oracle Corporation\");\n\n        this.getWebTarget(\"speaker/update\").request(MediaType.APPLICATION_JSON_TYPE)\n                .put(Entity.json(found));\n\n        final Speaker updated = this.getWebTarget(\"speaker/retrieve/{id}\").resolveTemplate(\"id\", id)\n                .request(MediaType.APPLICATION_JSON_TYPE)\n                .get()\n                .readEntity(Speaker.class);\n\n        Assert.assertEquals(\"Failed to update speaker\", \"Oracle Corporation\", updated.getOrganization());\n        this.log.info(\"Updated: \" + updated.toString());\n    }", "signature": "void testUpdate()", "full_signature": "@Test @RunAsClient public void testUpdate()", "class_method_signature": "ResourceSpeakerTest.testUpdate()", "testcase": true, "constructor": false, "invocations": ["setNameFirst", "setNameLast", "readEntity", "put", "request", "getWebTarget", "json", "next", "iterator", "getId", "assertEquals", "getOrganization", "setOrganization", "put", "request", "getWebTarget", "json", "readEntity", "get", "request", "resolveTemplate", "getWebTarget", "assertEquals", "getOrganization", "info", "toString"]}, "focal_class": {"identifier": "ResourceSpeaker", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Inject\n    private SpeakerDAO speakerDAO;", "modifier": "@Inject\n    private", "type": "SpeakerDAO", "declarator": "speakerDAO", "var_name": "speakerDAO"}, {"original_string": "@Context\n    private UriInfo uriInfo;", "modifier": "@Context\n    private", "type": "UriInfo", "declarator": "uriInfo", "var_name": "uriInfo"}], "methods": [{"identifier": "retrieveAll", "parameters": "()", "modifiers": "@GET public", "return": "Collection<Speaker>", "signature": "Collection<Speaker> retrieveAll()", "full_signature": "@GET public Collection<Speaker> retrieveAll()", "class_method_signature": "ResourceSpeaker.retrieveAll()", "testcase": false, "constructor": false}, {"identifier": "nessProbe", "parameters": "()", "modifiers": "@GET @Path(\"/nessProbe\") @Produces(MediaType.TEXT_PLAIN) public", "return": "Response", "signature": "Response nessProbe()", "full_signature": "@GET @Path(\"/nessProbe\") @Produces(MediaType.TEXT_PLAIN) public Response nessProbe()", "class_method_signature": "ResourceSpeaker.nessProbe()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final Speaker speaker)", "modifiers": "@POST @Path(\"/add\") public", "return": "Speaker", "signature": "Speaker add(final Speaker speaker)", "full_signature": "@POST @Path(\"/add\") public Speaker add(final Speaker speaker)", "class_method_signature": "ResourceSpeaker.add(final Speaker speaker)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(@PathParam(\"id\") final String id)", "modifiers": "@DELETE @Path(\"/remove/{id}\") public", "return": "void", "signature": "void remove(@PathParam(\"id\") final String id)", "full_signature": "@DELETE @Path(\"/remove/{id}\") public void remove(@PathParam(\"id\") final String id)", "class_method_signature": "ResourceSpeaker.remove(@PathParam(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(final Speaker speaker)", "modifiers": "@PUT @Path(\"/update\") public", "return": "Speaker", "signature": "Speaker update(final Speaker speaker)", "full_signature": "@PUT @Path(\"/update\") public Speaker update(final Speaker speaker)", "class_method_signature": "ResourceSpeaker.update(final Speaker speaker)", "testcase": false, "constructor": false}, {"identifier": "retrieve", "parameters": "(@PathParam(\"id\") final String id)", "modifiers": "@GET @Path(\"/retrieve/{id}\") public", "return": "Speaker", "signature": "Speaker retrieve(@PathParam(\"id\") final String id)", "full_signature": "@GET @Path(\"/retrieve/{id}\") public Speaker retrieve(@PathParam(\"id\") final String id)", "class_method_signature": "ResourceSpeaker.retrieve(@PathParam(\"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(final Speaker speaker)", "modifiers": "@PUT @Path(\"/search\") public", "return": "Set<Speaker>", "signature": "Set<Speaker> search(final Speaker speaker)", "full_signature": "@PUT @Path(\"/search\") public Set<Speaker> search(final Speaker speaker)", "class_method_signature": "ResourceSpeaker.search(final Speaker speaker)", "testcase": false, "constructor": false}, {"identifier": "addHyperMedia", "parameters": "(final Speaker s)", "modifiers": "private", "return": "Speaker", "signature": "Speaker addHyperMedia(final Speaker s)", "full_signature": "private Speaker addHyperMedia(final Speaker s)", "class_method_signature": "ResourceSpeaker.addHyperMedia(final Speaker s)", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "(final Speaker s, final String path)", "modifiers": "private", "return": "URI", "signature": "URI getUri(final Speaker s, final String path)", "full_signature": "private URI getUri(final Speaker s, final String path)", "class_method_signature": "ResourceSpeaker.getUri(final Speaker s, final String path)", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "(final String path)", "modifiers": "private", "return": "URI", "signature": "URI getUri(final String path)", "full_signature": "private URI getUri(final String path)", "class_method_signature": "ResourceSpeaker.getUri(final String path)", "testcase": false, "constructor": false}], "file": "KubernetesJavaWorkshop/speaker-app/src/main/java/io/microprofile/showcase/speaker/rest/ResourceSpeaker.java"}, "focal_method": {"identifier": "update", "parameters": "(final Speaker speaker)", "modifiers": "@PUT @Path(\"/update\") public", "return": "Speaker", "body": "@PUT\n    @Path(\"/update\")\n    public Speaker update(final Speaker speaker) {\n        return this.addHyperMedia(this.speakerDAO.update(speaker));\n    }", "signature": "Speaker update(final Speaker speaker)", "full_signature": "@PUT @Path(\"/update\") public Speaker update(final Speaker speaker)", "class_method_signature": "ResourceSpeaker.update(final Speaker speaker)", "testcase": false, "constructor": false, "invocations": ["addHyperMedia", "update"]}, "repository": {"repo_id": 118570108, "url": "https://github.com/IBMDevConnect/IBMCodeDay-2018", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 7, "size": 66791, "license": "licensed"}}