{"test_class": {"identifier": "TestSessionStorage", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String sessionId;", "modifier": "private", "type": "String", "declarator": "sessionId", "var_name": "sessionId"}, {"original_string": "private SessionStorage<String> storage;", "modifier": "private", "type": "SessionStorage<String>", "declarator": "storage", "var_name": "storage"}], "file": "org.jvoicexml/src/test/java/org/jvoicexml/documentserver/schemestrategy/TestSessionStorage.java"}, "test_case": {"identifier": "testReleaseSession", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReleaseSession() {\n        final String id1 = storage.getSessionIdentifier(sessionId);\n        Assert.assertNotNull(id1);\n        storage.releaseSession(sessionId);\n        final String id2 = storage.getSessionIdentifier(sessionId);\n        Assert.assertNotSame(id1, id2);\n    }", "signature": "void testReleaseSession()", "full_signature": "@Test public void testReleaseSession()", "class_method_signature": "TestSessionStorage.testReleaseSession()", "testcase": true, "constructor": false, "invocations": ["getSessionIdentifier", "assertNotNull", "releaseSession", "getSessionIdentifier", "assertNotSame"]}, "focal_class": {"identifier": "SessionStorage", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER =\n            LogManager.getLogger(SessionStorage.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER =\n            LogManager.getLogger(SessionStorage.class)", "var_name": "LOGGER"}, {"original_string": "private final Map<String, T> sessions;", "modifier": "private final", "type": "Map<String, T>", "declarator": "sessions", "var_name": "sessions"}, {"original_string": "private final SessionIdentifierFactory<T> factory;", "modifier": "private final", "type": "SessionIdentifierFactory<T>", "declarator": "factory", "var_name": "factory"}], "methods": [{"identifier": "SessionStorage", "parameters": "(final SessionIdentifierFactory<T> identifierFactory)", "modifiers": "public", "return": "", "signature": " SessionStorage(final SessionIdentifierFactory<T> identifierFactory)", "full_signature": "public  SessionStorage(final SessionIdentifierFactory<T> identifierFactory)", "class_method_signature": "SessionStorage.SessionStorage(final SessionIdentifierFactory<T> identifierFactory)", "testcase": false, "constructor": true}, {"identifier": "getSessionIdentifier", "parameters": "(final String sessionId)", "modifiers": "public synchronized", "return": "T", "signature": "T getSessionIdentifier(final String sessionId)", "full_signature": "public synchronized T getSessionIdentifier(final String sessionId)", "class_method_signature": "SessionStorage.getSessionIdentifier(final String sessionId)", "testcase": false, "constructor": false}, {"identifier": "releaseSession", "parameters": "(final String sessionId)", "modifiers": "public synchronized", "return": "void", "signature": "void releaseSession(final String sessionId)", "full_signature": "public synchronized void releaseSession(final String sessionId)", "class_method_signature": "SessionStorage.releaseSession(final String sessionId)", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/documentserver/schemestrategy/SessionStorage.java"}, "focal_method": {"identifier": "releaseSession", "parameters": "(final String sessionId)", "modifiers": "public synchronized", "return": "void", "body": "public synchronized void releaseSession(final String sessionId) {\n        sessions.remove(sessionId);\n    }", "signature": "void releaseSession(final String sessionId)", "full_signature": "public synchronized void releaseSession(final String sessionId)", "class_method_signature": "SessionStorage.releaseSession(final String sessionId)", "testcase": false, "constructor": false, "invocations": ["remove"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}