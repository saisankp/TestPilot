{"test_class": {"identifier": "SortParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "request-parameters/src/test/java/eu/neoteric/starter/request/sort/SortParserTest.java"}, "test_case": {"identifier": "testMultipleFieldsSortWithCustomOrder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMultipleFieldsSortWithCustomOrder() throws Exception {\n        Map<String, Object> rawSort = readFiltersFromResources(\"MultipleSortWithCustomOrderRequest.json\");\n\n        List<RequestSort> requestSorts = SortParser.parseSort(rawSort);\n        Assertions.assertThat(requestSorts)\n                .hasSize(2)\n                .containsSequence(RequestSort.of(\"last\", SortType.DESC), RequestSort.of(\"name\", SortType.ASC));\n    }", "signature": "void testMultipleFieldsSortWithCustomOrder()", "full_signature": "@Test public void testMultipleFieldsSortWithCustomOrder()", "class_method_signature": "SortParserTest.testMultipleFieldsSortWithCustomOrder()", "testcase": true, "constructor": false, "invocations": ["readFiltersFromResources", "parseSort", "containsSequence", "hasSize", "assertThat", "of", "of"]}, "focal_class": {"identifier": "SortParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(SortParser.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(SortParser.class)", "var_name": "LOG"}], "methods": [{"identifier": "SortParser", "parameters": "()", "modifiers": "private", "return": "", "signature": " SortParser()", "full_signature": "private  SortParser()", "class_method_signature": "SortParser.SortParser()", "testcase": false, "constructor": true}, {"identifier": "parseSort", "parameters": "(Map<String, Object> rawSort)", "modifiers": "public static", "return": "List<RequestSort>", "signature": "List<RequestSort> parseSort(Map<String, Object> rawSort)", "full_signature": "public static List<RequestSort> parseSort(Map<String, Object> rawSort)", "class_method_signature": "SortParser.parseSort(Map<String, Object> rawSort)", "testcase": false, "constructor": false}, {"identifier": "findSortFields", "parameters": "(Map<String, Object> rawSort)", "modifiers": "private static", "return": "List<RequestSort>", "signature": "List<RequestSort> findSortFields(Map<String, Object> rawSort)", "full_signature": "private static List<RequestSort> findSortFields(Map<String, Object> rawSort)", "class_method_signature": "SortParser.findSortFields(Map<String, Object> rawSort)", "testcase": false, "constructor": false}, {"identifier": "applyOrder", "parameters": "(List<RequestSort> unorderedSort, Map<String, Object> rawSort)", "modifiers": "private static", "return": "List<RequestSort>", "signature": "List<RequestSort> applyOrder(List<RequestSort> unorderedSort, Map<String, Object> rawSort)", "full_signature": "private static List<RequestSort> applyOrder(List<RequestSort> unorderedSort, Map<String, Object> rawSort)", "class_method_signature": "SortParser.applyOrder(List<RequestSort> unorderedSort, Map<String, Object> rawSort)", "testcase": false, "constructor": false}, {"identifier": "isField", "parameters": "(String key)", "modifiers": "private static", "return": "boolean", "signature": "boolean isField(String key)", "full_signature": "private static boolean isField(String key)", "class_method_signature": "SortParser.isField(String key)", "testcase": false, "constructor": false}, {"identifier": "isNotFieldNorSortOperator", "parameters": "(String key)", "modifiers": "private static", "return": "boolean", "signature": "boolean isNotFieldNorSortOperator(String key)", "full_signature": "private static boolean isNotFieldNorSortOperator(String key)", "class_method_signature": "SortParser.isNotFieldNorSortOperator(String key)", "testcase": false, "constructor": false}], "file": "request-parameters/src/main/java/eu/neoteric/starter/request/sort/SortParser.java"}, "focal_method": {"identifier": "parseSort", "parameters": "(Map<String, Object> rawSort)", "modifiers": "public static", "return": "List<RequestSort>", "body": "public static List<RequestSort> parseSort(Map<String, Object> rawSort) {\n        List<RequestSort> unorderedSort = findSortFields(rawSort);\n        List<RequestSort> orderedSort = applyOrder(unorderedSort, rawSort);\n\n        LOG.info(\"Parsed sorts: {}\", orderedSort);\n        return orderedSort;\n    }", "signature": "List<RequestSort> parseSort(Map<String, Object> rawSort)", "full_signature": "public static List<RequestSort> parseSort(Map<String, Object> rawSort)", "class_method_signature": "SortParser.parseSort(Map<String, Object> rawSort)", "testcase": false, "constructor": false, "invocations": ["findSortFields", "applyOrder", "info"]}, "repository": {"repo_id": 49945501, "url": "https://github.com/neoteric-eu/neo-starters", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 969, "license": "licensed"}}