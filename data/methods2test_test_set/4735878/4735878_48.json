{"test_class": {"identifier": "PointParametersTest", "superclass": "extends AnalyzerTest", "interfaces": "", "fields": [], "file": "legend/src/test/java/org/orbisgis/legend/thematic/PointParametersTest.java"}, "test_case": {"identifier": "testFromUniqueSymbolArea", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFromUniqueSymbolArea() throws Exception {\n        PointParameters ap = new PointParameters(Color.BLUE, .25, 42.0, \"2\", Color.CYAN, .46, 1.0, 4.0, \"SQUARE\");\n        PointParameters ap2 = new PointParameters(Color.BLUE, .25, 42.0, \"2\", Color.CYAN, .46, 1.0, 4.0, \"SQUARE\");\n        UniqueSymbolPoint usa = new UniqueSymbolPoint(ap);\n        assertTrue(ap2.equals(usa.getPointParameters()));\n    }", "signature": "void testFromUniqueSymbolArea()", "full_signature": "@Test public void testFromUniqueSymbolArea()", "class_method_signature": "PointParametersTest.testFromUniqueSymbolArea()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "getPointParameters"]}, "focal_class": {"identifier": "PointParameters", "superclass": "extends AreaParameters", "interfaces": "", "fields": [{"original_string": "private Double width;", "modifier": "private", "type": "Double", "declarator": "width", "var_name": "width"}, {"original_string": "private Double height;", "modifier": "private", "type": "Double", "declarator": "height", "var_name": "height"}, {"original_string": "private WellKnownName wkn;", "modifier": "private", "type": "WellKnownName", "declarator": "wkn", "var_name": "wkn"}], "methods": [{"identifier": "PointParameters", "parameters": "()", "modifiers": "public", "return": "", "signature": " PointParameters()", "full_signature": "public  PointParameters()", "class_method_signature": "PointParameters.PointParameters()", "testcase": false, "constructor": true}, {"identifier": "PointParameters", "parameters": "(Color lineCol,\n                          Double lineOp,\n                          Double lineWidth,\n                          String lineDash,\n                          Color fillCol,\n                          Double fillOp,\n                          Double symWidth,\n                          Double symHeight,\n                          String symWkn)", "modifiers": "public", "return": "", "signature": " PointParameters(Color lineCol,\n                          Double lineOp,\n                          Double lineWidth,\n                          String lineDash,\n                          Color fillCol,\n                          Double fillOp,\n                          Double symWidth,\n                          Double symHeight,\n                          String symWkn)", "full_signature": "public  PointParameters(Color lineCol,\n                          Double lineOp,\n                          Double lineWidth,\n                          String lineDash,\n                          Color fillCol,\n                          Double fillOp,\n                          Double symWidth,\n                          Double symHeight,\n                          String symWkn)", "class_method_signature": "PointParameters.PointParameters(Color lineCol,\n                          Double lineOp,\n                          Double lineWidth,\n                          String lineDash,\n                          Color fillCol,\n                          Double fillOp,\n                          Double symWidth,\n                          Double symHeight,\n                          String symWkn)", "testcase": false, "constructor": true}, {"identifier": "getWidth", "parameters": "()", "modifiers": "public", "return": "Double", "signature": "Double getWidth()", "full_signature": "public Double getWidth()", "class_method_signature": "PointParameters.getWidth()", "testcase": false, "constructor": false}, {"identifier": "getHeight", "parameters": "()", "modifiers": "public", "return": "Double", "signature": "Double getHeight()", "full_signature": "public Double getHeight()", "class_method_signature": "PointParameters.getHeight()", "testcase": false, "constructor": false}, {"identifier": "getWkn", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getWkn()", "full_signature": "public String getWkn()", "class_method_signature": "PointParameters.getWkn()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "PointParameters.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PointParameters.hashCode()", "testcase": false, "constructor": false}], "file": "legend/src/main/java/org/orbisgis/legend/thematic/PointParameters.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object o){\n        if(o instanceof PointParameters){\n            PointParameters other = (PointParameters) o;\n            boolean sup = super.equals(other);\n            return sup && this.wkn.equals(other.wkn) && this.height.equals(other.height) && this.width.equals(other.width);\n        } else {\n            return false;\n        }\n    }", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "PointParameters.equals(Object o)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "equals", "equals"]}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}