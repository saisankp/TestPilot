{"test_class": {"identifier": "UAServerWrapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private UAServerWrapper server;", "modifier": "private", "type": "UAServerWrapper", "declarator": "server", "var_name": "server"}, {"original_string": "private static final int PORT = 12686;", "modifier": "private static final", "type": "int", "declarator": "PORT = 12686", "var_name": "PORT"}], "file": "src/osip-opcua-server/src/test/java/edu/kit/pse/osip/core/opcua/server/UAServerWrapperTest.java"}, "test_case": {"identifier": "setVariable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setVariable() throws Exception {\n        server.start();\n        server.addFolder(\"testfolder\", \"My folder\");\n        server.addVariable(\"testfolder/testvar\", \"My variable\", Identifiers.Float);\n        server.setVariable(\"testfolder/testvar\", new DataValue(new Variant(10)));\n        server.stop();\n    }", "signature": "void setVariable()", "full_signature": "@Test public void setVariable()", "class_method_signature": "UAServerWrapperTest.setVariable()", "testcase": true, "constructor": false, "invocations": ["start", "addFolder", "addVariable", "setVariable", "stop"]}, "focal_class": {"identifier": "UAServerWrapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private UANamespaceWrapper namespace;", "modifier": "private", "type": "UANamespaceWrapper", "declarator": "namespace", "var_name": "namespace"}, {"original_string": "private final OpcUaServer server;", "modifier": "private final", "type": "OpcUaServer", "declarator": "server", "var_name": "server"}], "methods": [{"identifier": "UAServerWrapper", "parameters": "(String namespaceName, int port)", "modifiers": "public", "return": "", "signature": " UAServerWrapper(String namespaceName, int port)", "full_signature": "public  UAServerWrapper(String namespaceName, int port)", "class_method_signature": "UAServerWrapper.UAServerWrapper(String namespaceName, int port)", "testcase": false, "constructor": true}, {"identifier": "createServer", "parameters": "(String namespaceName, int port)", "modifiers": "private", "return": "OpcUaServer", "signature": "OpcUaServer createServer(String namespaceName, int port)", "full_signature": "private OpcUaServer createServer(String namespaceName, int port)", "class_method_signature": "UAServerWrapper.createServer(String namespaceName, int port)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "UAServerWrapper.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "UAServerWrapper.stop()", "testcase": false, "constructor": false}, {"identifier": "addFolder", "parameters": "(String path, String displayName)", "modifiers": "protected", "return": "void", "signature": "void addFolder(String path, String displayName)", "full_signature": "protected void addFolder(String path, String displayName)", "class_method_signature": "UAServerWrapper.addFolder(String path, String displayName)", "testcase": false, "constructor": false}, {"identifier": "addVariable", "parameters": "(String path, String displayName, NodeId type)", "modifiers": "protected", "return": "void", "signature": "void addVariable(String path, String displayName, NodeId type)", "full_signature": "protected void addVariable(String path, String displayName, NodeId type)", "class_method_signature": "UAServerWrapper.addVariable(String path, String displayName, NodeId type)", "testcase": false, "constructor": false}, {"identifier": "setVariable", "parameters": "(String path, DataValue value)", "modifiers": "protected", "return": "void", "signature": "void setVariable(String path, DataValue value)", "full_signature": "protected void setVariable(String path, DataValue value)", "class_method_signature": "UAServerWrapper.setVariable(String path, DataValue value)", "testcase": false, "constructor": false}, {"identifier": "releaseSharedResources", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void releaseSharedResources()", "full_signature": "public static void releaseSharedResources()", "class_method_signature": "UAServerWrapper.releaseSharedResources()", "testcase": false, "constructor": false}], "file": "src/osip-opcua-server/src/main/java/edu/kit/pse/osip/core/opcua/server/UAServerWrapper.java"}, "focal_method": {"identifier": "setVariable", "parameters": "(String path, DataValue value)", "modifiers": "protected", "return": "void", "body": "protected void setVariable(String path, DataValue value) {\n        namespace.updateValue(path, value);\n    }", "signature": "void setVariable(String path, DataValue value)", "full_signature": "protected void setVariable(String path, DataValue value)", "class_method_signature": "UAServerWrapper.setVariable(String path, DataValue value)", "testcase": false, "constructor": false, "invocations": ["updateValue"]}, "repository": {"repo_id": 74042107, "url": "https://github.com/ByteHamster/PSE", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 18396, "license": "licensed"}}