{"test_class": {"identifier": "PatientInfoTransformerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PatientInfoTransformer transformer;", "modifier": "private", "type": "PatientInfoTransformer", "declarator": "transformer", "var_name": "transformer"}], "file": "commons/ihe/xds/src/test/java/org/openehealth/ipf/commons/ihe/xds/core/transform/hl7/PatientInfoTransformerTest.java"}, "test_case": {"identifier": "testFromHL7", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFromHL7() {\n        List<String> hl7PID = Arrays.asList(\n            \"PID-3|abcdef\",\n            \"PID-3|fedcba\",\n            \"PID-5|Joman\",\n            \"PID-7|1234\",\n            \"PID-8|A\",\n            \"PID-9|Not used\",\n            \"PID-11|Jo Str. 3\");\n        \n        PatientInfo patientInfo = transformer.fromHL7(hl7PID);\n        assertNotNull(patientInfo);\n        assertEquals(2, patientInfo.getIds().size());\n        assertEquals(\"abcdef\", patientInfo.getIds().get(0).getId());\n        assertEquals(\"fedcba\", patientInfo.getIds().get(1).getId());\n        assertEquals(\"Joman\", patientInfo.getName().getFamilyName());\n        assertEquals(\"1234\", patientInfo.getDateOfBirth());\n        assertEquals(\"A\", patientInfo.getGender());\n        assertEquals(\"Jo Str. 3\", patientInfo.getAddress().getStreetAddress());\n    }", "signature": "void testFromHL7()", "full_signature": "@Test public void testFromHL7()", "class_method_signature": "PatientInfoTransformerTest.testFromHL7()", "testcase": true, "constructor": false, "invocations": ["asList", "fromHL7", "assertNotNull", "assertEquals", "size", "getIds", "assertEquals", "getId", "get", "getIds", "assertEquals", "getId", "get", "getIds", "assertEquals", "getFamilyName", "getName", "assertEquals", "getDateOfBirth", "assertEquals", "getGender", "assertEquals", "getStreetAddress", "getAddress"]}, "focal_class": {"identifier": "PatientInfoTransformer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PID_PREFIX = \"PID-\";", "modifier": "private static final", "type": "String", "declarator": "PID_PREFIX = \"PID-\"", "var_name": "PID_PREFIX"}, {"original_string": "private static final Map<Integer, PIDTransformer> pidTransformers;", "modifier": "private static final", "type": "Map<Integer, PIDTransformer>", "declarator": "pidTransformers", "var_name": "pidTransformers"}], "methods": [{"identifier": "fromHL7", "parameters": "(List<String> hl7PID)", "modifiers": "public", "return": "PatientInfo", "signature": "PatientInfo fromHL7(List<String> hl7PID)", "full_signature": "public PatientInfo fromHL7(List<String> hl7PID)", "class_method_signature": "PatientInfoTransformer.fromHL7(List<String> hl7PID)", "testcase": false, "constructor": false}, {"identifier": "toHL7", "parameters": "(PatientInfo patientInfo)", "modifiers": "public", "return": "List<String>", "signature": "List<String> toHL7(PatientInfo patientInfo)", "full_signature": "public List<String> toHL7(PatientInfo patientInfo)", "class_method_signature": "PatientInfoTransformer.toHL7(PatientInfo patientInfo)", "testcase": false, "constructor": false}, {"identifier": "getPidNumber", "parameters": "(String pidNoStr)", "modifiers": "private", "return": "Integer", "signature": "Integer getPidNumber(String pidNoStr)", "full_signature": "private Integer getPidNumber(String pidNoStr)", "class_method_signature": "PatientInfoTransformer.getPidNumber(String pidNoStr)", "testcase": false, "constructor": false}], "file": "commons/ihe/xds/src/main/java/org/openehealth/ipf/commons/ihe/xds/core/transform/hl7/PatientInfoTransformer.java"}, "focal_method": {"identifier": "fromHL7", "parameters": "(List<String> hl7PID)", "modifiers": "public", "return": "PatientInfo", "body": "public PatientInfo fromHL7(List<String> hl7PID) {\n        if (hl7PID == null || hl7PID.isEmpty()) {\n            return null;\n        }\n        \n        PatientInfo patientInfo = new PatientInfo();\n        \n        for (String hl7PIDLine : hl7PID) {\n            String[] fields = PipeParser.split(hl7PIDLine.trim(), \"|\");\n            if (fields.length == 2) {\n                Integer pidNo = getPidNumber(fields[0]);\n                PIDTransformer transformer = pidTransformers.get(pidNo);\n                if (transformer != null) {            \n                    transformer.fromHL7(fields[1], patientInfo);\n                }\n            }\n        }\n        \n        return patientInfo;\n    }", "signature": "PatientInfo fromHL7(List<String> hl7PID)", "full_signature": "public PatientInfo fromHL7(List<String> hl7PID)", "class_method_signature": "PatientInfoTransformer.fromHL7(List<String> hl7PID)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "split", "trim", "getPidNumber", "get", "fromHL7"]}, "repository": {"repo_id": 793164, "url": "https://github.com/krasserm/ipf", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 30233, "license": "licensed"}}