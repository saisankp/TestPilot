{"test_class": {"identifier": "TrackingPageIOTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int PAGE_SIZE = 4096;", "modifier": "public static final", "type": "int", "declarator": "PAGE_SIZE = 4096", "var_name": "PAGE_SIZE"}, {"original_string": "private final TrackingPageIO io = TrackingPageIO.VERSIONS.latest();", "modifier": "private final", "type": "TrackingPageIO", "declarator": "io = TrackingPageIO.VERSIONS.latest()", "var_name": "io"}], "file": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/tree/io/TrackingPageIOTest.java"}, "test_case": {"identifier": "testFindNextChangedPage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFindNextChangedPage() throws Exception {\n        ByteBuffer buf = createBuffer();\n\n        for (int i = 0; i < 101; i++)\n            checkFindingRandomly(buf, i);\n    }", "signature": "void testFindNextChangedPage()", "full_signature": "@Test public void testFindNextChangedPage()", "class_method_signature": "TrackingPageIOTest.testFindNextChangedPage()", "testcase": true, "constructor": false, "invocations": ["createBuffer", "checkFindingRandomly"]}, "focal_class": {"identifier": "TrackingPageIO", "superclass": "extends PageIO", "interfaces": "", "fields": [{"original_string": "public static final IOVersions<TrackingPageIO> VERSIONS = new IOVersions<>(\n        new TrackingPageIO(1)\n    );", "modifier": "public static final", "type": "IOVersions<TrackingPageIO>", "declarator": "VERSIONS = new IOVersions<>(\n        new TrackingPageIO(1)\n    )", "var_name": "VERSIONS"}, {"original_string": "public static final long CORRUPT_FLAG_MASK = 1L << 63;", "modifier": "public static final", "type": "long", "declarator": "CORRUPT_FLAG_MASK = 1L << 63", "var_name": "CORRUPT_FLAG_MASK"}, {"original_string": "public static final long CORRUPT_FLAG_FILTER_MASK = ~CORRUPT_FLAG_MASK;", "modifier": "public static final", "type": "long", "declarator": "CORRUPT_FLAG_FILTER_MASK = ~CORRUPT_FLAG_MASK", "var_name": "CORRUPT_FLAG_FILTER_MASK"}, {"original_string": "public static final int LAST_SNAPSHOT_TAG_OFFSET = COMMON_HEADER_END;", "modifier": "public static final", "type": "int", "declarator": "LAST_SNAPSHOT_TAG_OFFSET = COMMON_HEADER_END", "var_name": "LAST_SNAPSHOT_TAG_OFFSET"}, {"original_string": "public static final int SIZE_FIELD_OFFSET = LAST_SNAPSHOT_TAG_OFFSET + 8;", "modifier": "public static final", "type": "int", "declarator": "SIZE_FIELD_OFFSET = LAST_SNAPSHOT_TAG_OFFSET + 8", "var_name": "SIZE_FIELD_OFFSET"}, {"original_string": "public static final int SIZE_FIELD_SIZE = 2;", "modifier": "public static final", "type": "int", "declarator": "SIZE_FIELD_SIZE = 2", "var_name": "SIZE_FIELD_SIZE"}, {"original_string": "public static final int BITMAP_OFFSET = SIZE_FIELD_OFFSET + SIZE_FIELD_SIZE;", "modifier": "public static final", "type": "int", "declarator": "BITMAP_OFFSET = SIZE_FIELD_OFFSET + SIZE_FIELD_SIZE", "var_name": "BITMAP_OFFSET"}, {"original_string": "public static final int COUNT_OF_EXTRA_PAGE = 1;", "modifier": "public static final", "type": "int", "declarator": "COUNT_OF_EXTRA_PAGE = 1", "var_name": "COUNT_OF_EXTRA_PAGE"}], "methods": [{"identifier": "TrackingPageIO", "parameters": "(int ver)", "modifiers": "protected", "return": "", "signature": " TrackingPageIO(int ver)", "full_signature": "protected  TrackingPageIO(int ver)", "class_method_signature": "TrackingPageIO.TrackingPageIO(int ver)", "testcase": false, "constructor": true}, {"identifier": "markChanged", "parameters": "(ByteBuffer buf, long pageId, long nextSnapshotTag, long lastSuccessfulSnapshotTag, int pageSize)", "modifiers": "public", "return": "long", "signature": "long markChanged(ByteBuffer buf, long pageId, long nextSnapshotTag, long lastSuccessfulSnapshotTag, int pageSize)", "full_signature": "public long markChanged(ByteBuffer buf, long pageId, long nextSnapshotTag, long lastSuccessfulSnapshotTag, int pageSize)", "class_method_signature": "TrackingPageIO.markChanged(ByteBuffer buf, long pageId, long nextSnapshotTag, long lastSuccessfulSnapshotTag, int pageSize)", "testcase": false, "constructor": false}, {"identifier": "validateSnapshotTag", "parameters": "(ByteBuffer buf, long nextSnapshotTag, long lastSuccessfulSnapshotTag, int pageSize)", "modifiers": "private", "return": "long", "signature": "long validateSnapshotTag(ByteBuffer buf, long nextSnapshotTag, long lastSuccessfulSnapshotTag, int pageSize)", "full_signature": "private long validateSnapshotTag(ByteBuffer buf, long nextSnapshotTag, long lastSuccessfulSnapshotTag, int pageSize)", "class_method_signature": "TrackingPageIO.validateSnapshotTag(ByteBuffer buf, long nextSnapshotTag, long lastSuccessfulSnapshotTag, int pageSize)", "testcase": false, "constructor": false}, {"identifier": "setLastSnasphotTag", "parameters": "(ByteBuffer buf, long nextSnapshotTag)", "modifiers": "private", "return": "void", "signature": "void setLastSnasphotTag(ByteBuffer buf, long nextSnapshotTag)", "full_signature": "private void setLastSnasphotTag(ByteBuffer buf, long nextSnapshotTag)", "class_method_signature": "TrackingPageIO.setLastSnasphotTag(ByteBuffer buf, long nextSnapshotTag)", "testcase": false, "constructor": false}, {"identifier": "setLastSnasphotTag0", "parameters": "(ByteBuffer buf, long nextSnapshotTag)", "modifiers": "private", "return": "void", "signature": "void setLastSnasphotTag0(ByteBuffer buf, long nextSnapshotTag)", "full_signature": "private void setLastSnasphotTag0(ByteBuffer buf, long nextSnapshotTag)", "class_method_signature": "TrackingPageIO.setLastSnasphotTag0(ByteBuffer buf, long nextSnapshotTag)", "testcase": false, "constructor": false}, {"identifier": "setLastSnasphotTag0", "parameters": "(long addr, long nextSnapshotTag)", "modifiers": "private", "return": "void", "signature": "void setLastSnasphotTag0(long addr, long nextSnapshotTag)", "full_signature": "private void setLastSnasphotTag0(long addr, long nextSnapshotTag)", "class_method_signature": "TrackingPageIO.setLastSnasphotTag0(long addr, long nextSnapshotTag)", "testcase": false, "constructor": false}, {"identifier": "getLastSnapshotTag", "parameters": "(ByteBuffer buf)", "modifiers": "private", "return": "long", "signature": "long getLastSnapshotTag(ByteBuffer buf)", "full_signature": "private long getLastSnapshotTag(ByteBuffer buf)", "class_method_signature": "TrackingPageIO.getLastSnapshotTag(ByteBuffer buf)", "testcase": false, "constructor": false}, {"identifier": "getLastSnapshotTag0", "parameters": "(ByteBuffer buf)", "modifiers": "private", "return": "long", "signature": "long getLastSnapshotTag0(ByteBuffer buf)", "full_signature": "private long getLastSnapshotTag0(ByteBuffer buf)", "class_method_signature": "TrackingPageIO.getLastSnapshotTag0(ByteBuffer buf)", "testcase": false, "constructor": false}, {"identifier": "getLastSnapshotTag", "parameters": "(long addr)", "modifiers": "private", "return": "long", "signature": "long getLastSnapshotTag(long addr)", "full_signature": "private long getLastSnapshotTag(long addr)", "class_method_signature": "TrackingPageIO.getLastSnapshotTag(long addr)", "testcase": false, "constructor": false}, {"identifier": "getLastSnapshotTag0", "parameters": "(long addr)", "modifiers": "private", "return": "long", "signature": "long getLastSnapshotTag0(long addr)", "full_signature": "private long getLastSnapshotTag0(long addr)", "class_method_signature": "TrackingPageIO.getLastSnapshotTag0(long addr)", "testcase": false, "constructor": false}, {"identifier": "isCorrupted", "parameters": "(ByteBuffer buf)", "modifiers": "public", "return": "boolean", "signature": "boolean isCorrupted(ByteBuffer buf)", "full_signature": "public boolean isCorrupted(ByteBuffer buf)", "class_method_signature": "TrackingPageIO.isCorrupted(ByteBuffer buf)", "testcase": false, "constructor": false}, {"identifier": "resetCorruptFlag", "parameters": "(ByteBuffer buf)", "modifiers": "public", "return": "void", "signature": "void resetCorruptFlag(ByteBuffer buf)", "full_signature": "public void resetCorruptFlag(ByteBuffer buf)", "class_method_signature": "TrackingPageIO.resetCorruptFlag(ByteBuffer buf)", "testcase": false, "constructor": false}, {"identifier": "resetCorruptFlag", "parameters": "(long addr)", "modifiers": "public", "return": "void", "signature": "void resetCorruptFlag(long addr)", "full_signature": "public void resetCorruptFlag(long addr)", "class_method_signature": "TrackingPageIO.resetCorruptFlag(long addr)", "testcase": false, "constructor": false}, {"identifier": "wasChanged", "parameters": "(ByteBuffer buf, long pageId, long curSnapshotTag, long lastSuccessfulSnapshotTag, int pageSize)", "modifiers": "public", "return": "boolean", "signature": "boolean wasChanged(ByteBuffer buf, long pageId, long curSnapshotTag, long lastSuccessfulSnapshotTag, int pageSize)", "full_signature": "public boolean wasChanged(ByteBuffer buf, long pageId, long curSnapshotTag, long lastSuccessfulSnapshotTag, int pageSize)", "class_method_signature": "TrackingPageIO.wasChanged(ByteBuffer buf, long pageId, long curSnapshotTag, long lastSuccessfulSnapshotTag, int pageSize)", "testcase": false, "constructor": false}, {"identifier": "countOfChangedPage", "parameters": "(ByteBuffer buf, long snapshotTag, int pageSize)", "modifiers": "public", "return": "short", "signature": "short countOfChangedPage(ByteBuffer buf, long snapshotTag, int pageSize)", "full_signature": "public short countOfChangedPage(ByteBuffer buf, long snapshotTag, int pageSize)", "class_method_signature": "TrackingPageIO.countOfChangedPage(ByteBuffer buf, long snapshotTag, int pageSize)", "testcase": false, "constructor": false}, {"identifier": "useLeftHalf", "parameters": "(long snapshotTag)", "modifiers": "private", "return": "boolean", "signature": "boolean useLeftHalf(long snapshotTag)", "full_signature": "private boolean useLeftHalf(long snapshotTag)", "class_method_signature": "TrackingPageIO.useLeftHalf(long snapshotTag)", "testcase": false, "constructor": false}, {"identifier": "trackingPageFor", "parameters": "(long pageId, int pageSize)", "modifiers": "public", "return": "long", "signature": "long trackingPageFor(long pageId, int pageSize)", "full_signature": "public long trackingPageFor(long pageId, int pageSize)", "class_method_signature": "TrackingPageIO.trackingPageFor(long pageId, int pageSize)", "testcase": false, "constructor": false}, {"identifier": "countOfPageToTrack", "parameters": "(int pageSize)", "modifiers": "public", "return": "int", "signature": "int countOfPageToTrack(int pageSize)", "full_signature": "public int countOfPageToTrack(int pageSize)", "class_method_signature": "TrackingPageIO.countOfPageToTrack(int pageSize)", "testcase": false, "constructor": false}, {"identifier": "findNextChangedPage", "parameters": "(ByteBuffer buf, long start, long curSnapshotTag,\n        long lastSuccessfulSnapshotTag, int pageSize)", "modifiers": "@Nullable public", "return": "Long", "signature": "Long findNextChangedPage(ByteBuffer buf, long start, long curSnapshotTag,\n        long lastSuccessfulSnapshotTag, int pageSize)", "full_signature": "@Nullable public Long findNextChangedPage(ByteBuffer buf, long start, long curSnapshotTag,\n        long lastSuccessfulSnapshotTag, int pageSize)", "class_method_signature": "TrackingPageIO.findNextChangedPage(ByteBuffer buf, long start, long curSnapshotTag,\n        long lastSuccessfulSnapshotTag, int pageSize)", "testcase": false, "constructor": false}, {"identifier": "foundSetBit", "parameters": "(byte byteToTest, int firstBitToTest)", "modifiers": "private static", "return": "int", "signature": "int foundSetBit(byte byteToTest, int firstBitToTest)", "full_signature": "private static int foundSetBit(byte byteToTest, int firstBitToTest)", "class_method_signature": "TrackingPageIO.foundSetBit(byte byteToTest, int firstBitToTest)", "testcase": false, "constructor": false}, {"identifier": "printPage", "parameters": "(long addr, int pageSize, GridStringBuilder sb)", "modifiers": "@Override protected", "return": "void", "signature": "void printPage(long addr, int pageSize, GridStringBuilder sb)", "full_signature": "@Override protected void printPage(long addr, int pageSize, GridStringBuilder sb)", "class_method_signature": "TrackingPageIO.printPage(long addr, int pageSize, GridStringBuilder sb)", "testcase": false, "constructor": false}], "file": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/tree/io/TrackingPageIO.java"}, "focal_method": {"identifier": "findNextChangedPage", "parameters": "(ByteBuffer buf, long start, long curSnapshotTag,\n        long lastSuccessfulSnapshotTag, int pageSize)", "modifiers": "@Nullable public", "return": "Long", "body": "@Nullable public Long findNextChangedPage(ByteBuffer buf, long start, long curSnapshotTag,\n        long lastSuccessfulSnapshotTag, int pageSize) throws TrackingPageIsCorruptedException {\n        if (isCorrupted(buf))\n            throw TrackingPageIsCorruptedException.INSTANCE;\n\n        long lastTag = validateSnapshotTag(buf, curSnapshotTag + 1, lastSuccessfulSnapshotTag, pageSize);\n\n        if (lastTag >= 0)\n            throw new TrackingPageIsCorruptedException(lastTag, curSnapshotTag);\n\n        int cntOfPage = countOfPageToTrack(pageSize);\n\n        long trackingPage = trackingPageFor(start, pageSize);\n\n        if (start == trackingPage)\n            return trackingPage;\n\n        if (countOfChangedPage(buf, curSnapshotTag, pageSize) <= 0)\n            return null;\n\n        int idxToStartTest = (PageIdUtils.pageIndex(start) - COUNT_OF_EXTRA_PAGE) % cntOfPage;\n\n        int zeroIdx = useLeftHalf(curSnapshotTag) ? BITMAP_OFFSET : BITMAP_OFFSET + SIZE_FIELD_SIZE + (cntOfPage >> 3);\n\n        int startIdx = zeroIdx + (idxToStartTest >> 3);\n\n        int idx = startIdx;\n\n        int stopIdx = zeroIdx + (cntOfPage >> 3);\n\n        while (idx < stopIdx) {\n            byte byteToTest = buf.get(idx);\n\n            if (byteToTest != 0) {\n                int foundSetBit;\n                if ((foundSetBit = foundSetBit(byteToTest, idx == startIdx ? (idxToStartTest & 0b111) : 0)) != -1) {\n                    long foundPageId = PageIdUtils.pageId(\n                        PageIdUtils.partId(start),\n                        PageIdUtils.flag(start),\n                        PageIdUtils.pageIndex(trackingPage) + ((idx - zeroIdx) << 3) + foundSetBit);\n\n                    assert wasChanged(buf, foundPageId, curSnapshotTag, lastSuccessfulSnapshotTag, pageSize);\n                    assert trackingPageFor(foundPageId, pageSize) == trackingPage;\n\n                    return foundPageId;\n                }\n            }\n\n            idx++;\n        }\n\n        return null;\n    }", "signature": "Long findNextChangedPage(ByteBuffer buf, long start, long curSnapshotTag,\n        long lastSuccessfulSnapshotTag, int pageSize)", "full_signature": "@Nullable public Long findNextChangedPage(ByteBuffer buf, long start, long curSnapshotTag,\n        long lastSuccessfulSnapshotTag, int pageSize)", "class_method_signature": "TrackingPageIO.findNextChangedPage(ByteBuffer buf, long start, long curSnapshotTag,\n        long lastSuccessfulSnapshotTag, int pageSize)", "testcase": false, "constructor": false, "invocations": ["isCorrupted", "validateSnapshotTag", "countOfPageToTrack", "trackingPageFor", "countOfChangedPage", "pageIndex", "useLeftHalf", "get", "foundSetBit", "pageId", "partId", "flag", "pageIndex", "wasChanged", "trackingPageFor"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}