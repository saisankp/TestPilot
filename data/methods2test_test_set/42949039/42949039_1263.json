{"test_class": {"identifier": "FileTypeRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private FileTypeRestController fileTypeRestController;", "modifier": "@InjectMocks\n    private", "type": "FileTypeRestController", "declarator": "fileTypeRestController", "var_name": "fileTypeRestController"}, {"original_string": "@Mock\n    private FileTypeService fileTypeService;", "modifier": "@Mock\n    private", "type": "FileTypeService", "declarator": "fileTypeService", "var_name": "fileTypeService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/FileTypeRestControllerTest.java"}, "test_case": {"identifier": "testDeleteFileType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDeleteFileType() throws Exception\n    {\n        // Create a file type.\n        FileType fileType = new FileType(FORMAT_FILE_TYPE_CODE);\n\n        when(fileTypeService.deleteFileType(new FileTypeKey(FORMAT_FILE_TYPE_CODE))).thenReturn(fileType);\n\n        FileType deletedFileType = fileTypeRestController.deleteFileType(FORMAT_FILE_TYPE_CODE);\n\n        // Verify the external calls.\n        verify(fileTypeService).deleteFileType(new FileTypeKey(FORMAT_FILE_TYPE_CODE));\n        verifyNoMoreInteractions(fileTypeService);\n        // Validate the returned object.\n        assertEquals(fileType, deletedFileType);\n    }", "signature": "void testDeleteFileType()", "full_signature": "@Test public void testDeleteFileType()", "class_method_signature": "FileTypeRestControllerTest.testDeleteFileType()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "deleteFileType", "deleteFileType", "deleteFileType", "verify", "verifyNoMoreInteractions", "assertEquals"]}, "focal_class": {"identifier": "FileTypeRestController", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private FileTypeService fileTypeService;", "modifier": "@Autowired\n    private", "type": "FileTypeService", "declarator": "fileTypeService", "var_name": "fileTypeService"}], "methods": [{"identifier": "createFileType", "parameters": "(@RequestBody FileTypeCreateRequest request)", "modifiers": "@RequestMapping(value = \"/fileTypes\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_FILE_TYPES_POST) public", "return": "FileType", "signature": "FileType createFileType(@RequestBody FileTypeCreateRequest request)", "full_signature": "@RequestMapping(value = \"/fileTypes\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_FILE_TYPES_POST) public FileType createFileType(@RequestBody FileTypeCreateRequest request)", "class_method_signature": "FileTypeRestController.createFileType(@RequestBody FileTypeCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "getFileType", "parameters": "(@PathVariable(\"fileTypeCode\") String fileTypeCode)", "modifiers": "@RequestMapping(value = \"/fileTypes/{fileTypeCode}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_FILE_TYPES_GET) public", "return": "FileType", "signature": "FileType getFileType(@PathVariable(\"fileTypeCode\") String fileTypeCode)", "full_signature": "@RequestMapping(value = \"/fileTypes/{fileTypeCode}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_FILE_TYPES_GET) public FileType getFileType(@PathVariable(\"fileTypeCode\") String fileTypeCode)", "class_method_signature": "FileTypeRestController.getFileType(@PathVariable(\"fileTypeCode\") String fileTypeCode)", "testcase": false, "constructor": false}, {"identifier": "deleteFileType", "parameters": "(@PathVariable(\"fileTypeCode\") String fileTypeCode)", "modifiers": "@RequestMapping(value = \"/fileTypes/{fileTypeCode}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_FILE_TYPES_DELETE) public", "return": "FileType", "signature": "FileType deleteFileType(@PathVariable(\"fileTypeCode\") String fileTypeCode)", "full_signature": "@RequestMapping(value = \"/fileTypes/{fileTypeCode}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_FILE_TYPES_DELETE) public FileType deleteFileType(@PathVariable(\"fileTypeCode\") String fileTypeCode)", "class_method_signature": "FileTypeRestController.deleteFileType(@PathVariable(\"fileTypeCode\") String fileTypeCode)", "testcase": false, "constructor": false}, {"identifier": "getFileTypes", "parameters": "()", "modifiers": "@RequestMapping(value = \"/fileTypes\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_FILE_TYPES_ALL_GET) public", "return": "FileTypeKeys", "signature": "FileTypeKeys getFileTypes()", "full_signature": "@RequestMapping(value = \"/fileTypes\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_FILE_TYPES_ALL_GET) public FileTypeKeys getFileTypes()", "class_method_signature": "FileTypeRestController.getFileTypes()", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/FileTypeRestController.java"}, "focal_method": {"identifier": "deleteFileType", "parameters": "(@PathVariable(\"fileTypeCode\") String fileTypeCode)", "modifiers": "@RequestMapping(value = \"/fileTypes/{fileTypeCode}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_FILE_TYPES_DELETE) public", "return": "FileType", "body": "@RequestMapping(value = \"/fileTypes/{fileTypeCode}\", method = RequestMethod.DELETE)\n    @Secured(SecurityFunctions.FN_FILE_TYPES_DELETE)\n    public FileType deleteFileType(@PathVariable(\"fileTypeCode\") String fileTypeCode)\n    {\n        return fileTypeService.deleteFileType(new FileTypeKey(fileTypeCode));\n    }", "signature": "FileType deleteFileType(@PathVariable(\"fileTypeCode\") String fileTypeCode)", "full_signature": "@RequestMapping(value = \"/fileTypes/{fileTypeCode}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_FILE_TYPES_DELETE) public FileType deleteFileType(@PathVariable(\"fileTypeCode\") String fileTypeCode)", "class_method_signature": "FileTypeRestController.deleteFileType(@PathVariable(\"fileTypeCode\") String fileTypeCode)", "testcase": false, "constructor": false, "invocations": ["deleteFileType"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}