{"test_class": {"identifier": "SplitPagesTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-model/src/test/java/org/sejda/model/split/SplitPagesTest.java"}, "test_case": {"identifier": "testFailingEnsureIsValid", "parameters": "()", "modifiers": "@Test(expected = TaskExecutionException.class) public", "return": "void", "body": "@Test(expected = TaskExecutionException.class)\n    public void testFailingEnsureIsValid() throws TaskExecutionException {\n        new SplitPages(new ArrayList<Integer>()).ensureIsValid();\n    }", "signature": "void testFailingEnsureIsValid()", "full_signature": "@Test(expected = TaskExecutionException.class) public void testFailingEnsureIsValid()", "class_method_signature": "SplitPagesTest.testFailingEnsureIsValid()", "testcase": true, "constructor": false, "invocations": ["ensureIsValid"]}, "focal_class": {"identifier": "SplitPages", "superclass": "", "interfaces": "implements NextOutputStrategy", "fields": [{"original_string": "private Set<Integer> closingPages = new HashSet<Integer>();", "modifier": "private", "type": "Set<Integer>", "declarator": "closingPages = new HashSet<Integer>()", "var_name": "closingPages"}, {"original_string": "private Set<Integer> openingPages = new HashSet<Integer>();", "modifier": "private", "type": "Set<Integer>", "declarator": "openingPages = new HashSet<Integer>()", "var_name": "openingPages"}], "methods": [{"identifier": "SplitPages", "parameters": "(Collection<Integer> pages)", "modifiers": "public", "return": "", "signature": " SplitPages(Collection<Integer> pages)", "full_signature": "public  SplitPages(Collection<Integer> pages)", "class_method_signature": "SplitPages.SplitPages(Collection<Integer> pages)", "testcase": false, "constructor": true}, {"identifier": "SplitPages", "parameters": "(Integer... pages)", "modifiers": "public", "return": "", "signature": " SplitPages(Integer... pages)", "full_signature": "public  SplitPages(Integer... pages)", "class_method_signature": "SplitPages.SplitPages(Integer... pages)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(Integer page)", "modifiers": "", "return": "void", "signature": "void add(Integer page)", "full_signature": " void add(Integer page)", "class_method_signature": "SplitPages.add(Integer page)", "testcase": false, "constructor": false}, {"identifier": "ensureIsValid", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void ensureIsValid()", "full_signature": "@Override public void ensureIsValid()", "class_method_signature": "SplitPages.ensureIsValid()", "testcase": false, "constructor": false}, {"identifier": "isOpening", "parameters": "(Integer page)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isOpening(Integer page)", "full_signature": "@Override public boolean isOpening(Integer page)", "class_method_signature": "SplitPages.isOpening(Integer page)", "testcase": false, "constructor": false}, {"identifier": "isClosing", "parameters": "(Integer page)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isClosing(Integer page)", "full_signature": "@Override public boolean isClosing(Integer page)", "class_method_signature": "SplitPages.isClosing(Integer page)", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/split/SplitPages.java"}, "focal_method": {"identifier": "ensureIsValid", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void ensureIsValid() throws TaskExecutionException {\n        if (closingPages.isEmpty()) {\n            throw new TaskExecutionException(\"Unable to split, no page number given.\");\n        }\n    }", "signature": "void ensureIsValid()", "full_signature": "@Override public void ensureIsValid()", "class_method_signature": "SplitPages.ensureIsValid()", "testcase": false, "constructor": false, "invocations": ["isEmpty"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}