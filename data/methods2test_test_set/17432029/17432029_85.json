{"test_class": {"identifier": "MultipartTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final Part secondPart = new StringPart(\"name\", \"value\");", "modifier": "static final", "type": "Part", "declarator": "secondPart = new StringPart(\"name\", \"value\")", "var_name": "secondPart"}, {"original_string": "static final Part thirdPart = new StringPart(\"someOtherName\", \"otherValue\");", "modifier": "static final", "type": "Part", "declarator": "thirdPart = new StringPart(\"someOtherName\", \"otherValue\")", "var_name": "thirdPart"}, {"original_string": "static Part firstPart = null;", "modifier": "static", "type": "Part", "declarator": "firstPart = null", "var_name": "firstPart"}, {"original_string": "static String firstPartName = \"lorem\";", "modifier": "static", "type": "String", "declarator": "firstPartName = \"lorem\"", "var_name": "firstPartName"}, {"original_string": "static String fileContent = \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\"\n\t\t\t+ \"\\nveniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\"\n\t\t\t+ \"\\nvelit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\"\n\t\t\t+ \"\\nid est laborum.\";", "modifier": "static", "type": "String", "declarator": "fileContent = \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\"\n\t\t\t+ \"\\nveniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\"\n\t\t\t+ \"\\nvelit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\"\n\t\t\t+ \"\\nid est laborum.\"", "var_name": "fileContent"}, {"original_string": "Multipart multipart;", "modifier": "", "type": "Multipart", "declarator": "multipart", "var_name": "multipart"}, {"original_string": "List<Part> parts;", "modifier": "", "type": "List<Part>", "declarator": "parts", "var_name": "parts"}], "file": "volleyer/src/test/java/com/navercorp/volleyextensions/volleyer/multipart/MultipartTest.java"}, "test_case": {"identifier": "shouldReturnBoundary", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldReturnBoundary() {\n\t\t// Given\n\t\tString boundary = \"myboundary\";\n\t\tmultipart = new Multipart(boundary);\n\t\t// When\n\t\tString result = multipart.getBoundary();\n\t\t// Then\n\t\tassertThat(result, is(boundary));\n\t}", "signature": "void shouldReturnBoundary()", "full_signature": "@Test public void shouldReturnBoundary()", "class_method_signature": "MultipartTest.shouldReturnBoundary()", "testcase": true, "constructor": false, "invocations": ["getBoundary", "assertThat", "is"]}, "focal_class": {"identifier": "Multipart", "superclass": "", "interfaces": "implements Collection<Part>, Writable", "fields": [{"original_string": "private static final int DEFAULT_BOUNDARY_LENGTH = 30;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_BOUNDARY_LENGTH = 30", "var_name": "DEFAULT_BOUNDARY_LENGTH"}, {"original_string": "private List<Part> parts = new ArrayList<Part>();", "modifier": "private", "type": "List<Part>", "declarator": "parts = new ArrayList<Part>()", "var_name": "parts"}, {"original_string": "private String boundary;", "modifier": "private", "type": "String", "declarator": "boundary", "var_name": "boundary"}], "methods": [{"identifier": "Multipart", "parameters": "()", "modifiers": "public", "return": "", "signature": " Multipart()", "full_signature": "public  Multipart()", "class_method_signature": "Multipart.Multipart()", "testcase": false, "constructor": true}, {"identifier": "Multipart", "parameters": "(String boundary)", "modifiers": "public", "return": "", "signature": " Multipart(String boundary)", "full_signature": "public  Multipart(String boundary)", "class_method_signature": "Multipart.Multipart(String boundary)", "testcase": false, "constructor": true}, {"identifier": "assertBoundary", "parameters": "(String boundary)", "modifiers": "private static", "return": "void", "signature": "void assertBoundary(String boundary)", "full_signature": "private static void assertBoundary(String boundary)", "class_method_signature": "Multipart.assertBoundary(String boundary)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(OutputStream out)", "modifiers": "@Override public", "return": "void", "signature": "void write(OutputStream out)", "full_signature": "@Override public void write(OutputStream out)", "class_method_signature": "Multipart.write(OutputStream out)", "testcase": false, "constructor": false}, {"identifier": "getContentType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getContentType()", "full_signature": "public String getContentType()", "class_method_signature": "Multipart.getContentType()", "testcase": false, "constructor": false}, {"identifier": "writeParts", "parameters": "(OutputStream out)", "modifiers": "private", "return": "void", "signature": "void writeParts(OutputStream out)", "full_signature": "private void writeParts(OutputStream out)", "class_method_signature": "Multipart.writeParts(OutputStream out)", "testcase": false, "constructor": false}, {"identifier": "writeBoundaryStart", "parameters": "(OutputStream out)", "modifiers": "private", "return": "void", "signature": "void writeBoundaryStart(OutputStream out)", "full_signature": "private void writeBoundaryStart(OutputStream out)", "class_method_signature": "Multipart.writeBoundaryStart(OutputStream out)", "testcase": false, "constructor": false}, {"identifier": "writeBoundaryEnd", "parameters": "(OutputStream out)", "modifiers": "private", "return": "void", "signature": "void writeBoundaryEnd(OutputStream out)", "full_signature": "private void writeBoundaryEnd(OutputStream out)", "class_method_signature": "Multipart.writeBoundaryEnd(OutputStream out)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Part part)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean add(Part part)", "full_signature": "@Override public boolean add(Part part)", "class_method_signature": "Multipart.add(Part part)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(Collection<? extends Part> collection)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addAll(Collection<? extends Part> collection)", "full_signature": "@Override public boolean addAll(Collection<? extends Part> collection)", "class_method_signature": "Multipart.addAll(Collection<? extends Part> collection)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "Multipart.clear()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(Object obj)", "full_signature": "@Override public boolean contains(Object obj)", "class_method_signature": "Multipart.contains(Object obj)", "testcase": false, "constructor": false}, {"identifier": "containsAll", "parameters": "(Collection<?> collection)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsAll(Collection<?> collection)", "full_signature": "@Override public boolean containsAll(Collection<?> collection)", "class_method_signature": "Multipart.containsAll(Collection<?> collection)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "Multipart.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Part>", "signature": "Iterator<Part> iterator()", "full_signature": "@Override public Iterator<Part> iterator()", "class_method_signature": "Multipart.iterator()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean remove(Object obj)", "full_signature": "@Override public boolean remove(Object obj)", "class_method_signature": "Multipart.remove(Object obj)", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "(Collection<?> collection)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeAll(Collection<?> collection)", "full_signature": "@Override public boolean removeAll(Collection<?> collection)", "class_method_signature": "Multipart.removeAll(Collection<?> collection)", "testcase": false, "constructor": false}, {"identifier": "retainAll", "parameters": "(Collection<?> collection)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean retainAll(Collection<?> collection)", "full_signature": "@Override public boolean retainAll(Collection<?> collection)", "class_method_signature": "Multipart.retainAll(Collection<?> collection)", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "()", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] toArray()", "full_signature": "@Override public Object[] toArray()", "class_method_signature": "Multipart.toArray()", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "(Part[] array)", "modifiers": "@SuppressWarnings(\"hiding\") @Override public", "return": "Part[]", "signature": "Part[] toArray(Part[] array)", "full_signature": "@SuppressWarnings(\"hiding\") @Override public Part[] toArray(Part[] array)", "class_method_signature": "Multipart.toArray(Part[] array)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "Multipart.size()", "testcase": false, "constructor": false}, {"identifier": "getBoundary", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getBoundary()", "full_signature": "public String getBoundary()", "class_method_signature": "Multipart.getBoundary()", "testcase": false, "constructor": false}], "file": "volleyer/src/main/java/com/navercorp/volleyextensions/volleyer/multipart/Multipart.java"}, "focal_method": {"identifier": "getBoundary", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getBoundary() {\n\t\treturn boundary;\n\t}", "signature": "String getBoundary()", "full_signature": "public String getBoundary()", "class_method_signature": "Multipart.getBoundary()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 17432029, "url": "https://github.com/naver/volley-extensions", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 138, "size": 666, "license": "licensed"}}