{"test_class": {"identifier": "XsdValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private XsdValidator validator;", "modifier": "private", "type": "XsdValidator", "declarator": "validator", "var_name": "validator"}, {"original_string": "private static final String SCHEMA_RESOURCE = \"/xsd/test.xsd\";", "modifier": "private static final", "type": "String", "declarator": "SCHEMA_RESOURCE = \"/xsd/test.xsd\"", "var_name": "SCHEMA_RESOURCE"}], "file": "commons/xml/src/test/java/org/openehealth/ipf/commons/xml/XsdValidatorTest.java"}, "test_case": {"identifier": "testValidate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testValidate() throws Exception {\n\t\tXsdValidator.getCachedSchemas().clear();\n\t\tSource testXml = new StreamSource(new ClassPathResource(\"xsd/test.xml\")\n\t\t\t\t.getInputStream());\n\t\tvalidator.validate(testXml, SCHEMA_RESOURCE);\n\t\tAssert.assertTrue(XsdValidator.getCachedSchemas().containsKey(\n\t\t\t\tSCHEMA_RESOURCE));\n\t}", "signature": "void testValidate()", "full_signature": "@Test public void testValidate()", "class_method_signature": "XsdValidatorTest.testValidate()", "testcase": true, "constructor": false, "invocations": ["clear", "getCachedSchemas", "getInputStream", "validate", "assertTrue", "containsKey", "getCachedSchemas"]}, "focal_class": {"identifier": "XsdValidator", "superclass": "", "interfaces": "implements Validator<Source, String>", "fields": [{"original_string": "private final static Logger LOG = LoggerFactory.getLogger(XsdValidator.class);", "modifier": "private final static", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(XsdValidator.class)", "var_name": "LOG"}, {"original_string": "private ResourceLoader resourceLoader;", "modifier": "private", "type": "ResourceLoader", "declarator": "resourceLoader", "var_name": "resourceLoader"}, {"original_string": "private final static LSResourceResolverImpl lrri = new LSResourceResolverImpl();", "modifier": "private final static", "type": "LSResourceResolverImpl", "declarator": "lrri = new LSResourceResolverImpl()", "var_name": "lrri"}, {"original_string": "private String schemaLanguage = XMLConstants.W3C_XML_SCHEMA_NS_URI;", "modifier": "private", "type": "String", "declarator": "schemaLanguage = XMLConstants.W3C_XML_SCHEMA_NS_URI", "var_name": "schemaLanguage"}, {"original_string": "private final static Map<String, Schema> cachedSchemas = Collections\n            .synchronizedMap(new HashMap<String, Schema>(3));", "modifier": "private final static", "type": "Map<String, Schema>", "declarator": "cachedSchemas = Collections\n            .synchronizedMap(new HashMap<String, Schema>(3))", "var_name": "cachedSchemas"}], "methods": [{"identifier": "XsdValidator", "parameters": "()", "modifiers": "public", "return": "", "signature": " XsdValidator()", "full_signature": "public  XsdValidator()", "class_method_signature": "XsdValidator.XsdValidator()", "testcase": false, "constructor": true}, {"identifier": "XsdValidator", "parameters": "(ClassLoader classloader)", "modifiers": "public", "return": "", "signature": " XsdValidator(ClassLoader classloader)", "full_signature": "public  XsdValidator(ClassLoader classloader)", "class_method_signature": "XsdValidator.XsdValidator(ClassLoader classloader)", "testcase": false, "constructor": true}, {"identifier": "validate", "parameters": "(Source message, String schema)", "modifiers": "@Override public", "return": "void", "signature": "void validate(Source message, String schema)", "full_signature": "@Override public void validate(Source message, String schema)", "class_method_signature": "XsdValidator.validate(Source message, String schema)", "testcase": false, "constructor": false}, {"identifier": "doValidate", "parameters": "(Source message,\n            String schemaResource)", "modifiers": "protected", "return": "List<ValidationException>", "signature": "List<ValidationException> doValidate(Source message,\n            String schemaResource)", "full_signature": "protected List<ValidationException> doValidate(Source message,\n            String schemaResource)", "class_method_signature": "XsdValidator.doValidate(Source message,\n            String schemaResource)", "testcase": false, "constructor": false}, {"identifier": "obtainSchema", "parameters": "(String schemaResource)", "modifiers": "protected", "return": "Schema", "signature": "Schema obtainSchema(String schemaResource)", "full_signature": "protected Schema obtainSchema(String schemaResource)", "class_method_signature": "XsdValidator.obtainSchema(String schemaResource)", "testcase": false, "constructor": false}, {"identifier": "createSchema", "parameters": "(String schemaResource)", "modifiers": "protected synchronized", "return": "void", "signature": "void createSchema(String schemaResource)", "full_signature": "protected synchronized void createSchema(String schemaResource)", "class_method_signature": "XsdValidator.createSchema(String schemaResource)", "testcase": false, "constructor": false}, {"identifier": "schemaSource", "parameters": "(String resource)", "modifiers": "public", "return": "Source", "signature": "Source schemaSource(String resource)", "full_signature": "public Source schemaSource(String resource)", "class_method_signature": "XsdValidator.schemaSource(String resource)", "testcase": false, "constructor": false}, {"identifier": "getSchemaLanguage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSchemaLanguage()", "full_signature": "public String getSchemaLanguage()", "class_method_signature": "XsdValidator.getSchemaLanguage()", "testcase": false, "constructor": false}, {"identifier": "setSchemaLanguage", "parameters": "(String schemaLanguage)", "modifiers": "public", "return": "void", "signature": "void setSchemaLanguage(String schemaLanguage)", "full_signature": "public void setSchemaLanguage(String schemaLanguage)", "class_method_signature": "XsdValidator.setSchemaLanguage(String schemaLanguage)", "testcase": false, "constructor": false}, {"identifier": "getCachedSchemas", "parameters": "()", "modifiers": "static", "return": "Map<String, Schema>", "signature": "Map<String, Schema> getCachedSchemas()", "full_signature": "static Map<String, Schema> getCachedSchemas()", "class_method_signature": "XsdValidator.getCachedSchemas()", "testcase": false, "constructor": false}], "file": "commons/xml/src/main/java/org/openehealth/ipf/commons/xml/XsdValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(Source message, String schema)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate(Source message, String schema) {\n        List<ValidationException> exceptions = doValidate(message, schema);\n        if (exceptions != null && exceptions.size() > 0) {\n            throw new ValidationException(exceptions);\n        }\n    }", "signature": "void validate(Source message, String schema)", "full_signature": "@Override public void validate(Source message, String schema)", "class_method_signature": "XsdValidator.validate(Source message, String schema)", "testcase": false, "constructor": false, "invocations": ["doValidate", "size"]}, "repository": {"repo_id": 793164, "url": "https://github.com/krasserm/ipf", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 30233, "license": "licensed"}}