{"test_class": {"identifier": "DBServiceTest", "superclass": "extends PrimeTimeTest", "interfaces": "", "fields": [{"original_string": "private DBService dbService;", "modifier": "private", "type": "DBService", "declarator": "dbService", "var_name": "dbService"}, {"original_string": "private PlaylistService playlistService;", "modifier": "private", "type": "PlaylistService", "declarator": "playlistService", "var_name": "playlistService"}, {"original_string": "private PageService pageService;", "modifier": "private", "type": "PageService", "declarator": "pageService", "var_name": "pageService"}, {"original_string": "private ScreenService screenService;", "modifier": "private", "type": "ScreenService", "declarator": "screenService", "var_name": "screenService"}, {"original_string": "private UserService userService;", "modifier": "private", "type": "UserService", "declarator": "userService", "var_name": "userService"}], "file": "common/app/src/test/java/com/sap/primetime/api/DBServiceTest.java"}, "test_case": {"identifier": "testGetFiles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetFiles() throws Exception {\n\t\t// simulate user with dbadmin priviledges\n\t\tdoReturn(true).when(dbService).isDBAdmin();\n\n\t\tassertEquals(0, dbService.getFiles().size());\n\t\tFileDAO.saveNew((new File(\"f1\")));\n\t\tassertEquals(1, dbService.getFiles().size());\n\t}", "signature": "void testGetFiles()", "full_signature": "@Test public void testGetFiles()", "class_method_signature": "DBServiceTest.testGetFiles()", "testcase": true, "constructor": false, "invocations": ["isDBAdmin", "when", "doReturn", "assertEquals", "size", "getFiles", "saveNew", "assertEquals", "size", "getFiles"]}, "focal_class": {"identifier": "DBService", "superclass": "extends BasicService", "interfaces": "", "fields": [], "methods": [{"identifier": "getUsers", "parameters": "()", "modifiers": "@GET @Path(\"/users\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<User>", "signature": "List<User> getUsers()", "full_signature": "@GET @Path(\"/users\") @Produces(MediaType.APPLICATION_JSON) public List<User> getUsers()", "class_method_signature": "DBService.getUsers()", "testcase": false, "constructor": false}, {"identifier": "getPages", "parameters": "()", "modifiers": "@GET @Path(\"/pages\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<Page>", "signature": "List<Page> getPages()", "full_signature": "@GET @Path(\"/pages\") @Produces(MediaType.APPLICATION_JSON) public List<Page> getPages()", "class_method_signature": "DBService.getPages()", "testcase": false, "constructor": false}, {"identifier": "getFiles", "parameters": "()", "modifiers": "@GET @Path(\"/files\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<File>", "signature": "List<File> getFiles()", "full_signature": "@GET @Path(\"/files\") @Produces(MediaType.APPLICATION_JSON) public List<File> getFiles()", "class_method_signature": "DBService.getFiles()", "testcase": false, "constructor": false}, {"identifier": "getPlaylists", "parameters": "()", "modifiers": "@GET @Path(\"/playlists\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<Playlist>", "signature": "List<Playlist> getPlaylists()", "full_signature": "@GET @Path(\"/playlists\") @Produces(MediaType.APPLICATION_JSON) public List<Playlist> getPlaylists()", "class_method_signature": "DBService.getPlaylists()", "testcase": false, "constructor": false}, {"identifier": "getScreens", "parameters": "()", "modifiers": "@GET @Path(\"/screens\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<Screen>", "signature": "List<Screen> getScreens()", "full_signature": "@GET @Path(\"/screens\") @Produces(MediaType.APPLICATION_JSON) public List<Screen> getScreens()", "class_method_signature": "DBService.getScreens()", "testcase": false, "constructor": false}, {"identifier": "getOwners", "parameters": "()", "modifiers": "@GET @Path(\"/owners\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<Owner>", "signature": "List<Owner> getOwners()", "full_signature": "@GET @Path(\"/owners\") @Produces(MediaType.APPLICATION_JSON) public List<Owner> getOwners()", "class_method_signature": "DBService.getOwners()", "testcase": false, "constructor": false}, {"identifier": "getPageReferences", "parameters": "()", "modifiers": "@GET @Path(\"/pagereferences\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<PageReference>", "signature": "List<PageReference> getPageReferences()", "full_signature": "@GET @Path(\"/pagereferences\") @Produces(MediaType.APPLICATION_JSON) public List<PageReference> getPageReferences()", "class_method_signature": "DBService.getPageReferences()", "testcase": false, "constructor": false}], "file": "common/app/src/main/java/com/sap/primetime/api/DBService.java"}, "focal_method": {"identifier": "getFiles", "parameters": "()", "modifiers": "@GET @Path(\"/files\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<File>", "body": "@GET\n\t@Path(\"/files\")\n\t@Produces(MediaType.APPLICATION_JSON)\n\tpublic List<File> getFiles() {\n\t\tif (!isDBAdmin()) {\n\t\t\tthrowUnauthorized();\n\t\t}\n\n\t\treturn new FileDAO().getAll(\"name\");\n\t}", "signature": "List<File> getFiles()", "full_signature": "@GET @Path(\"/files\") @Produces(MediaType.APPLICATION_JSON) public List<File> getFiles()", "class_method_signature": "DBService.getFiles()", "testcase": false, "constructor": false, "invocations": ["isDBAdmin", "throwUnauthorized", "getAll"]}, "repository": {"repo_id": 172529766, "url": "https://github.com/SAP/cloud-primetime", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 25, "size": 7529, "license": "licensed"}}