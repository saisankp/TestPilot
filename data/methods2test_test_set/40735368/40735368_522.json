{"test_class": {"identifier": "AggregateProcessTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "DataStore bugs;", "modifier": "", "type": "DataStore", "declarator": "bugs", "var_name": "bugs"}], "file": "modules/unsupported/process-feature/src/test/java/org/geotools/process/vector/AggregateProcessTest.java"}, "test_case": {"identifier": "testSum", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSum() throws Exception {\n        SimpleFeatureSource source = bugs.getFeatureSource(\"bugsites\");\n\n        Set<AggregationFunction> functions = EnumSet.of(AggregationFunction.Sum);\n        \n        Results result = AggregateProcess.process( source.getFeatures(), \"cat\",  functions, true, null );\n        assertTrue( result.sum > 0 );\n    }", "signature": "void testSum()", "full_signature": "@Test public void testSum()", "class_method_signature": "AggregateProcessTest.testSum()", "testcase": true, "constructor": false, "invocations": ["getFeatureSource", "of", "process", "getFeatures", "assertTrue"]}, "focal_class": {"identifier": "AggregateProcess", "superclass": "", "interfaces": "implements VectorProcess", "fields": [], "methods": [{"identifier": "process", "parameters": "(SimpleFeatureCollection features, String aggAttribute, Set<AggregationFunction> functions, Boolean singlePass, ProgressListener progressListener)", "modifiers": "public static", "return": "Results", "signature": "Results process(SimpleFeatureCollection features, String aggAttribute, Set<AggregationFunction> functions, Boolean singlePass, ProgressListener progressListener)", "full_signature": "public static Results process(SimpleFeatureCollection features, String aggAttribute, Set<AggregationFunction> functions, Boolean singlePass, ProgressListener progressListener)", "class_method_signature": "AggregateProcess.process(SimpleFeatureCollection features, String aggAttribute, Set<AggregationFunction> functions, Boolean singlePass, ProgressListener progressListener)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(\n            @DescribeParameter(name = \"features\", description = \"Input feature collection\") SimpleFeatureCollection features,\n            @DescribeParameter(name = \"aggregationAttribute\", min = 0, description = \"Attribute on which to perform aggregation\") String aggAttribute,\n            @DescribeParameter(name = \"function\", description = \"An aggregate function to compute. Functions include Count, Average, Max, Median, Min, StdDev, and Sum.\", collectionType = AggregationFunction.class) Set<AggregationFunction> functions,\n            @DescribeParameter(name = \"singlePass\", description = \"If True computes all aggregation values in a single pass (this will defeat DBMS-specific optimizations)\", defaultValue = \"false\") boolean singlePass,\n            ProgressListener progressListener)", "modifiers": "@DescribeResult(name = \"result\", description = \"Aggregation results (one value for each function computed)\") public", "return": "Results", "signature": "Results execute(\n            @DescribeParameter(name = \"features\", description = \"Input feature collection\") SimpleFeatureCollection features,\n            @DescribeParameter(name = \"aggregationAttribute\", min = 0, description = \"Attribute on which to perform aggregation\") String aggAttribute,\n            @DescribeParameter(name = \"function\", description = \"An aggregate function to compute. Functions include Count, Average, Max, Median, Min, StdDev, and Sum.\", collectionType = AggregationFunction.class) Set<AggregationFunction> functions,\n            @DescribeParameter(name = \"singlePass\", description = \"If True computes all aggregation values in a single pass (this will defeat DBMS-specific optimizations)\", defaultValue = \"false\") boolean singlePass,\n            ProgressListener progressListener)", "full_signature": "@DescribeResult(name = \"result\", description = \"Aggregation results (one value for each function computed)\") public Results execute(\n            @DescribeParameter(name = \"features\", description = \"Input feature collection\") SimpleFeatureCollection features,\n            @DescribeParameter(name = \"aggregationAttribute\", min = 0, description = \"Attribute on which to perform aggregation\") String aggAttribute,\n            @DescribeParameter(name = \"function\", description = \"An aggregate function to compute. Functions include Count, Average, Max, Median, Min, StdDev, and Sum.\", collectionType = AggregationFunction.class) Set<AggregationFunction> functions,\n            @DescribeParameter(name = \"singlePass\", description = \"If True computes all aggregation values in a single pass (this will defeat DBMS-specific optimizations)\", defaultValue = \"false\") boolean singlePass,\n            ProgressListener progressListener)", "class_method_signature": "AggregateProcess.execute(\n            @DescribeParameter(name = \"features\", description = \"Input feature collection\") SimpleFeatureCollection features,\n            @DescribeParameter(name = \"aggregationAttribute\", min = 0, description = \"Attribute on which to perform aggregation\") String aggAttribute,\n            @DescribeParameter(name = \"function\", description = \"An aggregate function to compute. Functions include Count, Average, Max, Median, Min, StdDev, and Sum.\", collectionType = AggregationFunction.class) Set<AggregationFunction> functions,\n            @DescribeParameter(name = \"singlePass\", description = \"If True computes all aggregation values in a single pass (this will defeat DBMS-specific optimizations)\", defaultValue = \"false\") boolean singlePass,\n            ProgressListener progressListener)", "testcase": false, "constructor": false}, {"identifier": "attNames", "parameters": "(List<AttributeDescriptor> atts)", "modifiers": "private", "return": "List<String>", "signature": "List<String> attNames(List<AttributeDescriptor> atts)", "full_signature": "private List<String> attNames(List<AttributeDescriptor> atts)", "class_method_signature": "AggregateProcess.attNames(List<AttributeDescriptor> atts)", "testcase": false, "constructor": false}], "file": "modules/unsupported/process-feature/src/main/java/org/geotools/process/vector/AggregateProcess.java"}, "focal_method": {"identifier": "process", "parameters": "(SimpleFeatureCollection features, String aggAttribute, Set<AggregationFunction> functions, Boolean singlePass, ProgressListener progressListener)", "modifiers": "public static", "return": "Results", "body": "public static Results process(SimpleFeatureCollection features, String aggAttribute, Set<AggregationFunction> functions, Boolean singlePass, ProgressListener progressListener) throws ProcessException, IOException {\n        AggregateProcess process = new AggregateProcess();\n        return process.execute(features, aggAttribute, functions, singlePass, progressListener);\n    }", "signature": "Results process(SimpleFeatureCollection features, String aggAttribute, Set<AggregationFunction> functions, Boolean singlePass, ProgressListener progressListener)", "full_signature": "public static Results process(SimpleFeatureCollection features, String aggAttribute, Set<AggregationFunction> functions, Boolean singlePass, ProgressListener progressListener)", "class_method_signature": "AggregateProcess.process(SimpleFeatureCollection features, String aggAttribute, Set<AggregationFunction> functions, Boolean singlePass, ProgressListener progressListener)", "testcase": false, "constructor": false, "invocations": ["execute"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}