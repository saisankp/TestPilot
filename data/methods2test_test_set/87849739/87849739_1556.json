{"test_class": {"identifier": "MultiComparisonNodeTest", "superclass": "", "interfaces": "", "fields": [], "file": "model/rql/src/test/java/org/eclipse/ditto/model/rql/predicates/ast/MultiComparisonNodeTest.java"}, "test_case": {"identifier": "addNullValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void addNullValues() {\n        final MultiComparisonNode filterNode = new MultiComparisonNode(\n                MultiComparisonNode.Type.IN, \"propertyName\");\n\n        filterNode.addValue(\"test1\");\n        filterNode.addValue(null);\n        filterNode.addValue(\"test2\");\n        filterNode.addValue(null);\n        filterNode.addValue(null);\n        filterNode.addValue(\"test3\");\n        assertThat(filterNode.getComparisonValue().get(0)).isEqualTo(\"test1\");\n        assertThat(filterNode.getComparisonValue().get(1)).isNull();\n        assertThat(filterNode.getComparisonValue().get(2)).isEqualTo(\"test2\");\n        assertThat(filterNode.getComparisonValue().get(3)).isNull();\n        assertThat(filterNode.getComparisonValue().get(4)).isNull();\n        assertThat(filterNode.getComparisonValue().get(5)).isEqualTo(\"test3\");\n    }", "signature": "void addNullValues()", "full_signature": "@Test public void addNullValues()", "class_method_signature": "MultiComparisonNodeTest.addNullValues()", "testcase": true, "constructor": false, "invocations": ["addValue", "addValue", "addValue", "addValue", "addValue", "addValue", "isEqualTo", "assertThat", "get", "getComparisonValue", "isNull", "assertThat", "get", "getComparisonValue", "isEqualTo", "assertThat", "get", "getComparisonValue", "isNull", "assertThat", "get", "getComparisonValue", "isNull", "assertThat", "get", "getComparisonValue", "isEqualTo", "assertThat", "get", "getComparisonValue"]}, "focal_class": {"identifier": "MultiComparisonNode", "superclass": "extends ComparisonNode<MultiComparisonNode.Type, List<Object>>", "interfaces": "", "fields": [], "methods": [{"identifier": "MultiComparisonNode", "parameters": "(final Type comparisonType, final String comparisonProperty)", "modifiers": "public", "return": "", "signature": " MultiComparisonNode(final Type comparisonType, final String comparisonProperty)", "full_signature": "public  MultiComparisonNode(final Type comparisonType, final String comparisonProperty)", "class_method_signature": "MultiComparisonNode.MultiComparisonNode(final Type comparisonType, final String comparisonProperty)", "testcase": false, "constructor": true}, {"identifier": "MultiComparisonNode", "parameters": "(final Type comparisonType, final String comparisonProperty,\n            final List<Object> comparisonPropertyValues)", "modifiers": "public", "return": "", "signature": " MultiComparisonNode(final Type comparisonType, final String comparisonProperty,\n            final List<Object> comparisonPropertyValues)", "full_signature": "public  MultiComparisonNode(final Type comparisonType, final String comparisonProperty,\n            final List<Object> comparisonPropertyValues)", "class_method_signature": "MultiComparisonNode.MultiComparisonNode(final Type comparisonType, final String comparisonProperty,\n            final List<Object> comparisonPropertyValues)", "testcase": false, "constructor": true}, {"identifier": "addValue", "parameters": "(final Object value)", "modifiers": "public", "return": "void", "signature": "void addValue(final Object value)", "full_signature": "public void addValue(final Object value)", "class_method_signature": "MultiComparisonNode.addValue(final Object value)", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(final PredicateVisitor predicateVisitor)", "modifiers": "public", "return": "void", "signature": "void accept(final PredicateVisitor predicateVisitor)", "full_signature": "public void accept(final PredicateVisitor predicateVisitor)", "class_method_signature": "MultiComparisonNode.accept(final PredicateVisitor predicateVisitor)", "testcase": false, "constructor": false}], "file": "model/rql/src/main/java/org/eclipse/ditto/model/rql/predicates/ast/MultiComparisonNode.java"}, "focal_method": {"identifier": "addValue", "parameters": "(final Object value)", "modifiers": "public", "return": "void", "body": "public void addValue(final Object value) {\n        this.getComparisonValue().add(value);\n    }", "signature": "void addValue(final Object value)", "full_signature": "public void addValue(final Object value)", "class_method_signature": "MultiComparisonNode.addValue(final Object value)", "testcase": false, "constructor": false, "invocations": ["add", "getComparisonValue"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}