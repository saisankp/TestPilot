{"test_class": {"identifier": "LaserMeasurementTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/com/platypii/baseline/lasers/LaserMeasurementTest.java"}, "test_case": {"identifier": "render", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void render() {\n        final List<LaserMeasurement> points = testPoints();\n        // Metric\n        assertEquals(\"100.0, -100.0\\n\", LaserMeasurement.render(points, true).toString());\n        // Imperial\n        assertEquals(\"328.1, -328.1\\n\", LaserMeasurement.render(points, false).toString());\n    }", "signature": "void render()", "full_signature": "@Test public void render()", "class_method_signature": "LaserMeasurementTest.render()", "testcase": true, "constructor": false, "invocations": ["testPoints", "assertEquals", "toString", "render", "assertEquals", "toString", "render"]}, "focal_class": {"identifier": "LaserMeasurement", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TAG = \"LaserMeasurement\";", "modifier": "private static final", "type": "String", "declarator": "TAG = \"LaserMeasurement\"", "var_name": "TAG"}, {"original_string": "public final double x;", "modifier": "public final", "type": "double", "declarator": "x", "var_name": "x"}, {"original_string": "public final double y;", "modifier": "public final", "type": "double", "declarator": "y", "var_name": "y"}], "methods": [{"identifier": "LaserMeasurement", "parameters": "(double x, double y)", "modifiers": "public", "return": "", "signature": " LaserMeasurement(double x, double y)", "full_signature": "public  LaserMeasurement(double x, double y)", "class_method_signature": "LaserMeasurement.LaserMeasurement(double x, double y)", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "@NonNull @Override public", "return": "String", "signature": "String toString()", "full_signature": "@NonNull @Override public String toString()", "class_method_signature": "LaserMeasurement.toString()", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(@NonNull String pointString, boolean metric, boolean strict)", "modifiers": "@NonNull public static", "return": "List<LaserMeasurement>", "signature": "List<LaserMeasurement> parse(@NonNull String pointString, boolean metric, boolean strict)", "full_signature": "@NonNull public static List<LaserMeasurement> parse(@NonNull String pointString, boolean metric, boolean strict)", "class_method_signature": "LaserMeasurement.parse(@NonNull String pointString, boolean metric, boolean strict)", "testcase": false, "constructor": false}, {"identifier": "parseSafe", "parameters": "(@NonNull String pointString, boolean metric)", "modifiers": "@NonNull public static", "return": "List<LaserMeasurement>", "signature": "List<LaserMeasurement> parseSafe(@NonNull String pointString, boolean metric)", "full_signature": "@NonNull public static List<LaserMeasurement> parseSafe(@NonNull String pointString, boolean metric)", "class_method_signature": "LaserMeasurement.parseSafe(@NonNull String pointString, boolean metric)", "testcase": false, "constructor": false}, {"identifier": "render", "parameters": "(@NonNull List<LaserMeasurement> points, boolean metric)", "modifiers": "@NonNull public static", "return": "CharSequence", "signature": "CharSequence render(@NonNull List<LaserMeasurement> points, boolean metric)", "full_signature": "@NonNull public static CharSequence render(@NonNull List<LaserMeasurement> points, boolean metric)", "class_method_signature": "LaserMeasurement.render(@NonNull List<LaserMeasurement> points, boolean metric)", "testcase": false, "constructor": false}, {"identifier": "reorder", "parameters": "(@NonNull List<LaserMeasurement> points)", "modifiers": "@NonNull public static", "return": "List<LaserMeasurement>", "signature": "List<LaserMeasurement> reorder(@NonNull List<LaserMeasurement> points)", "full_signature": "@NonNull public static List<LaserMeasurement> reorder(@NonNull List<LaserMeasurement> points)", "class_method_signature": "LaserMeasurement.reorder(@NonNull List<LaserMeasurement> points)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/platypii/baseline/lasers/LaserMeasurement.java"}, "focal_method": {"identifier": "render", "parameters": "(@NonNull List<LaserMeasurement> points, boolean metric)", "modifiers": "@NonNull public static", "return": "CharSequence", "body": "@NonNull\n    public static CharSequence render(@NonNull List<LaserMeasurement> points, boolean metric) {\n        final double units = metric ? 1 : 3.28084;\n        final StringBuilder sb = new StringBuilder();\n        for (LaserMeasurement point : points) {\n            sb.append(String.format(Locale.US, \"%.1f, %.1f\\n\", point.x * units, point.y * units));\n        }\n        return sb;\n    }", "signature": "CharSequence render(@NonNull List<LaserMeasurement> points, boolean metric)", "full_signature": "@NonNull public static CharSequence render(@NonNull List<LaserMeasurement> points, boolean metric)", "class_method_signature": "LaserMeasurement.render(@NonNull List<LaserMeasurement> points, boolean metric)", "testcase": false, "constructor": false, "invocations": ["append", "format"]}, "repository": {"repo_id": 4671935, "url": "https://github.com/platypii/BASElineFlightComputer", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 18, "size": 6949, "license": "licensed"}}