{"test_class": {"identifier": "RateLimitFilterTest", "superclass": "", "interfaces": "", "fields": [], "file": "containers/jetty/src/test/java/com/yahoo/athenz/container/filter/RateLimitFilterTest.java"}, "test_case": {"identifier": "testDefaultRateLimitFilter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDefaultRateLimitFilter() {\n        RateLimitFilter filter = new RateLimitFilter();\n        assertNotNull(filter);\n\n        MockHttpServletRequest request =  new MockHttpServletRequest();\n        request.setMethod(\"GET\");\n        request.setRequestURI(\"/\");\n        \n        MockHttpServletResponse response =  new MockHttpServletResponse();\n        RateLimitFilterChain chain = new RateLimitFilterChain();\n\n        try {\n            filter.doFilter(request, response, chain);\n        } catch (IOException | ServletException e) {\n            fail();\n        }\n        assertEquals(response.getStatus(), 200);\n    }", "signature": "void testDefaultRateLimitFilter()", "full_signature": "@Test public void testDefaultRateLimitFilter()", "class_method_signature": "RateLimitFilterTest.testDefaultRateLimitFilter()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "setMethod", "setRequestURI", "doFilter", "fail", "assertEquals", "getStatus"]}, "focal_class": {"identifier": "RateLimitFilter", "superclass": "", "interfaces": "implements javax.servlet.Filter", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(RateLimitFilter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(RateLimitFilter.class)", "var_name": "LOGGER"}, {"original_string": "private RateLimit rateLimit;", "modifier": "private", "type": "RateLimit", "declarator": "rateLimit", "var_name": "rateLimit"}], "methods": [{"identifier": "RateLimitFilter", "parameters": "()", "modifiers": "public", "return": "", "signature": " RateLimitFilter()", "full_signature": "public  RateLimitFilter()", "class_method_signature": "RateLimitFilter.RateLimitFilter()", "testcase": false, "constructor": true}, {"identifier": "destroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void destroy()", "full_signature": "@Override public void destroy()", "class_method_signature": "RateLimitFilter.destroy()", "testcase": false, "constructor": false}, {"identifier": "doFilter", "parameters": "(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)", "modifiers": "@Override public", "return": "void", "signature": "void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)", "full_signature": "@Override public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)", "class_method_signature": "RateLimitFilter.doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(FilterConfig config)", "modifiers": "@Override public", "return": "void", "signature": "void init(FilterConfig config)", "full_signature": "@Override public void init(FilterConfig config)", "class_method_signature": "RateLimitFilter.init(FilterConfig config)", "testcase": false, "constructor": false}, {"identifier": "registerRateLimitFilter", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void registerRateLimitFilter()", "full_signature": "private void registerRateLimitFilter()", "class_method_signature": "RateLimitFilter.registerRateLimitFilter()", "testcase": false, "constructor": false}], "file": "containers/jetty/src/main/java/com/yahoo/athenz/container/filter/RateLimitFilter.java"}, "focal_method": {"identifier": "doFilter", "parameters": "(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)\n            throws IOException, ServletException {\n        if (rateLimit.filter(servletRequest, servletResponse)) {\n            return;\n        }\n        chain.doFilter(servletRequest, servletResponse);\n    }", "signature": "void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)", "full_signature": "@Override public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)", "class_method_signature": "RateLimitFilter.doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain)", "testcase": false, "constructor": false, "invocations": ["filter", "doFilter"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}