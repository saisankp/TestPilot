{"test_class": {"identifier": "StatItemTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private StatItem statItem;", "modifier": "private", "type": "StatItem", "declarator": "statItem", "var_name": "statItem"}], "file": "dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/tps/StatItemTest.java"}, "test_case": {"identifier": "testIsAllowable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsAllowable() throws Exception {\n        statItem = new StatItem(\"test\", 5, 1000L);\n        long lastResetTime = statItem.getLastResetTime();\n        assertTrue(statItem.isAllowable());\n        Thread.sleep(1100L);\n        assertTrue(statItem.isAllowable());\n        assertTrue(lastResetTime != statItem.getLastResetTime());\n        assertEquals(4, statItem.getToken());\n    }", "signature": "void testIsAllowable()", "full_signature": "@Test public void testIsAllowable()", "class_method_signature": "StatItemTest.testIsAllowable()", "testcase": true, "constructor": false, "invocations": ["getLastResetTime", "assertTrue", "isAllowable", "sleep", "assertTrue", "isAllowable", "assertTrue", "getLastResetTime", "assertEquals", "getToken"]}, "focal_class": {"identifier": "StatItem", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private long lastResetTime;", "modifier": "private", "type": "long", "declarator": "lastResetTime", "var_name": "lastResetTime"}, {"original_string": "private long interval;", "modifier": "private", "type": "long", "declarator": "interval", "var_name": "interval"}, {"original_string": "private LongAdder token;", "modifier": "private", "type": "LongAdder", "declarator": "token", "var_name": "token"}, {"original_string": "private int rate;", "modifier": "private", "type": "int", "declarator": "rate", "var_name": "rate"}], "methods": [{"identifier": "StatItem", "parameters": "(String name, int rate, long interval)", "modifiers": "", "return": "", "signature": " StatItem(String name, int rate, long interval)", "full_signature": "  StatItem(String name, int rate, long interval)", "class_method_signature": "StatItem.StatItem(String name, int rate, long interval)", "testcase": false, "constructor": true}, {"identifier": "isAllowable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAllowable()", "full_signature": "public boolean isAllowable()", "class_method_signature": "StatItem.isAllowable()", "testcase": false, "constructor": false}, {"identifier": "getInterval", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getInterval()", "full_signature": "public long getInterval()", "class_method_signature": "StatItem.getInterval()", "testcase": false, "constructor": false}, {"identifier": "getRate", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRate()", "full_signature": "public int getRate()", "class_method_signature": "StatItem.getRate()", "testcase": false, "constructor": false}, {"identifier": "getLastResetTime", "parameters": "()", "modifiers": "", "return": "long", "signature": "long getLastResetTime()", "full_signature": " long getLastResetTime()", "class_method_signature": "StatItem.getLastResetTime()", "testcase": false, "constructor": false}, {"identifier": "getToken", "parameters": "()", "modifiers": "", "return": "long", "signature": "long getToken()", "full_signature": " long getToken()", "class_method_signature": "StatItem.getToken()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "StatItem.toString()", "testcase": false, "constructor": false}, {"identifier": "buildLongAdder", "parameters": "(int rate)", "modifiers": "private", "return": "LongAdder", "signature": "LongAdder buildLongAdder(int rate)", "full_signature": "private LongAdder buildLongAdder(int rate)", "class_method_signature": "StatItem.buildLongAdder(int rate)", "testcase": false, "constructor": false}], "file": "dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/filter/tps/StatItem.java"}, "focal_method": {"identifier": "isAllowable", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isAllowable() {\n        long now = System.currentTimeMillis();\n        if (now > lastResetTime + interval) {\n            token = buildLongAdder(rate);\n            lastResetTime = now;\n        }\n\n        if (token.sum() < 0) {\n            return false;\n        }\n        token.decrement();\n        return true;\n    }", "signature": "boolean isAllowable()", "full_signature": "public boolean isAllowable()", "class_method_signature": "StatItem.isAllowable()", "testcase": false, "constructor": false, "invocations": ["currentTimeMillis", "buildLongAdder", "sum", "decrement"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}