{"test_class": {"identifier": "PasswordEncryptionServiceTest", "superclass": "", "interfaces": "", "fields": [], "file": "components/encryption/src/test/java/org/cloudfoundry/credhub/services/PasswordEncryptionServiceTest.java"}, "test_case": {"identifier": "createsPasswordBasedKeyProxy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void createsPasswordBasedKeyProxy() throws Exception {\n    final PasswordEncryptionService subject = new PasswordEncryptionService(new TestPasswordKeyProxyFactory());\n\n    final EncryptionKeyMetadata keyMetadata = new EncryptionKeyMetadata();\n    keyMetadata.setEncryptionPassword(\"foobar\");\n\n    final KeyProxy keyProxy = subject.createKeyProxy(keyMetadata);\n    assertThat(keyProxy, instanceOf(PasswordBasedKeyProxy.class));\n  }", "signature": "void createsPasswordBasedKeyProxy()", "full_signature": "@Test public void createsPasswordBasedKeyProxy()", "class_method_signature": "PasswordEncryptionServiceTest.createsPasswordBasedKeyProxy()", "testcase": true, "constructor": false, "invocations": ["setEncryptionPassword", "createKeyProxy", "assertThat", "instanceOf"]}, "focal_class": {"identifier": "PasswordEncryptionService", "superclass": "extends InternalEncryptionService", "interfaces": "", "fields": [{"original_string": "public static final int GCM_TAG_LENGTH = 128;", "modifier": "public static final", "type": "int", "declarator": "GCM_TAG_LENGTH = 128", "var_name": "GCM_TAG_LENGTH"}, {"original_string": "private final PasswordKeyProxyFactory passwordKeyProxyFactory;", "modifier": "private final", "type": "PasswordKeyProxyFactory", "declarator": "passwordKeyProxyFactory", "var_name": "passwordKeyProxyFactory"}], "methods": [{"identifier": "PasswordEncryptionService", "parameters": "(final PasswordKeyProxyFactory passwordKeyProxyFactory)", "modifiers": "public", "return": "", "signature": " PasswordEncryptionService(final PasswordKeyProxyFactory passwordKeyProxyFactory)", "full_signature": "public  PasswordEncryptionService(final PasswordKeyProxyFactory passwordKeyProxyFactory)", "class_method_signature": "PasswordEncryptionService.PasswordEncryptionService(final PasswordKeyProxyFactory passwordKeyProxyFactory)", "testcase": false, "constructor": true}, {"identifier": "getCipher", "parameters": "()", "modifiers": "@Override public", "return": "CipherWrapper", "signature": "CipherWrapper getCipher()", "full_signature": "@Override public CipherWrapper getCipher()", "class_method_signature": "PasswordEncryptionService.getCipher()", "testcase": false, "constructor": false}, {"identifier": "generateParameterSpec", "parameters": "(final byte[] nonce)", "modifiers": "@Override public", "return": "AlgorithmParameterSpec", "signature": "AlgorithmParameterSpec generateParameterSpec(final byte[] nonce)", "full_signature": "@Override public AlgorithmParameterSpec generateParameterSpec(final byte[] nonce)", "class_method_signature": "PasswordEncryptionService.generateParameterSpec(final byte[] nonce)", "testcase": false, "constructor": false}, {"identifier": "createKeyProxy", "parameters": "(final EncryptionKeyMetadata encryptionKeyMetadata)", "modifiers": "@Override public", "return": "KeyProxy", "signature": "KeyProxy createKeyProxy(final EncryptionKeyMetadata encryptionKeyMetadata)", "full_signature": "@Override public KeyProxy createKeyProxy(final EncryptionKeyMetadata encryptionKeyMetadata)", "class_method_signature": "PasswordEncryptionService.createKeyProxy(final EncryptionKeyMetadata encryptionKeyMetadata)", "testcase": false, "constructor": false}], "file": "components/encryption/src/main/java/org/cloudfoundry/credhub/services/PasswordEncryptionService.java"}, "focal_method": {"identifier": "createKeyProxy", "parameters": "(final EncryptionKeyMetadata encryptionKeyMetadata)", "modifiers": "@Override public", "return": "KeyProxy", "body": "@Override\n  public KeyProxy createKeyProxy(final EncryptionKeyMetadata encryptionKeyMetadata) {\n    return passwordKeyProxyFactory.createPasswordKeyProxy(encryptionKeyMetadata, this);\n  }", "signature": "KeyProxy createKeyProxy(final EncryptionKeyMetadata encryptionKeyMetadata)", "full_signature": "@Override public KeyProxy createKeyProxy(final EncryptionKeyMetadata encryptionKeyMetadata)", "class_method_signature": "PasswordEncryptionService.createKeyProxy(final EncryptionKeyMetadata encryptionKeyMetadata)", "testcase": false, "constructor": false, "invocations": ["createPasswordKeyProxy"]}, "repository": {"repo_id": 57061988, "url": "https://github.com/cloudfoundry-incubator/credhub", "stars": 167, "created": "4/25/2016 5:30:51 PM +00:00", "updates": "2020-01-27T21:31:19+00:00", "fork": "False", "license": "licensed"}}