{"test_class": {"identifier": "GenericTransportBufferTest", "superclass": "", "interfaces": "", "fields": [], "file": "transporters/src/test/java/com/nextdoor/bender/ipc/generic/GenericTransportBufferTest.java"}, "test_case": {"identifier": "testEmptyBuffer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEmptyBuffer() throws IOException {\n    GenericTransportSerializer serializer = mock(GenericTransportSerializer.class);\n    doReturn(\"foo\".getBytes()).when(serializer).serialize(any(InternalEvent.class));\n    GenericTransportBuffer buffer = new GenericTransportBuffer(1, false, serializer);\n\n    assertEquals(true, buffer.isEmpty());\n  }", "signature": "void testEmptyBuffer()", "full_signature": "@Test public void testEmptyBuffer()", "class_method_signature": "GenericTransportBufferTest.testEmptyBuffer()", "testcase": true, "constructor": false, "invocations": ["mock", "serialize", "when", "doReturn", "getBytes", "any", "assertEquals", "isEmpty"]}, "focal_class": {"identifier": "GenericTransportBuffer", "superclass": "", "interfaces": "implements TransportBuffer", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(GenericTransportBuffer.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(GenericTransportBuffer.class)", "var_name": "logger"}, {"original_string": "private final ByteArrayOutputStream baos = new ByteArrayOutputStream();", "modifier": "private final", "type": "ByteArrayOutputStream", "declarator": "baos = new ByteArrayOutputStream()", "var_name": "baos"}, {"original_string": "private final OutputStream os;", "modifier": "private final", "type": "OutputStream", "declarator": "os", "var_name": "os"}, {"original_string": "private final long maxBatchSize;", "modifier": "private final", "type": "long", "declarator": "maxBatchSize", "var_name": "maxBatchSize"}, {"original_string": "private final TransportSerializer serializer;", "modifier": "private final", "type": "TransportSerializer", "declarator": "serializer", "var_name": "serializer"}, {"original_string": "private long batchSize = 0;", "modifier": "private", "type": "long", "declarator": "batchSize = 0", "var_name": "batchSize"}], "methods": [{"identifier": "GenericTransportBuffer", "parameters": "(long maxBatchSize, boolean useCompression,\n      TransportSerializer serializer)", "modifiers": "public", "return": "", "signature": " GenericTransportBuffer(long maxBatchSize, boolean useCompression,\n      TransportSerializer serializer)", "full_signature": "public  GenericTransportBuffer(long maxBatchSize, boolean useCompression,\n      TransportSerializer serializer)", "class_method_signature": "GenericTransportBuffer.GenericTransportBuffer(long maxBatchSize, boolean useCompression,\n      TransportSerializer serializer)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(InternalEvent ievent)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean add(InternalEvent ievent)", "full_signature": "@Override public boolean add(InternalEvent ievent)", "class_method_signature": "GenericTransportBuffer.add(InternalEvent ievent)", "testcase": false, "constructor": false}, {"identifier": "getInternalBuffer", "parameters": "()", "modifiers": "@Override public", "return": "ByteArrayOutputStream", "signature": "ByteArrayOutputStream getInternalBuffer()", "full_signature": "@Override public ByteArrayOutputStream getInternalBuffer()", "class_method_signature": "GenericTransportBuffer.getInternalBuffer()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "GenericTransportBuffer.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "GenericTransportBuffer.close()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "GenericTransportBuffer.clear()", "testcase": false, "constructor": false}], "file": "transporters/src/main/java/com/nextdoor/bender/ipc/generic/GenericTransportBuffer.java"}, "focal_method": {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean isEmpty() {\n    return batchSize == 0;\n  }", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "GenericTransportBuffer.isEmpty()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 75955378, "url": "https://github.com/Nextdoor/bender", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 163, "size": 1503, "license": "licensed"}}