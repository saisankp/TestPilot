{"test_class": {"identifier": "TextLeafTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/com/khmelenko/lab/varis/log/TextLeafTest.java"}, "test_case": {"identifier": "toHtml", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toHtml() throws Exception {\n        TextLeaf text = new TextLeaf(\"T\", FormattingOptions.fromAnsiCodes(new String[]{\"34\", \"1\"}));\n        assertEquals(\"<b><font color='#96CBFE'>T</font></b>\", text.toHtml());\n    }", "signature": "void toHtml()", "full_signature": "@Test public void toHtml()", "class_method_signature": "TextLeafTest.toHtml()", "testcase": true, "constructor": false, "invocations": ["fromAnsiCodes", "assertEquals", "toHtml"]}, "focal_class": {"identifier": "TextLeaf", "superclass": "", "interfaces": "implements LogEntryComponent", "fields": [{"original_string": "private FormattingOptions mOptions;", "modifier": "private", "type": "FormattingOptions", "declarator": "mOptions", "var_name": "mOptions"}, {"original_string": "private String mText = \"\";", "modifier": "private", "type": "String", "declarator": "mText = \"\"", "var_name": "mText"}], "methods": [{"identifier": "TextLeaf", "parameters": "()", "modifiers": "", "return": "", "signature": " TextLeaf()", "full_signature": "  TextLeaf()", "class_method_signature": "TextLeaf.TextLeaf()", "testcase": false, "constructor": true}, {"identifier": "TextLeaf", "parameters": "(String text)", "modifiers": "", "return": "", "signature": " TextLeaf(String text)", "full_signature": "  TextLeaf(String text)", "class_method_signature": "TextLeaf.TextLeaf(String text)", "testcase": false, "constructor": true}, {"identifier": "TextLeaf", "parameters": "(FormattingOptions options)", "modifiers": "", "return": "", "signature": " TextLeaf(FormattingOptions options)", "full_signature": "  TextLeaf(FormattingOptions options)", "class_method_signature": "TextLeaf.TextLeaf(FormattingOptions options)", "testcase": false, "constructor": true}, {"identifier": "TextLeaf", "parameters": "(String text, FormattingOptions options)", "modifiers": "public", "return": "", "signature": " TextLeaf(String text, FormattingOptions options)", "full_signature": "public  TextLeaf(String text, FormattingOptions options)", "class_method_signature": "TextLeaf.TextLeaf(String text, FormattingOptions options)", "testcase": false, "constructor": true}, {"identifier": "getOptions", "parameters": "()", "modifiers": "public", "return": "FormattingOptions", "signature": "FormattingOptions getOptions()", "full_signature": "public FormattingOptions getOptions()", "class_method_signature": "TextLeaf.getOptions()", "testcase": false, "constructor": false}, {"identifier": "setOptions", "parameters": "(FormattingOptions options)", "modifiers": "public", "return": "void", "signature": "void setOptions(FormattingOptions options)", "full_signature": "public void setOptions(FormattingOptions options)", "class_method_signature": "TextLeaf.setOptions(FormattingOptions options)", "testcase": false, "constructor": false}, {"identifier": "getText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getText()", "full_signature": "public String getText()", "class_method_signature": "TextLeaf.getText()", "testcase": false, "constructor": false}, {"identifier": "setText", "parameters": "(String text)", "modifiers": "public", "return": "void", "signature": "void setText(String text)", "full_signature": "public void setText(String text)", "class_method_signature": "TextLeaf.setText(String text)", "testcase": false, "constructor": false}, {"identifier": "toHtml", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toHtml()", "full_signature": "@Override public String toHtml()", "class_method_signature": "TextLeaf.toHtml()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TextLeaf.toString()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/khmelenko/lab/varis/log/TextLeaf.java"}, "focal_method": {"identifier": "toHtml", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toHtml() {\n        String result = mText.replaceAll(\"\\\\r\\\\n?|\\\\n\", \"<br />\");\n        if (mOptions.getTextColor() != null) {\n            result = \"<font color='\" + mOptions.getTextColor() + \"'>\" + result + \"</font>\";\n        } else {\n            result = \"<font color='#FFF'>\" + result + \"</font>\";\n        }\n        if (mOptions.isBold()) {\n            result = \"<b>\" + result + \"</b>\";\n        }\n        if (mOptions.isItalic()) {\n            result = \"<i>\" + result + \"</i>\";\n        }\n        return result;\n    }", "signature": "String toHtml()", "full_signature": "@Override public String toHtml()", "class_method_signature": "TextLeaf.toHtml()", "testcase": false, "constructor": false, "invocations": ["replaceAll", "getTextColor", "getTextColor", "isBold", "isItalic"]}, "repository": {"repo_id": 38716513, "url": "https://github.com/dkhmelenko/Varis-Android", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 42, "size": 10542, "license": "licensed"}}