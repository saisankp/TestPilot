{"test_class": {"identifier": "TestExecutableMenuForm", "superclass": "", "interfaces": "", "fields": [], "file": "org.jvoicexml/src/test/java/org/jvoicexml/interpreter/dialog/TestExecutableMenuForm.java"}, "test_case": {"identifier": "testGetCatchElements", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetCatchElements() throws Exception {\n        final VoiceXmlDocument document = new VoiceXmlDocument();\n        final Vxml vxml = document.getVxml();\n        final Menu menu = vxml.appendChild(Menu.class);\n        final Noinput noinput = menu.appendChild(Noinput.class);\n        final Help help = menu.appendChild(Help.class);\n        final Catch catchNode = menu.appendChild(Catch.class);\n        catchNode.setEvent(\"test\");\n\n        final ExecutableMenuForm dialog = new ExecutableMenuForm();\n        dialog.setNode(menu);\n        dialog.setChoiceConverter(new SrgsXmlChoiceConverter());\n        final Collection<AbstractCatchElement> elements =\n            dialog.getCatchElements();\n        Assert.assertEquals(3, elements.size());\n        for (AbstractCatchElement element : elements) {\n            String tag = element.getTagName();\n            if (tag.equals(Noinput.TAG_NAME)) {\n                Assert.assertTrue(\"expected to find noinput element\",\n                        element.isEqualNode(noinput));\n            } else if (tag.equals(Help.TAG_NAME)) {\n                Assert.assertTrue(\"expected to find help element\",\n                        element.isEqualNode(help));\n            } else if (tag.equals(Catch.TAG_NAME)) {\n                Assert.assertTrue(\"expected to find catch element\",\n                        element.isEqualNode(catchNode));\n            } else {\n                Assert.fail(\"unknown tag: '\" + tag + \"'\");\n            }\n        }\n    }", "signature": "void testGetCatchElements()", "full_signature": "@Test public void testGetCatchElements()", "class_method_signature": "TestExecutableMenuForm.testGetCatchElements()", "testcase": true, "constructor": false, "invocations": ["getVxml", "appendChild", "appendChild", "appendChild", "appendChild", "setEvent", "setNode", "setChoiceConverter", "getCatchElements", "assertEquals", "size", "getTagName", "equals", "assertTrue", "isEqualNode", "equals", "assertTrue", "isEqualNode", "equals", "assertTrue", "isEqualNode", "fail"]}, "focal_class": {"identifier": "ExecutableMenuForm", "superclass": "", "interfaces": "implements Dialog", "fields": [{"original_string": "private static final Logger LOGGER = LogManager\n            .getLogger(ExecutableMenuForm.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LogManager\n            .getLogger(ExecutableMenuForm.class)", "var_name": "LOGGER"}, {"original_string": "private static final int MAX_DTMF_VALUE = 9;", "modifier": "private static final", "type": "int", "declarator": "MAX_DTMF_VALUE = 9", "var_name": "MAX_DTMF_VALUE"}, {"original_string": "private Menu menu;", "modifier": "private", "type": "Menu", "declarator": "menu", "var_name": "menu"}, {"original_string": "private String id;", "modifier": "private", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private Field field;", "modifier": "private", "type": "Field", "declarator": "field", "var_name": "field"}, {"original_string": "private ChoiceConverter converter;", "modifier": "private", "type": "ChoiceConverter", "declarator": "converter", "var_name": "converter"}], "methods": [{"identifier": "ExecutableMenuForm", "parameters": "()", "modifiers": "public", "return": "", "signature": " ExecutableMenuForm()", "full_signature": "public  ExecutableMenuForm()", "class_method_signature": "ExecutableMenuForm.ExecutableMenuForm()", "testcase": false, "constructor": true}, {"identifier": "setNode", "parameters": "(final XmlNode node)", "modifiers": "@Override public", "return": "void", "signature": "void setNode(final XmlNode node)", "full_signature": "@Override public void setNode(final XmlNode node)", "class_method_signature": "ExecutableMenuForm.setNode(final XmlNode node)", "testcase": false, "constructor": false}, {"identifier": "setChoiceConverter", "parameters": "(final ChoiceConverter choiceConverter)", "modifiers": "public", "return": "void", "signature": "void setChoiceConverter(final ChoiceConverter choiceConverter)", "full_signature": "public void setChoiceConverter(final ChoiceConverter choiceConverter)", "class_method_signature": "ExecutableMenuForm.setChoiceConverter(final ChoiceConverter choiceConverter)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "ExecutableMenuForm.getId()", "testcase": false, "constructor": false}, {"identifier": "getChildNodes", "parameters": "()", "modifiers": "@Override public", "return": "Collection<XmlNode>", "signature": "Collection<XmlNode> getChildNodes()", "full_signature": "@Override public Collection<XmlNode> getChildNodes()", "class_method_signature": "ExecutableMenuForm.getChildNodes()", "testcase": false, "constructor": false}, {"identifier": "getFormItems", "parameters": "(\n            final VoiceXmlInterpreterContext context)", "modifiers": "@Override public", "return": "Collection<FormItem>", "signature": "Collection<FormItem> getFormItems(\n            final VoiceXmlInterpreterContext context)", "full_signature": "@Override public Collection<FormItem> getFormItems(\n            final VoiceXmlInterpreterContext context)", "class_method_signature": "ExecutableMenuForm.getFormItems(\n            final VoiceXmlInterpreterContext context)", "testcase": false, "constructor": false}, {"identifier": "createAnonymousField", "parameters": "(final VoiceXmlInterpreterContext context)", "modifiers": "private", "return": "Field", "signature": "Field createAnonymousField(final VoiceXmlInterpreterContext context)", "full_signature": "private Field createAnonymousField(final VoiceXmlInterpreterContext context)", "class_method_signature": "ExecutableMenuForm.createAnonymousField(final VoiceXmlInterpreterContext context)", "testcase": false, "constructor": false}, {"identifier": "convertChoices", "parameters": "(\n            final Collection<Choice> choices, final boolean dtmf)", "modifiers": "private", "return": "Collection<ConvertedChoiceOption>", "signature": "Collection<ConvertedChoiceOption> convertChoices(\n            final Collection<Choice> choices, final boolean dtmf)", "full_signature": "private Collection<ConvertedChoiceOption> convertChoices(\n            final Collection<Choice> choices, final boolean dtmf)", "class_method_signature": "ExecutableMenuForm.convertChoices(\n            final Collection<Choice> choices, final boolean dtmf)", "testcase": false, "constructor": false}, {"identifier": "createGrammars", "parameters": "(\n            final Collection<ConvertedChoiceOption> converted,\n            final ModeType mode)", "modifiers": "private", "return": "void", "signature": "void createGrammars(\n            final Collection<ConvertedChoiceOption> converted,\n            final ModeType mode)", "full_signature": "private void createGrammars(\n            final Collection<ConvertedChoiceOption> converted,\n            final ModeType mode)", "class_method_signature": "ExecutableMenuForm.createGrammars(\n            final Collection<ConvertedChoiceOption> converted,\n            final ModeType mode)", "testcase": false, "constructor": false}, {"identifier": "createFilled", "parameters": "(\n            final Collection<ConvertedChoiceOption> converted)", "modifiers": "private", "return": "void", "signature": "void createFilled(\n            final Collection<ConvertedChoiceOption> converted)", "full_signature": "private void createFilled(\n            final Collection<ConvertedChoiceOption> converted)", "class_method_signature": "ExecutableMenuForm.createFilled(\n            final Collection<ConvertedChoiceOption> converted)", "testcase": false, "constructor": false}, {"identifier": "copyPrompts", "parameters": "(\n            final Collection<ConvertedChoiceOption> converted)", "modifiers": "private", "return": "void", "signature": "void copyPrompts(\n            final Collection<ConvertedChoiceOption> converted)", "full_signature": "private void copyPrompts(\n            final Collection<ConvertedChoiceOption> converted)", "class_method_signature": "ExecutableMenuForm.copyPrompts(\n            final Collection<ConvertedChoiceOption> converted)", "testcase": false, "constructor": false}, {"identifier": "copyPrompt", "parameters": "(final Prompt prompt,\n            final Collection<ConvertedChoiceOption> converted)", "modifiers": "private", "return": "void", "signature": "void copyPrompt(final Prompt prompt,\n            final Collection<ConvertedChoiceOption> converted)", "full_signature": "private void copyPrompt(final Prompt prompt,\n            final Collection<ConvertedChoiceOption> converted)", "class_method_signature": "ExecutableMenuForm.copyPrompt(final Prompt prompt,\n            final Collection<ConvertedChoiceOption> converted)", "testcase": false, "constructor": false}, {"identifier": "createEvent", "parameters": "(final String event,\n            final String message)", "modifiers": "private", "return": "JVoiceXMLEvent", "signature": "JVoiceXMLEvent createEvent(final String event,\n            final String message)", "full_signature": "private JVoiceXMLEvent createEvent(final String event,\n            final String message)", "class_method_signature": "ExecutableMenuForm.createEvent(final String event,\n            final String message)", "testcase": false, "constructor": false}, {"identifier": "expandEnumerates", "parameters": "(\n            final Collection<ConvertedChoiceOption> converted)", "modifiers": "private", "return": "void", "signature": "void expandEnumerates(\n            final Collection<ConvertedChoiceOption> converted)", "full_signature": "private void expandEnumerates(\n            final Collection<ConvertedChoiceOption> converted)", "class_method_signature": "ExecutableMenuForm.expandEnumerates(\n            final Collection<ConvertedChoiceOption> converted)", "testcase": false, "constructor": false}, {"identifier": "expandEnumerate", "parameters": "(final Prompt prompt, final Enumerate enumerate,\n            final Collection<ConvertedChoiceOption> converted)", "modifiers": "private", "return": "void", "signature": "void expandEnumerate(final Prompt prompt, final Enumerate enumerate,\n            final Collection<ConvertedChoiceOption> converted)", "full_signature": "private void expandEnumerate(final Prompt prompt, final Enumerate enumerate,\n            final Collection<ConvertedChoiceOption> converted)", "class_method_signature": "ExecutableMenuForm.expandEnumerate(final Prompt prompt, final Enumerate enumerate,\n            final Collection<ConvertedChoiceOption> converted)", "testcase": false, "constructor": false}, {"identifier": "getFilledElements", "parameters": "()", "modifiers": "public", "return": "Collection<Filled>", "signature": "Collection<Filled> getFilledElements()", "full_signature": "public Collection<Filled> getFilledElements()", "class_method_signature": "ExecutableMenuForm.getFilledElements()", "testcase": false, "constructor": false}, {"identifier": "copyRemainigNodes", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void copyRemainigNodes()", "full_signature": "private void copyRemainigNodes()", "class_method_signature": "ExecutableMenuForm.copyRemainigNodes()", "testcase": false, "constructor": false}, {"identifier": "getCatchElements", "parameters": "()", "modifiers": "public", "return": "Collection<AbstractCatchElement>", "signature": "Collection<AbstractCatchElement> getCatchElements()", "full_signature": "public Collection<AbstractCatchElement> getCatchElements()", "class_method_signature": "ExecutableMenuForm.getCatchElements()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Dialog", "signature": "Dialog clone()", "full_signature": "@Override public Dialog clone()", "class_method_signature": "ExecutableMenuForm.clone()", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/interpreter/dialog/ExecutableMenuForm.java"}, "focal_method": {"identifier": "getCatchElements", "parameters": "()", "modifiers": "public", "return": "Collection<AbstractCatchElement>", "body": "public Collection<AbstractCatchElement> getCatchElements() {\n        if (menu == null) {\n            return null;\n        }\n\n        final Collection<AbstractCatchElement> catches =\n                new java.util.ArrayList<AbstractCatchElement>();\n        final NodeList children = menu.getChildNodes();\n        for (int i = 0; i < children.getLength(); i++) {\n            final Node child = children.item(i);\n            if (child instanceof AbstractCatchElement) {\n                final AbstractCatchElement catchElement =\n                        (AbstractCatchElement) child;\n                catches.add(catchElement);\n            }\n        }\n\n        return catches;\n    }", "signature": "Collection<AbstractCatchElement> getCatchElements()", "full_signature": "public Collection<AbstractCatchElement> getCatchElements()", "class_method_signature": "ExecutableMenuForm.getCatchElements()", "testcase": false, "constructor": false, "invocations": ["getChildNodes", "getLength", "item", "add"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}