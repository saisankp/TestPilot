{"test_class": {"identifier": "XPathUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/extension/complex/src/test/java/org/geotools/data/complex/filter/XPathUtilTest.java"}, "test_case": {"identifier": "testRootElementSteps", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRootElementSteps() {\n        NamespaceSupport namespaces = new NamespaceSupport();\n\n        try {\n            XPathUtil.rootElementSteps(null, namespaces);\n            fail(\"passed null\");\n        } catch (NullPointerException e) {\n        }\n\n        FeatureType complexType = ComplexTestData\n                .createExample05NoNamespaceURI(new UniqueNameFeatureTypeFactoryImpl());\n        Name name = complexType.getName();\n        AttributeDescriptor descriptor = new AttributeDescriptorImpl(complexType, name, 0,\n                Integer.MAX_VALUE, true, null);\n\n        try {\n            XPathUtil.rootElementSteps(descriptor, namespaces);\n        } catch (NullPointerException e) {\n            fail(\"failed null\");\n        }\n\n        assertEquals(1, XPathUtil.rootElementSteps(descriptor, namespaces).size());\n        XPathUtil.Step step = XPathUtil.rootElementSteps(descriptor, namespaces).get(0);\n        QName rootQName = new QName(name.getNamespaceURI(), name.getLocalPart(), \"\");\n        assertEquals(rootQName, step.getName());\n\n        complexType = ComplexTestData\n                .createExample01MultiValuedComplexProperty(new UniqueNameFeatureTypeFactoryImpl());\n        name = complexType.getName();\n        descriptor = new AttributeDescriptorImpl(complexType, name, 0, Integer.MAX_VALUE, true,\n                null);\n\n        String prefix = \"wq\";\n        namespaces.declarePrefix(prefix, name.getNamespaceURI());\n\n        try {\n            XPathUtil.rootElementSteps(descriptor, namespaces);\n        } catch (NullPointerException e) {\n            fail(\"failed null\");\n        }\n\n        assertEquals(1, XPathUtil.rootElementSteps(descriptor, namespaces).size());\n        step = XPathUtil.rootElementSteps(descriptor, namespaces).get(0);\n        rootQName = new QName(name.getNamespaceURI(), name.getLocalPart(), prefix);\n        assertEquals(rootQName, step.getName());\n    }", "signature": "void testRootElementSteps()", "full_signature": "@Test public void testRootElementSteps()", "class_method_signature": "XPathUtilTest.testRootElementSteps()", "testcase": true, "constructor": false, "invocations": ["rootElementSteps", "fail", "createExample05NoNamespaceURI", "getName", "rootElementSteps", "fail", "assertEquals", "size", "rootElementSteps", "get", "rootElementSteps", "getNamespaceURI", "getLocalPart", "assertEquals", "getName", "createExample01MultiValuedComplexProperty", "getName", "declarePrefix", "getNamespaceURI", "rootElementSteps", "fail", "assertEquals", "size", "rootElementSteps", "get", "rootElementSteps", "getNamespaceURI", "getLocalPart", "assertEquals", "getName"]}, "focal_class": {"identifier": "XPathUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = org.geotools.util.logging.Logging.getLogger(XPathUtil.class\n            .getPackage().getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = org.geotools.util.logging.Logging.getLogger(XPathUtil.class\n            .getPackage().getName())", "var_name": "LOGGER"}], "methods": [{"identifier": "splitPath", "parameters": "(String s)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> splitPath(String s)", "full_signature": "private static List<String> splitPath(String s)", "class_method_signature": "XPathUtil.splitPath(String s)", "testcase": false, "constructor": false}, {"identifier": "rootElementSteps", "parameters": "(final AttributeDescriptor rootElement,\n            final NamespaceSupport namespaces)", "modifiers": "public static", "return": "StepList", "signature": "StepList rootElementSteps(final AttributeDescriptor rootElement,\n            final NamespaceSupport namespaces)", "full_signature": "public static StepList rootElementSteps(final AttributeDescriptor rootElement,\n            final NamespaceSupport namespaces)", "class_method_signature": "XPathUtil.rootElementSteps(final AttributeDescriptor rootElement,\n            final NamespaceSupport namespaces)", "testcase": false, "constructor": false}, {"identifier": "steps", "parameters": "(final AttributeDescriptor root, final String xpathExpression,\n            final NamespaceSupport namespaces)", "modifiers": "public static", "return": "StepList", "signature": "StepList steps(final AttributeDescriptor root, final String xpathExpression,\n            final NamespaceSupport namespaces)", "full_signature": "public static StepList steps(final AttributeDescriptor root, final String xpathExpression,\n            final NamespaceSupport namespaces)", "class_method_signature": "XPathUtil.steps(final AttributeDescriptor root, final String xpathExpression,\n            final NamespaceSupport namespaces)", "testcase": false, "constructor": false}, {"identifier": "deglose", "parameters": "(final String prefixedName, final AttributeDescriptor root,\n            final NamespaceSupport namespaces, boolean isXmlAttribute)", "modifiers": "private static", "return": "QName", "signature": "QName deglose(final String prefixedName, final AttributeDescriptor root,\n            final NamespaceSupport namespaces, boolean isXmlAttribute)", "full_signature": "private static QName deglose(final String prefixedName, final AttributeDescriptor root,\n            final NamespaceSupport namespaces, boolean isXmlAttribute)", "class_method_signature": "XPathUtil.deglose(final String prefixedName, final AttributeDescriptor root,\n            final NamespaceSupport namespaces, boolean isXmlAttribute)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Name targetNodeName, StepList targetXPath)", "modifiers": "public static", "return": "boolean", "signature": "boolean equals(Name targetNodeName, StepList targetXPath)", "full_signature": "public static boolean equals(Name targetNodeName, StepList targetXPath)", "class_method_signature": "XPathUtil.equals(Name targetNodeName, StepList targetXPath)", "testcase": false, "constructor": false}], "file": "modules/extension/complex/src/main/java/org/geotools/data/complex/filter/XPathUtil.java"}, "focal_method": {"identifier": "rootElementSteps", "parameters": "(final AttributeDescriptor rootElement,\n            final NamespaceSupport namespaces)", "modifiers": "public static", "return": "StepList", "body": "public static StepList rootElementSteps(final AttributeDescriptor rootElement,\n            final NamespaceSupport namespaces) throws IllegalArgumentException {\n\n        if (rootElement == null) {\n            throw new NullPointerException(\"root\");\n        }\n        StepList steps = new StepList();\n        QName qName = Types.toQName(rootElement.getName(), namespaces);\n        steps.add(new Step(qName, 1, false, false));\n        return steps;\n    }", "signature": "StepList rootElementSteps(final AttributeDescriptor rootElement,\n            final NamespaceSupport namespaces)", "full_signature": "public static StepList rootElementSteps(final AttributeDescriptor rootElement,\n            final NamespaceSupport namespaces)", "class_method_signature": "XPathUtil.rootElementSteps(final AttributeDescriptor rootElement,\n            final NamespaceSupport namespaces)", "testcase": false, "constructor": false, "invocations": ["toQName", "getName", "add"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}