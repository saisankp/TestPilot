{"test_class": {"identifier": "BaseApacheClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BaseApacheClient client;", "modifier": "private", "type": "BaseApacheClient", "declarator": "client", "var_name": "client"}, {"original_string": "private HttpUriRequest request;", "modifier": "private", "type": "HttpUriRequest", "declarator": "request", "var_name": "request"}, {"original_string": "private Headers headers;", "modifier": "private", "type": "Headers", "declarator": "headers", "var_name": "headers"}], "file": "unirest/src/test/java/kong/unirest/apache/BaseApacheClientTest.java"}, "test_case": {"identifier": "ifUrlIsRelativeThenReturnNull", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void ifUrlIsRelativeThenReturnNull() {\n        request = new HttpGet(URI.create(\"/somewhere\"));\n        HttpHost host = client.determineTarget(request, headers);\n        assertNull(host);\n    }", "signature": "void ifUrlIsRelativeThenReturnNull()", "full_signature": "@Test void ifUrlIsRelativeThenReturnNull()", "class_method_signature": "BaseApacheClientTest.ifUrlIsRelativeThenReturnNull()", "testcase": true, "constructor": false, "invocations": ["create", "determineTarget", "assertNull"]}, "focal_class": {"identifier": "BaseApacheClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected RequestConfigFactory configFactory = new DefaultFactory();", "modifier": "protected", "type": "RequestConfigFactory", "declarator": "configFactory = new DefaultFactory()", "var_name": "configFactory"}], "methods": [{"identifier": "toApacheCreds", "parameters": "(Proxy proxy)", "modifiers": "static", "return": "CredentialsProvider", "signature": "CredentialsProvider toApacheCreds(Proxy proxy)", "full_signature": "static CredentialsProvider toApacheCreds(Proxy proxy)", "class_method_signature": "BaseApacheClient.toApacheCreds(Proxy proxy)", "testcase": false, "constructor": false}, {"identifier": "transformBody", "parameters": "(Function<RawResponse, HttpResponse<T>> transformer, RawResponse rr)", "modifiers": "protected", "return": "HttpResponse<T>", "signature": "HttpResponse<T> transformBody(Function<RawResponse, HttpResponse<T>> transformer, RawResponse rr)", "full_signature": "protected HttpResponse<T> transformBody(Function<RawResponse, HttpResponse<T>> transformer, RawResponse rr)", "class_method_signature": "BaseApacheClient.transformBody(Function<RawResponse, HttpResponse<T>> transformer, RawResponse rr)", "testcase": false, "constructor": false}, {"identifier": "recoverBody", "parameters": "(RawResponse rr)", "modifiers": "private", "return": "String", "signature": "String recoverBody(RawResponse rr)", "full_signature": "private String recoverBody(RawResponse rr)", "class_method_signature": "BaseApacheClient.recoverBody(RawResponse rr)", "testcase": false, "constructor": false}, {"identifier": "setConfigFactory", "parameters": "(RequestConfigFactory configFactory)", "modifiers": "public", "return": "void", "signature": "void setConfigFactory(RequestConfigFactory configFactory)", "full_signature": "public void setConfigFactory(RequestConfigFactory configFactory)", "class_method_signature": "BaseApacheClient.setConfigFactory(RequestConfigFactory configFactory)", "testcase": false, "constructor": false}, {"identifier": "determineTarget", "parameters": "(final HttpUriRequest request, Headers headers)", "modifiers": "protected static", "return": "HttpHost", "signature": "HttpHost determineTarget(final HttpUriRequest request, Headers headers)", "full_signature": "protected static HttpHost determineTarget(final HttpUriRequest request, Headers headers)", "class_method_signature": "BaseApacheClient.determineTarget(final HttpUriRequest request, Headers headers)", "testcase": false, "constructor": false}], "file": "unirest/src/main/java/kong/unirest/apache/BaseApacheClient.java"}, "focal_method": {"identifier": "determineTarget", "parameters": "(final HttpUriRequest request, Headers headers)", "modifiers": "protected static", "return": "HttpHost", "body": "protected static HttpHost determineTarget(final HttpUriRequest request, Headers headers)  {\n        HttpHost target = null;\n\n        final URI requestURI = request.getURI();\n        if (requestURI.isAbsolute()) {\n            target = URIUtils.extractHost(requestURI);\n            if (target == null) {\n                throw new UnirestException(\"URI does not specify a valid host name: \" + requestURI);\n            }\n            if(headers.containsKey(\"Host\") && InetAddressUtils.isIPv4Address(target.getHostName())){\n                try {\n                    InetAddress address = InetAddress.getByName(target.getHostName());\n                    target = new HttpHost(address, headers.getFirst(\"Host\"), target.getPort(), target.getSchemeName());\n                }catch (UnknownHostException e){\n                    throw new UnirestException(e);\n                }\n            }\n        }\n        return target;\n    }", "signature": "HttpHost determineTarget(final HttpUriRequest request, Headers headers)", "full_signature": "protected static HttpHost determineTarget(final HttpUriRequest request, Headers headers)", "class_method_signature": "BaseApacheClient.determineTarget(final HttpUriRequest request, Headers headers)", "testcase": false, "constructor": false, "invocations": ["getURI", "isAbsolute", "extractHost", "containsKey", "isIPv4Address", "getHostName", "getByName", "getHostName", "getFirst", "getPort", "getSchemeName"]}, "repository": {"repo_id": 1601209, "url": "https://github.com/Kong/unirest-java", "stars": 1855, "created": "4/11/2011 9:19:53 PM +00:00", "updates": "2020-01-25T12:07:58+00:00", "fork": "False", "license": "licensed"}}