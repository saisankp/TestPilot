{"test_class": {"identifier": "EntityTagTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/apache/abdera/util/EntityTagTest.java"}, "test_case": {"identifier": "testEntityTag", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEntityTag() throws Exception {\n        String[] tags = {\"hello\", \"\\\"hello\\\"\", \"W/\\\"hello\\\"\", \"*\"};\n        EntityTag[] etags = new EntityTag[tags.length];\n        for (int n = 0; n < tags.length; n++) {\n            etags[n] = new EntityTag(tags[n]);\n        }\n        assertFalse(etags[0].isWeak());\n        assertFalse(etags[0].isWild());\n        assertFalse(etags[1].isWeak());\n        assertFalse(etags[1].isWild());\n        assertTrue(etags[2].isWeak());\n        assertFalse(etags[2].isWild());\n        assertFalse(etags[3].isWeak());\n        assertTrue(etags[3].isWild());\n        assertEquals(\"hello\", etags[0].getTag());\n        assertEquals(\"hello\", etags[1].getTag());\n        assertEquals(\"hello\", etags[2].getTag());\n        assertEquals(\"*\", etags[3].getTag());\n        assertEquals(tags[1], etags[0].toString());\n        assertEquals(tags[1], etags[1].toString());\n        assertEquals(tags[2], etags[2].toString());\n        assertEquals(tags[3], etags[3].toString());\n\n        assertTrue(EntityTag.matches(etags[3], etags[0]));\n        assertTrue(EntityTag.matches(etags[3], etags[1]));\n        assertTrue(EntityTag.matches(etags[3], etags[2]));\n        assertTrue(EntityTag.matches(etags[3], etags[3]));\n\n        assertTrue(EntityTag.matches(etags[0], etags[1]));\n        assertFalse(EntityTag.matches(etags[0], etags[2]));\n\n        assertTrue(EntityTag.matchesAny(etags[3], new EntityTag[] {etags[0], etags[1], etags[2]}));\n        assertTrue(EntityTag.matchesAny(etags[0], new EntityTag[] {etags[3], etags[1], etags[2]}));\n        assertTrue(EntityTag.matchesAny(etags[1], new EntityTag[] {etags[0], etags[3], etags[2]}));\n        assertTrue(EntityTag.matchesAny(etags[2], new EntityTag[] {etags[0], etags[1], etags[3]}));\n\n        java.util.Arrays.sort(etags);\n        assertEquals(tags[3], etags[0].toString());\n        assertEquals(tags[1], etags[1].toString());\n        assertEquals(tags[1], etags[2].toString());\n        assertEquals(tags[2], etags[3].toString());\n        EntityTag etag = EntityTag.generate(\"a\", \"b\", \"c\", \"d\");\n        assertEquals(\"\\\"e2fc714c4727ee9395f324cd2e7f331f\\\"\", etag.toString());\n    }", "signature": "void testEntityTag()", "full_signature": "@Test public void testEntityTag()", "class_method_signature": "EntityTagTest.testEntityTag()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isWeak", "assertFalse", "isWild", "assertFalse", "isWeak", "assertFalse", "isWild", "assertTrue", "isWeak", "assertFalse", "isWild", "assertFalse", "isWeak", "assertTrue", "isWild", "assertEquals", "getTag", "assertEquals", "getTag", "assertEquals", "getTag", "assertEquals", "getTag", "assertEquals", "toString", "assertEquals", "toString", "assertEquals", "toString", "assertEquals", "toString", "assertTrue", "matches", "assertTrue", "matches", "assertTrue", "matches", "assertTrue", "matches", "assertTrue", "matches", "assertFalse", "matches", "assertTrue", "matchesAny", "assertTrue", "matchesAny", "assertTrue", "matchesAny", "assertTrue", "matchesAny", "sort", "assertEquals", "toString", "assertEquals", "toString", "assertEquals", "toString", "assertEquals", "toString", "generate", "assertEquals", "toString"]}, "focal_class": {"identifier": "EntityTag", "superclass": "", "interfaces": "implements Cloneable, Serializable, Comparable<EntityTag>", "fields": [{"original_string": "private static final long serialVersionUID = 1559972888659121461L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1559972888659121461L", "var_name": "serialVersionUID"}, {"original_string": "private static final Pattern PATTERN = Pattern.compile(\"(\\\\*)|([wW]/)?\\\"([^\\\"]*)\\\"\");", "modifier": "private static final", "type": "Pattern", "declarator": "PATTERN = Pattern.compile(\"(\\\\*)|([wW]/)?\\\"([^\\\"]*)\\\"\")", "var_name": "PATTERN"}, {"original_string": "private static final String INVALID_ENTITY_TAG = Localizer.get(\"INVALID.ENTITY.TAG\");", "modifier": "private static final", "type": "String", "declarator": "INVALID_ENTITY_TAG = Localizer.get(\"INVALID.ENTITY.TAG\")", "var_name": "INVALID_ENTITY_TAG"}, {"original_string": "public static final EntityTag WILD = new EntityTag(\"*\");", "modifier": "public static final", "type": "EntityTag", "declarator": "WILD = new EntityTag(\"*\")", "var_name": "WILD"}, {"original_string": "private final String tag;", "modifier": "private final", "type": "String", "declarator": "tag", "var_name": "tag"}, {"original_string": "private final boolean weak;", "modifier": "private final", "type": "boolean", "declarator": "weak", "var_name": "weak"}, {"original_string": "private final boolean wild;", "modifier": "private final", "type": "boolean", "declarator": "wild", "var_name": "wild"}], "methods": [{"identifier": "parse", "parameters": "(String entity_tag)", "modifiers": "public static", "return": "EntityTag", "signature": "EntityTag parse(String entity_tag)", "full_signature": "public static EntityTag parse(String entity_tag)", "class_method_signature": "EntityTag.parse(String entity_tag)", "testcase": false, "constructor": false}, {"identifier": "parseTags", "parameters": "(String entity_tags)", "modifiers": "public static", "return": "EntityTag[]", "signature": "EntityTag[] parseTags(String entity_tags)", "full_signature": "public static EntityTag[] parseTags(String entity_tags)", "class_method_signature": "EntityTag.parseTags(String entity_tags)", "testcase": false, "constructor": false}, {"identifier": "matchesAny", "parameters": "(EntityTag tag1, String tags)", "modifiers": "public static", "return": "boolean", "signature": "boolean matchesAny(EntityTag tag1, String tags)", "full_signature": "public static boolean matchesAny(EntityTag tag1, String tags)", "class_method_signature": "EntityTag.matchesAny(EntityTag tag1, String tags)", "testcase": false, "constructor": false}, {"identifier": "matchesAny", "parameters": "(EntityTag tag1, String tags, boolean weak)", "modifiers": "public static", "return": "boolean", "signature": "boolean matchesAny(EntityTag tag1, String tags, boolean weak)", "full_signature": "public static boolean matchesAny(EntityTag tag1, String tags, boolean weak)", "class_method_signature": "EntityTag.matchesAny(EntityTag tag1, String tags, boolean weak)", "testcase": false, "constructor": false}, {"identifier": "matchesAny", "parameters": "(String tag1, String tags)", "modifiers": "public static", "return": "boolean", "signature": "boolean matchesAny(String tag1, String tags)", "full_signature": "public static boolean matchesAny(String tag1, String tags)", "class_method_signature": "EntityTag.matchesAny(String tag1, String tags)", "testcase": false, "constructor": false}, {"identifier": "matchesAny", "parameters": "(String tag1, String tags, boolean weak)", "modifiers": "public static", "return": "boolean", "signature": "boolean matchesAny(String tag1, String tags, boolean weak)", "full_signature": "public static boolean matchesAny(String tag1, String tags, boolean weak)", "class_method_signature": "EntityTag.matchesAny(String tag1, String tags, boolean weak)", "testcase": false, "constructor": false}, {"identifier": "matchesAny", "parameters": "(EntityTag tag1, EntityTag[] tags)", "modifiers": "public static", "return": "boolean", "signature": "boolean matchesAny(EntityTag tag1, EntityTag[] tags)", "full_signature": "public static boolean matchesAny(EntityTag tag1, EntityTag[] tags)", "class_method_signature": "EntityTag.matchesAny(EntityTag tag1, EntityTag[] tags)", "testcase": false, "constructor": false}, {"identifier": "matchesAny", "parameters": "(EntityTag tag1, EntityTag[] tags, boolean weak)", "modifiers": "public static", "return": "boolean", "signature": "boolean matchesAny(EntityTag tag1, EntityTag[] tags, boolean weak)", "full_signature": "public static boolean matchesAny(EntityTag tag1, EntityTag[] tags, boolean weak)", "class_method_signature": "EntityTag.matchesAny(EntityTag tag1, EntityTag[] tags, boolean weak)", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(EntityTag tag1, EntityTag tag2)", "modifiers": "public static", "return": "boolean", "signature": "boolean matches(EntityTag tag1, EntityTag tag2)", "full_signature": "public static boolean matches(EntityTag tag1, EntityTag tag2)", "class_method_signature": "EntityTag.matches(EntityTag tag1, EntityTag tag2)", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(String tag1, String tag2)", "modifiers": "public static", "return": "boolean", "signature": "boolean matches(String tag1, String tag2)", "full_signature": "public static boolean matches(String tag1, String tag2)", "class_method_signature": "EntityTag.matches(String tag1, String tag2)", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(EntityTag tag1, String tag2)", "modifiers": "public static", "return": "boolean", "signature": "boolean matches(EntityTag tag1, String tag2)", "full_signature": "public static boolean matches(EntityTag tag1, String tag2)", "class_method_signature": "EntityTag.matches(EntityTag tag1, String tag2)", "testcase": false, "constructor": false}, {"identifier": "EntityTag", "parameters": "(String tag)", "modifiers": "public", "return": "", "signature": " EntityTag(String tag)", "full_signature": "public  EntityTag(String tag)", "class_method_signature": "EntityTag.EntityTag(String tag)", "testcase": false, "constructor": true}, {"identifier": "EntityTag", "parameters": "(String tag, boolean weak)", "modifiers": "public", "return": "", "signature": " EntityTag(String tag, boolean weak)", "full_signature": "public  EntityTag(String tag, boolean weak)", "class_method_signature": "EntityTag.EntityTag(String tag, boolean weak)", "testcase": false, "constructor": true}, {"identifier": "EntityTag", "parameters": "(String tag, boolean weak, boolean wild)", "modifiers": "private", "return": "", "signature": " EntityTag(String tag, boolean weak, boolean wild)", "full_signature": "private  EntityTag(String tag, boolean weak, boolean wild)", "class_method_signature": "EntityTag.EntityTag(String tag, boolean weak, boolean wild)", "testcase": false, "constructor": true}, {"identifier": "attemptParse", "parameters": "(String tag)", "modifiers": "private", "return": "EntityTag", "signature": "EntityTag attemptParse(String tag)", "full_signature": "private EntityTag attemptParse(String tag)", "class_method_signature": "EntityTag.attemptParse(String tag)", "testcase": false, "constructor": false}, {"identifier": "isWild", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isWild()", "full_signature": "public boolean isWild()", "class_method_signature": "EntityTag.isWild()", "testcase": false, "constructor": false}, {"identifier": "getTag", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTag()", "full_signature": "public String getTag()", "class_method_signature": "EntityTag.getTag()", "testcase": false, "constructor": false}, {"identifier": "isWeak", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isWeak()", "full_signature": "public boolean isWeak()", "class_method_signature": "EntityTag.isWeak()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "EntityTag.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "EntityTag.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "EntityTag.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override protected", "return": "EntityTag", "signature": "EntityTag clone()", "full_signature": "@Override protected EntityTag clone()", "class_method_signature": "EntityTag.clone()", "testcase": false, "constructor": false}, {"identifier": "generate", "parameters": "(String... material)", "modifiers": "public static", "return": "EntityTag", "signature": "EntityTag generate(String... material)", "full_signature": "public static EntityTag generate(String... material)", "class_method_signature": "EntityTag.generate(String... material)", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(EntityTag etag, String... material)", "modifiers": "public static", "return": "boolean", "signature": "boolean matches(EntityTag etag, String... material)", "full_signature": "public static boolean matches(EntityTag etag, String... material)", "class_method_signature": "EntityTag.matches(EntityTag etag, String... material)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(EntityTag... tags)", "modifiers": "public static", "return": "String", "signature": "String toString(EntityTag... tags)", "full_signature": "public static String toString(EntityTag... tags)", "class_method_signature": "EntityTag.toString(EntityTag... tags)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(String... tags)", "modifiers": "public static", "return": "String", "signature": "String toString(String... tags)", "full_signature": "public static String toString(String... tags)", "class_method_signature": "EntityTag.toString(String... tags)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(EntityTag o)", "modifiers": "public", "return": "int", "signature": "int compareTo(EntityTag o)", "full_signature": "public int compareTo(EntityTag o)", "class_method_signature": "EntityTag.compareTo(EntityTag o)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/apache/abdera/util/EntityTag.java"}, "focal_method": {"identifier": "EntityTag", "parameters": "(String tag)", "modifiers": "public", "return": "", "body": "public EntityTag(String tag) {\n        this(tag, false);\n    }", "signature": " EntityTag(String tag)", "full_signature": "public  EntityTag(String tag)", "class_method_signature": "EntityTag.EntityTag(String tag)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 206482, "url": "https://github.com/apache/abdera", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 15, "size": 12255, "license": "licensed"}}