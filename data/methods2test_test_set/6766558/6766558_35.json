{"test_class": {"identifier": "HystrixPluginsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static ConcurrentLinkedQueue<String> dynamicPropertyEvents = new ConcurrentLinkedQueue<String>();", "modifier": "private static", "type": "ConcurrentLinkedQueue<String>", "declarator": "dynamicPropertyEvents = new ConcurrentLinkedQueue<String>()", "var_name": "dynamicPropertyEvents"}, {"original_string": "static String fakeServiceLoaderResource = \n            \"FAKE_META_INF_SERVICES/com.netflix.hystrix.strategy.properties.HystrixDynamicProperties\";", "modifier": "static", "type": "String", "declarator": "fakeServiceLoaderResource = \n            \"FAKE_META_INF_SERVICES/com.netflix.hystrix.strategy.properties.HystrixDynamicProperties\"", "var_name": "fakeServiceLoaderResource"}, {"original_string": "private static final ThreadLocal<String> testRequestIdThreadLocal = new ThreadLocal<String>();", "modifier": "private static final", "type": "ThreadLocal<String>", "declarator": "testRequestIdThreadLocal = new ThreadLocal<String>()", "var_name": "testRequestIdThreadLocal"}], "file": "hystrix-core/src/test/java/com/netflix/hystrix/strategy/HystrixPluginsTest.java"}, "test_case": {"identifier": "testDynamicPropertiesFailure", "parameters": "()", "modifiers": "@Test(expected=ServiceConfigurationError.class) public", "return": "void", "body": "@Test(expected=ServiceConfigurationError.class)\n    public void testDynamicPropertiesFailure() throws Exception {\n        /*\n         * James Bond: Do you expect me to talk?\n         * Auric Goldfinger: No, Mr. Bond, I expect you to die!\n         */\n        fakeServiceLoaderResource = \n                \"FAKE_META_INF_SERVICES/com.netflix.hystrix.strategy.properties.HystrixDynamicPropertiesFail\";\n        HystrixPlugins plugins = setupMockServiceLoader();\n        plugins.getDynamicProperties();\n\n    }", "signature": "void testDynamicPropertiesFailure()", "full_signature": "@Test(expected=ServiceConfigurationError.class) public void testDynamicPropertiesFailure()", "class_method_signature": "HystrixPluginsTest.testDynamicPropertiesFailure()", "testcase": true, "constructor": false, "invocations": ["setupMockServiceLoader", "getDynamicProperties"]}, "focal_class": {"identifier": "HystrixPlugins", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ClassLoader classLoader;", "modifier": "private final", "type": "ClassLoader", "declarator": "classLoader", "var_name": "classLoader"}, {"original_string": "final AtomicReference<HystrixEventNotifier> notifier = new AtomicReference<HystrixEventNotifier>();", "modifier": "final", "type": "AtomicReference<HystrixEventNotifier>", "declarator": "notifier = new AtomicReference<HystrixEventNotifier>()", "var_name": "notifier"}, {"original_string": "final AtomicReference<HystrixConcurrencyStrategy> concurrencyStrategy = new AtomicReference<HystrixConcurrencyStrategy>();", "modifier": "final", "type": "AtomicReference<HystrixConcurrencyStrategy>", "declarator": "concurrencyStrategy = new AtomicReference<HystrixConcurrencyStrategy>()", "var_name": "concurrencyStrategy"}, {"original_string": "final AtomicReference<HystrixMetricsPublisher> metricsPublisher = new AtomicReference<HystrixMetricsPublisher>();", "modifier": "final", "type": "AtomicReference<HystrixMetricsPublisher>", "declarator": "metricsPublisher = new AtomicReference<HystrixMetricsPublisher>()", "var_name": "metricsPublisher"}, {"original_string": "final AtomicReference<HystrixPropertiesStrategy> propertiesFactory = new AtomicReference<HystrixPropertiesStrategy>();", "modifier": "final", "type": "AtomicReference<HystrixPropertiesStrategy>", "declarator": "propertiesFactory = new AtomicReference<HystrixPropertiesStrategy>()", "var_name": "propertiesFactory"}, {"original_string": "final AtomicReference<HystrixCommandExecutionHook> commandExecutionHook = new AtomicReference<HystrixCommandExecutionHook>();", "modifier": "final", "type": "AtomicReference<HystrixCommandExecutionHook>", "declarator": "commandExecutionHook = new AtomicReference<HystrixCommandExecutionHook>()", "var_name": "commandExecutionHook"}, {"original_string": "private final HystrixDynamicProperties dynamicProperties;", "modifier": "private final", "type": "HystrixDynamicProperties", "declarator": "dynamicProperties", "var_name": "dynamicProperties"}], "methods": [{"identifier": "HystrixPlugins", "parameters": "(ClassLoader classLoader, LoggerSupplier logSupplier)", "modifiers": "private", "return": "", "signature": " HystrixPlugins(ClassLoader classLoader, LoggerSupplier logSupplier)", "full_signature": "private  HystrixPlugins(ClassLoader classLoader, LoggerSupplier logSupplier)", "class_method_signature": "HystrixPlugins.HystrixPlugins(ClassLoader classLoader, LoggerSupplier logSupplier)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(ClassLoader classLoader, LoggerSupplier logSupplier)", "modifiers": "static", "return": "HystrixPlugins", "signature": "HystrixPlugins create(ClassLoader classLoader, LoggerSupplier logSupplier)", "full_signature": "static HystrixPlugins create(ClassLoader classLoader, LoggerSupplier logSupplier)", "class_method_signature": "HystrixPlugins.create(ClassLoader classLoader, LoggerSupplier logSupplier)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(ClassLoader classLoader)", "modifiers": "static", "return": "HystrixPlugins", "signature": "HystrixPlugins create(ClassLoader classLoader)", "full_signature": "static HystrixPlugins create(ClassLoader classLoader)", "class_method_signature": "HystrixPlugins.create(ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "()", "modifiers": "static", "return": "HystrixPlugins", "signature": "HystrixPlugins create()", "full_signature": "static HystrixPlugins create()", "class_method_signature": "HystrixPlugins.create()", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "HystrixPlugins", "signature": "HystrixPlugins getInstance()", "full_signature": "public static HystrixPlugins getInstance()", "class_method_signature": "HystrixPlugins.getInstance()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void reset()", "full_signature": "public static void reset()", "class_method_signature": "HystrixPlugins.reset()", "testcase": false, "constructor": false}, {"identifier": "getEventNotifier", "parameters": "()", "modifiers": "public", "return": "HystrixEventNotifier", "signature": "HystrixEventNotifier getEventNotifier()", "full_signature": "public HystrixEventNotifier getEventNotifier()", "class_method_signature": "HystrixPlugins.getEventNotifier()", "testcase": false, "constructor": false}, {"identifier": "registerEventNotifier", "parameters": "(HystrixEventNotifier impl)", "modifiers": "public", "return": "void", "signature": "void registerEventNotifier(HystrixEventNotifier impl)", "full_signature": "public void registerEventNotifier(HystrixEventNotifier impl)", "class_method_signature": "HystrixPlugins.registerEventNotifier(HystrixEventNotifier impl)", "testcase": false, "constructor": false}, {"identifier": "getConcurrencyStrategy", "parameters": "()", "modifiers": "public", "return": "HystrixConcurrencyStrategy", "signature": "HystrixConcurrencyStrategy getConcurrencyStrategy()", "full_signature": "public HystrixConcurrencyStrategy getConcurrencyStrategy()", "class_method_signature": "HystrixPlugins.getConcurrencyStrategy()", "testcase": false, "constructor": false}, {"identifier": "registerConcurrencyStrategy", "parameters": "(HystrixConcurrencyStrategy impl)", "modifiers": "public", "return": "void", "signature": "void registerConcurrencyStrategy(HystrixConcurrencyStrategy impl)", "full_signature": "public void registerConcurrencyStrategy(HystrixConcurrencyStrategy impl)", "class_method_signature": "HystrixPlugins.registerConcurrencyStrategy(HystrixConcurrencyStrategy impl)", "testcase": false, "constructor": false}, {"identifier": "getMetricsPublisher", "parameters": "()", "modifiers": "public", "return": "HystrixMetricsPublisher", "signature": "HystrixMetricsPublisher getMetricsPublisher()", "full_signature": "public HystrixMetricsPublisher getMetricsPublisher()", "class_method_signature": "HystrixPlugins.getMetricsPublisher()", "testcase": false, "constructor": false}, {"identifier": "registerMetricsPublisher", "parameters": "(HystrixMetricsPublisher impl)", "modifiers": "public", "return": "void", "signature": "void registerMetricsPublisher(HystrixMetricsPublisher impl)", "full_signature": "public void registerMetricsPublisher(HystrixMetricsPublisher impl)", "class_method_signature": "HystrixPlugins.registerMetricsPublisher(HystrixMetricsPublisher impl)", "testcase": false, "constructor": false}, {"identifier": "getPropertiesStrategy", "parameters": "()", "modifiers": "public", "return": "HystrixPropertiesStrategy", "signature": "HystrixPropertiesStrategy getPropertiesStrategy()", "full_signature": "public HystrixPropertiesStrategy getPropertiesStrategy()", "class_method_signature": "HystrixPlugins.getPropertiesStrategy()", "testcase": false, "constructor": false}, {"identifier": "getDynamicProperties", "parameters": "()", "modifiers": "public", "return": "HystrixDynamicProperties", "signature": "HystrixDynamicProperties getDynamicProperties()", "full_signature": "public HystrixDynamicProperties getDynamicProperties()", "class_method_signature": "HystrixPlugins.getDynamicProperties()", "testcase": false, "constructor": false}, {"identifier": "registerPropertiesStrategy", "parameters": "(HystrixPropertiesStrategy impl)", "modifiers": "public", "return": "void", "signature": "void registerPropertiesStrategy(HystrixPropertiesStrategy impl)", "full_signature": "public void registerPropertiesStrategy(HystrixPropertiesStrategy impl)", "class_method_signature": "HystrixPlugins.registerPropertiesStrategy(HystrixPropertiesStrategy impl)", "testcase": false, "constructor": false}, {"identifier": "getCommandExecutionHook", "parameters": "()", "modifiers": "public", "return": "HystrixCommandExecutionHook", "signature": "HystrixCommandExecutionHook getCommandExecutionHook()", "full_signature": "public HystrixCommandExecutionHook getCommandExecutionHook()", "class_method_signature": "HystrixPlugins.getCommandExecutionHook()", "testcase": false, "constructor": false}, {"identifier": "registerCommandExecutionHook", "parameters": "(HystrixCommandExecutionHook impl)", "modifiers": "public", "return": "void", "signature": "void registerCommandExecutionHook(HystrixCommandExecutionHook impl)", "full_signature": "public void registerCommandExecutionHook(HystrixCommandExecutionHook impl)", "class_method_signature": "HystrixPlugins.registerCommandExecutionHook(HystrixCommandExecutionHook impl)", "testcase": false, "constructor": false}, {"identifier": "getPluginImplementation", "parameters": "(Class<T> pluginClass)", "modifiers": "private", "return": "T", "signature": "T getPluginImplementation(Class<T> pluginClass)", "full_signature": "private T getPluginImplementation(Class<T> pluginClass)", "class_method_signature": "HystrixPlugins.getPluginImplementation(Class<T> pluginClass)", "testcase": false, "constructor": false}, {"identifier": "getPluginImplementationViaProperties", "parameters": "(Class<T> pluginClass, HystrixDynamicProperties dynamicProperties)", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "T", "signature": "T getPluginImplementationViaProperties(Class<T> pluginClass, HystrixDynamicProperties dynamicProperties)", "full_signature": "@SuppressWarnings(\"unchecked\") private static T getPluginImplementationViaProperties(Class<T> pluginClass, HystrixDynamicProperties dynamicProperties)", "class_method_signature": "HystrixPlugins.getPluginImplementationViaProperties(Class<T> pluginClass, HystrixDynamicProperties dynamicProperties)", "testcase": false, "constructor": false}, {"identifier": "resolveDynamicProperties", "parameters": "(ClassLoader classLoader, LoggerSupplier logSupplier)", "modifiers": "private static", "return": "HystrixDynamicProperties", "signature": "HystrixDynamicProperties resolveDynamicProperties(ClassLoader classLoader, LoggerSupplier logSupplier)", "full_signature": "private static HystrixDynamicProperties resolveDynamicProperties(ClassLoader classLoader, LoggerSupplier logSupplier)", "class_method_signature": "HystrixPlugins.resolveDynamicProperties(ClassLoader classLoader, LoggerSupplier logSupplier)", "testcase": false, "constructor": false}, {"identifier": "findService", "parameters": "(\n            Class<T> spi, \n            ClassLoader classLoader)", "modifiers": "private static", "return": "T", "signature": "T findService(\n            Class<T> spi, \n            ClassLoader classLoader)", "full_signature": "private static T findService(\n            Class<T> spi, \n            ClassLoader classLoader)", "class_method_signature": "HystrixPlugins.findService(\n            Class<T> spi, \n            ClassLoader classLoader)", "testcase": false, "constructor": false}], "file": "hystrix-core/src/main/java/com/netflix/hystrix/strategy/HystrixPlugins.java"}, "focal_method": {"identifier": "getDynamicProperties", "parameters": "()", "modifiers": "public", "return": "HystrixDynamicProperties", "body": "public HystrixDynamicProperties getDynamicProperties() {\n        return dynamicProperties;\n    }", "signature": "HystrixDynamicProperties getDynamicProperties()", "full_signature": "public HystrixDynamicProperties getDynamicProperties()", "class_method_signature": "HystrixPlugins.getDynamicProperties()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 6766558, "url": "https://github.com/Netflix/Hystrix", "stars": 19028, "created": "11/19/2012 8:14:46 PM +00:00", "updates": "2020-01-27T17:55:28+00:00", "fork": "False", "license": "licensed"}}