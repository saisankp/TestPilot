{"test_class": {"identifier": "IoTDBPreparedStatementTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  TSExecuteStatementResp execStatementResp;", "modifier": "@Mock", "type": "TSExecuteStatementResp", "declarator": "execStatementResp", "var_name": "execStatementResp"}, {"original_string": "@Mock\n  TSStatus getOperationStatusResp;", "modifier": "@Mock", "type": "TSStatus", "declarator": "getOperationStatusResp", "var_name": "getOperationStatusResp"}, {"original_string": "private ZoneId zoneId = ZoneId.systemDefault();", "modifier": "private", "type": "ZoneId", "declarator": "zoneId = ZoneId.systemDefault()", "var_name": "zoneId"}, {"original_string": "@Mock\n  private IoTDBConnection connection;", "modifier": "@Mock\n  private", "type": "IoTDBConnection", "declarator": "connection", "var_name": "connection"}, {"original_string": "@Mock\n  private Iface client;", "modifier": "@Mock\n  private", "type": "Iface", "declarator": "client", "var_name": "client"}, {"original_string": "@Mock\n  private TSStatus successStatus = new TSStatus(TSStatusCode.SUCCESS_STATUS.getStatusCode());", "modifier": "@Mock\n  private", "type": "TSStatus", "declarator": "successStatus = new TSStatus(TSStatusCode.SUCCESS_STATUS.getStatusCode())", "var_name": "successStatus"}, {"original_string": "private TSStatus Status_SUCCESS = new TSStatus(successStatus);", "modifier": "private", "type": "TSStatus", "declarator": "Status_SUCCESS = new TSStatus(successStatus)", "var_name": "Status_SUCCESS"}, {"original_string": "private long queryId;", "modifier": "private", "type": "long", "declarator": "queryId", "var_name": "queryId"}, {"original_string": "private long sessionId;", "modifier": "private", "type": "long", "declarator": "sessionId", "var_name": "sessionId"}], "file": "jdbc/src/test/java/org/apache/iotdb/jdbc/IoTDBPreparedStatementTest.java"}, "test_case": {"identifier": "unsetArgument", "parameters": "()", "modifiers": "@SuppressWarnings(\"resource\") @Test(expected = SQLException.class) public", "return": "void", "body": "@SuppressWarnings(\"resource\")\n  @Test(expected = SQLException.class)\n  public void unsetArgument() throws SQLException {\n    String sql = \"SELECT status, temperature FROM root.ln.wf01.wt01 WHERE temperature < 24 and time > ?\";\n    IoTDBPreparedStatement ps = new IoTDBPreparedStatement(connection, client, sessionId, sql,\n        zoneId);\n    ps.execute();\n  }", "signature": "void unsetArgument()", "full_signature": "@SuppressWarnings(\"resource\") @Test(expected = SQLException.class) public void unsetArgument()", "class_method_signature": "IoTDBPreparedStatementTest.unsetArgument()", "testcase": true, "constructor": false, "invocations": ["execute"]}, "focal_class": {"identifier": "IoTDBPreparedStatement", "superclass": "extends IoTDBStatement", "interfaces": "implements PreparedStatement", "fields": [{"original_string": "private String sql;", "modifier": "private", "type": "String", "declarator": "sql", "var_name": "sql"}, {"original_string": "private static final String METHOD_NOT_SUPPORTED_STRING = \"Method not supported\";", "modifier": "private static final", "type": "String", "declarator": "METHOD_NOT_SUPPORTED_STRING = \"Method not supported\"", "var_name": "METHOD_NOT_SUPPORTED_STRING"}, {"original_string": "private final Map<Integer, String> parameters = new LinkedHashMap<>();", "modifier": "private final", "type": "Map<Integer, String>", "declarator": "parameters = new LinkedHashMap<>()", "var_name": "parameters"}], "methods": [{"identifier": "IoTDBPreparedStatement", "parameters": "(IoTDBConnection connection, Iface client,\n      Long sessionId, String sql,\n      ZoneId zoneId)", "modifiers": "", "return": "", "signature": " IoTDBPreparedStatement(IoTDBConnection connection, Iface client,\n      Long sessionId, String sql,\n      ZoneId zoneId)", "full_signature": "  IoTDBPreparedStatement(IoTDBConnection connection, Iface client,\n      Long sessionId, String sql,\n      ZoneId zoneId)", "class_method_signature": "IoTDBPreparedStatement.IoTDBPreparedStatement(IoTDBConnection connection, Iface client,\n      Long sessionId, String sql,\n      ZoneId zoneId)", "testcase": false, "constructor": true}, {"identifier": "addBatch", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void addBatch()", "full_signature": "@Override public void addBatch()", "class_method_signature": "IoTDBPreparedStatement.addBatch()", "testcase": false, "constructor": false}, {"identifier": "clearParameters", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clearParameters()", "full_signature": "@Override public void clearParameters()", "class_method_signature": "IoTDBPreparedStatement.clearParameters()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean execute()", "full_signature": "@Override public boolean execute()", "class_method_signature": "IoTDBPreparedStatement.execute()", "testcase": false, "constructor": false}, {"identifier": "executeQuery", "parameters": "()", "modifiers": "@Override public", "return": "ResultSet", "signature": "ResultSet executeQuery()", "full_signature": "@Override public ResultSet executeQuery()", "class_method_signature": "IoTDBPreparedStatement.executeQuery()", "testcase": false, "constructor": false}, {"identifier": "executeUpdate", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int executeUpdate()", "full_signature": "@Override public int executeUpdate()", "class_method_signature": "IoTDBPreparedStatement.executeUpdate()", "testcase": false, "constructor": false}, {"identifier": "getMetaData", "parameters": "()", "modifiers": "@Override public", "return": "ResultSetMetaData", "signature": "ResultSetMetaData getMetaData()", "full_signature": "@Override public ResultSetMetaData getMetaData()", "class_method_signature": "IoTDBPreparedStatement.getMetaData()", "testcase": false, "constructor": false}, {"identifier": "getParameterMetaData", "parameters": "()", "modifiers": "@Override public", "return": "ParameterMetaData", "signature": "ParameterMetaData getParameterMetaData()", "full_signature": "@Override public ParameterMetaData getParameterMetaData()", "class_method_signature": "IoTDBPreparedStatement.getParameterMetaData()", "testcase": false, "constructor": false}, {"identifier": "setArray", "parameters": "(int parameterIndex, Array x)", "modifiers": "@Override public", "return": "void", "signature": "void setArray(int parameterIndex, Array x)", "full_signature": "@Override public void setArray(int parameterIndex, Array x)", "class_method_signature": "IoTDBPreparedStatement.setArray(int parameterIndex, Array x)", "testcase": false, "constructor": false}, {"identifier": "setAsciiStream", "parameters": "(int parameterIndex, InputStream x)", "modifiers": "@Override public", "return": "void", "signature": "void setAsciiStream(int parameterIndex, InputStream x)", "full_signature": "@Override public void setAsciiStream(int parameterIndex, InputStream x)", "class_method_signature": "IoTDBPreparedStatement.setAsciiStream(int parameterIndex, InputStream x)", "testcase": false, "constructor": false}, {"identifier": "setAsciiStream", "parameters": "(int parameterIndex, InputStream x, int length)", "modifiers": "@Override public", "return": "void", "signature": "void setAsciiStream(int parameterIndex, InputStream x, int length)", "full_signature": "@Override public void setAsciiStream(int parameterIndex, InputStream x, int length)", "class_method_signature": "IoTDBPreparedStatement.setAsciiStream(int parameterIndex, InputStream x, int length)", "testcase": false, "constructor": false}, {"identifier": "setAsciiStream", "parameters": "(int parameterIndex, InputStream x, long length)", "modifiers": "@Override public", "return": "void", "signature": "void setAsciiStream(int parameterIndex, InputStream x, long length)", "full_signature": "@Override public void setAsciiStream(int parameterIndex, InputStream x, long length)", "class_method_signature": "IoTDBPreparedStatement.setAsciiStream(int parameterIndex, InputStream x, long length)", "testcase": false, "constructor": false}, {"identifier": "setBigDecimal", "parameters": "(int parameterIndex, BigDecimal x)", "modifiers": "@Override public", "return": "void", "signature": "void setBigDecimal(int parameterIndex, BigDecimal x)", "full_signature": "@Override public void setBigDecimal(int parameterIndex, BigDecimal x)", "class_method_signature": "IoTDBPreparedStatement.setBigDecimal(int parameterIndex, BigDecimal x)", "testcase": false, "constructor": false}, {"identifier": "setBinaryStream", "parameters": "(int parameterIndex, InputStream x)", "modifiers": "@Override public", "return": "void", "signature": "void setBinaryStream(int parameterIndex, InputStream x)", "full_signature": "@Override public void setBinaryStream(int parameterIndex, InputStream x)", "class_method_signature": "IoTDBPreparedStatement.setBinaryStream(int parameterIndex, InputStream x)", "testcase": false, "constructor": false}, {"identifier": "setBinaryStream", "parameters": "(int parameterIndex, InputStream x, int length)", "modifiers": "@Override public", "return": "void", "signature": "void setBinaryStream(int parameterIndex, InputStream x, int length)", "full_signature": "@Override public void setBinaryStream(int parameterIndex, InputStream x, int length)", "class_method_signature": "IoTDBPreparedStatement.setBinaryStream(int parameterIndex, InputStream x, int length)", "testcase": false, "constructor": false}, {"identifier": "setBinaryStream", "parameters": "(int parameterIndex, InputStream x, long length)", "modifiers": "@Override public", "return": "void", "signature": "void setBinaryStream(int parameterIndex, InputStream x, long length)", "full_signature": "@Override public void setBinaryStream(int parameterIndex, InputStream x, long length)", "class_method_signature": "IoTDBPreparedStatement.setBinaryStream(int parameterIndex, InputStream x, long length)", "testcase": false, "constructor": false}, {"identifier": "setBlob", "parameters": "(int parameterIndex, Blob x)", "modifiers": "@Override public", "return": "void", "signature": "void setBlob(int parameterIndex, Blob x)", "full_signature": "@Override public void setBlob(int parameterIndex, Blob x)", "class_method_signature": "IoTDBPreparedStatement.setBlob(int parameterIndex, Blob x)", "testcase": false, "constructor": false}, {"identifier": "setBlob", "parameters": "(int parameterIndex, InputStream inputStream)", "modifiers": "@Override public", "return": "void", "signature": "void setBlob(int parameterIndex, InputStream inputStream)", "full_signature": "@Override public void setBlob(int parameterIndex, InputStream inputStream)", "class_method_signature": "IoTDBPreparedStatement.setBlob(int parameterIndex, InputStream inputStream)", "testcase": false, "constructor": false}, {"identifier": "setBlob", "parameters": "(int parameterIndex, InputStream inputStream, long length)", "modifiers": "@Override public", "return": "void", "signature": "void setBlob(int parameterIndex, InputStream inputStream, long length)", "full_signature": "@Override public void setBlob(int parameterIndex, InputStream inputStream, long length)", "class_method_signature": "IoTDBPreparedStatement.setBlob(int parameterIndex, InputStream inputStream, long length)", "testcase": false, "constructor": false}, {"identifier": "setBoolean", "parameters": "(int parameterIndex, boolean x)", "modifiers": "@Override public", "return": "void", "signature": "void setBoolean(int parameterIndex, boolean x)", "full_signature": "@Override public void setBoolean(int parameterIndex, boolean x)", "class_method_signature": "IoTDBPreparedStatement.setBoolean(int parameterIndex, boolean x)", "testcase": false, "constructor": false}, {"identifier": "setByte", "parameters": "(int parameterIndex, byte x)", "modifiers": "@Override public", "return": "void", "signature": "void setByte(int parameterIndex, byte x)", "full_signature": "@Override public void setByte(int parameterIndex, byte x)", "class_method_signature": "IoTDBPreparedStatement.setByte(int parameterIndex, byte x)", "testcase": false, "constructor": false}, {"identifier": "setBytes", "parameters": "(int parameterIndex, byte[] x)", "modifiers": "@Override public", "return": "void", "signature": "void setBytes(int parameterIndex, byte[] x)", "full_signature": "@Override public void setBytes(int parameterIndex, byte[] x)", "class_method_signature": "IoTDBPreparedStatement.setBytes(int parameterIndex, byte[] x)", "testcase": false, "constructor": false}, {"identifier": "setCharacterStream", "parameters": "(int parameterIndex, Reader reader)", "modifiers": "@Override public", "return": "void", "signature": "void setCharacterStream(int parameterIndex, Reader reader)", "full_signature": "@Override public void setCharacterStream(int parameterIndex, Reader reader)", "class_method_signature": "IoTDBPreparedStatement.setCharacterStream(int parameterIndex, Reader reader)", "testcase": false, "constructor": false}, {"identifier": "setCharacterStream", "parameters": "(int parameterIndex, Reader reader, int length)", "modifiers": "@Override public", "return": "void", "signature": "void setCharacterStream(int parameterIndex, Reader reader, int length)", "full_signature": "@Override public void setCharacterStream(int parameterIndex, Reader reader, int length)", "class_method_signature": "IoTDBPreparedStatement.setCharacterStream(int parameterIndex, Reader reader, int length)", "testcase": false, "constructor": false}, {"identifier": "setCharacterStream", "parameters": "(int parameterIndex, Reader reader, long length)", "modifiers": "@Override public", "return": "void", "signature": "void setCharacterStream(int parameterIndex, Reader reader, long length)", "full_signature": "@Override public void setCharacterStream(int parameterIndex, Reader reader, long length)", "class_method_signature": "IoTDBPreparedStatement.setCharacterStream(int parameterIndex, Reader reader, long length)", "testcase": false, "constructor": false}, {"identifier": "setClob", "parameters": "(int parameterIndex, Clob x)", "modifiers": "@Override public", "return": "void", "signature": "void setClob(int parameterIndex, Clob x)", "full_signature": "@Override public void setClob(int parameterIndex, Clob x)", "class_method_signature": "IoTDBPreparedStatement.setClob(int parameterIndex, Clob x)", "testcase": false, "constructor": false}, {"identifier": "setClob", "parameters": "(int parameterIndex, Reader reader)", "modifiers": "@Override public", "return": "void", "signature": "void setClob(int parameterIndex, Reader reader)", "full_signature": "@Override public void setClob(int parameterIndex, Reader reader)", "class_method_signature": "IoTDBPreparedStatement.setClob(int parameterIndex, Reader reader)", "testcase": false, "constructor": false}, {"identifier": "setClob", "parameters": "(int parameterIndex, Reader reader, long length)", "modifiers": "@Override public", "return": "void", "signature": "void setClob(int parameterIndex, Reader reader, long length)", "full_signature": "@Override public void setClob(int parameterIndex, Reader reader, long length)", "class_method_signature": "IoTDBPreparedStatement.setClob(int parameterIndex, Reader reader, long length)", "testcase": false, "constructor": false}, {"identifier": "setDate", "parameters": "(int parameterIndex, Date x)", "modifiers": "@Override public", "return": "void", "signature": "void setDate(int parameterIndex, Date x)", "full_signature": "@Override public void setDate(int parameterIndex, Date x)", "class_method_signature": "IoTDBPreparedStatement.setDate(int parameterIndex, Date x)", "testcase": false, "constructor": false}, {"identifier": "setDate", "parameters": "(int parameterIndex, Date x, Calendar cal)", "modifiers": "@Override public", "return": "void", "signature": "void setDate(int parameterIndex, Date x, Calendar cal)", "full_signature": "@Override public void setDate(int parameterIndex, Date x, Calendar cal)", "class_method_signature": "IoTDBPreparedStatement.setDate(int parameterIndex, Date x, Calendar cal)", "testcase": false, "constructor": false}, {"identifier": "setDouble", "parameters": "(int parameterIndex, double x)", "modifiers": "@Override public", "return": "void", "signature": "void setDouble(int parameterIndex, double x)", "full_signature": "@Override public void setDouble(int parameterIndex, double x)", "class_method_signature": "IoTDBPreparedStatement.setDouble(int parameterIndex, double x)", "testcase": false, "constructor": false}, {"identifier": "setFloat", "parameters": "(int parameterIndex, float x)", "modifiers": "@Override public", "return": "void", "signature": "void setFloat(int parameterIndex, float x)", "full_signature": "@Override public void setFloat(int parameterIndex, float x)", "class_method_signature": "IoTDBPreparedStatement.setFloat(int parameterIndex, float x)", "testcase": false, "constructor": false}, {"identifier": "setInt", "parameters": "(int parameterIndex, int x)", "modifiers": "@Override public", "return": "void", "signature": "void setInt(int parameterIndex, int x)", "full_signature": "@Override public void setInt(int parameterIndex, int x)", "class_method_signature": "IoTDBPreparedStatement.setInt(int parameterIndex, int x)", "testcase": false, "constructor": false}, {"identifier": "setLong", "parameters": "(int parameterIndex, long x)", "modifiers": "@Override public", "return": "void", "signature": "void setLong(int parameterIndex, long x)", "full_signature": "@Override public void setLong(int parameterIndex, long x)", "class_method_signature": "IoTDBPreparedStatement.setLong(int parameterIndex, long x)", "testcase": false, "constructor": false}, {"identifier": "setNCharacterStream", "parameters": "(int parameterIndex, Reader value)", "modifiers": "@Override public", "return": "void", "signature": "void setNCharacterStream(int parameterIndex, Reader value)", "full_signature": "@Override public void setNCharacterStream(int parameterIndex, Reader value)", "class_method_signature": "IoTDBPreparedStatement.setNCharacterStream(int parameterIndex, Reader value)", "testcase": false, "constructor": false}, {"identifier": "setNCharacterStream", "parameters": "(int parameterIndex, Reader value, long length)", "modifiers": "@Override public", "return": "void", "signature": "void setNCharacterStream(int parameterIndex, Reader value, long length)", "full_signature": "@Override public void setNCharacterStream(int parameterIndex, Reader value, long length)", "class_method_signature": "IoTDBPreparedStatement.setNCharacterStream(int parameterIndex, Reader value, long length)", "testcase": false, "constructor": false}, {"identifier": "setNClob", "parameters": "(int parameterIndex, NClob value)", "modifiers": "@Override public", "return": "void", "signature": "void setNClob(int parameterIndex, NClob value)", "full_signature": "@Override public void setNClob(int parameterIndex, NClob value)", "class_method_signature": "IoTDBPreparedStatement.setNClob(int parameterIndex, NClob value)", "testcase": false, "constructor": false}, {"identifier": "setNClob", "parameters": "(int parameterIndex, Reader reader)", "modifiers": "@Override public", "return": "void", "signature": "void setNClob(int parameterIndex, Reader reader)", "full_signature": "@Override public void setNClob(int parameterIndex, Reader reader)", "class_method_signature": "IoTDBPreparedStatement.setNClob(int parameterIndex, Reader reader)", "testcase": false, "constructor": false}, {"identifier": "setNClob", "parameters": "(int parameterIndex, Reader reader, long length)", "modifiers": "@Override public", "return": "void", "signature": "void setNClob(int parameterIndex, Reader reader, long length)", "full_signature": "@Override public void setNClob(int parameterIndex, Reader reader, long length)", "class_method_signature": "IoTDBPreparedStatement.setNClob(int parameterIndex, Reader reader, long length)", "testcase": false, "constructor": false}, {"identifier": "setNString", "parameters": "(int parameterIndex, String value)", "modifiers": "@Override public", "return": "void", "signature": "void setNString(int parameterIndex, String value)", "full_signature": "@Override public void setNString(int parameterIndex, String value)", "class_method_signature": "IoTDBPreparedStatement.setNString(int parameterIndex, String value)", "testcase": false, "constructor": false}, {"identifier": "setNull", "parameters": "(int parameterIndex, int sqlType)", "modifiers": "@Override public", "return": "void", "signature": "void setNull(int parameterIndex, int sqlType)", "full_signature": "@Override public void setNull(int parameterIndex, int sqlType)", "class_method_signature": "IoTDBPreparedStatement.setNull(int parameterIndex, int sqlType)", "testcase": false, "constructor": false}, {"identifier": "setNull", "parameters": "(int parameterIndex, int sqlType, String typeName)", "modifiers": "@Override public", "return": "void", "signature": "void setNull(int parameterIndex, int sqlType, String typeName)", "full_signature": "@Override public void setNull(int parameterIndex, int sqlType, String typeName)", "class_method_signature": "IoTDBPreparedStatement.setNull(int parameterIndex, int sqlType, String typeName)", "testcase": false, "constructor": false}, {"identifier": "setObject", "parameters": "(int parameterIndex, Object x)", "modifiers": "@Override public", "return": "void", "signature": "void setObject(int parameterIndex, Object x)", "full_signature": "@Override public void setObject(int parameterIndex, Object x)", "class_method_signature": "IoTDBPreparedStatement.setObject(int parameterIndex, Object x)", "testcase": false, "constructor": false}, {"identifier": "setObject", "parameters": "(int parameterIndex, Object x, int targetSqlType)", "modifiers": "@Override public", "return": "void", "signature": "void setObject(int parameterIndex, Object x, int targetSqlType)", "full_signature": "@Override public void setObject(int parameterIndex, Object x, int targetSqlType)", "class_method_signature": "IoTDBPreparedStatement.setObject(int parameterIndex, Object x, int targetSqlType)", "testcase": false, "constructor": false}, {"identifier": "setObject", "parameters": "(int parameterIndex, Object x, int targetSqlType, int scaleOrLength)", "modifiers": "@Override public", "return": "void", "signature": "void setObject(int parameterIndex, Object x, int targetSqlType, int scaleOrLength)", "full_signature": "@Override public void setObject(int parameterIndex, Object x, int targetSqlType, int scaleOrLength)", "class_method_signature": "IoTDBPreparedStatement.setObject(int parameterIndex, Object x, int targetSqlType, int scaleOrLength)", "testcase": false, "constructor": false}, {"identifier": "setRef", "parameters": "(int parameterIndex, Ref x)", "modifiers": "@Override public", "return": "void", "signature": "void setRef(int parameterIndex, Ref x)", "full_signature": "@Override public void setRef(int parameterIndex, Ref x)", "class_method_signature": "IoTDBPreparedStatement.setRef(int parameterIndex, Ref x)", "testcase": false, "constructor": false}, {"identifier": "setRowId", "parameters": "(int parameterIndex, RowId x)", "modifiers": "@Override public", "return": "void", "signature": "void setRowId(int parameterIndex, RowId x)", "full_signature": "@Override public void setRowId(int parameterIndex, RowId x)", "class_method_signature": "IoTDBPreparedStatement.setRowId(int parameterIndex, RowId x)", "testcase": false, "constructor": false}, {"identifier": "setSQLXML", "parameters": "(int parameterIndex, SQLXML xmlObject)", "modifiers": "@Override public", "return": "void", "signature": "void setSQLXML(int parameterIndex, SQLXML xmlObject)", "full_signature": "@Override public void setSQLXML(int parameterIndex, SQLXML xmlObject)", "class_method_signature": "IoTDBPreparedStatement.setSQLXML(int parameterIndex, SQLXML xmlObject)", "testcase": false, "constructor": false}, {"identifier": "setShort", "parameters": "(int parameterIndex, short x)", "modifiers": "@Override public", "return": "void", "signature": "void setShort(int parameterIndex, short x)", "full_signature": "@Override public void setShort(int parameterIndex, short x)", "class_method_signature": "IoTDBPreparedStatement.setShort(int parameterIndex, short x)", "testcase": false, "constructor": false}, {"identifier": "setString", "parameters": "(int parameterIndex, String x)", "modifiers": "@Override public", "return": "void", "signature": "void setString(int parameterIndex, String x)", "full_signature": "@Override public void setString(int parameterIndex, String x)", "class_method_signature": "IoTDBPreparedStatement.setString(int parameterIndex, String x)", "testcase": false, "constructor": false}, {"identifier": "setTime", "parameters": "(int parameterIndex, Time x)", "modifiers": "@Override public", "return": "void", "signature": "void setTime(int parameterIndex, Time x)", "full_signature": "@Override public void setTime(int parameterIndex, Time x)", "class_method_signature": "IoTDBPreparedStatement.setTime(int parameterIndex, Time x)", "testcase": false, "constructor": false}, {"identifier": "setTime", "parameters": "(int parameterIndex, Time x, Calendar cal)", "modifiers": "@Override public", "return": "void", "signature": "void setTime(int parameterIndex, Time x, Calendar cal)", "full_signature": "@Override public void setTime(int parameterIndex, Time x, Calendar cal)", "class_method_signature": "IoTDBPreparedStatement.setTime(int parameterIndex, Time x, Calendar cal)", "testcase": false, "constructor": false}, {"identifier": "setTimestamp", "parameters": "(int parameterIndex, Timestamp x)", "modifiers": "@Override public", "return": "void", "signature": "void setTimestamp(int parameterIndex, Timestamp x)", "full_signature": "@Override public void setTimestamp(int parameterIndex, Timestamp x)", "class_method_signature": "IoTDBPreparedStatement.setTimestamp(int parameterIndex, Timestamp x)", "testcase": false, "constructor": false}, {"identifier": "setTimestamp", "parameters": "(int parameterIndex, Timestamp x, Calendar cal)", "modifiers": "@Override public", "return": "void", "signature": "void setTimestamp(int parameterIndex, Timestamp x, Calendar cal)", "full_signature": "@Override public void setTimestamp(int parameterIndex, Timestamp x, Calendar cal)", "class_method_signature": "IoTDBPreparedStatement.setTimestamp(int parameterIndex, Timestamp x, Calendar cal)", "testcase": false, "constructor": false}, {"identifier": "setURL", "parameters": "(int parameterIndex, URL x)", "modifiers": "@Override public", "return": "void", "signature": "void setURL(int parameterIndex, URL x)", "full_signature": "@Override public void setURL(int parameterIndex, URL x)", "class_method_signature": "IoTDBPreparedStatement.setURL(int parameterIndex, URL x)", "testcase": false, "constructor": false}, {"identifier": "setUnicodeStream", "parameters": "(int parameterIndex, InputStream x, int length)", "modifiers": "@Override public", "return": "void", "signature": "void setUnicodeStream(int parameterIndex, InputStream x, int length)", "full_signature": "@Override public void setUnicodeStream(int parameterIndex, InputStream x, int length)", "class_method_signature": "IoTDBPreparedStatement.setUnicodeStream(int parameterIndex, InputStream x, int length)", "testcase": false, "constructor": false}, {"identifier": "createCompleteSql", "parameters": "(final String sql, Map<Integer, String> parameters)", "modifiers": "private", "return": "String", "signature": "String createCompleteSql(final String sql, Map<Integer, String> parameters)", "full_signature": "private String createCompleteSql(final String sql, Map<Integer, String> parameters)", "class_method_signature": "IoTDBPreparedStatement.createCompleteSql(final String sql, Map<Integer, String> parameters)", "testcase": false, "constructor": false}, {"identifier": "splitSqlStatement", "parameters": "(final String sql)", "modifiers": "private", "return": "List<String>", "signature": "List<String> splitSqlStatement(final String sql)", "full_signature": "private List<String> splitSqlStatement(final String sql)", "class_method_signature": "IoTDBPreparedStatement.splitSqlStatement(final String sql)", "testcase": false, "constructor": false}], "file": "jdbc/src/main/java/org/apache/iotdb/jdbc/IoTDBPreparedStatement.java"}, "focal_method": {"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean execute() throws SQLException {\n    return super.execute(createCompleteSql(sql, parameters));\n  }", "signature": "boolean execute()", "full_signature": "@Override public boolean execute()", "class_method_signature": "IoTDBPreparedStatement.execute()", "testcase": false, "constructor": false, "invocations": ["execute", "createCompleteSql"]}, "repository": {"repo_id": 158975124, "url": "https://github.com/apache/incubator-iotdb", "stars": 449, "created": "11/24/2018 9:29:17 PM +00:00", "updates": "2020-01-21T08:10:15+00:00", "fork": "False", "license": "licensed"}}