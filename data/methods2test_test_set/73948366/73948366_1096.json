{"test_class": {"identifier": "ZTSClientNotificationSenderImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "servers/zts/src/test/java/com/yahoo/athenz/zts/notification/ZTSClientNotificationSenderImplTest.java"}, "test_case": {"identifier": "testInit", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInit() {\n        ZTSClientNotificationSenderImpl ztsClientNotificationSender = new ZTSClientNotificationSenderImpl();\n        NotificationManager notificationManager = Mockito.mock(NotificationManager.class);\n        RolesProvider rolesProvider = Mockito.mock(RolesProvider.class);\n        String serverName = \"testServer\";\n        boolean initResult = ztsClientNotificationSender.init(notificationManager, rolesProvider, serverName);\n        assertTrue(initResult);\n        initResult = ztsClientNotificationSender.init(notificationManager, rolesProvider, null);\n        assertFalse(initResult);\n        initResult = ztsClientNotificationSender.init(notificationManager, null, serverName);\n        assertFalse(initResult);\n        initResult = ztsClientNotificationSender.init(null, rolesProvider, serverName);\n        assertFalse(initResult);\n    }", "signature": "void testInit()", "full_signature": "@Test public void testInit()", "class_method_signature": "ZTSClientNotificationSenderImplTest.testInit()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "init", "assertTrue", "init", "assertFalse", "init", "assertFalse", "init", "assertFalse"]}, "focal_class": {"identifier": "ZTSClientNotificationSenderImpl", "superclass": "", "interfaces": "implements ZTSClientNotificationSender", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ZTSClientNotificationSenderImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ZTSClientNotificationSenderImpl.class)", "var_name": "LOGGER"}, {"original_string": "private NotificationManager notificationManager;", "modifier": "private", "type": "NotificationManager", "declarator": "notificationManager", "var_name": "notificationManager"}, {"original_string": "private RolesProvider rolesProvider;", "modifier": "private", "type": "RolesProvider", "declarator": "rolesProvider", "var_name": "rolesProvider"}, {"original_string": "private String serverName;", "modifier": "private", "type": "String", "declarator": "serverName", "var_name": "serverName"}, {"original_string": "private boolean isInit = false;", "modifier": "private", "type": "boolean", "declarator": "isInit = false", "var_name": "isInit"}], "methods": [{"identifier": "init", "parameters": "(NotificationManager notificationManager, RolesProvider rolesProvider, String serverName)", "modifiers": "public", "return": "boolean", "signature": "boolean init(NotificationManager notificationManager, RolesProvider rolesProvider, String serverName)", "full_signature": "public boolean init(NotificationManager notificationManager, RolesProvider rolesProvider, String serverName)", "class_method_signature": "ZTSClientNotificationSenderImpl.init(NotificationManager notificationManager, RolesProvider rolesProvider, String serverName)", "testcase": false, "constructor": false}, {"identifier": "sendNotification", "parameters": "(ZTSClientNotification ztsClientNotification)", "modifiers": "@Override public", "return": "void", "signature": "void sendNotification(ZTSClientNotification ztsClientNotification)", "full_signature": "@Override public void sendNotification(ZTSClientNotification ztsClientNotification)", "class_method_signature": "ZTSClientNotificationSenderImpl.sendNotification(ZTSClientNotification ztsClientNotification)", "testcase": false, "constructor": false}], "file": "servers/zts/src/main/java/com/yahoo/athenz/zts/notification/ZTSClientNotificationSenderImpl.java"}, "focal_method": {"identifier": "init", "parameters": "(NotificationManager notificationManager, RolesProvider rolesProvider, String serverName)", "modifiers": "public", "return": "boolean", "body": "public boolean init(NotificationManager notificationManager, RolesProvider rolesProvider, String serverName) {\n        this.isInit = false;\n        this.notificationManager = notificationManager;\n        this.rolesProvider = rolesProvider;\n        this.serverName = serverName;\n\n        if (this.notificationManager != null && this.rolesProvider != null && !StringUtil.isEmpty(serverName)) {\n            this.isInit = true;\n        } else {\n            LOGGER.warn(\"ZTSClientNotificationSenderImpl must be initiated with all arguments before it can be used\");\n        }\n\n        return this.isInit;\n    }", "signature": "boolean init(NotificationManager notificationManager, RolesProvider rolesProvider, String serverName)", "full_signature": "public boolean init(NotificationManager notificationManager, RolesProvider rolesProvider, String serverName)", "class_method_signature": "ZTSClientNotificationSenderImpl.init(NotificationManager notificationManager, RolesProvider rolesProvider, String serverName)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "warn"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}