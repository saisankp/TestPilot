{"test_class": {"identifier": "PrimeFactorsTest", "superclass": "", "interfaces": "", "fields": [], "file": "prime-factors/java/20160912-Dom-Alex/src/test/java/PrimeFactorsTest.java"}, "test_case": {"identifier": "testThat6Returns2And3", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testThat6Returns2And3() {\n        PrimeFactors factors = new PrimeFactors();\n        List<Integer> result = factors.getFactorsOf(6);\n        assertThat(result).isEqualTo(Arrays.asList(2, 3));\n    }", "signature": "void testThat6Returns2And3()", "full_signature": "@Test public void testThat6Returns2And3()", "class_method_signature": "PrimeFactorsTest.testThat6Returns2And3()", "testcase": true, "constructor": false, "invocations": ["getFactorsOf", "isEqualTo", "assertThat", "asList"]}, "focal_class": {"identifier": "PrimeFactors", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getFactorsOf", "parameters": "(int number)", "modifiers": "public", "return": "List<Integer>", "signature": "List<Integer> getFactorsOf(int number)", "full_signature": "public List<Integer> getFactorsOf(int number)", "class_method_signature": "PrimeFactors.getFactorsOf(int number)", "testcase": false, "constructor": false}], "file": "prime-factors/java/20160912-Dom-Alex/src/main/java/PrimeFactors.java"}, "focal_method": {"identifier": "getFactorsOf", "parameters": "(int number)", "modifiers": "public", "return": "List<Integer>", "body": "public List<Integer> getFactorsOf(int number) {\n        List<Integer> factors = new ArrayList<Integer>();\n\n        int divisor = 2;\n\n        while (number != 1) {\n            while (number % divisor == 0) {\n                number = number / divisor;\n                factors.add(divisor);\n            }\n            divisor++;\n        }\n\n        return factors;\n    }", "signature": "List<Integer> getFactorsOf(int number)", "full_signature": "public List<Integer> getFactorsOf(int number)", "class_method_signature": "PrimeFactors.getFactorsOf(int number)", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": 6509909, "url": "https://github.com/novoda/dojos", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 72, "size": 12987, "license": "licensed"}}