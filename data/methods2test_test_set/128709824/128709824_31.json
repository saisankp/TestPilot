{"test_class": {"identifier": "SofaRegistrySubscribeCallbackTest", "superclass": "", "interfaces": "", "fields": [], "file": "registry/registry-sofa/src/test/java/com/alipay/sofa/rpc/registry/sofa/SofaRegistrySubscribeCallbackTest.java"}, "test_case": {"identifier": "handleData", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void handleData() throws Exception {\n\n        Subscriber listSub = new MockSubscribe(5);\n        Configurator attrSub = new MockConfigurator(2);\n\n        final AtomicInteger ps = new AtomicInteger(0);\n        ProviderInfoListener listener = new ProviderInfoListener() {\n            @Override\n            public void addProvider(ProviderGroup providerGroup) {\n                ps.addAndGet(providerGroup.size());\n            }\n\n            @Override\n            public void removeProvider(ProviderGroup providerGroup) {\n                ps.addAndGet(-providerGroup.size());\n            }\n\n            @Override\n            public void updateProviders(ProviderGroup providerGroup) {\n                ps.set(providerGroup.size());\n            }\n\n            @Override\n            public void updateAllProviders(List<ProviderGroup> providerGroups) {\n                ps.set(0);\n                for (ProviderGroup providerGroup : providerGroups) {\n                    ps.addAndGet(providerGroup.size());\n                }\n            }\n        };\n\n        SofaRegistrySubscribeCallback callback = new SofaRegistrySubscribeCallback();\n        callback.addProviderInfoListener(\"xxxxx\", new ConsumerConfig(), listener);\n        Assert.assertTrue((!callback.flag[0].get()) && (!callback.flag[1].get()));\n\n        callback.handleData(\"xxxxx\", buildConfigPs(2));\n        try {\n            Thread.sleep(200);\n        } finally {\n        }\n        Assert.assertTrue(callback.flag[1].get());\n        Assert.assertTrue(ps.get() == 0);\n\n        callback.handleData(\"xxxxx\", buildPs(5));\n        try {\n            Thread.sleep(200);\n        } finally {\n        }\n        Assert.assertTrue(callback.flag == null);\n        //default+localZone\n        Assert.assertEquals(ps.get(), 5 + 5);\n\n        callback = new SofaRegistrySubscribeCallback();\n        ps.set(0);\n        callback.addProviderInfoListener(\"yyyyy\", new ConsumerConfig(), listener);\n        callback.handleData(\"yyyyy\", buildPs(5));\n        try {\n            Thread.sleep(200);\n        } finally {\n        }\n        callback.handleData(\"yyyyy\", buildConfigPs(2));\n        try {\n            Thread.sleep(200);\n        } finally {\n        }\n        Assert.assertTrue(callback.flag == null);\n        Assert.assertEquals(ps.get(), 5 + 5);\n\n    }", "signature": "void handleData()", "full_signature": "@Test public void handleData()", "class_method_signature": "SofaRegistrySubscribeCallbackTest.handleData()", "testcase": true, "constructor": false, "invocations": ["addAndGet", "size", "addAndGet", "size", "set", "size", "set", "addAndGet", "size", "addProviderInfoListener", "assertTrue", "get", "get", "handleData", "buildConfigPs", "sleep", "assertTrue", "get", "assertTrue", "get", "handleData", "buildPs", "sleep", "assertTrue", "assertEquals", "get", "set", "addProviderInfoListener", "handleData", "buildPs", "sleep", "handleData", "buildConfigPs", "sleep", "assertTrue", "assertEquals", "get"]}, "focal_class": {"identifier": "SofaRegistrySubscribeCallback", "superclass": "", "interfaces": "implements SubscriberDataObserver, ConfigDataObserver", "fields": [{"original_string": "private static final Logger                             LOGGER                = LoggerFactory\n                                                                                      .getLogger(SofaRegistrySubscribeCallback.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER                = LoggerFactory\n                                                                                      .getLogger(SofaRegistrySubscribeCallback.class)", "var_name": "LOGGER"}, {"original_string": "public static final String                              CONFIG_SEPARATOR      = \"#\";", "modifier": "public static final", "type": "String", "declarator": "CONFIG_SEPARATOR      = \"#\"", "var_name": "CONFIG_SEPARATOR"}, {"original_string": "public static final String                              DEFAULT_ZONE          = \"DEFAULT_ZONE\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_ZONE          = \"DEFAULT_ZONE\"", "var_name": "DEFAULT_ZONE"}, {"original_string": "ConcurrentHashMap<ConsumerConfig, ProviderInfoListener> providerInfoListeners = new ConcurrentHashMap<ConsumerConfig, ProviderInfoListener>();", "modifier": "", "type": "ConcurrentHashMap<ConsumerConfig, ProviderInfoListener>", "declarator": "providerInfoListeners = new ConcurrentHashMap<ConsumerConfig, ProviderInfoListener>()", "var_name": "providerInfoListeners"}, {"original_string": "private UserData                                        lastUserData;", "modifier": "private", "type": "UserData", "declarator": "lastUserData", "var_name": "lastUserData"}, {"original_string": "private ConfigData                                      lastConfigData;", "modifier": "private", "type": "ConfigData", "declarator": "lastConfigData", "var_name": "lastConfigData"}, {"original_string": "AtomicBoolean[] flag = new AtomicBoolean[] { new AtomicBoolean(), new AtomicBoolean() };", "modifier": "", "type": "AtomicBoolean[]", "declarator": "flag = new AtomicBoolean[] { new AtomicBoolean(), new AtomicBoolean() }", "var_name": "flag"}], "methods": [{"identifier": "SofaRegistrySubscribeCallback", "parameters": "()", "modifiers": "public", "return": "", "signature": " SofaRegistrySubscribeCallback()", "full_signature": "public  SofaRegistrySubscribeCallback()", "class_method_signature": "SofaRegistrySubscribeCallback.SofaRegistrySubscribeCallback()", "testcase": false, "constructor": true}, {"identifier": "handleData", "parameters": "(String dataId, UserData userData)", "modifiers": "@Override public", "return": "void", "signature": "void handleData(String dataId, UserData userData)", "full_signature": "@Override public void handleData(String dataId, UserData userData)", "class_method_signature": "SofaRegistrySubscribeCallback.handleData(String dataId, UserData userData)", "testcase": false, "constructor": false}, {"identifier": "canNotify", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean canNotify()", "full_signature": "private boolean canNotify()", "class_method_signature": "SofaRegistrySubscribeCallback.canNotify()", "testcase": false, "constructor": false}, {"identifier": "handleDataToListener", "parameters": "(String dataId, ConsumerConfig config, ProviderInfoListener listener)", "modifiers": "", "return": "void", "signature": "void handleDataToListener(String dataId, ConsumerConfig config, ProviderInfoListener listener)", "full_signature": " void handleDataToListener(String dataId, ConsumerConfig config, ProviderInfoListener listener)", "class_method_signature": "SofaRegistrySubscribeCallback.handleDataToListener(String dataId, ConsumerConfig config, ProviderInfoListener listener)", "testcase": false, "constructor": false}, {"identifier": "flatUserData", "parameters": "(UserData userData)", "modifiers": "protected", "return": "List<String>", "signature": "List<String> flatUserData(UserData userData)", "full_signature": "protected List<String> flatUserData(UserData userData)", "class_method_signature": "SofaRegistrySubscribeCallback.flatUserData(UserData userData)", "testcase": false, "constructor": false}, {"identifier": "flatComposeData", "parameters": "(ComposeUserData userData)", "modifiers": "protected", "return": "List<ProviderInfo>", "signature": "List<ProviderInfo> flatComposeData(ComposeUserData userData)", "full_signature": "protected List<ProviderInfo> flatComposeData(ComposeUserData userData)", "class_method_signature": "SofaRegistrySubscribeCallback.flatComposeData(ComposeUserData userData)", "testcase": false, "constructor": false}, {"identifier": "composeUserAndConfigData", "parameters": "(UserData userData, ConfigData configData)", "modifiers": "private", "return": "ComposeUserData", "signature": "ComposeUserData composeUserAndConfigData(UserData userData, ConfigData configData)", "full_signature": "private ComposeUserData composeUserAndConfigData(UserData userData, ConfigData configData)", "class_method_signature": "SofaRegistrySubscribeCallback.composeUserAndConfigData(UserData userData, ConfigData configData)", "testcase": false, "constructor": false}, {"identifier": "mergeProviderInfo", "parameters": "(List<String> userDatas, List<String> configDatas)", "modifiers": "", "return": "List<ProviderInfo>", "signature": "List<ProviderInfo> mergeProviderInfo(List<String> userDatas, List<String> configDatas)", "full_signature": " List<ProviderInfo> mergeProviderInfo(List<String> userDatas, List<String> configDatas)", "class_method_signature": "SofaRegistrySubscribeCallback.mergeProviderInfo(List<String> userDatas, List<String> configDatas)", "testcase": false, "constructor": false}, {"identifier": "addProviderInfoListener", "parameters": "(String dataId, ConsumerConfig consumerConfig,\n                                 ProviderInfoListener listener)", "modifiers": "", "return": "void", "signature": "void addProviderInfoListener(String dataId, ConsumerConfig consumerConfig,\n                                 ProviderInfoListener listener)", "full_signature": " void addProviderInfoListener(String dataId, ConsumerConfig consumerConfig,\n                                 ProviderInfoListener listener)", "class_method_signature": "SofaRegistrySubscribeCallback.addProviderInfoListener(String dataId, ConsumerConfig consumerConfig,\n                                 ProviderInfoListener listener)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String dataId, ConsumerConfig consumerConfig)", "modifiers": "", "return": "void", "signature": "void remove(String dataId, ConsumerConfig consumerConfig)", "full_signature": " void remove(String dataId, ConsumerConfig consumerConfig)", "class_method_signature": "SofaRegistrySubscribeCallback.remove(String dataId, ConsumerConfig consumerConfig)", "testcase": false, "constructor": false}, {"identifier": "getListenerNum", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getListenerNum()", "full_signature": "public int getListenerNum()", "class_method_signature": "SofaRegistrySubscribeCallback.getListenerNum()", "testcase": false, "constructor": false}, {"identifier": "printUserData", "parameters": "(String dataId, UserData userData)", "modifiers": "private", "return": "void", "signature": "void printUserData(String dataId, UserData userData)", "full_signature": "private void printUserData(String dataId, UserData userData)", "class_method_signature": "SofaRegistrySubscribeCallback.printUserData(String dataId, UserData userData)", "testcase": false, "constructor": false}, {"identifier": "printConfigData", "parameters": "(String dataId, ConfigData configData)", "modifiers": "private", "return": "void", "signature": "void printConfigData(String dataId, ConfigData configData)", "full_signature": "private void printConfigData(String dataId, ConfigData configData)", "class_method_signature": "SofaRegistrySubscribeCallback.printConfigData(String dataId, ConfigData configData)", "testcase": false, "constructor": false}, {"identifier": "handleData", "parameters": "(String dataId, ConfigData configData)", "modifiers": "@Override public", "return": "void", "signature": "void handleData(String dataId, ConfigData configData)", "full_signature": "@Override public void handleData(String dataId, ConfigData configData)", "class_method_signature": "SofaRegistrySubscribeCallback.handleData(String dataId, ConfigData configData)", "testcase": false, "constructor": false}, {"identifier": "composeAndNotify", "parameters": "(UserData userData, ConfigData configData)", "modifiers": "private", "return": "void", "signature": "void composeAndNotify(UserData userData, ConfigData configData)", "full_signature": "private void composeAndNotify(UserData userData, ConfigData configData)", "class_method_signature": "SofaRegistrySubscribeCallback.composeAndNotify(UserData userData, ConfigData configData)", "testcase": false, "constructor": false}, {"identifier": "notifyToListener", "parameters": "(ComposeUserData mergedResult)", "modifiers": "private", "return": "void", "signature": "void notifyToListener(ComposeUserData mergedResult)", "full_signature": "private void notifyToListener(ComposeUserData mergedResult)", "class_method_signature": "SofaRegistrySubscribeCallback.notifyToListener(ComposeUserData mergedResult)", "testcase": false, "constructor": false}, {"identifier": "notifyToListener", "parameters": "(ProviderInfoListener listener, ComposeUserData mergedResult)", "modifiers": "private", "return": "void", "signature": "void notifyToListener(ProviderInfoListener listener, ComposeUserData mergedResult)", "full_signature": "private void notifyToListener(ProviderInfoListener listener, ComposeUserData mergedResult)", "class_method_signature": "SofaRegistrySubscribeCallback.notifyToListener(ProviderInfoListener listener, ComposeUserData mergedResult)", "testcase": false, "constructor": false}], "file": "registry/registry-sofa/src/main/java/com/alipay/sofa/rpc/registry/sofa/SofaRegistrySubscribeCallback.java"}, "focal_method": {"identifier": "handleData", "parameters": "(String dataId, UserData userData)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void handleData(String dataId, UserData userData) {\n\n        if (dataId == null) {\n            return;\n        }\n\n        this.lastUserData = userData;\n\n        printUserData(dataId, userData);\n        if (flag != null) {\n            flag[0].compareAndSet(false, true);\n        }\n\n        if (canNotify()) {\n            flag = null; // \u5df2\u7ecf\u6ca1\u4f5c\u7528\u4e86\n            composeAndNotify(userData, lastConfigData);\n        }\n    }", "signature": "void handleData(String dataId, UserData userData)", "full_signature": "@Override public void handleData(String dataId, UserData userData)", "class_method_signature": "SofaRegistrySubscribeCallback.handleData(String dataId, UserData userData)", "testcase": false, "constructor": false, "invocations": ["printUserData", "compareAndSet", "canNotify", "composeAndNotify"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}