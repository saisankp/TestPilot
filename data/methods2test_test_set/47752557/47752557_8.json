{"test_class": {"identifier": "CommonDAOTest", "superclass": "extends BaseSpringJunitUtil", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate CommonDAO commonDAO;", "modifier": "@Autowired\n\tprivate", "type": "CommonDAO", "declarator": "commonDAO", "var_name": "commonDAO"}], "file": "xa-collector/src/test/java/com/xinnet/xa/collector/general/dao/CommonDAOTest.java"}, "test_case": {"identifier": "testExecSQLScript", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testExecSQLScript() {\n\t\tString sql = \"CREATE TABLE `base_url_info_test` ( \"+\n\t\t\t\t\t \"`id` int(11) NOT NULL AUTO_INCREMENT,\"+\n\t\t\t\t\t \"`url` varchar(255) DEFAULT NULL,\"+\n\t\t\t\t\t \"`url_detail_id` int(11) DEFAULT NULL,\"+\n\t\t\t\t\t \"`search_type` int(11) DEFAULT NULL COMMENT '1\u552f\u4e00\uff0c2\u7c7b',\"+\n\t\t\t\t\t \"`priority` int(11) DEFAULT '0' COMMENT '\u4f18\u5148\u7ea7\u968f\u6570\u5b57\u589e\u5927',\"+\n\t\t\t\t\t \"PRIMARY KEY (`id`)\"+\n\t\t\t\t\t \") ENGINE=InnoDB AUTO_INCREMENT=43 DEFAULT CHARSET=utf8;\";\n\t\tcommonDAO.execSQLScript(sql);\n\t}", "signature": "void testExecSQLScript()", "full_signature": "@Test public void testExecSQLScript()", "class_method_signature": "CommonDAOTest.testExecSQLScript()", "testcase": true, "constructor": false, "invocations": ["execSQLScript"]}, "focal_class": {"identifier": "CommonDAO", "superclass": "", "interfaces": "implements ICommonDAO", "fields": [{"original_string": "private Logger logger = Logger.getLogger(CommonDAO.class);", "modifier": "private", "type": "Logger", "declarator": "logger = Logger.getLogger(CommonDAO.class)", "var_name": "logger"}, {"original_string": "@PersistenceUnit\n    private EntityManagerFactory emf;", "modifier": "@PersistenceUnit\n    private", "type": "EntityManagerFactory", "declarator": "emf", "var_name": "emf"}], "methods": [{"identifier": "findByNativeSQL", "parameters": "(String sql, Object[] params)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "List<T>", "signature": "List<T> findByNativeSQL(String sql, Object[] params)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public List<T> findByNativeSQL(String sql, Object[] params)", "class_method_signature": "CommonDAO.findByNativeSQL(String sql, Object[] params)", "testcase": false, "constructor": false}, {"identifier": "findByNativeSQL", "parameters": "(String sql, Map<String, Object> params)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "List<T>", "signature": "List<T> findByNativeSQL(String sql, Map<String, Object> params)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public List<T> findByNativeSQL(String sql, Map<String, Object> params)", "class_method_signature": "CommonDAO.findByNativeSQL(String sql, Map<String, Object> params)", "testcase": false, "constructor": false}, {"identifier": "execSQLScript", "parameters": "(String sql)", "modifiers": "@Override public", "return": "void", "signature": "void execSQLScript(String sql)", "full_signature": "@Override public void execSQLScript(String sql)", "class_method_signature": "CommonDAO.execSQLScript(String sql)", "testcase": false, "constructor": false}], "file": "xa-collector/src/main/java/com/xinnet/xa/collector/general/dao/CommonDAO.java"}, "focal_method": {"identifier": "execSQLScript", "parameters": "(String sql)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void execSQLScript(String sql) {\n\t\tEntityManager em = emf.createEntityManager();\t\n\t\ttry{\n\t\t\tem.createNativeQuery(sql);\n\t\t}\n\t\tcatch (PersistenceException e) {\n\t\t\tlogger.error(\"Class CommonDAO is method findByNativeSQL(String sql) error!\",e);\n\t\t}\n\t\tfinally{\n\t\t\tem.close();\n\t\t}\n\t}", "signature": "void execSQLScript(String sql)", "full_signature": "@Override public void execSQLScript(String sql)", "class_method_signature": "CommonDAO.execSQLScript(String sql)", "testcase": false, "constructor": false, "invocations": ["createEntityManager", "createNativeQuery", "error", "close"]}, "repository": {"repo_id": 47752557, "url": "https://github.com/yanweiqi/xinnet-analysis", "language": "Java", "is_fork": false, "fork_count": 16, "stargazer_count": 13, "size": 187, "license": "licensed"}}