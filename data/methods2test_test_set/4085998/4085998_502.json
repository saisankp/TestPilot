{"test_class": {"identifier": "urn_perun_user_facility_attribute_def_def_defaultUnixGIDTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private urn_perun_user_facility_attribute_def_def_defaultUnixGID classInstance;", "modifier": "private", "type": "urn_perun_user_facility_attribute_def_def_defaultUnixGID", "declarator": "classInstance", "var_name": "classInstance"}, {"original_string": "private Attribute attributeToCheck;", "modifier": "private", "type": "Attribute", "declarator": "attributeToCheck", "var_name": "attributeToCheck"}, {"original_string": "private Attribute namespace;", "modifier": "private", "type": "Attribute", "declarator": "namespace", "var_name": "namespace"}, {"original_string": "private Attribute unixGroupNamespace;", "modifier": "private", "type": "Attribute", "declarator": "unixGroupNamespace", "var_name": "unixGroupNamespace"}, {"original_string": "private Attribute resourceGidAttribute;", "modifier": "private", "type": "Attribute", "declarator": "resourceGidAttribute", "var_name": "resourceGidAttribute"}, {"original_string": "private Attribute groupGidAttribute;", "modifier": "private", "type": "Attribute", "declarator": "groupGidAttribute", "var_name": "groupGidAttribute"}, {"original_string": "private Facility facility = new Facility();", "modifier": "private", "type": "Facility", "declarator": "facility = new Facility()", "var_name": "facility"}, {"original_string": "private User user = new User();", "modifier": "private", "type": "User", "declarator": "user = new User()", "var_name": "user"}, {"original_string": "private PerunSessionImpl sess;", "modifier": "private", "type": "PerunSessionImpl", "declarator": "sess", "var_name": "sess"}], "file": "perun-core/src/test/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_facility_attribute_def_def_defaultUnixGIDTest.java"}, "test_case": {"identifier": "testSemanticsCorrect", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSemanticsCorrect() throws Exception {\n\t\tSystem.out.println(\"testSemanticsCorrect()\");\n\t\tResource resource = new Resource();\n\t\tList<Resource> list = new ArrayList<>();\n\t\tlist.add(resource);\n\t\twhen(sess.getPerunBl().getResourcesManagerBl().getResourcesByAttribute(any(PerunSessionImpl.class), any(Attribute.class))).thenReturn(list);\n\t\twhen(sess.getPerunBl().getUsersManagerBl().getAllowedResources(sess, facility, user)).thenReturn(list);\n\n\t\tclassInstance.checkAttributeSemantics(sess, user, facility, attributeToCheck);\n\t}", "signature": "void testSemanticsCorrect()", "full_signature": "@Test public void testSemanticsCorrect()", "class_method_signature": "urn_perun_user_facility_attribute_def_def_defaultUnixGIDTest.testSemanticsCorrect()", "testcase": true, "constructor": false, "invocations": ["println", "add", "thenReturn", "when", "getResourcesByAttribute", "getResourcesManagerBl", "getPerunBl", "any", "any", "thenReturn", "when", "getAllowedResources", "getUsersManagerBl", "getPerunBl", "checkAttributeSemantics"]}, "focal_class": {"identifier": "urn_perun_user_facility_attribute_def_def_defaultUnixGID", "superclass": "extends UserFacilityAttributesModuleAbstract", "interfaces": "implements UserFacilityAttributesModuleImplApi", "fields": [], "methods": [{"identifier": "checkAttributeSemantics", "parameters": "(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "modifiers": "@Override public", "return": "void", "signature": "void checkAttributeSemantics(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "full_signature": "@Override public void checkAttributeSemantics(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "class_method_signature": "urn_perun_user_facility_attribute_def_def_defaultUnixGID.checkAttributeSemantics(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "testcase": false, "constructor": false}, {"identifier": "getDependencies", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getDependencies()", "full_signature": "@Override public List<String> getDependencies()", "class_method_signature": "urn_perun_user_facility_attribute_def_def_defaultUnixGID.getDependencies()", "testcase": false, "constructor": false}, {"identifier": "getAttributeDefinition", "parameters": "()", "modifiers": "public", "return": "AttributeDefinition", "signature": "AttributeDefinition getAttributeDefinition()", "full_signature": "public AttributeDefinition getAttributeDefinition()", "class_method_signature": "urn_perun_user_facility_attribute_def_def_defaultUnixGID.getAttributeDefinition()", "testcase": false, "constructor": false}], "file": "perun-core/src/main/java/cz/metacentrum/perun/core/impl/modules/attributes/urn_perun_user_facility_attribute_def_def_defaultUnixGID.java"}, "focal_method": {"identifier": "checkAttributeSemantics", "parameters": "(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void checkAttributeSemantics(PerunSessionImpl sess, User user, Facility facility, Attribute attribute) throws WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n\t\tInteger gid = attribute.valueAsInteger();\n\t\tif(gid == null) return;\n\n\t\tAttribute namespaceAttribute;\n\t\ttry {\n\t\t\tnamespaceAttribute = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, facility, AttributesManager.NS_FACILITY_ATTR_DEF + \":unixGID-namespace\");\n\t\t} catch(AttributeNotExistsException ex) {\n\t\t\tthrow new ConsistencyErrorException(ex);\n\t\t}\n\t\tif(namespaceAttribute.getValue() == null) throw new WrongReferenceAttributeValueException(attribute, namespaceAttribute, user, facility, facility, null, \"Reference attribute is null\");\n\t\tString namespaceName = namespaceAttribute.valueAsString();\n\n\t\tAttribute unixGroupNameNamespace;\n\t\ttry {\n\t\t\tunixGroupNameNamespace = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, facility, AttributesManager.NS_FACILITY_ATTR_DEF + \":unixGroupName-namespace\");\n\t\t} catch(AttributeNotExistsException ex) {\n\t\t\tthrow new ConsistencyErrorException(ex);\n\t\t}\n\t\tif(unixGroupNameNamespace.getValue() == null) throw new WrongReferenceAttributeValueException(attribute, unixGroupNameNamespace, user, facility, facility, null, \"Reference attribute is null\");\n\t\tString unixGroupNameNamespaceName = unixGroupNameNamespace.valueAsString();\n\n\t\tAttribute resourceGidAttribute;\n\t\ttry {\n\t\t\tresourceGidAttribute = new Attribute(sess.getPerunBl().getAttributesManagerBl().getAttributeDefinition(sess, AttributesManager.NS_RESOURCE_ATTR_DEF + \":unixGID-namespace:\" + namespaceName));\n\t\t} catch(AttributeNotExistsException ex) {\n\t\t\tthrow new ConsistencyErrorException(\"Namespace from value of \" + namespaceAttribute + \" doesn't exists. (Resource attribute \" + AttributesManager.NS_RESOURCE_ATTR_DEF + \":unixGID-namespace:\" + namespaceName + \" doesn't exists\", ex);\n\t\t}\n\t\tresourceGidAttribute.setValue(attribute.getValue());\n\t\tList<Resource> allowedResources = sess.getPerunBl().getUsersManagerBl().getAllowedResources(sess, facility, user);\n\t\tList<Resource> allowedResourcesWithSameGid = sess.getPerunBl().getResourcesManagerBl().getResourcesByAttribute(sess, resourceGidAttribute);\n\t\tallowedResourcesWithSameGid.retainAll(allowedResources);\n\n\t\tif(!allowedResourcesWithSameGid.isEmpty()) return; //We found at least one allowed resource with same gid as the user have => attribute is OK\n\n\t\tAttribute groupGidAttribute;\n\t\ttry {\n\t\t\tgroupGidAttribute = new Attribute(sess.getPerunBl().getAttributesManagerBl().getAttributeDefinition(sess, AttributesManager.NS_GROUP_ATTR_DEF + \":unixGID-namespace:\" + namespaceName));\n\t\t\tgroupGidAttribute.setValue(attribute.getValue());\n\t\t} catch(AttributeNotExistsException ex) {\n\t\t\tthrow new ConsistencyErrorException(\"Namespace from value of \" + namespaceAttribute + \" doesn't exists. (Group-resource attribute \" + AttributesManager.NS_GROUP_ATTR_DEF + \":unixGID-namespace:\" + namespaceName + \" doesn't exists\", ex);\n\t\t}\n\n\t\tList<Group> groupWithSameGid = sess.getPerunBl().getGroupsManagerBl().getGroupsByAttribute(sess, groupGidAttribute);\n\n\t\tgroupWithSameGid.retainAll(sess.getPerunBl().getFacilitiesManagerBl().getAllowedGroups(sess, facility, null, null));\n\n\t\tfor(Group group : groupWithSameGid) {\n\t\t\t//check if group has unix group name in namespace required by facility\n\t\t\ttry {\n\t\t\t\tAttribute unixGroupName = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, group, AttributesManager.NS_GROUP_ATTR_DEF + \":unixGroupName-namespace:\" + unixGroupNameNamespaceName);\n\t\t\t\tif(unixGroupName.getValue() == null || (unixGroupName.valueAsString()).isEmpty()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} catch(AttributeNotExistsException ex) {\n\t\t\t\tthrow new InternalErrorException(ex);\n\t\t\t}\n\n\t\t\t//check if the user is member of the group\n\t\t\tif(sess.getPerunBl().getGroupsManagerBl().isUserMemberOfGroup(sess, user, group)) {\n\t\t\t\treturn;\t//attribute is OK\n\t\t\t}\n\t\t}\n\n\t\tthrow new WrongReferenceAttributeValueException(attribute, null, user, facility, \"User isn't allowed to have the default unix group which have this gid (\" + gid + \") or such group doesn't exist.  \" + user);\n\n\t}", "signature": "void checkAttributeSemantics(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "full_signature": "@Override public void checkAttributeSemantics(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "class_method_signature": "urn_perun_user_facility_attribute_def_def_defaultUnixGID.checkAttributeSemantics(PerunSessionImpl sess, User user, Facility facility, Attribute attribute)", "testcase": false, "constructor": false, "invocations": ["valueAsInteger", "getAttribute", "getAttributesManagerBl", "getPerunBl", "getValue", "valueAsString", "getAttribute", "getAttributesManagerBl", "getPerunBl", "getValue", "valueAsString", "getAttributeDefinition", "getAttributesManagerBl", "getPerunBl", "setValue", "getValue", "getAllowedResources", "getUsersManagerBl", "getPerunBl", "getResourcesByAttribute", "getResourcesManagerBl", "getPerunBl", "retainAll", "isEmpty", "getAttributeDefinition", "getAttributesManagerBl", "getPerunBl", "setValue", "getValue", "getGroupsByAttribute", "getGroupsManagerBl", "getPerunBl", "retainAll", "getAllowedGroups", "getFacilitiesManagerBl", "getPerunBl", "getAttribute", "getAttributesManagerBl", "getPerunBl", "getValue", "isEmpty", "valueAsString", "isUserMemberOfGroup", "getGroupsManagerBl", "getPerunBl"]}, "repository": {"repo_id": 4085998, "url": "https://github.com/CESNET/perun", "stars": 38, "created": "4/20/2012 11:55:38 AM +00:00", "updates": "2020-01-27T09:51:13+00:00", "fork": "False", "license": "licensed"}}