{"test_class": {"identifier": "RdfEngineTest", "superclass": "extends OrmEnabledTestCase", "interfaces": "", "fields": [{"original_string": "private Repository repo;", "modifier": "private", "type": "Repository", "declarator": "repo", "var_name": "repo"}, {"original_string": "private RdfEngine engine;", "modifier": "private", "type": "RdfEngine", "declarator": "engine", "var_name": "engine"}, {"original_string": "private OrmFactory<User> userFactory = getRequiredOrmFactory(User.class);", "modifier": "private", "type": "OrmFactory<User>", "declarator": "userFactory = getRequiredOrmFactory(User.class)", "var_name": "userFactory"}, {"original_string": "private OrmFactory<ExternalUser> externalUserFactory = getRequiredOrmFactory(ExternalUser.class);", "modifier": "private", "type": "OrmFactory<ExternalUser>", "declarator": "externalUserFactory = getRequiredOrmFactory(ExternalUser.class)", "var_name": "externalUserFactory"}, {"original_string": "private OrmFactory<Group> groupFactory = getRequiredOrmFactory(Group.class);", "modifier": "private", "type": "OrmFactory<Group>", "declarator": "groupFactory = getRequiredOrmFactory(Group.class)", "var_name": "groupFactory"}, {"original_string": "private OrmFactory<ExternalGroup> externalGroupFactory = getRequiredOrmFactory(ExternalGroup.class);", "modifier": "private", "type": "OrmFactory<ExternalGroup>", "declarator": "externalGroupFactory = getRequiredOrmFactory(ExternalGroup.class)", "var_name": "externalGroupFactory"}, {"original_string": "private String username = \"tester\";", "modifier": "private", "type": "String", "declarator": "username = \"tester\"", "var_name": "username"}, {"original_string": "private String userId = \"http://mobi.com/users/\" + DigestUtils.sha1Hex(username);", "modifier": "private", "type": "String", "declarator": "userId = \"http://mobi.com/users/\" + DigestUtils.sha1Hex(username)", "var_name": "userId"}, {"original_string": "private String externalUsername = \"externaluser\";", "modifier": "private", "type": "String", "declarator": "externalUsername = \"externaluser\"", "var_name": "externalUsername"}, {"original_string": "private String externalUserId = \"http://mobi.com/users/\" + DigestUtils.sha1Hex(externalUsername);", "modifier": "private", "type": "String", "declarator": "externalUserId = \"http://mobi.com/users/\" + DigestUtils.sha1Hex(externalUsername)", "var_name": "externalUserId"}, {"original_string": "private String password = \"test\";", "modifier": "private", "type": "String", "declarator": "password = \"test\"", "var_name": "password"}, {"original_string": "private String groupName1 = \"cats\";", "modifier": "private", "type": "String", "declarator": "groupName1 = \"cats\"", "var_name": "groupName1"}, {"original_string": "private String groupId1 = \"http://mobi.com/groups/\" + DigestUtils.sha1Hex(groupName1);", "modifier": "private", "type": "String", "declarator": "groupId1 = \"http://mobi.com/groups/\" + DigestUtils.sha1Hex(groupName1)", "var_name": "groupId1"}, {"original_string": "private String groupName2 = \"dogs\";", "modifier": "private", "type": "String", "declarator": "groupName2 = \"dogs\"", "var_name": "groupName2"}, {"original_string": "private String groupId2 = \"http://mobi.com/groups/\" + DigestUtils.sha1Hex(groupName2);", "modifier": "private", "type": "String", "declarator": "groupId2 = \"http://mobi.com/groups/\" + DigestUtils.sha1Hex(groupName2)", "var_name": "groupId2"}, {"original_string": "private String externalGroupName = \"externalgroup\";", "modifier": "private", "type": "String", "declarator": "externalGroupName = \"externalgroup\"", "var_name": "externalGroupName"}, {"original_string": "private String externalGroupId = \"http://mobi.com/groups/\" + DigestUtils.sha1Hex(externalGroupName);", "modifier": "private", "type": "String", "declarator": "externalGroupId = \"http://mobi.com/groups/\" + DigestUtils.sha1Hex(externalGroupName)", "var_name": "externalGroupId"}, {"original_string": "private String userRoleId = \"http://mobi.com/roles/user\";", "modifier": "private", "type": "String", "declarator": "userRoleId = \"http://mobi.com/roles/user\"", "var_name": "userRoleId"}, {"original_string": "private String adminRoleId = \"http://mobi.com/roles/admin\";", "modifier": "private", "type": "String", "declarator": "adminRoleId = \"http://mobi.com/roles/admin\"", "var_name": "adminRoleId"}, {"original_string": "private boolean setUp = false;", "modifier": "private", "type": "boolean", "declarator": "setUp = false", "var_name": "setUp"}, {"original_string": "private Map<String, Object> options = new HashMap<>();", "modifier": "private", "type": "Map<String, Object>", "declarator": "options = new HashMap<>()", "var_name": "options"}, {"original_string": "@Mock\n    private BundleContext bundleContext;", "modifier": "@Mock\n    private", "type": "BundleContext", "declarator": "bundleContext", "var_name": "bundleContext"}, {"original_string": "@Mock\n    private Encryption encryption;", "modifier": "@Mock\n    private", "type": "Encryption", "declarator": "encryption", "var_name": "encryption"}, {"original_string": "@Mock\n    private EncryptionSupport encryptionSupport;", "modifier": "@Mock\n    private", "type": "EncryptionSupport", "declarator": "encryptionSupport", "var_name": "encryptionSupport"}], "file": "com.mobi.jaas/src/test/java/com/mobi/jaas/engines/RdfEngineTest.java"}, "test_case": {"identifier": "testGroupExists", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGroupExists() {\n        boolean result = engine.groupExists(groupName1);\n        assertTrue(result);\n\n        result = engine.groupExists(\"http://mobi.com/groups/error\");\n        assertFalse(result);\n    }", "signature": "void testGroupExists()", "full_signature": "@Test public void testGroupExists()", "class_method_signature": "RdfEngineTest.testGroupExists()", "testcase": true, "constructor": false, "invocations": ["groupExists", "assertTrue", "groupExists", "assertFalse"]}, "focal_class": {"identifier": "RdfEngine", "superclass": "", "interfaces": "implements Engine", "fields": [{"original_string": "public static final String ENGINE_NAME = \"com.mobi.jaas.engines.RdfEngine\";", "modifier": "public static final", "type": "String", "declarator": "ENGINE_NAME = \"com.mobi.jaas.engines.RdfEngine\"", "var_name": "ENGINE_NAME"}, {"original_string": "private static final Logger logger = LoggerFactory.getLogger(RdfEngine.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(RdfEngine.class)", "var_name": "logger"}, {"original_string": "private Resource context;", "modifier": "private", "type": "Resource", "declarator": "context", "var_name": "context"}, {"original_string": "private String userNamespace;", "modifier": "private", "type": "String", "declarator": "userNamespace", "var_name": "userNamespace"}, {"original_string": "private String groupNamespace;", "modifier": "private", "type": "String", "declarator": "groupNamespace", "var_name": "groupNamespace"}, {"original_string": "private String roleNamespace;", "modifier": "private", "type": "String", "declarator": "roleNamespace", "var_name": "roleNamespace"}, {"original_string": "private Set<String> roles;", "modifier": "private", "type": "Set<String>", "declarator": "roles", "var_name": "roles"}, {"original_string": "private EncryptionSupport encryptionSupport;", "modifier": "private", "type": "EncryptionSupport", "declarator": "encryptionSupport", "var_name": "encryptionSupport"}, {"original_string": "private Repository repository;", "modifier": "private", "type": "Repository", "declarator": "repository", "var_name": "repository"}, {"original_string": "private ValueFactory vf;", "modifier": "private", "type": "ValueFactory", "declarator": "vf", "var_name": "vf"}, {"original_string": "private ModelFactory mf;", "modifier": "private", "type": "ModelFactory", "declarator": "mf", "var_name": "mf"}, {"original_string": "private UserFactory userFactory;", "modifier": "private", "type": "UserFactory", "declarator": "userFactory", "var_name": "userFactory"}, {"original_string": "private GroupFactory groupFactory;", "modifier": "private", "type": "GroupFactory", "declarator": "groupFactory", "var_name": "groupFactory"}, {"original_string": "private RoleFactory roleFactory;", "modifier": "private", "type": "RoleFactory", "declarator": "roleFactory", "var_name": "roleFactory"}, {"original_string": "private ThingFactory thingFactory;", "modifier": "private", "type": "ThingFactory", "declarator": "thingFactory", "var_name": "thingFactory"}, {"original_string": "private static final String GET_USERS_QUERY;", "modifier": "private static final", "type": "String", "declarator": "GET_USERS_QUERY", "var_name": "GET_USERS_QUERY"}, {"original_string": "private static final String GET_GROUPS_QUERY;", "modifier": "private static final", "type": "String", "declarator": "GET_GROUPS_QUERY", "var_name": "GET_GROUPS_QUERY"}, {"original_string": "private static final String GET_USER_ROLES_QUERY;", "modifier": "private static final", "type": "String", "declarator": "GET_USER_ROLES_QUERY", "var_name": "GET_USER_ROLES_QUERY"}, {"original_string": "private static final String GET_USER_IRI;", "modifier": "private static final", "type": "String", "declarator": "GET_USER_IRI", "var_name": "GET_USER_IRI"}, {"original_string": "private static final String GET_GROUP_IRI;", "modifier": "private static final", "type": "String", "declarator": "GET_GROUP_IRI", "var_name": "GET_GROUP_IRI"}, {"original_string": "private static final String USER_BINDING = \"userId\";", "modifier": "private static final", "type": "String", "declarator": "USER_BINDING = \"userId\"", "var_name": "USER_BINDING"}, {"original_string": "private static final String GROUP_BINDING = \"groupId\";", "modifier": "private static final", "type": "String", "declarator": "GROUP_BINDING = \"groupId\"", "var_name": "GROUP_BINDING"}, {"original_string": "private static final String QUERY_USERNAME_BINDING = \"queryUsername\";", "modifier": "private static final", "type": "String", "declarator": "QUERY_USERNAME_BINDING = \"queryUsername\"", "var_name": "QUERY_USERNAME_BINDING"}, {"original_string": "private static final String QUERY_TITLE_BINDING = \"queryTitle\";", "modifier": "private static final", "type": "String", "declarator": "QUERY_TITLE_BINDING = \"queryTitle\"", "var_name": "QUERY_TITLE_BINDING"}], "methods": [{"identifier": "start", "parameters": "(BundleContext bundleContext, Map<String, Object> props)", "modifiers": "@Activate", "return": "void", "signature": "void start(BundleContext bundleContext, Map<String, Object> props)", "full_signature": "@Activate void start(BundleContext bundleContext, Map<String, Object> props)", "class_method_signature": "RdfEngine.start(BundleContext bundleContext, Map<String, Object> props)", "testcase": false, "constructor": false}, {"identifier": "modified", "parameters": "(BundleContext bundleContext, Map<String, Object> props)", "modifiers": "@Modified", "return": "void", "signature": "void modified(BundleContext bundleContext, Map<String, Object> props)", "full_signature": "@Modified void modified(BundleContext bundleContext, Map<String, Object> props)", "class_method_signature": "RdfEngine.modified(BundleContext bundleContext, Map<String, Object> props)", "testcase": false, "constructor": false}, {"identifier": "setRepository", "parameters": "(Repository repository)", "modifiers": "@Reference(name = \"repository\") protected", "return": "void", "signature": "void setRepository(Repository repository)", "full_signature": "@Reference(name = \"repository\") protected void setRepository(Repository repository)", "class_method_signature": "RdfEngine.setRepository(Repository repository)", "testcase": false, "constructor": false}, {"identifier": "setValueFactory", "parameters": "(final ValueFactory vf)", "modifiers": "@Reference protected", "return": "void", "signature": "void setValueFactory(final ValueFactory vf)", "full_signature": "@Reference protected void setValueFactory(final ValueFactory vf)", "class_method_signature": "RdfEngine.setValueFactory(final ValueFactory vf)", "testcase": false, "constructor": false}, {"identifier": "setModelFactory", "parameters": "(final ModelFactory mf)", "modifiers": "@Reference protected", "return": "void", "signature": "void setModelFactory(final ModelFactory mf)", "full_signature": "@Reference protected void setModelFactory(final ModelFactory mf)", "class_method_signature": "RdfEngine.setModelFactory(final ModelFactory mf)", "testcase": false, "constructor": false}, {"identifier": "setUserFactory", "parameters": "(UserFactory userFactory)", "modifiers": "@Reference protected", "return": "void", "signature": "void setUserFactory(UserFactory userFactory)", "full_signature": "@Reference protected void setUserFactory(UserFactory userFactory)", "class_method_signature": "RdfEngine.setUserFactory(UserFactory userFactory)", "testcase": false, "constructor": false}, {"identifier": "setGroupFactory", "parameters": "(GroupFactory groupFactory)", "modifiers": "@Reference protected", "return": "void", "signature": "void setGroupFactory(GroupFactory groupFactory)", "full_signature": "@Reference protected void setGroupFactory(GroupFactory groupFactory)", "class_method_signature": "RdfEngine.setGroupFactory(GroupFactory groupFactory)", "testcase": false, "constructor": false}, {"identifier": "setRoleFactory", "parameters": "(RoleFactory roleFactory)", "modifiers": "@Reference protected", "return": "void", "signature": "void setRoleFactory(RoleFactory roleFactory)", "full_signature": "@Reference protected void setRoleFactory(RoleFactory roleFactory)", "class_method_signature": "RdfEngine.setRoleFactory(RoleFactory roleFactory)", "testcase": false, "constructor": false}, {"identifier": "setThingFactory", "parameters": "(ThingFactory thingFactory)", "modifiers": "@Reference protected", "return": "void", "signature": "void setThingFactory(ThingFactory thingFactory)", "full_signature": "@Reference protected void setThingFactory(ThingFactory thingFactory)", "class_method_signature": "RdfEngine.setThingFactory(ThingFactory thingFactory)", "testcase": false, "constructor": false}, {"identifier": "getRole", "parameters": "(String roleName)", "modifiers": "@Override public", "return": "Optional<Role>", "signature": "Optional<Role> getRole(String roleName)", "full_signature": "@Override public Optional<Role> getRole(String roleName)", "class_method_signature": "RdfEngine.getRole(String roleName)", "testcase": false, "constructor": false}, {"identifier": "getUsers", "parameters": "()", "modifiers": "@Override public", "return": "Set<User>", "signature": "Set<User> getUsers()", "full_signature": "@Override public Set<User> getUsers()", "class_method_signature": "RdfEngine.getUsers()", "testcase": false, "constructor": false}, {"identifier": "createUser", "parameters": "(UserConfig userConfig)", "modifiers": "@Override public", "return": "User", "signature": "User createUser(UserConfig userConfig)", "full_signature": "@Override public User createUser(UserConfig userConfig)", "class_method_signature": "RdfEngine.createUser(UserConfig userConfig)", "testcase": false, "constructor": false}, {"identifier": "storeUser", "parameters": "(User user)", "modifiers": "@Override public", "return": "void", "signature": "void storeUser(User user)", "full_signature": "@Override public void storeUser(User user)", "class_method_signature": "RdfEngine.storeUser(User user)", "testcase": false, "constructor": false}, {"identifier": "userExists", "parameters": "(String username)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean userExists(String username)", "full_signature": "@Override public boolean userExists(String username)", "class_method_signature": "RdfEngine.userExists(String username)", "testcase": false, "constructor": false}, {"identifier": "userExists", "parameters": "(Resource userId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean userExists(Resource userId)", "full_signature": "@Override public boolean userExists(Resource userId)", "class_method_signature": "RdfEngine.userExists(Resource userId)", "testcase": false, "constructor": false}, {"identifier": "retrieveUser", "parameters": "(String username)", "modifiers": "@Override public", "return": "Optional<User>", "signature": "Optional<User> retrieveUser(String username)", "full_signature": "@Override public Optional<User> retrieveUser(String username)", "class_method_signature": "RdfEngine.retrieveUser(String username)", "testcase": false, "constructor": false}, {"identifier": "updateUser", "parameters": "(User newUser)", "modifiers": "@Override public", "return": "void", "signature": "void updateUser(User newUser)", "full_signature": "@Override public void updateUser(User newUser)", "class_method_signature": "RdfEngine.updateUser(User newUser)", "testcase": false, "constructor": false}, {"identifier": "deleteUser", "parameters": "(String username)", "modifiers": "@Override public", "return": "void", "signature": "void deleteUser(String username)", "full_signature": "@Override public void deleteUser(String username)", "class_method_signature": "RdfEngine.deleteUser(String username)", "testcase": false, "constructor": false}, {"identifier": "getGroups", "parameters": "()", "modifiers": "@Override public", "return": "Set<Group>", "signature": "Set<Group> getGroups()", "full_signature": "@Override public Set<Group> getGroups()", "class_method_signature": "RdfEngine.getGroups()", "testcase": false, "constructor": false}, {"identifier": "createGroup", "parameters": "(GroupConfig groupConfig)", "modifiers": "@Override public", "return": "Group", "signature": "Group createGroup(GroupConfig groupConfig)", "full_signature": "@Override public Group createGroup(GroupConfig groupConfig)", "class_method_signature": "RdfEngine.createGroup(GroupConfig groupConfig)", "testcase": false, "constructor": false}, {"identifier": "storeGroup", "parameters": "(Group group)", "modifiers": "@Override public", "return": "void", "signature": "void storeGroup(Group group)", "full_signature": "@Override public void storeGroup(Group group)", "class_method_signature": "RdfEngine.storeGroup(Group group)", "testcase": false, "constructor": false}, {"identifier": "groupExists", "parameters": "(String groupTitle)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean groupExists(String groupTitle)", "full_signature": "@Override public boolean groupExists(String groupTitle)", "class_method_signature": "RdfEngine.groupExists(String groupTitle)", "testcase": false, "constructor": false}, {"identifier": "groupExists", "parameters": "(Resource groupId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean groupExists(Resource groupId)", "full_signature": "@Override public boolean groupExists(Resource groupId)", "class_method_signature": "RdfEngine.groupExists(Resource groupId)", "testcase": false, "constructor": false}, {"identifier": "retrieveGroup", "parameters": "(String groupTitle)", "modifiers": "@Override public", "return": "Optional<Group>", "signature": "Optional<Group> retrieveGroup(String groupTitle)", "full_signature": "@Override public Optional<Group> retrieveGroup(String groupTitle)", "class_method_signature": "RdfEngine.retrieveGroup(String groupTitle)", "testcase": false, "constructor": false}, {"identifier": "updateGroup", "parameters": "(Group newGroup)", "modifiers": "@Override public", "return": "void", "signature": "void updateGroup(Group newGroup)", "full_signature": "@Override public void updateGroup(Group newGroup)", "class_method_signature": "RdfEngine.updateGroup(Group newGroup)", "testcase": false, "constructor": false}, {"identifier": "deleteGroup", "parameters": "(String groupTitle)", "modifiers": "@Override public", "return": "void", "signature": "void deleteGroup(String groupTitle)", "full_signature": "@Override public void deleteGroup(String groupTitle)", "class_method_signature": "RdfEngine.deleteGroup(String groupTitle)", "testcase": false, "constructor": false}, {"identifier": "getUserRoles", "parameters": "(String username)", "modifiers": "@Override public", "return": "Set<Role>", "signature": "Set<Role> getUserRoles(String username)", "full_signature": "@Override public Set<Role> getUserRoles(String username)", "class_method_signature": "RdfEngine.getUserRoles(String username)", "testcase": false, "constructor": false}, {"identifier": "checkPassword", "parameters": "(String username, String password)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean checkPassword(String username, String password)", "full_signature": "@Override public boolean checkPassword(String username, String password)", "class_method_signature": "RdfEngine.checkPassword(String username, String password)", "testcase": false, "constructor": false}, {"identifier": "getEngineName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getEngineName()", "full_signature": "@Override public String getEngineName()", "class_method_signature": "RdfEngine.getEngineName()", "testcase": false, "constructor": false}, {"identifier": "getEncryptedPassword", "parameters": "(String password)", "modifiers": "private", "return": "String", "signature": "String getEncryptedPassword(String password)", "full_signature": "private String getEncryptedPassword(String password)", "class_method_signature": "RdfEngine.getEncryptedPassword(String password)", "testcase": false, "constructor": false}, {"identifier": "initEngineResources", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initEngineResources()", "full_signature": "private void initEngineResources()", "class_method_signature": "RdfEngine.initEngineResources()", "testcase": false, "constructor": false}, {"identifier": "setEncryption", "parameters": "(RdfEngineConfig config, BundleContext context)", "modifiers": "private", "return": "void", "signature": "void setEncryption(RdfEngineConfig config, BundleContext context)", "full_signature": "private void setEncryption(RdfEngineConfig config, BundleContext context)", "class_method_signature": "RdfEngine.setEncryption(RdfEngineConfig config, BundleContext context)", "testcase": false, "constructor": false}, {"identifier": "resourceExists", "parameters": "(Resource resource)", "modifiers": "private", "return": "boolean", "signature": "boolean resourceExists(Resource resource)", "full_signature": "private boolean resourceExists(Resource resource)", "class_method_signature": "RdfEngine.resourceExists(Resource resource)", "testcase": false, "constructor": false}, {"identifier": "resourceExists", "parameters": "(Resource resource, String typeString)", "modifiers": "private", "return": "boolean", "signature": "boolean resourceExists(Resource resource, String typeString)", "full_signature": "private boolean resourceExists(Resource resource, String typeString)", "class_method_signature": "RdfEngine.resourceExists(Resource resource, String typeString)", "testcase": false, "constructor": false}, {"identifier": "createUserIri", "parameters": "(String username)", "modifiers": "private", "return": "Resource", "signature": "Resource createUserIri(String username)", "full_signature": "private Resource createUserIri(String username)", "class_method_signature": "RdfEngine.createUserIri(String username)", "testcase": false, "constructor": false}, {"identifier": "createGroupIri", "parameters": "(String groupTitle)", "modifiers": "private", "return": "Resource", "signature": "Resource createGroupIri(String groupTitle)", "full_signature": "private Resource createGroupIri(String groupTitle)", "class_method_signature": "RdfEngine.createGroupIri(String groupTitle)", "testcase": false, "constructor": false}, {"identifier": "getUserId", "parameters": "(String username)", "modifiers": "private", "return": "Optional<Resource>", "signature": "Optional<Resource> getUserId(String username)", "full_signature": "private Optional<Resource> getUserId(String username)", "class_method_signature": "RdfEngine.getUserId(String username)", "testcase": false, "constructor": false}, {"identifier": "getUserId", "parameters": "(String username, RepositoryConnection conn)", "modifiers": "private", "return": "Optional<Resource>", "signature": "Optional<Resource> getUserId(String username, RepositoryConnection conn)", "full_signature": "private Optional<Resource> getUserId(String username, RepositoryConnection conn)", "class_method_signature": "RdfEngine.getUserId(String username, RepositoryConnection conn)", "testcase": false, "constructor": false}, {"identifier": "getGroupId", "parameters": "(String groupTitle)", "modifiers": "private", "return": "Optional<Resource>", "signature": "Optional<Resource> getGroupId(String groupTitle)", "full_signature": "private Optional<Resource> getGroupId(String groupTitle)", "class_method_signature": "RdfEngine.getGroupId(String groupTitle)", "testcase": false, "constructor": false}, {"identifier": "getGroupId", "parameters": "(String groupTitle, RepositoryConnection conn)", "modifiers": "private", "return": "Optional<Resource>", "signature": "Optional<Resource> getGroupId(String groupTitle, RepositoryConnection conn)", "full_signature": "private Optional<Resource> getGroupId(String groupTitle, RepositoryConnection conn)", "class_method_signature": "RdfEngine.getGroupId(String groupTitle, RepositoryConnection conn)", "testcase": false, "constructor": false}], "file": "com.mobi.jaas/src/main/java/com/mobi/jaas/engines/RdfEngine.java"}, "focal_method": {"identifier": "groupExists", "parameters": "(String groupTitle)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean groupExists(String groupTitle) {\n        return getGroupId(groupTitle).isPresent();\n    }", "signature": "boolean groupExists(String groupTitle)", "full_signature": "@Override public boolean groupExists(String groupTitle)", "class_method_signature": "RdfEngine.groupExists(String groupTitle)", "testcase": false, "constructor": false, "invocations": ["isPresent", "getGroupId"]}, "repository": {"repo_id": 62253355, "url": "https://github.com/inovexcorp/mobi", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 30, "size": 54070, "license": "licensed"}}