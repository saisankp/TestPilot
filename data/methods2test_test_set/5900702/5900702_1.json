{"test_class": {"identifier": "AnnotationReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AnnotationReader annotationReader;", "modifier": "private", "type": "AnnotationReader", "declarator": "annotationReader", "var_name": "annotationReader"}], "file": "slice-core/src/test/java/com/cognifide/slice/core/internal/module/AnnotationReaderTest.java"}, "test_case": {"identifier": "testVisitAnnotation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testVisitAnnotation() throws Exception {\n\t\tannotationReader.visitAnnotation(\"/com/cognifide/slice/mapper/annotation/JcrProperty/\", false);\n\t\tAssert.assertTrue(annotationReader.isAnnotationPresent(JcrProperty.class));\n\t}", "signature": "void testVisitAnnotation()", "full_signature": "@Test public void testVisitAnnotation()", "class_method_signature": "AnnotationReaderTest.testVisitAnnotation()", "testcase": true, "constructor": false, "invocations": ["visitAnnotation", "assertTrue", "isAnnotationPresent"]}, "focal_class": {"identifier": "AnnotationReader", "superclass": "extends ClassVisitor", "interfaces": "", "fields": [{"original_string": "private List<String> annotations = new ArrayList<String>();", "modifier": "private", "type": "List<String>", "declarator": "annotations = new ArrayList<String>()", "var_name": "annotations"}], "methods": [{"identifier": "AnnotationReader", "parameters": "()", "modifiers": "public", "return": "", "signature": " AnnotationReader()", "full_signature": "public  AnnotationReader()", "class_method_signature": "AnnotationReader.AnnotationReader()", "testcase": false, "constructor": true}, {"identifier": "visit", "parameters": "(int paramInt1, int paramInt2, String paramString1, String paramString2,\n\t\t\tString paramString3, String[] paramArrayOfString)", "modifiers": "@Override public", "return": "void", "signature": "void visit(int paramInt1, int paramInt2, String paramString1, String paramString2,\n\t\t\tString paramString3, String[] paramArrayOfString)", "full_signature": "@Override public void visit(int paramInt1, int paramInt2, String paramString1, String paramString2,\n\t\t\tString paramString3, String[] paramArrayOfString)", "class_method_signature": "AnnotationReader.visit(int paramInt1, int paramInt2, String paramString1, String paramString2,\n\t\t\tString paramString3, String[] paramArrayOfString)", "testcase": false, "constructor": false}, {"identifier": "visitAnnotation", "parameters": "(String paramString, boolean paramBoolean)", "modifiers": "@Override public", "return": "AnnotationVisitor", "signature": "AnnotationVisitor visitAnnotation(String paramString, boolean paramBoolean)", "full_signature": "@Override public AnnotationVisitor visitAnnotation(String paramString, boolean paramBoolean)", "class_method_signature": "AnnotationReader.visitAnnotation(String paramString, boolean paramBoolean)", "testcase": false, "constructor": false}, {"identifier": "isAnnotationPresent", "parameters": "(Class<? extends Annotation> annotation)", "modifiers": "public", "return": "boolean", "signature": "boolean isAnnotationPresent(Class<? extends Annotation> annotation)", "full_signature": "public boolean isAnnotationPresent(Class<? extends Annotation> annotation)", "class_method_signature": "AnnotationReader.isAnnotationPresent(Class<? extends Annotation> annotation)", "testcase": false, "constructor": false}, {"identifier": "getAnnotationClassName", "parameters": "(String rawName)", "modifiers": "private", "return": "String", "signature": "String getAnnotationClassName(String rawName)", "full_signature": "private String getAnnotationClassName(String rawName)", "class_method_signature": "AnnotationReader.getAnnotationClassName(String rawName)", "testcase": false, "constructor": false}], "file": "slice-core/src/main/java/com/cognifide/slice/core/internal/module/AnnotationReader.java"}, "focal_method": {"identifier": "visitAnnotation", "parameters": "(String paramString, boolean paramBoolean)", "modifiers": "@Override public", "return": "AnnotationVisitor", "body": "@Override\n\tpublic AnnotationVisitor visitAnnotation(String paramString, boolean paramBoolean) {\n\t\tString annotationClassName = getAnnotationClassName(paramString);\n\t\tannotations.add(annotationClassName);\n\t\treturn super.visitAnnotation(paramString, paramBoolean);\n\t}", "signature": "AnnotationVisitor visitAnnotation(String paramString, boolean paramBoolean)", "full_signature": "@Override public AnnotationVisitor visitAnnotation(String paramString, boolean paramBoolean)", "class_method_signature": "AnnotationReader.visitAnnotation(String paramString, boolean paramBoolean)", "testcase": false, "constructor": false, "invocations": ["getAnnotationClassName", "add", "visitAnnotation"]}, "repository": {"repo_id": 5900702, "url": "https://github.com/Cognifide/Slice", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 61, "size": 11367, "license": "licensed"}}