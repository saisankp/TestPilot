{"test_class": {"identifier": "GuidanceManeuverUtilTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [], "file": "MSDKUIKit/MSDKUILib/src/test/java/com/here/msdkui/guidance/GuidanceManeuverUtilTest.java"}, "test_case": {"identifier": "testGetIndexOfManeuver", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetIndexOfManeuver() {\n        final Maneuver maneuver = MockUtils.mockManeuver();\n        final Maneuver maneuver1 = MockUtils.mockManeuver();\n        final GeoCoordinate coordinate = MockUtils.mockGeoCoordinate(1, 1);\n        final GeoCoordinate coordinate1 = MockUtils.mockGeoCoordinate(2, 2);\n        when(maneuver.getCoordinate()).thenReturn(coordinate);\n        when(maneuver1.getCoordinate()).thenReturn(coordinate1);\n        int index = GuidanceManeuverUtil.getIndexOfManeuver(maneuver,\n                new ArrayList<>(Arrays.asList(maneuver, maneuver1)));\n        assertThat(index, is(0));\n        index = GuidanceManeuverUtil.getIndexOfManeuver(maneuver,\n                new ArrayList<>(Collections.singletonList(maneuver1)));\n        assertThat(index, is(-1));\n    }", "signature": "void testGetIndexOfManeuver()", "full_signature": "@Test public void testGetIndexOfManeuver()", "class_method_signature": "GuidanceManeuverUtilTest.testGetIndexOfManeuver()", "testcase": true, "constructor": false, "invocations": ["mockManeuver", "mockManeuver", "mockGeoCoordinate", "mockGeoCoordinate", "thenReturn", "when", "getCoordinate", "thenReturn", "when", "getCoordinate", "getIndexOfManeuver", "asList", "assertThat", "is", "getIndexOfManeuver", "singletonList", "assertThat", "is"]}, "focal_class": {"identifier": "GuidanceManeuverUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int NEXT_NEXT_MANEUVER_THRESHOLD = 750;", "modifier": "private static final", "type": "int", "declarator": "NEXT_NEXT_MANEUVER_THRESHOLD = 750", "var_name": "NEXT_NEXT_MANEUVER_THRESHOLD"}], "methods": [{"identifier": "GuidanceManeuverUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " GuidanceManeuverUtil()", "full_signature": "private  GuidanceManeuverUtil()", "class_method_signature": "GuidanceManeuverUtil.GuidanceManeuverUtil()", "testcase": false, "constructor": true}, {"identifier": "getIndexOfManeuver", "parameters": "(Maneuver maneuver, List<Maneuver> maneuvers)", "modifiers": "public static", "return": "int", "signature": "int getIndexOfManeuver(Maneuver maneuver, List<Maneuver> maneuvers)", "full_signature": "public static int getIndexOfManeuver(Maneuver maneuver, List<Maneuver> maneuvers)", "class_method_signature": "GuidanceManeuverUtil.getIndexOfManeuver(Maneuver maneuver, List<Maneuver> maneuvers)", "testcase": false, "constructor": false}, {"identifier": "maneuversEqual", "parameters": "(Maneuver maneuverA, Maneuver maneuverB)", "modifiers": "public static", "return": "boolean", "signature": "boolean maneuversEqual(Maneuver maneuverA, Maneuver maneuverB)", "full_signature": "public static boolean maneuversEqual(Maneuver maneuverA, Maneuver maneuverB)", "class_method_signature": "GuidanceManeuverUtil.maneuversEqual(Maneuver maneuverA, Maneuver maneuverB)", "testcase": false, "constructor": false}, {"identifier": "getCurrentManeuverStreet", "parameters": "(@NonNull Context context, @NonNull Maneuver maneuver)", "modifiers": "public static", "return": "String", "signature": "String getCurrentManeuverStreet(@NonNull Context context, @NonNull Maneuver maneuver)", "full_signature": "public static String getCurrentManeuverStreet(@NonNull Context context, @NonNull Maneuver maneuver)", "class_method_signature": "GuidanceManeuverUtil.getCurrentManeuverStreet(@NonNull Context context, @NonNull Maneuver maneuver)", "testcase": false, "constructor": false}, {"identifier": "determineNextManeuverStreet", "parameters": "(Context context, Maneuver maneuver,\n            BaseGuidancePresenter baseGuidancePresenter)", "modifiers": "public static", "return": "String", "signature": "String determineNextManeuverStreet(Context context, Maneuver maneuver,\n            BaseGuidancePresenter baseGuidancePresenter)", "full_signature": "public static String determineNextManeuverStreet(Context context, Maneuver maneuver,\n            BaseGuidancePresenter baseGuidancePresenter)", "class_method_signature": "GuidanceManeuverUtil.determineNextManeuverStreet(Context context, Maneuver maneuver,\n            BaseGuidancePresenter baseGuidancePresenter)", "testcase": false, "constructor": false}, {"identifier": "getNextToNext", "parameters": "(Context context, Maneuver maneuver,\n            BaseGuidancePresenter baseGuidancePresenter)", "modifiers": "private static", "return": "String", "signature": "String getNextToNext(Context context, Maneuver maneuver,\n            BaseGuidancePresenter baseGuidancePresenter)", "full_signature": "private static String getNextToNext(Context context, Maneuver maneuver,\n            BaseGuidancePresenter baseGuidancePresenter)", "class_method_signature": "GuidanceManeuverUtil.getNextToNext(Context context, Maneuver maneuver,\n            BaseGuidancePresenter baseGuidancePresenter)", "testcase": false, "constructor": false}, {"identifier": "getNextStreet", "parameters": "(Context context, Maneuver maneuver)", "modifiers": "private static", "return": "String", "signature": "String getNextStreet(Context context, Maneuver maneuver)", "full_signature": "private static String getNextStreet(Context context, Maneuver maneuver)", "class_method_signature": "GuidanceManeuverUtil.getNextStreet(Context context, Maneuver maneuver)", "testcase": false, "constructor": false}, {"identifier": "getSignPostExitText", "parameters": "(Maneuver maneuver)", "modifiers": "private static", "return": "String", "signature": "String getSignPostExitText(Maneuver maneuver)", "full_signature": "private static String getSignPostExitText(Maneuver maneuver)", "class_method_signature": "GuidanceManeuverUtil.getSignPostExitText(Maneuver maneuver)", "testcase": false, "constructor": false}, {"identifier": "getNextManeuver", "parameters": "(BaseGuidancePresenter baseGuidancePresenter, Maneuver lastManeuver)", "modifiers": "private static", "return": "Maneuver", "signature": "Maneuver getNextManeuver(BaseGuidancePresenter baseGuidancePresenter, Maneuver lastManeuver)", "full_signature": "private static Maneuver getNextManeuver(BaseGuidancePresenter baseGuidancePresenter, Maneuver lastManeuver)", "class_method_signature": "GuidanceManeuverUtil.getNextManeuver(BaseGuidancePresenter baseGuidancePresenter, Maneuver lastManeuver)", "testcase": false, "constructor": false}, {"identifier": "getFollowingManeuver", "parameters": "(Route route, Maneuver lastManeuver)", "modifiers": "private static", "return": "Maneuver", "signature": "Maneuver getFollowingManeuver(Route route, Maneuver lastManeuver)", "full_signature": "private static Maneuver getFollowingManeuver(Route route, Maneuver lastManeuver)", "class_method_signature": "GuidanceManeuverUtil.getFollowingManeuver(Route route, Maneuver lastManeuver)", "testcase": false, "constructor": false}, {"identifier": "combineRoadNumberAndName", "parameters": "(Context context, Maneuver maneuver, String roadNumber,\n            String roadName)", "modifiers": "private static", "return": "String", "signature": "String combineRoadNumberAndName(Context context, Maneuver maneuver, String roadNumber,\n            String roadName)", "full_signature": "private static String combineRoadNumberAndName(Context context, Maneuver maneuver, String roadNumber,\n            String roadName)", "class_method_signature": "GuidanceManeuverUtil.combineRoadNumberAndName(Context context, Maneuver maneuver, String roadNumber,\n            String roadName)", "testcase": false, "constructor": false}, {"identifier": "getStringFromSignpost", "parameters": "(Signpost signpost, String defaultValue)", "modifiers": "private static", "return": "String", "signature": "String getStringFromSignpost(Signpost signpost, String defaultValue)", "full_signature": "private static String getStringFromSignpost(Signpost signpost, String defaultValue)", "class_method_signature": "GuidanceManeuverUtil.getStringFromSignpost(Signpost signpost, String defaultValue)", "testcase": false, "constructor": false}], "file": "MSDKUIKit/MSDKUILib/src/main/java/com/here/msdkui/guidance/GuidanceManeuverUtil.java"}, "focal_method": {"identifier": "getIndexOfManeuver", "parameters": "(Maneuver maneuver, List<Maneuver> maneuvers)", "modifiers": "public static", "return": "int", "body": "public static int getIndexOfManeuver(Maneuver maneuver, List<Maneuver> maneuvers) {\n        for (int x = 0; x < maneuvers.size(); x++) {\n            final Maneuver tmpManeuver = maneuvers.get(x);\n            if (maneuversEqual(maneuver, tmpManeuver)) {\n                return x;\n            }\n        }\n        return -1;\n    }", "signature": "int getIndexOfManeuver(Maneuver maneuver, List<Maneuver> maneuvers)", "full_signature": "public static int getIndexOfManeuver(Maneuver maneuver, List<Maneuver> maneuvers)", "class_method_signature": "GuidanceManeuverUtil.getIndexOfManeuver(Maneuver maneuver, List<Maneuver> maneuvers)", "testcase": false, "constructor": false, "invocations": ["size", "get", "maneuversEqual"]}, "repository": {"repo_id": 141680627, "url": "https://github.com/heremaps/msdkui-android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 35, "size": 5559, "license": "licensed"}}