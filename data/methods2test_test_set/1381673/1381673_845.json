{"test_class": {"identifier": "PortableParameterDefinitionTest", "superclass": "", "interfaces": "", "fields": [], "file": "drools-workbench-models/drools-workbench-models-datamodel-api/src/test/java/org/drools/workbench/models/datamodel/workitems/PortableParameterDefinitionTest.java"}, "test_case": {"identifier": "testAsStringWithBindings", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAsStringWithBindings() {\n        PortableBooleanParameterDefinition p1 = new PortableBooleanParameterDefinition();\n        p1.setValue( Boolean.TRUE );\n        p1.setBinding( \"$b\" );\n        assertEquals( \"$b\",\n                      p1.asString() );\n\n        PortableEnumParameterDefinition p2 = new PortableEnumParameterDefinition();\n        p2.setValue( \"PUPA\" );\n        p2.setBinding( \"$b\" );\n        p2.setClassName( \"Smurf\" );\n        assertEquals( \"$b\",\n                      p2.asString() );\n\n        PortableFloatParameterDefinition p3 = new PortableFloatParameterDefinition();\n        p3.setValue( 1.23f );\n        p3.setBinding( \"$b\" );\n        assertEquals( \"$b\",\n                      p3.asString() );\n\n        PortableIntegerParameterDefinition p4 = new PortableIntegerParameterDefinition();\n        p4.setValue( 123 );\n        p4.setBinding( \"$b\" );\n        assertEquals( \"$b\",\n                      p4.asString() );\n\n        PortableObjectParameterDefinition p5 = new PortableObjectParameterDefinition();\n        p5.setBinding( \"$b\" );\n        assertEquals( \"$b\",\n                      p5.asString() );\n\n        PortableStringParameterDefinition p6 = new PortableStringParameterDefinition();\n        p6.setValue( \"hello\" );\n        p6.setBinding( \"$b\" );\n        assertEquals( \"$b\",\n                      p6.asString() );\n\n    }", "signature": "void testAsStringWithBindings()", "full_signature": "@Test public void testAsStringWithBindings()", "class_method_signature": "PortableParameterDefinitionTest.testAsStringWithBindings()", "testcase": true, "constructor": false, "invocations": ["setValue", "setBinding", "assertEquals", "asString", "setValue", "setBinding", "setClassName", "assertEquals", "asString", "setValue", "setBinding", "assertEquals", "asString", "setValue", "setBinding", "assertEquals", "asString", "setBinding", "assertEquals", "asString", "setValue", "setBinding", "assertEquals", "asString"]}, "focal_class": {"identifier": "PortableParameterDefinition", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "PortableParameterDefinition", "parameters": "()", "modifiers": "public", "return": "", "signature": " PortableParameterDefinition()", "full_signature": "public  PortableParameterDefinition()", "class_method_signature": "PortableParameterDefinition.PortableParameterDefinition()", "testcase": false, "constructor": true}, {"identifier": "PortableParameterDefinition", "parameters": "( String name )", "modifiers": "public", "return": "", "signature": " PortableParameterDefinition( String name )", "full_signature": "public  PortableParameterDefinition( String name )", "class_method_signature": "PortableParameterDefinition.PortableParameterDefinition( String name )", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "PortableParameterDefinition.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "( String name )", "modifiers": "public", "return": "void", "signature": "void setName( String name )", "full_signature": "public void setName( String name )", "class_method_signature": "PortableParameterDefinition.setName( String name )", "testcase": false, "constructor": false}, {"identifier": "asString", "parameters": "()", "modifiers": "public abstract", "return": "String", "signature": "String asString()", "full_signature": "public abstract String asString()", "class_method_signature": "PortableParameterDefinition.asString()", "testcase": false, "constructor": false}, {"identifier": "getClassName", "parameters": "()", "modifiers": "public abstract", "return": "String", "signature": "String getClassName()", "full_signature": "public abstract String getClassName()", "class_method_signature": "PortableParameterDefinition.getClassName()", "testcase": false, "constructor": false}, {"identifier": "getSimpleClassName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSimpleClassName()", "full_signature": "public String getSimpleClassName()", "class_method_signature": "PortableParameterDefinition.getSimpleClassName()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "PortableParameterDefinition.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PortableParameterDefinition.hashCode()", "testcase": false, "constructor": false}], "file": "drools-workbench-models/drools-workbench-models-datamodel-api/src/main/java/org/drools/workbench/models/datamodel/workitems/PortableParameterDefinition.java"}, "focal_method": {"identifier": "asString", "parameters": "()", "modifiers": "public abstract", "return": "String", "body": "public abstract String asString();", "signature": "String asString()", "full_signature": "public abstract String asString()", "class_method_signature": "PortableParameterDefinition.asString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}