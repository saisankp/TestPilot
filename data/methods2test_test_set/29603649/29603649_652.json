{"test_class": {"identifier": "PackageBasedClassFinderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PACKAGE_NAME = \"a.b.c\";", "modifier": "private static final", "type": "String", "declarator": "PACKAGE_NAME = \"a.b.c\"", "var_name": "PACKAGE_NAME"}, {"original_string": "private static final Class<Object> INTERFACE_OR_CLASS = Object.class;", "modifier": "private static final", "type": "Class<Object>", "declarator": "INTERFACE_OR_CLASS = Object.class", "var_name": "INTERFACE_OR_CLASS"}, {"original_string": "private static final String MULTIPLE_CLASSES_FOUND_TEMPLATE = \"Warning! Multiple classes found '%s' in package '%s' as subtype of '%s'.\";", "modifier": "private static final", "type": "String", "declarator": "MULTIPLE_CLASSES_FOUND_TEMPLATE = \"Warning! Multiple classes found '%s' in package '%s' as subtype of '%s'.\"", "var_name": "MULTIPLE_CLASSES_FOUND_TEMPLATE"}, {"original_string": "@Mock\n    private PackageBasedClassFinderCore packageBasedClassFinderCore;", "modifier": "@Mock\n    private", "type": "PackageBasedClassFinderCore", "declarator": "packageBasedClassFinderCore", "var_name": "packageBasedClassFinderCore"}, {"original_string": "@InjectMocks\n    private PackageBasedClassFinder underTest;", "modifier": "@InjectMocks\n    private", "type": "PackageBasedClassFinder", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "@Mock\n    private Logger logger;", "modifier": "@Mock\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/test/java/com/epam/wilma/stubconfig/initializer/support/helper/PackageBasedClassFinderTest.java"}, "test_case": {"identifier": "testFindFirstOfShouldThrowClassNotFoundExceptionWhenNoClassIsFound", "parameters": "()", "modifiers": "@Test(expectedExceptions = ClassNotFoundException.class) public", "return": "void", "body": "@Test(expectedExceptions = ClassNotFoundException.class)\n    public void testFindFirstOfShouldThrowClassNotFoundExceptionWhenNoClassIsFound() throws ClassNotFoundException {\n        //GIVEN\n        Set<Class<? extends Object>> value = new HashSet<>();\n        given(packageBasedClassFinderCore.find(PACKAGE_NAME, INTERFACE_OR_CLASS)).willReturn(value);\n        //WHEN\n        underTest.findFirstOf(INTERFACE_OR_CLASS, PACKAGE_NAME);\n        //THEN exception is thrown\n    }", "signature": "void testFindFirstOfShouldThrowClassNotFoundExceptionWhenNoClassIsFound()", "full_signature": "@Test(expectedExceptions = ClassNotFoundException.class) public void testFindFirstOfShouldThrowClassNotFoundExceptionWhenNoClassIsFound()", "class_method_signature": "PackageBasedClassFinderTest.testFindFirstOfShouldThrowClassNotFoundExceptionWhenNoClassIsFound()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "find", "findFirstOf"]}, "focal_class": {"identifier": "PackageBasedClassFinder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String MULTIPLE_CLASSES_FOUND_TEMPLATE = \"Warning! Multiple classes found '%s' in package '%s' as subtype of '%s'.\";", "modifier": "private static final", "type": "String", "declarator": "MULTIPLE_CLASSES_FOUND_TEMPLATE = \"Warning! Multiple classes found '%s' in package '%s' as subtype of '%s'.\"", "var_name": "MULTIPLE_CLASSES_FOUND_TEMPLATE"}, {"original_string": "private static final String CLASS_NOT_FOUND_TEMPLATE = \"Could not find '%s' in package: '%s'\";", "modifier": "private static final", "type": "String", "declarator": "CLASS_NOT_FOUND_TEMPLATE = \"Could not find '%s' in package: '%s'\"", "var_name": "CLASS_NOT_FOUND_TEMPLATE"}, {"original_string": "private final Logger logger = LoggerFactory.getLogger(PackageBasedClassFinder.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(PackageBasedClassFinder.class)", "var_name": "logger"}, {"original_string": "@Autowired\n    private PackageBasedClassFinderCore packageBasedClassFinderCore;", "modifier": "@Autowired\n    private", "type": "PackageBasedClassFinderCore", "declarator": "packageBasedClassFinderCore", "var_name": "packageBasedClassFinderCore"}], "methods": [{"identifier": "findFirstOf", "parameters": "(final Class<T> interfaceOrClass, final String packageName)", "modifiers": "public", "return": "Class<? extends T>", "signature": "Class<? extends T> findFirstOf(final Class<T> interfaceOrClass, final String packageName)", "full_signature": "public Class<? extends T> findFirstOf(final Class<T> interfaceOrClass, final String packageName)", "class_method_signature": "PackageBasedClassFinder.findFirstOf(final Class<T> interfaceOrClass, final String packageName)", "testcase": false, "constructor": false}, {"identifier": "getResult", "parameters": "(final Iterator<Class<? extends T>> iterator)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "Class<? extends T>", "signature": "Class<? extends T> getResult(final Iterator<Class<? extends T>> iterator)", "full_signature": "@SuppressWarnings(\"unchecked\") private Class<? extends T> getResult(final Iterator<Class<? extends T>> iterator)", "class_method_signature": "PackageBasedClassFinder.getResult(final Iterator<Class<? extends T>> iterator)", "testcase": false, "constructor": false}, {"identifier": "warnOfMultipleClasses", "parameters": "(final Set<Class<? extends T>> setOfClasses, final String packageName, final Class<T> interfaceOrClass)", "modifiers": "private", "return": "void", "signature": "void warnOfMultipleClasses(final Set<Class<? extends T>> setOfClasses, final String packageName, final Class<T> interfaceOrClass)", "full_signature": "private void warnOfMultipleClasses(final Set<Class<? extends T>> setOfClasses, final String packageName, final Class<T> interfaceOrClass)", "class_method_signature": "PackageBasedClassFinder.warnOfMultipleClasses(final Set<Class<? extends T>> setOfClasses, final String packageName, final Class<T> interfaceOrClass)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/main/java/com/epam/wilma/stubconfig/initializer/support/helper/PackageBasedClassFinder.java"}, "focal_method": {"identifier": "findFirstOf", "parameters": "(final Class<T> interfaceOrClass, final String packageName)", "modifiers": "public", "return": "Class<? extends T>", "body": "public <T> Class<? extends T> findFirstOf(final Class<T> interfaceOrClass, final String packageName) throws ClassNotFoundException {\n        Class<? extends T> result = null;\n        Set<Class<? extends T>> classesThatImplementTheInterface = packageBasedClassFinderCore.find(packageName, interfaceOrClass);\n        Iterator<Class<? extends T>> iterator = classesThatImplementTheInterface.iterator();\n        if (iterator.hasNext()) {\n            result = getResult(iterator);\n        } else {\n            throw new ClassNotFoundException(String.format(CLASS_NOT_FOUND_TEMPLATE, interfaceOrClass.getName(), packageName));\n        }\n        warnOfMultipleClasses(classesThatImplementTheInterface, packageName, interfaceOrClass);\n        return result;\n\n    }", "signature": "Class<? extends T> findFirstOf(final Class<T> interfaceOrClass, final String packageName)", "full_signature": "public Class<? extends T> findFirstOf(final Class<T> interfaceOrClass, final String packageName)", "class_method_signature": "PackageBasedClassFinder.findFirstOf(final Class<T> interfaceOrClass, final String packageName)", "testcase": false, "constructor": false, "invocations": ["find", "iterator", "hasNext", "getResult", "format", "getName", "warnOfMultipleClasses"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}