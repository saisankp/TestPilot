{"test_class": {"identifier": "ErrorMessageFactoryTest", "superclass": "extends PresentationSpec", "interfaces": "", "fields": [], "file": "Presentation/src/test/java/com/example/presentation/exception/ErrorMessageFactoryTest.java"}, "test_case": {"identifier": "testUserNotFoundErrorMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUserNotFoundErrorMessage() {\n        String expectedMessage = Robolectric.application.getString(R.string.exception_message_user_not_found);\n        String actualMessage = ErrorMessageFactory.create(Robolectric.application, ErrorBundle.Error.UserNotFound);\n\n        assertThat(actualMessage, is(equalTo(expectedMessage)));\n    }", "signature": "void testUserNotFoundErrorMessage()", "full_signature": "@Test public void testUserNotFoundErrorMessage()", "class_method_signature": "ErrorMessageFactoryTest.testUserNotFoundErrorMessage()", "testcase": true, "constructor": false, "invocations": ["getString", "create", "assertThat", "is", "equalTo"]}, "focal_class": {"identifier": "ErrorMessageFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ErrorMessageFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " ErrorMessageFactory()", "full_signature": "private  ErrorMessageFactory()", "class_method_signature": "ErrorMessageFactory.ErrorMessageFactory()", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(Context context, ErrorBundle.Error exception)", "modifiers": "public static", "return": "String", "signature": "String create(Context context, ErrorBundle.Error exception)", "full_signature": "public static String create(Context context, ErrorBundle.Error exception)", "class_method_signature": "ErrorMessageFactory.create(Context context, ErrorBundle.Error exception)", "testcase": false, "constructor": false}], "file": "Presentation/src/main/java/com/example/presentation/exception/ErrorMessageFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(Context context, ErrorBundle.Error exception)", "modifiers": "public static", "return": "String", "body": "public static String create(Context context, ErrorBundle.Error exception) {\n      for (ErrorMessage errorMessage : ErrorMessage.values()) {\n          if(errorMessage.error.equals(exception)) {\n              return context.getString(errorMessage.message);\n          }\n      }\n      return context.getString(ErrorMessage.Unexpected.message);\n  }", "signature": "String create(Context context, ErrorBundle.Error exception)", "full_signature": "public static String create(Context context, ErrorBundle.Error exception)", "class_method_signature": "ErrorMessageFactory.create(Context context, ErrorBundle.Error exception)", "testcase": false, "constructor": false, "invocations": ["values", "equals", "getString", "getString"]}, "repository": {"repo_id": 27030629, "url": "https://github.com/nenick/AndroidAppDevelopment", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 17, "size": 6155, "license": "licensed"}}