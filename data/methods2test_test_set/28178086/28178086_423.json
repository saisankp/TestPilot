{"test_class": {"identifier": "TsPeriodTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final Date DATE_2001_01_10 = new GregorianCalendar(2001, Calendar.JANUARY, 10).getTime();", "modifier": "static final", "type": "Date", "declarator": "DATE_2001_01_10 = new GregorianCalendar(2001, Calendar.JANUARY, 10).getTime()", "var_name": "DATE_2001_01_10"}, {"original_string": "static final Date DATE_2001_03_10 = new GregorianCalendar(2001, Calendar.MARCH, 10).getTime();", "modifier": "static final", "type": "Date", "declarator": "DATE_2001_03_10 = new GregorianCalendar(2001, Calendar.MARCH, 10).getTime()", "var_name": "DATE_2001_03_10"}, {"original_string": "static final Day DAY_2001_01_10 = new Day(DATE_2001_01_10);", "modifier": "static final", "type": "Day", "declarator": "DAY_2001_01_10 = new Day(DATE_2001_01_10)", "var_name": "DAY_2001_01_10"}, {"original_string": "static final Day DAY_2001_03_10 = new Day(DATE_2001_03_10);", "modifier": "static final", "type": "Day", "declarator": "DAY_2001_03_10 = new Day(DATE_2001_03_10)", "var_name": "DAY_2001_03_10"}, {"original_string": "TsPeriod period_2001_03;", "modifier": "", "type": "TsPeriod", "declarator": "period_2001_03", "var_name": "period_2001_03"}], "file": "jtstoolkit/src/test/java/ec/tstoolkit/timeseries/simplets/TsPeriodTest.java"}, "test_case": {"identifier": "testIsAfterDate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsAfterDate() {\n        assertTrue(period_2001_03.isAfter(DATE_2001_01_10));\n        assertFalse(period_2001_03.isAfter(DATE_2001_03_10));\n    }", "signature": "void testIsAfterDate()", "full_signature": "@Test public void testIsAfterDate()", "class_method_signature": "TsPeriodTest.testIsAfterDate()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isAfter", "assertFalse", "isAfter"]}, "focal_class": {"identifier": "TsPeriod", "superclass": "", "interfaces": "implements Serializable, Cloneable, IPeriod,\n        Comparable<TsPeriod>", "fields": [{"original_string": "private static final long serialVersionUID = 7847770315060071968L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 7847770315060071968L", "var_name": "serialVersionUID"}, {"original_string": "private static final String[] g_sm = {\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\",\n        \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"};", "modifier": "private static final", "type": "String[]", "declarator": "g_sm = {\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\",\n        \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"}", "var_name": "g_sm"}, {"original_string": "private final TsFrequency m_freq;", "modifier": "private final", "type": "TsFrequency", "declarator": "m_freq", "var_name": "m_freq"}, {"original_string": "private int m_id;", "modifier": "private", "type": "int", "declarator": "m_id", "var_name": "m_id"}], "methods": [{"identifier": "formatPeriod", "parameters": "(TsFrequency freq, int pos)", "modifiers": "public static", "return": "String", "signature": "String formatPeriod(TsFrequency freq, int pos)", "full_signature": "public static String formatPeriod(TsFrequency freq, int pos)", "class_method_signature": "TsPeriod.formatPeriod(TsFrequency freq, int pos)", "testcase": false, "constructor": false}, {"identifier": "formatShortPeriod", "parameters": "(TsFrequency freq, int pos)", "modifiers": "public static", "return": "String", "signature": "String formatShortPeriod(TsFrequency freq, int pos)", "full_signature": "public static String formatShortPeriod(TsFrequency freq, int pos)", "class_method_signature": "TsPeriod.formatShortPeriod(TsFrequency freq, int pos)", "testcase": false, "constructor": false}, {"identifier": "TsPeriod", "parameters": "(final TsFrequency frequency)", "modifiers": "public", "return": "", "signature": " TsPeriod(final TsFrequency frequency)", "full_signature": "public  TsPeriod(final TsFrequency frequency)", "class_method_signature": "TsPeriod.TsPeriod(final TsFrequency frequency)", "testcase": false, "constructor": true}, {"identifier": "TsPeriod", "parameters": "(final TsFrequency frequency, final Date date)", "modifiers": "public", "return": "", "signature": " TsPeriod(final TsFrequency frequency, final Date date)", "full_signature": "public  TsPeriod(final TsFrequency frequency, final Date date)", "class_method_signature": "TsPeriod.TsPeriod(final TsFrequency frequency, final Date date)", "testcase": false, "constructor": true}, {"identifier": "TsPeriod", "parameters": "(final TsFrequency frequency, final Day day)", "modifiers": "public", "return": "", "signature": " TsPeriod(final TsFrequency frequency, final Day day)", "full_signature": "public  TsPeriod(final TsFrequency frequency, final Day day)", "class_method_signature": "TsPeriod.TsPeriod(final TsFrequency frequency, final Day day)", "testcase": false, "constructor": true}, {"identifier": "year", "parameters": "(int y)", "modifiers": "public static", "return": "TsPeriod", "signature": "TsPeriod year(int y)", "full_signature": "public static TsPeriod year(int y)", "class_method_signature": "TsPeriod.year(int y)", "testcase": false, "constructor": false}, {"identifier": "TsPeriod", "parameters": "(final TsFrequency frequency, final int id)", "modifiers": "", "return": "", "signature": " TsPeriod(final TsFrequency frequency, final int id)", "full_signature": "  TsPeriod(final TsFrequency frequency, final int id)", "class_method_signature": "TsPeriod.TsPeriod(final TsFrequency frequency, final int id)", "testcase": false, "constructor": true}, {"identifier": "TsPeriod", "parameters": "(final TsFrequency frequency, final int year,\n            final int position)", "modifiers": "public", "return": "", "signature": " TsPeriod(final TsFrequency frequency, final int year,\n            final int position)", "full_signature": "public  TsPeriod(final TsFrequency frequency, final int year,\n            final int position)", "class_method_signature": "TsPeriod.TsPeriod(final TsFrequency frequency, final int year,\n            final int position)", "testcase": false, "constructor": true}, {"identifier": "TsPeriod", "parameters": "(final TsFrequency frequency, final TsPeriod p)", "modifiers": "public", "return": "", "signature": " TsPeriod(final TsFrequency frequency, final TsPeriod p)", "full_signature": "public  TsPeriod(final TsFrequency frequency, final TsPeriod p)", "class_method_signature": "TsPeriod.TsPeriod(final TsFrequency frequency, final TsPeriod p)", "testcase": false, "constructor": true}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "TsPeriod", "signature": "TsPeriod clone()", "full_signature": "@Override public TsPeriod clone()", "class_method_signature": "TsPeriod.clone()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(final TsPeriod other)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(final TsPeriod other)", "full_signature": "@Override public int compareTo(final TsPeriod other)", "class_method_signature": "TsPeriod.compareTo(final TsPeriod other)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(long timeInMillis)", "modifiers": "private", "return": "boolean", "signature": "boolean contains(long timeInMillis)", "full_signature": "private boolean contains(long timeInMillis)", "class_method_signature": "TsPeriod.contains(long timeInMillis)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final Date dt)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(final Date dt)", "full_signature": "@Override public boolean contains(final Date dt)", "class_method_signature": "TsPeriod.contains(final Date dt)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final Day day)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(final Day day)", "full_signature": "public boolean contains(final Day day)", "class_method_signature": "TsPeriod.contains(final Day day)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "TsPeriod.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(TsPeriod other)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(TsPeriod other)", "full_signature": "public boolean equals(TsPeriod other)", "class_method_signature": "TsPeriod.equals(TsPeriod other)", "testcase": false, "constructor": false}, {"identifier": "firstday", "parameters": "()", "modifiers": "@Override public", "return": "Day", "signature": "Day firstday()", "full_signature": "@Override public Day firstday()", "class_method_signature": "TsPeriod.firstday()", "testcase": false, "constructor": false}, {"identifier": "getFrequency", "parameters": "()", "modifiers": "public", "return": "TsFrequency", "signature": "TsFrequency getFrequency()", "full_signature": "public TsFrequency getFrequency()", "class_method_signature": "TsPeriod.getFrequency()", "testcase": false, "constructor": false}, {"identifier": "lastPeriod", "parameters": "(TsFrequency freq)", "modifiers": "public", "return": "TsPeriod", "signature": "TsPeriod lastPeriod(TsFrequency freq)", "full_signature": "public TsPeriod lastPeriod(TsFrequency freq)", "class_method_signature": "TsPeriod.lastPeriod(TsFrequency freq)", "testcase": false, "constructor": false}, {"identifier": "firstPeriod", "parameters": "(TsFrequency freq)", "modifiers": "public", "return": "TsPeriod", "signature": "TsPeriod firstPeriod(TsFrequency freq)", "full_signature": "public TsPeriod firstPeriod(TsFrequency freq)", "class_method_signature": "TsPeriod.firstPeriod(TsFrequency freq)", "testcase": false, "constructor": false}, {"identifier": "getPeriodString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPeriodString()", "full_signature": "public String getPeriodString()", "class_method_signature": "TsPeriod.getPeriodString()", "testcase": false, "constructor": false}, {"identifier": "getPosition", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPosition()", "full_signature": "public int getPosition()", "class_method_signature": "TsPeriod.getPosition()", "testcase": false, "constructor": false}, {"identifier": "getYear", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getYear()", "full_signature": "public int getYear()", "class_method_signature": "TsPeriod.getYear()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TsPeriod.hashCode()", "testcase": false, "constructor": false}, {"identifier": "id", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int id()", "full_signature": "public int id()", "class_method_signature": "TsPeriod.id()", "testcase": false, "constructor": false}, {"identifier": "calcId", "parameters": "(final int freq, final int year, final int placeinyear)", "modifiers": "static", "return": "int", "signature": "int calcId(final int freq, final int year, final int placeinyear)", "full_signature": "static int calcId(final int freq, final int year, final int placeinyear)", "class_method_signature": "TsPeriod.calcId(final int freq, final int year, final int placeinyear)", "testcase": false, "constructor": false}, {"identifier": "isAfter", "parameters": "(final Date date)", "modifiers": "public", "return": "boolean", "signature": "boolean isAfter(final Date date)", "full_signature": "public boolean isAfter(final Date date)", "class_method_signature": "TsPeriod.isAfter(final Date date)", "testcase": false, "constructor": false}, {"identifier": "isAfter", "parameters": "(final Day day)", "modifiers": "public", "return": "boolean", "signature": "boolean isAfter(final Day day)", "full_signature": "public boolean isAfter(final Day day)", "class_method_signature": "TsPeriod.isAfter(final Day day)", "testcase": false, "constructor": false}, {"identifier": "isAfter", "parameters": "(final TsPeriod rp)", "modifiers": "public", "return": "boolean", "signature": "boolean isAfter(final TsPeriod rp)", "full_signature": "public boolean isAfter(final TsPeriod rp)", "class_method_signature": "TsPeriod.isAfter(final TsPeriod rp)", "testcase": false, "constructor": false}, {"identifier": "isBefore", "parameters": "(final Date date)", "modifiers": "public", "return": "boolean", "signature": "boolean isBefore(final Date date)", "full_signature": "public boolean isBefore(final Date date)", "class_method_signature": "TsPeriod.isBefore(final Date date)", "testcase": false, "constructor": false}, {"identifier": "isBefore", "parameters": "(final Day day)", "modifiers": "public", "return": "boolean", "signature": "boolean isBefore(final Day day)", "full_signature": "public boolean isBefore(final Day day)", "class_method_signature": "TsPeriod.isBefore(final Day day)", "testcase": false, "constructor": false}, {"identifier": "isBefore", "parameters": "(final TsPeriod rp)", "modifiers": "public", "return": "boolean", "signature": "boolean isBefore(final TsPeriod rp)", "full_signature": "public boolean isBefore(final TsPeriod rp)", "class_method_signature": "TsPeriod.isBefore(final TsPeriod rp)", "testcase": false, "constructor": false}, {"identifier": "isInside", "parameters": "(final TsPeriod p)", "modifiers": "public", "return": "boolean", "signature": "boolean isInside(final TsPeriod p)", "full_signature": "public boolean isInside(final TsPeriod p)", "class_method_signature": "TsPeriod.isInside(final TsPeriod p)", "testcase": false, "constructor": false}, {"identifier": "isNotAfter", "parameters": "(final TsPeriod rp)", "modifiers": "public", "return": "boolean", "signature": "boolean isNotAfter(final TsPeriod rp)", "full_signature": "public boolean isNotAfter(final TsPeriod rp)", "class_method_signature": "TsPeriod.isNotAfter(final TsPeriod rp)", "testcase": false, "constructor": false}, {"identifier": "isNotBefore", "parameters": "(final TsPeriod rp)", "modifiers": "public", "return": "boolean", "signature": "boolean isNotBefore(final TsPeriod rp)", "full_signature": "public boolean isNotBefore(final TsPeriod rp)", "class_method_signature": "TsPeriod.isNotBefore(final TsPeriod rp)", "testcase": false, "constructor": false}, {"identifier": "lastday", "parameters": "()", "modifiers": "@Override public", "return": "Day", "signature": "Day lastday()", "full_signature": "@Override public Day lastday()", "class_method_signature": "TsPeriod.lastday()", "testcase": false, "constructor": false}, {"identifier": "middle", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date middle()", "full_signature": "public Date middle()", "class_method_signature": "TsPeriod.middle()", "testcase": false, "constructor": false}, {"identifier": "minus", "parameters": "(int nperiods)", "modifiers": "public", "return": "TsPeriod", "signature": "TsPeriod minus(int nperiods)", "full_signature": "public TsPeriod minus(int nperiods)", "class_method_signature": "TsPeriod.minus(int nperiods)", "testcase": false, "constructor": false}, {"identifier": "minus", "parameters": "(final TsPeriod p)", "modifiers": "public", "return": "int", "signature": "int minus(final TsPeriod p)", "full_signature": "public int minus(final TsPeriod p)", "class_method_signature": "TsPeriod.minus(final TsPeriod p)", "testcase": false, "constructor": false}, {"identifier": "move", "parameters": "(final int nperiods)", "modifiers": "public", "return": "void", "signature": "void move(final int nperiods)", "full_signature": "public void move(final int nperiods)", "class_method_signature": "TsPeriod.move(final int nperiods)", "testcase": false, "constructor": false}, {"identifier": "plus", "parameters": "(int nperiods)", "modifiers": "public", "return": "TsPeriod", "signature": "TsPeriod plus(int nperiods)", "full_signature": "public TsPeriod plus(int nperiods)", "class_method_signature": "TsPeriod.plus(int nperiods)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(long timeInMillis)", "modifiers": "private", "return": "void", "signature": "void set(long timeInMillis)", "full_signature": "private void set(long timeInMillis)", "class_method_signature": "TsPeriod.set(long timeInMillis)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(final Date date)", "modifiers": "public final", "return": "void", "signature": "void set(final Date date)", "full_signature": "public final void set(final Date date)", "class_method_signature": "TsPeriod.set(final Date date)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(final Day day)", "modifiers": "public final", "return": "void", "signature": "void set(final Day day)", "full_signature": "public final void set(final Day day)", "class_method_signature": "TsPeriod.set(final Day day)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int year, final int position)", "modifiers": "public final", "return": "void", "signature": "void set(int year, final int position)", "full_signature": "public final void set(int year, final int position)", "class_method_signature": "TsPeriod.set(int year, final int position)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TsPeriod.toString()", "testcase": false, "constructor": false}], "file": "jtstoolkit/src/main/java/ec/tstoolkit/timeseries/simplets/TsPeriod.java"}, "focal_method": {"identifier": "isAfter", "parameters": "(final Date date)", "modifiers": "public", "return": "boolean", "body": "public boolean isAfter(final Date date) {\n        return isAfter(new Day(date));\n    }", "signature": "boolean isAfter(final Date date)", "full_signature": "public boolean isAfter(final Date date)", "class_method_signature": "TsPeriod.isAfter(final Date date)", "testcase": false, "constructor": false, "invocations": ["isAfter"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}