{"test_class": {"identifier": "ParamsTest", "superclass": "", "interfaces": "", "fields": [], "file": "jtss/src/test/java/ec/tss/tsproviders/utils/ParamsTest.java"}, "test_case": {"identifier": "testOnBoolean", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnBoolean() {\n        Boolean d = true;\n        Boolean n = false;\n        assertBehavior(Params.onBoolean(d, \"k\"), d, n, ImmutableMap.of(\"k\", n.toString()));\n    }", "signature": "void testOnBoolean()", "full_signature": "@Test public void testOnBoolean()", "class_method_signature": "ParamsTest.testOnBoolean()", "testcase": true, "constructor": false, "invocations": ["assertBehavior", "onBoolean", "of", "toString"]}, "focal_class": {"identifier": "Params", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Params", "parameters": "()", "modifiers": "private", "return": "", "signature": " Params()", "full_signature": "private  Params()", "class_method_signature": "Params.Params()", "testcase": false, "constructor": true}, {"identifier": "onString", "parameters": "(@NonNull String defaultValue, @NonNull String key)", "modifiers": "@NonNull public static", "return": "IParam<S, String>", "signature": "IParam<S, String> onString(@NonNull String defaultValue, @NonNull String key)", "full_signature": "@NonNull public static IParam<S, String> onString(@NonNull String defaultValue, @NonNull String key)", "class_method_signature": "Params.onString(@NonNull String defaultValue, @NonNull String key)", "testcase": false, "constructor": false}, {"identifier": "onFile", "parameters": "(@NonNull File defaultValue, @NonNull String key)", "modifiers": "@NonNull public static", "return": "IParam<S, File>", "signature": "IParam<S, File> onFile(@NonNull File defaultValue, @NonNull String key)", "full_signature": "@NonNull public static IParam<S, File> onFile(@NonNull File defaultValue, @NonNull String key)", "class_method_signature": "Params.onFile(@NonNull File defaultValue, @NonNull String key)", "testcase": false, "constructor": false}, {"identifier": "onEnum", "parameters": "(@NonNull X defaultValue, @NonNull String key)", "modifiers": "@NonNull public static", "return": "IParam<S, X>", "signature": "IParam<S, X> onEnum(@NonNull X defaultValue, @NonNull String key)", "full_signature": "@NonNull public static IParam<S, X> onEnum(@NonNull X defaultValue, @NonNull String key)", "class_method_signature": "Params.onEnum(@NonNull X defaultValue, @NonNull String key)", "testcase": false, "constructor": false}, {"identifier": "onInteger", "parameters": "(@NonNull Integer defaultValue, @NonNull String key)", "modifiers": "@NonNull public static", "return": "IParam<S, Integer>", "signature": "IParam<S, Integer> onInteger(@NonNull Integer defaultValue, @NonNull String key)", "full_signature": "@NonNull public static IParam<S, Integer> onInteger(@NonNull Integer defaultValue, @NonNull String key)", "class_method_signature": "Params.onInteger(@NonNull Integer defaultValue, @NonNull String key)", "testcase": false, "constructor": false}, {"identifier": "onLong", "parameters": "(@NonNull Long defaultValue, @NonNull String key)", "modifiers": "@NonNull public static", "return": "IParam<S, Long>", "signature": "IParam<S, Long> onLong(@NonNull Long defaultValue, @NonNull String key)", "full_signature": "@NonNull public static IParam<S, Long> onLong(@NonNull Long defaultValue, @NonNull String key)", "class_method_signature": "Params.onLong(@NonNull Long defaultValue, @NonNull String key)", "testcase": false, "constructor": false}, {"identifier": "onBoolean", "parameters": "(@NonNull Boolean defaultValue, @NonNull String key)", "modifiers": "@NonNull public static", "return": "IParam<S, Boolean>", "signature": "IParam<S, Boolean> onBoolean(@NonNull Boolean defaultValue, @NonNull String key)", "full_signature": "@NonNull public static IParam<S, Boolean> onBoolean(@NonNull Boolean defaultValue, @NonNull String key)", "class_method_signature": "Params.onBoolean(@NonNull Boolean defaultValue, @NonNull String key)", "testcase": false, "constructor": false}, {"identifier": "onCharacter", "parameters": "(@NonNull Character defaultValue, @NonNull String key)", "modifiers": "@NonNull public static", "return": "IParam<S, Character>", "signature": "IParam<S, Character> onCharacter(@NonNull Character defaultValue, @NonNull String key)", "full_signature": "@NonNull public static IParam<S, Character> onCharacter(@NonNull Character defaultValue, @NonNull String key)", "class_method_signature": "Params.onCharacter(@NonNull Character defaultValue, @NonNull String key)", "testcase": false, "constructor": false}, {"identifier": "onDouble", "parameters": "(@NonNull Double defaultValue, @NonNull String key)", "modifiers": "@NonNull public static", "return": "IParam<S, Double>", "signature": "IParam<S, Double> onDouble(@NonNull Double defaultValue, @NonNull String key)", "full_signature": "@NonNull public static IParam<S, Double> onDouble(@NonNull Double defaultValue, @NonNull String key)", "class_method_signature": "Params.onDouble(@NonNull Double defaultValue, @NonNull String key)", "testcase": false, "constructor": false}, {"identifier": "onCharset", "parameters": "(@NonNull Charset defaultValue, @NonNull String key)", "modifiers": "@NonNull public static", "return": "IParam<S, Charset>", "signature": "IParam<S, Charset> onCharset(@NonNull Charset defaultValue, @NonNull String key)", "full_signature": "@NonNull public static IParam<S, Charset> onCharset(@NonNull Charset defaultValue, @NonNull String key)", "class_method_signature": "Params.onCharset(@NonNull Charset defaultValue, @NonNull String key)", "testcase": false, "constructor": false}, {"identifier": "onDataFormat", "parameters": "(@NonNull DataFormat defaultValue, @NonNull String localeKey, @NonNull String datePatternKey)", "modifiers": "@Deprecated @NonNull public static", "return": "IParam<S, DataFormat>", "signature": "IParam<S, DataFormat> onDataFormat(@NonNull DataFormat defaultValue, @NonNull String localeKey, @NonNull String datePatternKey)", "full_signature": "@Deprecated @NonNull public static IParam<S, DataFormat> onDataFormat(@NonNull DataFormat defaultValue, @NonNull String localeKey, @NonNull String datePatternKey)", "class_method_signature": "Params.onDataFormat(@NonNull DataFormat defaultValue, @NonNull String localeKey, @NonNull String datePatternKey)", "testcase": false, "constructor": false}, {"identifier": "onDataFormat", "parameters": "(@NonNull DataFormat defaultValue, @NonNull String localeKey, @NonNull String datePatternKey, @NonNull String numberPatternKey)", "modifiers": "@NonNull public static", "return": "IParam<S, DataFormat>", "signature": "IParam<S, DataFormat> onDataFormat(@NonNull DataFormat defaultValue, @NonNull String localeKey, @NonNull String datePatternKey, @NonNull String numberPatternKey)", "full_signature": "@NonNull public static IParam<S, DataFormat> onDataFormat(@NonNull DataFormat defaultValue, @NonNull String localeKey, @NonNull String datePatternKey, @NonNull String numberPatternKey)", "class_method_signature": "Params.onDataFormat(@NonNull DataFormat defaultValue, @NonNull String localeKey, @NonNull String datePatternKey, @NonNull String numberPatternKey)", "testcase": false, "constructor": false}, {"identifier": "onDoubleArray", "parameters": "(@NonNull String key, @NonNull double... defaultValues)", "modifiers": "@NonNull public static", "return": "IParam<S, double[]>", "signature": "IParam<S, double[]> onDoubleArray(@NonNull String key, @NonNull double... defaultValues)", "full_signature": "@NonNull public static IParam<S, double[]> onDoubleArray(@NonNull String key, @NonNull double... defaultValues)", "class_method_signature": "Params.onDoubleArray(@NonNull String key, @NonNull double... defaultValues)", "testcase": false, "constructor": false}, {"identifier": "onStringArray", "parameters": "(@NonNull String key, @NonNull String... defaultValues)", "modifiers": "@NonNull public static", "return": "IParam<S, String[]>", "signature": "IParam<S, String[]> onStringArray(@NonNull String key, @NonNull String... defaultValues)", "full_signature": "@NonNull public static IParam<S, String[]> onStringArray(@NonNull String key, @NonNull String... defaultValues)", "class_method_signature": "Params.onStringArray(@NonNull String key, @NonNull String... defaultValues)", "testcase": false, "constructor": false}, {"identifier": "onStringList", "parameters": "(@NonNull List<String> defaultValue, @NonNull String key, @NonNull Splitter splitter, @NonNull Joiner joiner)", "modifiers": "@NonNull public static", "return": "IParam<S, List<String>>", "signature": "IParam<S, List<String>> onStringList(@NonNull List<String> defaultValue, @NonNull String key, @NonNull Splitter splitter, @NonNull Joiner joiner)", "full_signature": "@NonNull public static IParam<S, List<String>> onStringList(@NonNull List<String> defaultValue, @NonNull String key, @NonNull Splitter splitter, @NonNull Joiner joiner)", "class_method_signature": "Params.onStringList(@NonNull List<String> defaultValue, @NonNull String key, @NonNull Splitter splitter, @NonNull Joiner joiner)", "testcase": false, "constructor": false}, {"identifier": "onObsGathering", "parameters": "(@NonNull ObsGathering defaultValue, @NonNull String frequencyKey, @NonNull String aggregationKey, @NonNull String skipKey)", "modifiers": "@NonNull public static", "return": "IParam<S, ObsGathering>", "signature": "IParam<S, ObsGathering> onObsGathering(@NonNull ObsGathering defaultValue, @NonNull String frequencyKey, @NonNull String aggregationKey, @NonNull String skipKey)", "full_signature": "@NonNull public static IParam<S, ObsGathering> onObsGathering(@NonNull ObsGathering defaultValue, @NonNull String frequencyKey, @NonNull String aggregationKey, @NonNull String skipKey)", "class_method_signature": "Params.onObsGathering(@NonNull ObsGathering defaultValue, @NonNull String frequencyKey, @NonNull String aggregationKey, @NonNull String skipKey)", "testcase": false, "constructor": false}], "file": "jtss/src/main/java/ec/tss/tsproviders/utils/Params.java"}, "focal_method": {"identifier": "onBoolean", "parameters": "(@NonNull Boolean defaultValue, @NonNull String key)", "modifiers": "@NonNull public static", "return": "IParam<S, Boolean>", "body": "@NonNull\n    public static <S extends IConfig> IParam<S, Boolean> onBoolean(@NonNull Boolean defaultValue, @NonNull String key) {\n        return new SingleParam<>(defaultValue, key, Parsers.boolParser(), Formatters.boolFormatter());\n    }", "signature": "IParam<S, Boolean> onBoolean(@NonNull Boolean defaultValue, @NonNull String key)", "full_signature": "@NonNull public static IParam<S, Boolean> onBoolean(@NonNull Boolean defaultValue, @NonNull String key)", "class_method_signature": "Params.onBoolean(@NonNull Boolean defaultValue, @NonNull String key)", "testcase": false, "constructor": false, "invocations": ["boolParser", "boolFormatter"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}