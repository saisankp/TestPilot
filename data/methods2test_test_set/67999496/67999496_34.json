{"test_class": {"identifier": "MeshImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/gentics/mesh/cli/MeshImplTest.java"}, "test_case": {"identifier": "testHostname", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testHostname() throws Exception {\n\t\tMeshImpl mesh = new MeshImpl(options());\n\t\tassertNotNull(mesh.getHostname());\n\t}", "signature": "void testHostname()", "full_signature": "@Test public void testHostname()", "class_method_signature": "MeshImplTest.testHostname()", "testcase": true, "constructor": false, "invocations": ["options", "assertNotNull", "getHostname"]}, "focal_class": {"identifier": "MeshImpl", "superclass": "", "interfaces": "implements Mesh", "fields": [{"original_string": "private static AtomicLong instanceCounter = new AtomicLong(0);", "modifier": "private static", "type": "AtomicLong", "declarator": "instanceCounter = new AtomicLong(0)", "var_name": "instanceCounter"}, {"original_string": "private static final Logger log;", "modifier": "private static final", "type": "Logger", "declarator": "log", "var_name": "log"}, {"original_string": "private final MeshComponent.Builder builder;", "modifier": "private final", "type": "MeshComponent.Builder", "declarator": "builder", "var_name": "builder"}, {"original_string": "private MeshCustomLoader<Vertx> verticleLoader;", "modifier": "private", "type": "MeshCustomLoader<Vertx>", "declarator": "verticleLoader", "var_name": "verticleLoader"}, {"original_string": "private MeshOptions options;", "modifier": "private", "type": "MeshOptions", "declarator": "options", "var_name": "options"}, {"original_string": "private CountDownLatch latch = new CountDownLatch(1);", "modifier": "private", "type": "CountDownLatch", "declarator": "latch = new CountDownLatch(1)", "var_name": "latch"}, {"original_string": "private MeshStatus status = MeshStatus.STARTING;", "modifier": "private", "type": "MeshStatus", "declarator": "status = MeshStatus.STARTING", "var_name": "status"}, {"original_string": "private MeshComponent meshInternal;", "modifier": "private", "type": "MeshComponent", "declarator": "meshInternal", "var_name": "meshInternal"}, {"original_string": "boolean shutdown = false;", "modifier": "", "type": "boolean", "declarator": "shutdown = false", "var_name": "shutdown"}], "methods": [{"identifier": "MeshImpl", "parameters": "(MeshOptions options)", "modifiers": "public", "return": "", "signature": " MeshImpl(MeshOptions options)", "full_signature": "public  MeshImpl(MeshOptions options)", "class_method_signature": "MeshImpl.MeshImpl(MeshOptions options)", "testcase": false, "constructor": true}, {"identifier": "MeshImpl", "parameters": "(MeshOptions options, MeshComponent.Builder builder)", "modifiers": "public", "return": "", "signature": " MeshImpl(MeshOptions options, MeshComponent.Builder builder)", "full_signature": "public  MeshImpl(MeshOptions options, MeshComponent.Builder builder)", "class_method_signature": "MeshImpl.MeshImpl(MeshOptions options, MeshComponent.Builder builder)", "testcase": false, "constructor": true}, {"identifier": "getVertx", "parameters": "()", "modifiers": "@Override public", "return": "Vertx", "signature": "Vertx getVertx()", "full_signature": "@Override public Vertx getVertx()", "class_method_signature": "MeshImpl.getVertx()", "testcase": false, "constructor": false}, {"identifier": "getRxVertx", "parameters": "()", "modifiers": "@Override public", "return": "io.vertx.reactivex.core.Vertx", "signature": "io.vertx.reactivex.core.Vertx getRxVertx()", "full_signature": "@Override public io.vertx.reactivex.core.Vertx getRxVertx()", "class_method_signature": "MeshImpl.getRxVertx()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "Mesh", "signature": "Mesh run()", "full_signature": "@Override public Mesh run()", "class_method_signature": "MeshImpl.run()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(boolean block)", "modifiers": "@Override public", "return": "Mesh", "signature": "Mesh run(boolean block)", "full_signature": "@Override public Mesh run(boolean block)", "class_method_signature": "MeshImpl.run(boolean block)", "testcase": false, "constructor": false}, {"identifier": "setupKeystore", "parameters": "(MeshOptions options)", "modifiers": "private", "return": "void", "signature": "void setupKeystore(MeshOptions options)", "full_signature": "private void setupKeystore(MeshOptions options)", "class_method_signature": "MeshImpl.setupKeystore(MeshOptions options)", "testcase": false, "constructor": false}, {"identifier": "isFirstApril", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isFirstApril()", "full_signature": "private boolean isFirstApril()", "class_method_signature": "MeshImpl.isFirstApril()", "testcase": false, "constructor": false}, {"identifier": "checkSystemRequirements", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkSystemRequirements()", "full_signature": "private void checkSystemRequirements()", "class_method_signature": "MeshImpl.checkSystemRequirements()", "testcase": false, "constructor": false}, {"identifier": "invokeUpdateCheck", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void invokeUpdateCheck()", "full_signature": "public void invokeUpdateCheck()", "class_method_signature": "MeshImpl.invokeUpdateCheck()", "testcase": false, "constructor": false}, {"identifier": "getHostname", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getHostname()", "full_signature": "public String getHostname()", "class_method_signature": "MeshImpl.getHostname()", "testcase": false, "constructor": false}, {"identifier": "registerShutdownHook", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void registerShutdownHook()", "full_signature": "private void registerShutdownHook()", "class_method_signature": "MeshImpl.registerShutdownHook()", "testcase": false, "constructor": false}, {"identifier": "dontExit", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void dontExit()", "full_signature": "@Override public void dontExit()", "class_method_signature": "MeshImpl.dontExit()", "testcase": false, "constructor": false}, {"identifier": "printProductInformation", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void printProductInformation()", "full_signature": "private void printProductInformation()", "class_method_signature": "MeshImpl.printProductInformation()", "testcase": false, "constructor": false}, {"identifier": "printAprilFoolJoke", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void printAprilFoolJoke()", "full_signature": "private void printAprilFoolJoke()", "class_method_signature": "MeshImpl.printAprilFoolJoke()", "testcase": false, "constructor": false}, {"identifier": "getVertxVersion", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getVertxVersion()", "full_signature": "private String getVertxVersion()", "class_method_signature": "MeshImpl.getVertxVersion()", "testcase": false, "constructor": false}, {"identifier": "infoLine", "parameters": "(String text)", "modifiers": "private static", "return": "String", "signature": "String infoLine(String text)", "full_signature": "private static String infoLine(String text)", "class_method_signature": "MeshImpl.infoLine(String text)", "testcase": false, "constructor": false}, {"identifier": "setCustomLoader", "parameters": "(MeshCustomLoader<Vertx> verticleLoader)", "modifiers": "@Override public", "return": "void", "signature": "void setCustomLoader(MeshCustomLoader<Vertx> verticleLoader)", "full_signature": "@Override public void setCustomLoader(MeshCustomLoader<Vertx> verticleLoader)", "class_method_signature": "MeshImpl.setCustomLoader(MeshCustomLoader<Vertx> verticleLoader)", "testcase": false, "constructor": false}, {"identifier": "getOptions", "parameters": "()", "modifiers": "@Override public", "return": "MeshOptions", "signature": "MeshOptions getOptions()", "full_signature": "@Override public MeshOptions getOptions()", "class_method_signature": "MeshImpl.getOptions()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void shutdown()", "full_signature": "@Override public void shutdown()", "class_method_signature": "MeshImpl.shutdown()", "testcase": false, "constructor": false}, {"identifier": "createLockFile", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createLockFile()", "full_signature": "private void createLockFile()", "class_method_signature": "MeshImpl.createLockFile()", "testcase": false, "constructor": false}, {"identifier": "hasLockFile", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean hasLockFile()", "full_signature": "private boolean hasLockFile()", "class_method_signature": "MeshImpl.hasLockFile()", "testcase": false, "constructor": false}, {"identifier": "deleteLock", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void deleteLock()", "full_signature": "private void deleteLock()", "class_method_signature": "MeshImpl.deleteLock()", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "()", "modifiers": "@Override public", "return": "MeshStatus", "signature": "MeshStatus getStatus()", "full_signature": "@Override public MeshStatus getStatus()", "class_method_signature": "MeshImpl.getStatus()", "testcase": false, "constructor": false}, {"identifier": "setStatus", "parameters": "(MeshStatus status)", "modifiers": "@Override public", "return": "Mesh", "signature": "Mesh setStatus(MeshStatus status)", "full_signature": "@Override public Mesh setStatus(MeshStatus status)", "class_method_signature": "MeshImpl.setStatus(MeshStatus status)", "testcase": false, "constructor": false}, {"identifier": "deployPlugin", "parameters": "(Class<?> clazz, String id)", "modifiers": "@Override public", "return": "Completable", "signature": "Completable deployPlugin(Class<?> clazz, String id)", "full_signature": "@Override public Completable deployPlugin(Class<?> clazz, String id)", "class_method_signature": "MeshImpl.deployPlugin(Class<?> clazz, String id)", "testcase": false, "constructor": false}, {"identifier": "pluginIds", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> pluginIds()", "full_signature": "@Override public Set<String> pluginIds()", "class_method_signature": "MeshImpl.pluginIds()", "testcase": false, "constructor": false}, {"identifier": "internal", "parameters": "()", "modifiers": "@Override public", "return": "T", "signature": "T internal()", "full_signature": "@Override public T internal()", "class_method_signature": "MeshImpl.internal()", "testcase": false, "constructor": false}, {"identifier": "setMeshInternal", "parameters": "(T meshInternal)", "modifiers": "@Override public", "return": "void", "signature": "void setMeshInternal(T meshInternal)", "full_signature": "@Override public void setMeshInternal(T meshInternal)", "class_method_signature": "MeshImpl.setMeshInternal(T meshInternal)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/gentics/mesh/cli/MeshImpl.java"}, "focal_method": {"identifier": "getHostname", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getHostname() {\n\t\ttry {\n\t\t\treturn InetAddress.getLocalHost().getHostName();\n\t\t} catch (UnknownHostException e) {\n\t\t\tString OS = System.getProperty(\"os.name\").toLowerCase();\n\t\t\tif (OS.indexOf(\"win\") >= 0) {\n\t\t\t\treturn System.getenv(\"COMPUTERNAME\");\n\t\t\t} else {\n\t\t\t\tif (OS.indexOf(\"nix\") >= 0 || OS.indexOf(\"nux\") >= 0) {\n\t\t\t\t\treturn System.getenv(\"HOSTNAME\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\n\t}", "signature": "String getHostname()", "full_signature": "public String getHostname()", "class_method_signature": "MeshImpl.getHostname()", "testcase": false, "constructor": false, "invocations": ["getHostName", "getLocalHost", "toLowerCase", "getProperty", "indexOf", "getenv", "indexOf", "indexOf", "getenv"]}, "repository": {"repo_id": 67999496, "url": "https://github.com/gentics/mesh", "stars": 412, "created": "9/12/2016 10:28:41 AM +00:00", "updates": "2020-01-27T10:25:42+00:00", "fork": "False", "license": "licensed"}}