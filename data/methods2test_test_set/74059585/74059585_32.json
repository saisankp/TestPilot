{"test_class": {"identifier": "CloudTraceSdkTraceServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Tracers mockTracers = mock(Tracers.class);", "modifier": "private final", "type": "Tracers", "declarator": "mockTracers = mock(Tracers.class)", "var_name": "mockTracers"}, {"original_string": "private final Tracer mockTracer = mock(Tracer.class);", "modifier": "private final", "type": "Tracer", "declarator": "mockTracer = mock(Tracer.class)", "var_name": "mockTracer"}], "file": "jdbc/driver/src/test/java/com/google/cloud/trace/jdbc/CloudTraceSdkTraceServiceTest.java"}, "test_case": {"identifier": "exampleSpan", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void exampleSpan() {\n    when(mockTracers.getCurrent()).thenReturn(mockTracer);\n    TraceService traceService = new CloudTraceSdkTraceService(mockTracers);\n\n    try (TraceService.Span span = traceService.open(\"JDBC.Driver#connect\")) {\n      span.annotate(Label.DATABASE_URL, Optional.of(\"jdbc:mockdriver\"));\n      span.annotate(Label.SQL_TEXT, Optional.absent());\n    }\n\n    ArgumentCaptor<Labels> labels = ArgumentCaptor.forClass(Labels.class);\n\n    InOrder inOrder = inOrder(mockTracer);\n    inOrder.verify(mockTracer).startSpan(\"JDBC.Driver#connect\");\n    inOrder.verify(mockTracer).annotateSpan(eq(null), labels.capture());\n    inOrder.verify(mockTracer).endSpan(null);\n    verifyNoMoreInteractions(mockTracer); // No annotation for SQL_TEXT created.\n\n    assertThat(labels.getValue().getLabels())\n        .containsExactly(new com.google.cloud.trace.core.Label(\n            \"g.co/jdbc/url\", \"jdbc:mockdriver\"));\n  }", "signature": "void exampleSpan()", "full_signature": "@Test public void exampleSpan()", "class_method_signature": "CloudTraceSdkTraceServiceTest.exampleSpan()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getCurrent", "open", "annotate", "of", "annotate", "absent", "forClass", "inOrder", "startSpan", "verify", "annotateSpan", "verify", "eq", "capture", "endSpan", "verify", "verifyNoMoreInteractions", "containsExactly", "assertThat", "getLabels", "getValue"]}, "focal_class": {"identifier": "CloudTraceSdkTraceService", "superclass": "extends TraceService", "interfaces": "", "fields": [{"original_string": "private final Tracers tracers;", "modifier": "private final", "type": "Tracers", "declarator": "tracers", "var_name": "tracers"}], "methods": [{"identifier": "CloudTraceSdkTraceService", "parameters": "()", "modifiers": "public", "return": "", "signature": " CloudTraceSdkTraceService()", "full_signature": "public  CloudTraceSdkTraceService()", "class_method_signature": "CloudTraceSdkTraceService.CloudTraceSdkTraceService()", "testcase": false, "constructor": true}, {"identifier": "CloudTraceSdkTraceService", "parameters": "(Tracers tracers)", "modifiers": "@VisibleForTesting", "return": "", "signature": " CloudTraceSdkTraceService(Tracers tracers)", "full_signature": "@VisibleForTesting  CloudTraceSdkTraceService(Tracers tracers)", "class_method_signature": "CloudTraceSdkTraceService.CloudTraceSdkTraceService(Tracers tracers)", "testcase": false, "constructor": true}, {"identifier": "open", "parameters": "(String name)", "modifiers": "@Override public", "return": "Span", "signature": "Span open(String name)", "full_signature": "@Override public Span open(String name)", "class_method_signature": "CloudTraceSdkTraceService.open(String name)", "testcase": false, "constructor": false}], "file": "jdbc/driver/src/main/java/com/google/cloud/trace/jdbc/CloudTraceSdkTraceService.java"}, "focal_method": {"identifier": "open", "parameters": "(String name)", "modifiers": "@Override public", "return": "Span", "body": "@Override\n  public Span open(String name) {\n    checkNotNull(name);\n\n    return new SpanImpl(tracers.getCurrent(), name);\n  }", "signature": "Span open(String name)", "full_signature": "@Override public Span open(String name)", "class_method_signature": "CloudTraceSdkTraceService.open(String name)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "getCurrent"]}, "repository": {"repo_id": 74059585, "url": "https://github.com/GoogleCloudPlatform/cloud-trace-java-instrumentation", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 10, "size": 141, "license": "licensed"}}