{"test_class": {"identifier": "EmailHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(EmailHandlerTest.class);", "modifier": "private static", "type": "org.slf4j.Logger", "declarator": "log = org.slf4j.LoggerFactory.getLogger(EmailHandlerTest.class)", "var_name": "log"}], "file": "gdp-common-utilities/src/test/java/gov/usgs/cida/gdp/communication/EmailHandlerTest.java"}, "test_case": {"identifier": "testSendMessageNoCcBcc", "parameters": "()", "modifiers": "@Test @Ignore public", "return": "void", "body": "@Test\n    @Ignore\n    public void testSendMessageNoCcBcc() throws Exception {\n        List<String> bcc = new LinkedList<String>();\n        EmailMessage message = new EmailMessage(\"test@test.doesnt.exist.gov\", \"test@testing.purposes.on.ly.gov\", null, \"Test\", \"Test\");\n\n        try {\n            EmailHandler.sendMessage(message);\n        } catch (Exception e) {\n            assert(false);\n        }\n\n        assert(true);\n    }", "signature": "void testSendMessageNoCcBcc()", "full_signature": "@Test @Ignore public void testSendMessageNoCcBcc()", "class_method_signature": "EmailHandlerTest.testSendMessageNoCcBcc()", "testcase": true, "constructor": false, "invocations": ["sendMessage"]}, "focal_class": {"identifier": "EmailHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static org.slf4j.Logger log = LoggerFactory.getLogger(EmailHandler.class);", "modifier": "private static", "type": "org.slf4j.Logger", "declarator": "log = LoggerFactory.getLogger(EmailHandler.class)", "var_name": "log"}], "methods": [{"identifier": "sendMessage", "parameters": "(EmailMessage message)", "modifiers": "public static", "return": "void", "signature": "void sendMessage(EmailMessage message)", "full_signature": "public static void sendMessage(EmailMessage message)", "class_method_signature": "EmailHandler.sendMessage(EmailMessage message)", "testcase": false, "constructor": false}], "file": "gdp-common-utilities/src/main/java/gov/usgs/cida/gdp/communication/EmailHandler.java"}, "focal_method": {"identifier": "sendMessage", "parameters": "(EmailMessage message)", "modifiers": "public static", "return": "void", "body": "public static void sendMessage(EmailMessage message) throws AddressException, MessagingException {\n\t\tProperties properties = System.getProperties();\n\n                properties.put(\"mail.smtp.host\", AppConstant.EMAIL_HOST.getValue());\n                properties.put(\"mail.smtp.port\", AppConstant.EMAIL_PORT.getValue());\n\n\t\tSession session = Session.getInstance(properties, null);\n\t\tsession.setDebug(true);\n\n\t\tMessage msg = new MimeMessage(session);\n                \n\t\tInternetAddress[] bccList = new InternetAddress[message.getBcc().size()];\n\t\tfor (int counter = 0;counter < message.getBcc().size();counter++)  {\n\t\t\tInternetAddress email = new InternetAddress();\n\t\t\temail.setAddress(message.getBcc().get(counter));\n\t\t\tbccList[counter] = email;\n\t\t}\n\n\t\tInternetAddress[] ccList = new InternetAddress[message.getCc().size()];\n\t\tfor (int counter = 0;counter < message.getCc().size();counter++)  {\n\t\t\tInternetAddress email = new InternetAddress();\n\t\t\temail.setAddress(message.getCc().get(counter));\n\t\t\tccList[counter] = email;\n\t\t}\n\n\t\tmsg.setRecipient(Message.RecipientType.TO, new InternetAddress(message.getTo()));\n\t\tif (bccList.length > 0) {\n\t\t\tmsg.setRecipients(Message.RecipientType.BCC, bccList);\n\t\t}\n\t\tif (ccList.length > 0) {\n\t\t\tmsg.setRecipients(Message.RecipientType.CC, ccList);\n\t\t}\n\t\tmsg.setFrom(new InternetAddress(message.getFrom()));\n\t\tmsg.setSubject(message.getSubject());\n\t\tmsg.setContent(message.getContent(), \"text/plain\");\n                msg.setReplyTo(message.getReplyTo());\n\t\t\n                Transport.send(msg);\n\t\tlog.info(new StringBuilder(\"Sent E-Mail From: \")\n                        .append(message.getFrom())\n                        .append(\" To: \")\n                        .append(message.getTo())\n                        .append(\" Content: \" )\n                        .append(message.getContent()).toString()\n                        );\n\t}", "signature": "void sendMessage(EmailMessage message)", "full_signature": "public static void sendMessage(EmailMessage message)", "class_method_signature": "EmailHandler.sendMessage(EmailMessage message)", "testcase": false, "constructor": false, "invocations": ["getProperties", "put", "getValue", "put", "getValue", "getInstance", "setDebug", "size", "getBcc", "size", "getBcc", "setAddress", "get", "getBcc", "size", "getCc", "size", "getCc", "setAddress", "get", "getCc", "setRecipient", "getTo", "setRecipients", "setRecipients", "setFrom", "getFrom", "setSubject", "getSubject", "setContent", "getContent", "setReplyTo", "getReplyTo", "send", "info", "toString", "append", "append", "append", "append", "append", "getFrom", "getTo", "getContent"]}, "repository": {"repo_id": 11799031, "url": "https://github.com/USGS-CIDA/geo-data-portal", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 9, "size": 178468, "license": "licensed"}}