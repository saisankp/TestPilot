{"test_class": {"identifier": "SmsYunPianClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private SmsYunPianClient smsYunPianClient;", "modifier": "@Autowired\n    private", "type": "SmsYunPianClient", "declarator": "smsYunPianClient", "var_name": "smsYunPianClient"}, {"original_string": "private String sign = null;", "modifier": "private", "type": "String", "declarator": "sign = null", "var_name": "sign"}], "file": "moved/system/system-service-impl/src/test/java/cn/iocoder/mall/admin/client/SmsYunPianClientTest.java"}, "test_case": {"identifier": "batchSendTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void batchSendTest() {\n        String mobile = \"13302926050\";\n        String template = \"\u60a8\u7684\u9a8c\u8bc1\u7801\u662f#code#\uff0c\u6253\u6b7b\u4e5f\u4e0d\u544a\u8bc9\u522b\u4eba\u54e6\u3002\";\n        smsYunPianClient.batchSend(Lists.newArrayList(mobile), sign, null,\n                template, ImmutableMap.of(\"code\", \"2222\"));\n    }", "signature": "void batchSendTest()", "full_signature": "@Test public void batchSendTest()", "class_method_signature": "SmsYunPianClientTest.batchSendTest()", "testcase": true, "constructor": false, "invocations": ["batchSend", "newArrayList", "of"]}, "focal_class": {"identifier": "SmsYunPianClient", "superclass": "", "interfaces": "implements SmsClient", "fields": [{"original_string": "protected static final Logger LOGGER = LoggerFactory.getLogger(SmsYunPianClient.class);", "modifier": "protected static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(SmsYunPianClient.class)", "var_name": "LOGGER"}, {"original_string": "private static final int SUCCESS_CODE = 0;", "modifier": "private static final", "type": "int", "declarator": "SUCCESS_CODE = 0", "var_name": "SUCCESS_CODE"}, {"original_string": "private static final String SUCCESS_MESSAGE = \"SUCCESS\";", "modifier": "private static final", "type": "String", "declarator": "SUCCESS_MESSAGE = \"SUCCESS\"", "var_name": "SUCCESS_MESSAGE"}, {"original_string": "private static final int MAX_BATCH_SIZE = 500;", "modifier": "private static final", "type": "int", "declarator": "MAX_BATCH_SIZE = 500", "var_name": "MAX_BATCH_SIZE"}, {"original_string": "private static final String PARAM_TEMPLATE = \"#%s#\";", "modifier": "private static final", "type": "String", "declarator": "PARAM_TEMPLATE = \"#%s#\"", "var_name": "PARAM_TEMPLATE"}, {"original_string": "private static final String SIGN_TEMPLATE = \"\u3010%s\u3011%s\";", "modifier": "private static final", "type": "String", "declarator": "SIGN_TEMPLATE = \"\u3010%s\u3011%s\";", "var_name": "SIGN_TEMPLATE"}, {"original_string": "private static final String URL_SIGN_ADD = \"https://sms.yunpian.com/v2/sign/add.json\";", "modifier": "private static final", "type": "String", "declarator": "URL_SIGN_ADD = \"https://sms.yunpian.com/v2/sign/add.json\"", "var_name": "URL_SIGN_ADD"}, {"original_string": "private static final String URL_SIGN_GET = \"https://sms.yunpian.com/v2/sign/get.json\";", "modifier": "private static final", "type": "String", "declarator": "URL_SIGN_GET = \"https://sms.yunpian.com/v2/sign/get.json\"", "var_name": "URL_SIGN_GET"}, {"original_string": "private static final String URL_SIGN_UPDATE = \"https://sms.yunpian.com/v2/sign/update.json\";", "modifier": "private static final", "type": "String", "declarator": "URL_SIGN_UPDATE = \"https://sms.yunpian.com/v2/sign/update.json\"", "var_name": "URL_SIGN_UPDATE"}, {"original_string": "private static final String URL_TEMPLATE_ADD = \"https://sms.yunpian.com/v2/tpl/add.json\";", "modifier": "private static final", "type": "String", "declarator": "URL_TEMPLATE_ADD = \"https://sms.yunpian.com/v2/tpl/add.json\"", "var_name": "URL_TEMPLATE_ADD"}, {"original_string": "private static final String URL_TEMPLATE_GET = \"https://sms.yunpian.com/v2/tpl/get.json\";", "modifier": "private static final", "type": "String", "declarator": "URL_TEMPLATE_GET = \"https://sms.yunpian.com/v2/tpl/get.json\"", "var_name": "URL_TEMPLATE_GET"}, {"original_string": "private static final String URL_TEMPLATE_UPDATE = \"https://sms.yunpian.com/v2/tpl/update.json\";", "modifier": "private static final", "type": "String", "declarator": "URL_TEMPLATE_UPDATE = \"https://sms.yunpian.com/v2/tpl/update.json\"", "var_name": "URL_TEMPLATE_UPDATE"}, {"original_string": "private static final String URL_TEMPLATE_DELETE = \"https://sms.yunpian.com/v2/tpl/del.json\";", "modifier": "private static final", "type": "String", "declarator": "URL_TEMPLATE_DELETE = \"https://sms.yunpian.com/v2/tpl/del.json\"", "var_name": "URL_TEMPLATE_DELETE"}, {"original_string": "private static final String URL_SEND_SINGLE = \"https://sms.yunpian.com/v2/sms/single_send.json\";", "modifier": "private static final", "type": "String", "declarator": "URL_SEND_SINGLE = \"https://sms.yunpian.com/v2/sms/single_send.json\"", "var_name": "URL_SEND_SINGLE"}, {"original_string": "private static final String URL_SEND_BATCH = \"https://sms.yunpian.com/v2/sms/batch_send.json\";", "modifier": "private static final", "type": "String", "declarator": "URL_SEND_BATCH = \"https://sms.yunpian.com/v2/sms/batch_send.json\"", "var_name": "URL_SEND_BATCH"}, {"original_string": "private static String ENCODING = \"UTF-8\";", "modifier": "private static", "type": "String", "declarator": "ENCODING = \"UTF-8\"", "var_name": "ENCODING"}, {"original_string": "@Value(\"${sms.yunPian.apiKey?:'default_value'}\")\n    private String apiKey;", "modifier": "@Value(\"${sms.yunPian.apiKey?:'default_value'}\")\n    private", "type": "String", "declarator": "apiKey", "var_name": "apiKey"}], "methods": [{"identifier": "singleSend", "parameters": "(String mobile, String sign, String templateCode, String template, Map<String, String> templateParams)", "modifiers": "@Override public", "return": "SendResult", "signature": "SendResult singleSend(String mobile, String sign, String templateCode, String template, Map<String, String> templateParams)", "full_signature": "@Override public SendResult singleSend(String mobile, String sign, String templateCode, String template, Map<String, String> templateParams)", "class_method_signature": "SmsYunPianClient.singleSend(String mobile, String sign, String templateCode, String template, Map<String, String> templateParams)", "testcase": false, "constructor": false}, {"identifier": "batchSend", "parameters": "(List<String> mobileList, String sign,\n                                String templateCode, String template,\n                                Map<String, String> templateParams)", "modifiers": "@Override public", "return": "SendResult", "signature": "SendResult batchSend(List<String> mobileList, String sign,\n                                String templateCode, String template,\n                                Map<String, String> templateParams)", "full_signature": "@Override public SendResult batchSend(List<String> mobileList, String sign,\n                                String templateCode, String template,\n                                Map<String, String> templateParams)", "class_method_signature": "SmsYunPianClient.batchSend(List<String> mobileList, String sign,\n                                String templateCode, String template,\n                                Map<String, String> templateParams)", "testcase": false, "constructor": false}, {"identifier": "buildTemplate", "parameters": "(String sign, String template,\n                                        Map<String, String> templateParams)", "modifiers": "private static", "return": "String", "signature": "String buildTemplate(String sign, String template,\n                                        Map<String, String> templateParams)", "full_signature": "private static String buildTemplate(String sign, String template,\n                                        Map<String, String> templateParams)", "class_method_signature": "SmsYunPianClient.buildTemplate(String sign, String template,\n                                        Map<String, String> templateParams)", "testcase": false, "constructor": false}, {"identifier": "post", "parameters": "(String url, Map<String, String> paramsMap)", "modifiers": "public static", "return": "String", "signature": "String post(String url, Map<String, String> paramsMap)", "full_signature": "public static String post(String url, Map<String, String> paramsMap)", "class_method_signature": "SmsYunPianClient.post(String url, Map<String, String> paramsMap)", "testcase": false, "constructor": false}], "file": "moved/system/system-service-impl/src/main/java/cn/iocoder/mall/admin/client/SmsYunPianClient.java"}, "focal_method": {"identifier": "batchSend", "parameters": "(List<String> mobileList, String sign,\n                                String templateCode, String template,\n                                Map<String, String> templateParams)", "modifiers": "@Override public", "return": "SendResult", "body": "@Override\n    public SendResult batchSend(List<String> mobileList, String sign,\n                                String templateCode, String template,\n                                Map<String, String> templateParams) {\n        // build \u6a21\u677f\n        template = buildTemplate(sign, template, templateParams);\n\n        // \u6700\u5927\u53d1\u9001\u6570\u4e3a 1000\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e3a 500 \u4e2a, \u5206\u6bb5\u53d1\u9001\n        int maxSendSize = MAX_BATCH_SIZE;\n        int maxSendSizeCount = mobileList.size() % maxSendSize == 0\n                ? mobileList.size() / maxSendSize\n                : mobileList.size() / maxSendSize + 1;\n        int j = 0;\n        int j2 = mobileList.size();\n\n        for (int i = 0; i < maxSendSizeCount; i++) {\n            StringBuffer sendMobileStr = new StringBuffer();\n            for (int k = j; k < j2; k++) {\n                sendMobileStr.append(\",\");\n                sendMobileStr.append(mobileList.get(k));\n            }\n\n            String dividedMobile = sendMobileStr.toString().substring(1);\n\n            // \u53d1\u9001\u624b\u673a\u53f7\n            Map<String, String> params = new LinkedHashMap<>();\n            params.put(\"apikey\", apiKey);\n            params.put(\"mobile\", dividedMobile);\n            params.put(\"text\", template);\n            // TODO: 2019/5/19 sin \u8fd0\u8425\u5546\u53d1\u9001\u62a5\u544a \u56de\u8c03\n            // params.put(\"callback_url\", template);\n            String result = post(URL_SEND_BATCH, params);\n            JSONObject jsonObject = JSON.parseObject(result);\n            if (jsonObject.containsKey(\"code\")\n                    && !(jsonObject.getInteger(\"code\") == SUCCESS_CODE)) {\n                throw new ServiceException(AdminErrorCodeEnum.SMS_PLATFORM_FAIL.getCode(),\n                        jsonObject.getString(\"detail\"));\n            }\n\n            // \u7528\u4e8e\u9012\u589e maxSendSize\n            j = j2;\n            j2 = j + maxSendSize;\n        }\n\n        return new SendResult()\n                .setIsSuccess(true)\n                .setCode(SUCCESS_CODE)\n                .setMessage(SUCCESS_MESSAGE);\n    }", "signature": "SendResult batchSend(List<String> mobileList, String sign,\n                                String templateCode, String template,\n                                Map<String, String> templateParams)", "full_signature": "@Override public SendResult batchSend(List<String> mobileList, String sign,\n                                String templateCode, String template,\n                                Map<String, String> templateParams)", "class_method_signature": "SmsYunPianClient.batchSend(List<String> mobileList, String sign,\n                                String templateCode, String template,\n                                Map<String, String> templateParams)", "testcase": false, "constructor": false, "invocations": ["buildTemplate", "size", "size", "size", "size", "append", "append", "get", "substring", "toString", "put", "put", "put", "post", "parseObject", "containsKey", "getInteger", "getCode", "getString", "setMessage", "setCode", "setIsSuccess"]}, "repository": {"repo_id": 184611677, "url": "https://github.com/YunaiV/onemall", "language": "Java", "is_fork": false, "fork_count": 1162, "stargazer_count": 2893, "size": 7986, "license": "licensed"}}