{"test_class": {"identifier": "SemanticTagsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GroupItem locationItem;", "modifier": "private", "type": "GroupItem", "declarator": "locationItem", "var_name": "locationItem"}, {"original_string": "private GroupItem equipmentItem;", "modifier": "private", "type": "GroupItem", "declarator": "equipmentItem", "var_name": "equipmentItem"}, {"original_string": "private GenericItem pointItem;", "modifier": "private", "type": "GenericItem", "declarator": "pointItem", "var_name": "pointItem"}], "file": "bundles/org.openhab.core.semantics/src/test/java/org/openhab/core/semantics/SemanticTagsTest.java"}, "test_case": {"identifier": "testByLabel", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testByLabel() {\n        assertEquals(Kitchen.class, SemanticTags.getByLabel(\"Kitchen\", Locale.ENGLISH));\n        assertEquals(Kitchen.class, SemanticTags.getByLabel(\"K\u00fcche\", Locale.GERMAN));\n        assertNull(SemanticTags.getByLabel(\"Badezimmer\", Locale.GERMAN));\n    }", "signature": "void testByLabel()", "full_signature": "@Test public void testByLabel()", "class_method_signature": "SemanticTagsTest.testByLabel()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getByLabel", "assertEquals", "getByLabel", "assertNull", "getByLabel"]}, "focal_class": {"identifier": "SemanticTags", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TAGS_BUNDLE_NAME = \"tags\";", "modifier": "private static final", "type": "String", "declarator": "TAGS_BUNDLE_NAME = \"tags\"", "var_name": "TAGS_BUNDLE_NAME"}, {"original_string": "private static final Map<String, Class<? extends Tag>> TAGS = new TreeMap<>();", "modifier": "private static final", "type": "Map<String, Class<? extends Tag>>", "declarator": "TAGS = new TreeMap<>()", "var_name": "TAGS"}], "methods": [{"identifier": "getById", "parameters": "(String tagId)", "modifiers": "public static @Nullable", "return": "Class<? extends Tag>", "signature": "Class<? extends Tag> getById(String tagId)", "full_signature": "public static @Nullable Class<? extends Tag> getById(String tagId)", "class_method_signature": "SemanticTags.getById(String tagId)", "testcase": false, "constructor": false}, {"identifier": "getByLabel", "parameters": "(String tagLabel, Locale locale)", "modifiers": "public static @Nullable", "return": "Class<? extends Tag>", "signature": "Class<? extends Tag> getByLabel(String tagLabel, Locale locale)", "full_signature": "public static @Nullable Class<? extends Tag> getByLabel(String tagLabel, Locale locale)", "class_method_signature": "SemanticTags.getByLabel(String tagLabel, Locale locale)", "testcase": false, "constructor": false}, {"identifier": "getByLabelOrSynonym", "parameters": "(String tagLabelOrSynonym, Locale locale)", "modifiers": "public static", "return": "List<Class<? extends Tag>>", "signature": "List<Class<? extends Tag>> getByLabelOrSynonym(String tagLabelOrSynonym, Locale locale)", "full_signature": "public static List<Class<? extends Tag>> getByLabelOrSynonym(String tagLabelOrSynonym, Locale locale)", "class_method_signature": "SemanticTags.getByLabelOrSynonym(String tagLabelOrSynonym, Locale locale)", "testcase": false, "constructor": false}, {"identifier": "getLabelAndSynonyms", "parameters": "(Class<? extends Tag> tag, Locale locale)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getLabelAndSynonyms(Class<? extends Tag> tag, Locale locale)", "full_signature": "public static List<String> getLabelAndSynonyms(Class<? extends Tag> tag, Locale locale)", "class_method_signature": "SemanticTags.getLabelAndSynonyms(Class<? extends Tag> tag, Locale locale)", "testcase": false, "constructor": false}, {"identifier": "getLabel", "parameters": "(Class<? extends Tag> tag, Locale locale)", "modifiers": "public static", "return": "String", "signature": "String getLabel(Class<? extends Tag> tag, Locale locale)", "full_signature": "public static String getLabel(Class<? extends Tag> tag, Locale locale)", "class_method_signature": "SemanticTags.getLabel(Class<? extends Tag> tag, Locale locale)", "testcase": false, "constructor": false}, {"identifier": "getSemanticType", "parameters": "(Item item)", "modifiers": "public static @Nullable", "return": "Class<? extends Tag>", "signature": "Class<? extends Tag> getSemanticType(Item item)", "full_signature": "public static @Nullable Class<? extends Tag> getSemanticType(Item item)", "class_method_signature": "SemanticTags.getSemanticType(Item item)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(Item item)", "modifiers": "@SuppressWarnings(\"unchecked\") public static @Nullable", "return": "Class<? extends Property>", "signature": "Class<? extends Property> getProperty(Item item)", "full_signature": "@SuppressWarnings(\"unchecked\") public static @Nullable Class<? extends Property> getProperty(Item item)", "class_method_signature": "SemanticTags.getProperty(Item item)", "testcase": false, "constructor": false}, {"identifier": "addTagSet", "parameters": "(Class<? extends Tag> tagSet)", "modifiers": "private static", "return": "void", "signature": "void addTagSet(Class<? extends Tag> tagSet)", "full_signature": "private static void addTagSet(Class<? extends Tag> tagSet)", "class_method_signature": "SemanticTags.addTagSet(Class<? extends Tag> tagSet)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/SemanticTags.java"}, "focal_method": {"identifier": "getByLabel", "parameters": "(String tagLabel, Locale locale)", "modifiers": "public static @Nullable", "return": "Class<? extends Tag>", "body": "public static @Nullable Class<? extends Tag> getByLabel(String tagLabel, Locale locale) {\n        Optional<Class<? extends Tag>> tag = TAGS.values().stream().distinct()\n                .filter(t -> getLabel(t, locale).equalsIgnoreCase(tagLabel)).findFirst();\n        return tag.isPresent() ? tag.get() : null;\n    }", "signature": "Class<? extends Tag> getByLabel(String tagLabel, Locale locale)", "full_signature": "public static @Nullable Class<? extends Tag> getByLabel(String tagLabel, Locale locale)", "class_method_signature": "SemanticTags.getByLabel(String tagLabel, Locale locale)", "testcase": false, "constructor": false, "invocations": ["findFirst", "filter", "distinct", "stream", "values", "equalsIgnoreCase", "getLabel", "isPresent", "get"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}