{"test_class": {"identifier": "StringTemplateUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "ontopia-engine/src/test/java/net/ontopia/utils/StringTemplateUtilsTest.java"}, "test_case": {"identifier": "testProcessUnterminatedValueDirect", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testProcessUnterminatedValueDirect() {\n    try {\n      StringTemplateUtils.replace(\"an %unset% param\", \"unset\", null);\n      Assert.fail(\"Unterminated value accepted\");\n    } catch (OntopiaRuntimeException e) {\n    }\n  }", "signature": "void testProcessUnterminatedValueDirect()", "full_signature": "@Test public void testProcessUnterminatedValueDirect()", "class_method_signature": "StringTemplateUtilsTest.testProcessUnterminatedValueDirect()", "testcase": true, "constructor": false, "invocations": ["replace", "fail"]}, "focal_class": {"identifier": "StringTemplateUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "replace", "parameters": "(String template, Map<String, Object> paramvalues)", "modifiers": "public static", "return": "String", "signature": "String replace(String template, Map<String, Object> paramvalues)", "full_signature": "public static String replace(String template, Map<String, Object> paramvalues)", "class_method_signature": "StringTemplateUtils.replace(String template, Map<String, Object> paramvalues)", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "(String template, Map<String, Object> paramvalues,\n                               char sep_char)", "modifiers": "public static", "return": "String", "signature": "String replace(String template, Map<String, Object> paramvalues,\n                               char sep_char)", "full_signature": "public static String replace(String template, Map<String, Object> paramvalues,\n                               char sep_char)", "class_method_signature": "StringTemplateUtils.replace(String template, Map<String, Object> paramvalues,\n                               char sep_char)", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "(String template, String param, String value)", "modifiers": "public static", "return": "String", "signature": "String replace(String template, String param, String value)", "full_signature": "public static String replace(String template, String param, String value)", "class_method_signature": "StringTemplateUtils.replace(String template, String param, String value)", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "(String template, String param, String value,\n                               char sep_char)", "modifiers": "public static", "return": "String", "signature": "String replace(String template, String param, String value,\n                               char sep_char)", "full_signature": "public static String replace(String template, String param, String value,\n                               char sep_char)", "class_method_signature": "StringTemplateUtils.replace(String template, String param, String value,\n                               char sep_char)", "testcase": false, "constructor": false}], "file": "ontopia-engine/src/main/java/net/ontopia/utils/StringTemplateUtils.java"}, "focal_method": {"identifier": "replace", "parameters": "(String template, Map<String, Object> paramvalues)", "modifiers": "public static", "return": "String", "body": "public static String replace(String template, Map<String, Object> paramvalues) {\n    return replace(template, paramvalues, '%');\n  }", "signature": "String replace(String template, Map<String, Object> paramvalues)", "full_signature": "public static String replace(String template, Map<String, Object> paramvalues)", "class_method_signature": "StringTemplateUtils.replace(String template, Map<String, Object> paramvalues)", "testcase": false, "constructor": false, "invocations": ["replace"]}, "repository": {"repo_id": 32357795, "url": "https://github.com/ontopia/ontopia", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 35, "size": 68637, "license": "licensed"}}