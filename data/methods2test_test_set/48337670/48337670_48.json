{"test_class": {"identifier": "ProxyServletServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SITEMAP_NAME = \"testSitemap\";", "modifier": "private static final", "type": "String", "declarator": "SITEMAP_NAME = \"testSitemap\"", "var_name": "SITEMAP_NAME"}, {"original_string": "private static final String SWITCH_WIDGET_ID = \"switchWidget\";", "modifier": "private static final", "type": "String", "declarator": "SWITCH_WIDGET_ID = \"switchWidget\"", "var_name": "SWITCH_WIDGET_ID"}, {"original_string": "private static final String IMAGE_WIDGET_ID = \"imageWidget\";", "modifier": "private static final", "type": "String", "declarator": "IMAGE_WIDGET_ID = \"imageWidget\"", "var_name": "IMAGE_WIDGET_ID"}, {"original_string": "private static final String VIDEO_WIDGET_ID = \"videoWidget\";", "modifier": "private static final", "type": "String", "declarator": "VIDEO_WIDGET_ID = \"videoWidget\"", "var_name": "VIDEO_WIDGET_ID"}, {"original_string": "private static final String ITEM_NAME_UNDEF_STATE = \"itemUNDEF\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_NAME_UNDEF_STATE = \"itemUNDEF\"", "var_name": "ITEM_NAME_UNDEF_STATE"}, {"original_string": "private static final String ITEM_NAME_NULL_STATE = \"itemNULL\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_NAME_NULL_STATE = \"itemNULL\"", "var_name": "ITEM_NAME_NULL_STATE"}, {"original_string": "private static final String ITEM_NAME_ON_STATE = \"itemON\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_NAME_ON_STATE = \"itemON\"", "var_name": "ITEM_NAME_ON_STATE"}, {"original_string": "private static final String ITEM_NAME_INVALID_URL = \"itemInvalidUrl\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_NAME_INVALID_URL = \"itemInvalidUrl\"", "var_name": "ITEM_NAME_INVALID_URL"}, {"original_string": "private static final String ITEM_NAME_VALID_IMAGE_URL = \"itemValidImageUrl\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_NAME_VALID_IMAGE_URL = \"itemValidImageUrl\"", "var_name": "ITEM_NAME_VALID_IMAGE_URL"}, {"original_string": "private static final String ITEM_NAME_VALID_VIDEO_URL = \"itemValidVideoUrl\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_NAME_VALID_VIDEO_URL = \"itemValidVideoUrl\"", "var_name": "ITEM_NAME_VALID_VIDEO_URL"}, {"original_string": "private static final String INVALID_URL = \"test\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_URL = \"test\"", "var_name": "INVALID_URL"}, {"original_string": "private static final String ITEM_VALID_IMAGE_URL = \"https://openhab.org/item.jpg\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_VALID_IMAGE_URL = \"https://openhab.org/item.jpg\"", "var_name": "ITEM_VALID_IMAGE_URL"}, {"original_string": "private static final String ITEM_VALID_VIDEO_URL = \"https://openhab.org/item.mp4\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_VALID_VIDEO_URL = \"https://openhab.org/item.mp4\"", "var_name": "ITEM_VALID_VIDEO_URL"}, {"original_string": "private static final String VALID_IMAGE_URL = \"https://openhab.org/test.jpg\";", "modifier": "private static final", "type": "String", "declarator": "VALID_IMAGE_URL = \"https://openhab.org/test.jpg\"", "var_name": "VALID_IMAGE_URL"}, {"original_string": "private static final String VALID_VIDEO_URL = \"https://openhab.org/test.mp4\";", "modifier": "private static final", "type": "String", "declarator": "VALID_VIDEO_URL = \"https://openhab.org/test.mp4\"", "var_name": "VALID_VIDEO_URL"}, {"original_string": "private static ProxyServletService service;", "modifier": "private static", "type": "ProxyServletService", "declarator": "service", "var_name": "service"}, {"original_string": "private ItemUIRegistry itemUIRegistry;", "modifier": "private", "type": "ItemUIRegistry", "declarator": "itemUIRegistry", "var_name": "itemUIRegistry"}, {"original_string": "private ModelRepository modelRepository;", "modifier": "private", "type": "ModelRepository", "declarator": "modelRepository", "var_name": "modelRepository"}, {"original_string": "private Sitemap sitemap;", "modifier": "private", "type": "Sitemap", "declarator": "sitemap", "var_name": "sitemap"}, {"original_string": "private HttpServletRequest request;", "modifier": "private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "private Switch switchWidget;", "modifier": "private", "type": "Switch", "declarator": "switchWidget", "var_name": "switchWidget"}, {"original_string": "private Image imageWidget;", "modifier": "private", "type": "Image", "declarator": "imageWidget", "var_name": "imageWidget"}, {"original_string": "private Video videoWidget;", "modifier": "private", "type": "Video", "declarator": "videoWidget", "var_name": "videoWidget"}], "file": "bundles/org.openhab.core.ui/src/test/java/org/openhab/core/ui/internal/proxy/ProxyServletServiceTest.java"}, "test_case": {"identifier": "testMaybeAppendAuthHeaderWithoutCredentials", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMaybeAppendAuthHeaderWithoutCredentials() throws URISyntaxException {\n        Request request = mock(Request.class);\n        URI uri = new URI(\"http://127.0.0.1:8080/content\");\n        service.maybeAppendAuthHeader(uri, request);\n        verify(request, never()).header(any(HttpHeader.class), anyString());\n    }", "signature": "void testMaybeAppendAuthHeaderWithoutCredentials()", "full_signature": "@Test public void testMaybeAppendAuthHeaderWithoutCredentials()", "class_method_signature": "ProxyServletServiceTest.testMaybeAppendAuthHeaderWithoutCredentials()", "testcase": true, "constructor": false, "invocations": ["mock", "maybeAppendAuthHeader", "header", "verify", "never", "any", "anyString"]}, "focal_class": {"identifier": "ProxyServletService", "superclass": "extends HttpServlet", "interfaces": "", "fields": [{"original_string": "public static final String PROXY_ALIAS = \"proxy\";", "modifier": "public static final", "type": "String", "declarator": "PROXY_ALIAS = \"proxy\"", "var_name": "PROXY_ALIAS"}, {"original_string": "private static final String CONFIG_MAX_THREADS = \"maxThreads\";", "modifier": "private static final", "type": "String", "declarator": "CONFIG_MAX_THREADS = \"maxThreads\"", "var_name": "CONFIG_MAX_THREADS"}, {"original_string": "private static final int DEFAULT_MAX_THREADS = 8;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_MAX_THREADS = 8", "var_name": "DEFAULT_MAX_THREADS"}, {"original_string": "public static final String ATTR_URI = ProxyServletService.class.getName() + \".URI\";", "modifier": "public static final", "type": "String", "declarator": "ATTR_URI = ProxyServletService.class.getName() + \".URI\"", "var_name": "ATTR_URI"}, {"original_string": "public static final String ATTR_SERVLET_EXCEPTION = ProxyServletService.class.getName() + \".ProxyServletException\";", "modifier": "public static final", "type": "String", "declarator": "ATTR_SERVLET_EXCEPTION = ProxyServletService.class.getName() + \".ProxyServletException\"", "var_name": "ATTR_SERVLET_EXCEPTION"}, {"original_string": "private final Logger logger = LoggerFactory.getLogger(ProxyServletService.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ProxyServletService.class)", "var_name": "logger"}, {"original_string": "private static final long serialVersionUID = -4716754591953017793L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -4716754591953017793L", "var_name": "serialVersionUID"}, {"original_string": "private Servlet impl;", "modifier": "private", "type": "Servlet", "declarator": "impl", "var_name": "impl"}, {"original_string": "protected HttpService httpService;", "modifier": "protected", "type": "HttpService", "declarator": "httpService", "var_name": "httpService"}, {"original_string": "protected ItemUIRegistry itemUIRegistry;", "modifier": "protected", "type": "ItemUIRegistry", "declarator": "itemUIRegistry", "var_name": "itemUIRegistry"}, {"original_string": "protected ModelRepository modelRepository;", "modifier": "protected", "type": "ModelRepository", "declarator": "modelRepository", "var_name": "modelRepository"}], "methods": [{"identifier": "setItemUIRegistry", "parameters": "(ItemUIRegistry itemUIRegistry)", "modifiers": "@Reference(policy = ReferencePolicy.DYNAMIC) protected", "return": "void", "signature": "void setItemUIRegistry(ItemUIRegistry itemUIRegistry)", "full_signature": "@Reference(policy = ReferencePolicy.DYNAMIC) protected void setItemUIRegistry(ItemUIRegistry itemUIRegistry)", "class_method_signature": "ProxyServletService.setItemUIRegistry(ItemUIRegistry itemUIRegistry)", "testcase": false, "constructor": false}, {"identifier": "unsetItemUIRegistry", "parameters": "(ItemUIRegistry itemUIRegistry)", "modifiers": "protected", "return": "void", "signature": "void unsetItemUIRegistry(ItemUIRegistry itemUIRegistry)", "full_signature": "protected void unsetItemUIRegistry(ItemUIRegistry itemUIRegistry)", "class_method_signature": "ProxyServletService.unsetItemUIRegistry(ItemUIRegistry itemUIRegistry)", "testcase": false, "constructor": false}, {"identifier": "setModelRepository", "parameters": "(ModelRepository modelRepository)", "modifiers": "@Reference protected", "return": "void", "signature": "void setModelRepository(ModelRepository modelRepository)", "full_signature": "@Reference protected void setModelRepository(ModelRepository modelRepository)", "class_method_signature": "ProxyServletService.setModelRepository(ModelRepository modelRepository)", "testcase": false, "constructor": false}, {"identifier": "unsetModelRepository", "parameters": "(ModelRepository modelRepository)", "modifiers": "protected", "return": "void", "signature": "void unsetModelRepository(ModelRepository modelRepository)", "full_signature": "protected void unsetModelRepository(ModelRepository modelRepository)", "class_method_signature": "ProxyServletService.unsetModelRepository(ModelRepository modelRepository)", "testcase": false, "constructor": false}, {"identifier": "setHttpService", "parameters": "(HttpService httpService)", "modifiers": "@Reference(policy = ReferencePolicy.DYNAMIC) protected", "return": "void", "signature": "void setHttpService(HttpService httpService)", "full_signature": "@Reference(policy = ReferencePolicy.DYNAMIC) protected void setHttpService(HttpService httpService)", "class_method_signature": "ProxyServletService.setHttpService(HttpService httpService)", "testcase": false, "constructor": false}, {"identifier": "unsetHttpService", "parameters": "(HttpService httpService)", "modifiers": "protected", "return": "void", "signature": "void unsetHttpService(HttpService httpService)", "full_signature": "protected void unsetHttpService(HttpService httpService)", "class_method_signature": "ProxyServletService.unsetHttpService(HttpService httpService)", "testcase": false, "constructor": false}, {"identifier": "getImpl", "parameters": "()", "modifiers": "private", "return": "Servlet", "signature": "Servlet getImpl()", "full_signature": "private Servlet getImpl()", "class_method_signature": "ProxyServletService.getImpl()", "testcase": false, "constructor": false}, {"identifier": "propsFromConfig", "parameters": "(Map<String, Object> config)", "modifiers": "private", "return": "Hashtable<String, String>", "signature": "Hashtable<String, String> propsFromConfig(Map<String, Object> config)", "full_signature": "private Hashtable<String, String> propsFromConfig(Map<String, Object> config)", "class_method_signature": "ProxyServletService.propsFromConfig(Map<String, Object> config)", "testcase": false, "constructor": false}, {"identifier": "activate", "parameters": "(Map<String, Object> config)", "modifiers": "@Activate protected", "return": "void", "signature": "void activate(Map<String, Object> config)", "full_signature": "@Activate protected void activate(Map<String, Object> config)", "class_method_signature": "ProxyServletService.activate(Map<String, Object> config)", "testcase": false, "constructor": false}, {"identifier": "deactivate", "parameters": "()", "modifiers": "@Deactivate protected", "return": "void", "signature": "void deactivate()", "full_signature": "@Deactivate protected void deactivate()", "class_method_signature": "ProxyServletService.deactivate()", "testcase": false, "constructor": false}, {"identifier": "createHttpContext", "parameters": "()", "modifiers": "protected", "return": "HttpContext", "signature": "HttpContext createHttpContext()", "full_signature": "protected HttpContext createHttpContext()", "class_method_signature": "ProxyServletService.createHttpContext()", "testcase": false, "constructor": false}, {"identifier": "uriFromRequest", "parameters": "(HttpServletRequest request)", "modifiers": "", "return": "URI", "signature": "URI uriFromRequest(HttpServletRequest request)", "full_signature": " URI uriFromRequest(HttpServletRequest request)", "class_method_signature": "ProxyServletService.uriFromRequest(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "createURIFromString", "parameters": "(String url)", "modifiers": "private", "return": "URI", "signature": "URI createURIFromString(String url)", "full_signature": "private URI createURIFromString(String url)", "class_method_signature": "ProxyServletService.createURIFromString(String url)", "testcase": false, "constructor": false}, {"identifier": "maybeAppendAuthHeader", "parameters": "(URI uri, Request request)", "modifiers": "", "return": "void", "signature": "void maybeAppendAuthHeader(URI uri, Request request)", "full_signature": " void maybeAppendAuthHeader(URI uri, Request request)", "class_method_signature": "ProxyServletService.maybeAppendAuthHeader(URI uri, Request request)", "testcase": false, "constructor": false}, {"identifier": "proxyingVideoWidget", "parameters": "(HttpServletRequest request)", "modifiers": "", "return": "boolean", "signature": "boolean proxyingVideoWidget(HttpServletRequest request)", "full_signature": " boolean proxyingVideoWidget(HttpServletRequest request)", "class_method_signature": "ProxyServletService.proxyingVideoWidget(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "sendError", "parameters": "(HttpServletRequest request, HttpServletResponse response)", "modifiers": "", "return": "void", "signature": "void sendError(HttpServletRequest request, HttpServletResponse response)", "full_signature": " void sendError(HttpServletRequest request, HttpServletResponse response)", "class_method_signature": "ProxyServletService.sendError(HttpServletRequest request, HttpServletResponse response)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/proxy/ProxyServletService.java"}, "focal_method": {"identifier": "maybeAppendAuthHeader", "parameters": "(URI uri, Request request)", "modifiers": "", "return": "void", "body": "void maybeAppendAuthHeader(URI uri, Request request) {\n        if (uri != null && uri.getUserInfo() != null) {\n            String[] userInfo = uri.getUserInfo().split(\":\");\n\n            if (userInfo.length >= 1) {\n                String user = userInfo[0];\n                String password = userInfo.length >= 2 ? userInfo[1] : null;\n                String authString = password != null ? user + \":\" + password : user + \":\";\n\n                String basicAuthentication = \"Basic \" + B64Code.encode(authString, StringUtil.__ISO_8859_1);\n                request.header(HttpHeader.AUTHORIZATION, basicAuthentication);\n            }\n        }\n    }", "signature": "void maybeAppendAuthHeader(URI uri, Request request)", "full_signature": " void maybeAppendAuthHeader(URI uri, Request request)", "class_method_signature": "ProxyServletService.maybeAppendAuthHeader(URI uri, Request request)", "testcase": false, "constructor": false, "invocations": ["getUserInfo", "split", "getUserInfo", "encode", "header"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}