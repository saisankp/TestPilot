{"test_class": {"identifier": "SecurityV1ControllerTest", "superclass": "extends BaseControllerTest", "interfaces": "", "fields": [{"original_string": "private final static Logger logger=LoggerFactory.getLogger(SecurityV1ControllerTest.class);", "modifier": "private final static", "type": "Logger", "declarator": "logger=LoggerFactory.getLogger(SecurityV1ControllerTest.class)", "var_name": "logger"}], "file": "service/member-service/src/test/java/com/meiduimall/service/member/api/SecurityV1ControllerTest.java"}, "test_case": {"identifier": "setPaypwdStatus", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\t    public void setPaypwdStatus() throws Exception{\n\t    \tRequestSetPaypwdStatus requestSetPaypwdStatus=new RequestSetPaypwdStatus();\n\t    \trequestSetPaypwdStatus.setMemId(memId);\n\t    \trequestSetPaypwdStatus.setEnable(\"0\");\n\t    \tResultActions postResultAction=mockMvc.perform(MockMvcRequestBuilders.post(baseUrl+\"/set_paypwd_status\")\n\t    \t\t\t.contentType(MediaType.APPLICATION_JSON_UTF8)\n\t    \t\t\t.content(JsonUtils.beanToJson(requestSetPaypwdStatus)))\n\t    \t\t\t.andExpect(status().isOk())\n\t    \t\t\t.andExpect(jsonPath(\"$.status\",is(0)));\n\t    \t\n\t    \tpostResultAction.andDo(new ResultHandler() {\n\t\t\t\t@Override\n\t\t\t\tpublic void handle(MvcResult result) throws Exception {\n\t\t\t\t\tlogger.info(\"\u5355\u5143\u6d4b\u8bd5>>\u8bbe\u7f6e\u652f\u4ed8\u5bc6\u7801\u5f00\u5173API>>\u6267\u884c\u7ed3\u679c:{}\",result.getResponse().getContentAsString());;\n\t\t\t\t}\n\t\t\t});\n\t    }", "signature": "void setPaypwdStatus()", "full_signature": "@Test public void setPaypwdStatus()", "class_method_signature": "SecurityV1ControllerTest.setPaypwdStatus()", "testcase": true, "constructor": false, "invocations": ["setMemId", "setEnable", "andExpect", "andExpect", "perform", "content", "contentType", "post", "beanToJson", "isOk", "status", "jsonPath", "is", "andDo", "info", "", "());;"]}, "focal_class": {"identifier": "SecurityV1Controller", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static Logger logger=LoggerFactory.getLogger(SecurityV1Controller.class);", "modifier": "private final static", "type": "Logger", "declarator": "logger=LoggerFactory.getLogger(SecurityV1Controller.class)", "var_name": "logger"}, {"original_string": "@Autowired\n\tprivate  SecurityService  securityService;", "modifier": "@Autowired\n\tprivate", "type": "SecurityService", "declarator": "securityService", "var_name": "securityService"}], "methods": [{"identifier": "setPaypwdStatus", "parameters": "(@RequestBody @Valid RequestSetPaypwdStatus requestSetPaypwdStatus)", "modifiers": "@PostMapping(value = \"/set_paypwd_status\")", "return": "ResBodyData", "signature": "ResBodyData setPaypwdStatus(@RequestBody @Valid RequestSetPaypwdStatus requestSetPaypwdStatus)", "full_signature": "@PostMapping(value = \"/set_paypwd_status\") ResBodyData setPaypwdStatus(@RequestBody @Valid RequestSetPaypwdStatus requestSetPaypwdStatus)", "class_method_signature": "SecurityV1Controller.setPaypwdStatus(@RequestBody @Valid RequestSetPaypwdStatus requestSetPaypwdStatus)", "testcase": false, "constructor": false}, {"identifier": "getbackpwdbyphone", "parameters": "(@PathVariable(name=\"phone\")String phone)", "modifiers": "@RequestMapping(value = \"/getbackpwdbyphone/{phone}\",method=RequestMethod.PUT)", "return": "String", "signature": "String getbackpwdbyphone(@PathVariable(name=\"phone\")String phone)", "full_signature": "@RequestMapping(value = \"/getbackpwdbyphone/{phone}\",method=RequestMethod.PUT) String getbackpwdbyphone(@PathVariable(name=\"phone\")String phone)", "class_method_signature": "SecurityV1Controller.getbackpwdbyphone(@PathVariable(name=\"phone\")String phone)", "testcase": false, "constructor": false}, {"identifier": "updatememberphone", "parameters": "(@PathVariable String token)", "modifiers": "@RequestMapping(value = \"/updatememberphone/{token}\",method=RequestMethod.PUT) public", "return": "void", "signature": "void updatememberphone(@PathVariable String token)", "full_signature": "@RequestMapping(value = \"/updatememberphone/{token}\",method=RequestMethod.PUT) public void updatememberphone(@PathVariable String token)", "class_method_signature": "SecurityV1Controller.updatememberphone(@PathVariable String token)", "testcase": false, "constructor": false}], "file": "service/member-service/src/main/java/com/meiduimall/service/member/api/SecurityV1Controller.java"}, "focal_method": {"identifier": "setPaypwdStatus", "parameters": "(@RequestBody @Valid RequestSetPaypwdStatus requestSetPaypwdStatus)", "modifiers": "@PostMapping(value = \"/set_paypwd_status\")", "return": "ResBodyData", "body": "@PostMapping(value = \"/set_paypwd_status\")\n\tResBodyData setPaypwdStatus(@RequestBody @Valid RequestSetPaypwdStatus requestSetPaypwdStatus) {\n\t\tlogger.info(\"\u6536\u5230\u8bbe\u7f6e\u652f\u4ed8\u5bc6\u7801\u5f00\u5173API\u8bf7\u6c42\uff1a\",requestSetPaypwdStatus.toString());\n\t\ttry {\n\t\t\tMSMembersGet msMembersGet=new MSMembersGet();\n\t\t\tBeanUtils.copyProperties(requestSetPaypwdStatus,msMembersGet);\n\t\t\tResBodyData resBodyData = securityService.setPaypwdStatus(msMembersGet);\n\t\t\tlogger.info(\"\u8bbe\u7f6e\u652f\u4ed8\u5bc6\u7801\u5f00\u5173API\u8bf7\u6c42\u7ed3\u679c  \uff1a{}\",resBodyData.toString());\n\t\t\treturn resBodyData;\n\t\t}\n\t\tcatch (BizException e) {\n\t\t\tlogger.error(\"\u8bbe\u7f6e\u652f\u4ed8\u5bc6\u7801\u5f00\u5173API\u8bf7\u6c42\u5f02\u5e38\uff1a{}\",e.toString());\n\t\t\tthrow new ApiException(ApiStatusConst.SET_PAYPWD_STATUS_EXCEPTION,ApiStatusConst.getZhMsg(ApiStatusConst.SET_PAYPWD_STATUS_EXCEPTION));\n\t\t}\n\t}", "signature": "ResBodyData setPaypwdStatus(@RequestBody @Valid RequestSetPaypwdStatus requestSetPaypwdStatus)", "full_signature": "@PostMapping(value = \"/set_paypwd_status\") ResBodyData setPaypwdStatus(@RequestBody @Valid RequestSetPaypwdStatus requestSetPaypwdStatus)", "class_method_signature": "SecurityV1Controller.setPaypwdStatus(@RequestBody @Valid RequestSetPaypwdStatus requestSetPaypwdStatus)", "testcase": false, "constructor": false, "invocations": ["info", "", "copyProperties", "setPaypwdStatus", "info", "", "error", "", "getZhMsg"]}, "repository": {"repo_id": 104355653, "url": "https://github.com/chenjy16/mall", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 403, "license": "licensed"}}