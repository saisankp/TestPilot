{"test_class": {"identifier": "AsymmetricLossTest", "superclass": "extends ARegressionLossTest", "interfaces": "", "fields": [], "file": "JAICore/jaicore-ml/src/test/java/ai/libs/jaicore/ml/regression/loss/dataset/AsymmetricLossTest.java"}, "test_case": {"identifier": "lossWithError", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void lossWithError() {\n\t\tList<Double> expected = Arrays.asList(10.0, 5.0);\n\t\tList<IRegressionPrediction> predicted = this.toPredictions(Arrays.asList(11.0, 4.0));\n\n\t\tERulPerformanceMeasure asymmetricLoss = ERulPerformanceMeasure.ASYMMETRIC_LOSS;\n\t\tassertEquals(\"Loss not as expected.\", 0.625, asymmetricLoss.loss(expected, predicted), 1E-8);\n\t}", "signature": "void lossWithError()", "full_signature": "@Test public void lossWithError()", "class_method_signature": "AsymmetricLossTest.lossWithError()", "testcase": true, "constructor": false, "invocations": ["asList", "toPredictions", "asList", "assertEquals", "loss"]}, "focal_class": {"identifier": "AsymmetricLoss", "superclass": "extends ARegressionMeasure", "interfaces": "", "fields": [{"original_string": "private double dividerOverestimation = 5;", "modifier": "private", "type": "double", "declarator": "dividerOverestimation = 5", "var_name": "dividerOverestimation"}, {"original_string": "private double dividerUnderestimation = 20;", "modifier": "private", "type": "double", "declarator": "dividerUnderestimation = 20", "var_name": "dividerUnderestimation"}], "methods": [{"identifier": "AsymmetricLoss", "parameters": "()", "modifiers": "public", "return": "", "signature": " AsymmetricLoss()", "full_signature": "public  AsymmetricLoss()", "class_method_signature": "AsymmetricLoss.AsymmetricLoss()", "testcase": false, "constructor": true}, {"identifier": "AsymmetricLoss", "parameters": "(final double dividerUnderestimation, final double dividerOverestimation)", "modifiers": "public", "return": "", "signature": " AsymmetricLoss(final double dividerUnderestimation, final double dividerOverestimation)", "full_signature": "public  AsymmetricLoss(final double dividerUnderestimation, final double dividerOverestimation)", "class_method_signature": "AsymmetricLoss.AsymmetricLoss(final double dividerUnderestimation, final double dividerOverestimation)", "testcase": false, "constructor": true}, {"identifier": "loss", "parameters": "(final List<? extends Double> expected, final List<? extends IRegressionPrediction> predicted)", "modifiers": "@Override public", "return": "double", "signature": "double loss(final List<? extends Double> expected, final List<? extends IRegressionPrediction> predicted)", "full_signature": "@Override public double loss(final List<? extends Double> expected, final List<? extends IRegressionPrediction> predicted)", "class_method_signature": "AsymmetricLoss.loss(final List<? extends Double> expected, final List<? extends IRegressionPrediction> predicted)", "testcase": false, "constructor": false}], "file": "JAICore/jaicore-ml/src/main/java/ai/libs/jaicore/ml/regression/loss/dataset/AsymmetricLoss.java"}, "focal_method": {"identifier": "loss", "parameters": "(final List<? extends Double> expected, final List<? extends IRegressionPrediction> predicted)", "modifiers": "@Override public", "return": "double", "body": "@Override\n\tpublic double loss(final List<? extends Double> expected, final List<? extends IRegressionPrediction> predicted) {\n\t\tthis.checkConsistency(expected, predicted);\n\t\tList<Double> accuracyList = new ArrayList<>();\n\t\tfor (int i = 0; i < expected.size(); i++) {\n\t\t\tDouble percentageError = 100 * ((expected.get(i) - predicted.get(i).getPrediction()) / expected.get(i));\n\t\t\tDouble accuracy;\n\t\t\tif (percentageError <= 0) {\n\t\t\t\taccuracy = Math.exp(-Math.log(0.5) * (percentageError / this.dividerOverestimation));\n\t\t\t} else {\n\t\t\t\taccuracy = Math.exp(Math.log(0.5) * (percentageError / this.dividerUnderestimation));\n\t\t\t}\n\t\t\taccuracyList.add(accuracy);\n\t\t}\n\t\treturn 1 - StatisticsUtil.mean(accuracyList);\n\n\t}", "signature": "double loss(final List<? extends Double> expected, final List<? extends IRegressionPrediction> predicted)", "full_signature": "@Override public double loss(final List<? extends Double> expected, final List<? extends IRegressionPrediction> predicted)", "class_method_signature": "AsymmetricLoss.loss(final List<? extends Double> expected, final List<? extends IRegressionPrediction> predicted)", "testcase": false, "constructor": false, "invocations": ["checkConsistency", "size", "get", "getPrediction", "get", "get", "exp", "log", "exp", "log", "add", "mean"]}, "repository": {"repo_id": 95635499, "url": "https://github.com/fmohr/AILibs", "language": "Java", "is_fork": false, "fork_count": 26, "stargazer_count": 25, "size": 155873, "license": "licensed"}}