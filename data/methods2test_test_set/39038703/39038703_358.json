{"test_class": {"identifier": "DOIIdentifierProviderTest", "superclass": "extends AbstractUnitTest", "interfaces": "", "fields": [{"original_string": "private static final Logger log = Logger.getLogger(DOIIdentifierProviderTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.getLogger(DOIIdentifierProviderTest.class)", "var_name": "log"}, {"original_string": "private static final String PREFIX = \"10.5072\";", "modifier": "private static final", "type": "String", "declarator": "PREFIX = \"10.5072\"", "var_name": "PREFIX"}, {"original_string": "private static final String NAMESPACE_SEPARATOR = \"dspaceUnitTests-\";", "modifier": "private static final", "type": "String", "declarator": "NAMESPACE_SEPARATOR = \"dspaceUnitTests-\"", "var_name": "NAMESPACE_SEPARATOR"}, {"original_string": "private static ConfigurationService config = null;", "modifier": "private static", "type": "ConfigurationService", "declarator": "config = null", "var_name": "config"}, {"original_string": "protected DOIService doiService = IdentifierServiceFactory.getInstance().getDOIService();", "modifier": "protected", "type": "DOIService", "declarator": "doiService = IdentifierServiceFactory.getInstance().getDOIService()", "var_name": "doiService"}, {"original_string": "protected CommunityService communityService = ContentServiceFactory.getInstance().getCommunityService();", "modifier": "protected", "type": "CommunityService", "declarator": "communityService = ContentServiceFactory.getInstance().getCommunityService()", "var_name": "communityService"}, {"original_string": "protected CollectionService collectionService = ContentServiceFactory.getInstance().getCollectionService();", "modifier": "protected", "type": "CollectionService", "declarator": "collectionService = ContentServiceFactory.getInstance().getCollectionService()", "var_name": "collectionService"}, {"original_string": "protected ItemService itemService = ContentServiceFactory.getInstance().getItemService();", "modifier": "protected", "type": "ItemService", "declarator": "itemService = ContentServiceFactory.getInstance().getItemService()", "var_name": "itemService"}, {"original_string": "protected WorkspaceItemService workspaceItemService = ContentServiceFactory.getInstance().getWorkspaceItemService();", "modifier": "protected", "type": "WorkspaceItemService", "declarator": "workspaceItemService = ContentServiceFactory.getInstance().getWorkspaceItemService()", "var_name": "workspaceItemService"}, {"original_string": "private static Community community;", "modifier": "private static", "type": "Community", "declarator": "community", "var_name": "community"}, {"original_string": "private static Collection collection;", "modifier": "private static", "type": "Collection", "declarator": "collection", "var_name": "collection"}, {"original_string": "private static MockDOIConnector connector;", "modifier": "private static", "type": "MockDOIConnector", "declarator": "connector", "var_name": "connector"}, {"original_string": "private DOIIdentifierProvider provider;", "modifier": "private", "type": "DOIIdentifierProvider", "declarator": "provider", "var_name": "provider"}], "file": "dspace-api/src/test/java/org/dspace/identifier/DOIIdentifierProviderTest.java"}, "test_case": {"identifier": "testResolve_DOI", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testResolve_DOI()\n            throws SQLException, AuthorizeException, IOException,\n            IllegalArgumentException, IdentifierException, WorkflowException, IllegalAccessException\n    {\n        Item item = newItem();\n        String doi = this.createDOI(item, DOIIdentifierProvider.IS_REGISTERED, false);\n        \n        DSpaceObject dso = provider.resolve(context, doi);\n        \n        assertNotNull(\"Failed to resolve DOI.\", dso);\n        if (item.getType() != dso.getType() || item.getID() != dso.getID())\n        {\n            fail(\"Object return by DOI lookup was another object then expected!\");\n        }\n    }", "signature": "void testResolve_DOI()", "full_signature": "@Test public void testResolve_DOI()", "class_method_signature": "DOIIdentifierProviderTest.testResolve_DOI()", "testcase": true, "constructor": false, "invocations": ["newItem", "createDOI", "resolve", "assertNotNull", "getType", "getType", "getID", "getID", "fail"]}, "focal_class": {"identifier": "DOIIdentifierProvider", "superclass": "extends IdentifierProvider", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(DOIIdentifierProvider.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(DOIIdentifierProvider.class)", "var_name": "log"}, {"original_string": "private DOIConnector connector;", "modifier": "private", "type": "DOIConnector", "declarator": "connector", "var_name": "connector"}, {"original_string": "static final String CFG_PREFIX = \"identifier.doi.prefix\";", "modifier": "static final", "type": "String", "declarator": "CFG_PREFIX = \"identifier.doi.prefix\"", "var_name": "CFG_PREFIX"}, {"original_string": "static final String CFG_NAMESPACE_SEPARATOR = \"identifier.doi.namespaceseparator\";", "modifier": "static final", "type": "String", "declarator": "CFG_NAMESPACE_SEPARATOR = \"identifier.doi.namespaceseparator\"", "var_name": "CFG_NAMESPACE_SEPARATOR"}, {"original_string": "static final char SLASH = '/';", "modifier": "static final", "type": "char", "declarator": "SLASH = '/'", "var_name": "SLASH"}, {"original_string": "public static final String MD_SCHEMA = \"dc\";", "modifier": "public static final", "type": "String", "declarator": "MD_SCHEMA = \"dc\"", "var_name": "MD_SCHEMA"}, {"original_string": "public static final String DOI_ELEMENT = \"identifier\";", "modifier": "public static final", "type": "String", "declarator": "DOI_ELEMENT = \"identifier\"", "var_name": "DOI_ELEMENT"}, {"original_string": "public static final String DOI_QUALIFIER = \"uri\";", "modifier": "public static final", "type": "String", "declarator": "DOI_QUALIFIER = \"uri\"", "var_name": "DOI_QUALIFIER"}, {"original_string": "public static final Integer TO_BE_REGISTERED = 1;", "modifier": "public static final", "type": "Integer", "declarator": "TO_BE_REGISTERED = 1", "var_name": "TO_BE_REGISTERED"}, {"original_string": "public static final Integer TO_BE_RESERVED = 2;", "modifier": "public static final", "type": "Integer", "declarator": "TO_BE_RESERVED = 2", "var_name": "TO_BE_RESERVED"}, {"original_string": "public static final Integer IS_REGISTERED = 3;", "modifier": "public static final", "type": "Integer", "declarator": "IS_REGISTERED = 3", "var_name": "IS_REGISTERED"}, {"original_string": "public static final Integer IS_RESERVED = 4;", "modifier": "public static final", "type": "Integer", "declarator": "IS_RESERVED = 4", "var_name": "IS_RESERVED"}, {"original_string": "public static final Integer UPDATE_RESERVED = 5;", "modifier": "public static final", "type": "Integer", "declarator": "UPDATE_RESERVED = 5", "var_name": "UPDATE_RESERVED"}, {"original_string": "public static final Integer UPDATE_REGISTERED = 6;", "modifier": "public static final", "type": "Integer", "declarator": "UPDATE_REGISTERED = 6", "var_name": "UPDATE_REGISTERED"}, {"original_string": "public static final Integer UPDATE_BEFORE_REGISTRATION = 7;", "modifier": "public static final", "type": "Integer", "declarator": "UPDATE_BEFORE_REGISTRATION = 7", "var_name": "UPDATE_BEFORE_REGISTRATION"}, {"original_string": "public static final Integer TO_BE_DELETED = 8;", "modifier": "public static final", "type": "Integer", "declarator": "TO_BE_DELETED = 8", "var_name": "TO_BE_DELETED"}, {"original_string": "public static final Integer DELETED = 9;", "modifier": "public static final", "type": "Integer", "declarator": "DELETED = 9", "var_name": "DELETED"}, {"original_string": "@Autowired(required = true)\n    protected DOIService doiService;", "modifier": "@Autowired(required = true)\n    protected", "type": "DOIService", "declarator": "doiService", "var_name": "doiService"}, {"original_string": "@Autowired(required = true)\n    protected ContentServiceFactory contentServiceFactory;", "modifier": "@Autowired(required = true)\n    protected", "type": "ContentServiceFactory", "declarator": "contentServiceFactory", "var_name": "contentServiceFactory"}, {"original_string": "@Autowired(required = true)\n    protected ItemService itemService;", "modifier": "@Autowired(required = true)\n    protected", "type": "ItemService", "declarator": "itemService", "var_name": "itemService"}, {"original_string": "private String PREFIX;", "modifier": "private", "type": "String", "declarator": "PREFIX", "var_name": "PREFIX"}, {"original_string": "private String NAMESPACE_SEPARATOR;", "modifier": "private", "type": "String", "declarator": "NAMESPACE_SEPARATOR", "var_name": "NAMESPACE_SEPARATOR"}], "methods": [{"identifier": "DOIIdentifierProvider", "parameters": "()", "modifiers": "protected", "return": "", "signature": " DOIIdentifierProvider()", "full_signature": "protected  DOIIdentifierProvider()", "class_method_signature": "DOIIdentifierProvider.DOIIdentifierProvider()", "testcase": false, "constructor": true}, {"identifier": "getPrefix", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getPrefix()", "full_signature": "protected String getPrefix()", "class_method_signature": "DOIIdentifierProvider.getPrefix()", "testcase": false, "constructor": false}, {"identifier": "getNamespaceSeparator", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getNamespaceSeparator()", "full_signature": "protected String getNamespaceSeparator()", "class_method_signature": "DOIIdentifierProvider.getNamespaceSeparator()", "testcase": false, "constructor": false}, {"identifier": "setDOIConnector", "parameters": "(DOIConnector connector)", "modifiers": "@Required public", "return": "void", "signature": "void setDOIConnector(DOIConnector connector)", "full_signature": "@Required public void setDOIConnector(DOIConnector connector)", "class_method_signature": "DOIIdentifierProvider.setDOIConnector(DOIConnector connector)", "testcase": false, "constructor": false}, {"identifier": "supports", "parameters": "(Class<? extends Identifier> identifier)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supports(Class<? extends Identifier> identifier)", "full_signature": "@Override public boolean supports(Class<? extends Identifier> identifier)", "class_method_signature": "DOIIdentifierProvider.supports(Class<? extends Identifier> identifier)", "testcase": false, "constructor": false}, {"identifier": "supports", "parameters": "(String identifier)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean supports(String identifier)", "full_signature": "@Override public boolean supports(String identifier)", "class_method_signature": "DOIIdentifierProvider.supports(String identifier)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(Context context, DSpaceObject dso)", "modifiers": "@Override public", "return": "String", "signature": "String register(Context context, DSpaceObject dso)", "full_signature": "@Override public String register(Context context, DSpaceObject dso)", "class_method_signature": "DOIIdentifierProvider.register(Context context, DSpaceObject dso)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(Context context, DSpaceObject dso, String identifier)", "modifiers": "@Override public", "return": "void", "signature": "void register(Context context, DSpaceObject dso, String identifier)", "full_signature": "@Override public void register(Context context, DSpaceObject dso, String identifier)", "class_method_signature": "DOIIdentifierProvider.register(Context context, DSpaceObject dso, String identifier)", "testcase": false, "constructor": false}, {"identifier": "reserve", "parameters": "(Context context, DSpaceObject dso, String identifier)", "modifiers": "@Override public", "return": "void", "signature": "void reserve(Context context, DSpaceObject dso, String identifier)", "full_signature": "@Override public void reserve(Context context, DSpaceObject dso, String identifier)", "class_method_signature": "DOIIdentifierProvider.reserve(Context context, DSpaceObject dso, String identifier)", "testcase": false, "constructor": false}, {"identifier": "reserveOnline", "parameters": "(Context context, DSpaceObject dso, String identifier)", "modifiers": "public", "return": "void", "signature": "void reserveOnline(Context context, DSpaceObject dso, String identifier)", "full_signature": "public void reserveOnline(Context context, DSpaceObject dso, String identifier)", "class_method_signature": "DOIIdentifierProvider.reserveOnline(Context context, DSpaceObject dso, String identifier)", "testcase": false, "constructor": false}, {"identifier": "registerOnline", "parameters": "(Context context, DSpaceObject dso, String identifier)", "modifiers": "public", "return": "void", "signature": "void registerOnline(Context context, DSpaceObject dso, String identifier)", "full_signature": "public void registerOnline(Context context, DSpaceObject dso, String identifier)", "class_method_signature": "DOIIdentifierProvider.registerOnline(Context context, DSpaceObject dso, String identifier)", "testcase": false, "constructor": false}, {"identifier": "updateMetadata", "parameters": "(Context context, DSpaceObject dso, String identifier)", "modifiers": "public", "return": "void", "signature": "void updateMetadata(Context context, DSpaceObject dso, String identifier)", "full_signature": "public void updateMetadata(Context context, DSpaceObject dso, String identifier)", "class_method_signature": "DOIIdentifierProvider.updateMetadata(Context context, DSpaceObject dso, String identifier)", "testcase": false, "constructor": false}, {"identifier": "updateMetadataOnline", "parameters": "(Context context, DSpaceObject dso, String identifier)", "modifiers": "public", "return": "void", "signature": "void updateMetadataOnline(Context context, DSpaceObject dso, String identifier)", "full_signature": "public void updateMetadataOnline(Context context, DSpaceObject dso, String identifier)", "class_method_signature": "DOIIdentifierProvider.updateMetadataOnline(Context context, DSpaceObject dso, String identifier)", "testcase": false, "constructor": false}, {"identifier": "mint", "parameters": "(Context context, DSpaceObject dso)", "modifiers": "@Override public", "return": "String", "signature": "String mint(Context context, DSpaceObject dso)", "full_signature": "@Override public String mint(Context context, DSpaceObject dso)", "class_method_signature": "DOIIdentifierProvider.mint(Context context, DSpaceObject dso)", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(Context context, String identifier, String... attributes)", "modifiers": "@Override public", "return": "DSpaceObject", "signature": "DSpaceObject resolve(Context context, String identifier, String... attributes)", "full_signature": "@Override public DSpaceObject resolve(Context context, String identifier, String... attributes)", "class_method_signature": "DOIIdentifierProvider.resolve(Context context, String identifier, String... attributes)", "testcase": false, "constructor": false}, {"identifier": "lookup", "parameters": "(Context context, DSpaceObject dso)", "modifiers": "@Override public", "return": "String", "signature": "String lookup(Context context, DSpaceObject dso)", "full_signature": "@Override public String lookup(Context context, DSpaceObject dso)", "class_method_signature": "DOIIdentifierProvider.lookup(Context context, DSpaceObject dso)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Context context, DSpaceObject dso)", "modifiers": "@Override public", "return": "void", "signature": "void delete(Context context, DSpaceObject dso)", "full_signature": "@Override public void delete(Context context, DSpaceObject dso)", "class_method_signature": "DOIIdentifierProvider.delete(Context context, DSpaceObject dso)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Context context, DSpaceObject dso, String identifier)", "modifiers": "@Override public", "return": "void", "signature": "void delete(Context context, DSpaceObject dso, String identifier)", "full_signature": "@Override public void delete(Context context, DSpaceObject dso, String identifier)", "class_method_signature": "DOIIdentifierProvider.delete(Context context, DSpaceObject dso, String identifier)", "testcase": false, "constructor": false}, {"identifier": "deleteOnline", "parameters": "(Context context, String identifier)", "modifiers": "public", "return": "void", "signature": "void deleteOnline(Context context, String identifier)", "full_signature": "public void deleteOnline(Context context, String identifier)", "class_method_signature": "DOIIdentifierProvider.deleteOnline(Context context, String identifier)", "testcase": false, "constructor": false}, {"identifier": "getObjectByDOI", "parameters": "(Context context, String identifier)", "modifiers": "public", "return": "DSpaceObject", "signature": "DSpaceObject getObjectByDOI(Context context, String identifier)", "full_signature": "public DSpaceObject getObjectByDOI(Context context, String identifier)", "class_method_signature": "DOIIdentifierProvider.getObjectByDOI(Context context, String identifier)", "testcase": false, "constructor": false}, {"identifier": "getDOIByObject", "parameters": "(Context context, DSpaceObject dso)", "modifiers": "public", "return": "String", "signature": "String getDOIByObject(Context context, DSpaceObject dso)", "full_signature": "public String getDOIByObject(Context context, DSpaceObject dso)", "class_method_signature": "DOIIdentifierProvider.getDOIByObject(Context context, DSpaceObject dso)", "testcase": false, "constructor": false}, {"identifier": "loadOrCreateDOI", "parameters": "(Context context, DSpaceObject dso, String doiIdentifier)", "modifiers": "protected", "return": "DOI", "signature": "DOI loadOrCreateDOI(Context context, DSpaceObject dso, String doiIdentifier)", "full_signature": "protected DOI loadOrCreateDOI(Context context, DSpaceObject dso, String doiIdentifier)", "class_method_signature": "DOIIdentifierProvider.loadOrCreateDOI(Context context, DSpaceObject dso, String doiIdentifier)", "testcase": false, "constructor": false}, {"identifier": "getDOIOutOfObject", "parameters": "(DSpaceObject dso)", "modifiers": "public", "return": "String", "signature": "String getDOIOutOfObject(DSpaceObject dso)", "full_signature": "public String getDOIOutOfObject(DSpaceObject dso)", "class_method_signature": "DOIIdentifierProvider.getDOIOutOfObject(DSpaceObject dso)", "testcase": false, "constructor": false}, {"identifier": "saveDOIToObject", "parameters": "(Context context, DSpaceObject dso, String doi)", "modifiers": "protected", "return": "void", "signature": "void saveDOIToObject(Context context, DSpaceObject dso, String doi)", "full_signature": "protected void saveDOIToObject(Context context, DSpaceObject dso, String doi)", "class_method_signature": "DOIIdentifierProvider.saveDOIToObject(Context context, DSpaceObject dso, String doi)", "testcase": false, "constructor": false}, {"identifier": "removeDOIFromObject", "parameters": "(Context context, DSpaceObject dso, String doi)", "modifiers": "protected", "return": "void", "signature": "void removeDOIFromObject(Context context, DSpaceObject dso, String doi)", "full_signature": "protected void removeDOIFromObject(Context context, DSpaceObject dso, String doi)", "class_method_signature": "DOIIdentifierProvider.removeDOIFromObject(Context context, DSpaceObject dso, String doi)", "testcase": false, "constructor": false}], "file": "dspace-api/src/main/java/org/dspace/identifier/DOIIdentifierProvider.java"}, "focal_method": {"identifier": "resolve", "parameters": "(Context context, String identifier, String... attributes)", "modifiers": "@Override public", "return": "DSpaceObject", "body": "@Override\n    public DSpaceObject resolve(Context context, String identifier, String... attributes)\n            throws IdentifierNotFoundException, IdentifierNotResolvableException\n    {\n        String doi = null;\n        try {\n            doi = doiService.formatIdentifier(identifier);\n        } catch (IdentifierException e) {\n            throw new IdentifierNotResolvableException(e);\n        }\n        try\n        {\n            DSpaceObject dso = getObjectByDOI(context, doi);\n            if (null == dso)\n            {\n                throw new IdentifierNotFoundException();\n            }\n            return dso;\n        }\n        catch (SQLException sqle)\n        {\n            log.error(\"SQLException while searching a DOI in our db.\", sqle);\n            throw new RuntimeException(\"Unable to retrieve information about \"+\n                    \"a DOI out of database.\", sqle);\n        }\n        catch (IdentifierException e)\n        {\n            throw new IdentifierNotResolvableException(e);\n        }\n    }", "signature": "DSpaceObject resolve(Context context, String identifier, String... attributes)", "full_signature": "@Override public DSpaceObject resolve(Context context, String identifier, String... attributes)", "class_method_signature": "DOIIdentifierProvider.resolve(Context context, String identifier, String... attributes)", "testcase": false, "constructor": false, "invocations": ["formatIdentifier", "getObjectByDOI", "error"]}, "repository": {"repo_id": 39038703, "url": "https://github.com/VTUL/vtechworks", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 112021, "license": "licensed"}}