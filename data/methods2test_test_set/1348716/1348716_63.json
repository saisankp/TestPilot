{"test_class": {"identifier": "MarkdownLinkFilterWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String link;", "modifier": "private", "type": "String", "declarator": "link", "var_name": "link"}, {"original_string": "@Mock\n    private Writer out;", "modifier": "@Mock\n    private", "type": "Writer", "declarator": "out", "var_name": "out"}, {"original_string": "private MarkdownLinkFilterWriter markdownLinkFilterWriter;", "modifier": "private", "type": "MarkdownLinkFilterWriter", "declarator": "markdownLinkFilterWriter", "var_name": "markdownLinkFilterWriter"}], "file": "userInterface/src/test/java/org/mifos/ui/ftl/MarkdownLinkFilterWriterTest.java"}, "test_case": {"identifier": "testMarkupEnglish", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMarkupEnglish() throws Exception {\n        char[] characterBuffer = \"You can also [define a new question](%s)\".toCharArray();\n        markdownLinkFilterWriter.write(characterBuffer, 0, 40);\n        Mockito.verify(out).write(\"You can also <a href=\\\"createQuestion.ftl\\\">define a new question</a>\\n\");\n    }", "signature": "void testMarkupEnglish()", "full_signature": "@Test public void testMarkupEnglish()", "class_method_signature": "MarkdownLinkFilterWriterTest.testMarkupEnglish()", "testcase": true, "constructor": false, "invocations": ["toCharArray", "write", "write", "verify"]}, "focal_class": {"identifier": "MarkdownLinkFilterWriter", "superclass": "extends Writer", "interfaces": "", "fields": [{"original_string": "private final Writer out;", "modifier": "private final", "type": "Writer", "declarator": "out", "var_name": "out"}, {"original_string": "private final String dest;", "modifier": "private final", "type": "String", "declarator": "dest", "var_name": "dest"}], "methods": [{"identifier": "MarkdownLinkFilterWriter", "parameters": "(Writer out, String dest)", "modifiers": "", "return": "", "signature": " MarkdownLinkFilterWriter(Writer out, String dest)", "full_signature": "  MarkdownLinkFilterWriter(Writer out, String dest)", "class_method_signature": "MarkdownLinkFilterWriter.MarkdownLinkFilterWriter(Writer out, String dest)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(char[] cbuf, int off, int len)", "modifiers": "@Override public", "return": "void", "signature": "void write(char[] cbuf, int off, int len)", "full_signature": "@Override public void write(char[] cbuf, int off, int len)", "class_method_signature": "MarkdownLinkFilterWriter.write(char[] cbuf, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void flush()", "full_signature": "@Override public void flush()", "class_method_signature": "MarkdownLinkFilterWriter.flush()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "MarkdownLinkFilterWriter.close()", "testcase": false, "constructor": false}], "file": "userInterface/src/main/java/org/mifos/ui/ftl/MarkdownLinkFilterWriter.java"}, "focal_method": {"identifier": "write", "parameters": "(char[] cbuf, int off, int len)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void write(char[] cbuf, int off, int len) throws IOException {\n        StringBuffer slurped = new StringBuffer();\n        for (int i = 0; i < len; i++) {\n            slurped.append(cbuf[i + off]);\n        }\n        String replaced = String.format(slurped.toString(), dest);\n        String markedDown = new MarkdownProcessor().markdown(replaced);\n        markedDown = markedDown.replace(\"<p>\", \"\");\n        markedDown = markedDown.replace(\"</p>\", \"\");\n        out.write(markedDown);\n    }", "signature": "void write(char[] cbuf, int off, int len)", "full_signature": "@Override public void write(char[] cbuf, int off, int len)", "class_method_signature": "MarkdownLinkFilterWriter.write(char[] cbuf, int off, int len)", "testcase": false, "constructor": false, "invocations": ["append", "format", "toString", "markdown", "replace", "replace", "write"]}, "repository": {"repo_id": 1348716, "url": "https://github.com/mifos/head", "language": "Java", "is_fork": false, "fork_count": 91, "stargazer_count": 55, "size": 532732, "license": "licensed"}}