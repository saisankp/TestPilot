{"test_class": {"identifier": "TypeReportTest", "superclass": "", "interfaces": "", "fields": [], "file": "dhis-2/dhis-api/src/test/java/org/hisp/dhis/feedback/TypeReportTest.java"}, "test_case": {"identifier": "testTypeReport", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTypeReport()\n    {\n        ObjectReport objectReport0 = new ObjectReport( DataElement.class, 0 );\n        ObjectReport objectReport1 = new ObjectReport( DataElement.class, 1 );\n        ObjectReport objectReport2 = new ObjectReport( DataElement.class, 2 );\n\n        objectReport0.addErrorReport( new ErrorReport( DataElementGroup.class, ErrorCode.E3000, \"admin\", \"DataElementGroup\" ) );\n        objectReport1.addErrorReport( new ErrorReport( DataElementGroup.class, ErrorCode.E3000, \"admin\", \"DataElementGroup\" ) );\n        objectReport2.addErrorReport( new ErrorReport( DataElementGroup.class, ErrorCode.E3000, \"admin\", \"DataElementGroup\" ) );\n\n        TypeReport typeReport0 = new TypeReport( DataElement.class );\n        typeReport0.addObjectReport( objectReport0 );\n        typeReport0.addObjectReport( objectReport1 );\n        typeReport0.addObjectReport( objectReport2 );\n\n        assertEquals( 3, typeReport0.getObjectReports().size() );\n        assertEquals( 3, typeReport0.getErrorReports().size() );\n\n        ObjectReport objectReport3 = new ObjectReport( DataElement.class, 3 );\n        ObjectReport objectReport4 = new ObjectReport( DataElement.class, 4 );\n        ObjectReport objectReport5 = new ObjectReport( DataElement.class, 5 );\n\n        objectReport3.addErrorReport( new ErrorReport( DataElementGroup.class, ErrorCode.E3000, \"admin\", \"DataElementGroup\" ) );\n        objectReport4.addErrorReport( new ErrorReport( DataElementGroup.class, ErrorCode.E3000, \"admin\", \"DataElementGroup\" ) );\n        objectReport5.addErrorReport( new ErrorReport( DataElementGroup.class, ErrorCode.E3000, \"admin\", \"DataElementGroup\" ) );\n\n        TypeReport typeReport1 = new TypeReport( DataElement.class );\n        typeReport1.addObjectReport( objectReport0 );\n        typeReport1.addObjectReport( objectReport1 );\n        typeReport1.addObjectReport( objectReport2 );\n\n        assertEquals( 3, typeReport1.getObjectReports().size() );\n        assertEquals( 3, typeReport1.getErrorReports().size() );\n    }", "signature": "void testTypeReport()", "full_signature": "@Test public void testTypeReport()", "class_method_signature": "TypeReportTest.testTypeReport()", "testcase": true, "constructor": false, "invocations": ["addErrorReport", "addErrorReport", "addErrorReport", "addObjectReport", "addObjectReport", "addObjectReport", "assertEquals", "size", "getObjectReports", "assertEquals", "size", "getErrorReports", "addErrorReport", "addErrorReport", "addErrorReport", "addObjectReport", "addObjectReport", "addObjectReport", "assertEquals", "size", "getObjectReports", "assertEquals", "size", "getErrorReports"]}, "focal_class": {"identifier": "TypeReport", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Class<?> klass;", "modifier": "private", "type": "Class<?>", "declarator": "klass", "var_name": "klass"}, {"original_string": "private Stats stats = new Stats();", "modifier": "private", "type": "Stats", "declarator": "stats = new Stats()", "var_name": "stats"}, {"original_string": "private Map<Integer, ObjectReport> objectReportMap = new HashMap<>();", "modifier": "private", "type": "Map<Integer, ObjectReport>", "declarator": "objectReportMap = new HashMap<>()", "var_name": "objectReportMap"}], "methods": [{"identifier": "TypeReport", "parameters": "( @JsonProperty( \"klass\" ) Class<?> klass )", "modifiers": "@JsonCreator public", "return": "", "signature": " TypeReport( @JsonProperty( \"klass\" ) Class<?> klass )", "full_signature": "@JsonCreator public  TypeReport( @JsonProperty( \"klass\" ) Class<?> klass )", "class_method_signature": "TypeReport.TypeReport( @JsonProperty( \"klass\" ) Class<?> klass )", "testcase": false, "constructor": true}, {"identifier": "merge", "parameters": "( TypeReport typeReport )", "modifiers": "public", "return": "void", "signature": "void merge( TypeReport typeReport )", "full_signature": "public void merge( TypeReport typeReport )", "class_method_signature": "TypeReport.merge( TypeReport typeReport )", "testcase": false, "constructor": false}, {"identifier": "addObjectReport", "parameters": "( ObjectReport objectReport )", "modifiers": "public", "return": "void", "signature": "void addObjectReport( ObjectReport objectReport )", "full_signature": "public void addObjectReport( ObjectReport objectReport )", "class_method_signature": "TypeReport.addObjectReport( ObjectReport objectReport )", "testcase": false, "constructor": false}, {"identifier": "getKlass", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( isAttribute = true ) public", "return": "Class<?>", "signature": "Class<?> getKlass()", "full_signature": "@JsonProperty @JacksonXmlProperty( isAttribute = true ) public Class<?> getKlass()", "class_method_signature": "TypeReport.getKlass()", "testcase": false, "constructor": false}, {"identifier": "getStats", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "Stats", "signature": "Stats getStats()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public Stats getStats()", "class_method_signature": "TypeReport.getStats()", "testcase": false, "constructor": false}, {"identifier": "getObjectReports", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlElementWrapper( localName = \"objectReports\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"objectReport\", namespace = DxfNamespaces.DXF_2_0 ) public", "return": "List<ObjectReport>", "signature": "List<ObjectReport> getObjectReports()", "full_signature": "@JsonProperty @JacksonXmlElementWrapper( localName = \"objectReports\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"objectReport\", namespace = DxfNamespaces.DXF_2_0 ) public List<ObjectReport> getObjectReports()", "class_method_signature": "TypeReport.getObjectReports()", "testcase": false, "constructor": false}, {"identifier": "setObjectReports", "parameters": "( List<ObjectReport> objectReports )", "modifiers": "@JsonProperty @JacksonXmlElementWrapper( localName = \"objectReports\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"objectReport\", namespace = DxfNamespaces.DXF_2_0 ) public", "return": "void", "signature": "void setObjectReports( List<ObjectReport> objectReports )", "full_signature": "@JsonProperty @JacksonXmlElementWrapper( localName = \"objectReports\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"objectReport\", namespace = DxfNamespaces.DXF_2_0 ) public void setObjectReports( List<ObjectReport> objectReports )", "class_method_signature": "TypeReport.setObjectReports( List<ObjectReport> objectReports )", "testcase": false, "constructor": false}, {"identifier": "getErrorReports", "parameters": "()", "modifiers": "public", "return": "List<ErrorReport>", "signature": "List<ErrorReport> getErrorReports()", "full_signature": "public List<ErrorReport> getErrorReports()", "class_method_signature": "TypeReport.getErrorReports()", "testcase": false, "constructor": false}, {"identifier": "getObjectReportMap", "parameters": "()", "modifiers": "public", "return": "Map<Integer, ObjectReport>", "signature": "Map<Integer, ObjectReport> getObjectReportMap()", "full_signature": "public Map<Integer, ObjectReport> getObjectReportMap()", "class_method_signature": "TypeReport.getObjectReportMap()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TypeReport.toString()", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-api/src/main/java/org/hisp/dhis/feedback/TypeReport.java"}, "focal_method": {"identifier": "TypeReport", "parameters": "( @JsonProperty( \"klass\" ) Class<?> klass )", "modifiers": "@JsonCreator public", "return": "", "body": "@JsonCreator\n    public TypeReport( @JsonProperty( \"klass\" ) Class<?> klass )\n    {\n        this.klass = klass;\n    }", "signature": " TypeReport( @JsonProperty( \"klass\" ) Class<?> klass )", "full_signature": "@JsonCreator public  TypeReport( @JsonProperty( \"klass\" ) Class<?> klass )", "class_method_signature": "TypeReport.TypeReport( @JsonProperty( \"klass\" ) Class<?> klass )", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}