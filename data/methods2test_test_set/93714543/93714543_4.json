{"test_class": {"identifier": "RxRocketChatClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "RxRocketChatClient sut;", "modifier": "", "type": "RxRocketChatClient", "declarator": "sut", "var_name": "sut"}, {"original_string": "@Mock\n    RocketChatClient api;", "modifier": "@Mock", "type": "RocketChatClient", "declarator": "api", "var_name": "api"}, {"original_string": "Token token = Token.create(\"userId\", \"token\");", "modifier": "", "type": "Token", "declarator": "token = Token.create(\"userId\", \"token\")", "var_name": "token"}], "file": "rocketchat-core-rxjava/src/test/java/com/rocketchat/core/rxjava/RxRocketChatClientTest.java"}, "test_case": {"identifier": "testSigninShouldFailWithRocketChatAuthException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSigninShouldFailWithRocketChatAuthException() {\n        doAnswer(new Answer() {\n            @Override\n            public Object answer(InvocationOnMock invocation) throws Throwable {\n                ((LoginCallback) invocation.getArguments()[2]).onError(new RocketChatAuthException(\"Invalid credentials\"));\n                return null;\n            }\n        }).when(api).signin(any(String.class), any(String.class), any(LoginCallback.class));\n\n        TestObserver<Token> testObserver = sut.signin(\"username\", \"password\").test();\n        testObserver.assertError(new Predicate<Throwable>() {\n            @Override\n            public boolean test(Throwable throwable) throws Exception {\n                return throwable != null\n                        && throwable instanceof RocketChatAuthException\n                        && throwable.getMessage().contentEquals(\"Invalid credentials\");\n            }\n        });\n        testObserver.assertNoValues();\n    }", "signature": "void testSigninShouldFailWithRocketChatAuthException()", "full_signature": "@Test public void testSigninShouldFailWithRocketChatAuthException()", "class_method_signature": "RxRocketChatClientTest.testSigninShouldFailWithRocketChatAuthException()", "testcase": true, "constructor": false, "invocations": ["signin", "when", "doAnswer", "onError", "getArguments", "any", "any", "any", "test", "signin", "assertError", "contentEquals", "getMessage", "assertNoValues"]}, "focal_class": {"identifier": "RxRocketChatClient", "superclass": "", "interfaces": "implements ConnectListener", "fields": [{"original_string": "private final RocketChatClient client;", "modifier": "private final", "type": "RocketChatClient", "declarator": "client", "var_name": "client"}, {"original_string": "private BehaviorSubject<State> stateMachine;", "modifier": "private", "type": "BehaviorSubject<State>", "declarator": "stateMachine", "var_name": "stateMachine"}], "methods": [{"identifier": "RxRocketChatClient", "parameters": "(RocketChatClient client)", "modifiers": "public", "return": "", "signature": " RxRocketChatClient(RocketChatClient client)", "full_signature": "public  RxRocketChatClient(RocketChatClient client)", "class_method_signature": "RxRocketChatClient.RxRocketChatClient(RocketChatClient client)", "testcase": false, "constructor": true}, {"identifier": "signin", "parameters": "(final String username, final String password)", "modifiers": "public", "return": "Single<Token>", "signature": "Single<Token> signin(final String username, final String password)", "full_signature": "public Single<Token> signin(final String username, final String password)", "class_method_signature": "RxRocketChatClient.signin(final String username, final String password)", "testcase": false, "constructor": false}, {"identifier": "connect", "parameters": "()", "modifiers": "public", "return": "Flowable<State>", "signature": "Flowable<State> connect()", "full_signature": "public Flowable<State> connect()", "class_method_signature": "RxRocketChatClient.connect()", "testcase": false, "constructor": false}, {"identifier": "verifyServerVersion", "parameters": "(final OkHttpClient client, final String baseUrl,\n                                                  final RocketChatVerifier.VersionVerifier verifier)", "modifiers": "public static", "return": "Completable", "signature": "Completable verifyServerVersion(final OkHttpClient client, final String baseUrl,\n                                                  final RocketChatVerifier.VersionVerifier verifier)", "full_signature": "public static Completable verifyServerVersion(final OkHttpClient client, final String baseUrl,\n                                                  final RocketChatVerifier.VersionVerifier verifier)", "class_method_signature": "RxRocketChatClient.verifyServerVersion(final OkHttpClient client, final String baseUrl,\n                                                  final RocketChatVerifier.VersionVerifier verifier)", "testcase": false, "constructor": false}, {"identifier": "onConnect", "parameters": "(String sessionID)", "modifiers": "@Override public", "return": "void", "signature": "void onConnect(String sessionID)", "full_signature": "@Override public void onConnect(String sessionID)", "class_method_signature": "RxRocketChatClient.onConnect(String sessionID)", "testcase": false, "constructor": false}, {"identifier": "onDisconnect", "parameters": "(boolean closedByServer)", "modifiers": "@Override public", "return": "void", "signature": "void onDisconnect(boolean closedByServer)", "full_signature": "@Override public void onDisconnect(boolean closedByServer)", "class_method_signature": "RxRocketChatClient.onDisconnect(boolean closedByServer)", "testcase": false, "constructor": false}, {"identifier": "onConnectError", "parameters": "(Throwable websocketException)", "modifiers": "@Override public", "return": "void", "signature": "void onConnectError(Throwable websocketException)", "full_signature": "@Override public void onConnectError(Throwable websocketException)", "class_method_signature": "RxRocketChatClient.onConnectError(Throwable websocketException)", "testcase": false, "constructor": false}], "file": "rocketchat-core-rxjava/src/main/java/com/rocketchat/core/rxjava/RxRocketChatClient.java"}, "focal_method": {"identifier": "signin", "parameters": "(final String username, final String password)", "modifiers": "public", "return": "Single<Token>", "body": "public Single<Token> signin(final String username, final String password) {\n        return Single.create(new SingleOnSubscribe<Token>() {\n            @Override\n            public void subscribe(final SingleEmitter<Token> emitter) throws Exception {\n                client.signin(username, password, new LoginCallback() {\n                    @Override\n                    public void onLoginSuccess(Token token) {\n                        emitter.onSuccess(token);\n                    }\n\n                    @Override\n                    public void onError(RocketChatException error) {\n                        emitter.onError(error);\n                    }\n                });\n            }\n        });\n    }", "signature": "Single<Token> signin(final String username, final String password)", "full_signature": "public Single<Token> signin(final String username, final String password)", "class_method_signature": "RxRocketChatClient.signin(final String username, final String password)", "testcase": false, "constructor": false, "invocations": ["create", "signin", "onSuccess", "onError"]}, "repository": {"repo_id": 93714543, "url": "https://github.com/RocketChat/Rocket.Chat.Java.SDK", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 26, "size": 2962, "license": "licensed"}}