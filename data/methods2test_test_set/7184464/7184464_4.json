{"test_class": {"identifier": "MongoDBAppenderBaseTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MongoDBAppenderBase<DeferredProcessingAware> appender;", "modifier": "private", "type": "MongoDBAppenderBase<DeferredProcessingAware>", "declarator": "appender", "var_name": "appender"}, {"original_string": "@Mock\n    private MongoClient mongoClient;", "modifier": "@Mock\n    private", "type": "MongoClient", "declarator": "mongoClient", "var_name": "mongoClient"}, {"original_string": "@Mock\n    private DB db;", "modifier": "@Mock\n    private", "type": "DB", "declarator": "db", "var_name": "db"}, {"original_string": "@Mock\n    private DBCollection collection;", "modifier": "@Mock\n    private", "type": "DBCollection", "declarator": "collection", "var_name": "collection"}, {"original_string": "@Mock\n    private DeferredProcessingAware event;", "modifier": "@Mock\n    private", "type": "DeferredProcessingAware", "declarator": "event", "var_name": "event"}, {"original_string": "@Mock\n    private MongoClientFactory mongoFactory;", "modifier": "@Mock\n    private", "type": "MongoClientFactory", "declarator": "mongoFactory", "var_name": "mongoFactory"}, {"original_string": "private BasicDBObject dbObject = new BasicDBObject();", "modifier": "private", "type": "BasicDBObject", "declarator": "dbObject = new BasicDBObject()", "var_name": "dbObject"}], "file": "mongodb/core/src/test/java/ch/qos/logback/contrib/mongodb/MongoDBAppenderBaseTest.java"}, "test_case": {"identifier": "testStop", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStop() {\n        // when calling stop()\n        appender.setUri(\"mongodb://username:password@server/database.collection\");\n        appender.start();\n        appender.doAppend(event);\n        appender.stop();\n        // then close MongoDB connection and stop appender\n        Mockito.verify(mongoClient).close();\n        assertFalse(appender.isStarted());\n    }", "signature": "void testStop()", "full_signature": "@Test public void testStop()", "class_method_signature": "MongoDBAppenderBaseTest.testStop()", "testcase": true, "constructor": false, "invocations": ["setUri", "start", "doAppend", "stop", "close", "verify", "assertFalse", "isStarted"]}, "focal_class": {"identifier": "MongoDBAppenderBase", "superclass": "extends UnsynchronizedAppenderBase<E>", "interfaces": "", "fields": [{"original_string": "private MongoClient mongoClient = null;", "modifier": "private", "type": "MongoClient", "declarator": "mongoClient = null", "var_name": "mongoClient"}, {"original_string": "private DBCollection eventsCollection = null;", "modifier": "private", "type": "DBCollection", "declarator": "eventsCollection = null", "var_name": "eventsCollection"}, {"original_string": "private String uri = null;", "modifier": "private", "type": "String", "declarator": "uri = null", "var_name": "uri"}, {"original_string": "private MongoClientFactory mongoClientFactory;", "modifier": "private", "type": "MongoClientFactory", "declarator": "mongoClientFactory", "var_name": "mongoClientFactory"}], "methods": [{"identifier": "MongoDBAppenderBase", "parameters": "()", "modifiers": "public", "return": "", "signature": " MongoDBAppenderBase()", "full_signature": "public  MongoDBAppenderBase()", "class_method_signature": "MongoDBAppenderBase.MongoDBAppenderBase()", "testcase": false, "constructor": true}, {"identifier": "MongoDBAppenderBase", "parameters": "(MongoClientFactory factory)", "modifiers": "public", "return": "", "signature": " MongoDBAppenderBase(MongoClientFactory factory)", "full_signature": "public  MongoDBAppenderBase(MongoClientFactory factory)", "class_method_signature": "MongoDBAppenderBase.MongoDBAppenderBase(MongoClientFactory factory)", "testcase": false, "constructor": true}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void start()", "full_signature": "@Override public void start()", "class_method_signature": "MongoDBAppenderBase.start()", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(E event)", "modifiers": "@Override protected", "return": "void", "signature": "void append(E event)", "full_signature": "@Override protected void append(E event)", "class_method_signature": "MongoDBAppenderBase.append(E event)", "testcase": false, "constructor": false}, {"identifier": "toMongoDocument", "parameters": "(E event)", "modifiers": "protected abstract", "return": "BasicDBObject", "signature": "BasicDBObject toMongoDocument(E event)", "full_signature": "protected abstract BasicDBObject toMongoDocument(E event)", "class_method_signature": "MongoDBAppenderBase.toMongoDocument(E event)", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "MongoDBAppenderBase.stop()", "testcase": false, "constructor": false}, {"identifier": "setUri", "parameters": "(String uri)", "modifiers": "public", "return": "void", "signature": "void setUri(String uri)", "full_signature": "public void setUri(String uri)", "class_method_signature": "MongoDBAppenderBase.setUri(String uri)", "testcase": false, "constructor": false}], "file": "mongodb/core/src/main/java/ch/qos/logback/contrib/mongodb/MongoDBAppenderBase.java"}, "focal_method": {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void stop() {\n        if (mongoClient != null)\n            mongoClient.close();\n        super.stop();\n    }", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "MongoDBAppenderBase.stop()", "testcase": false, "constructor": false, "invocations": ["close", "stop"]}, "repository": {"repo_id": 7184464, "url": "https://github.com/qos-ch/logback-contrib", "language": "Java", "is_fork": false, "fork_count": 39, "stargazer_count": 32, "size": 301, "license": "licensed"}}