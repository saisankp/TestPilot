{"test_class": {"identifier": "InfluxDbUdpSenderTest", "superclass": "", "interfaces": "", "fields": [], "file": "metrics-influxdb/src/test/java/com/izettle/metrics/influxdb/InfluxDbUdpSenderTest.java"}, "test_case": {"identifier": "shouldThrowUnknownHostException", "parameters": "()", "modifiers": "@Test(expected = UnknownHostException.class) public", "return": "void", "body": "@Test(expected = UnknownHostException.class)\n    public void shouldThrowUnknownHostException() throws Exception {\n        InfluxDbUdpSender influxDbUdpSender = new InfluxDbUdpSender(\n            \"testtestasdfg\",\n            10080,\n            1000,\n            \"test\",\n            \"\"\n        );\n        influxDbUdpSender.writeData(new byte[0]);\n    }", "signature": "void shouldThrowUnknownHostException()", "full_signature": "@Test(expected = UnknownHostException.class) public void shouldThrowUnknownHostException()", "class_method_signature": "InfluxDbUdpSenderTest.shouldThrowUnknownHostException()", "testcase": true, "constructor": false, "invocations": ["writeData"]}, "focal_class": {"identifier": "InfluxDbUdpSender", "superclass": "extends InfluxDbBaseSender", "interfaces": "", "fields": [{"original_string": "private static final TimeUnit UDP_TIME_PRECISION = TimeUnit.NANOSECONDS;", "modifier": "private static final", "type": "TimeUnit", "declarator": "UDP_TIME_PRECISION = TimeUnit.NANOSECONDS", "var_name": "UDP_TIME_PRECISION"}, {"original_string": "private final String hostname;", "modifier": "private final", "type": "String", "declarator": "hostname", "var_name": "hostname"}, {"original_string": "private final int port;", "modifier": "private final", "type": "int", "declarator": "port", "var_name": "port"}, {"original_string": "private final int socketTimeout;", "modifier": "private final", "type": "int", "declarator": "socketTimeout", "var_name": "socketTimeout"}, {"original_string": "private DatagramSocket udpSocket;", "modifier": "private", "type": "DatagramSocket", "declarator": "udpSocket", "var_name": "udpSocket"}], "methods": [{"identifier": "InfluxDbUdpSender", "parameters": "(\n        String hostname,\n        int port,\n        int socketTimeout,\n        String database,\n        String measurementPrefix)", "modifiers": "public", "return": "", "signature": " InfluxDbUdpSender(\n        String hostname,\n        int port,\n        int socketTimeout,\n        String database,\n        String measurementPrefix)", "full_signature": "public  InfluxDbUdpSender(\n        String hostname,\n        int port,\n        int socketTimeout,\n        String database,\n        String measurementPrefix)", "class_method_signature": "InfluxDbUdpSender.InfluxDbUdpSender(\n        String hostname,\n        int port,\n        int socketTimeout,\n        String database,\n        String measurementPrefix)", "testcase": false, "constructor": true}, {"identifier": "writeData", "parameters": "(byte[] line)", "modifiers": "@Override protected", "return": "int", "signature": "int writeData(byte[] line)", "full_signature": "@Override protected int writeData(byte[] line)", "class_method_signature": "InfluxDbUdpSender.writeData(byte[] line)", "testcase": false, "constructor": false}, {"identifier": "createSocket", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createSocket()", "full_signature": "private void createSocket()", "class_method_signature": "InfluxDbUdpSender.createSocket()", "testcase": false, "constructor": false}], "file": "metrics-influxdb/src/main/java/com/izettle/metrics/influxdb/InfluxDbUdpSender.java"}, "focal_method": {"identifier": "writeData", "parameters": "(byte[] line)", "modifiers": "@Override protected", "return": "int", "body": "@Override\n    protected int writeData(byte[] line) throws Exception {\n        createSocket();\n\n        udpSocket.send(new DatagramPacket(line, line.length, InetAddress.getByName(hostname), port));\n\n        return 0;\n    }", "signature": "int writeData(byte[] line)", "full_signature": "@Override protected int writeData(byte[] line)", "class_method_signature": "InfluxDbUdpSender.writeData(byte[] line)", "testcase": false, "constructor": false, "invocations": ["createSocket", "send", "getByName"]}, "repository": {"repo_id": 43748389, "url": "https://github.com/iZettle/dropwizard-metrics-influxdb", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 82, "size": 272, "license": "licensed"}}