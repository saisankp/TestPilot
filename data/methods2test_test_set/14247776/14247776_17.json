{"test_class": {"identifier": "BundleServiceTest", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "@Mock Scoped scoped;", "modifier": "@Mock", "type": "Scoped", "declarator": "scoped", "var_name": "scoped"}, {"original_string": "private MortarScope activityScope;", "modifier": "private", "type": "MortarScope", "declarator": "activityScope", "var_name": "activityScope"}], "file": "mortar/src/test/java/mortar/bundler/BundleServiceTest.java"}, "test_case": {"identifier": "cannotGetBundleServiceFromContextOfDestroyed", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void cannotGetBundleServiceFromContextOfDestroyed() {\n    MortarScope child = activityScope.buildChild().build(\"child\");\n    Context context = mockContext(child);\n    child.destroy();\n\n    IllegalStateException caught = null;\n    try {\n      getBundleService(context);\n    } catch (IllegalStateException e) {\n      caught = e;\n    }\n    assertThat(caught).isNotNull();\n  }", "signature": "void cannotGetBundleServiceFromContextOfDestroyed()", "full_signature": "@Test public void cannotGetBundleServiceFromContextOfDestroyed()", "class_method_signature": "BundleServiceTest.cannotGetBundleServiceFromContextOfDestroyed()", "testcase": true, "constructor": false, "invocations": ["build", "buildChild", "mockContext", "destroy", "getBundleService", "isNotNull", "assertThat"]}, "focal_class": {"identifier": "BundleService", "superclass": "", "interfaces": "", "fields": [{"original_string": "final BundleServiceRunner runner;", "modifier": "final", "type": "BundleServiceRunner", "declarator": "runner", "var_name": "runner"}, {"original_string": "final MortarScope scope;", "modifier": "final", "type": "MortarScope", "declarator": "scope", "var_name": "scope"}, {"original_string": "final Set<Bundler> bundlers = new LinkedHashSet<>();", "modifier": "final", "type": "Set<Bundler>", "declarator": "bundlers = new LinkedHashSet<>()", "var_name": "bundlers"}, {"original_string": "Bundle scopeBundle;", "modifier": "", "type": "Bundle", "declarator": "scopeBundle", "var_name": "scopeBundle"}, {"original_string": "private List<Bundler> toBeLoaded = new ArrayList<>();", "modifier": "private", "type": "List<Bundler>", "declarator": "toBeLoaded = new ArrayList<>()", "var_name": "toBeLoaded"}], "methods": [{"identifier": "BundleService", "parameters": "(BundleServiceRunner runner, MortarScope scope)", "modifiers": "", "return": "", "signature": " BundleService(BundleServiceRunner runner, MortarScope scope)", "full_signature": "  BundleService(BundleServiceRunner runner, MortarScope scope)", "class_method_signature": "BundleService.BundleService(BundleServiceRunner runner, MortarScope scope)", "testcase": false, "constructor": true}, {"identifier": "getBundleService", "parameters": "(Context context)", "modifiers": "public static", "return": "BundleService", "signature": "BundleService getBundleService(Context context)", "full_signature": "public static BundleService getBundleService(Context context)", "class_method_signature": "BundleService.getBundleService(Context context)", "testcase": false, "constructor": false}, {"identifier": "getBundleService", "parameters": "(MortarScope scope)", "modifiers": "public static", "return": "BundleService", "signature": "BundleService getBundleService(MortarScope scope)", "full_signature": "public static BundleService getBundleService(MortarScope scope)", "class_method_signature": "BundleService.getBundleService(MortarScope scope)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(Bundler bundler)", "modifiers": "public", "return": "void", "signature": "void register(Bundler bundler)", "full_signature": "public void register(Bundler bundler)", "class_method_signature": "BundleService.register(Bundler bundler)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "", "return": "void", "signature": "void init()", "full_signature": " void init()", "class_method_signature": "BundleService.init()", "testcase": false, "constructor": false}, {"identifier": "needsLoading", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean needsLoading()", "full_signature": " boolean needsLoading()", "class_method_signature": "BundleService.needsLoading()", "testcase": false, "constructor": false}, {"identifier": "loadOne", "parameters": "()", "modifiers": "", "return": "void", "signature": "void loadOne()", "full_signature": " void loadOne()", "class_method_signature": "BundleService.loadOne()", "testcase": false, "constructor": false}, {"identifier": "updateScopedBundleOnCreate", "parameters": "(Bundle rootBundle)", "modifiers": "", "return": "boolean", "signature": "boolean updateScopedBundleOnCreate(Bundle rootBundle)", "full_signature": " boolean updateScopedBundleOnCreate(Bundle rootBundle)", "class_method_signature": "BundleService.updateScopedBundleOnCreate(Bundle rootBundle)", "testcase": false, "constructor": false}, {"identifier": "findScopeBundle", "parameters": "(Bundle root)", "modifiers": "private", "return": "Bundle", "signature": "Bundle findScopeBundle(Bundle root)", "full_signature": "private Bundle findScopeBundle(Bundle root)", "class_method_signature": "BundleService.findScopeBundle(Bundle root)", "testcase": false, "constructor": false}, {"identifier": "saveToRootBundle", "parameters": "(Bundle rootBundle)", "modifiers": "", "return": "void", "signature": "void saveToRootBundle(Bundle rootBundle)", "full_signature": " void saveToRootBundle(Bundle rootBundle)", "class_method_signature": "BundleService.saveToRootBundle(Bundle rootBundle)", "testcase": false, "constructor": false}], "file": "mortar/src/main/java/mortar/bundler/BundleService.java"}, "focal_method": {"identifier": "getBundleService", "parameters": "(Context context)", "modifiers": "public static", "return": "BundleService", "body": "public static BundleService getBundleService(Context context) {\n    BundleServiceRunner runner = BundleServiceRunner.getBundleServiceRunner(context);\n    if (runner == null) {\n      throw new IllegalStateException(\n          \"You forgot to set up a \" + BundleServiceRunner.class.getName() + \" in your activity\");\n    }\n    return runner.requireBundleService(MortarScope.getScope(context));\n  }", "signature": "BundleService getBundleService(Context context)", "full_signature": "public static BundleService getBundleService(Context context)", "class_method_signature": "BundleService.getBundleService(Context context)", "testcase": false, "constructor": false, "invocations": ["getBundleServiceRunner", "getName", "requireBundleService", "getScope"]}, "repository": {"repo_id": 14247776, "url": "https://github.com/square/mortar", "language": "Java", "is_fork": false, "fork_count": 172, "stargazer_count": 2189, "size": 884, "license": "licensed"}}