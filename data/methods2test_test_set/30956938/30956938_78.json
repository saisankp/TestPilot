{"test_class": {"identifier": "EncodedBodyBuilderTest", "superclass": "", "interfaces": "implements LocationConstants", "fields": [], "file": "taverna-wsdl-generic/src/test/java/org/apache/taverna/wsdl/soap/EncodedBodyBuilderTest.java"}, "test_case": {"identifier": "testStringArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testStringArray() throws Exception {\n\t\tMap<String,Object> inputMap = new HashMap<String, Object>();\n\t\t\n\t\tBodyBuilder builder = createBuilder(wsdlResourcePath(\"TestServices-rpcencoded.wsdl\"), \"countStringArray\");\n\t\t\n\t\tassertTrue(\"Wrong type of builder created\",builder instanceof EncodedBodyBuilder);\n\t\tList<String> array = new ArrayList<String>();\n\t\tarray.add(\"one\");\n\t\tarray.add(\"two\");\n\t\tarray.add(\"three\");\n\t\tinputMap.put(\"array\", array);\n\t\tSOAPElement body = builder.build(inputMap);\n                \n                Iterator<SOAPElement> children = body.getChildElements();\n                assertTrue(\"missing body element\", children.hasNext());\n                SOAPElement child = children.next();\n                assertTrue(\"wrong body element (must be '{}array')\", \"array\".equals(child.getLocalName()) && child.getNamespaceURI() == null);\n                String type = child.getAttributeNS(XMLConstants.W3C_XML_SCHEMA_INSTANCE_NS_URI, \"type\");\n                assertNotNull(\"missing xsi:type\", type);\n                assertTrue(\"wrong xsi:type\", \"soapenc:Array\".equals(type));\n\n                Iterator<Element> elements = child.getChildElements();\n                for (int i = 0, n = array.size(); i < n; i++) {\n                    assertTrue(\"missing array element\", elements.hasNext());\n                    Element element = elements.next();\n                    assertTrue(\"wrong array element (must be '{}string')\", \"string\".equals(element.getLocalName()) && element.getNamespaceURI() == null);\n                    assertTrue(\"wrong array text content\", array.get(i).equals(element.getTextContent()));\n                }\n\t}", "signature": "void testStringArray()", "full_signature": "@Test public void testStringArray()", "class_method_signature": "EncodedBodyBuilderTest.testStringArray()", "testcase": true, "constructor": false, "invocations": ["createBuilder", "wsdlResourcePath", "assertTrue", "add", "add", "add", "put", "build", "getChildElements", "assertTrue", "hasNext", "next", "assertTrue", "equals", "getLocalName", "getNamespaceURI", "getAttributeNS", "assertNotNull", "assertTrue", "equals", "getChildElements", "size", "assertTrue", "hasNext", "next", "assertTrue", "equals", "getLocalName", "getNamespaceURI", "assertTrue", "equals", "get", "getTextContent"]}, "focal_class": {"identifier": "EncodedBodyBuilder", "superclass": "extends AbstractBodyBuilder", "interfaces": "", "fields": [], "methods": [{"identifier": "EncodedBodyBuilder", "parameters": "(String style, WSDLParser parser, String operationName, List<TypeDescriptor> inputDescriptors)", "modifiers": "public", "return": "", "signature": " EncodedBodyBuilder(String style, WSDLParser parser, String operationName, List<TypeDescriptor> inputDescriptors)", "full_signature": "public  EncodedBodyBuilder(String style, WSDLParser parser, String operationName, List<TypeDescriptor> inputDescriptors)", "class_method_signature": "EncodedBodyBuilder.EncodedBodyBuilder(String style, WSDLParser parser, String operationName, List<TypeDescriptor> inputDescriptors)", "testcase": false, "constructor": true}, {"identifier": "getUse", "parameters": "()", "modifiers": "@Override protected", "return": "Use", "signature": "Use getUse()", "full_signature": "@Override protected Use getUse()", "class_method_signature": "EncodedBodyBuilder.getUse()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(Map inputMap)", "modifiers": "@Override public", "return": "SOAPElement", "signature": "SOAPElement build(Map inputMap)", "full_signature": "@Override public SOAPElement build(Map inputMap)", "class_method_signature": "EncodedBodyBuilder.build(Map inputMap)", "testcase": false, "constructor": false}, {"identifier": "createSkeletonElementForSingleItem", "parameters": "(\n\t\t\tMap<String, String> namespaceMappings, TypeDescriptor descriptor,\n\t\t\tString inputName, String typeName)", "modifiers": "@Override protected", "return": "Element", "signature": "Element createSkeletonElementForSingleItem(\n\t\t\tMap<String, String> namespaceMappings, TypeDescriptor descriptor,\n\t\t\tString inputName, String typeName)", "full_signature": "@Override protected Element createSkeletonElementForSingleItem(\n\t\t\tMap<String, String> namespaceMappings, TypeDescriptor descriptor,\n\t\t\tString inputName, String typeName)", "class_method_signature": "EncodedBodyBuilder.createSkeletonElementForSingleItem(\n\t\t\tMap<String, String> namespaceMappings, TypeDescriptor descriptor,\n\t\t\tString inputName, String typeName)", "testcase": false, "constructor": false}, {"identifier": "createElementForArrayType", "parameters": "(\n\t\t\tMap<String, String> namespaceMappings, String inputName,\n\t\t\tObject dataValue, TypeDescriptor descriptor, String mimeType,\n\t\t\tString typeName)", "modifiers": "@Override protected", "return": "Element", "signature": "Element createElementForArrayType(\n\t\t\tMap<String, String> namespaceMappings, String inputName,\n\t\t\tObject dataValue, TypeDescriptor descriptor, String mimeType,\n\t\t\tString typeName)", "full_signature": "@Override protected Element createElementForArrayType(\n\t\t\tMap<String, String> namespaceMappings, String inputName,\n\t\t\tObject dataValue, TypeDescriptor descriptor, String mimeType,\n\t\t\tString typeName)", "class_method_signature": "EncodedBodyBuilder.createElementForArrayType(\n\t\t\tMap<String, String> namespaceMappings, String inputName,\n\t\t\tObject dataValue, TypeDescriptor descriptor, String mimeType,\n\t\t\tString typeName)", "testcase": false, "constructor": false}, {"identifier": "addElementToBody", "parameters": "(String operationNamespace, SOAPElement body, Element el)", "modifiers": "@Override protected", "return": "SOAPElement", "signature": "SOAPElement addElementToBody(String operationNamespace, SOAPElement body, Element el)", "full_signature": "@Override protected SOAPElement addElementToBody(String operationNamespace, SOAPElement body, Element el)", "class_method_signature": "EncodedBodyBuilder.addElementToBody(String operationNamespace, SOAPElement body, Element el)", "testcase": false, "constructor": false}], "file": "taverna-wsdl-generic/src/main/java/org/apache/taverna/wsdl/soap/EncodedBodyBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "(Map inputMap)", "modifiers": "@Override public", "return": "SOAPElement", "body": "@Override\n\tpublic SOAPElement build(Map inputMap) throws WSDLException,\n\t\t\tParserConfigurationException, SOAPException, IOException,\n\t\t\tSAXException, UnknownOperationException {\n\n\t\tSOAPElement result = super.build(inputMap);\n                \n\t\tfor (Iterator iterator = namespaceMappings.keySet().iterator(); iterator.hasNext();) {\n\t\t\tString namespaceURI = (String) iterator.next();\n\t\t\tString ns = namespaceMappings.get(namespaceURI);\n\t\t\tresult.addNamespaceDeclaration(ns, namespaceURI);\n\t\t}\n                \n                result.setAttributeNS(SOAPConstants.URI_NS_SOAP_1_1_ENVELOPE, \"soapenv:encodingStyle\", SOAPConstants.URI_NS_SOAP_ENCODING);\n\n\t\treturn result;\n\t}", "signature": "SOAPElement build(Map inputMap)", "full_signature": "@Override public SOAPElement build(Map inputMap)", "class_method_signature": "EncodedBodyBuilder.build(Map inputMap)", "testcase": false, "constructor": false, "invocations": ["build", "iterator", "keySet", "hasNext", "next", "get", "addNamespaceDeclaration", "setAttributeNS"]}, "repository": {"repo_id": 30956938, "url": "https://github.com/apache/incubator-taverna-common-activities", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 5696, "license": "licensed"}}