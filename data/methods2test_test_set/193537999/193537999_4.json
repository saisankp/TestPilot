{"test_class": {"identifier": "ReferenceUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "vortex-api/src/test/java/mil/army/usace/hec/vortex/geo/ReferenceUtilsTest.java"}, "test_case": {"identifier": "UlyDirectionReturnsPositiveForUtmSouth", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void UlyDirectionReturnsPositiveForUtmSouth(){\n        String wkt = WktFactory.create(\"UTM36S\");\n        double llx = 302000.0;\n        double lly = 7080000.0;\n        int direction = ReferenceUtils.getUlyDirection(wkt, llx, lly);\n        assertEquals(1, direction);\n    }", "signature": "void UlyDirectionReturnsPositiveForUtmSouth()", "full_signature": "@Test void UlyDirectionReturnsPositiveForUtmSouth()", "class_method_signature": "ReferenceUtilsTest.UlyDirectionReturnsPositiveForUtmSouth()", "testcase": true, "constructor": false, "invocations": ["create", "getUlyDirection", "assertEquals"]}, "focal_class": {"identifier": "ReferenceUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ReferenceUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " ReferenceUtils()", "full_signature": "private  ReferenceUtils()", "class_method_signature": "ReferenceUtils.ReferenceUtils()", "testcase": false, "constructor": true}, {"identifier": "enhanceWkt", "parameters": "(String wkt)", "modifiers": "public static", "return": "String", "signature": "String enhanceWkt(String wkt)", "full_signature": "public static String enhanceWkt(String wkt)", "class_method_signature": "ReferenceUtils.enhanceWkt(String wkt)", "testcase": false, "constructor": false}, {"identifier": "getMapUnits", "parameters": "(String wkt)", "modifiers": "public static", "return": "String", "signature": "String getMapUnits(String wkt)", "full_signature": "public static String getMapUnits(String wkt)", "class_method_signature": "ReferenceUtils.getMapUnits(String wkt)", "testcase": false, "constructor": false}, {"identifier": "getUlyDirection", "parameters": "(String wkt, double llx, double lly)", "modifiers": "public static", "return": "int", "signature": "int getUlyDirection(String wkt, double llx, double lly)", "full_signature": "public static int getUlyDirection(String wkt, double llx, double lly)", "class_method_signature": "ReferenceUtils.getUlyDirection(String wkt, double llx, double lly)", "testcase": false, "constructor": false}, {"identifier": "compareSpatiallyEquivalent", "parameters": "(VortexGrid grid1, VortexGrid grid2)", "modifiers": "public static", "return": "boolean", "signature": "boolean compareSpatiallyEquivalent(VortexGrid grid1, VortexGrid grid2)", "full_signature": "public static boolean compareSpatiallyEquivalent(VortexGrid grid1, VortexGrid grid2)", "class_method_signature": "ReferenceUtils.compareSpatiallyEquivalent(VortexGrid grid1, VortexGrid grid2)", "testcase": false, "constructor": false}, {"identifier": "isShg", "parameters": "(GridInfo info)", "modifiers": "public static", "return": "boolean", "signature": "boolean isShg(GridInfo info)", "full_signature": "public static boolean isShg(GridInfo info)", "class_method_signature": "ReferenceUtils.isShg(GridInfo info)", "testcase": false, "constructor": false}], "file": "vortex-api/src/main/java/mil/army/usace/hec/vortex/geo/ReferenceUtils.java"}, "focal_method": {"identifier": "getUlyDirection", "parameters": "(String wkt, double llx, double lly)", "modifiers": "public static", "return": "int", "body": "public static int getUlyDirection(String wkt, double llx, double lly){\n        //Return 1 until there is a use case the necessitates returning -1. This function is only called by DssDataReader.\n//        SpatialReference source = new SpatialReference(wkt);\n//        source.MorphFromESRI();\n//        if (source.IsProjected() == 1){\n//            double latitudeOfOrigin = source.GetProjParm(\"latitude_of_origin\");\n//            SpatialReference dest = new SpatialReference();\n//            dest.SetWellKnownGeogCS( \"WGS84\" );\n//            CoordinateTransformation transform = CoordinateTransformation.CreateCoordinateTransformation(source, dest);\n//            double latitudeOfLly = transform.TransformPoint(llx, lly)[1];\n//            double falseNorthing = source.GetProjParm(\"false_northing\");\n//            double llyLessFalseNorthing = lly - falseNorthing;\n//            if (latitudeOfLly < latitudeOfOrigin && Math.signum(llyLessFalseNorthing) > 0){\n//                return -1;\n//            }\n//            return 1;\n//        }\n        return 1;\n    }", "signature": "int getUlyDirection(String wkt, double llx, double lly)", "full_signature": "public static int getUlyDirection(String wkt, double llx, double lly)", "class_method_signature": "ReferenceUtils.getUlyDirection(String wkt, double llx, double lly)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 193537999, "url": "https://github.com/HydrologicEngineeringCenter/Vortex", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 448543, "license": "licensed"}}