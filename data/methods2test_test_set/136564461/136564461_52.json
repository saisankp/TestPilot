{"test_class": {"identifier": "Ed448SchemeProviderTest", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/crypto/eddsa/ed448/Ed448SchemeProviderTest.java"}, "test_case": {"identifier": "success_dom_1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void success_dom_1() {\n        SchemeProvider schemeProvider = new Ed448SchemeProvider(HashAlgorithm.SHAKE_256);\n        byte[] dom = schemeProvider.dom(new byte[0]);\n\n        assertThat(HexEncoder.getString(dom), is(\"53696745643434380000\"));\n    }", "signature": "void success_dom_1()", "full_signature": "@Test public void success_dom_1()", "class_method_signature": "Ed448SchemeProviderTest.success_dom_1()", "testcase": true, "constructor": false, "invocations": ["dom", "assertThat", "getString", "is"]}, "focal_class": {"identifier": "Ed448SchemeProvider", "superclass": "extends SchemeProvider", "interfaces": "", "fields": [{"original_string": "private final HashAlgorithm hashAlgorithm;", "modifier": "private final", "type": "HashAlgorithm", "declarator": "hashAlgorithm", "var_name": "hashAlgorithm"}], "methods": [{"identifier": "Ed448SchemeProvider", "parameters": "(HashAlgorithm hashAlgorithm)", "modifiers": "public", "return": "", "signature": " Ed448SchemeProvider(HashAlgorithm hashAlgorithm)", "full_signature": "public  Ed448SchemeProvider(HashAlgorithm hashAlgorithm)", "class_method_signature": "Ed448SchemeProvider.Ed448SchemeProvider(HashAlgorithm hashAlgorithm)", "testcase": false, "constructor": true}, {"identifier": "getSigner", "parameters": "()", "modifiers": "@Override public", "return": "EdDsaSigner", "signature": "EdDsaSigner getSigner()", "full_signature": "@Override public EdDsaSigner getSigner()", "class_method_signature": "Ed448SchemeProvider.getSigner()", "testcase": false, "constructor": false}, {"identifier": "getPublicKeyDelegate", "parameters": "()", "modifiers": "@Override public", "return": "PublicKeyDelegate", "signature": "PublicKeyDelegate getPublicKeyDelegate()", "full_signature": "@Override public PublicKeyDelegate getPublicKeyDelegate()", "class_method_signature": "Ed448SchemeProvider.getPublicKeyDelegate()", "testcase": false, "constructor": false}, {"identifier": "generatePrivateKey", "parameters": "()", "modifiers": "@Override public", "return": "PrivateKey", "signature": "PrivateKey generatePrivateKey()", "full_signature": "@Override public PrivateKey generatePrivateKey()", "class_method_signature": "Ed448SchemeProvider.generatePrivateKey()", "testcase": false, "constructor": false}, {"identifier": "preHash", "parameters": "(byte[] input)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] preHash(byte[] input)", "full_signature": "@Override public byte[] preHash(byte[] input)", "class_method_signature": "Ed448SchemeProvider.preHash(byte[] input)", "testcase": false, "constructor": false}, {"identifier": "dom", "parameters": "(byte[] context)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] dom(byte[] context)", "full_signature": "@Override public byte[] dom(byte[] context)", "class_method_signature": "Ed448SchemeProvider.dom(byte[] context)", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/crypto/eddsa/ed448/Ed448SchemeProvider.java"}, "focal_method": {"identifier": "dom", "parameters": "(byte[] context)", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n    public byte[] dom(byte[] context) {\n        String domPrefix = \"SigEd448\";\n        return ByteUtils.join(\n                domPrefix.getBytes(),\n                // 0 is a flag for Ed448\n                new byte[]{(byte) 0},\n                new byte[]{(byte) context.length},\n                context);\n    }", "signature": "byte[] dom(byte[] context)", "full_signature": "@Override public byte[] dom(byte[] context)", "class_method_signature": "Ed448SchemeProvider.dom(byte[] context)", "testcase": false, "constructor": false, "invocations": ["join", "getBytes"]}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}