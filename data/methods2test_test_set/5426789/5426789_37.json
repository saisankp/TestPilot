{"test_class": {"identifier": "SearchServiceImplTest", "superclass": "extends CrescentTestCaseUtil", "interfaces": "", "fields": [], "file": "crescent_core_web/src/test/java/com/tistory/devyongsik/crescent/search/service/SearchServiceImplTest.java"}, "test_case": {"identifier": "search", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void search() throws IOException {\n\t\tSearchRequest searchRequest = new SearchRequest();\n\t\tsearchRequest.setCollectionName(\"sample\");\n\t\tsearchRequest.setKeyword(\"1\");\n\t\t\n\t\tSearchResult searchResult = searchService.search(searchRequest);\n\t\t\n\t\tAssert.assertTrue(searchResult.getTotalHitsCount() > 0);\t\n\t}", "signature": "void search()", "full_signature": "@Test public void search()", "class_method_signature": "SearchServiceImplTest.search()", "testcase": true, "constructor": false, "invocations": ["setCollectionName", "setKeyword", "search", "assertTrue", "getTotalHitsCount"]}, "focal_class": {"identifier": "SearchServiceImpl", "superclass": "", "interfaces": "implements SearchService", "fields": [{"original_string": "private Logger logger = LoggerFactory.getLogger(SearchServiceImpl.class);", "modifier": "private", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(SearchServiceImpl.class)", "var_name": "logger"}, {"original_string": "@Autowired\n\t@Qualifier(\"crescentDefaultDocSearcher\")\n\tprivate CrescentDocSearcher crescentDocSearcher;", "modifier": "@Autowired\n\t@Qualifier(\"crescentDefaultDocSearcher\")\n\tprivate", "type": "CrescentDocSearcher", "declarator": "crescentDocSearcher", "var_name": "crescentDocSearcher"}], "methods": [{"identifier": "search", "parameters": "(SearchRequest searchRequest)", "modifiers": "@Override public", "return": "SearchResult", "signature": "SearchResult search(SearchRequest searchRequest)", "full_signature": "@Override public SearchResult search(SearchRequest searchRequest)", "class_method_signature": "SearchServiceImpl.search(SearchRequest searchRequest)", "testcase": false, "constructor": false}], "file": "crescent_core_web/src/main/java/com/tistory/devyongsik/crescent/search/service/SearchServiceImpl.java"}, "focal_method": {"identifier": "search", "parameters": "(SearchRequest searchRequest)", "modifiers": "@Override public", "return": "SearchResult", "body": "@Override\n\tpublic SearchResult search(SearchRequest searchRequest) throws IOException {\n\t\t\n\t\tQuery query = null;\n\t\tCrescentSearchRequestWrapper csrw \n\t\t\t\t= new CrescentSearchRequestWrapper(searchRequest);\n\t\n\t\ttry {\n\t\t\t\n\t\t\tSearchRequestValidator validator = new SearchRequestValidator();\n\t\t\tvalidator.isValid(searchRequest);\n\t\t\t\n\t\t\t\n\t\t\tquery = csrw.getQuery();\n\t\t\n\t\t} catch (CrescentInvalidRequestException e) {\n\t\t\tSearchResult searchResult = new SearchResult();\n\t\t\t\n\t\t\tMap<String, Object> result = new HashMap<String, Object>();\n\t\t\tList<Map<String, String>> resultList = new ArrayList<Map<String, String>>();\n\t\t\t\n\t\t\tresult.put(\"total_count\", 0);\n\t\t\tresult.put(\"result_list\", resultList);\n\t\t\tresult.put(\"error_code\", -1);\n\t\t\tresult.put(\"error_msg\", e.getMessage());\n\t\t\t\n\t\t\tlogger.error(\"\uac80\uc0c9 \uc911 \uc5d0\ub7ec \ubc1c\uc0dd\ud568.\" , e);\n\t\t\t\n\t\t\tsearchResult.setErrorCode(-1);\n\t\t\tsearchResult.setErrorMsg(e.getMessage());\n\t\t\tsearchResult.setSearchResult(result);\n\t\t\tsearchResult.setResultList(resultList);\n\t\t\t\n\t\t\treturn searchResult;\n\t\t}\n\t\t\n\t\tlogger.debug(\"query : {}\" , query);\n\t\t\n\t\tSearchResult searchResult = crescentDocSearcher.search(csrw);\n\t\t\n\t\treturn searchResult;\n\t}", "signature": "SearchResult search(SearchRequest searchRequest)", "full_signature": "@Override public SearchResult search(SearchRequest searchRequest)", "class_method_signature": "SearchServiceImpl.search(SearchRequest searchRequest)", "testcase": false, "constructor": false, "invocations": ["isValid", "getQuery", "put", "put", "put", "put", "getMessage", "error", "setErrorCode", "setErrorMsg", "getMessage", "setSearchResult", "setResultList", "debug", "search"]}, "repository": {"repo_id": 5426789, "url": "https://github.com/need4spd/crescent", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 15, "size": 50982, "license": "licensed"}}