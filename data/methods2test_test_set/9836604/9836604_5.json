{"test_class": {"identifier": "EncryCredentialResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EncryCredentialResolver resolver;", "modifier": "private", "type": "EncryCredentialResolver", "declarator": "resolver", "var_name": "resolver"}], "file": "ki4so-web/src/test/java/com/github/ebnew/ki4so/web/action/EncryCredentialResolverTest.java"}, "test_case": {"identifier": "testResolveCredential", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testResolveCredential(){\n\t\tString cookie = \"VS032SDAFDAFD\";\n\t\n\t\t//\u6d4b\u8bd5\u4f20\u5165null\u7684\u60c5\u51b5\u3002\n\t\tAssert.assertNull(resolver.resolveCredential(null));\n\t\t\n\t\t//\u6d4b\u8bd5\u4e0d\u5b58\u5728cookie\u7684\u60c5\u51b5\u3002\n\t\tMockHttpServletRequest request = new MockHttpServletRequest();\n\t\tAssert.assertNull(resolver.resolveCredential(request));\n\t\n\t\t//\u6d4b\u8bd5\u5b58\u5728cookie\uff0c\u4f46\u662fcookie\u4e2d\u503c\u662f\u7684\u5143\u7d20\u4e3anull\u7684\u60c5\u51b5\u3002\n\t\trequest = new MockHttpServletRequest();\n\t\trequest.setCookies(null, null, null, null);\n\t\tAssert.assertNull(resolver.resolveCredential(request));\n\t\t\n\t\t//\u6d4b\u8bd5\u5b58\u5728cookie\u6570\u7ec4\uff0c\u4f46\u662f\u67092\u4e2a\u4e0d\u4e3anull\u7684\u60c5\u51b5\u3002\n\t\trequest = new MockHttpServletRequest();\n\t\trequest.setCookies(new Cookie(\"C1\", null), null, null, new Cookie(\"C2\", \"dafdafdada\"));\n\t\tAssert.assertNull(resolver.resolveCredential(request));\n\t\t\n\t\t\n\t\t//\u6d4b\u8bd5\u5b58\u5728cookie\u6570\u7ec4\uff0c\u4f46\u662f\u67091\u4e2a\u4e0d\u4e3anull\u7684\u60c5\u51b5\uff0c\u4e14cookie\u540d\u79f0\u4e3aKI4SO\u670d\u52a1\u7aef\u5199\u5165\u7684cookie\u503c,\u4f46\u662fcookie\u7684\u503c\u4e3aNull.\n\t\trequest = new MockHttpServletRequest();\n\t\trequest.setCookies(new Cookie(\"C1\", null), null, null, new Cookie(WebConstants.KI4SO_SERVER_ENCRYPTED_CREDENTIAL_COOKIE_KEY, null));\n\t\tAssert.assertNull(resolver.resolveCredential(request));\n\t\t\n\t\t\n\t\t//\u6d4b\u8bd5\u5b58\u5728cookie\u6570\u7ec4\uff0c\u4f46\u662f\u67091\u4e2a\u4e0d\u4e3anull\u7684\u60c5\u51b5\uff0c\u4e14cookie\u540d\u79f0\u4e3aKI4SO\u670d\u52a1\u7aef\u5199\u5165\u7684cookie\u503c,\u4f46\u662fcookie\u7684\u503c\u4e0d\u662fNull.\n\t\trequest = new MockHttpServletRequest();\n\t\trequest.setCookies(new Cookie(\"C1\", null), null, null, new Cookie(WebConstants.KI4SO_SERVER_ENCRYPTED_CREDENTIAL_COOKIE_KEY, cookie));\n\t\tEncryCredential credential = (EncryCredential)resolver.resolveCredential(request);\n\t\tAssert.assertNotNull(credential);\n\t\tAssert.assertEquals(cookie, credential.getCredential());\n\t}", "signature": "void testResolveCredential()", "full_signature": "@Test public void testResolveCredential()", "class_method_signature": "EncryCredentialResolverTest.testResolveCredential()", "testcase": true, "constructor": false, "invocations": ["assertNull", "resolveCredential", "assertNull", "resolveCredential", "setCookies", "assertNull", "resolveCredential", "setCookies", "assertNull", "resolveCredential", "setCookies", "assertNull", "resolveCredential", "setCookies", "resolveCredential", "assertNotNull", "assertEquals", "getCredential"]}, "focal_class": {"identifier": "EncryCredentialResolver", "superclass": "", "interfaces": "implements CredentialResolver", "fields": [], "methods": [{"identifier": "resolveCredential", "parameters": "(HttpServletRequest request)", "modifiers": "@Override public", "return": "Credential", "signature": "Credential resolveCredential(HttpServletRequest request)", "full_signature": "@Override public Credential resolveCredential(HttpServletRequest request)", "class_method_signature": "EncryCredentialResolver.resolveCredential(HttpServletRequest request)", "testcase": false, "constructor": false}], "file": "ki4so-web/src/main/java/com/github/ebnew/ki4so/web/action/EncryCredentialResolver.java"}, "focal_method": {"identifier": "resolveCredential", "parameters": "(HttpServletRequest request)", "modifiers": "@Override public", "return": "Credential", "body": "@Override\n\tpublic Credential resolveCredential(HttpServletRequest request) {\n\t\tif(request!=null){\n\t\t\t//\u67e5\u627e\u8bf7\u6c42\u4e2d\u7684cookie\u3002\n\t\t\tCookie[] cookies = request.getCookies();\n\t\t\tif(cookies!=null){\n\t\t\t\tString value = null;\n\t\t\t\tfor(Cookie cookie:cookies){\n\t\t\t\t\t//\u82e5\u67e5\u627e\u5230KI4SO\u5199\u5165\u7684cookie\u503c\u3002\n\t\t\t\t\tif(cookie!=null && cookie.getName().equalsIgnoreCase(WebConstants.KI4SO_SERVER_ENCRYPTED_CREDENTIAL_COOKIE_KEY)){\n\t\t\t\t\t\tvalue = cookie.getValue();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//\u5982\u679ccookie\u4e2d\u6ca1\u6709\u51ed\u636e\u503c\uff0c\u5219\u4ece\u8bf7\u6c42\u53c2\u6570\u4e2d\u83b7\u53d6\u51ed\u636e\u503c\u3002\n\t\t\t\tif(StringUtils.isEmpty(value)){\n\t\t\t\t\tvalue = request.getParameter(WebConstants.KI4SO_SERVER_ENCRYPTED_CREDENTIAL_COOKIE_KEY);\n\t\t\t\t}\n\t\t\t\t//\u6700\u7ec8\u5982\u679c\u52a0\u5bc6\u51ed\u636e\u6709\u503c\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u51ed\u636e\u5bf9\u8c61\u3002\n\t\t\t\tif(!StringUtils.isEmpty(value)){\n\t\t\t\t\t//\u53bb\u9664\u7a7a\u4e32\u540e\u8fd4\u56de\u3002\n\t\t\t\t\treturn new EncryCredential(value.trim());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "signature": "Credential resolveCredential(HttpServletRequest request)", "full_signature": "@Override public Credential resolveCredential(HttpServletRequest request)", "class_method_signature": "EncryCredentialResolver.resolveCredential(HttpServletRequest request)", "testcase": false, "constructor": false, "invocations": ["getCookies", "equalsIgnoreCase", "getName", "getValue", "isEmpty", "getParameter", "isEmpty", "trim"]}, "repository": {"repo_id": 9836604, "url": "https://github.com/ebnew/ki4so", "language": "Java", "is_fork": false, "fork_count": 84, "stargazer_count": 100, "size": 4421, "license": "licensed"}}