{"test_class": {"identifier": "MiddlewareLoggerImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "log-common-tools/src/test/java/com/alipay/sofa/rpc/log/MiddlewareLoggerImplTest.java"}, "test_case": {"identifier": "getName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getName() throws Exception {\n        Logger loggerFromClass = new MiddlewareLoggerImpl(MiddlewareLoggerImplTest.class);\n        Logger logger = new MiddlewareLoggerImpl(MiddlewareLoggerImplTest.class.getCanonicalName());\n        Assert.assertEquals(loggerFromClass.getName(), logger.getName());\n        String appName = \"app\";\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"debug\");\n            logger.debug(\"debug {}\", \"1\");\n            logger.debug(\"debug {} {} {}\", \"1\", \"2\", \"3\");\n            logger.debug(\"debug\", new RuntimeException(\"runtime\"));\n        }\n        if (logger.isDebugEnabled(appName)) {\n            logger.debugWithApp(appName, \"debug\");\n            logger.debugWithApp(appName, \"debug {}\", \"1\");\n            logger.debugWithApp(appName, \"debug {} {} {}\", \"1\", \"2\", \"3\");\n            logger.debugWithApp(appName, \"debug\", new RuntimeException(\"runtime\"));\n        }\n\n        if (logger.isInfoEnabled()) {\n            logger.info(\"info\");\n            logger.info(\"info {}\", \"1\");\n            logger.info(\"info {} {} {}\", \"1\", \"2\", \"3\");\n            logger.info(\"info\", new RuntimeException(\"runtime\"));\n        }\n        if (logger.isInfoEnabled(appName)) {\n            logger.infoWithApp(appName, \"info\");\n            logger.infoWithApp(appName, \"info {}\", \"1\");\n            logger.infoWithApp(appName, \"info {} {} {}\", \"1\", \"2\", \"3\");\n            logger.infoWithApp(appName, \"info\", new RuntimeException(\"runtime\"));\n        }\n\n        if (logger.isWarnEnabled()) {\n            logger.warn(\"warn\");\n            logger.warn(\"warn {}\", \"1\");\n            logger.warn(\"warn {} {} {}\", \"1\", \"2\", \"3\");\n            logger.warn(\"warn\", new RuntimeException(\"runtime\"));\n        }\n        if (logger.isWarnEnabled(appName)) {\n            logger.warn(appName, \"warn\");\n            logger.warnWithApp(appName, \"warn {}\", \"1\");\n            logger.warnWithApp(appName, \"warn {} {} {}\", \"1\", \"2\", \"3\");\n            logger.warnWithApp(appName, \"warn\", new RuntimeException(\"runtime\"));\n        }\n\n        if (logger.isErrorEnabled()) {\n            logger.error(\"error\");\n            logger.error(\"error {}\", \"1\");\n            logger.error(\"error {} {} {}\", \"1\", \"2\", \"3\");\n            logger.error(\"error\", new RuntimeException(\"runtime\"));\n        }\n        if (logger.isErrorEnabled(appName)) {\n            logger.errorWithApp(appName, \"error\");\n            logger.errorWithApp(appName, \"error {}\", \"1\");\n            logger.errorWithApp(appName, \"error {} {} {}\", \"1\", \"2\", \"3\");\n            logger.errorWithApp(appName, \"error\", new RuntimeException(\"runtime\"));\n        }\n    }", "signature": "void getName()", "full_signature": "@Test public void getName()", "class_method_signature": "MiddlewareLoggerImplTest.getName()", "testcase": true, "constructor": false, "invocations": ["getCanonicalName", "assertEquals", "getName", "getName", "isDebugEnabled", "debug", "debug", "debug", "debug", "isDebugEnabled", "debugWithApp", "debugWithApp", "debugWithApp", "debugWithApp", "isInfoEnabled", "info", "info", "info", "info", "isInfoEnabled", "infoWithApp", "infoWithApp", "infoWithApp", "infoWithApp", "isWarnEnabled", "warn", "warn", "warn", "warn", "isWarnEnabled", "warn", "warnWithApp", "warnWithApp", "warnWithApp", "isErrorEnabled", "error", "error", "error", "error", "isErrorEnabled", "errorWithApp", "errorWithApp", "errorWithApp", "errorWithApp"]}, "focal_class": {"identifier": "MiddlewareLoggerImpl", "superclass": "", "interfaces": "implements Logger", "fields": [{"original_string": "private final String           name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final org.slf4j.Logger DEFAULT_LOGGER;", "modifier": "private final", "type": "org.slf4j.Logger", "declarator": "DEFAULT_LOGGER", "var_name": "DEFAULT_LOGGER"}], "methods": [{"identifier": "MiddlewareLoggerImpl", "parameters": "(String name)", "modifiers": "public", "return": "", "signature": " MiddlewareLoggerImpl(String name)", "full_signature": "public  MiddlewareLoggerImpl(String name)", "class_method_signature": "MiddlewareLoggerImpl.MiddlewareLoggerImpl(String name)", "testcase": false, "constructor": true}, {"identifier": "MiddlewareLoggerImpl", "parameters": "(Class clazz)", "modifiers": "public", "return": "", "signature": " MiddlewareLoggerImpl(Class clazz)", "full_signature": "public  MiddlewareLoggerImpl(Class clazz)", "class_method_signature": "MiddlewareLoggerImpl.MiddlewareLoggerImpl(Class clazz)", "testcase": false, "constructor": true}, {"identifier": "getLogger", "parameters": "()", "modifiers": "private", "return": "org.slf4j.Logger", "signature": "org.slf4j.Logger getLogger()", "full_signature": "private org.slf4j.Logger getLogger()", "class_method_signature": "MiddlewareLoggerImpl.getLogger()", "testcase": false, "constructor": false}, {"identifier": "getLogger", "parameters": "(String appName)", "modifiers": "private", "return": "org.slf4j.Logger", "signature": "org.slf4j.Logger getLogger(String appName)", "full_signature": "private org.slf4j.Logger getLogger(String appName)", "class_method_signature": "MiddlewareLoggerImpl.getLogger(String appName)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "MiddlewareLoggerImpl.getName()", "testcase": false, "constructor": false}, {"identifier": "isDebugEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDebugEnabled()", "full_signature": "@Override public boolean isDebugEnabled()", "class_method_signature": "MiddlewareLoggerImpl.isDebugEnabled()", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "(String message)", "modifiers": "@Override public", "return": "void", "signature": "void debug(String message)", "full_signature": "@Override public void debug(String message)", "class_method_signature": "MiddlewareLoggerImpl.debug(String message)", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "(String format, Object... args)", "modifiers": "@Override public", "return": "void", "signature": "void debug(String format, Object... args)", "full_signature": "@Override public void debug(String format, Object... args)", "class_method_signature": "MiddlewareLoggerImpl.debug(String format, Object... args)", "testcase": false, "constructor": false}, {"identifier": "debug", "parameters": "(String message, Throwable t)", "modifiers": "@Override public", "return": "void", "signature": "void debug(String message, Throwable t)", "full_signature": "@Override public void debug(String message, Throwable t)", "class_method_signature": "MiddlewareLoggerImpl.debug(String message, Throwable t)", "testcase": false, "constructor": false}, {"identifier": "isDebugEnabled", "parameters": "(String appName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDebugEnabled(String appName)", "full_signature": "@Override public boolean isDebugEnabled(String appName)", "class_method_signature": "MiddlewareLoggerImpl.isDebugEnabled(String appName)", "testcase": false, "constructor": false}, {"identifier": "debugWithApp", "parameters": "(String appName, String message)", "modifiers": "@Override public", "return": "void", "signature": "void debugWithApp(String appName, String message)", "full_signature": "@Override public void debugWithApp(String appName, String message)", "class_method_signature": "MiddlewareLoggerImpl.debugWithApp(String appName, String message)", "testcase": false, "constructor": false}, {"identifier": "debugWithApp", "parameters": "(String appName, String format, Object... args)", "modifiers": "@Override public", "return": "void", "signature": "void debugWithApp(String appName, String format, Object... args)", "full_signature": "@Override public void debugWithApp(String appName, String format, Object... args)", "class_method_signature": "MiddlewareLoggerImpl.debugWithApp(String appName, String format, Object... args)", "testcase": false, "constructor": false}, {"identifier": "debugWithApp", "parameters": "(String appName, String message, Throwable t)", "modifiers": "@Override public", "return": "void", "signature": "void debugWithApp(String appName, String message, Throwable t)", "full_signature": "@Override public void debugWithApp(String appName, String message, Throwable t)", "class_method_signature": "MiddlewareLoggerImpl.debugWithApp(String appName, String message, Throwable t)", "testcase": false, "constructor": false}, {"identifier": "isInfoEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isInfoEnabled()", "full_signature": "@Override public boolean isInfoEnabled()", "class_method_signature": "MiddlewareLoggerImpl.isInfoEnabled()", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "(String message)", "modifiers": "@Override public", "return": "void", "signature": "void info(String message)", "full_signature": "@Override public void info(String message)", "class_method_signature": "MiddlewareLoggerImpl.info(String message)", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "(String format, Object... args)", "modifiers": "@Override public", "return": "void", "signature": "void info(String format, Object... args)", "full_signature": "@Override public void info(String format, Object... args)", "class_method_signature": "MiddlewareLoggerImpl.info(String format, Object... args)", "testcase": false, "constructor": false}, {"identifier": "info", "parameters": "(String message, Throwable t)", "modifiers": "@Override public", "return": "void", "signature": "void info(String message, Throwable t)", "full_signature": "@Override public void info(String message, Throwable t)", "class_method_signature": "MiddlewareLoggerImpl.info(String message, Throwable t)", "testcase": false, "constructor": false}, {"identifier": "isInfoEnabled", "parameters": "(String appName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isInfoEnabled(String appName)", "full_signature": "@Override public boolean isInfoEnabled(String appName)", "class_method_signature": "MiddlewareLoggerImpl.isInfoEnabled(String appName)", "testcase": false, "constructor": false}, {"identifier": "infoWithApp", "parameters": "(String appName, String message)", "modifiers": "@Override public", "return": "void", "signature": "void infoWithApp(String appName, String message)", "full_signature": "@Override public void infoWithApp(String appName, String message)", "class_method_signature": "MiddlewareLoggerImpl.infoWithApp(String appName, String message)", "testcase": false, "constructor": false}, {"identifier": "infoWithApp", "parameters": "(String appName, String format, Object... args)", "modifiers": "@Override public", "return": "void", "signature": "void infoWithApp(String appName, String format, Object... args)", "full_signature": "@Override public void infoWithApp(String appName, String format, Object... args)", "class_method_signature": "MiddlewareLoggerImpl.infoWithApp(String appName, String format, Object... args)", "testcase": false, "constructor": false}, {"identifier": "infoWithApp", "parameters": "(String appName, String message, Throwable t)", "modifiers": "@Override public", "return": "void", "signature": "void infoWithApp(String appName, String message, Throwable t)", "full_signature": "@Override public void infoWithApp(String appName, String message, Throwable t)", "class_method_signature": "MiddlewareLoggerImpl.infoWithApp(String appName, String message, Throwable t)", "testcase": false, "constructor": false}, {"identifier": "isWarnEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isWarnEnabled()", "full_signature": "@Override public boolean isWarnEnabled()", "class_method_signature": "MiddlewareLoggerImpl.isWarnEnabled()", "testcase": false, "constructor": false}, {"identifier": "warn", "parameters": "(String message)", "modifiers": "@Override public", "return": "void", "signature": "void warn(String message)", "full_signature": "@Override public void warn(String message)", "class_method_signature": "MiddlewareLoggerImpl.warn(String message)", "testcase": false, "constructor": false}, {"identifier": "warn", "parameters": "(String format, Object... args)", "modifiers": "@Override public", "return": "void", "signature": "void warn(String format, Object... args)", "full_signature": "@Override public void warn(String format, Object... args)", "class_method_signature": "MiddlewareLoggerImpl.warn(String format, Object... args)", "testcase": false, "constructor": false}, {"identifier": "warn", "parameters": "(String message, Throwable t)", "modifiers": "@Override public", "return": "void", "signature": "void warn(String message, Throwable t)", "full_signature": "@Override public void warn(String message, Throwable t)", "class_method_signature": "MiddlewareLoggerImpl.warn(String message, Throwable t)", "testcase": false, "constructor": false}, {"identifier": "isWarnEnabled", "parameters": "(String appName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isWarnEnabled(String appName)", "full_signature": "@Override public boolean isWarnEnabled(String appName)", "class_method_signature": "MiddlewareLoggerImpl.isWarnEnabled(String appName)", "testcase": false, "constructor": false}, {"identifier": "warnWithApp", "parameters": "(String appName, String message)", "modifiers": "@Override public", "return": "void", "signature": "void warnWithApp(String appName, String message)", "full_signature": "@Override public void warnWithApp(String appName, String message)", "class_method_signature": "MiddlewareLoggerImpl.warnWithApp(String appName, String message)", "testcase": false, "constructor": false}, {"identifier": "warnWithApp", "parameters": "(String appName, String format, Object... args)", "modifiers": "@Override public", "return": "void", "signature": "void warnWithApp(String appName, String format, Object... args)", "full_signature": "@Override public void warnWithApp(String appName, String format, Object... args)", "class_method_signature": "MiddlewareLoggerImpl.warnWithApp(String appName, String format, Object... args)", "testcase": false, "constructor": false}, {"identifier": "warnWithApp", "parameters": "(String appName, String message, Throwable t)", "modifiers": "@Override public", "return": "void", "signature": "void warnWithApp(String appName, String message, Throwable t)", "full_signature": "@Override public void warnWithApp(String appName, String message, Throwable t)", "class_method_signature": "MiddlewareLoggerImpl.warnWithApp(String appName, String message, Throwable t)", "testcase": false, "constructor": false}, {"identifier": "isErrorEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isErrorEnabled()", "full_signature": "@Override public boolean isErrorEnabled()", "class_method_signature": "MiddlewareLoggerImpl.isErrorEnabled()", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(String message)", "modifiers": "@Override public", "return": "void", "signature": "void error(String message)", "full_signature": "@Override public void error(String message)", "class_method_signature": "MiddlewareLoggerImpl.error(String message)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(String format, Object... args)", "modifiers": "@Override public", "return": "void", "signature": "void error(String format, Object... args)", "full_signature": "@Override public void error(String format, Object... args)", "class_method_signature": "MiddlewareLoggerImpl.error(String format, Object... args)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(String message, Throwable t)", "modifiers": "@Override public", "return": "void", "signature": "void error(String message, Throwable t)", "full_signature": "@Override public void error(String message, Throwable t)", "class_method_signature": "MiddlewareLoggerImpl.error(String message, Throwable t)", "testcase": false, "constructor": false}, {"identifier": "isErrorEnabled", "parameters": "(String appName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isErrorEnabled(String appName)", "full_signature": "@Override public boolean isErrorEnabled(String appName)", "class_method_signature": "MiddlewareLoggerImpl.isErrorEnabled(String appName)", "testcase": false, "constructor": false}, {"identifier": "errorWithApp", "parameters": "(String appName, String message)", "modifiers": "@Override public", "return": "void", "signature": "void errorWithApp(String appName, String message)", "full_signature": "@Override public void errorWithApp(String appName, String message)", "class_method_signature": "MiddlewareLoggerImpl.errorWithApp(String appName, String message)", "testcase": false, "constructor": false}, {"identifier": "errorWithApp", "parameters": "(String appName, String format, Object... args)", "modifiers": "@Override public", "return": "void", "signature": "void errorWithApp(String appName, String format, Object... args)", "full_signature": "@Override public void errorWithApp(String appName, String format, Object... args)", "class_method_signature": "MiddlewareLoggerImpl.errorWithApp(String appName, String format, Object... args)", "testcase": false, "constructor": false}, {"identifier": "errorWithApp", "parameters": "(String appName, String message, Throwable t)", "modifiers": "@Override public", "return": "void", "signature": "void errorWithApp(String appName, String message, Throwable t)", "full_signature": "@Override public void errorWithApp(String appName, String message, Throwable t)", "class_method_signature": "MiddlewareLoggerImpl.errorWithApp(String appName, String message, Throwable t)", "testcase": false, "constructor": false}], "file": "log-common-tools/src/main/java/com/alipay/sofa/rpc/log/MiddlewareLoggerImpl.java"}, "focal_method": {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getName() {\n        return getLogger().getName();\n    }", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "MiddlewareLoggerImpl.getName()", "testcase": false, "constructor": false, "invocations": ["getName", "getLogger"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}