{"test_class": {"identifier": "LongestPrefixTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static IndexedCollection<MobileTerminating> mobileTerminatingCache;", "modifier": "private static", "type": "IndexedCollection<MobileTerminating>", "declarator": "mobileTerminatingCache", "var_name": "mobileTerminatingCache"}, {"original_string": "private static IndexedCollection<MobileTerminating> mobileTerminatingCacheNoIndex;", "modifier": "private static", "type": "IndexedCollection<MobileTerminating>", "declarator": "mobileTerminatingCacheNoIndex", "var_name": "mobileTerminatingCacheNoIndex"}], "file": "code/src/test/java/com/googlecode/cqengine/query/comparative/LongestPrefixTest.java"}, "test_case": {"identifier": "testLongestPrefixWithoutIndex", "parameters": "(String prefix, String expectedOperator, Integer expectedCount)", "modifiers": "@Test @UseDataProvider(value = \"mobileTerminatingScenarios\") public", "return": "void", "body": "@Test\n    @UseDataProvider(value = \"mobileTerminatingScenarios\")\n    public void testLongestPrefixWithoutIndex(String prefix, String expectedOperator, Integer expectedCount) {\n        Query<MobileTerminating> q = longestPrefix(MobileTerminating.PREFIX, prefix);\n        validateLongestPrefixWithCache(q, mobileTerminatingCacheNoIndex, expectedOperator, expectedCount);\n    }", "signature": "void testLongestPrefixWithoutIndex(String prefix, String expectedOperator, Integer expectedCount)", "full_signature": "@Test @UseDataProvider(value = \"mobileTerminatingScenarios\") public void testLongestPrefixWithoutIndex(String prefix, String expectedOperator, Integer expectedCount)", "class_method_signature": "LongestPrefixTest.testLongestPrefixWithoutIndex(String prefix, String expectedOperator, Integer expectedCount)", "testcase": true, "constructor": false, "invocations": ["longestPrefix", "validateLongestPrefixWithCache"]}, "focal_class": {"identifier": "LongestPrefix", "superclass": "extends SimpleComparativeQuery<O, A>", "interfaces": "", "fields": [{"original_string": "private final A value;", "modifier": "private final", "type": "A", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "LongestPrefix", "parameters": "(Attribute<O, A> attribute, A value)", "modifiers": "public", "return": "", "signature": " LongestPrefix(Attribute<O, A> attribute, A value)", "full_signature": "public  LongestPrefix(Attribute<O, A> attribute, A value)", "class_method_signature": "LongestPrefix.LongestPrefix(Attribute<O, A> attribute, A value)", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "A", "signature": "A getValue()", "full_signature": "public A getValue()", "class_method_signature": "LongestPrefix.getValue()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "LongestPrefix.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "calcHashCode", "parameters": "()", "modifiers": "@Override protected", "return": "int", "signature": "int calcHashCode()", "full_signature": "@Override protected int calcHashCode()", "class_method_signature": "LongestPrefix.calcHashCode()", "testcase": false, "constructor": false}, {"identifier": "getMatchesForSimpleAttribute", "parameters": "(SimpleAttribute<O, A> attribute, ObjectSet<O> objectsInCollection, QueryOptions queryOptions)", "modifiers": "@Override public", "return": "Iterable<O>", "signature": "Iterable<O> getMatchesForSimpleAttribute(SimpleAttribute<O, A> attribute, ObjectSet<O> objectsInCollection, QueryOptions queryOptions)", "full_signature": "@Override public Iterable<O> getMatchesForSimpleAttribute(SimpleAttribute<O, A> attribute, ObjectSet<O> objectsInCollection, QueryOptions queryOptions)", "class_method_signature": "LongestPrefix.getMatchesForSimpleAttribute(SimpleAttribute<O, A> attribute, ObjectSet<O> objectsInCollection, QueryOptions queryOptions)", "testcase": false, "constructor": false}, {"identifier": "getMatchesForNonSimpleAttribute", "parameters": "(Attribute<O, A> attribute, ObjectSet<O> objectsInCollection, QueryOptions queryOptions)", "modifiers": "@Override public", "return": "Iterable<O>", "signature": "Iterable<O> getMatchesForNonSimpleAttribute(Attribute<O, A> attribute, ObjectSet<O> objectsInCollection, QueryOptions queryOptions)", "full_signature": "@Override public Iterable<O> getMatchesForNonSimpleAttribute(Attribute<O, A> attribute, ObjectSet<O> objectsInCollection, QueryOptions queryOptions)", "class_method_signature": "LongestPrefix.getMatchesForNonSimpleAttribute(Attribute<O, A> attribute, ObjectSet<O> objectsInCollection, QueryOptions queryOptions)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "LongestPrefix.toString()", "testcase": false, "constructor": false}, {"identifier": "countPrefixChars", "parameters": "(CharSequence mainSequence, CharSequence candidatePrefix)", "modifiers": "static", "return": "int", "signature": "int countPrefixChars(CharSequence mainSequence, CharSequence candidatePrefix)", "full_signature": "static int countPrefixChars(CharSequence mainSequence, CharSequence candidatePrefix)", "class_method_signature": "LongestPrefix.countPrefixChars(CharSequence mainSequence, CharSequence candidatePrefix)", "testcase": false, "constructor": false}], "file": "code/src/main/java/com/googlecode/cqengine/query/comparative/LongestPrefix.java"}, "focal_method": {"identifier": "LongestPrefix", "parameters": "(Attribute<O, A> attribute, A value)", "modifiers": "public", "return": "", "body": "public LongestPrefix(Attribute<O, A> attribute, A value) {\n        super(attribute);\n        this.value = checkQueryValueNotNull(value);\n    }", "signature": " LongestPrefix(Attribute<O, A> attribute, A value)", "full_signature": "public  LongestPrefix(Attribute<O, A> attribute, A value)", "class_method_signature": "LongestPrefix.LongestPrefix(Attribute<O, A> attribute, A value)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 41263775, "url": "https://github.com/npgall/cqengine", "language": "Java", "is_fork": false, "fork_count": 180, "stargazer_count": 1194, "size": 11701, "license": "licensed"}}