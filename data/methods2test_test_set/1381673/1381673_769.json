{"test_class": {"identifier": "DTColumnConfig52Test", "superclass": "extends ColumnTestBase", "interfaces": "", "fields": [{"original_string": "protected DTColumnConfig52 column1;", "modifier": "protected", "type": "DTColumnConfig52", "declarator": "column1", "var_name": "column1"}, {"original_string": "protected DTColumnConfig52 column2;", "modifier": "protected", "type": "DTColumnConfig52", "declarator": "column2", "var_name": "column2"}], "file": "drools-workbench-models/drools-workbench-models-guided-dtable/src/test/java/org/drools/workbench/models/guided/dtable/shared/model/DTColumnConfig52Test.java"}, "test_case": {"identifier": "testDiffDefaultValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDiffDefaultValue() {\n        column1.setDefaultValue(new DTCellValue52(\"default1\"));\n        column2.setDefaultValue(new DTCellValue52(7));\n\n        checkSingleDiff(FIELD_DEFAULT_VALUE, \"default1\", 7, column1, column2);\n    }", "signature": "void testDiffDefaultValue()", "full_signature": "@Test public void testDiffDefaultValue()", "class_method_signature": "DTColumnConfig52Test.testDiffDefaultValue()", "testcase": true, "constructor": false, "invocations": ["setDefaultValue", "setDefaultValue", "checkSingleDiff"]}, "focal_class": {"identifier": "DTColumnConfig52", "superclass": "", "interfaces": "implements BaseColumn,\n                   DiffColumn", "fields": [{"original_string": "private static final long serialVersionUID = 729l;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 729l", "var_name": "serialVersionUID"}, {"original_string": "public static final String FIELD_DEFAULT_VALUE = \"defaultValue\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_DEFAULT_VALUE = \"defaultValue\"", "var_name": "FIELD_DEFAULT_VALUE"}, {"original_string": "public static final String FIELD_HIDE_COLUMN = \"hideColumn\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_HIDE_COLUMN = \"hideColumn\"", "var_name": "FIELD_HIDE_COLUMN"}, {"original_string": "public static final String FIELD_WIDTH = \"width\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_WIDTH = \"width\"", "var_name": "FIELD_WIDTH"}, {"original_string": "public static final String FIELD_HEADER = \"header\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_HEADER = \"header\"", "var_name": "FIELD_HEADER"}, {"original_string": "public String defaultValue;", "modifier": "public", "type": "String", "declarator": "defaultValue", "var_name": "defaultValue"}, {"original_string": "private DTCellValue52 typedDefaultValue = null;", "modifier": "private", "type": "DTCellValue52", "declarator": "typedDefaultValue = null", "var_name": "typedDefaultValue"}, {"original_string": "private boolean hideColumn = false;", "modifier": "private", "type": "boolean", "declarator": "hideColumn = false", "var_name": "hideColumn"}, {"original_string": "private int width = -1;", "modifier": "private", "type": "int", "declarator": "width = -1", "var_name": "width"}, {"original_string": "private String header;", "modifier": "private", "type": "String", "declarator": "header", "var_name": "header"}], "methods": [{"identifier": "getDefaultValue", "parameters": "()", "modifiers": "public", "return": "DTCellValue52", "signature": "DTCellValue52 getDefaultValue()", "full_signature": "public DTCellValue52 getDefaultValue()", "class_method_signature": "DTColumnConfig52.getDefaultValue()", "testcase": false, "constructor": false}, {"identifier": "getWidth", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getWidth()", "full_signature": "public int getWidth()", "class_method_signature": "DTColumnConfig52.getWidth()", "testcase": false, "constructor": false}, {"identifier": "isHideColumn", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isHideColumn()", "full_signature": "public boolean isHideColumn()", "class_method_signature": "DTColumnConfig52.isHideColumn()", "testcase": false, "constructor": false}, {"identifier": "setDefaultValue", "parameters": "( DTCellValue52 defaultValue )", "modifiers": "public", "return": "void", "signature": "void setDefaultValue( DTCellValue52 defaultValue )", "full_signature": "public void setDefaultValue( DTCellValue52 defaultValue )", "class_method_signature": "DTColumnConfig52.setDefaultValue( DTCellValue52 defaultValue )", "testcase": false, "constructor": false}, {"identifier": "diff", "parameters": "( BaseColumn otherColumn )", "modifiers": "@Override public", "return": "List<BaseColumnFieldDiff>", "signature": "List<BaseColumnFieldDiff> diff( BaseColumn otherColumn )", "full_signature": "@Override public List<BaseColumnFieldDiff> diff( BaseColumn otherColumn )", "class_method_signature": "DTColumnConfig52.diff( BaseColumn otherColumn )", "testcase": false, "constructor": false}, {"identifier": "cloneCommonColumnConfigFrom", "parameters": "( DTColumnConfig52 model )", "modifiers": "public", "return": "void", "signature": "void cloneCommonColumnConfigFrom( DTColumnConfig52 model )", "full_signature": "public void cloneCommonColumnConfigFrom( DTColumnConfig52 model )", "class_method_signature": "DTColumnConfig52.cloneCommonColumnConfigFrom( DTColumnConfig52 model )", "testcase": false, "constructor": false}, {"identifier": "extractDefaultValue", "parameters": "( final DTCellValue52 dcv )", "modifiers": "protected", "return": "Object", "signature": "Object extractDefaultValue( final DTCellValue52 dcv )", "full_signature": "protected Object extractDefaultValue( final DTCellValue52 dcv )", "class_method_signature": "DTColumnConfig52.extractDefaultValue( final DTCellValue52 dcv )", "testcase": false, "constructor": false}, {"identifier": "isEqualOrNull", "parameters": "( final Object s1,\n                                         final Object s2 )", "modifiers": "public static", "return": "boolean", "signature": "boolean isEqualOrNull( final Object s1,\n                                         final Object s2 )", "full_signature": "public static boolean isEqualOrNull( final Object s1,\n                                         final Object s2 )", "class_method_signature": "DTColumnConfig52.isEqualOrNull( final Object s1,\n                                         final Object s2 )", "testcase": false, "constructor": false}, {"identifier": "setHideColumn", "parameters": "( boolean hideColumn )", "modifiers": "public", "return": "void", "signature": "void setHideColumn( boolean hideColumn )", "full_signature": "public void setHideColumn( boolean hideColumn )", "class_method_signature": "DTColumnConfig52.setHideColumn( boolean hideColumn )", "testcase": false, "constructor": false}, {"identifier": "setWidth", "parameters": "( int width )", "modifiers": "public", "return": "void", "signature": "void setWidth( int width )", "full_signature": "public void setWidth( int width )", "class_method_signature": "DTColumnConfig52.setWidth( int width )", "testcase": false, "constructor": false}, {"identifier": "setHeader", "parameters": "( String header )", "modifiers": "public", "return": "void", "signature": "void setHeader( String header )", "full_signature": "public void setHeader( String header )", "class_method_signature": "DTColumnConfig52.setHeader( String header )", "testcase": false, "constructor": false}, {"identifier": "getHeader", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getHeader()", "full_signature": "public String getHeader()", "class_method_signature": "DTColumnConfig52.getHeader()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "DTColumnConfig52.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DTColumnConfig52.hashCode()", "testcase": false, "constructor": false}], "file": "drools-workbench-models/drools-workbench-models-guided-dtable/src/main/java/org/drools/workbench/models/guided/dtable/shared/model/DTColumnConfig52.java"}, "focal_method": {"identifier": "setDefaultValue", "parameters": "( DTCellValue52 defaultValue )", "modifiers": "public", "return": "void", "body": "public void setDefaultValue( DTCellValue52 defaultValue ) {\n        this.typedDefaultValue = defaultValue;\n    }", "signature": "void setDefaultValue( DTCellValue52 defaultValue )", "full_signature": "public void setDefaultValue( DTCellValue52 defaultValue )", "class_method_signature": "DTColumnConfig52.setDefaultValue( DTCellValue52 defaultValue )", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}