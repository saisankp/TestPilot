{"test_class": {"identifier": "CrosstabTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/alibaba/alink/operator/common/statistics/CrosstabTest.java"}, "test_case": {"identifier": "convert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void convert() {\n\n        Map<Tuple2<String, String>, Long> maps = new HashMap<>();\n        maps.put(Tuple2.of(\"f0\", \"f1\"), 2L);\n        maps.put(Tuple2.of(\"f0\", \"f2\"), 3L);\n        maps.put(Tuple2.of(\"f1\", \"f2\"), 4L);\n        maps.put(Tuple2.of(\"f2\", \"f3\"), 5L);\n\n        Crosstab crossTable = Crosstab.convert(maps);\n\n        List<String> rowTags = crossTable.rowTags;\n        List<String> colTags = crossTable.colTags;\n\n        assertEquals(3, rowTags.size());\n        assertTrue(rowTags.contains(\"f0\"));\n        assertTrue(rowTags.contains(\"f1\"));\n        assertTrue(rowTags.contains(\"f2\"));\n        assertEquals(3.0, crossTable.data[rowTags.indexOf(\"f0\")][colTags.indexOf(\"f2\")], 10e-4);\n    }", "signature": "void convert()", "full_signature": "@Test public void convert()", "class_method_signature": "CrosstabTest.convert()", "testcase": true, "constructor": false, "invocations": ["put", "of", "put", "of", "put", "of", "put", "of", "convert", "assertEquals", "size", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertEquals", "indexOf", "indexOf"]}, "focal_class": {"identifier": "Crosstab", "superclass": "", "interfaces": "", "fields": [{"original_string": "public List<String> colTags = new ArrayList<>();", "modifier": "public", "type": "List<String>", "declarator": "colTags = new ArrayList<>()", "var_name": "colTags"}, {"original_string": "public List<String> rowTags = new ArrayList<>();", "modifier": "public", "type": "List<String>", "declarator": "rowTags = new ArrayList<>()", "var_name": "rowTags"}, {"original_string": "public long[][] data;", "modifier": "public", "type": "long[][]", "declarator": "data", "var_name": "data"}], "methods": [{"identifier": "convert", "parameters": "(Map<Tuple2<String, String>, Long> maps)", "modifiers": "public static", "return": "Crosstab", "signature": "Crosstab convert(Map<Tuple2<String, String>, Long> maps)", "full_signature": "public static Crosstab convert(Map<Tuple2<String, String>, Long> maps)", "class_method_signature": "Crosstab.convert(Map<Tuple2<String, String>, Long> maps)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(Crosstab left, Crosstab right)", "modifiers": "public static", "return": "Crosstab", "signature": "Crosstab merge(Crosstab left, Crosstab right)", "full_signature": "public static Crosstab merge(Crosstab left, Crosstab right)", "class_method_signature": "Crosstab.merge(Crosstab left, Crosstab right)", "testcase": false, "constructor": false}, {"identifier": "rowSum", "parameters": "()", "modifiers": "public", "return": "double[]", "signature": "double[] rowSum()", "full_signature": "public double[] rowSum()", "class_method_signature": "Crosstab.rowSum()", "testcase": false, "constructor": false}, {"identifier": "colSum", "parameters": "()", "modifiers": "public", "return": "double[]", "signature": "double[] colSum()", "full_signature": "public double[] colSum()", "class_method_signature": "Crosstab.colSum()", "testcase": false, "constructor": false}, {"identifier": "sum", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double sum()", "full_signature": "public double sum()", "class_method_signature": "Crosstab.sum()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/alibaba/alink/operator/common/statistics/Crosstab.java"}, "focal_method": {"identifier": "convert", "parameters": "(Map<Tuple2<String, String>, Long> maps)", "modifiers": "public static", "return": "Crosstab", "body": "public static Crosstab convert(Map<Tuple2<String, String>, Long> maps) {\n        Crosstab crosstab = new Crosstab();\n\n        //get row tags and col tags\n        Set<Tuple2<String, String>> sets = maps.keySet();\n\n        Set<String> rowTags = new HashSet<>();\n        Set<String> colTags = new HashSet<>();\n        for (Tuple2<String, String> tuple2 : sets) {\n            rowTags.add(tuple2.f0);\n            colTags.add(tuple2.f1);\n        }\n\n        crosstab.rowTags = new ArrayList<>(rowTags);\n        crosstab.colTags = new ArrayList<>(colTags);\n\n        int rowLen = crosstab.rowTags.size();\n        int colLen = crosstab.colTags.size();\n\n        //compute value\n        crosstab.data = new long[rowLen][colLen];\n        for (Map.Entry<Tuple2<String, String>, Long> entry : maps.entrySet()) {\n            int rowIdx = crosstab.rowTags.indexOf(entry.getKey().f0);\n            int colIdx = crosstab.colTags.indexOf(entry.getKey().f1);\n            crosstab.data[rowIdx][colIdx] = entry.getValue();\n        }\n        return crosstab;\n    }", "signature": "Crosstab convert(Map<Tuple2<String, String>, Long> maps)", "full_signature": "public static Crosstab convert(Map<Tuple2<String, String>, Long> maps)", "class_method_signature": "Crosstab.convert(Map<Tuple2<String, String>, Long> maps)", "testcase": false, "constructor": false, "invocations": ["keySet", "add", "add", "size", "size", "entrySet", "indexOf", "getKey", "indexOf", "getKey", "getValue"]}, "repository": {"repo_id": 150938406, "url": "https://github.com/alibaba/Alink", "stars": 1923, "created": "9/30/2018 6:36:11 AM +00:00", "updates": "2020-01-27T10:24:34+00:00", "fork": "False", "license": "licensed"}}