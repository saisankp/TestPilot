{"test_class": {"identifier": "BasicApiConnectionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ObjectMapper mapper = new ObjectMapper();", "modifier": "private final", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}, {"original_string": "private static MockWebServer server;", "modifier": "private static", "type": "MockWebServer", "declarator": "server", "var_name": "server"}, {"original_string": "private BasicApiConnection connection;", "modifier": "private", "type": "BasicApiConnection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private String LOGGED_IN_SERIALIZED_CONNECTION = \"{\\\"baseUrl\\\":\\\"\" + server.url(\"/w/api.php\") + \"\\\",\\\"cookies\\\":[{\\\"name\\\":\\\"GeoIP\\\",\\\"value\\\":\\\"DE:13:Dresden:51.0500:13.7500:v4\\\",\\\"comment\\\":null,\\\"commentURL\\\":null,\\\"domain\\\":\\\"domain comparison should be skipped\\\",\\\"maxAge\\\":-1,\\\"path\\\":\\\"/\\\",\\\"portlist\\\":null,\\\"secure\\\":false,\\\"httpOnly\\\":false,\\\"version\\\":0,\\\"discard\\\":false},{\\\"name\\\":\\\"testwikidatawikiSession\\\",\\\"value\\\":\\\"c18ef92637227283bcda73bcf95cfaf5\\\",\\\"comment\\\":null,\\\"commentURL\\\":null,\\\"domain\\\":\\\"domain comparison should be skipped\\\",\\\"maxAge\\\":-1,\\\"path\\\":\\\"/\\\",\\\"portlist\\\":null,\\\"secure\\\":true,\\\"httpOnly\\\":true,\\\"version\\\":0,\\\"discard\\\":false}],\\\"username\\\":\\\"username\\\",\\\"loggedIn\\\":true,\\\"tokens\\\":{\\\"login\\\":\\\"b5780b6e2f27e20b450921d9461010b4\\\"},\\\"connectTimeout\\\":5000,\\\"readTimeout\\\":6000}\";", "modifier": "private", "type": "String", "declarator": "LOGGED_IN_SERIALIZED_CONNECTION = \"{\\\"baseUrl\\\":\\\"\" + server.url(\"/w/api.php\") + \"\\\",\\\"cookies\\\":[{\\\"name\\\":\\\"GeoIP\\\",\\\"value\\\":\\\"DE:13:Dresden:51.0500:13.7500:v4\\\",\\\"comment\\\":null,\\\"commentURL\\\":null,\\\"domain\\\":\\\"domain comparison should be skipped\\\",\\\"maxAge\\\":-1,\\\"path\\\":\\\"/\\\",\\\"portlist\\\":null,\\\"secure\\\":false,\\\"httpOnly\\\":false,\\\"version\\\":0,\\\"discard\\\":false},{\\\"name\\\":\\\"testwikidatawikiSession\\\",\\\"value\\\":\\\"c18ef92637227283bcda73bcf95cfaf5\\\",\\\"comment\\\":null,\\\"commentURL\\\":null,\\\"domain\\\":\\\"domain comparison should be skipped\\\",\\\"maxAge\\\":-1,\\\"path\\\":\\\"/\\\",\\\"portlist\\\":null,\\\"secure\\\":true,\\\"httpOnly\\\":true,\\\"version\\\":0,\\\"discard\\\":false}],\\\"username\\\":\\\"username\\\",\\\"loggedIn\\\":true,\\\"tokens\\\":{\\\"login\\\":\\\"b5780b6e2f27e20b450921d9461010b4\\\"},\\\"connectTimeout\\\":5000,\\\"readTimeout\\\":6000}\"", "var_name": "LOGGED_IN_SERIALIZED_CONNECTION"}], "file": "wdtk-wikibaseapi/src/test/java/org/wikidata/wdtk/wikibaseapi/BasicApiConnectionTest.java"}, "test_case": {"identifier": "testGetWikidataApiConnection", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetWikidataApiConnection() {\n\t\tApiConnection connection = BasicApiConnection.getWikidataApiConnection();\n\t\tassertEquals(\"https://www.wikidata.org/w/api.php\",\n\t\t\t\tconnection.apiBaseUrl);\n\t}", "signature": "void testGetWikidataApiConnection()", "full_signature": "@Test public void testGetWikidataApiConnection()", "class_method_signature": "BasicApiConnectionTest.testGetWikidataApiConnection()", "testcase": true, "constructor": false, "invocations": ["getWikidataApiConnection", "assertEquals"]}, "focal_class": {"identifier": "BasicApiConnection", "superclass": "extends ApiConnection", "interfaces": "", "fields": [{"original_string": "protected final static String PARAM_LOGIN_USERNAME = \"lgname\";", "modifier": "protected final static", "type": "String", "declarator": "PARAM_LOGIN_USERNAME = \"lgname\"", "var_name": "PARAM_LOGIN_USERNAME"}, {"original_string": "protected final static String PARAM_LOGIN_PASSWORD = \"lgpassword\";", "modifier": "protected final static", "type": "String", "declarator": "PARAM_LOGIN_PASSWORD = \"lgpassword\"", "var_name": "PARAM_LOGIN_PASSWORD"}, {"original_string": "protected final static String PARAM_LOGIN_TOKEN = \"lgtoken\";", "modifier": "protected final static", "type": "String", "declarator": "PARAM_LOGIN_TOKEN = \"lgtoken\"", "var_name": "PARAM_LOGIN_TOKEN"}, {"original_string": "protected final static String LOGIN_RESULT_SUCCESS = \"Success\";", "modifier": "protected final static", "type": "String", "declarator": "LOGIN_RESULT_SUCCESS = \"Success\"", "var_name": "LOGIN_RESULT_SUCCESS"}, {"original_string": "protected final static String LOGIN_WRONG_PASS = \"WrongPass\";", "modifier": "protected final static", "type": "String", "declarator": "LOGIN_WRONG_PASS = \"WrongPass\"", "var_name": "LOGIN_WRONG_PASS"}, {"original_string": "protected final static String LOGIN_WRONG_PLUGIN_PASS = \"WrongPluginPass\";", "modifier": "protected final static", "type": "String", "declarator": "LOGIN_WRONG_PLUGIN_PASS = \"WrongPluginPass\"", "var_name": "LOGIN_WRONG_PLUGIN_PASS"}, {"original_string": "protected final static String LOGIN_NO_NAME = \"NoName\";", "modifier": "protected final static", "type": "String", "declarator": "LOGIN_NO_NAME = \"NoName\"", "var_name": "LOGIN_NO_NAME"}, {"original_string": "protected final static String LOGIN_NOT_EXISTS = \"NotExists\";", "modifier": "protected final static", "type": "String", "declarator": "LOGIN_NOT_EXISTS = \"NotExists\"", "var_name": "LOGIN_NOT_EXISTS"}, {"original_string": "protected final static String LOGIN_ILLEGAL = \"Illegal\";", "modifier": "protected final static", "type": "String", "declarator": "LOGIN_ILLEGAL = \"Illegal\"", "var_name": "LOGIN_ILLEGAL"}, {"original_string": "protected final static String LOGIN_THROTTLED = \"Throttled\";", "modifier": "protected final static", "type": "String", "declarator": "LOGIN_THROTTLED = \"Throttled\"", "var_name": "LOGIN_THROTTLED"}, {"original_string": "protected final static String LOGIN_EMPTY_PASS = \"EmptyPass\";", "modifier": "protected final static", "type": "String", "declarator": "LOGIN_EMPTY_PASS = \"EmptyPass\"", "var_name": "LOGIN_EMPTY_PASS"}, {"original_string": "protected final static String LOGIN_CREATE_BLOCKED = \"CreateBlocked\";", "modifier": "protected final static", "type": "String", "declarator": "LOGIN_CREATE_BLOCKED = \"CreateBlocked\"", "var_name": "LOGIN_CREATE_BLOCKED"}, {"original_string": "protected final static String LOGIN_BLOCKED = \"Blocked\";", "modifier": "protected final static", "type": "String", "declarator": "LOGIN_BLOCKED = \"Blocked\"", "var_name": "LOGIN_BLOCKED"}, {"original_string": "protected final static String LOGIN_NEEDTOKEN = \"NeedToken\";", "modifier": "protected final static", "type": "String", "declarator": "LOGIN_NEEDTOKEN = \"NeedToken\"", "var_name": "LOGIN_NEEDTOKEN"}, {"original_string": "protected final static String LOGIN_WRONG_TOKEN = \"WrongToken\";", "modifier": "protected final static", "type": "String", "declarator": "LOGIN_WRONG_TOKEN = \"WrongToken\"", "var_name": "LOGIN_WRONG_TOKEN"}, {"original_string": "@JsonIgnore\n\tString password = \"\";", "modifier": "@JsonIgnore", "type": "String", "declarator": "password = \"\"", "var_name": "password"}, {"original_string": "private final CookieManager cookieManager;", "modifier": "private final", "type": "CookieManager", "declarator": "cookieManager", "var_name": "cookieManager"}], "methods": [{"identifier": "BasicApiConnection", "parameters": "(String apiBaseUrl)", "modifiers": "public", "return": "", "signature": " BasicApiConnection(String apiBaseUrl)", "full_signature": "public  BasicApiConnection(String apiBaseUrl)", "class_method_signature": "BasicApiConnection.BasicApiConnection(String apiBaseUrl)", "testcase": false, "constructor": true}, {"identifier": "BasicApiConnection", "parameters": "(\n\t\t\t@JsonProperty(\"baseUrl\") String apiBaseUrl,\n\t\t\t@JsonProperty(\"cookies\") List<HttpCookieWrapper> cookies,\n\t\t\t@JsonProperty(\"username\") String username,\n\t\t\t@JsonProperty(\"loggedIn\") boolean loggedIn,\n\t\t\t@JsonProperty(\"tokens\") Map<String, String> tokens,\n\t\t\t@JsonProperty(\"connectTimeout\") int connectTimeout,\n\t\t\t@JsonProperty(\"readTimeout\") int readTimeout)", "modifiers": "@JsonCreator protected", "return": "", "signature": " BasicApiConnection(\n\t\t\t@JsonProperty(\"baseUrl\") String apiBaseUrl,\n\t\t\t@JsonProperty(\"cookies\") List<HttpCookieWrapper> cookies,\n\t\t\t@JsonProperty(\"username\") String username,\n\t\t\t@JsonProperty(\"loggedIn\") boolean loggedIn,\n\t\t\t@JsonProperty(\"tokens\") Map<String, String> tokens,\n\t\t\t@JsonProperty(\"connectTimeout\") int connectTimeout,\n\t\t\t@JsonProperty(\"readTimeout\") int readTimeout)", "full_signature": "@JsonCreator protected  BasicApiConnection(\n\t\t\t@JsonProperty(\"baseUrl\") String apiBaseUrl,\n\t\t\t@JsonProperty(\"cookies\") List<HttpCookieWrapper> cookies,\n\t\t\t@JsonProperty(\"username\") String username,\n\t\t\t@JsonProperty(\"loggedIn\") boolean loggedIn,\n\t\t\t@JsonProperty(\"tokens\") Map<String, String> tokens,\n\t\t\t@JsonProperty(\"connectTimeout\") int connectTimeout,\n\t\t\t@JsonProperty(\"readTimeout\") int readTimeout)", "class_method_signature": "BasicApiConnection.BasicApiConnection(\n\t\t\t@JsonProperty(\"baseUrl\") String apiBaseUrl,\n\t\t\t@JsonProperty(\"cookies\") List<HttpCookieWrapper> cookies,\n\t\t\t@JsonProperty(\"username\") String username,\n\t\t\t@JsonProperty(\"loggedIn\") boolean loggedIn,\n\t\t\t@JsonProperty(\"tokens\") Map<String, String> tokens,\n\t\t\t@JsonProperty(\"connectTimeout\") int connectTimeout,\n\t\t\t@JsonProperty(\"readTimeout\") int readTimeout)", "testcase": false, "constructor": true}, {"identifier": "getClientBuilder", "parameters": "()", "modifiers": "@Override protected", "return": "OkHttpClient.Builder", "signature": "OkHttpClient.Builder getClientBuilder()", "full_signature": "@Override protected OkHttpClient.Builder getClientBuilder()", "class_method_signature": "BasicApiConnection.getClientBuilder()", "testcase": false, "constructor": false}, {"identifier": "getTestWikidataApiConnection", "parameters": "()", "modifiers": "public static", "return": "BasicApiConnection", "signature": "BasicApiConnection getTestWikidataApiConnection()", "full_signature": "public static BasicApiConnection getTestWikidataApiConnection()", "class_method_signature": "BasicApiConnection.getTestWikidataApiConnection()", "testcase": false, "constructor": false}, {"identifier": "getWikidataApiConnection", "parameters": "()", "modifiers": "public static", "return": "BasicApiConnection", "signature": "BasicApiConnection getWikidataApiConnection()", "full_signature": "public static BasicApiConnection getWikidataApiConnection()", "class_method_signature": "BasicApiConnection.getWikidataApiConnection()", "testcase": false, "constructor": false}, {"identifier": "getWikimediaCommonsApiConnection", "parameters": "()", "modifiers": "public static", "return": "BasicApiConnection", "signature": "BasicApiConnection getWikimediaCommonsApiConnection()", "full_signature": "public static BasicApiConnection getWikimediaCommonsApiConnection()", "class_method_signature": "BasicApiConnection.getWikimediaCommonsApiConnection()", "testcase": false, "constructor": false}, {"identifier": "login", "parameters": "(String username, String password)", "modifiers": "public", "return": "void", "signature": "void login(String username, String password)", "full_signature": "public void login(String username, String password)", "class_method_signature": "BasicApiConnection.login(String username, String password)", "testcase": false, "constructor": false}, {"identifier": "confirmLogin", "parameters": "(String token, String username, String password)", "modifiers": "protected", "return": "void", "signature": "void confirmLogin(String token, String username, String password)", "full_signature": "protected void confirmLogin(String token, String username, String password)", "class_method_signature": "BasicApiConnection.confirmLogin(String token, String username, String password)", "testcase": false, "constructor": false}, {"identifier": "getCookies", "parameters": "()", "modifiers": "@JsonProperty(\"cookies\") public", "return": "List<HttpCookie>", "signature": "List<HttpCookie> getCookies()", "full_signature": "@JsonProperty(\"cookies\") public List<HttpCookie> getCookies()", "class_method_signature": "BasicApiConnection.getCookies()", "testcase": false, "constructor": false}, {"identifier": "clearCookies", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearCookies()", "full_signature": "public void clearCookies()", "class_method_signature": "BasicApiConnection.clearCookies()", "testcase": false, "constructor": false}, {"identifier": "getLoginErrorMessage", "parameters": "(String loginResult)", "modifiers": "protected", "return": "String", "signature": "String getLoginErrorMessage(String loginResult)", "full_signature": "protected String getLoginErrorMessage(String loginResult)", "class_method_signature": "BasicApiConnection.getLoginErrorMessage(String loginResult)", "testcase": false, "constructor": false}, {"identifier": "logout", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void logout()", "full_signature": "public void logout()", "class_method_signature": "BasicApiConnection.logout()", "testcase": false, "constructor": false}], "file": "wdtk-wikibaseapi/src/main/java/org/wikidata/wdtk/wikibaseapi/BasicApiConnection.java"}, "focal_method": {"identifier": "getWikidataApiConnection", "parameters": "()", "modifiers": "public static", "return": "BasicApiConnection", "body": "public static BasicApiConnection getWikidataApiConnection() {\n\t\treturn new BasicApiConnection(ApiConnection.URL_WIKIDATA_API);\n\t}", "signature": "BasicApiConnection getWikidataApiConnection()", "full_signature": "public static BasicApiConnection getWikidataApiConnection()", "class_method_signature": "BasicApiConnection.getWikidataApiConnection()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 16144428, "url": "https://github.com/Wikidata/Wikidata-Toolkit", "language": "Java", "is_fork": false, "fork_count": 80, "stargazer_count": 264, "size": 11241, "license": "licensed"}}