{"test_class": {"identifier": "ConvertQueryTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/core/src/test/java/org/apache/tamaya/core/internal/converters/ConvertQueryTest.java"}, "test_case": {"identifier": "testNullWithoutSuccess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNullWithoutSuccess() {\n        Configuration config = Configuration.current();\n\n        Integer intResult = (Integer) new ConvertQuery(\"invalid\", TypeLiteral.of(Integer.class)).apply(config);\n        assertThat(intResult).isNull();\n    }", "signature": "void testNullWithoutSuccess()", "full_signature": "@Test public void testNullWithoutSuccess()", "class_method_signature": "ConvertQueryTest.testNullWithoutSuccess()", "testcase": true, "constructor": false, "invocations": ["current", "apply", "of", "isNull", "assertThat"]}, "focal_class": {"identifier": "ConvertQuery", "superclass": "", "interfaces": "implements Function<Configuration, T>", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(ConvertQuery.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(ConvertQuery.class.getName())", "var_name": "LOG"}, {"original_string": "private String rawValue;", "modifier": "private", "type": "String", "declarator": "rawValue", "var_name": "rawValue"}, {"original_string": "private TypeLiteral<T> type;", "modifier": "private", "type": "TypeLiteral<T>", "declarator": "type", "var_name": "type"}], "methods": [{"identifier": "ConvertQuery", "parameters": "(String rawValue, TypeLiteral<T> type)", "modifiers": "public", "return": "", "signature": " ConvertQuery(String rawValue, TypeLiteral<T> type)", "full_signature": "public  ConvertQuery(String rawValue, TypeLiteral<T> type)", "class_method_signature": "ConvertQuery.ConvertQuery(String rawValue, TypeLiteral<T> type)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(Configuration config)", "modifiers": "@Override public", "return": "T", "signature": "T apply(Configuration config)", "full_signature": "@Override public T apply(Configuration config)", "class_method_signature": "ConvertQuery.apply(Configuration config)", "testcase": false, "constructor": false}], "file": "code/core/src/main/java/org/apache/tamaya/core/internal/converters/ConvertQuery.java"}, "focal_method": {"identifier": "apply", "parameters": "(Configuration config)", "modifiers": "@Override public", "return": "T", "body": "@Override\n    public T apply(Configuration config) {\n        List<PropertyConverter<T>> converters = config.getContext().getPropertyConverters(type);\n        ConversionContext context = new ConversionContext.Builder(type).setConfiguration(config)\n                .setKey(ConvertQuery.class.getName()).build();\n        for (PropertyConverter<?> conv : converters) {\n            try {\n                if (conv instanceof OptionalConverter) {\n                    continue;\n                }\n                T result = (T) conv.convert(rawValue, context);\n                if (result != null) {\n                    return result;\n                }\n            } catch (Exception e) {\n                LOG.log(Level.FINEST, e, () -> \"Converter \" + conv + \" failed to convert to \" + type);\n            }\n        }\n        return null;\n    }", "signature": "T apply(Configuration config)", "full_signature": "@Override public T apply(Configuration config)", "class_method_signature": "ConvertQuery.apply(Configuration config)", "testcase": false, "constructor": false, "invocations": ["getPropertyConverters", "getContext", "build", "setKey", "setConfiguration", "getName", "convert", "log"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}