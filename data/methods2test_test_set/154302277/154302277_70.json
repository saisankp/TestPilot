{"test_class": {"identifier": "GetDataResponseMessageProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private GetDataResponseMessageProcessor getDataResponseMessageProcessor;", "modifier": "@InjectMocks\n    private", "type": "GetDataResponseMessageProcessor", "declarator": "getDataResponseMessageProcessor", "var_name": "getDataResponseMessageProcessor"}, {"original_string": "@Mock\n    private AdHocManagementService adHocManagementService;", "modifier": "@Mock\n    private", "type": "AdHocManagementService", "declarator": "adHocManagementService", "var_name": "adHocManagementService"}, {"original_string": "@Mock\n    private ObjectMessage receivedMessage;", "modifier": "@Mock\n    private", "type": "ObjectMessage", "declarator": "receivedMessage", "var_name": "receivedMessage"}], "file": "osgp/platform/osgp-adapter-domain-distributionautomation/src/test/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/core/messageprocessors/GetDataResponseMessageProcessorTest.java"}, "test_case": {"identifier": "handlesResponseMessageValuesTest", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void handlesResponseMessageValuesTest() throws JMSException {\n        // Arrange\n        final String correlationUid = \"CorrelationID-1\";\n        final MessageType messageType = MessageType.GET_DATA;\n        final String organisationIdentification = \"test-org\";\n        final String deviceIdentification = \"device1\";\n\n        final ResponseMessage responseMessage = new ResponseMessage.Builder().withCorrelationUid(correlationUid)\n                .withMessageType(messageType.toString())\n                .withOrganisationIdentification(organisationIdentification)\n                .withDeviceIdentification(deviceIdentification)\n                .withResult(ResponseMessageResultType.OK)\n                .withDataObject(\"the payload\")\n                .build();\n\n        when(this.receivedMessage.getObject()).thenReturn(responseMessage);\n\n        // Act\n        this.getDataResponseMessageProcessor.processMessage(this.receivedMessage);\n\n        // Assert\n        verify(this.adHocManagementService, times(1)).handleGetDataResponse(responseMessage, messageType);\n    }", "signature": "void handlesResponseMessageValuesTest()", "full_signature": "@Test void handlesResponseMessageValuesTest()", "class_method_signature": "GetDataResponseMessageProcessorTest.handlesResponseMessageValuesTest()", "testcase": true, "constructor": false, "invocations": ["build", "withDataObject", "withResult", "withDeviceIdentification", "withOrganisationIdentification", "withMessageType", "withCorrelationUid", "toString", "thenReturn", "when", "getObject", "processMessage", "handleGetDataResponse", "verify", "times"]}, "focal_class": {"identifier": "GetDataResponseMessageProcessor", "superclass": "extends BaseNotificationMessageProcessor", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(GetDataResponseMessageProcessor.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(GetDataResponseMessageProcessor.class)", "var_name": "LOGGER"}, {"original_string": "private static final MessageType GET_DATA = MessageType.GET_DATA;", "modifier": "private static final", "type": "MessageType", "declarator": "GET_DATA = MessageType.GET_DATA", "var_name": "GET_DATA"}, {"original_string": "@Autowired\n    @Qualifier(\"domainDistributionAutomationAdHocManagementService\")\n    private AdHocManagementService adHocManagementService;", "modifier": "@Autowired\n    @Qualifier(\"domainDistributionAutomationAdHocManagementService\")\n    private", "type": "AdHocManagementService", "declarator": "adHocManagementService", "var_name": "adHocManagementService"}], "methods": [{"identifier": "GetDataResponseMessageProcessor", "parameters": "(\n            @Qualifier(\"domainDistributionAutomationOutboundResponseMessageRouter\") final NotificationResponseMessageSender responseMessageSender,\n            @Qualifier(\"domainDistributionAutomationInboundOsgpCoreResponsesMessageProcessorMap\") final MessageProcessorMap messageProcessorMap)", "modifiers": "@Autowired protected", "return": "", "signature": " GetDataResponseMessageProcessor(\n            @Qualifier(\"domainDistributionAutomationOutboundResponseMessageRouter\") final NotificationResponseMessageSender responseMessageSender,\n            @Qualifier(\"domainDistributionAutomationInboundOsgpCoreResponsesMessageProcessorMap\") final MessageProcessorMap messageProcessorMap)", "full_signature": "@Autowired protected  GetDataResponseMessageProcessor(\n            @Qualifier(\"domainDistributionAutomationOutboundResponseMessageRouter\") final NotificationResponseMessageSender responseMessageSender,\n            @Qualifier(\"domainDistributionAutomationInboundOsgpCoreResponsesMessageProcessorMap\") final MessageProcessorMap messageProcessorMap)", "class_method_signature": "GetDataResponseMessageProcessor.GetDataResponseMessageProcessor(\n            @Qualifier(\"domainDistributionAutomationOutboundResponseMessageRouter\") final NotificationResponseMessageSender responseMessageSender,\n            @Qualifier(\"domainDistributionAutomationInboundOsgpCoreResponsesMessageProcessorMap\") final MessageProcessorMap messageProcessorMap)", "testcase": false, "constructor": true}, {"identifier": "processMessage", "parameters": "(final ObjectMessage message)", "modifiers": "@Override public", "return": "void", "signature": "void processMessage(final ObjectMessage message)", "full_signature": "@Override public void processMessage(final ObjectMessage message)", "class_method_signature": "GetDataResponseMessageProcessor.processMessage(final ObjectMessage message)", "testcase": false, "constructor": false}, {"identifier": "getResponseValues", "parameters": "(final ObjectMessage message)", "modifiers": "private", "return": "Optional<ResponseMessage>", "signature": "Optional<ResponseMessage> getResponseValues(final ObjectMessage message)", "full_signature": "private Optional<ResponseMessage> getResponseValues(final ObjectMessage message)", "class_method_signature": "GetDataResponseMessageProcessor.getResponseValues(final ObjectMessage message)", "testcase": false, "constructor": false}, {"identifier": "processResponseValues", "parameters": "(final ResponseMessage response)", "modifiers": "private", "return": "void", "signature": "void processResponseValues(final ResponseMessage response)", "full_signature": "private void processResponseValues(final ResponseMessage response)", "class_method_signature": "GetDataResponseMessageProcessor.processResponseValues(final ResponseMessage response)", "testcase": false, "constructor": false}], "file": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/core/messageprocessors/GetDataResponseMessageProcessor.java"}, "focal_method": {"identifier": "processMessage", "parameters": "(final ObjectMessage message)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void processMessage(final ObjectMessage message) {\n        LOGGER.debug(\"Processing DA GET_DATA response message\");\n        this.getResponseValues(message).ifPresent(this::processResponseValues);\n    }", "signature": "void processMessage(final ObjectMessage message)", "full_signature": "@Override public void processMessage(final ObjectMessage message)", "class_method_signature": "GetDataResponseMessageProcessor.processMessage(final ObjectMessage message)", "testcase": false, "constructor": false, "invocations": ["debug", "ifPresent", "getResponseValues"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}