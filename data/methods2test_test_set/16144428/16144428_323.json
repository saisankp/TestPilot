{"test_class": {"identifier": "TermStatementUpdateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final static ItemIdValue Q1 = Datamodel.makeWikidataItemIdValue(\"Q1\");", "modifier": "final static", "type": "ItemIdValue", "declarator": "Q1 = Datamodel.makeWikidataItemIdValue(\"Q1\")", "var_name": "Q1"}], "file": "wdtk-wikibaseapi/src/test/java/org/wikidata/wdtk/wikibaseapi/TermStatementUpdateTest.java"}, "test_case": {"identifier": "testDeleteAlias", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testDeleteAlias() {\n\t\tMonolingualTextValue label = Datamodel.makeMonolingualTextValue(\"strudel aux pommes\", \"fr\");\n\t\tMonolingualTextValue alias = Datamodel.makeMonolingualTextValue(\"Apfelstrudel\", \"fr\");\n\t\tItemDocument currentDocument = ItemDocumentBuilder.forItemId(Q1).withLabel(label).withAlias(alias).build();\n\t\t\n\t\tTermStatementUpdate su = makeUpdate(currentDocument,\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tCollections.singletonList(alias)\n\t\t\t\t);\n\t\t\n\t\tassertTrue(su.getLabelUpdates().isEmpty());\n\t\tassertEquals(su.getAliasUpdates().size(), 1);\n\t\tassertEquals(su.getAliasUpdates().get(\"fr\").size(), 0);\n\t\tassertEquals(\"{\\\"aliases\\\":{\\\"fr\\\":[]}}\",\n\t\t\t\tsu.getJsonUpdateString());\n\t\tassertFalse(su.isEmptyEdit());\n\t}", "signature": "void testDeleteAlias()", "full_signature": "@Test public void testDeleteAlias()", "class_method_signature": "TermStatementUpdateTest.testDeleteAlias()", "testcase": true, "constructor": false, "invocations": ["makeMonolingualTextValue", "makeMonolingualTextValue", "build", "withAlias", "withLabel", "forItemId", "makeUpdate", "emptyList", "emptyList", "emptyList", "singletonList", "assertTrue", "isEmpty", "getLabelUpdates", "assertEquals", "size", "getAliasUpdates", "assertEquals", "size", "get", "getAliasUpdates", "assertEquals", "getJsonUpdateString", "assertFalse", "isEmptyEdit"]}, "focal_class": {"identifier": "TermStatementUpdate", "superclass": "extends StatementUpdate", "interfaces": "", "fields": [{"original_string": "static final Logger logger = LoggerFactory.getLogger(TermStatementUpdate.class);", "modifier": "static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(TermStatementUpdate.class)", "var_name": "logger"}, {"original_string": "final protected TermedStatementDocument currentDocument;", "modifier": "final protected", "type": "TermedStatementDocument", "declarator": "currentDocument", "var_name": "currentDocument"}, {"original_string": "@JsonIgnore\n    final Map<String, NameWithUpdate> newLabels;", "modifier": "@JsonIgnore\n    final", "type": "Map<String, NameWithUpdate>", "declarator": "newLabels", "var_name": "newLabels"}, {"original_string": "@JsonIgnore\n    final Map<String, NameWithUpdate> newDescriptions;", "modifier": "@JsonIgnore\n    final", "type": "Map<String, NameWithUpdate>", "declarator": "newDescriptions", "var_name": "newDescriptions"}, {"original_string": "@JsonIgnore\n    final Map<String, AliasesWithUpdate> newAliases;", "modifier": "@JsonIgnore\n    final", "type": "Map<String, AliasesWithUpdate>", "declarator": "newAliases", "var_name": "newAliases"}], "methods": [{"identifier": "TermStatementUpdate", "parameters": "(TermedStatementDocument currentDocument,\n            List<Statement> addStatements,\n            List<Statement> deleteStatements,\n            List<MonolingualTextValue> addLabels,\n            List<MonolingualTextValue> addDescriptions,\n            List<MonolingualTextValue> addAliases,\n            List<MonolingualTextValue> deleteAliases)", "modifiers": "public", "return": "", "signature": " TermStatementUpdate(TermedStatementDocument currentDocument,\n            List<Statement> addStatements,\n            List<Statement> deleteStatements,\n            List<MonolingualTextValue> addLabels,\n            List<MonolingualTextValue> addDescriptions,\n            List<MonolingualTextValue> addAliases,\n            List<MonolingualTextValue> deleteAliases)", "full_signature": "public  TermStatementUpdate(TermedStatementDocument currentDocument,\n            List<Statement> addStatements,\n            List<Statement> deleteStatements,\n            List<MonolingualTextValue> addLabels,\n            List<MonolingualTextValue> addDescriptions,\n            List<MonolingualTextValue> addAliases,\n            List<MonolingualTextValue> deleteAliases)", "class_method_signature": "TermStatementUpdate.TermStatementUpdate(TermedStatementDocument currentDocument,\n            List<Statement> addStatements,\n            List<Statement> deleteStatements,\n            List<MonolingualTextValue> addLabels,\n            List<MonolingualTextValue> addDescriptions,\n            List<MonolingualTextValue> addAliases,\n            List<MonolingualTextValue> deleteAliases)", "testcase": false, "constructor": true}, {"identifier": "initUpdatesFromCurrentValues", "parameters": "(Collection<MonolingualTextValue> currentValues)", "modifiers": "protected", "return": "Map<String, NameWithUpdate>", "signature": "Map<String, NameWithUpdate> initUpdatesFromCurrentValues(Collection<MonolingualTextValue> currentValues)", "full_signature": "protected Map<String, NameWithUpdate> initUpdatesFromCurrentValues(Collection<MonolingualTextValue> currentValues)", "class_method_signature": "TermStatementUpdate.initUpdatesFromCurrentValues(Collection<MonolingualTextValue> currentValues)", "testcase": false, "constructor": false}, {"identifier": "processAliases", "parameters": "(List<MonolingualTextValue> addAliases, List<MonolingualTextValue> deleteAliases)", "modifiers": "protected", "return": "void", "signature": "void processAliases(List<MonolingualTextValue> addAliases, List<MonolingualTextValue> deleteAliases)", "full_signature": "protected void processAliases(List<MonolingualTextValue> addAliases, List<MonolingualTextValue> deleteAliases)", "class_method_signature": "TermStatementUpdate.processAliases(List<MonolingualTextValue> addAliases, List<MonolingualTextValue> deleteAliases)", "testcase": false, "constructor": false}, {"identifier": "deleteAlias", "parameters": "(MonolingualTextValue alias)", "modifiers": "protected", "return": "void", "signature": "void deleteAlias(MonolingualTextValue alias)", "full_signature": "protected void deleteAlias(MonolingualTextValue alias)", "class_method_signature": "TermStatementUpdate.deleteAlias(MonolingualTextValue alias)", "testcase": false, "constructor": false}, {"identifier": "addAlias", "parameters": "(MonolingualTextValue alias)", "modifiers": "protected", "return": "void", "signature": "void addAlias(MonolingualTextValue alias)", "full_signature": "protected void addAlias(MonolingualTextValue alias)", "class_method_signature": "TermStatementUpdate.addAlias(MonolingualTextValue alias)", "testcase": false, "constructor": false}, {"identifier": "processDescriptions", "parameters": "(List<MonolingualTextValue> descriptions)", "modifiers": "protected", "return": "void", "signature": "void processDescriptions(List<MonolingualTextValue> descriptions)", "full_signature": "protected void processDescriptions(List<MonolingualTextValue> descriptions)", "class_method_signature": "TermStatementUpdate.processDescriptions(List<MonolingualTextValue> descriptions)", "testcase": false, "constructor": false}, {"identifier": "processLabels", "parameters": "(List<MonolingualTextValue> labels)", "modifiers": "protected", "return": "void", "signature": "void processLabels(List<MonolingualTextValue> labels)", "full_signature": "protected void processLabels(List<MonolingualTextValue> labels)", "class_method_signature": "TermStatementUpdate.processLabels(List<MonolingualTextValue> labels)", "testcase": false, "constructor": false}, {"identifier": "getLabelUpdates", "parameters": "()", "modifiers": "@JsonProperty(\"labels\") @JsonInclude(Include.NON_EMPTY) public", "return": "Map<String, TermImpl>", "signature": "Map<String, TermImpl> getLabelUpdates()", "full_signature": "@JsonProperty(\"labels\") @JsonInclude(Include.NON_EMPTY) public Map<String, TermImpl> getLabelUpdates()", "class_method_signature": "TermStatementUpdate.getLabelUpdates()", "testcase": false, "constructor": false}, {"identifier": "getDescriptionUpdates", "parameters": "()", "modifiers": "@JsonProperty(\"descriptions\") @JsonInclude(Include.NON_EMPTY) public", "return": "Map<String, TermImpl>", "signature": "Map<String, TermImpl> getDescriptionUpdates()", "full_signature": "@JsonProperty(\"descriptions\") @JsonInclude(Include.NON_EMPTY) public Map<String, TermImpl> getDescriptionUpdates()", "class_method_signature": "TermStatementUpdate.getDescriptionUpdates()", "testcase": false, "constructor": false}, {"identifier": "getAliasUpdates", "parameters": "()", "modifiers": "@JsonProperty(\"aliases\") @JsonInclude(Include.NON_EMPTY) public", "return": "Map<String, List<TermImpl>>", "signature": "Map<String, List<TermImpl>> getAliasUpdates()", "full_signature": "@JsonProperty(\"aliases\") @JsonInclude(Include.NON_EMPTY) public Map<String, List<TermImpl>> getAliasUpdates()", "class_method_signature": "TermStatementUpdate.getAliasUpdates()", "testcase": false, "constructor": false}, {"identifier": "isEmptyEdit", "parameters": "()", "modifiers": "@Override @JsonIgnore public", "return": "boolean", "signature": "boolean isEmptyEdit()", "full_signature": "@Override @JsonIgnore public boolean isEmptyEdit()", "class_method_signature": "TermStatementUpdate.isEmptyEdit()", "testcase": false, "constructor": false}, {"identifier": "getAddedAliases", "parameters": "(String language)", "modifiers": "public", "return": "List<MonolingualTextValue>", "signature": "List<MonolingualTextValue> getAddedAliases(String language)", "full_signature": "public List<MonolingualTextValue> getAddedAliases(String language)", "class_method_signature": "TermStatementUpdate.getAddedAliases(String language)", "testcase": false, "constructor": false}, {"identifier": "getRemovedAliases", "parameters": "(String language)", "modifiers": "public", "return": "List<MonolingualTextValue>", "signature": "List<MonolingualTextValue> getRemovedAliases(String language)", "full_signature": "public List<MonolingualTextValue> getRemovedAliases(String language)", "class_method_signature": "TermStatementUpdate.getRemovedAliases(String language)", "testcase": false, "constructor": false}, {"identifier": "performEdit", "parameters": "(\n\t\t\tWbEditingAction action, boolean editAsBot, String summary, List<String> tags)", "modifiers": "@Override public", "return": "TermedStatementDocument", "signature": "TermedStatementDocument performEdit(\n\t\t\tWbEditingAction action, boolean editAsBot, String summary, List<String> tags)", "full_signature": "@Override public TermedStatementDocument performEdit(\n\t\t\tWbEditingAction action, boolean editAsBot, String summary, List<String> tags)", "class_method_signature": "TermStatementUpdate.performEdit(\n\t\t\tWbEditingAction action, boolean editAsBot, String summary, List<String> tags)", "testcase": false, "constructor": false}, {"identifier": "getMonolingualUpdatedValues", "parameters": "(Map<String, NameWithUpdate> updates)", "modifiers": "protected", "return": "Map<String, TermImpl>", "signature": "Map<String, TermImpl> getMonolingualUpdatedValues(Map<String, NameWithUpdate> updates)", "full_signature": "protected Map<String, TermImpl> getMonolingualUpdatedValues(Map<String, NameWithUpdate> updates)", "class_method_signature": "TermStatementUpdate.getMonolingualUpdatedValues(Map<String, NameWithUpdate> updates)", "testcase": false, "constructor": false}, {"identifier": "monolingualToJackson", "parameters": "(MonolingualTextValue monolingualTextValue)", "modifiers": "protected", "return": "TermImpl", "signature": "TermImpl monolingualToJackson(MonolingualTextValue monolingualTextValue)", "full_signature": "protected TermImpl monolingualToJackson(MonolingualTextValue monolingualTextValue)", "class_method_signature": "TermStatementUpdate.monolingualToJackson(MonolingualTextValue monolingualTextValue)", "testcase": false, "constructor": false}], "file": "wdtk-wikibaseapi/src/main/java/org/wikidata/wdtk/wikibaseapi/TermStatementUpdate.java"}, "focal_method": {"identifier": "deleteAlias", "parameters": "(MonolingualTextValue alias)", "modifiers": "protected", "return": "void", "body": "protected void deleteAlias(MonolingualTextValue alias) {\n        String lang = alias.getLanguageCode();\n        AliasesWithUpdate currentAliases = newAliases.get(lang);\n        if (currentAliases != null) {\n            currentAliases.aliases.remove(alias);\n            currentAliases.deleted.add(alias);\n            currentAliases.write = true;\n        }\n    }", "signature": "void deleteAlias(MonolingualTextValue alias)", "full_signature": "protected void deleteAlias(MonolingualTextValue alias)", "class_method_signature": "TermStatementUpdate.deleteAlias(MonolingualTextValue alias)", "testcase": false, "constructor": false, "invocations": ["getLanguageCode", "get", "remove", "add"]}, "repository": {"repo_id": 16144428, "url": "https://github.com/Wikidata/Wikidata-Toolkit", "language": "Java", "is_fork": false, "fork_count": 80, "stargazer_count": 264, "size": 11241, "license": "licensed"}}