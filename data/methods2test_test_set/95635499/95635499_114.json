{"test_class": {"identifier": "ResourceUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String RESOURCE_FILE_PATH = \"ai/libs/jaicore/basic/testrsc/dummy.resource\";", "modifier": "private static final", "type": "String", "declarator": "RESOURCE_FILE_PATH = \"ai/libs/jaicore/basic/testrsc/dummy.resource\"", "var_name": "RESOURCE_FILE_PATH"}, {"original_string": "private static final String EXPECTED_CONTENT = \"Lorem ipsum dolor sit amet.\";", "modifier": "private static final", "type": "String", "declarator": "EXPECTED_CONTENT = \"Lorem ipsum dolor sit amet.\"", "var_name": "EXPECTED_CONTENT"}], "file": "JAICore/jaicore-basic/src/test/java/ai/libs/jaicore/basic/ResourceUtilTest.java"}, "test_case": {"identifier": "testGetResourceAsFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetResourceAsFile() {\n\t\tFile resourceFile = ResourceUtil.getResourceAsFile(RESOURCE_FILE_PATH);\n\t\tassertTrue(\"The file returned for the resource path does not exist\", resourceFile.exists());\n\t\tassertTrue(\"The file returned is not a file but a directory.\", !resourceFile.isDirectory());\n\t}", "signature": "void testGetResourceAsFile()", "full_signature": "@Test public void testGetResourceAsFile()", "class_method_signature": "ResourceUtilTest.testGetResourceAsFile()", "testcase": true, "constructor": false, "invocations": ["getResourceAsFile", "assertTrue", "exists", "assertTrue", "isDirectory"]}, "focal_class": {"identifier": "ResourceUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ResourceUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " ResourceUtil()", "full_signature": "private  ResourceUtil()", "class_method_signature": "ResourceUtil.ResourceUtil()", "testcase": false, "constructor": true}, {"identifier": "readResourceFileToString", "parameters": "(final String path)", "modifiers": "public static", "return": "String", "signature": "String readResourceFileToString(final String path)", "full_signature": "public static String readResourceFileToString(final String path)", "class_method_signature": "ResourceUtil.readResourceFileToString(final String path)", "testcase": false, "constructor": false}, {"identifier": "readResourceFileToStringList", "parameters": "(final String path)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> readResourceFileToStringList(final String path)", "full_signature": "public static List<String> readResourceFileToStringList(final String path)", "class_method_signature": "ResourceUtil.readResourceFileToStringList(final String path)", "testcase": false, "constructor": false}, {"identifier": "readResourceFileToStringList", "parameters": "(final ResourceFile resourceFile)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> readResourceFileToStringList(final ResourceFile resourceFile)", "full_signature": "public static List<String> readResourceFileToStringList(final ResourceFile resourceFile)", "class_method_signature": "ResourceUtil.readResourceFileToStringList(final ResourceFile resourceFile)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsFile", "parameters": "(final String path)", "modifiers": "public static", "return": "ResourceFile", "signature": "ResourceFile getResourceAsFile(final String path)", "full_signature": "public static ResourceFile getResourceAsFile(final String path)", "class_method_signature": "ResourceUtil.getResourceAsFile(final String path)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsURL", "parameters": "(final String path)", "modifiers": "public static", "return": "URL", "signature": "URL getResourceAsURL(final String path)", "full_signature": "public static URL getResourceAsURL(final String path)", "class_method_signature": "ResourceUtil.getResourceAsURL(final String path)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsTempFile", "parameters": "(final String resourcePath)", "modifiers": "public static", "return": "String", "signature": "String getResourceAsTempFile(final String resourcePath)", "full_signature": "public static String getResourceAsTempFile(final String resourcePath)", "class_method_signature": "ResourceUtil.getResourceAsTempFile(final String resourcePath)", "testcase": false, "constructor": false}], "file": "JAICore/jaicore-basic/src/main/java/ai/libs/jaicore/basic/ResourceUtil.java"}, "focal_method": {"identifier": "getResourceAsFile", "parameters": "(final String path)", "modifiers": "public static", "return": "ResourceFile", "body": "public static ResourceFile getResourceAsFile(final String path) {\n\t\treturn new ResourceFile(path);\n\t}", "signature": "ResourceFile getResourceAsFile(final String path)", "full_signature": "public static ResourceFile getResourceAsFile(final String path)", "class_method_signature": "ResourceUtil.getResourceAsFile(final String path)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 95635499, "url": "https://github.com/fmohr/AILibs", "language": "Java", "is_fork": false, "fork_count": 26, "stargazer_count": 25, "size": 155873, "license": "licensed"}}