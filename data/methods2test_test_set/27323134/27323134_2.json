{"test_class": {"identifier": "ArticleCleanerTest", "superclass": "extends ActivityTestCase", "interfaces": "", "fields": [{"original_string": "private Context context;", "modifier": "private", "type": "Context", "declarator": "context", "var_name": "context"}], "file": "mythtv-player/src/test/java/org/mythtv/android/presentation/utils/ArticleCleanerTest.java"}, "test_case": {"identifier": "testClean", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testClean() throws Exception {\n\n        when( context.getResources().getStringArray( any( int.class ) ) ).thenReturn( new String[] { \"THE \", \"AN \", \"A \" } );\n\n        assertThat( ArticleCleaner.clean( context, \"The quick brown fox...\" ), equalTo( \"quick brown fox...\" ) );\n        assertThat( ArticleCleaner.clean( context, \"THE QUICK BROWN FOX...\" ), equalTo( \"QUICK BROWN FOX...\" ) );\n        assertThat( ArticleCleaner.clean( context, \"the quick brown fox...\" ), equalTo( \"quick brown fox...\" ) );\n\n        assertThat( ArticleCleaner.clean( context, \"An interesting idea...\" ), equalTo( \"interesting idea...\" ) );\n        assertThat( ArticleCleaner.clean( context, \"an interesting idea...\" ), equalTo( \"interesting idea...\" ) );\n\n        assertThat( ArticleCleaner.clean( context, \"A stitch in time...\" ), equalTo( \"stitch in time...\" ) );\n        assertThat( ArticleCleaner.clean( context, \"a stitch in time...\" ), equalTo( \"stitch in time...\" ) );\n\n        assertThat( ArticleCleaner.clean( context, \"The An A ...\" ), equalTo( \"...\" ) );\n        assertThat( ArticleCleaner.clean( context, \"THE AN A ...\" ), equalTo( \"...\" ) );\n        assertThat( ArticleCleaner.clean( context, \"the an a ...\" ), equalTo( \"...\" ) );\n\n    }", "signature": "void testClean()", "full_signature": "@Test public void testClean()", "class_method_signature": "ArticleCleanerTest.testClean()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getStringArray", "getResources", "any", "assertThat", "clean", "equalTo", "assertThat", "clean", "equalTo", "assertThat", "clean", "equalTo", "assertThat", "clean", "equalTo", "assertThat", "clean", "equalTo", "assertThat", "clean", "equalTo", "assertThat", "clean", "equalTo", "assertThat", "clean", "equalTo", "assertThat", "clean", "equalTo", "assertThat", "clean", "equalTo"]}, "focal_class": {"identifier": "ArticleCleaner", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TAG = ArticleCleaner.class.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "TAG = ArticleCleaner.class.getSimpleName()", "var_name": "TAG"}], "methods": [{"identifier": "ArticleCleaner", "parameters": "()", "modifiers": "private", "return": "", "signature": " ArticleCleaner()", "full_signature": "private  ArticleCleaner()", "class_method_signature": "ArticleCleaner.ArticleCleaner()", "testcase": false, "constructor": true}, {"identifier": "clean", "parameters": "( final Context context, String value )", "modifiers": "public static", "return": "String", "signature": "String clean( final Context context, String value )", "full_signature": "public static String clean( final Context context, String value )", "class_method_signature": "ArticleCleaner.clean( final Context context, String value )", "testcase": false, "constructor": false}], "file": "mythtv-player/src/main/java/org/mythtv/android/presentation/utils/ArticleCleaner.java"}, "focal_method": {"identifier": "clean", "parameters": "( final Context context, String value )", "modifiers": "public static", "return": "String", "body": "public static String clean( final Context context, String value ) {\n        Log.d( TAG, \"clean : enter\" );\n\n        if( null == value || \"\".equals( value ) ) {\n\n            return value;\n        }\n\n        String cleaned = value;\n\n        String[] articles = context.getResources().getStringArray( R.array.articles );\n        String upper = cleaned.toUpperCase( Locale.getDefault() );\n\n        for( String article : articles ) {\n            article = article + \" \";\n            Log.d( TAG, \"clean : article=\" + article + \", cleaned=\" + cleaned );\n\n            if( upper.startsWith( article ) ) {\n                Log.d( TAG, \"clean : article found\" );\n\n                cleaned = cleaned.substring( article.length() ).trim();\n            }\n\n        }\n\n        Log.d( TAG, \"clean : exit - cleaned=\" + cleaned );\n        return cleaned;\n    }", "signature": "String clean( final Context context, String value )", "full_signature": "public static String clean( final Context context, String value )", "class_method_signature": "ArticleCleaner.clean( final Context context, String value )", "testcase": false, "constructor": false, "invocations": ["d", "equals", "getStringArray", "getResources", "toUpperCase", "getDefault", "d", "startsWith", "d", "trim", "substring", "length", "d"]}, "repository": {"repo_id": 27323134, "url": "https://github.com/MythTV-Clients/MythtvPlayerForAndroid", "stars": 17, "created": "11/30/2014 3:26:45 AM +00:00", "updates": "2019-12-31T22:13:00+00:00", "fork": "False", "license": "licensed"}}