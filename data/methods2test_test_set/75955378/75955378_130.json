{"test_class": {"identifier": "TcpTransportTest", "superclass": "", "interfaces": "", "fields": [], "file": "transporters/src/test/java/com/nextdoor/bender/ipc/tcp/TcpTransportTest.java"}, "test_case": {"identifier": "shouldTryAtLeastOnce", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldTryAtLeastOnce() throws TransportException, IOException {\n\n    Sink sink = mock(Sink.class);\n    TcpTransport transport = new TcpTransport(sink, 0, 0);\n\n    TcpTransportBuffer transportBuffer = mock(TcpTransportBuffer.class);\n    Buffer buffer = new Buffer();\n    when(transportBuffer.getInternalBuffer()).thenReturn(buffer);\n\n    transport.sendBatch(transportBuffer);\n\n    verify(sink).write(eq(buffer), eq(0L));\n\n  }", "signature": "void shouldTryAtLeastOnce()", "full_signature": "@Test public void shouldTryAtLeastOnce()", "class_method_signature": "TcpTransportTest.shouldTryAtLeastOnce()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getInternalBuffer", "sendBatch", "write", "verify", "eq", "eq"]}, "focal_class": {"identifier": "TcpTransport", "superclass": "", "interfaces": "implements UnpartitionedTransport, Closeable", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(TcpTransport.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(TcpTransport.class)", "var_name": "logger"}, {"original_string": "private final Sink sink;", "modifier": "private final", "type": "Sink", "declarator": "sink", "var_name": "sink"}, {"original_string": "private final RetryConfig retryConfig;", "modifier": "private final", "type": "RetryConfig", "declarator": "retryConfig", "var_name": "retryConfig"}], "methods": [{"identifier": "TcpTransport", "parameters": "(Sink sink, int retryCount, long retryDelayMs)", "modifiers": "public", "return": "", "signature": " TcpTransport(Sink sink, int retryCount, long retryDelayMs)", "full_signature": "public  TcpTransport(Sink sink, int retryCount, long retryDelayMs)", "class_method_signature": "TcpTransport.TcpTransport(Sink sink, int retryCount, long retryDelayMs)", "testcase": false, "constructor": true}, {"identifier": "sendBatch", "parameters": "(TransportBuffer buffer)", "modifiers": "@Override public", "return": "void", "signature": "void sendBatch(TransportBuffer buffer)", "full_signature": "@Override public void sendBatch(TransportBuffer buffer)", "class_method_signature": "TcpTransport.sendBatch(TransportBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "TcpTransport.close()", "testcase": false, "constructor": false}], "file": "transporters/src/main/java/com/nextdoor/bender/ipc/tcp/TcpTransport.java"}, "focal_method": {"identifier": "sendBatch", "parameters": "(TransportBuffer buffer)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void sendBatch(TransportBuffer buffer) throws TransportException {\n\n    Buffer internalBuffer = ((TcpTransportBuffer) buffer).getInternalBuffer();\n\n    Callable<Boolean> write = () -> {\n      try {\n        sink.write(internalBuffer, internalBuffer.size());\n        return true;\n      } catch (IOException ex) {\n        throw new TransportException(\"Error while sending in tcp transport\", ex);\n      }\n    };\n\n    try {\n      new CallExecutor(retryConfig).execute(write);\n    } catch (RetriesExhaustedException | UnexpectedException ue) {\n      throw new TransportException(ue);\n    }\n\n  }", "signature": "void sendBatch(TransportBuffer buffer)", "full_signature": "@Override public void sendBatch(TransportBuffer buffer)", "class_method_signature": "TcpTransport.sendBatch(TransportBuffer buffer)", "testcase": false, "constructor": false, "invocations": ["getInternalBuffer", "write", "size", "execute"]}, "repository": {"repo_id": 75955378, "url": "https://github.com/Nextdoor/bender", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 163, "size": 1503, "license": "licensed"}}