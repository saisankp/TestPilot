{"test_class": {"identifier": "DataFrameBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "dflib/src/test/java/com/nhl/dflib/DataFrameBuilderTest.java"}, "test_case": {"identifier": "testFoldDoubleStreamByRow", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFoldDoubleStreamByRow() {\n        DataFrame df = DataFrameBuilder\n                .builder(\"a\", \"b\")\n                .foldDoubleStreamByRow(-9999.9, DoubleStream.of(-1, 1.1, 0, 2, 5, 3));\n\n        new DataFrameAsserts(df, \"a\", \"b\")\n                .expectHeight(3)\n                .expectDoubleColumns(0, 1)\n                .expectRow(0, -1., 1.1)\n                .expectRow(1, 0., 2.)\n                .expectRow(2, 5., 3.);\n    }", "signature": "void testFoldDoubleStreamByRow()", "full_signature": "@Test public void testFoldDoubleStreamByRow()", "class_method_signature": "DataFrameBuilderTest.testFoldDoubleStreamByRow()", "testcase": true, "constructor": false, "invocations": ["foldDoubleStreamByRow", "builder", "of", "expectRow", "expectRow", "expectRow", "expectDoubleColumns", "expectHeight"]}, "focal_class": {"identifier": "DataFrameBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Index columnsIndex;", "modifier": "private", "type": "Index", "declarator": "columnsIndex", "var_name": "columnsIndex"}], "methods": [{"identifier": "DataFrameBuilder", "parameters": "(Index columnsIndex)", "modifiers": "protected", "return": "", "signature": " DataFrameBuilder(Index columnsIndex)", "full_signature": "protected  DataFrameBuilder(Index columnsIndex)", "class_method_signature": "DataFrameBuilder.DataFrameBuilder(Index columnsIndex)", "testcase": false, "constructor": true}, {"identifier": "builder", "parameters": "(String... columnLabels)", "modifiers": "public static", "return": "DataFrameBuilder", "signature": "DataFrameBuilder builder(String... columnLabels)", "full_signature": "public static DataFrameBuilder builder(String... columnLabels)", "class_method_signature": "DataFrameBuilder.builder(String... columnLabels)", "testcase": false, "constructor": false}, {"identifier": "builder", "parameters": "(Index columnsIndex)", "modifiers": "public static", "return": "DataFrameBuilder", "signature": "DataFrameBuilder builder(Index columnsIndex)", "full_signature": "public static DataFrameBuilder builder(Index columnsIndex)", "class_method_signature": "DataFrameBuilder.builder(Index columnsIndex)", "testcase": false, "constructor": false}, {"identifier": "empty", "parameters": "()", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame empty()", "full_signature": "public DataFrame empty()", "class_method_signature": "DataFrameBuilder.empty()", "testcase": false, "constructor": false}, {"identifier": "columns", "parameters": "(Series<?>... columns)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame columns(Series<?>... columns)", "full_signature": "public DataFrame columns(Series<?>... columns)", "class_method_signature": "DataFrameBuilder.columns(Series<?>... columns)", "testcase": false, "constructor": false}, {"identifier": "rows", "parameters": "(Object[]... rows)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame rows(Object[]... rows)", "full_signature": "public DataFrame rows(Object[]... rows)", "class_method_signature": "DataFrameBuilder.rows(Object[]... rows)", "testcase": false, "constructor": false}, {"identifier": "byRow", "parameters": "()", "modifiers": "public", "return": "DataFrameByRowBuilder", "signature": "DataFrameByRowBuilder byRow()", "full_signature": "public DataFrameByRowBuilder byRow()", "class_method_signature": "DataFrameBuilder.byRow()", "testcase": false, "constructor": false}, {"identifier": "addRow", "parameters": "(Object... row)", "modifiers": "public", "return": "DataFrameByRowBuilder", "signature": "DataFrameByRowBuilder addRow(Object... row)", "full_signature": "public DataFrameByRowBuilder addRow(Object... row)", "class_method_signature": "DataFrameBuilder.addRow(Object... row)", "testcase": false, "constructor": false}, {"identifier": "foldByRow", "parameters": "(Object... data)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldByRow(Object... data)", "full_signature": "public DataFrame foldByRow(Object... data)", "class_method_signature": "DataFrameBuilder.foldByRow(Object... data)", "testcase": false, "constructor": false}, {"identifier": "foldByColumn", "parameters": "(Object... data)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldByColumn(Object... data)", "full_signature": "public DataFrame foldByColumn(Object... data)", "class_method_signature": "DataFrameBuilder.foldByColumn(Object... data)", "testcase": false, "constructor": false}, {"identifier": "foldStreamByRow", "parameters": "(Stream<T> stream)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldStreamByRow(Stream<T> stream)", "full_signature": "public DataFrame foldStreamByRow(Stream<T> stream)", "class_method_signature": "DataFrameBuilder.foldStreamByRow(Stream<T> stream)", "testcase": false, "constructor": false}, {"identifier": "foldStreamByColumn", "parameters": "(Stream<T> stream)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldStreamByColumn(Stream<T> stream)", "full_signature": "public DataFrame foldStreamByColumn(Stream<T> stream)", "class_method_signature": "DataFrameBuilder.foldStreamByColumn(Stream<T> stream)", "testcase": false, "constructor": false}, {"identifier": "foldIterableByRow", "parameters": "(Iterable<T> iterable)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldIterableByRow(Iterable<T> iterable)", "full_signature": "public DataFrame foldIterableByRow(Iterable<T> iterable)", "class_method_signature": "DataFrameBuilder.foldIterableByRow(Iterable<T> iterable)", "testcase": false, "constructor": false}, {"identifier": "foldIterableByColumn", "parameters": "(Iterable<T> iterable)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldIterableByColumn(Iterable<T> iterable)", "full_signature": "public DataFrame foldIterableByColumn(Iterable<T> iterable)", "class_method_signature": "DataFrameBuilder.foldIterableByColumn(Iterable<T> iterable)", "testcase": false, "constructor": false}, {"identifier": "objectsToRows", "parameters": "(Iterable<T> objects, Function<T, Object[]> rowMapper)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame objectsToRows(Iterable<T> objects, Function<T, Object[]> rowMapper)", "full_signature": "public DataFrame objectsToRows(Iterable<T> objects, Function<T, Object[]> rowMapper)", "class_method_signature": "DataFrameBuilder.objectsToRows(Iterable<T> objects, Function<T, Object[]> rowMapper)", "testcase": false, "constructor": false}, {"identifier": "foldIntByColumn", "parameters": "(int padWith, int... data)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldIntByColumn(int padWith, int... data)", "full_signature": "public DataFrame foldIntByColumn(int padWith, int... data)", "class_method_signature": "DataFrameBuilder.foldIntByColumn(int padWith, int... data)", "testcase": false, "constructor": false}, {"identifier": "foldIntStreamByRow", "parameters": "(IntStream stream)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldIntStreamByRow(IntStream stream)", "full_signature": "public DataFrame foldIntStreamByRow(IntStream stream)", "class_method_signature": "DataFrameBuilder.foldIntStreamByRow(IntStream stream)", "testcase": false, "constructor": false}, {"identifier": "foldIntStreamByRow", "parameters": "(int padWith, IntStream stream)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldIntStreamByRow(int padWith, IntStream stream)", "full_signature": "public DataFrame foldIntStreamByRow(int padWith, IntStream stream)", "class_method_signature": "DataFrameBuilder.foldIntStreamByRow(int padWith, IntStream stream)", "testcase": false, "constructor": false}, {"identifier": "foldIntStreamByColumn", "parameters": "(IntStream stream)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldIntStreamByColumn(IntStream stream)", "full_signature": "public DataFrame foldIntStreamByColumn(IntStream stream)", "class_method_signature": "DataFrameBuilder.foldIntStreamByColumn(IntStream stream)", "testcase": false, "constructor": false}, {"identifier": "foldIntStreamByColumn", "parameters": "(int padWith, IntStream stream)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldIntStreamByColumn(int padWith, IntStream stream)", "full_signature": "public DataFrame foldIntStreamByColumn(int padWith, IntStream stream)", "class_method_signature": "DataFrameBuilder.foldIntStreamByColumn(int padWith, IntStream stream)", "testcase": false, "constructor": false}, {"identifier": "foldLongByColumn", "parameters": "(long padWith, long... data)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldLongByColumn(long padWith, long... data)", "full_signature": "public DataFrame foldLongByColumn(long padWith, long... data)", "class_method_signature": "DataFrameBuilder.foldLongByColumn(long padWith, long... data)", "testcase": false, "constructor": false}, {"identifier": "foldLongStreamByRow", "parameters": "(LongStream stream)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldLongStreamByRow(LongStream stream)", "full_signature": "public DataFrame foldLongStreamByRow(LongStream stream)", "class_method_signature": "DataFrameBuilder.foldLongStreamByRow(LongStream stream)", "testcase": false, "constructor": false}, {"identifier": "foldLongStreamByRow", "parameters": "(long padWith, LongStream stream)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldLongStreamByRow(long padWith, LongStream stream)", "full_signature": "public DataFrame foldLongStreamByRow(long padWith, LongStream stream)", "class_method_signature": "DataFrameBuilder.foldLongStreamByRow(long padWith, LongStream stream)", "testcase": false, "constructor": false}, {"identifier": "foldLongStreamByColumn", "parameters": "(LongStream stream)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldLongStreamByColumn(LongStream stream)", "full_signature": "public DataFrame foldLongStreamByColumn(LongStream stream)", "class_method_signature": "DataFrameBuilder.foldLongStreamByColumn(LongStream stream)", "testcase": false, "constructor": false}, {"identifier": "foldLongStreamByColumn", "parameters": "(long padWith, LongStream stream)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldLongStreamByColumn(long padWith, LongStream stream)", "full_signature": "public DataFrame foldLongStreamByColumn(long padWith, LongStream stream)", "class_method_signature": "DataFrameBuilder.foldLongStreamByColumn(long padWith, LongStream stream)", "testcase": false, "constructor": false}, {"identifier": "foldDoubleByColumn", "parameters": "(double padWith, double... data)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldDoubleByColumn(double padWith, double... data)", "full_signature": "public DataFrame foldDoubleByColumn(double padWith, double... data)", "class_method_signature": "DataFrameBuilder.foldDoubleByColumn(double padWith, double... data)", "testcase": false, "constructor": false}, {"identifier": "foldDoubleStreamByRow", "parameters": "(DoubleStream stream)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldDoubleStreamByRow(DoubleStream stream)", "full_signature": "public DataFrame foldDoubleStreamByRow(DoubleStream stream)", "class_method_signature": "DataFrameBuilder.foldDoubleStreamByRow(DoubleStream stream)", "testcase": false, "constructor": false}, {"identifier": "foldDoubleStreamByRow", "parameters": "(double padWith, DoubleStream stream)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldDoubleStreamByRow(double padWith, DoubleStream stream)", "full_signature": "public DataFrame foldDoubleStreamByRow(double padWith, DoubleStream stream)", "class_method_signature": "DataFrameBuilder.foldDoubleStreamByRow(double padWith, DoubleStream stream)", "testcase": false, "constructor": false}, {"identifier": "foldDoubleStreamByColumn", "parameters": "(DoubleStream stream)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldDoubleStreamByColumn(DoubleStream stream)", "full_signature": "public DataFrame foldDoubleStreamByColumn(DoubleStream stream)", "class_method_signature": "DataFrameBuilder.foldDoubleStreamByColumn(DoubleStream stream)", "testcase": false, "constructor": false}, {"identifier": "foldDoubleStreamByColumn", "parameters": "(double padWith, DoubleStream stream)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame foldDoubleStreamByColumn(double padWith, DoubleStream stream)", "full_signature": "public DataFrame foldDoubleStreamByColumn(double padWith, DoubleStream stream)", "class_method_signature": "DataFrameBuilder.foldDoubleStreamByColumn(double padWith, DoubleStream stream)", "testcase": false, "constructor": false}, {"identifier": "toCollection", "parameters": "(Iterable<T> iterable)", "modifiers": "private", "return": "Collection<T>", "signature": "Collection<T> toCollection(Iterable<T> iterable)", "full_signature": "private Collection<T> toCollection(Iterable<T> iterable)", "class_method_signature": "DataFrameBuilder.toCollection(Iterable<T> iterable)", "testcase": false, "constructor": false}, {"identifier": "fromColumnarData", "parameters": "(Object[][] columnarData)", "modifiers": "protected", "return": "DataFrame", "signature": "DataFrame fromColumnarData(Object[][] columnarData)", "full_signature": "protected DataFrame fromColumnarData(Object[][] columnarData)", "class_method_signature": "DataFrameBuilder.fromColumnarData(Object[][] columnarData)", "testcase": false, "constructor": false}, {"identifier": "byColumnGeometry", "parameters": "(int dataLength)", "modifiers": "", "return": "FoldByColumnGeometry", "signature": "FoldByColumnGeometry byColumnGeometry(int dataLength)", "full_signature": " FoldByColumnGeometry byColumnGeometry(int dataLength)", "class_method_signature": "DataFrameBuilder.byColumnGeometry(int dataLength)", "testcase": false, "constructor": false}], "file": "dflib/src/main/java/com/nhl/dflib/DataFrameBuilder.java"}, "focal_method": {"identifier": "foldDoubleStreamByRow", "parameters": "(DoubleStream stream)", "modifiers": "public", "return": "DataFrame", "body": "public DataFrame foldDoubleStreamByRow(DoubleStream stream) {\n        return foldDoubleStreamByRow(0., stream);\n    }", "signature": "DataFrame foldDoubleStreamByRow(DoubleStream stream)", "full_signature": "public DataFrame foldDoubleStreamByRow(DoubleStream stream)", "class_method_signature": "DataFrameBuilder.foldDoubleStreamByRow(DoubleStream stream)", "testcase": false, "constructor": false, "invocations": ["foldDoubleStreamByRow"]}, "repository": {"repo_id": 164392211, "url": "https://github.com/nhl/dflib", "stars": 13, "created": "1/7/2019 7:07:58 AM +00:00", "updates": "2019-12-23T13:26:53+00:00", "fork": "False", "license": "licensed"}}