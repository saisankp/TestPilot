{"test_class": {"identifier": "RetrieveThingsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JsonArray THING_IDS = JsonFactory.newArrayBuilder()\n            .add(TestConstants.Thing.THING_ID.toString())\n            .add(TestConstants.Thing.THING_ID.getNamespace() + \":AnotherThingId\")\n            .build();", "modifier": "private static final", "type": "JsonArray", "declarator": "THING_IDS = JsonFactory.newArrayBuilder()\n            .add(TestConstants.Thing.THING_ID.toString())\n            .add(TestConstants.Thing.THING_ID.getNamespace() + \":AnotherThingId\")\n            .build()", "var_name": "THING_IDS"}, {"original_string": "private static final JsonArray THING_IDS_WITH_DISTINCT_NAMESPACE = JsonFactory.newArrayBuilder()\n            .add(TestConstants.Thing.THING_ID.toString())\n            .add(TestConstants.Thing.THING_ID + \"1\")\n            .add(TestConstants.Thing.THING_ID + \"2\")\n            .build();", "modifier": "private static final", "type": "JsonArray", "declarator": "THING_IDS_WITH_DISTINCT_NAMESPACE = JsonFactory.newArrayBuilder()\n            .add(TestConstants.Thing.THING_ID.toString())\n            .add(TestConstants.Thing.THING_ID + \"1\")\n            .add(TestConstants.Thing.THING_ID + \"2\")\n            .build()", "var_name": "THING_IDS_WITH_DISTINCT_NAMESPACE"}, {"original_string": "private static final String SELECTED_FIELDS = \"field1,field2,field3\";", "modifier": "private static final", "type": "String", "declarator": "SELECTED_FIELDS = \"field1,field2,field3\"", "var_name": "SELECTED_FIELDS"}, {"original_string": "private static final JsonObject KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(ThingCommand.JsonFields.TYPE, RetrieveThings.TYPE)\n            .set(RetrieveThings.JSON_THING_IDS, THING_IDS)\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(ThingCommand.JsonFields.TYPE, RetrieveThings.TYPE)\n            .set(RetrieveThings.JSON_THING_IDS, THING_IDS)\n            .build()", "var_name": "KNOWN_JSON"}, {"original_string": "private static final JsonObject KNOWN_JSON_WITH_DISTINCT_NAMESPACE = JsonFactory.newObjectBuilder()\n            .set(ThingCommand.JsonFields.TYPE, RetrieveThings.TYPE)\n            .set(RetrieveThings.JSON_THING_IDS, THING_IDS_WITH_DISTINCT_NAMESPACE)\n            .set(RetrieveThings.JSON_NAMESPACE, \"example.com\")\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_JSON_WITH_DISTINCT_NAMESPACE = JsonFactory.newObjectBuilder()\n            .set(ThingCommand.JsonFields.TYPE, RetrieveThings.TYPE)\n            .set(RetrieveThings.JSON_THING_IDS, THING_IDS_WITH_DISTINCT_NAMESPACE)\n            .set(RetrieveThings.JSON_NAMESPACE, \"example.com\")\n            .build()", "var_name": "KNOWN_JSON_WITH_DISTINCT_NAMESPACE"}, {"original_string": "private static final JsonObject KNOWN_JSON_WITH_FIELD_SELECTION = JsonFactory.newObjectBuilder()\n            .set(ThingCommand.JsonFields.TYPE, RetrieveThings.TYPE)\n            .set(RetrieveThings.JSON_THING_IDS, THING_IDS)\n            .set(RetrieveThings.JSON_SELECTED_FIELDS, SELECTED_FIELDS)\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_JSON_WITH_FIELD_SELECTION = JsonFactory.newObjectBuilder()\n            .set(ThingCommand.JsonFields.TYPE, RetrieveThings.TYPE)\n            .set(RetrieveThings.JSON_THING_IDS, THING_IDS)\n            .set(RetrieveThings.JSON_SELECTED_FIELDS, SELECTED_FIELDS)\n            .build()", "var_name": "KNOWN_JSON_WITH_FIELD_SELECTION"}, {"original_string": "private static final JsonParseOptions JSON_PARSE_OPTIONS =\n            JsonFactory.newParseOptionsBuilder().withoutUrlDecoding().build();", "modifier": "private static final", "type": "JsonParseOptions", "declarator": "JSON_PARSE_OPTIONS =\n            JsonFactory.newParseOptionsBuilder().withoutUrlDecoding().build()", "var_name": "JSON_PARSE_OPTIONS"}], "file": "signals/commands/things/src/test/java/org/eclipse/ditto/signals/commands/things/query/RetrieveThingsTest.java"}, "test_case": {"identifier": "initializationWithoutThingIdsThrowsMissingThingIdsException", "parameters": "()", "modifiers": "@Test(expected = MissingThingIdsException.class) public", "return": "void", "body": "@Test(expected = MissingThingIdsException.class)\n    public void initializationWithoutThingIdsThrowsMissingThingIdsException(){\n        RetrieveThings.getBuilder(Collections.emptyList()).build();\n    }", "signature": "void initializationWithoutThingIdsThrowsMissingThingIdsException()", "full_signature": "@Test(expected = MissingThingIdsException.class) public void initializationWithoutThingIdsThrowsMissingThingIdsException()", "class_method_signature": "RetrieveThingsTest.initializationWithoutThingIdsThrowsMissingThingIdsException()", "testcase": true, "constructor": false, "invocations": ["build", "getBuilder", "emptyList"]}, "focal_class": {"identifier": "RetrieveThings", "superclass": "extends AbstractCommand<RetrieveThings>", "interfaces": "implements ThingQueryCommand<RetrieveThings>, WithNamespace", "fields": [{"original_string": "public static final String NAME = \"retrieveThings\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"retrieveThings\"", "var_name": "NAME"}, {"original_string": "public static final String TYPE = TYPE_PREFIX + NAME;", "modifier": "public static final", "type": "String", "declarator": "TYPE = TYPE_PREFIX + NAME", "var_name": "TYPE"}, {"original_string": "public static final JsonFieldDefinition<JsonArray> JSON_THING_IDS =\n            JsonFactory.newJsonArrayFieldDefinition(\"thingIds\", FieldType.REGULAR, JsonSchemaVersion.V_1,\n                    JsonSchemaVersion.V_2);", "modifier": "public static final", "type": "JsonFieldDefinition<JsonArray>", "declarator": "JSON_THING_IDS =\n            JsonFactory.newJsonArrayFieldDefinition(\"thingIds\", FieldType.REGULAR, JsonSchemaVersion.V_1,\n                    JsonSchemaVersion.V_2)", "var_name": "JSON_THING_IDS"}, {"original_string": "static final JsonFieldDefinition<String> JSON_SELECTED_FIELDS =\n            JsonFactory.newStringFieldDefinition(\"selectedFields\", FieldType.REGULAR, JsonSchemaVersion.V_1,\n                    JsonSchemaVersion.V_2);", "modifier": "static final", "type": "JsonFieldDefinition<String>", "declarator": "JSON_SELECTED_FIELDS =\n            JsonFactory.newStringFieldDefinition(\"selectedFields\", FieldType.REGULAR, JsonSchemaVersion.V_1,\n                    JsonSchemaVersion.V_2)", "var_name": "JSON_SELECTED_FIELDS"}, {"original_string": "static final JsonFieldDefinition<String> JSON_NAMESPACE =\n            JsonFactory.newStringFieldDefinition(\"namespace\", FieldType.REGULAR, JsonSchemaVersion.V_1,\n                    JsonSchemaVersion.V_2);", "modifier": "static final", "type": "JsonFieldDefinition<String>", "declarator": "JSON_NAMESPACE =\n            JsonFactory.newStringFieldDefinition(\"namespace\", FieldType.REGULAR, JsonSchemaVersion.V_1,\n                    JsonSchemaVersion.V_2)", "var_name": "JSON_NAMESPACE"}, {"original_string": "private final List<ThingId> thingIds;", "modifier": "private final", "type": "List<ThingId>", "declarator": "thingIds", "var_name": "thingIds"}, {"original_string": "@Nullable private final JsonFieldSelector selectedFields;", "modifier": "@Nullable private final", "type": "JsonFieldSelector", "declarator": "selectedFields", "var_name": "selectedFields"}, {"original_string": "@Nullable private final String namespace;", "modifier": "@Nullable private final", "type": "String", "declarator": "namespace", "var_name": "namespace"}], "methods": [{"identifier": "RetrieveThings", "parameters": "(final Builder builder)", "modifiers": "private", "return": "", "signature": " RetrieveThings(final Builder builder)", "full_signature": "private  RetrieveThings(final Builder builder)", "class_method_signature": "RetrieveThings.RetrieveThings(final Builder builder)", "testcase": false, "constructor": true}, {"identifier": "RetrieveThings", "parameters": "(final List<ThingId> thingIds,\n            @Nullable final JsonFieldSelector selectedFields,\n            @Nullable final String namespace,\n            final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "", "signature": " RetrieveThings(final List<ThingId> thingIds,\n            @Nullable final JsonFieldSelector selectedFields,\n            @Nullable final String namespace,\n            final DittoHeaders dittoHeaders)", "full_signature": "private  RetrieveThings(final List<ThingId> thingIds,\n            @Nullable final JsonFieldSelector selectedFields,\n            @Nullable final String namespace,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "RetrieveThings.RetrieveThings(final List<ThingId> thingIds,\n            @Nullable final JsonFieldSelector selectedFields,\n            @Nullable final String namespace,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": true}, {"identifier": "checkForDistinctNamespace", "parameters": "(@Nullable final String providedNamespace,\n            final Collection<ThingId> thingIds)", "modifiers": "@Nullable private static", "return": "String", "signature": "String checkForDistinctNamespace(@Nullable final String providedNamespace,\n            final Collection<ThingId> thingIds)", "full_signature": "@Nullable private static String checkForDistinctNamespace(@Nullable final String providedNamespace,\n            final Collection<ThingId> thingIds)", "class_method_signature": "RetrieveThings.checkForDistinctNamespace(@Nullable final String providedNamespace,\n            final Collection<ThingId> thingIds)", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "(final String... thingIds)", "modifiers": "@Deprecated public static", "return": "Builder", "signature": "Builder getBuilder(final String... thingIds)", "full_signature": "@Deprecated public static Builder getBuilder(final String... thingIds)", "class_method_signature": "RetrieveThings.getBuilder(final String... thingIds)", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "(final ThingId... thingIds)", "modifiers": "public static", "return": "Builder", "signature": "Builder getBuilder(final ThingId... thingIds)", "full_signature": "public static Builder getBuilder(final ThingId... thingIds)", "class_method_signature": "RetrieveThings.getBuilder(final ThingId... thingIds)", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "(final List<ThingId> thingIds)", "modifiers": "public static", "return": "Builder", "signature": "Builder getBuilder(final List<ThingId> thingIds)", "full_signature": "public static Builder getBuilder(final List<ThingId> thingIds)", "class_method_signature": "RetrieveThings.getBuilder(final List<ThingId> thingIds)", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "(final RetrieveThings retrieveThings)", "modifiers": "public static", "return": "Builder", "signature": "Builder getBuilder(final RetrieveThings retrieveThings)", "full_signature": "public static Builder getBuilder(final RetrieveThings retrieveThings)", "class_method_signature": "RetrieveThings.getBuilder(final RetrieveThings retrieveThings)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final String jsonString, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "RetrieveThings", "signature": "RetrieveThings fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "full_signature": "public static RetrieveThings fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "class_method_signature": "RetrieveThings.fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "RetrieveThings", "signature": "RetrieveThings fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "full_signature": "public static RetrieveThings fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "class_method_signature": "RetrieveThings.fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getThingIds", "parameters": "()", "modifiers": "@Deprecated public", "return": "List<String>", "signature": "List<String> getThingIds()", "full_signature": "@Deprecated public List<String> getThingIds()", "class_method_signature": "RetrieveThings.getThingIds()", "testcase": false, "constructor": false}, {"identifier": "getThingEntityIds", "parameters": "()", "modifiers": "public", "return": "List<ThingId>", "signature": "List<ThingId> getThingEntityIds()", "full_signature": "public List<ThingId> getThingEntityIds()", "class_method_signature": "RetrieveThings.getThingEntityIds()", "testcase": false, "constructor": false}, {"identifier": "getNamespace", "parameters": "()", "modifiers": "@Override public", "return": "Optional<String>", "signature": "Optional<String> getNamespace()", "full_signature": "@Override public Optional<String> getNamespace()", "class_method_signature": "RetrieveThings.getNamespace()", "testcase": false, "constructor": false}, {"identifier": "getSelectedFields", "parameters": "()", "modifiers": "@Override public", "return": "Optional<JsonFieldSelector>", "signature": "Optional<JsonFieldSelector> getSelectedFields()", "full_signature": "@Override public Optional<JsonFieldSelector> getSelectedFields()", "class_method_signature": "RetrieveThings.getSelectedFields()", "testcase": false, "constructor": false}, {"identifier": "getThingEntityId", "parameters": "()", "modifiers": "@Override public", "return": "ThingId", "signature": "ThingId getThingEntityId()", "full_signature": "@Override public ThingId getThingEntityId()", "class_method_signature": "RetrieveThings.getThingEntityId()", "testcase": false, "constructor": false}, {"identifier": "getResourcePath", "parameters": "()", "modifiers": "@Override public", "return": "JsonPointer", "signature": "JsonPointer getResourcePath()", "full_signature": "@Override public JsonPointer getResourcePath()", "class_method_signature": "RetrieveThings.getResourcePath()", "testcase": false, "constructor": false}, {"identifier": "appendPayload", "parameters": "(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "modifiers": "@Override protected", "return": "void", "signature": "void appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "full_signature": "@Override protected void appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "class_method_signature": "RetrieveThings.appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "setDittoHeaders", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "@Override public", "return": "RetrieveThings", "signature": "RetrieveThings setDittoHeaders(final DittoHeaders dittoHeaders)", "full_signature": "@Override public RetrieveThings setDittoHeaders(final DittoHeaders dittoHeaders)", "class_method_signature": "RetrieveThings.setDittoHeaders(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "RetrieveThings.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object obj)", "modifiers": "@SuppressWarnings({\"squid:MethodCyclomaticComplexity\", \"squid:S1067\", \"pmd:SimplifyConditional\"}) @Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object obj)", "full_signature": "@SuppressWarnings({\"squid:MethodCyclomaticComplexity\", \"squid:S1067\", \"pmd:SimplifyConditional\"}) @Override public boolean equals(@Nullable final Object obj)", "class_method_signature": "RetrieveThings.equals(@Nullable final Object obj)", "testcase": false, "constructor": false}, {"identifier": "canEqual", "parameters": "(@Nullable final Object other)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean canEqual(@Nullable final Object other)", "full_signature": "@Override protected boolean canEqual(@Nullable final Object other)", "class_method_signature": "RetrieveThings.canEqual(@Nullable final Object other)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "RetrieveThings.toString()", "testcase": false, "constructor": false}], "file": "signals/commands/things/src/main/java/org/eclipse/ditto/signals/commands/things/query/RetrieveThings.java"}, "focal_method": {"identifier": "getBuilder", "parameters": "(final String... thingIds)", "modifiers": "@Deprecated public static", "return": "Builder", "body": "@Deprecated\n    public static Builder getBuilder(final String... thingIds) {\n        final List<ThingId> thingIdList = Arrays.stream(checkNotNull(thingIds, \"thing ids\"))\n                .map(ThingId::of)\n                .collect(Collectors.toList());\n        return new Builder(thingIdList);\n    }", "signature": "Builder getBuilder(final String... thingIds)", "full_signature": "@Deprecated public static Builder getBuilder(final String... thingIds)", "class_method_signature": "RetrieveThings.getBuilder(final String... thingIds)", "testcase": false, "constructor": false, "invocations": ["collect", "map", "stream", "checkNotNull", "toList"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}