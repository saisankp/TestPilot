{"test_class": {"identifier": "SensitivityValueTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final double EPSILON_COMPARISON = 1e-5;", "modifier": "private static final", "type": "double", "declarator": "EPSILON_COMPARISON = 1e-5", "var_name": "EPSILON_COMPARISON"}, {"original_string": "@Rule\n    public ExpectedException exception = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "exception = ExpectedException.none()", "var_name": "exception"}], "file": "sensitivity-analysis-api/src/test/java/com/powsybl/sensitivity/SensitivityValueTest.java"}, "test_case": {"identifier": "getVariableReference", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getVariableReference() {\n        SensitivityValue sensitivityValue = new SensitivityValue(Mockito.mock(SensitivityFactor.class), 1.f, 2.f, 3.f);\n        assertEquals(3.f, sensitivityValue.getVariableReference(), EPSILON_COMPARISON);\n    }", "signature": "void getVariableReference()", "full_signature": "@Test public void getVariableReference()", "class_method_signature": "SensitivityValueTest.getVariableReference()", "testcase": true, "constructor": false, "invocations": ["mock", "assertEquals", "getVariableReference"]}, "focal_class": {"identifier": "SensitivityValue", "superclass": "", "interfaces": "", "fields": [{"original_string": "@JsonProperty(\"factor\")\n    private final SensitivityFactor sensitivityFactor;", "modifier": "@JsonProperty(\"factor\")\n    private final", "type": "SensitivityFactor", "declarator": "sensitivityFactor", "var_name": "sensitivityFactor"}, {"original_string": "@JsonProperty(\"value\")\n    private final double value;", "modifier": "@JsonProperty(\"value\")\n    private final", "type": "double", "declarator": "value", "var_name": "value"}, {"original_string": "@JsonProperty(\"functionReference\")\n    private final double functionReference;", "modifier": "@JsonProperty(\"functionReference\")\n    private final", "type": "double", "declarator": "functionReference", "var_name": "functionReference"}, {"original_string": "@JsonProperty(\"variableReference\")\n    private final double variableReference;", "modifier": "@JsonProperty(\"variableReference\")\n    private final", "type": "double", "declarator": "variableReference", "var_name": "variableReference"}], "methods": [{"identifier": "SensitivityValue", "parameters": "(@JsonProperty(\"factor\") SensitivityFactor sensitivityFactor,\n                            @JsonProperty(\"value\") double value,\n                            @JsonProperty(\"functionReference\") double functionReference,\n                            @JsonProperty(\"variableReference\") double variableReference)", "modifiers": "@JsonCreator public", "return": "", "signature": " SensitivityValue(@JsonProperty(\"factor\") SensitivityFactor sensitivityFactor,\n                            @JsonProperty(\"value\") double value,\n                            @JsonProperty(\"functionReference\") double functionReference,\n                            @JsonProperty(\"variableReference\") double variableReference)", "full_signature": "@JsonCreator public  SensitivityValue(@JsonProperty(\"factor\") SensitivityFactor sensitivityFactor,\n                            @JsonProperty(\"value\") double value,\n                            @JsonProperty(\"functionReference\") double functionReference,\n                            @JsonProperty(\"variableReference\") double variableReference)", "class_method_signature": "SensitivityValue.SensitivityValue(@JsonProperty(\"factor\") SensitivityFactor sensitivityFactor,\n                            @JsonProperty(\"value\") double value,\n                            @JsonProperty(\"functionReference\") double functionReference,\n                            @JsonProperty(\"variableReference\") double variableReference)", "testcase": false, "constructor": true}, {"identifier": "getFactor", "parameters": "()", "modifiers": "public", "return": "SensitivityFactor", "signature": "SensitivityFactor getFactor()", "full_signature": "public SensitivityFactor getFactor()", "class_method_signature": "SensitivityValue.getFactor()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getValue()", "full_signature": "public double getValue()", "class_method_signature": "SensitivityValue.getValue()", "testcase": false, "constructor": false}, {"identifier": "getFunctionReference", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getFunctionReference()", "full_signature": "public double getFunctionReference()", "class_method_signature": "SensitivityValue.getFunctionReference()", "testcase": false, "constructor": false}, {"identifier": "getVariableReference", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getVariableReference()", "full_signature": "public double getVariableReference()", "class_method_signature": "SensitivityValue.getVariableReference()", "testcase": false, "constructor": false}], "file": "sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/SensitivityValue.java"}, "focal_method": {"identifier": "getVariableReference", "parameters": "()", "modifiers": "public", "return": "double", "body": "public double getVariableReference() {\n        return variableReference;\n    }", "signature": "double getVariableReference()", "full_signature": "public double getVariableReference()", "class_method_signature": "SensitivityValue.getVariableReference()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}