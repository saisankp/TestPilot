{"test_class": {"identifier": "BasicAuthenticatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "client/java/src/test/java/org/jolokia/client/BasicAuthenticatorTest.java"}, "test_case": {"identifier": "testPreemptive", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPreemptive() throws Exception {\n        J4pAuthenticator auth = new BasicAuthenticator().preemptive();\n        HttpClientBuilder builder = HttpClientBuilder.create();\n        auth.authenticate(builder, \"test\", \"test\");\n        builder.build();\n    }", "signature": "void testPreemptive()", "full_signature": "@Test public void testPreemptive()", "class_method_signature": "BasicAuthenticatorTest.testPreemptive()", "testcase": true, "constructor": false, "invocations": ["preemptive", "create", "authenticate", "build"]}, "focal_class": {"identifier": "BasicAuthenticator", "superclass": "", "interfaces": "implements J4pAuthenticator", "fields": [{"original_string": "private boolean preemptive = false;", "modifier": "private", "type": "boolean", "declarator": "preemptive = false", "var_name": "preemptive"}], "methods": [{"identifier": "BasicAuthenticator", "parameters": "()", "modifiers": "public", "return": "", "signature": " BasicAuthenticator()", "full_signature": "public  BasicAuthenticator()", "class_method_signature": "BasicAuthenticator.BasicAuthenticator()", "testcase": false, "constructor": true}, {"identifier": "BasicAuthenticator", "parameters": "(boolean pPreemptive)", "modifiers": "public", "return": "", "signature": " BasicAuthenticator(boolean pPreemptive)", "full_signature": "public  BasicAuthenticator(boolean pPreemptive)", "class_method_signature": "BasicAuthenticator.BasicAuthenticator(boolean pPreemptive)", "testcase": false, "constructor": true}, {"identifier": "preemptive", "parameters": "()", "modifiers": "public", "return": "J4pAuthenticator", "signature": "J4pAuthenticator preemptive()", "full_signature": "public J4pAuthenticator preemptive()", "class_method_signature": "BasicAuthenticator.preemptive()", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(HttpClientBuilder pBuilder, String pUser, String pPassword)", "modifiers": "public", "return": "void", "signature": "void authenticate(HttpClientBuilder pBuilder, String pUser, String pPassword)", "full_signature": "public void authenticate(HttpClientBuilder pBuilder, String pUser, String pPassword)", "class_method_signature": "BasicAuthenticator.authenticate(HttpClientBuilder pBuilder, String pUser, String pPassword)", "testcase": false, "constructor": false}], "file": "client/java/src/main/java/org/jolokia/client/BasicAuthenticator.java"}, "focal_method": {"identifier": "preemptive", "parameters": "()", "modifiers": "public", "return": "J4pAuthenticator", "body": "public J4pAuthenticator preemptive() {\n        preemptive = true;\n        return this;\n    }", "signature": "J4pAuthenticator preemptive()", "full_signature": "public J4pAuthenticator preemptive()", "class_method_signature": "BasicAuthenticator.preemptive()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 777444, "url": "https://github.com/rhuss/jolokia", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 682, "size": 20451, "license": "licensed"}}