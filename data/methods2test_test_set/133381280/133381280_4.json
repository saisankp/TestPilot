{"test_class": {"identifier": "MetricImporterUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "gateway/metrics/pipeline/src/test/java/com/alipay/sofa/lookout/gateway/metrics/pipeline/common/MetricImporterUtilsTest.java"}, "test_case": {"identifier": "testResolveExtraTagsFromRequestHeaders", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testResolveExtraTagsFromRequestHeaders() {\n        HttpHeaders headers = new HttpHeaders();\n        headers.add(\"app\", \"demo\");\n        ServerRequest req = MockServerRequest.builder().headers(headers).build();\n        Map<String, String> map = new HashMap<>();\n        MetricImporterUtils.resolveExtraTagsFromRequestHeaders(req, map);\n        Assert.assertEquals(\"demo\", map.get(\"app\"));\n    }", "signature": "void testResolveExtraTagsFromRequestHeaders()", "full_signature": "@Test public void testResolveExtraTagsFromRequestHeaders()", "class_method_signature": "MetricImporterUtilsTest.testResolveExtraTagsFromRequestHeaders()", "testcase": true, "constructor": false, "invocations": ["add", "build", "headers", "builder", "resolveExtraTagsFromRequestHeaders", "assertEquals", "get"]}, "focal_class": {"identifier": "MetricImporterUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "MetricImporterUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " MetricImporterUtils()", "full_signature": "private  MetricImporterUtils()", "class_method_signature": "MetricImporterUtils.MetricImporterUtils()", "testcase": false, "constructor": true}, {"identifier": "validExtraTags", "parameters": "(Map<String, String> extraTags)", "modifiers": "public static", "return": "void", "signature": "void validExtraTags(Map<String, String> extraTags)", "full_signature": "public static void validExtraTags(Map<String, String> extraTags)", "class_method_signature": "MetricImporterUtils.validExtraTags(Map<String, String> extraTags)", "testcase": false, "constructor": false}, {"identifier": "mergeWithExtraTags", "parameters": "(Metric metric, Map<String, String> extraTags)", "modifiers": "public static", "return": "Metric", "signature": "Metric mergeWithExtraTags(Metric metric, Map<String, String> extraTags)", "full_signature": "public static Metric mergeWithExtraTags(Metric metric, Map<String, String> extraTags)", "class_method_signature": "MetricImporterUtils.mergeWithExtraTags(Metric metric, Map<String, String> extraTags)", "testcase": false, "constructor": false}, {"identifier": "resolveExtraTagsFromURI", "parameters": "(String baseURIPath, String requestURI,\n                                               Map<String, String> map)", "modifiers": "public static", "return": "void", "signature": "void resolveExtraTagsFromURI(String baseURIPath, String requestURI,\n                                               Map<String, String> map)", "full_signature": "public static void resolveExtraTagsFromURI(String baseURIPath, String requestURI,\n                                               Map<String, String> map)", "class_method_signature": "MetricImporterUtils.resolveExtraTagsFromURI(String baseURIPath, String requestURI,\n                                               Map<String, String> map)", "testcase": false, "constructor": false}, {"identifier": "resolveExtraTagsFromRequestHeaders", "parameters": "(ServerRequest request,\n                                                                         Map<String, String> map)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> resolveExtraTagsFromRequestHeaders(ServerRequest request,\n                                                                         Map<String, String> map)", "full_signature": "public static Map<String, String> resolveExtraTagsFromRequestHeaders(ServerRequest request,\n                                                                         Map<String, String> map)", "class_method_signature": "MetricImporterUtils.resolveExtraTagsFromRequestHeaders(ServerRequest request,\n                                                                         Map<String, String> map)", "testcase": false, "constructor": false}], "file": "gateway/metrics/pipeline/src/main/java/com/alipay/sofa/lookout/gateway/metrics/pipeline/common/MetricImporterUtils.java"}, "focal_method": {"identifier": "resolveExtraTagsFromRequestHeaders", "parameters": "(ServerRequest request,\n                                                                         Map<String, String> map)", "modifiers": "public static", "return": "Map<String, String>", "body": "public static Map<String, String> resolveExtraTagsFromRequestHeaders(ServerRequest request,\n                                                                         Map<String, String> map) {\n        Preconditions.checkNotNull(request);\n        String app = WebfluxUtils.getHeaderValue(request, \"app\");\n        if (app != null) {\n            map.put(\"app\", app);\n        }\n\n        String clientIp = WebfluxUtils.getHeaderValue(request, \"ip\");\n        if (clientIp != null) {\n            map.put(\"ip\", clientIp);\n        }\n\n        String step = WebfluxUtils.getHeaderValue(request, \"step\");\n        if (step != null) {\n            map.put(\"step\", step);\n        }\n        return map;\n    }", "signature": "Map<String, String> resolveExtraTagsFromRequestHeaders(ServerRequest request,\n                                                                         Map<String, String> map)", "full_signature": "public static Map<String, String> resolveExtraTagsFromRequestHeaders(ServerRequest request,\n                                                                         Map<String, String> map)", "class_method_signature": "MetricImporterUtils.resolveExtraTagsFromRequestHeaders(ServerRequest request,\n                                                                         Map<String, String> map)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "getHeaderValue", "put", "getHeaderValue", "put", "getHeaderValue", "put"]}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}