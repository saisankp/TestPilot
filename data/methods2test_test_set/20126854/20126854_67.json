{"test_class": {"identifier": "ByteArrayHolderTest", "superclass": "", "interfaces": "", "fields": [], "file": "feya/libraries/archive_diff/diff.generator/src/test/java/com/google/archivepatcher/generator/ByteArrayHolderTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEquals() {\n    byte[] data1a = \"hello world\".getBytes();\n    byte[] data1b = new String(\"hello world\").getBytes();\n    byte[] data2 = \"hello another world\".getBytes();\n    ByteArrayHolder rawText1a = new ByteArrayHolder(data1a);\n    Assert.assertEquals(rawText1a, rawText1a);\n    ByteArrayHolder rawText1b = new ByteArrayHolder(data1b);\n    Assert.assertEquals(rawText1a, rawText1b);\n    ByteArrayHolder rawText2 = new ByteArrayHolder(data2);\n    Assert.assertNotEquals(rawText1a, rawText2);\n    ByteArrayHolder rawText3 = new ByteArrayHolder(null);\n    Assert.assertNotEquals(rawText1a, rawText3);\n    Assert.assertNotEquals(rawText3, rawText1a);\n    Assert.assertNotEquals(rawText1a, 42);\n    Assert.assertNotEquals(rawText1a, null);\n  }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "ByteArrayHolderTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["getBytes", "getBytes", "getBytes", "assertEquals", "assertEquals", "assertNotEquals", "assertNotEquals", "assertNotEquals", "assertNotEquals", "assertNotEquals"]}, "focal_class": {"identifier": "ByteArrayHolder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final byte[] data;", "modifier": "private final", "type": "byte[]", "declarator": "data", "var_name": "data"}], "methods": [{"identifier": "ByteArrayHolder", "parameters": "(byte[] data)", "modifiers": "public", "return": "", "signature": " ByteArrayHolder(byte[] data)", "full_signature": "public  ByteArrayHolder(byte[] data)", "class_method_signature": "ByteArrayHolder.ByteArrayHolder(byte[] data)", "testcase": false, "constructor": true}, {"identifier": "getData", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getData()", "full_signature": "public byte[] getData()", "class_method_signature": "ByteArrayHolder.getData()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ByteArrayHolder.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "ByteArrayHolder.equals(Object obj)", "testcase": false, "constructor": false}], "file": "feya/libraries/archive_diff/diff.generator/src/main/java/com/google/archivepatcher/generator/ByteArrayHolder.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (obj == null) return false;\n    if (getClass() != obj.getClass()) return false;\n    ByteArrayHolder other = (ByteArrayHolder) obj;\n    if (!Arrays.equals(data, other.data)) return false;\n    return true;\n  }", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "ByteArrayHolder.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "equals"]}, "repository": {"repo_id": 20126854, "url": "https://github.com/kaedea/Feya", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 12, "size": 7798, "license": "licensed"}}