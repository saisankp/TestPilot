{"test_class": {"identifier": "DebugChemObjectBuilderTest", "superclass": "extends AbstractChemObjectBuilderTest", "interfaces": "", "fields": [], "file": "base/datadebug/src/test/java/org/openscience/cdk/debug/DebugChemObjectBuilderTest.java"}, "test_case": {"identifier": "testGetInstance", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetInstance() {\n        Object builder = DebugChemObjectBuilder.getInstance();\n        Assert.assertNotNull(builder);\n        Assert.assertTrue(builder instanceof IChemObjectBuilder);\n        Assert.assertTrue(builder instanceof DebugChemObjectBuilder);\n    }", "signature": "void testGetInstance()", "full_signature": "@Test public void testGetInstance()", "class_method_signature": "DebugChemObjectBuilderTest.testGetInstance()", "testcase": true, "constructor": false, "invocations": ["getInstance", "assertNotNull", "assertTrue", "assertTrue"]}, "focal_class": {"identifier": "DebugChemObjectBuilder", "superclass": "", "interfaces": "implements IChemObjectBuilder", "fields": [{"original_string": "private static volatile IChemObjectBuilder instance = null;", "modifier": "private static volatile", "type": "IChemObjectBuilder", "declarator": "instance = null", "var_name": "instance"}, {"original_string": "private static final Object                LOCK     = new Object();", "modifier": "private static final", "type": "Object", "declarator": "LOCK     = new Object()", "var_name": "LOCK"}, {"original_string": "private final DynamicFactory               factory  = new DynamicFactory(200);", "modifier": "private final", "type": "DynamicFactory", "declarator": "factory  = new DynamicFactory(200)", "var_name": "factory"}], "methods": [{"identifier": "DebugChemObjectBuilder", "parameters": "()", "modifiers": "private", "return": "", "signature": " DebugChemObjectBuilder()", "full_signature": "private  DebugChemObjectBuilder()", "class_method_signature": "DebugChemObjectBuilder.DebugChemObjectBuilder()", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "IChemObjectBuilder", "signature": "IChemObjectBuilder getInstance()", "full_signature": "public static IChemObjectBuilder getInstance()", "class_method_signature": "DebugChemObjectBuilder.getInstance()", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(Class<T> clazz, Object... params)", "modifiers": "@Override public", "return": "T", "signature": "T newInstance(Class<T> clazz, Object... params)", "full_signature": "@Override public T newInstance(Class<T> clazz, Object... params)", "class_method_signature": "DebugChemObjectBuilder.newInstance(Class<T> clazz, Object... params)", "testcase": false, "constructor": false}, {"identifier": "newAtom", "parameters": "()", "modifiers": "@Override public", "return": "IAtom", "signature": "IAtom newAtom()", "full_signature": "@Override public IAtom newAtom()", "class_method_signature": "DebugChemObjectBuilder.newAtom()", "testcase": false, "constructor": false}, {"identifier": "newBond", "parameters": "()", "modifiers": "@Override public", "return": "IBond", "signature": "IBond newBond()", "full_signature": "@Override public IBond newBond()", "class_method_signature": "DebugChemObjectBuilder.newBond()", "testcase": false, "constructor": false}, {"identifier": "newAtomContainer", "parameters": "()", "modifiers": "@Override public", "return": "IAtomContainer", "signature": "IAtomContainer newAtomContainer()", "full_signature": "@Override public IAtomContainer newAtomContainer()", "class_method_signature": "DebugChemObjectBuilder.newAtomContainer()", "testcase": false, "constructor": false}], "file": "base/datadebug/src/main/java/org/openscience/cdk/debug/DebugChemObjectBuilder.java"}, "focal_method": {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "IChemObjectBuilder", "body": "public static IChemObjectBuilder getInstance() {\n        IChemObjectBuilder result = instance;\n        if (result == null) {\n            result = instance;\n            synchronized (LOCK) {\n                if (result == null) {\n                    instance = result = new DebugChemObjectBuilder();\n                }\n            }\n        }\n        return result;\n    }", "signature": "IChemObjectBuilder getInstance()", "full_signature": "public static IChemObjectBuilder getInstance()", "class_method_signature": "DebugChemObjectBuilder.getInstance()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}