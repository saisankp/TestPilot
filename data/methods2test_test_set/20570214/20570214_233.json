{"test_class": {"identifier": "KeyTypeManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ByteString TEST_BYTESTRING = ByteString.copyFromUtf8(\"Some text\");", "modifier": "private static final", "type": "ByteString", "declarator": "TEST_BYTESTRING = ByteString.copyFromUtf8(\"Some text\")", "var_name": "TEST_BYTESTRING"}], "file": "java_src/src/test/java/com/google/crypto/tink/KeyTypeManagerTest.java"}, "test_case": {"identifier": "firstSupportedPrimitiveClass_returnsVoid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void firstSupportedPrimitiveClass_returnsVoid() throws Exception {\n    KeyTypeManager<AesGcmKey> keyManager = new TestKeyTypeManager();\n    assertThat(keyManager.firstSupportedPrimitiveClass()).isEqualTo(Void.class);\n  }", "signature": "void firstSupportedPrimitiveClass_returnsVoid()", "full_signature": "@Test public void firstSupportedPrimitiveClass_returnsVoid()", "class_method_signature": "KeyTypeManagerTest.firstSupportedPrimitiveClass_returnsVoid()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "firstSupportedPrimitiveClass"]}, "focal_class": {"identifier": "KeyTypeManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Class<KeyProtoT> clazz;", "modifier": "private final", "type": "Class<KeyProtoT>", "declarator": "clazz", "var_name": "clazz"}, {"original_string": "private final Map<Class<?>, PrimitiveFactory<?, KeyProtoT>> factories;", "modifier": "private final", "type": "Map<Class<?>, PrimitiveFactory<?, KeyProtoT>>", "declarator": "factories", "var_name": "factories"}, {"original_string": "private final Class<?> firstPrimitiveClass;", "modifier": "private final", "type": "Class<?>", "declarator": "firstPrimitiveClass", "var_name": "firstPrimitiveClass"}], "methods": [{"identifier": "KeyTypeManager", "parameters": "(Class<KeyProtoT> clazz, PrimitiveFactory<?, KeyProtoT>... factories)", "modifiers": "@SafeVarargs // Safe because we do not reference the array (see Effective Java ed. 3, Item 32). protected", "return": "", "signature": " KeyTypeManager(Class<KeyProtoT> clazz, PrimitiveFactory<?, KeyProtoT>... factories)", "full_signature": "@SafeVarargs // Safe because we do not reference the array (see Effective Java ed. 3, Item 32). protected  KeyTypeManager(Class<KeyProtoT> clazz, PrimitiveFactory<?, KeyProtoT>... factories)", "class_method_signature": "KeyTypeManager.KeyTypeManager(Class<KeyProtoT> clazz, PrimitiveFactory<?, KeyProtoT>... factories)", "testcase": false, "constructor": true}, {"identifier": "getKeyClass", "parameters": "()", "modifiers": "public final", "return": "Class<KeyProtoT>", "signature": "Class<KeyProtoT> getKeyClass()", "full_signature": "public final Class<KeyProtoT> getKeyClass()", "class_method_signature": "KeyTypeManager.getKeyClass()", "testcase": false, "constructor": false}, {"identifier": "getKeyType", "parameters": "()", "modifiers": "public abstract", "return": "String", "signature": "String getKeyType()", "full_signature": "public abstract String getKeyType()", "class_method_signature": "KeyTypeManager.getKeyType()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public abstract", "return": "int", "signature": "int getVersion()", "full_signature": "public abstract int getVersion()", "class_method_signature": "KeyTypeManager.getVersion()", "testcase": false, "constructor": false}, {"identifier": "keyMaterialType", "parameters": "()", "modifiers": "public abstract", "return": "KeyMaterialType", "signature": "KeyMaterialType keyMaterialType()", "full_signature": "public abstract KeyMaterialType keyMaterialType()", "class_method_signature": "KeyTypeManager.keyMaterialType()", "testcase": false, "constructor": false}, {"identifier": "parseKey", "parameters": "(ByteString byteString)", "modifiers": "public abstract", "return": "KeyProtoT", "signature": "KeyProtoT parseKey(ByteString byteString)", "full_signature": "public abstract KeyProtoT parseKey(ByteString byteString)", "class_method_signature": "KeyTypeManager.parseKey(ByteString byteString)", "testcase": false, "constructor": false}, {"identifier": "validateKey", "parameters": "(KeyProtoT keyProto)", "modifiers": "public abstract", "return": "void", "signature": "void validateKey(KeyProtoT keyProto)", "full_signature": "public abstract void validateKey(KeyProtoT keyProto)", "class_method_signature": "KeyTypeManager.validateKey(KeyProtoT keyProto)", "testcase": false, "constructor": false}, {"identifier": "getPrimitive", "parameters": "(KeyProtoT key, Class<P> primitiveClass)", "modifiers": "public final", "return": "P", "signature": "P getPrimitive(KeyProtoT key, Class<P> primitiveClass)", "full_signature": "public final P getPrimitive(KeyProtoT key, Class<P> primitiveClass)", "class_method_signature": "KeyTypeManager.getPrimitive(KeyProtoT key, Class<P> primitiveClass)", "testcase": false, "constructor": false}, {"identifier": "supportedPrimitives", "parameters": "()", "modifiers": "public final", "return": "Set<Class<?>>", "signature": "Set<Class<?>> supportedPrimitives()", "full_signature": "public final Set<Class<?>> supportedPrimitives()", "class_method_signature": "KeyTypeManager.supportedPrimitives()", "testcase": false, "constructor": false}, {"identifier": "firstSupportedPrimitiveClass", "parameters": "()", "modifiers": "final", "return": "Class<?>", "signature": "Class<?> firstSupportedPrimitiveClass()", "full_signature": "final Class<?> firstSupportedPrimitiveClass()", "class_method_signature": "KeyTypeManager.firstSupportedPrimitiveClass()", "testcase": false, "constructor": false}, {"identifier": "keyFactory", "parameters": "()", "modifiers": "public", "return": "KeyFactory<?, KeyProtoT>", "signature": "KeyFactory<?, KeyProtoT> keyFactory()", "full_signature": "public KeyFactory<?, KeyProtoT> keyFactory()", "class_method_signature": "KeyTypeManager.keyFactory()", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/KeyTypeManager.java"}, "focal_method": {"identifier": "firstSupportedPrimitiveClass", "parameters": "()", "modifiers": "final", "return": "Class<?>", "body": "final Class<?> firstSupportedPrimitiveClass() {\n    return firstPrimitiveClass;\n  }", "signature": "Class<?> firstSupportedPrimitiveClass()", "full_signature": "final Class<?> firstSupportedPrimitiveClass()", "class_method_signature": "KeyTypeManager.firstSupportedPrimitiveClass()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}