{"test_class": {"identifier": "InfoWindowConfigTest", "superclass": "", "interfaces": "", "fields": [], "file": "utils/src/test/java/io/ona/kujaku/utils/config/InfoWindowConfigTest.java"}, "test_case": {"identifier": "testConstructor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConstructor() throws JSONException, InvalidMapBoxStyleException {\n        // Test invalid visible property JSONObject\n        try {\n            JSONObject visProperties = new JSONObject();\n            visProperties.put(InfoWindowConfig.KEY_VP_LABEL, \"\");\n            visProperties.put(InfoWindowConfig.KEY_VP_ID, \"id\");\n            JSONArray array1 = new JSONArray();\n            array1.put(visProperties);\n            JSONObject object1 = new JSONObject();\n            object1.put(InfoWindowConfig.KEY_VISIBLE_PROPERTIES, array1);\n            new InfoWindowConfig(object1);\n            Assert.fail(\"InvalidMapBoxStyleException not thrown for an incorrect visible property\");\n        } catch (InvalidMapBoxStyleException e) {\n\n        }\n\n        // Test constructor using JSONObject\n        JSONObject visProperties = new JSONObject();\n        String label = \"label1\";\n        String id = \"id1\";\n        visProperties.put(InfoWindowConfig.KEY_VP_LABEL, label);\n        visProperties.put(InfoWindowConfig.KEY_VP_ID, id);\n        JSONArray array2 = new JSONArray();\n        array2.put(visProperties);\n        JSONObject object2 = new JSONObject();\n        object2.put(InfoWindowConfig.KEY_VISIBLE_PROPERTIES, array2);\n        InfoWindowConfig config1 = new InfoWindowConfig(object2);\n        Assert.assertEquals(config1.getVisibleProperties().length(), 1);\n        Assert.assertEquals(config1.getVisibleProperties()\n                .getJSONObject(0).getString(InfoWindowConfig.KEY_VP_ID), id);\n        Assert.assertEquals(config1.getVisibleProperties()\n                .getJSONObject(0).getString(InfoWindowConfig.KEY_VP_LABEL), label);\n    }", "signature": "void testConstructor()", "full_signature": "@Test public void testConstructor()", "class_method_signature": "InfoWindowConfigTest.testConstructor()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "fail", "put", "put", "put", "put", "assertEquals", "length", "getVisibleProperties", "assertEquals", "getString", "getJSONObject", "getVisibleProperties", "assertEquals", "getString", "getJSONObject", "getVisibleProperties"]}, "focal_class": {"identifier": "InfoWindowConfig", "superclass": "", "interfaces": "implements Config", "fields": [{"original_string": "public static final String KEY_VISIBLE_PROPERTIES = \"visible_properties\";", "modifier": "public static final", "type": "String", "declarator": "KEY_VISIBLE_PROPERTIES = \"visible_properties\"", "var_name": "KEY_VISIBLE_PROPERTIES"}, {"original_string": "public static final String KEY_VP_ID = \"id\";", "modifier": "public static final", "type": "String", "declarator": "KEY_VP_ID = \"id\"", "var_name": "KEY_VP_ID"}, {"original_string": "public static final String KEY_VP_LABEL = \"label\";", "modifier": "public static final", "type": "String", "declarator": "KEY_VP_LABEL = \"label\"", "var_name": "KEY_VP_LABEL"}, {"original_string": "private JSONArray visibleProperties;", "modifier": "private", "type": "JSONArray", "declarator": "visibleProperties", "var_name": "visibleProperties"}], "methods": [{"identifier": "InfoWindowConfig", "parameters": "()", "modifiers": "public", "return": "", "signature": " InfoWindowConfig()", "full_signature": "public  InfoWindowConfig()", "class_method_signature": "InfoWindowConfig.InfoWindowConfig()", "testcase": false, "constructor": true}, {"identifier": "InfoWindowConfig", "parameters": "(JSONObject config)", "modifiers": "public", "return": "", "signature": " InfoWindowConfig(JSONObject config)", "full_signature": "public  InfoWindowConfig(JSONObject config)", "class_method_signature": "InfoWindowConfig.InfoWindowConfig(JSONObject config)", "testcase": false, "constructor": true}, {"identifier": "getVisibleProperties", "parameters": "()", "modifiers": "public", "return": "JSONArray", "signature": "JSONArray getVisibleProperties()", "full_signature": "public JSONArray getVisibleProperties()", "class_method_signature": "InfoWindowConfig.getVisibleProperties()", "testcase": false, "constructor": false}, {"identifier": "setVisibleProperties", "parameters": "(@NonNull JSONArray visibleProperties)", "modifiers": "public", "return": "void", "signature": "void setVisibleProperties(@NonNull JSONArray visibleProperties)", "full_signature": "public void setVisibleProperties(@NonNull JSONArray visibleProperties)", "class_method_signature": "InfoWindowConfig.setVisibleProperties(@NonNull JSONArray visibleProperties)", "testcase": false, "constructor": false}, {"identifier": "addVisibleProperty", "parameters": "(@NonNull String id, @NonNull String label)", "modifiers": "public", "return": "void", "signature": "void addVisibleProperty(@NonNull String id, @NonNull String label)", "full_signature": "public void addVisibleProperty(@NonNull String id, @NonNull String label)", "class_method_signature": "InfoWindowConfig.addVisibleProperty(@NonNull String id, @NonNull String label)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isValid()", "full_signature": "@Override public boolean isValid()", "class_method_signature": "InfoWindowConfig.isValid()", "testcase": false, "constructor": false}, {"identifier": "toJsonObject", "parameters": "()", "modifiers": "@Override public", "return": "JSONObject", "signature": "JSONObject toJsonObject()", "full_signature": "@Override public JSONObject toJsonObject()", "class_method_signature": "InfoWindowConfig.toJsonObject()", "testcase": false, "constructor": false}], "file": "utils/src/main/java/io/ona/kujaku/utils/config/InfoWindowConfig.java"}, "focal_method": {"identifier": "getVisibleProperties", "parameters": "()", "modifiers": "public", "return": "JSONArray", "body": "public JSONArray getVisibleProperties() {\n        return visibleProperties;\n    }", "signature": "JSONArray getVisibleProperties()", "full_signature": "public JSONArray getVisibleProperties()", "class_method_signature": "InfoWindowConfig.getVisibleProperties()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 109667968, "url": "https://github.com/onaio/kujaku", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 4778, "license": "licensed"}}