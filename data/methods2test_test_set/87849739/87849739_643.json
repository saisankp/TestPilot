{"test_class": {"identifier": "SecretTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String KNOWN_NAME = \"foo\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_NAME = \"foo\"", "var_name": "KNOWN_NAME"}, {"original_string": "private static final String KNOWN_VALUE = \"bar\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_VALUE = \"bar\"", "var_name": "KNOWN_VALUE"}], "file": "services/utils/config/src/test/java/org/eclipse/ditto/services/utils/config/raw/SecretTest.java"}, "test_case": {"identifier": "tryToCreateNewInstanceWithNullName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tryToCreateNewInstanceWithNullName() {\n        assertThatNullPointerException()\n                .isThrownBy(() -> Secret.newInstance(null, KNOWN_VALUE))\n                .withMessage(\"The Secret name must not be null!\")\n                .withNoCause();\n    }", "signature": "void tryToCreateNewInstanceWithNullName()", "full_signature": "@Test public void tryToCreateNewInstanceWithNullName()", "class_method_signature": "SecretTest.tryToCreateNewInstanceWithNullName()", "testcase": true, "constructor": false, "invocations": ["withNoCause", "withMessage", "isThrownBy", "assertThatNullPointerException", "newInstance"]}, "focal_class": {"identifier": "Secret", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String SECRET_NAME = \"name\";", "modifier": "static final", "type": "String", "declarator": "SECRET_NAME = \"name\"", "var_name": "SECRET_NAME"}, {"original_string": "private static final String SECRET_VALUE = \"value\";", "modifier": "private static final", "type": "String", "declarator": "SECRET_VALUE = \"value\"", "var_name": "SECRET_VALUE"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final String value;", "modifier": "private final", "type": "String", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "Secret", "parameters": "(final String name, final String value)", "modifiers": "private", "return": "", "signature": " Secret(final String name, final String value)", "full_signature": "private  Secret(final String name, final String value)", "class_method_signature": "Secret.Secret(final String name, final String value)", "testcase": false, "constructor": true}, {"identifier": "newInstance", "parameters": "(final String key, final String value)", "modifiers": "static", "return": "Secret", "signature": "Secret newInstance(final String key, final String value)", "full_signature": "static Secret newInstance(final String key, final String value)", "class_method_signature": "Secret.newInstance(final String key, final String value)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getName()", "full_signature": " String getName()", "class_method_signature": "Secret.getName()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getValue()", "full_signature": " String getValue()", "class_method_signature": "Secret.getValue()", "testcase": false, "constructor": false}, {"identifier": "toConfig", "parameters": "()", "modifiers": "", "return": "Config", "signature": "Config toConfig()", "full_signature": " Config toConfig()", "class_method_signature": "Secret.toConfig()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "Secret.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Secret.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Secret.toString()", "testcase": false, "constructor": false}], "file": "services/utils/config/src/main/java/org/eclipse/ditto/services/utils/config/raw/Secret.java"}, "focal_method": {"identifier": "newInstance", "parameters": "(final String key, final String value)", "modifiers": "static", "return": "Secret", "body": "static Secret newInstance(final String key, final String value) {\n        return new Secret(key, value);\n    }", "signature": "Secret newInstance(final String key, final String value)", "full_signature": "static Secret newInstance(final String key, final String value)", "class_method_signature": "Secret.newInstance(final String key, final String value)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}