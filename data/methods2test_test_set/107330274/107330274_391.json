{"test_class": {"identifier": "FederationV2CapacityGroupResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ApplicationSLA CELL_1_CAPACITY_GROUP = ApplicationSlaSample.CriticalLarge.build();", "modifier": "private static final", "type": "ApplicationSLA", "declarator": "CELL_1_CAPACITY_GROUP = ApplicationSlaSample.CriticalLarge.build()", "var_name": "CELL_1_CAPACITY_GROUP"}, {"original_string": "private static final ApplicationSLA CELL_2_CAPACITY_GROUP = ApplicationSlaSample.CriticalSmall.build();", "modifier": "private static final", "type": "ApplicationSLA", "declarator": "CELL_2_CAPACITY_GROUP = ApplicationSlaSample.CriticalSmall.build()", "var_name": "CELL_2_CAPACITY_GROUP"}, {"original_string": "private static final Cell CELL_1 = new Cell(\"cell1\", \"hostname1:7001\");", "modifier": "private static final", "type": "Cell", "declarator": "CELL_1 = new Cell(\"cell1\", \"hostname1:7001\")", "var_name": "CELL_1"}, {"original_string": "private static final Cell CELL_2 = new Cell(\"cell2\", \"hostname1:7001\");", "modifier": "private static final", "type": "Cell", "declarator": "CELL_2 = new Cell(\"cell2\", \"hostname1:7001\")", "var_name": "CELL_2"}, {"original_string": "private MockWebServer cell1Server = new MockWebServer();", "modifier": "private", "type": "MockWebServer", "declarator": "cell1Server = new MockWebServer()", "var_name": "cell1Server"}, {"original_string": "private MockWebServer cell2Server = new MockWebServer();", "modifier": "private", "type": "MockWebServer", "declarator": "cell2Server = new MockWebServer()", "var_name": "cell2Server"}, {"original_string": "private final CellWebClientConnector webClientConnector = Mockito.mock(CellWebClientConnector.class);", "modifier": "private final", "type": "CellWebClientConnector", "declarator": "webClientConnector = Mockito.mock(CellWebClientConnector.class)", "var_name": "webClientConnector"}, {"original_string": "private final FederationV2CapacityGroupResource resource = new FederationV2CapacityGroupResource(\n            Archaius2Ext.newConfiguration(EndpointConfiguration.class),\n            webClientConnector\n    );", "modifier": "private final", "type": "FederationV2CapacityGroupResource", "declarator": "resource = new FederationV2CapacityGroupResource(\n            Archaius2Ext.newConfiguration(EndpointConfiguration.class),\n            webClientConnector\n    )", "var_name": "resource"}], "file": "titus-server-federation/src/test/java/com/netflix/titus/federation/endpoint/rest/FederationV2CapacityGroupResourceTest.java"}, "test_case": {"identifier": "testGetCapacityGroupSystemError", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetCapacityGroupSystemError() throws IOException {\n        cell1Server.shutdown();\n        try {\n            resource.getApplicationSLA(\"myFakeCapacityGroup\", false);\n        } catch (WebApplicationException e) {\n            assertThat(e.getResponse().getStatus()).isEqualTo(500);\n        }\n    }", "signature": "void testGetCapacityGroupSystemError()", "full_signature": "@Test public void testGetCapacityGroupSystemError()", "class_method_signature": "FederationV2CapacityGroupResourceTest.testGetCapacityGroupSystemError()", "testcase": true, "constructor": false, "invocations": ["shutdown", "getApplicationSLA", "isEqualTo", "assertThat", "getStatus", "getResponse"]}, "focal_class": {"identifier": "FederationV2CapacityGroupResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String BASE_PATH = \"/v2/management/applications\";", "modifier": "public static final", "type": "String", "declarator": "BASE_PATH = \"/v2/management/applications\"", "var_name": "BASE_PATH"}, {"original_string": "public static final String API_PATH = \"/api/v2/management/applications\";", "modifier": "public static final", "type": "String", "declarator": "API_PATH = \"/api/v2/management/applications\"", "var_name": "API_PATH"}, {"original_string": "private static final ParameterizedTypeReference<ApplicationSlaRepresentation> APPLICATION_SLA_TP =\n            ParameterizedTypeReference.forType(ApplicationSlaRepresentation.class);", "modifier": "private static final", "type": "ParameterizedTypeReference<ApplicationSlaRepresentation>", "declarator": "APPLICATION_SLA_TP =\n            ParameterizedTypeReference.forType(ApplicationSlaRepresentation.class)", "var_name": "APPLICATION_SLA_TP"}, {"original_string": "private static final ParameterizedTypeReference<List<ApplicationSlaRepresentation>> APPLICATION_SLA_LIST_TP =\n            new ParameterizedTypeReference<List<ApplicationSlaRepresentation>>() {\n            };", "modifier": "private static final", "type": "ParameterizedTypeReference<List<ApplicationSlaRepresentation>>", "declarator": "APPLICATION_SLA_LIST_TP =\n            new ParameterizedTypeReference<List<ApplicationSlaRepresentation>>() {\n            }", "var_name": "APPLICATION_SLA_LIST_TP"}, {"original_string": "private final EndpointConfiguration configuration;", "modifier": "private final", "type": "EndpointConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private final CellWebClientConnector cellWebClientConnector;", "modifier": "private final", "type": "CellWebClientConnector", "declarator": "cellWebClientConnector", "var_name": "cellWebClientConnector"}], "methods": [{"identifier": "FederationV2CapacityGroupResource", "parameters": "(EndpointConfiguration configuration,\n                                             CellWebClientConnector cellWebClientConnector)", "modifiers": "@Inject public", "return": "", "signature": " FederationV2CapacityGroupResource(EndpointConfiguration configuration,\n                                             CellWebClientConnector cellWebClientConnector)", "full_signature": "@Inject public  FederationV2CapacityGroupResource(EndpointConfiguration configuration,\n                                             CellWebClientConnector cellWebClientConnector)", "class_method_signature": "FederationV2CapacityGroupResource.FederationV2CapacityGroupResource(EndpointConfiguration configuration,\n                                             CellWebClientConnector cellWebClientConnector)", "testcase": false, "constructor": true}, {"identifier": "getApplicationSLAs", "parameters": "(@QueryParam(\"extended\") boolean extended)", "modifiers": "@GET public", "return": "List<ApplicationSlaRepresentation>", "signature": "List<ApplicationSlaRepresentation> getApplicationSLAs(@QueryParam(\"extended\") boolean extended)", "full_signature": "@GET public List<ApplicationSlaRepresentation> getApplicationSLAs(@QueryParam(\"extended\") boolean extended)", "class_method_signature": "FederationV2CapacityGroupResource.getApplicationSLAs(@QueryParam(\"extended\") boolean extended)", "testcase": false, "constructor": false}, {"identifier": "getApplicationSLA", "parameters": "(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended)", "modifiers": "@GET @Path(\"/{applicationName}\") public", "return": "ApplicationSlaRepresentation", "signature": "ApplicationSlaRepresentation getApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended)", "full_signature": "@GET @Path(\"/{applicationName}\") public ApplicationSlaRepresentation getApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended)", "class_method_signature": "FederationV2CapacityGroupResource.getApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended)", "testcase": false, "constructor": false}], "file": "titus-server-federation/src/main/java/com/netflix/titus/federation/endpoint/rest/FederationV2CapacityGroupResource.java"}, "focal_method": {"identifier": "getApplicationSLA", "parameters": "(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended)", "modifiers": "@GET @Path(\"/{applicationName}\") public", "return": "ApplicationSlaRepresentation", "body": "@GET\n    @Path(\"/{applicationName}\")\n    public ApplicationSlaRepresentation getApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended) {\n        Either<ApplicationSlaRepresentation, WebApplicationException> result = CellWebClientConnectorUtil.doGetFromCell(\n                cellWebClientConnector,\n                API_PATH\n                        + '/' + applicationName + \"?extended=\" + extended,\n                APPLICATION_SLA_TP,\n                configuration.getRestRequestTimeoutMs()\n        );\n        if (result.hasError()) {\n            throw result.getError();\n        }\n        return result.getValue();\n    }", "signature": "ApplicationSlaRepresentation getApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended)", "full_signature": "@GET @Path(\"/{applicationName}\") public ApplicationSlaRepresentation getApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended)", "class_method_signature": "FederationV2CapacityGroupResource.getApplicationSLA(@PathParam(\"applicationName\") String applicationName,\n                                                          @QueryParam(\"extended\") boolean extended)", "testcase": false, "constructor": false, "invocations": ["doGetFromCell", "getRestRequestTimeoutMs", "hasError", "getError", "getValue"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}