{"test_class": {"identifier": "PropertiesResourcePropertySourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String testFileName = \"testfile.properties\";", "modifier": "private final", "type": "String", "declarator": "testFileName = \"testfile.properties\"", "var_name": "testFileName"}, {"original_string": "private final URL resource = getClass().getResource(\"/\" + testFileName);", "modifier": "private final", "type": "URL", "declarator": "resource = getClass().getResource(\"/\" + testFileName)", "var_name": "resource"}], "file": "code/spi-support/src/test/java/org/apache/tamaya/spisupport/propertysource/PropertiesResourcePropertySourceTest.java"}, "test_case": {"identifier": "testBasicConstructor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBasicConstructor() {\n        PropertiesResourcePropertySource source = new PropertiesResourcePropertySource(resource);\n        assertThat(source).isNotNull();\n        assertThat(source.getProperties()).hasSize(5).containsKey(\"key1\"); // double the getNumChilds for .source values.\n    }", "signature": "void testBasicConstructor()", "full_signature": "@Test public void testBasicConstructor()", "class_method_signature": "PropertiesResourcePropertySourceTest.testBasicConstructor()", "testcase": true, "constructor": false, "invocations": ["isNotNull", "assertThat", "containsKey", "hasSize", "assertThat", "getProperties"]}, "focal_class": {"identifier": "PropertiesResourcePropertySource", "superclass": "extends BasePropertySource", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(PropertiesResourcePropertySource.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(PropertiesResourcePropertySource.class.getName())", "var_name": "LOGGER"}, {"original_string": "private final PropertySourceChangeSupport cachedProperties = new PropertySourceChangeSupport(\n            ChangeSupport.SUPPORTED, this);", "modifier": "private final", "type": "PropertySourceChangeSupport", "declarator": "cachedProperties = new PropertySourceChangeSupport(\n            ChangeSupport.SUPPORTED, this)", "var_name": "cachedProperties"}], "methods": [{"identifier": "PropertiesResourcePropertySource", "parameters": "(URL url)", "modifiers": "public", "return": "", "signature": " PropertiesResourcePropertySource(URL url)", "full_signature": "public  PropertiesResourcePropertySource(URL url)", "class_method_signature": "PropertiesResourcePropertySource.PropertiesResourcePropertySource(URL url)", "testcase": false, "constructor": true}, {"identifier": "PropertiesResourcePropertySource", "parameters": "(URL url, String prefix)", "modifiers": "public", "return": "", "signature": " PropertiesResourcePropertySource(URL url, String prefix)", "full_signature": "public  PropertiesResourcePropertySource(URL url, String prefix)", "class_method_signature": "PropertiesResourcePropertySource.PropertiesResourcePropertySource(URL url, String prefix)", "testcase": false, "constructor": true}, {"identifier": "PropertiesResourcePropertySource", "parameters": "(String path)", "modifiers": "public", "return": "", "signature": " PropertiesResourcePropertySource(String path)", "full_signature": "public  PropertiesResourcePropertySource(String path)", "class_method_signature": "PropertiesResourcePropertySource.PropertiesResourcePropertySource(String path)", "testcase": false, "constructor": true}, {"identifier": "PropertiesResourcePropertySource", "parameters": "(String path, ClassLoader cl)", "modifiers": "public", "return": "", "signature": " PropertiesResourcePropertySource(String path, ClassLoader cl)", "full_signature": "public  PropertiesResourcePropertySource(String path, ClassLoader cl)", "class_method_signature": "PropertiesResourcePropertySource.PropertiesResourcePropertySource(String path, ClassLoader cl)", "testcase": false, "constructor": true}, {"identifier": "loadProps", "parameters": "(String path, ClassLoader cl)", "modifiers": "private", "return": "Map<String, PropertyValue>", "signature": "Map<String, PropertyValue> loadProps(String path, ClassLoader cl)", "full_signature": "private Map<String, PropertyValue> loadProps(String path, ClassLoader cl)", "class_method_signature": "PropertiesResourcePropertySource.loadProps(String path, ClassLoader cl)", "testcase": false, "constructor": false}, {"identifier": "loadProps", "parameters": "(URL url)", "modifiers": "private", "return": "Map<String, PropertyValue>", "signature": "Map<String, PropertyValue> loadProps(URL url)", "full_signature": "private Map<String, PropertyValue> loadProps(URL url)", "class_method_signature": "PropertiesResourcePropertySource.loadProps(URL url)", "testcase": false, "constructor": false}, {"identifier": "addChangeListener", "parameters": "(BiConsumer<Set<String>, PropertySource> l)", "modifiers": "@Override public", "return": "void", "signature": "void addChangeListener(BiConsumer<Set<String>, PropertySource> l)", "full_signature": "@Override public void addChangeListener(BiConsumer<Set<String>, PropertySource> l)", "class_method_signature": "PropertiesResourcePropertySource.addChangeListener(BiConsumer<Set<String>, PropertySource> l)", "testcase": false, "constructor": false}, {"identifier": "removeChangeListener", "parameters": "(BiConsumer<Set<String>, PropertySource> l)", "modifiers": "@Override public", "return": "void", "signature": "void removeChangeListener(BiConsumer<Set<String>, PropertySource> l)", "full_signature": "@Override public void removeChangeListener(BiConsumer<Set<String>, PropertySource> l)", "class_method_signature": "PropertiesResourcePropertySource.removeChangeListener(BiConsumer<Set<String>, PropertySource> l)", "testcase": false, "constructor": false}, {"identifier": "removeAllChangeListeners", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void removeAllChangeListeners()", "full_signature": "@Override public void removeAllChangeListeners()", "class_method_signature": "PropertiesResourcePropertySource.removeAllChangeListeners()", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, PropertyValue>", "signature": "Map<String, PropertyValue> getProperties()", "full_signature": "@Override public Map<String, PropertyValue> getProperties()", "class_method_signature": "PropertiesResourcePropertySource.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getVersion()", "full_signature": "@Override public String getVersion()", "class_method_signature": "PropertiesResourcePropertySource.getVersion()", "testcase": false, "constructor": false}, {"identifier": "getChangeSupport", "parameters": "()", "modifiers": "@Override public", "return": "ChangeSupport", "signature": "ChangeSupport getChangeSupport()", "full_signature": "@Override public ChangeSupport getChangeSupport()", "class_method_signature": "PropertiesResourcePropertySource.getChangeSupport()", "testcase": false, "constructor": false}], "file": "code/spi-support/src/main/java/org/apache/tamaya/spisupport/propertysource/PropertiesResourcePropertySource.java"}, "focal_method": {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, PropertyValue>", "body": "@Override\n    public Map<String, PropertyValue> getProperties() {\n        return cachedProperties.getProperties();\n    }", "signature": "Map<String, PropertyValue> getProperties()", "full_signature": "@Override public Map<String, PropertyValue> getProperties()", "class_method_signature": "PropertiesResourcePropertySource.getProperties()", "testcase": false, "constructor": false, "invocations": ["getProperties"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}