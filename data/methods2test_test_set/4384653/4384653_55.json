{"test_class": {"identifier": "ClaraTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private InputStream xml;", "modifier": "private", "type": "InputStream", "declarator": "xml", "var_name": "xml"}, {"original_string": "private Controller controller;", "modifier": "private", "type": "Controller", "declarator": "controller", "var_name": "controller"}, {"original_string": "private AttributeFilter firstFilter;", "modifier": "private", "type": "AttributeFilter", "declarator": "firstFilter", "var_name": "firstFilter"}, {"original_string": "private AttributeFilter secondFilter;", "modifier": "private", "type": "AttributeFilter", "declarator": "secondFilter", "var_name": "secondFilter"}], "file": "clara/src/test/java/org/vaadin/teemu/clara/ClaraTest.java"}, "test_case": {"identifier": "testFindComponentById_componentDoesntExistInTree_nullReturned", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFindComponentById_componentDoesntExistInTree_nullReturned() {\n        @SuppressWarnings(\"serial\")\n        Layout layout = new VerticalLayout() {\n            {\n                Button b = new Button();\n                b.setId(\"button\");\n                addComponent(b);\n            }\n        };\n        Component c = Clara.findComponentById(layout, \"foobar\");\n        assertNull(c);\n    }", "signature": "void testFindComponentById_componentDoesntExistInTree_nullReturned()", "full_signature": "@Test public void testFindComponentById_componentDoesntExistInTree_nullReturned()", "class_method_signature": "ClaraTest.testFindComponentById_componentDoesntExistInTree_nullReturned()", "testcase": true, "constructor": false, "invocations": ["setId", "addComponent", "findComponentById", "assertNull"]}, "focal_class": {"identifier": "Clara", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "build", "parameters": "()", "modifiers": "public static", "return": "ClaraBuilder", "signature": "ClaraBuilder build()", "full_signature": "public static ClaraBuilder build()", "class_method_signature": "Clara.build()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(InputStream xml)", "modifiers": "public static", "return": "Component", "signature": "Component create(InputStream xml)", "full_signature": "public static Component create(InputStream xml)", "class_method_signature": "Clara.create(InputStream xml)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(InputStream xml,\n            ComponentProvider... componentProviders)", "modifiers": "public static", "return": "Component", "signature": "Component create(InputStream xml,\n            ComponentProvider... componentProviders)", "full_signature": "public static Component create(InputStream xml,\n            ComponentProvider... componentProviders)", "class_method_signature": "Clara.create(InputStream xml,\n            ComponentProvider... componentProviders)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(InputStream xml, Object controller,\n            AttributeFilter... attributeFilters)", "modifiers": "public static", "return": "Component", "signature": "Component create(InputStream xml, Object controller,\n            AttributeFilter... attributeFilters)", "full_signature": "public static Component create(InputStream xml, Object controller,\n            AttributeFilter... attributeFilters)", "class_method_signature": "Clara.create(InputStream xml, Object controller,\n            AttributeFilter... attributeFilters)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(InputStream xml, Object controller,\n            List<ComponentProvider> componentProviders,\n            AttributeFilter... attributeFilters)", "modifiers": "public static", "return": "Component", "signature": "Component create(InputStream xml, Object controller,\n            List<ComponentProvider> componentProviders,\n            AttributeFilter... attributeFilters)", "full_signature": "public static Component create(InputStream xml, Object controller,\n            List<ComponentProvider> componentProviders,\n            AttributeFilter... attributeFilters)", "class_method_signature": "Clara.create(InputStream xml, Object controller,\n            List<ComponentProvider> componentProviders,\n            AttributeFilter... attributeFilters)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String xmlClassResourceFileName,\n            Object controller, AttributeFilter... attributeFilters)", "modifiers": "public static", "return": "Component", "signature": "Component create(String xmlClassResourceFileName,\n            Object controller, AttributeFilter... attributeFilters)", "full_signature": "public static Component create(String xmlClassResourceFileName,\n            Object controller, AttributeFilter... attributeFilters)", "class_method_signature": "Clara.create(String xmlClassResourceFileName,\n            Object controller, AttributeFilter... attributeFilters)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String xmlClassResourceFileName,\n            Object controller, List<ComponentProvider> componentProviders,\n            AttributeFilter... attributeFilters)", "modifiers": "public static", "return": "Component", "signature": "Component create(String xmlClassResourceFileName,\n            Object controller, List<ComponentProvider> componentProviders,\n            AttributeFilter... attributeFilters)", "full_signature": "public static Component create(String xmlClassResourceFileName,\n            Object controller, List<ComponentProvider> componentProviders,\n            AttributeFilter... attributeFilters)", "class_method_signature": "Clara.create(String xmlClassResourceFileName,\n            Object controller, List<ComponentProvider> componentProviders,\n            AttributeFilter... attributeFilters)", "testcase": false, "constructor": false}, {"identifier": "findComponentById", "parameters": "(Component root, String componentId)", "modifiers": "public static", "return": "Component", "signature": "Component findComponentById(Component root, String componentId)", "full_signature": "public static Component findComponentById(Component root, String componentId)", "class_method_signature": "Clara.findComponentById(Component root, String componentId)", "testcase": false, "constructor": false}, {"identifier": "findComponentById", "parameters": "(Component root, String idPrefix,\n            String componentId)", "modifiers": "public static", "return": "Component", "signature": "Component findComponentById(Component root, String idPrefix,\n            String componentId)", "full_signature": "public static Component findComponentById(Component root, String idPrefix,\n            String componentId)", "class_method_signature": "Clara.findComponentById(Component root, String idPrefix,\n            String componentId)", "testcase": false, "constructor": false}], "file": "clara/src/main/java/org/vaadin/teemu/clara/Clara.java"}, "focal_method": {"identifier": "findComponentById", "parameters": "(Component root, String componentId)", "modifiers": "public static", "return": "Component", "body": "public static Component findComponentById(Component root, String componentId) {\n        // Check for null before doing anything.\n        if (componentId == null) {\n            throw new IllegalArgumentException(\"Component id must not be null.\");\n        }\n        if (root == null) {\n            throw new IllegalArgumentException(\n                    \"Root component must not be null.\");\n        }\n\n        // Recursively traverse the whole component tree starting from the given\n        // root component.\n        if (componentId.equals(root.getId())) {\n            return root;\n        } else if (root instanceof HasComponents) {\n            for (Component c : (HasComponents) root) {\n                Component result = findComponentById(c, componentId);\n                if (result != null) {\n                    return result;\n                }\n            }\n        }\n        return null;\n    }", "signature": "Component findComponentById(Component root, String componentId)", "full_signature": "public static Component findComponentById(Component root, String componentId)", "class_method_signature": "Clara.findComponentById(Component root, String componentId)", "testcase": false, "constructor": false, "invocations": ["equals", "getId", "findComponentById"]}, "repository": {"repo_id": 4384653, "url": "https://github.com/tehapo/Clara", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 38, "size": 7395, "license": "licensed"}}