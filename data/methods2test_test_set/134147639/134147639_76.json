{"test_class": {"identifier": "WebAuthnManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "webauthn4j-core/src/test/java/com/webauthn4j/WebAuthnManagerTest.java"}, "test_case": {"identifier": "createNonStrictWebAuthnManager_test", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void createNonStrictWebAuthnManager_test() {\n        assertThat(WebAuthnManager.createNonStrictWebAuthnManager()).isNotNull();\n    }", "signature": "void createNonStrictWebAuthnManager_test()", "full_signature": "@Test void createNonStrictWebAuthnManager_test()", "class_method_signature": "WebAuthnManagerTest.createNonStrictWebAuthnManager_test()", "testcase": true, "constructor": false, "invocations": ["isNotNull", "assertThat", "createNonStrictWebAuthnManager"]}, "focal_class": {"identifier": "WebAuthnManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final WebAuthnRegistrationManager webAuthnRegistrationManager;", "modifier": "private final", "type": "WebAuthnRegistrationManager", "declarator": "webAuthnRegistrationManager", "var_name": "webAuthnRegistrationManager"}, {"original_string": "private final WebAuthnAuthenticationManager webAuthnAuthenticationManager;", "modifier": "private final", "type": "WebAuthnAuthenticationManager", "declarator": "webAuthnAuthenticationManager", "var_name": "webAuthnAuthenticationManager"}], "methods": [{"identifier": "WebAuthnManager", "parameters": "(List<AttestationStatementValidator> attestationStatementValidators,\n                           CertPathTrustworthinessValidator certPathTrustworthinessValidator,\n                           SelfAttestationTrustworthinessValidator selfAttestationTrustworthinessValidator,\n                           List<CustomRegistrationValidator> customRegistrationValidators,\n                           List<CustomAuthenticationValidator> customAuthenticationValidators,\n                           ObjectConverter objectConverter)", "modifiers": "public", "return": "", "signature": " WebAuthnManager(List<AttestationStatementValidator> attestationStatementValidators,\n                           CertPathTrustworthinessValidator certPathTrustworthinessValidator,\n                           SelfAttestationTrustworthinessValidator selfAttestationTrustworthinessValidator,\n                           List<CustomRegistrationValidator> customRegistrationValidators,\n                           List<CustomAuthenticationValidator> customAuthenticationValidators,\n                           ObjectConverter objectConverter)", "full_signature": "public  WebAuthnManager(List<AttestationStatementValidator> attestationStatementValidators,\n                           CertPathTrustworthinessValidator certPathTrustworthinessValidator,\n                           SelfAttestationTrustworthinessValidator selfAttestationTrustworthinessValidator,\n                           List<CustomRegistrationValidator> customRegistrationValidators,\n                           List<CustomAuthenticationValidator> customAuthenticationValidators,\n                           ObjectConverter objectConverter)", "class_method_signature": "WebAuthnManager.WebAuthnManager(List<AttestationStatementValidator> attestationStatementValidators,\n                           CertPathTrustworthinessValidator certPathTrustworthinessValidator,\n                           SelfAttestationTrustworthinessValidator selfAttestationTrustworthinessValidator,\n                           List<CustomRegistrationValidator> customRegistrationValidators,\n                           List<CustomAuthenticationValidator> customAuthenticationValidators,\n                           ObjectConverter objectConverter)", "testcase": false, "constructor": true}, {"identifier": "WebAuthnManager", "parameters": "(List<AttestationStatementValidator> attestationStatementValidators,\n                           CertPathTrustworthinessValidator certPathTrustworthinessValidator,\n                           SelfAttestationTrustworthinessValidator selfAttestationTrustworthinessValidator,\n                           List<CustomRegistrationValidator> customRegistrationValidators,\n                           List<CustomAuthenticationValidator> customAuthenticationValidators)", "modifiers": "public", "return": "", "signature": " WebAuthnManager(List<AttestationStatementValidator> attestationStatementValidators,\n                           CertPathTrustworthinessValidator certPathTrustworthinessValidator,\n                           SelfAttestationTrustworthinessValidator selfAttestationTrustworthinessValidator,\n                           List<CustomRegistrationValidator> customRegistrationValidators,\n                           List<CustomAuthenticationValidator> customAuthenticationValidators)", "full_signature": "public  WebAuthnManager(List<AttestationStatementValidator> attestationStatementValidators,\n                           CertPathTrustworthinessValidator certPathTrustworthinessValidator,\n                           SelfAttestationTrustworthinessValidator selfAttestationTrustworthinessValidator,\n                           List<CustomRegistrationValidator> customRegistrationValidators,\n                           List<CustomAuthenticationValidator> customAuthenticationValidators)", "class_method_signature": "WebAuthnManager.WebAuthnManager(List<AttestationStatementValidator> attestationStatementValidators,\n                           CertPathTrustworthinessValidator certPathTrustworthinessValidator,\n                           SelfAttestationTrustworthinessValidator selfAttestationTrustworthinessValidator,\n                           List<CustomRegistrationValidator> customRegistrationValidators,\n                           List<CustomAuthenticationValidator> customAuthenticationValidators)", "testcase": false, "constructor": true}, {"identifier": "WebAuthnManager", "parameters": "(List<AttestationStatementValidator> attestationStatementValidators,\n                           CertPathTrustworthinessValidator certPathTrustworthinessValidator,\n                           SelfAttestationTrustworthinessValidator selfAttestationTrustworthinessValidator,\n                           ObjectConverter objectConverter)", "modifiers": "public", "return": "", "signature": " WebAuthnManager(List<AttestationStatementValidator> attestationStatementValidators,\n                           CertPathTrustworthinessValidator certPathTrustworthinessValidator,\n                           SelfAttestationTrustworthinessValidator selfAttestationTrustworthinessValidator,\n                           ObjectConverter objectConverter)", "full_signature": "public  WebAuthnManager(List<AttestationStatementValidator> attestationStatementValidators,\n                           CertPathTrustworthinessValidator certPathTrustworthinessValidator,\n                           SelfAttestationTrustworthinessValidator selfAttestationTrustworthinessValidator,\n                           ObjectConverter objectConverter)", "class_method_signature": "WebAuthnManager.WebAuthnManager(List<AttestationStatementValidator> attestationStatementValidators,\n                           CertPathTrustworthinessValidator certPathTrustworthinessValidator,\n                           SelfAttestationTrustworthinessValidator selfAttestationTrustworthinessValidator,\n                           ObjectConverter objectConverter)", "testcase": false, "constructor": true}, {"identifier": "WebAuthnManager", "parameters": "(List<AttestationStatementValidator> attestationStatementValidators,\n                           CertPathTrustworthinessValidator certPathTrustworthinessValidator,\n                           SelfAttestationTrustworthinessValidator selfAttestationTrustworthinessValidator)", "modifiers": "public", "return": "", "signature": " WebAuthnManager(List<AttestationStatementValidator> attestationStatementValidators,\n                           CertPathTrustworthinessValidator certPathTrustworthinessValidator,\n                           SelfAttestationTrustworthinessValidator selfAttestationTrustworthinessValidator)", "full_signature": "public  WebAuthnManager(List<AttestationStatementValidator> attestationStatementValidators,\n                           CertPathTrustworthinessValidator certPathTrustworthinessValidator,\n                           SelfAttestationTrustworthinessValidator selfAttestationTrustworthinessValidator)", "class_method_signature": "WebAuthnManager.WebAuthnManager(List<AttestationStatementValidator> attestationStatementValidators,\n                           CertPathTrustworthinessValidator certPathTrustworthinessValidator,\n                           SelfAttestationTrustworthinessValidator selfAttestationTrustworthinessValidator)", "testcase": false, "constructor": true}, {"identifier": "createNonStrictWebAuthnManager", "parameters": "()", "modifiers": "public static", "return": "WebAuthnManager", "signature": "WebAuthnManager createNonStrictWebAuthnManager()", "full_signature": "public static WebAuthnManager createNonStrictWebAuthnManager()", "class_method_signature": "WebAuthnManager.createNonStrictWebAuthnManager()", "testcase": false, "constructor": false}, {"identifier": "createNonStrictWebAuthnManager", "parameters": "(ObjectConverter objectConverter)", "modifiers": "public static", "return": "WebAuthnManager", "signature": "WebAuthnManager createNonStrictWebAuthnManager(ObjectConverter objectConverter)", "full_signature": "public static WebAuthnManager createNonStrictWebAuthnManager(ObjectConverter objectConverter)", "class_method_signature": "WebAuthnManager.createNonStrictWebAuthnManager(ObjectConverter objectConverter)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(RegistrationRequest registrationRequest)", "modifiers": "@SuppressWarnings(\"squid:S1130\") public", "return": "RegistrationData", "signature": "RegistrationData parse(RegistrationRequest registrationRequest)", "full_signature": "@SuppressWarnings(\"squid:S1130\") public RegistrationData parse(RegistrationRequest registrationRequest)", "class_method_signature": "WebAuthnManager.parse(RegistrationRequest registrationRequest)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(RegistrationRequest registrationRequest, RegistrationParameters registrationParameters)", "modifiers": "@SuppressWarnings(\"squid:S1130\") public", "return": "RegistrationData", "signature": "RegistrationData validate(RegistrationRequest registrationRequest, RegistrationParameters registrationParameters)", "full_signature": "@SuppressWarnings(\"squid:S1130\") public RegistrationData validate(RegistrationRequest registrationRequest, RegistrationParameters registrationParameters)", "class_method_signature": "WebAuthnManager.validate(RegistrationRequest registrationRequest, RegistrationParameters registrationParameters)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(RegistrationData registrationData, RegistrationParameters registrationParameters)", "modifiers": "@SuppressWarnings(\"squid:S1130\") public", "return": "RegistrationData", "signature": "RegistrationData validate(RegistrationData registrationData, RegistrationParameters registrationParameters)", "full_signature": "@SuppressWarnings(\"squid:S1130\") public RegistrationData validate(RegistrationData registrationData, RegistrationParameters registrationParameters)", "class_method_signature": "WebAuthnManager.validate(RegistrationData registrationData, RegistrationParameters registrationParameters)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(AuthenticationRequest authenticationRequest)", "modifiers": "@SuppressWarnings(\"squid:S1130\") public", "return": "AuthenticationData", "signature": "AuthenticationData parse(AuthenticationRequest authenticationRequest)", "full_signature": "@SuppressWarnings(\"squid:S1130\") public AuthenticationData parse(AuthenticationRequest authenticationRequest)", "class_method_signature": "WebAuthnManager.parse(AuthenticationRequest authenticationRequest)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(AuthenticationRequest authenticationRequest, AuthenticationParameters authenticationParameters)", "modifiers": "@SuppressWarnings(\"squid:S1130\") public", "return": "AuthenticationData", "signature": "AuthenticationData validate(AuthenticationRequest authenticationRequest, AuthenticationParameters authenticationParameters)", "full_signature": "@SuppressWarnings(\"squid:S1130\") public AuthenticationData validate(AuthenticationRequest authenticationRequest, AuthenticationParameters authenticationParameters)", "class_method_signature": "WebAuthnManager.validate(AuthenticationRequest authenticationRequest, AuthenticationParameters authenticationParameters)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(AuthenticationData authenticationData, AuthenticationParameters authenticationParameters)", "modifiers": "@SuppressWarnings(\"squid:S1130\") public", "return": "AuthenticationData", "signature": "AuthenticationData validate(AuthenticationData authenticationData, AuthenticationParameters authenticationParameters)", "full_signature": "@SuppressWarnings(\"squid:S1130\") public AuthenticationData validate(AuthenticationData authenticationData, AuthenticationParameters authenticationParameters)", "class_method_signature": "WebAuthnManager.validate(AuthenticationData authenticationData, AuthenticationParameters authenticationParameters)", "testcase": false, "constructor": false}, {"identifier": "getRegistrationDataValidator", "parameters": "()", "modifiers": "public", "return": "RegistrationDataValidator", "signature": "RegistrationDataValidator getRegistrationDataValidator()", "full_signature": "public RegistrationDataValidator getRegistrationDataValidator()", "class_method_signature": "WebAuthnManager.getRegistrationDataValidator()", "testcase": false, "constructor": false}, {"identifier": "getAuthenticationDataValidator", "parameters": "()", "modifiers": "public", "return": "AuthenticationDataValidator", "signature": "AuthenticationDataValidator getAuthenticationDataValidator()", "full_signature": "public AuthenticationDataValidator getAuthenticationDataValidator()", "class_method_signature": "WebAuthnManager.getAuthenticationDataValidator()", "testcase": false, "constructor": false}], "file": "webauthn4j-core/src/main/java/com/webauthn4j/WebAuthnManager.java"}, "focal_method": {"identifier": "createNonStrictWebAuthnManager", "parameters": "()", "modifiers": "public static", "return": "WebAuthnManager", "body": "public static WebAuthnManager createNonStrictWebAuthnManager() {\n        ObjectConverter objectConverter = new ObjectConverter();\n        return createNonStrictWebAuthnManager(objectConverter);\n    }", "signature": "WebAuthnManager createNonStrictWebAuthnManager()", "full_signature": "public static WebAuthnManager createNonStrictWebAuthnManager()", "class_method_signature": "WebAuthnManager.createNonStrictWebAuthnManager()", "testcase": false, "constructor": false, "invocations": ["createNonStrictWebAuthnManager"]}, "repository": {"repo_id": 134147639, "url": "https://github.com/webauthn4j/webauthn4j", "stars": 101, "created": "5/20/2018 12:14:36 PM +00:00", "updates": "2020-01-27T13:01:46+00:00", "fork": "False", "license": "licensed"}}