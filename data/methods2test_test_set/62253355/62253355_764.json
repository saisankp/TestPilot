{"test_class": {"identifier": "GroupRestTest", "superclass": "extends MobiRestTestNg", "interfaces": "", "fields": [{"original_string": "private GroupRest rest;", "modifier": "private", "type": "GroupRest", "declarator": "rest", "var_name": "rest"}, {"original_string": "private ValueFactory vf;", "modifier": "private", "type": "ValueFactory", "declarator": "vf", "var_name": "vf"}, {"original_string": "private OrmFactory<User> userFactory;", "modifier": "private", "type": "OrmFactory<User>", "declarator": "userFactory", "var_name": "userFactory"}, {"original_string": "private OrmFactory<Group> groupFactory;", "modifier": "private", "type": "OrmFactory<Group>", "declarator": "groupFactory", "var_name": "groupFactory"}, {"original_string": "private OrmFactory<Role> roleFactory;", "modifier": "private", "type": "OrmFactory<Role>", "declarator": "roleFactory", "var_name": "roleFactory"}, {"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private Group group;", "modifier": "private", "type": "Group", "declarator": "group", "var_name": "group"}, {"original_string": "private Role role;", "modifier": "private", "type": "Role", "declarator": "role", "var_name": "role"}, {"original_string": "private Set<User> users;", "modifier": "private", "type": "Set<User>", "declarator": "users", "var_name": "users"}, {"original_string": "private Set<Group> groups;", "modifier": "private", "type": "Set<Group>", "declarator": "groups", "var_name": "groups"}, {"original_string": "private Set<Role> roles;", "modifier": "private", "type": "Set<Role>", "declarator": "roles", "var_name": "roles"}, {"original_string": "private static final String ENGINE_NAME = \"com.mobi.jaas.engines.RdfEngine\";", "modifier": "private static final", "type": "String", "declarator": "ENGINE_NAME = \"com.mobi.jaas.engines.RdfEngine\"", "var_name": "ENGINE_NAME"}, {"original_string": "@Mock\n    private EngineManager engineManager;", "modifier": "@Mock\n    private", "type": "EngineManager", "declarator": "engineManager", "var_name": "engineManager"}, {"original_string": "@Mock\n    private RdfEngine rdfEngine;", "modifier": "@Mock\n    private", "type": "RdfEngine", "declarator": "rdfEngine", "var_name": "rdfEngine"}, {"original_string": "@Mock\n    private SesameTransformer transformer;", "modifier": "@Mock\n    private", "type": "SesameTransformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "@Mock\n    private GroupFactory groupFactoryMock;", "modifier": "@Mock\n    private", "type": "GroupFactory", "declarator": "groupFactoryMock", "var_name": "groupFactoryMock"}], "file": "com.mobi.jaas.rest/src/test/java/com/mobi/jaas/rest/GroupRestTest.java"}, "test_case": {"identifier": "deleteGroupTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void deleteGroupTest() {\n        Response response = target().path(\"groups/testGroup\").request().delete();\n        assertEquals(response.getStatus(), 200);\n        verify(engineManager).deleteGroup(ENGINE_NAME, \"testGroup\");\n    }", "signature": "void deleteGroupTest()", "full_signature": "@Test public void deleteGroupTest()", "class_method_signature": "GroupRestTest.deleteGroupTest()", "testcase": true, "constructor": false, "invocations": ["delete", "request", "path", "target", "assertEquals", "getStatus", "deleteGroup", "verify"]}, "focal_class": {"identifier": "GroupRest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EngineManager engineManager;", "modifier": "private", "type": "EngineManager", "declarator": "engineManager", "var_name": "engineManager"}, {"original_string": "private ValueFactory vf;", "modifier": "private", "type": "ValueFactory", "declarator": "vf", "var_name": "vf"}, {"original_string": "private UserFactory userFactory;", "modifier": "private", "type": "UserFactory", "declarator": "userFactory", "var_name": "userFactory"}, {"original_string": "private GroupFactory groupFactory;", "modifier": "private", "type": "GroupFactory", "declarator": "groupFactory", "var_name": "groupFactory"}, {"original_string": "private SesameTransformer transformer;", "modifier": "private", "type": "SesameTransformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "private Engine rdfEngine;", "modifier": "private", "type": "Engine", "declarator": "rdfEngine", "var_name": "rdfEngine"}, {"original_string": "private final Logger logger = LoggerFactory.getLogger(GroupRest.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(GroupRest.class)", "var_name": "logger"}], "methods": [{"identifier": "setEngineManager", "parameters": "(EngineManager engineManager)", "modifiers": "@Reference", "return": "void", "signature": "void setEngineManager(EngineManager engineManager)", "full_signature": "@Reference void setEngineManager(EngineManager engineManager)", "class_method_signature": "GroupRest.setEngineManager(EngineManager engineManager)", "testcase": false, "constructor": false}, {"identifier": "setValueFactory", "parameters": "(ValueFactory vf)", "modifiers": "@Reference", "return": "void", "signature": "void setValueFactory(ValueFactory vf)", "full_signature": "@Reference void setValueFactory(ValueFactory vf)", "class_method_signature": "GroupRest.setValueFactory(ValueFactory vf)", "testcase": false, "constructor": false}, {"identifier": "setUserFactory", "parameters": "(UserFactory userFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setUserFactory(UserFactory userFactory)", "full_signature": "@Reference void setUserFactory(UserFactory userFactory)", "class_method_signature": "GroupRest.setUserFactory(UserFactory userFactory)", "testcase": false, "constructor": false}, {"identifier": "setGroupFactory", "parameters": "(GroupFactory groupFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setGroupFactory(GroupFactory groupFactory)", "full_signature": "@Reference void setGroupFactory(GroupFactory groupFactory)", "class_method_signature": "GroupRest.setGroupFactory(GroupFactory groupFactory)", "testcase": false, "constructor": false}, {"identifier": "setTransformer", "parameters": "(SesameTransformer transformer)", "modifiers": "@Reference", "return": "void", "signature": "void setTransformer(SesameTransformer transformer)", "full_signature": "@Reference void setTransformer(SesameTransformer transformer)", "class_method_signature": "GroupRest.setTransformer(SesameTransformer transformer)", "testcase": false, "constructor": false}, {"identifier": "setRdfEngine", "parameters": "(Engine engine)", "modifiers": "@Reference(target = \"(engineName=RdfEngine)\")", "return": "void", "signature": "void setRdfEngine(Engine engine)", "full_signature": "@Reference(target = \"(engineName=RdfEngine)\") void setRdfEngine(Engine engine)", "class_method_signature": "GroupRest.setRdfEngine(Engine engine)", "testcase": false, "constructor": false}, {"identifier": "getGroups", "parameters": "()", "modifiers": "@GET @RolesAllowed(\"user\") @Produces(MediaType.APPLICATION_JSON) @ApiOperation(\"Get all Mobi Groups\") public", "return": "Response", "signature": "Response getGroups()", "full_signature": "@GET @RolesAllowed(\"user\") @Produces(MediaType.APPLICATION_JSON) @ApiOperation(\"Get all Mobi Groups\") public Response getGroups()", "class_method_signature": "GroupRest.getGroups()", "testcase": false, "constructor": false}, {"identifier": "createGroup", "parameters": "(@FormDataParam(\"title\") String title,\n                         @FormDataParam(\"description\") String description,\n                         @FormDataParam(\"roles\") List<FormDataBodyPart> roles,\n                         @FormDataParam(\"members\") List<FormDataBodyPart> members)", "modifiers": "@POST @RolesAllowed(\"admin\") @ApiOperation(\"Create a new Mobi Group\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) public", "return": "Response", "signature": "Response createGroup(@FormDataParam(\"title\") String title,\n                         @FormDataParam(\"description\") String description,\n                         @FormDataParam(\"roles\") List<FormDataBodyPart> roles,\n                         @FormDataParam(\"members\") List<FormDataBodyPart> members)", "full_signature": "@POST @RolesAllowed(\"admin\") @ApiOperation(\"Create a new Mobi Group\") @Produces(MediaType.TEXT_PLAIN) @Consumes(MediaType.MULTIPART_FORM_DATA) public Response createGroup(@FormDataParam(\"title\") String title,\n                         @FormDataParam(\"description\") String description,\n                         @FormDataParam(\"roles\") List<FormDataBodyPart> roles,\n                         @FormDataParam(\"members\") List<FormDataBodyPart> members)", "class_method_signature": "GroupRest.createGroup(@FormDataParam(\"title\") String title,\n                         @FormDataParam(\"description\") String description,\n                         @FormDataParam(\"roles\") List<FormDataBodyPart> roles,\n                         @FormDataParam(\"members\") List<FormDataBodyPart> members)", "testcase": false, "constructor": false}, {"identifier": "getGroup", "parameters": "(@PathParam(\"groupTitle\") String groupTitle)", "modifiers": "@GET @Path(\"{groupTitle}\") @RolesAllowed(\"user\") @Produces(MediaType.APPLICATION_JSON) @ApiOperation(\"Get a single Mobi Group\") public", "return": "Response", "signature": "Response getGroup(@PathParam(\"groupTitle\") String groupTitle)", "full_signature": "@GET @Path(\"{groupTitle}\") @RolesAllowed(\"user\") @Produces(MediaType.APPLICATION_JSON) @ApiOperation(\"Get a single Mobi Group\") public Response getGroup(@PathParam(\"groupTitle\") String groupTitle)", "class_method_signature": "GroupRest.getGroup(@PathParam(\"groupTitle\") String groupTitle)", "testcase": false, "constructor": false}, {"identifier": "updateGroup", "parameters": "(@PathParam(\"groupTitle\") String groupTitle, String newGroupStr)", "modifiers": "@PUT @Path(\"{groupTitle}\") @RolesAllowed(\"admin\") @ApiOperation(\"Update a Mobi Group's information\") @Consumes(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response updateGroup(@PathParam(\"groupTitle\") String groupTitle, String newGroupStr)", "full_signature": "@PUT @Path(\"{groupTitle}\") @RolesAllowed(\"admin\") @ApiOperation(\"Update a Mobi Group's information\") @Consumes(MediaType.APPLICATION_JSON) public Response updateGroup(@PathParam(\"groupTitle\") String groupTitle, String newGroupStr)", "class_method_signature": "GroupRest.updateGroup(@PathParam(\"groupTitle\") String groupTitle, String newGroupStr)", "testcase": false, "constructor": false}, {"identifier": "deleteGroup", "parameters": "(@PathParam(\"groupTitle\") String groupTitle)", "modifiers": "@DELETE @Path(\"{groupTitle}\") @RolesAllowed(\"admin\") @ApiOperation(\"Remove a Mobi Group\") public", "return": "Response", "signature": "Response deleteGroup(@PathParam(\"groupTitle\") String groupTitle)", "full_signature": "@DELETE @Path(\"{groupTitle}\") @RolesAllowed(\"admin\") @ApiOperation(\"Remove a Mobi Group\") public Response deleteGroup(@PathParam(\"groupTitle\") String groupTitle)", "class_method_signature": "GroupRest.deleteGroup(@PathParam(\"groupTitle\") String groupTitle)", "testcase": false, "constructor": false}, {"identifier": "getGroupRoles", "parameters": "(@PathParam(\"groupTitle\") String groupTitle)", "modifiers": "@GET @Path(\"{groupTitle}/roles\") @RolesAllowed(\"user\") @Produces(MediaType.APPLICATION_JSON) @ApiOperation(\"List roles of a Mobi Group\") public", "return": "Response", "signature": "Response getGroupRoles(@PathParam(\"groupTitle\") String groupTitle)", "full_signature": "@GET @Path(\"{groupTitle}/roles\") @RolesAllowed(\"user\") @Produces(MediaType.APPLICATION_JSON) @ApiOperation(\"List roles of a Mobi Group\") public Response getGroupRoles(@PathParam(\"groupTitle\") String groupTitle)", "class_method_signature": "GroupRest.getGroupRoles(@PathParam(\"groupTitle\") String groupTitle)", "testcase": false, "constructor": false}, {"identifier": "addGroupRoles", "parameters": "(@PathParam(\"groupTitle\") String groupTitle, @QueryParam(\"roles\") List<String> roles)", "modifiers": "@PUT @Path(\"{groupTitle}/roles\") @RolesAllowed(\"admin\") @ApiOperation(\"Add roles to a Mobi Group\") public", "return": "Response", "signature": "Response addGroupRoles(@PathParam(\"groupTitle\") String groupTitle, @QueryParam(\"roles\") List<String> roles)", "full_signature": "@PUT @Path(\"{groupTitle}/roles\") @RolesAllowed(\"admin\") @ApiOperation(\"Add roles to a Mobi Group\") public Response addGroupRoles(@PathParam(\"groupTitle\") String groupTitle, @QueryParam(\"roles\") List<String> roles)", "class_method_signature": "GroupRest.addGroupRoles(@PathParam(\"groupTitle\") String groupTitle, @QueryParam(\"roles\") List<String> roles)", "testcase": false, "constructor": false}, {"identifier": "removeGroupRole", "parameters": "(@PathParam(\"groupTitle\") String groupTitle, @QueryParam(\"role\") String role)", "modifiers": "@DELETE @Path(\"{groupTitle}/roles\") @RolesAllowed(\"admin\") @ApiOperation(\"Remove role from a Mobi Group\") public", "return": "Response", "signature": "Response removeGroupRole(@PathParam(\"groupTitle\") String groupTitle, @QueryParam(\"role\") String role)", "full_signature": "@DELETE @Path(\"{groupTitle}/roles\") @RolesAllowed(\"admin\") @ApiOperation(\"Remove role from a Mobi Group\") public Response removeGroupRole(@PathParam(\"groupTitle\") String groupTitle, @QueryParam(\"role\") String role)", "class_method_signature": "GroupRest.removeGroupRole(@PathParam(\"groupTitle\") String groupTitle, @QueryParam(\"role\") String role)", "testcase": false, "constructor": false}, {"identifier": "getGroupUsers", "parameters": "(@PathParam(\"groupTitle\") String groupTitle)", "modifiers": "@GET @Path(\"{groupTitle}/users\") @RolesAllowed(\"user\") @Produces(MediaType.APPLICATION_JSON) @ApiOperation(\"List users of a Mobi Group\") public", "return": "Response", "signature": "Response getGroupUsers(@PathParam(\"groupTitle\") String groupTitle)", "full_signature": "@GET @Path(\"{groupTitle}/users\") @RolesAllowed(\"user\") @Produces(MediaType.APPLICATION_JSON) @ApiOperation(\"List users of a Mobi Group\") public Response getGroupUsers(@PathParam(\"groupTitle\") String groupTitle)", "class_method_signature": "GroupRest.getGroupUsers(@PathParam(\"groupTitle\") String groupTitle)", "testcase": false, "constructor": false}, {"identifier": "addGroupUser", "parameters": "(@PathParam(\"groupTitle\") String groupTitle, \n                                 @QueryParam(\"users\") List<String> usernames)", "modifiers": "@PUT @Path(\"{groupTitle}/users\") @RolesAllowed(\"admin\") @ApiOperation(\"Add a Mobi User to a Group\") public", "return": "Response", "signature": "Response addGroupUser(@PathParam(\"groupTitle\") String groupTitle, \n                                 @QueryParam(\"users\") List<String> usernames)", "full_signature": "@PUT @Path(\"{groupTitle}/users\") @RolesAllowed(\"admin\") @ApiOperation(\"Add a Mobi User to a Group\") public Response addGroupUser(@PathParam(\"groupTitle\") String groupTitle, \n                                 @QueryParam(\"users\") List<String> usernames)", "class_method_signature": "GroupRest.addGroupUser(@PathParam(\"groupTitle\") String groupTitle, \n                                 @QueryParam(\"users\") List<String> usernames)", "testcase": false, "constructor": false}, {"identifier": "removeGroupUser", "parameters": "(@PathParam(\"groupTitle\") String groupTitle, @QueryParam(\"user\") String username)", "modifiers": "@DELETE @Path(\"{groupTitle}/users\") @RolesAllowed(\"admin\") @ApiOperation(\"Remove a Mobi User from a Group\") public", "return": "Response", "signature": "Response removeGroupUser(@PathParam(\"groupTitle\") String groupTitle, @QueryParam(\"user\") String username)", "full_signature": "@DELETE @Path(\"{groupTitle}/users\") @RolesAllowed(\"admin\") @ApiOperation(\"Remove a Mobi User from a Group\") public Response removeGroupUser(@PathParam(\"groupTitle\") String groupTitle, @QueryParam(\"user\") String username)", "class_method_signature": "GroupRest.removeGroupUser(@PathParam(\"groupTitle\") String groupTitle, @QueryParam(\"user\") String username)", "testcase": false, "constructor": false}], "file": "com.mobi.jaas.rest/src/main/java/com/mobi/jaas/rest/GroupRest.java"}, "focal_method": {"identifier": "deleteGroup", "parameters": "(@PathParam(\"groupTitle\") String groupTitle)", "modifiers": "@DELETE @Path(\"{groupTitle}\") @RolesAllowed(\"admin\") @ApiOperation(\"Remove a Mobi Group\") public", "return": "Response", "body": "@DELETE\n    @Path(\"{groupTitle}\")\n    @RolesAllowed(\"admin\")\n    @ApiOperation(\"Remove a Mobi Group\")\n    public Response deleteGroup(@PathParam(\"groupTitle\") String groupTitle) {\n        if (StringUtils.isEmpty(groupTitle)) {\n            throw ErrorUtils.sendError(\"Group title must be provided\", Response.Status.BAD_REQUEST);\n        }\n        try {\n            if (!engineManager.groupExists(groupTitle)) {\n                throw ErrorUtils.sendError(\"Group \" + groupTitle + \" not found\", Response.Status.BAD_REQUEST);\n            }\n\n            engineManager.deleteGroup(rdfEngine.getEngineName(), groupTitle);\n            logger.info(\"Deleted group \" + groupTitle);\n            return Response.ok().build();\n        } catch (IllegalArgumentException ex) {\n            throw ErrorUtils.sendError(ex.getMessage(), Response.Status.BAD_REQUEST);\n        }\n    }", "signature": "Response deleteGroup(@PathParam(\"groupTitle\") String groupTitle)", "full_signature": "@DELETE @Path(\"{groupTitle}\") @RolesAllowed(\"admin\") @ApiOperation(\"Remove a Mobi Group\") public Response deleteGroup(@PathParam(\"groupTitle\") String groupTitle)", "class_method_signature": "GroupRest.deleteGroup(@PathParam(\"groupTitle\") String groupTitle)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "sendError", "groupExists", "sendError", "deleteGroup", "getEngineName", "info", "build", "ok", "sendError", "getMessage"]}, "repository": {"repo_id": 62253355, "url": "https://github.com/inovexcorp/mobi", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 30, "size": 54070, "license": "licensed"}}