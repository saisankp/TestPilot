{"test_class": {"identifier": "InstantiationUtilTest", "superclass": "extends TestLogger", "interfaces": "", "fields": [], "file": "flink-core/src/test/java/org/apache/flink/util/InstantiationUtilTest.java"}, "test_case": {"identifier": "testHasNullaryConstructor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testHasNullaryConstructor() {\n\t\tassertTrue(InstantiationUtil\n\t\t\t\t.hasPublicNullaryConstructor(StringValue.class));\n\t}", "signature": "void testHasNullaryConstructor()", "full_signature": "@Test public void testHasNullaryConstructor()", "class_method_signature": "InstantiationUtilTest.testHasNullaryConstructor()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "hasPublicNullaryConstructor"]}, "focal_class": {"identifier": "InstantiationUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "instantiate", "parameters": "(Class<T> clazz, Class<? super T> castTo)", "modifiers": "public static", "return": "T", "signature": "T instantiate(Class<T> clazz, Class<? super T> castTo)", "full_signature": "public static T instantiate(Class<T> clazz, Class<? super T> castTo)", "class_method_signature": "InstantiationUtil.instantiate(Class<T> clazz, Class<? super T> castTo)", "testcase": false, "constructor": false}, {"identifier": "instantiate", "parameters": "(Class<T> clazz)", "modifiers": "public static", "return": "T", "signature": "T instantiate(Class<T> clazz)", "full_signature": "public static T instantiate(Class<T> clazz)", "class_method_signature": "InstantiationUtil.instantiate(Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "hasPublicNullaryConstructor", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasPublicNullaryConstructor(Class<?> clazz)", "full_signature": "public static boolean hasPublicNullaryConstructor(Class<?> clazz)", "class_method_signature": "InstantiationUtil.hasPublicNullaryConstructor(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "isPublic", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "boolean", "signature": "boolean isPublic(Class<?> clazz)", "full_signature": "public static boolean isPublic(Class<?> clazz)", "class_method_signature": "InstantiationUtil.isPublic(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "isProperClass", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "boolean", "signature": "boolean isProperClass(Class<?> clazz)", "full_signature": "public static boolean isProperClass(Class<?> clazz)", "class_method_signature": "InstantiationUtil.isProperClass(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "isNonStaticInnerClass", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNonStaticInnerClass(Class<?> clazz)", "full_signature": "public static boolean isNonStaticInnerClass(Class<?> clazz)", "class_method_signature": "InstantiationUtil.isNonStaticInnerClass(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "checkForInstantiation", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "void", "signature": "void checkForInstantiation(Class<?> clazz)", "full_signature": "public static void checkForInstantiation(Class<?> clazz)", "class_method_signature": "InstantiationUtil.checkForInstantiation(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "checkForInstantiationError", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "String", "signature": "String checkForInstantiationError(Class<?> clazz)", "full_signature": "public static String checkForInstantiationError(Class<?> clazz)", "class_method_signature": "InstantiationUtil.checkForInstantiationError(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "readObjectFromConfig", "parameters": "(Configuration config, String key, ClassLoader cl)", "modifiers": "public static", "return": "T", "signature": "T readObjectFromConfig(Configuration config, String key, ClassLoader cl)", "full_signature": "public static T readObjectFromConfig(Configuration config, String key, ClassLoader cl)", "class_method_signature": "InstantiationUtil.readObjectFromConfig(Configuration config, String key, ClassLoader cl)", "testcase": false, "constructor": false}, {"identifier": "writeObjectToConfig", "parameters": "(Object o, Configuration config, String key)", "modifiers": "public static", "return": "void", "signature": "void writeObjectToConfig(Object o, Configuration config, String key)", "full_signature": "public static void writeObjectToConfig(Object o, Configuration config, String key)", "class_method_signature": "InstantiationUtil.writeObjectToConfig(Object o, Configuration config, String key)", "testcase": false, "constructor": false}, {"identifier": "serializeToByteArray", "parameters": "(TypeSerializer<T> serializer, T record)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] serializeToByteArray(TypeSerializer<T> serializer, T record)", "full_signature": "public static byte[] serializeToByteArray(TypeSerializer<T> serializer, T record)", "class_method_signature": "InstantiationUtil.serializeToByteArray(TypeSerializer<T> serializer, T record)", "testcase": false, "constructor": false}, {"identifier": "deserializeFromByteArray", "parameters": "(TypeSerializer<T> serializer, byte[] buf)", "modifiers": "public static", "return": "T", "signature": "T deserializeFromByteArray(TypeSerializer<T> serializer, byte[] buf)", "full_signature": "public static T deserializeFromByteArray(TypeSerializer<T> serializer, byte[] buf)", "class_method_signature": "InstantiationUtil.deserializeFromByteArray(TypeSerializer<T> serializer, byte[] buf)", "testcase": false, "constructor": false}, {"identifier": "deserializeFromByteArray", "parameters": "(TypeSerializer<T> serializer, T reuse, byte[] buf)", "modifiers": "public static", "return": "T", "signature": "T deserializeFromByteArray(TypeSerializer<T> serializer, T reuse, byte[] buf)", "full_signature": "public static T deserializeFromByteArray(TypeSerializer<T> serializer, T reuse, byte[] buf)", "class_method_signature": "InstantiationUtil.deserializeFromByteArray(TypeSerializer<T> serializer, T reuse, byte[] buf)", "testcase": false, "constructor": false}, {"identifier": "deserializeObject", "parameters": "(byte[] bytes, ClassLoader cl)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "T", "signature": "T deserializeObject(byte[] bytes, ClassLoader cl)", "full_signature": "@SuppressWarnings(\"unchecked\") public static T deserializeObject(byte[] bytes, ClassLoader cl)", "class_method_signature": "InstantiationUtil.deserializeObject(byte[] bytes, ClassLoader cl)", "testcase": false, "constructor": false}, {"identifier": "serializeObject", "parameters": "(Object o)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] serializeObject(Object o)", "full_signature": "public static byte[] serializeObject(Object o)", "class_method_signature": "InstantiationUtil.serializeObject(Object o)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "(T obj)", "modifiers": "public static", "return": "T", "signature": "T clone(T obj)", "full_signature": "public static T clone(T obj)", "class_method_signature": "InstantiationUtil.clone(T obj)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "(T obj, ClassLoader classLoader)", "modifiers": "public static", "return": "T", "signature": "T clone(T obj, ClassLoader classLoader)", "full_signature": "public static T clone(T obj, ClassLoader classLoader)", "class_method_signature": "InstantiationUtil.clone(T obj, ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "InstantiationUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " InstantiationUtil()", "full_signature": "private  InstantiationUtil()", "class_method_signature": "InstantiationUtil.InstantiationUtil()", "testcase": false, "constructor": true}], "file": "flink-core/src/main/java/org/apache/flink/util/InstantiationUtil.java"}, "focal_method": {"identifier": "hasPublicNullaryConstructor", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "boolean", "body": "public static boolean hasPublicNullaryConstructor(Class<?> clazz) {\n\t\tConstructor<?>[] constructors = clazz.getConstructors();\n\t\tfor (Constructor<?> constructor : constructors) {\n\t\t\tif (constructor.getParameterTypes().length == 0 &&\n\t\t\t\t\tModifier.isPublic(constructor.getModifiers())) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}", "signature": "boolean hasPublicNullaryConstructor(Class<?> clazz)", "full_signature": "public static boolean hasPublicNullaryConstructor(Class<?> clazz)", "class_method_signature": "InstantiationUtil.hasPublicNullaryConstructor(Class<?> clazz)", "testcase": false, "constructor": false, "invocations": ["getConstructors", "getParameterTypes", "isPublic", "getModifiers"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}