{"test_class": {"identifier": "DependencyHandlerTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/src/test/java/org/axway/grapes/server/core/DependencyHandlerTest.java"}, "test_case": {"identifier": "getModuleDependenciesOnAModuleThatDoesNotHaveAny", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getModuleDependenciesOnAModuleThatDoesNotHaveAny(){\n        final DbModule module = new DbModule();\n        module.setName(\"module\");\n        module.setVersion(\"1.0.0\");\n\n        final RepositoryHandler repositoryHandler = mock(RepositoryHandler.class);\n        when(repositoryHandler.getModule(module.getId())).thenReturn(module);\n\n        final DependencyHandler dependencyHandler = new DependencyHandler(repositoryHandler);\n\n        final List<Dependency> dependencies = dependencyHandler.getModuleDependencies(module.getId(), mock(FiltersHolder.class));\n\n        assertNotNull(dependencies);\n        assertEquals(0, dependencies.size());\n\n    }", "signature": "void getModuleDependenciesOnAModuleThatDoesNotHaveAny()", "full_signature": "@Test public void getModuleDependenciesOnAModuleThatDoesNotHaveAny()", "class_method_signature": "DependencyHandlerTest.getModuleDependenciesOnAModuleThatDoesNotHaveAny()", "testcase": true, "constructor": false, "invocations": ["setName", "setVersion", "mock", "thenReturn", "when", "getModule", "getId", "getModuleDependencies", "getId", "mock", "assertNotNull", "assertEquals", "size"]}, "focal_class": {"identifier": "DependencyHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(DependencyHandler.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(DependencyHandler.class)", "var_name": "LOG"}, {"original_string": "private final RepositoryHandler repositoryHandler;", "modifier": "private final", "type": "RepositoryHandler", "declarator": "repositoryHandler", "var_name": "repositoryHandler"}, {"original_string": "private final ModelMapper modelMapper;", "modifier": "private final", "type": "ModelMapper", "declarator": "modelMapper", "var_name": "modelMapper"}, {"original_string": "private final ModuleHandler moduleHandler;", "modifier": "private final", "type": "ModuleHandler", "declarator": "moduleHandler", "var_name": "moduleHandler"}], "methods": [{"identifier": "DependencyHandler", "parameters": "(final RepositoryHandler repositoryHandler)", "modifiers": "public", "return": "", "signature": " DependencyHandler(final RepositoryHandler repositoryHandler)", "full_signature": "public  DependencyHandler(final RepositoryHandler repositoryHandler)", "class_method_signature": "DependencyHandler.DependencyHandler(final RepositoryHandler repositoryHandler)", "testcase": false, "constructor": true}, {"identifier": "getModuleDependencies", "parameters": "(final String moduleId, final FiltersHolder filters)", "modifiers": "public", "return": "List<Dependency>", "signature": "List<Dependency> getModuleDependencies(final String moduleId, final FiltersHolder filters)", "full_signature": "public List<Dependency> getModuleDependencies(final String moduleId, final FiltersHolder filters)", "class_method_signature": "DependencyHandler.getModuleDependencies(final String moduleId, final FiltersHolder filters)", "testcase": false, "constructor": false}, {"identifier": "getModuleDependencies", "parameters": "(final DbModule module, final FiltersHolder filters, final int depth, final List<String> doneModuleIds)", "modifiers": "private", "return": "List<Dependency>", "signature": "List<Dependency> getModuleDependencies(final DbModule module, final FiltersHolder filters, final int depth, final List<String> doneModuleIds)", "full_signature": "private List<Dependency> getModuleDependencies(final DbModule module, final FiltersHolder filters, final int depth, final List<String> doneModuleIds)", "class_method_signature": "DependencyHandler.getModuleDependencies(final DbModule module, final FiltersHolder filters, final int depth, final List<String> doneModuleIds)", "testcase": false, "constructor": false}, {"identifier": "getDependencyReport", "parameters": "(final String moduleId, final FiltersHolder filters)", "modifiers": "public", "return": "DependencyReport", "signature": "DependencyReport getDependencyReport(final String moduleId, final FiltersHolder filters)", "full_signature": "public DependencyReport getDependencyReport(final String moduleId, final FiltersHolder filters)", "class_method_signature": "DependencyHandler.getDependencyReport(final String moduleId, final FiltersHolder filters)", "testcase": false, "constructor": false}, {"identifier": "addModuleToReport", "parameters": "(final DependencyReport report, final DbModule module, final FiltersHolder filters, final List<String> done, final int depth)", "modifiers": "private", "return": "void", "signature": "void addModuleToReport(final DependencyReport report, final DbModule module, final FiltersHolder filters, final List<String> done, final int depth)", "full_signature": "private void addModuleToReport(final DependencyReport report, final DbModule module, final FiltersHolder filters, final List<String> done, final int depth)", "class_method_signature": "DependencyHandler.addModuleToReport(final DependencyReport report, final DbModule module, final FiltersHolder filters, final List<String> done, final int depth)", "testcase": false, "constructor": false}, {"identifier": "addDependenciesToReport", "parameters": "(final DependencyReport report, final DbDependency dbDependency, final FiltersHolder filters, final List<String> done, final int depth)", "modifiers": "private", "return": "void", "signature": "void addDependenciesToReport(final DependencyReport report, final DbDependency dbDependency, final FiltersHolder filters, final List<String> done, final int depth)", "full_signature": "private void addDependenciesToReport(final DependencyReport report, final DbDependency dbDependency, final FiltersHolder filters, final List<String> done, final int depth)", "class_method_signature": "DependencyHandler.addDependenciesToReport(final DependencyReport report, final DbDependency dbDependency, final FiltersHolder filters, final List<String> done, final int depth)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/axway/grapes/server/core/DependencyHandler.java"}, "focal_method": {"identifier": "getModuleDependencies", "parameters": "(final String moduleId, final FiltersHolder filters)", "modifiers": "public", "return": "List<Dependency>", "body": "public List<Dependency> getModuleDependencies(final String moduleId, final FiltersHolder filters){\n        final DbModule module = moduleHandler.getModule(moduleId);\n        final DbOrganization organization = moduleHandler.getOrganization(module);\n        filters.setCorporateFilter(new CorporateFilter(organization));\n\n        return getModuleDependencies(module, filters, 1, new ArrayList<String>());\n    }", "signature": "List<Dependency> getModuleDependencies(final String moduleId, final FiltersHolder filters)", "full_signature": "public List<Dependency> getModuleDependencies(final String moduleId, final FiltersHolder filters)", "class_method_signature": "DependencyHandler.getModuleDependencies(final String moduleId, final FiltersHolder filters)", "testcase": false, "constructor": false, "invocations": ["getModule", "getOrganization", "setCorporateFilter", "getModuleDependencies"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}