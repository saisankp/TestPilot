{"test_class": {"identifier": "ImmutableLogEntryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CORRELATION_ID = \"a-correlation-id\";", "modifier": "private static final", "type": "String", "declarator": "CORRELATION_ID = \"a-correlation-id\"", "var_name": "CORRELATION_ID"}, {"original_string": "private static final Instant TIMESTAMP = Instant.now();", "modifier": "private static final", "type": "Instant", "declarator": "TIMESTAMP = Instant.now()", "var_name": "TIMESTAMP"}, {"original_string": "private static final LogCategory CATEGORY = LogCategory.SOURCE;", "modifier": "private static final", "type": "LogCategory", "declarator": "CATEGORY = LogCategory.SOURCE", "var_name": "CATEGORY"}, {"original_string": "private static final LogType TYPE = LogType.CONSUMED;", "modifier": "private static final", "type": "LogType", "declarator": "TYPE = LogType.CONSUMED", "var_name": "TYPE"}, {"original_string": "private static final String MESSAGE = \"Consumed the best transformation message in my life.\";", "modifier": "private static final", "type": "String", "declarator": "MESSAGE = \"Consumed the best transformation message in my life.\"", "var_name": "MESSAGE"}, {"original_string": "private static final LogLevel LEVEL = LogLevel.SUCCESS;", "modifier": "private static final", "type": "LogLevel", "declarator": "LEVEL = LogLevel.SUCCESS", "var_name": "LEVEL"}, {"original_string": "private static final String ADDRESS = \"an/address\";", "modifier": "private static final", "type": "String", "declarator": "ADDRESS = \"an/address\"", "var_name": "ADDRESS"}, {"original_string": "private static final ThingId THING_ID = ThingId.of(\"org.eclipse.ditto.poke:138\");", "modifier": "private static final", "type": "ThingId", "declarator": "THING_ID = ThingId.of(\"org.eclipse.ditto.poke:138\")", "var_name": "THING_ID"}, {"original_string": "private static final LogEntry LOG_ENTRY = ImmutableLogEntry.getBuilder(CORRELATION_ID, TIMESTAMP, CATEGORY, TYPE, LEVEL,\n            MESSAGE, ADDRESS, THING_ID)\n            .build();", "modifier": "private static final", "type": "LogEntry", "declarator": "LOG_ENTRY = ImmutableLogEntry.getBuilder(CORRELATION_ID, TIMESTAMP, CATEGORY, TYPE, LEVEL,\n            MESSAGE, ADDRESS, THING_ID)\n            .build()", "var_name": "LOG_ENTRY"}, {"original_string": "private static final JsonObject LOG_ENTRY_JSON = getLogEntryJson();", "modifier": "private static final", "type": "JsonObject", "declarator": "LOG_ENTRY_JSON = getLogEntryJson()", "var_name": "LOG_ENTRY_JSON"}], "file": "model/connectivity/src/test/java/org/eclipse/ditto/model/connectivity/ImmutableLogEntryTest.java"}, "test_case": {"identifier": "toJsonReturnsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toJsonReturnsExpected() {\n        final JsonObject actual = LOG_ENTRY.toJson();\n        assertThat(actual).isEqualTo(LOG_ENTRY_JSON);\n    }", "signature": "void toJsonReturnsExpected()", "full_signature": "@Test public void toJsonReturnsExpected()", "class_method_signature": "ImmutableLogEntryTest.toJsonReturnsExpected()", "testcase": true, "constructor": false, "invocations": ["toJson", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "ImmutableLogEntry", "superclass": "", "interfaces": "implements LogEntry", "fields": [{"original_string": "private final String correlationId;", "modifier": "private final", "type": "String", "declarator": "correlationId", "var_name": "correlationId"}, {"original_string": "private final Instant timestamp;", "modifier": "private final", "type": "Instant", "declarator": "timestamp", "var_name": "timestamp"}, {"original_string": "private final LogCategory logCategory;", "modifier": "private final", "type": "LogCategory", "declarator": "logCategory", "var_name": "logCategory"}, {"original_string": "private final LogType logType;", "modifier": "private final", "type": "LogType", "declarator": "logType", "var_name": "logType"}, {"original_string": "private final LogLevel logLevel;", "modifier": "private final", "type": "LogLevel", "declarator": "logLevel", "var_name": "logLevel"}, {"original_string": "private final String message;", "modifier": "private final", "type": "String", "declarator": "message", "var_name": "message"}, {"original_string": "@Nullable private final String address;", "modifier": "@Nullable private final", "type": "String", "declarator": "address", "var_name": "address"}, {"original_string": "@Nullable private final ThingId thingId;", "modifier": "@Nullable private final", "type": "ThingId", "declarator": "thingId", "var_name": "thingId"}], "methods": [{"identifier": "ImmutableLogEntry", "parameters": "(final Builder builder)", "modifiers": "private", "return": "", "signature": " ImmutableLogEntry(final Builder builder)", "full_signature": "private  ImmutableLogEntry(final Builder builder)", "class_method_signature": "ImmutableLogEntry.ImmutableLogEntry(final Builder builder)", "testcase": false, "constructor": true}, {"identifier": "getBuilder", "parameters": "(final String correlationId, final Instant timestamp, final LogCategory logCategory,\n            final LogType logType, final LogLevel logLevel, final String message)", "modifiers": "public static", "return": "LogEntryBuilder", "signature": "LogEntryBuilder getBuilder(final String correlationId, final Instant timestamp, final LogCategory logCategory,\n            final LogType logType, final LogLevel logLevel, final String message)", "full_signature": "public static LogEntryBuilder getBuilder(final String correlationId, final Instant timestamp, final LogCategory logCategory,\n            final LogType logType, final LogLevel logLevel, final String message)", "class_method_signature": "ImmutableLogEntry.getBuilder(final String correlationId, final Instant timestamp, final LogCategory logCategory,\n            final LogType logType, final LogLevel logLevel, final String message)", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "(final String correlationId, final Instant timestamp, final LogCategory logCategory,\n            final LogType logType, final LogLevel logLevel, final String message,\n            @Nullable final String address, @Nullable final ThingId thingId)", "modifiers": "public static", "return": "LogEntryBuilder", "signature": "LogEntryBuilder getBuilder(final String correlationId, final Instant timestamp, final LogCategory logCategory,\n            final LogType logType, final LogLevel logLevel, final String message,\n            @Nullable final String address, @Nullable final ThingId thingId)", "full_signature": "public static LogEntryBuilder getBuilder(final String correlationId, final Instant timestamp, final LogCategory logCategory,\n            final LogType logType, final LogLevel logLevel, final String message,\n            @Nullable final String address, @Nullable final ThingId thingId)", "class_method_signature": "ImmutableLogEntry.getBuilder(final String correlationId, final Instant timestamp, final LogCategory logCategory,\n            final LogType logType, final LogLevel logLevel, final String message,\n            @Nullable final String address, @Nullable final ThingId thingId)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject)", "modifiers": "public static", "return": "LogEntry", "signature": "LogEntry fromJson(final JsonObject jsonObject)", "full_signature": "public static LogEntry fromJson(final JsonObject jsonObject)", "class_method_signature": "ImmutableLogEntry.fromJson(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "getTimestampOrThrow", "parameters": "(final CharSequence dateTime)", "modifiers": "private static", "return": "Instant", "signature": "Instant getTimestampOrThrow(final CharSequence dateTime)", "full_signature": "private static Instant getTimestampOrThrow(final CharSequence dateTime)", "class_method_signature": "ImmutableLogEntry.getTimestampOrThrow(final CharSequence dateTime)", "testcase": false, "constructor": false}, {"identifier": "getLogCategoryOrThrow", "parameters": "(final JsonObject jsonObject)", "modifiers": "private static", "return": "LogCategory", "signature": "LogCategory getLogCategoryOrThrow(final JsonObject jsonObject)", "full_signature": "private static LogCategory getLogCategoryOrThrow(final JsonObject jsonObject)", "class_method_signature": "ImmutableLogEntry.getLogCategoryOrThrow(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "getLogTypeOrThrow", "parameters": "(final JsonObject jsonObject)", "modifiers": "private static", "return": "LogType", "signature": "LogType getLogTypeOrThrow(final JsonObject jsonObject)", "full_signature": "private static LogType getLogTypeOrThrow(final JsonObject jsonObject)", "class_method_signature": "ImmutableLogEntry.getLogTypeOrThrow(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "getLogLevelOrThrow", "parameters": "(final JsonObject jsonObject)", "modifiers": "private static", "return": "LogLevel", "signature": "LogLevel getLogLevelOrThrow(final JsonObject jsonObject)", "full_signature": "private static LogLevel getLogLevelOrThrow(final JsonObject jsonObject)", "class_method_signature": "ImmutableLogEntry.getLogLevelOrThrow(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "getCorrelationId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCorrelationId()", "full_signature": "@Override public String getCorrelationId()", "class_method_signature": "ImmutableLogEntry.getCorrelationId()", "testcase": false, "constructor": false}, {"identifier": "getTimestamp", "parameters": "()", "modifiers": "@Override public", "return": "Instant", "signature": "Instant getTimestamp()", "full_signature": "@Override public Instant getTimestamp()", "class_method_signature": "ImmutableLogEntry.getTimestamp()", "testcase": false, "constructor": false}, {"identifier": "getLogCategory", "parameters": "()", "modifiers": "@Override public", "return": "LogCategory", "signature": "LogCategory getLogCategory()", "full_signature": "@Override public LogCategory getLogCategory()", "class_method_signature": "ImmutableLogEntry.getLogCategory()", "testcase": false, "constructor": false}, {"identifier": "getLogType", "parameters": "()", "modifiers": "@Override public", "return": "LogType", "signature": "LogType getLogType()", "full_signature": "@Override public LogType getLogType()", "class_method_signature": "ImmutableLogEntry.getLogType()", "testcase": false, "constructor": false}, {"identifier": "getLogLevel", "parameters": "()", "modifiers": "@Override public", "return": "LogLevel", "signature": "LogLevel getLogLevel()", "full_signature": "@Override public LogLevel getLogLevel()", "class_method_signature": "ImmutableLogEntry.getLogLevel()", "testcase": false, "constructor": false}, {"identifier": "getMessage", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getMessage()", "full_signature": "@Override public String getMessage()", "class_method_signature": "ImmutableLogEntry.getMessage()", "testcase": false, "constructor": false}, {"identifier": "getAddress", "parameters": "()", "modifiers": "@Override public", "return": "Optional<String>", "signature": "Optional<String> getAddress()", "full_signature": "@Override public Optional<String> getAddress()", "class_method_signature": "ImmutableLogEntry.getAddress()", "testcase": false, "constructor": false}, {"identifier": "getThingId", "parameters": "()", "modifiers": "@Override public", "return": "Optional<ThingId>", "signature": "Optional<ThingId> getThingId()", "full_signature": "@Override public Optional<ThingId> getThingId()", "class_method_signature": "ImmutableLogEntry.getThingId()", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> predicate)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> predicate)", "full_signature": "@Override public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> predicate)", "class_method_signature": "ImmutableLogEntry.toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> predicate)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object o)", "full_signature": "@Override public boolean equals(@Nullable final Object o)", "class_method_signature": "ImmutableLogEntry.equals(@Nullable final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableLogEntry.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableLogEntry.toString()", "testcase": false, "constructor": false}], "file": "model/connectivity/src/main/java/org/eclipse/ditto/model/connectivity/ImmutableLogEntry.java"}, "focal_method": {"identifier": "toJson", "parameters": "(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> predicate)", "modifiers": "@Override public", "return": "JsonObject", "body": "@Override\n    public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> predicate) {\n        final JsonObjectBuilder builder = JsonFactory.newObjectBuilder()\n                .set(JsonFields.CORRELATION_ID, correlationId)\n                .set(JsonFields.TIMESTAMP, timestamp.toString())\n                .set(JsonFields.CATEGORY, logCategory.getName())\n                .set(JsonFields.TYPE, logType.getType())\n                .set(JsonFields.LEVEL, logLevel.getLevel())\n                .set(JsonFields.MESSAGE, message);\n        if (null != address) {\n            builder.set(JsonFields.ADDRESS, address);\n        }\n        if (null != thingId) {\n            builder.set(JsonFields.THING_ID, thingId.toString());\n        }\n        return builder.build();\n    }", "signature": "JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> predicate)", "full_signature": "@Override public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> predicate)", "class_method_signature": "ImmutableLogEntry.toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> predicate)", "testcase": false, "constructor": false, "invocations": ["set", "set", "set", "set", "set", "set", "newObjectBuilder", "toString", "getName", "getType", "getLevel", "set", "set", "toString", "build"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}