{"test_class": {"identifier": "TodoListControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int CONTENT_HEIGHT = 1700;", "modifier": "private static final", "type": "int", "declarator": "CONTENT_HEIGHT = 1700", "var_name": "CONTENT_HEIGHT"}, {"original_string": "private static final int ITEM_HEIGHT = 230;", "modifier": "private static final", "type": "int", "declarator": "ITEM_HEIGHT = 230", "var_name": "ITEM_HEIGHT"}, {"original_string": "private TodoListController mTodoListController;", "modifier": "private", "type": "TodoListController", "declarator": "mTodoListController", "var_name": "mTodoListController"}, {"original_string": "private List<TodoItemViewModel> mItemViewModelList;", "modifier": "private", "type": "List<TodoItemViewModel>", "declarator": "mItemViewModelList", "var_name": "mItemViewModelList"}, {"original_string": "private Context mContext;", "modifier": "private", "type": "Context", "declarator": "mContext", "var_name": "mContext"}, {"original_string": "private TodoItemViewHolder mTodoItemViewHolder;", "modifier": "private", "type": "TodoItemViewHolder", "declarator": "mTodoItemViewHolder", "var_name": "mTodoItemViewHolder"}, {"original_string": "private TodoFooterViewHolder mTodoFooterViewHolder;", "modifier": "private", "type": "TodoFooterViewHolder", "declarator": "mTodoFooterViewHolder", "var_name": "mTodoFooterViewHolder"}, {"original_string": "private View mFooterView;", "modifier": "private", "type": "View", "declarator": "mFooterView", "var_name": "mFooterView"}, {"original_string": "@Rule\n    public PowerMockRule rule = new PowerMockRule();", "modifier": "@Rule\n    public", "type": "PowerMockRule", "declarator": "rule = new PowerMockRule()", "var_name": "rule"}, {"original_string": "@Mock\n    private EventBus mEventBus;", "modifier": "@Mock\n    private", "type": "EventBus", "declarator": "mEventBus", "var_name": "mEventBus"}], "file": "app/src/test/java/apidez/com/doit/controller/TodoListControllerTest.java"}, "test_case": {"identifier": "testResetState", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testResetState() throws Exception {\n        clickView(mTodoItemViewHolder.todoView);\n        mTodoListController.resetState();\n        for (int i = 0; i < mItemViewModelList.size(); i++) {\n            assertNormalitem(i);\n        }\n    }", "signature": "void testResetState()", "full_signature": "@Test public void testResetState()", "class_method_signature": "TodoListControllerTest.testResetState()", "testcase": true, "constructor": false, "invocations": ["clickView", "resetState", "size", "assertNormalitem"]}, "focal_class": {"identifier": "TodoListController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private View mFooterView;", "modifier": "private", "type": "View", "declarator": "mFooterView", "var_name": "mFooterView"}, {"original_string": "private EventBus mEventBus;", "modifier": "private", "type": "EventBus", "declarator": "mEventBus", "var_name": "mEventBus"}, {"original_string": "private Context mContext;", "modifier": "private", "type": "Context", "declarator": "mContext", "var_name": "mContext"}, {"original_string": "private List<TodoItemViewModel> mItems;", "modifier": "private", "type": "List<TodoItemViewModel>", "declarator": "mItems", "var_name": "mItems"}, {"original_string": "private BehaviorSubject<Integer> mListSize;", "modifier": "private", "type": "BehaviorSubject<Integer>", "declarator": "mListSize", "var_name": "mListSize"}, {"original_string": "private BehaviorSubject<Integer> mItemHeight;", "modifier": "private", "type": "BehaviorSubject<Integer>", "declarator": "mItemHeight", "var_name": "mItemHeight"}], "methods": [{"identifier": "TodoListController", "parameters": "(@NonNull Context context, @NonNull List<TodoItemViewModel> items,\n                              @NonNull EventBus eventBus)", "modifiers": "public", "return": "", "signature": " TodoListController(@NonNull Context context, @NonNull List<TodoItemViewModel> items,\n                              @NonNull EventBus eventBus)", "full_signature": "public  TodoListController(@NonNull Context context, @NonNull List<TodoItemViewModel> items,\n                              @NonNull EventBus eventBus)", "class_method_signature": "TodoListController.TodoListController(@NonNull Context context, @NonNull List<TodoItemViewModel> items,\n                              @NonNull EventBus eventBus)", "testcase": false, "constructor": true}, {"identifier": "setItems", "parameters": "(List<TodoItemViewModel> items)", "modifiers": "public", "return": "void", "signature": "void setItems(List<TodoItemViewModel> items)", "full_signature": "public void setItems(List<TodoItemViewModel> items)", "class_method_signature": "TodoListController.setItems(List<TodoItemViewModel> items)", "testcase": false, "constructor": false}, {"identifier": "bindFooterAction", "parameters": "(TodoFooterViewHolder holder)", "modifiers": "public", "return": "void", "signature": "void bindFooterAction(TodoFooterViewHolder holder)", "full_signature": "public void bindFooterAction(TodoFooterViewHolder holder)", "class_method_signature": "TodoListController.bindFooterAction(TodoFooterViewHolder holder)", "testcase": false, "constructor": false}, {"identifier": "footerHeight", "parameters": "()", "modifiers": "private", "return": "Observable<Integer>", "signature": "Observable<Integer> footerHeight()", "full_signature": "private Observable<Integer> footerHeight()", "class_method_signature": "TodoListController.footerHeight()", "testcase": false, "constructor": false}, {"identifier": "calculateFooterHeight", "parameters": "(int listSize, int itemHeight)", "modifiers": "private", "return": "int", "signature": "int calculateFooterHeight(int listSize, int itemHeight)", "full_signature": "private int calculateFooterHeight(int listSize, int itemHeight)", "class_method_signature": "TodoListController.calculateFooterHeight(int listSize, int itemHeight)", "testcase": false, "constructor": false}, {"identifier": "bindItemAction", "parameters": "(TodoItemViewHolder viewHolder, TodoItemViewModel viewModel)", "modifiers": "public", "return": "void", "signature": "void bindItemAction(TodoItemViewHolder viewHolder, TodoItemViewModel viewModel)", "full_signature": "public void bindItemAction(TodoItemViewHolder viewHolder, TodoItemViewModel viewModel)", "class_method_signature": "TodoListController.bindItemAction(TodoItemViewHolder viewHolder, TodoItemViewModel viewModel)", "testcase": false, "constructor": false}, {"identifier": "observeItemHeight", "parameters": "(View itemView)", "modifiers": "public", "return": "void", "signature": "void observeItemHeight(View itemView)", "full_signature": "public void observeItemHeight(View itemView)", "class_method_signature": "TodoListController.observeItemHeight(View itemView)", "testcase": false, "constructor": false}, {"identifier": "emitItemHeightIfNot", "parameters": "(View itemView)", "modifiers": "private", "return": "void", "signature": "void emitItemHeightIfNot(View itemView)", "full_signature": "private void emitItemHeightIfNot(View itemView)", "class_method_signature": "TodoListController.emitItemHeightIfNot(View itemView)", "testcase": false, "constructor": false}, {"identifier": "resetState", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void resetState()", "full_signature": "public void resetState()", "class_method_signature": "TodoListController.resetState()", "testcase": false, "constructor": false}, {"identifier": "handleChooseItem", "parameters": "(View itemView, TodoItemViewModel decorator)", "modifiers": "private", "return": "void", "signature": "void handleChooseItem(View itemView, TodoItemViewModel decorator)", "full_signature": "private void handleChooseItem(View itemView, TodoItemViewModel decorator)", "class_method_signature": "TodoListController.handleChooseItem(View itemView, TodoItemViewModel decorator)", "testcase": false, "constructor": false}, {"identifier": "updateFooterWhenClickItem", "parameters": "(boolean actionShowing)", "modifiers": "private", "return": "void", "signature": "void updateFooterWhenClickItem(boolean actionShowing)", "full_signature": "private void updateFooterWhenClickItem(boolean actionShowing)", "class_method_signature": "TodoListController.updateFooterWhenClickItem(boolean actionShowing)", "testcase": false, "constructor": false}, {"identifier": "updateListWhenClickItem", "parameters": "(TodoItemViewModel decorator)", "modifiers": "private", "return": "void", "signature": "void updateListWhenClickItem(TodoItemViewModel decorator)", "full_signature": "private void updateListWhenClickItem(TodoItemViewModel decorator)", "class_method_signature": "TodoListController.updateListWhenClickItem(TodoItemViewModel decorator)", "testcase": false, "constructor": false}, {"identifier": "waitForLayoutCompleteFireEvent", "parameters": "(View itemView, TodoItemViewModel decorator)", "modifiers": "private", "return": "void", "signature": "void waitForLayoutCompleteFireEvent(View itemView, TodoItemViewModel decorator)", "full_signature": "private void waitForLayoutCompleteFireEvent(View itemView, TodoItemViewModel decorator)", "class_method_signature": "TodoListController.waitForLayoutCompleteFireEvent(View itemView, TodoItemViewModel decorator)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(TodoItemViewModel decorator)", "modifiers": "private", "return": "int", "signature": "int indexOf(TodoItemViewModel decorator)", "full_signature": "private int indexOf(TodoItemViewModel decorator)", "class_method_signature": "TodoListController.indexOf(TodoItemViewModel decorator)", "testcase": false, "constructor": false}], "file": "app/src/main/java/apidez/com/doit/controller/TodoListController.java"}, "focal_method": {"identifier": "resetState", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void resetState() {\n        updateFooterWhenClickItem(false);\n        for (TodoItemViewModel todoItemViewModel : mItems) {\n            todoItemViewModel.resetState();\n        }\n    }", "signature": "void resetState()", "full_signature": "public void resetState()", "class_method_signature": "TodoListController.resetState()", "testcase": false, "constructor": false, "invocations": ["updateFooterWhenClickItem", "resetState"]}, "repository": {"repo_id": 50765065, "url": "https://github.com/nongdenchet/DO.IT", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 6, "size": 16808, "license": "licensed"}}