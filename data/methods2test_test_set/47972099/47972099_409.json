{"test_class": {"identifier": "BlobUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static String CANNOT_CREATE_THIS = \"cannot-create-this\";", "modifier": "private final static", "type": "String", "declarator": "CANNOT_CREATE_THIS = \"cannot-create-this\"", "var_name": "CANNOT_CREATE_THIS"}, {"original_string": "private File blobUtilsTestDirectory;", "modifier": "private", "type": "File", "declarator": "blobUtilsTestDirectory", "var_name": "blobUtilsTestDirectory"}], "file": "flink-runtime/src/test/java/org/apache/flink/runtime/blob/BlobUtilsTest.java"}, "test_case": {"identifier": "testExceptionOnCreateCacheDirectoryFailure", "parameters": "()", "modifiers": "@Test(expected = Exception.class) public", "return": "void", "body": "@Test(expected = Exception.class)\n\tpublic void testExceptionOnCreateCacheDirectoryFailure() {\n\t\t// Should throw an Exception\n\t\tBlobUtils.getStorageLocation(new File(blobUtilsTestDirectory, CANNOT_CREATE_THIS), mock(BlobKey.class));\n\t}", "signature": "void testExceptionOnCreateCacheDirectoryFailure()", "full_signature": "@Test(expected = Exception.class) public void testExceptionOnCreateCacheDirectoryFailure()", "class_method_signature": "BlobUtilsTest.testExceptionOnCreateCacheDirectoryFailure()", "testcase": true, "constructor": false, "invocations": ["getStorageLocation", "mock"]}, "focal_class": {"identifier": "BlobUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String HASHING_ALGORITHM = \"SHA-1\";", "modifier": "private static final", "type": "String", "declarator": "HASHING_ALGORITHM = \"SHA-1\"", "var_name": "HASHING_ALGORITHM"}, {"original_string": "static final String BLOB_FILE_PREFIX = \"blob_\";", "modifier": "static final", "type": "String", "declarator": "BLOB_FILE_PREFIX = \"blob_\"", "var_name": "BLOB_FILE_PREFIX"}, {"original_string": "static final String JOB_DIR_PREFIX = \"job_\";", "modifier": "static final", "type": "String", "declarator": "JOB_DIR_PREFIX = \"job_\"", "var_name": "JOB_DIR_PREFIX"}, {"original_string": "static final Charset DEFAULT_CHARSET = Charset.forName(\"utf-8\");", "modifier": "static final", "type": "Charset", "declarator": "DEFAULT_CHARSET = Charset.forName(\"utf-8\")", "var_name": "DEFAULT_CHARSET"}], "methods": [{"identifier": "initStorageDirectory", "parameters": "(String storageDirectory)", "modifiers": "static", "return": "File", "signature": "File initStorageDirectory(String storageDirectory)", "full_signature": "static File initStorageDirectory(String storageDirectory)", "class_method_signature": "BlobUtils.initStorageDirectory(String storageDirectory)", "testcase": false, "constructor": false}, {"identifier": "getIncomingDirectory", "parameters": "(File storageDir)", "modifiers": "static", "return": "File", "signature": "File getIncomingDirectory(File storageDir)", "full_signature": "static File getIncomingDirectory(File storageDir)", "class_method_signature": "BlobUtils.getIncomingDirectory(File storageDir)", "testcase": false, "constructor": false}, {"identifier": "getCacheDirectory", "parameters": "(File storageDir)", "modifiers": "private static", "return": "File", "signature": "File getCacheDirectory(File storageDir)", "full_signature": "private static File getCacheDirectory(File storageDir)", "class_method_signature": "BlobUtils.getCacheDirectory(File storageDir)", "testcase": false, "constructor": false}, {"identifier": "getStorageLocation", "parameters": "(File storageDir, BlobKey key)", "modifiers": "static", "return": "File", "signature": "File getStorageLocation(File storageDir, BlobKey key)", "full_signature": "static File getStorageLocation(File storageDir, BlobKey key)", "class_method_signature": "BlobUtils.getStorageLocation(File storageDir, BlobKey key)", "testcase": false, "constructor": false}, {"identifier": "getStorageLocation", "parameters": "(File storageDir, JobID jobID, String key)", "modifiers": "static", "return": "File", "signature": "File getStorageLocation(File storageDir, JobID jobID, String key)", "full_signature": "static File getStorageLocation(File storageDir, JobID jobID, String key)", "class_method_signature": "BlobUtils.getStorageLocation(File storageDir, JobID jobID, String key)", "testcase": false, "constructor": false}, {"identifier": "getJobDirectory", "parameters": "(File storageDir, JobID jobID)", "modifiers": "private static", "return": "File", "signature": "File getJobDirectory(File storageDir, JobID jobID)", "full_signature": "private static File getJobDirectory(File storageDir, JobID jobID)", "class_method_signature": "BlobUtils.getJobDirectory(File storageDir, JobID jobID)", "testcase": false, "constructor": false}, {"identifier": "encodeKey", "parameters": "(String key)", "modifiers": "static", "return": "String", "signature": "String encodeKey(String key)", "full_signature": "static String encodeKey(String key)", "class_method_signature": "BlobUtils.encodeKey(String key)", "testcase": false, "constructor": false}, {"identifier": "deleteJobDirectory", "parameters": "(File storageDir, JobID jobID)", "modifiers": "static", "return": "void", "signature": "void deleteJobDirectory(File storageDir, JobID jobID)", "full_signature": "static void deleteJobDirectory(File storageDir, JobID jobID)", "class_method_signature": "BlobUtils.deleteJobDirectory(File storageDir, JobID jobID)", "testcase": false, "constructor": false}, {"identifier": "createMessageDigest", "parameters": "()", "modifiers": "static", "return": "MessageDigest", "signature": "MessageDigest createMessageDigest()", "full_signature": "static MessageDigest createMessageDigest()", "class_method_signature": "BlobUtils.createMessageDigest()", "testcase": false, "constructor": false}, {"identifier": "addShutdownHook", "parameters": "(final BlobService service, final Logger logger)", "modifiers": "static", "return": "Thread", "signature": "Thread addShutdownHook(final BlobService service, final Logger logger)", "full_signature": "static Thread addShutdownHook(final BlobService service, final Logger logger)", "class_method_signature": "BlobUtils.addShutdownHook(final BlobService service, final Logger logger)", "testcase": false, "constructor": false}, {"identifier": "writeLength", "parameters": "(int length, OutputStream outputStream)", "modifiers": "static", "return": "void", "signature": "void writeLength(int length, OutputStream outputStream)", "full_signature": "static void writeLength(int length, OutputStream outputStream)", "class_method_signature": "BlobUtils.writeLength(int length, OutputStream outputStream)", "testcase": false, "constructor": false}, {"identifier": "readLength", "parameters": "(InputStream inputStream)", "modifiers": "static", "return": "int", "signature": "int readLength(InputStream inputStream)", "full_signature": "static int readLength(InputStream inputStream)", "class_method_signature": "BlobUtils.readLength(InputStream inputStream)", "testcase": false, "constructor": false}, {"identifier": "readFully", "parameters": "(InputStream inputStream, byte[] buf, int off, int len, String type)", "modifiers": "static", "return": "void", "signature": "void readFully(InputStream inputStream, byte[] buf, int off, int len, String type)", "full_signature": "static void readFully(InputStream inputStream, byte[] buf, int off, int len, String type)", "class_method_signature": "BlobUtils.readFully(InputStream inputStream, byte[] buf, int off, int len, String type)", "testcase": false, "constructor": false}, {"identifier": "closeSilently", "parameters": "(Socket socket, Logger LOG)", "modifiers": "static", "return": "void", "signature": "void closeSilently(Socket socket, Logger LOG)", "full_signature": "static void closeSilently(Socket socket, Logger LOG)", "class_method_signature": "BlobUtils.closeSilently(Socket socket, Logger LOG)", "testcase": false, "constructor": false}, {"identifier": "getRecoveryPath", "parameters": "(String basePath, BlobKey blobKey)", "modifiers": "static", "return": "String", "signature": "String getRecoveryPath(String basePath, BlobKey blobKey)", "full_signature": "static String getRecoveryPath(String basePath, BlobKey blobKey)", "class_method_signature": "BlobUtils.getRecoveryPath(String basePath, BlobKey blobKey)", "testcase": false, "constructor": false}, {"identifier": "getRecoveryPath", "parameters": "(String basePath, JobID jobId, String key)", "modifiers": "static", "return": "String", "signature": "String getRecoveryPath(String basePath, JobID jobId, String key)", "full_signature": "static String getRecoveryPath(String basePath, JobID jobId, String key)", "class_method_signature": "BlobUtils.getRecoveryPath(String basePath, JobID jobId, String key)", "testcase": false, "constructor": false}, {"identifier": "getRecoveryPath", "parameters": "(String basePath, JobID jobId)", "modifiers": "static", "return": "String", "signature": "String getRecoveryPath(String basePath, JobID jobId)", "full_signature": "static String getRecoveryPath(String basePath, JobID jobId)", "class_method_signature": "BlobUtils.getRecoveryPath(String basePath, JobID jobId)", "testcase": false, "constructor": false}, {"identifier": "copyFromRecoveryPath", "parameters": "(String recoveryPath, File localBlobFile)", "modifiers": "static", "return": "void", "signature": "void copyFromRecoveryPath(String recoveryPath, File localBlobFile)", "full_signature": "static void copyFromRecoveryPath(String recoveryPath, File localBlobFile)", "class_method_signature": "BlobUtils.copyFromRecoveryPath(String recoveryPath, File localBlobFile)", "testcase": false, "constructor": false}, {"identifier": "BlobUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " BlobUtils()", "full_signature": "private  BlobUtils()", "class_method_signature": "BlobUtils.BlobUtils()", "testcase": false, "constructor": true}], "file": "flink-runtime/src/main/java/org/apache/flink/runtime/blob/BlobUtils.java"}, "focal_method": {"identifier": "getStorageLocation", "parameters": "(File storageDir, BlobKey key)", "modifiers": "static", "return": "File", "body": "static File getStorageLocation(File storageDir, BlobKey key) {\n\t\treturn new File(getCacheDirectory(storageDir), BLOB_FILE_PREFIX + key.toString());\n\t}", "signature": "File getStorageLocation(File storageDir, BlobKey key)", "full_signature": "static File getStorageLocation(File storageDir, BlobKey key)", "class_method_signature": "BlobUtils.getStorageLocation(File storageDir, BlobKey key)", "testcase": false, "constructor": false, "invocations": ["getCacheDirectory", "toString"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}