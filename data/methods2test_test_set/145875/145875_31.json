{"test_class": {"identifier": "ChangeScriptCreatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ChangeScriptCreator changeScriptCreator;", "modifier": "private", "type": "ChangeScriptCreator", "declarator": "changeScriptCreator", "var_name": "changeScriptCreator"}, {"original_string": "private File scriptDirectory;", "modifier": "private", "type": "File", "declarator": "scriptDirectory", "var_name": "scriptDirectory"}], "file": "dbdeploy-core/src/test/java/com/dbdeploy/scripts/ChangeScriptCreatorTest.java"}, "test_case": {"identifier": "defaultChangeScriptCreatorCreatesScriptWithTimestamp", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void defaultChangeScriptCreatorCreatesScriptWithTimestamp() throws Exception {\n        final File newChangeScript = changeScriptCreator.createScript();\n        assertTrue(newChangeScript.exists());\n\n        final String newChangeScriptFileName = newChangeScript.getName();\n        assertTrue(\"file name doesnt have sql suffix\", newChangeScriptFileName.endsWith(\".sql\"));\n        assertTrue(\"file name not timestamped correctly\", newChangeScriptFileName.matches(\"[0-9]{14}\\\\.sql\"));\n    }", "signature": "void defaultChangeScriptCreatorCreatesScriptWithTimestamp()", "full_signature": "@Test public void defaultChangeScriptCreatorCreatesScriptWithTimestamp()", "class_method_signature": "ChangeScriptCreatorTest.defaultChangeScriptCreatorCreatesScriptWithTimestamp()", "testcase": true, "constructor": false, "invocations": ["createScript", "assertTrue", "exists", "getName", "assertTrue", "endsWith", "assertTrue", "matches"]}, "focal_class": {"identifier": "ChangeScriptCreator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String changeScriptSuffix = \".sql\";", "modifier": "private", "type": "String", "declarator": "changeScriptSuffix = \".sql\"", "var_name": "changeScriptSuffix"}, {"original_string": "private String changeScriptTimestampFormat = \"yyyyMMddHHmmss\";", "modifier": "private", "type": "String", "declarator": "changeScriptTimestampFormat = \"yyyyMMddHHmmss\"", "var_name": "changeScriptTimestampFormat"}, {"original_string": "private String scriptDescription;", "modifier": "private", "type": "String", "declarator": "scriptDescription", "var_name": "scriptDescription"}, {"original_string": "private File scriptDirectory;", "modifier": "private", "type": "File", "declarator": "scriptDirectory", "var_name": "scriptDirectory"}, {"original_string": "private DateFormat dateFormatter;", "modifier": "private", "type": "DateFormat", "declarator": "dateFormatter", "var_name": "dateFormatter"}], "methods": [{"identifier": "ChangeScriptCreator", "parameters": "()", "modifiers": "public", "return": "", "signature": " ChangeScriptCreator()", "full_signature": "public  ChangeScriptCreator()", "class_method_signature": "ChangeScriptCreator.ChangeScriptCreator()", "testcase": false, "constructor": true}, {"identifier": "go", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File go()", "full_signature": "public File go()", "class_method_signature": "ChangeScriptCreator.go()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void validate()", "full_signature": "private void validate()", "class_method_signature": "ChangeScriptCreator.validate()", "testcase": false, "constructor": false}, {"identifier": "createScript", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File createScript()", "full_signature": "public File createScript()", "class_method_signature": "ChangeScriptCreator.createScript()", "testcase": false, "constructor": false}, {"identifier": "getChangeScriptFileName", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getChangeScriptFileName()", "full_signature": "private String getChangeScriptFileName()", "class_method_signature": "ChangeScriptCreator.getChangeScriptFileName()", "testcase": false, "constructor": false}, {"identifier": "getFileTimestamp", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getFileTimestamp()", "full_signature": "private String getFileTimestamp()", "class_method_signature": "ChangeScriptCreator.getFileTimestamp()", "testcase": false, "constructor": false}, {"identifier": "setScriptDescription", "parameters": "(final String scriptDescription)", "modifiers": "public", "return": "void", "signature": "void setScriptDescription(final String scriptDescription)", "full_signature": "public void setScriptDescription(final String scriptDescription)", "class_method_signature": "ChangeScriptCreator.setScriptDescription(final String scriptDescription)", "testcase": false, "constructor": false}, {"identifier": "setScriptDirectory", "parameters": "(final File scriptDirectory)", "modifiers": "public", "return": "void", "signature": "void setScriptDirectory(final File scriptDirectory)", "full_signature": "public void setScriptDirectory(final File scriptDirectory)", "class_method_signature": "ChangeScriptCreator.setScriptDirectory(final File scriptDirectory)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "ChangeScriptCreator.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "parseArguments", "parameters": "(String[] args, ChangeScriptCreator creator)", "modifiers": "private static", "return": "void", "signature": "void parseArguments(String[] args, ChangeScriptCreator creator)", "full_signature": "private static void parseArguments(String[] args, ChangeScriptCreator creator)", "class_method_signature": "ChangeScriptCreator.parseArguments(String[] args, ChangeScriptCreator creator)", "testcase": false, "constructor": false}], "file": "dbdeploy-core/src/main/java/com/dbdeploy/scripts/ChangeScriptCreator.java"}, "focal_method": {"identifier": "createScript", "parameters": "()", "modifiers": "public", "return": "File", "body": "public File createScript() throws IOException {\n        final String newScriptFileName = getChangeScriptFileName();\n        final String fullScriptPath = scriptDirectory + File.separator + newScriptFileName;\n\n        final File newChangeScriptFile = new File(fullScriptPath);\n        if (newChangeScriptFile.createNewFile()) {\n            return newChangeScriptFile;\n        } else {\n            throw new IOException(\"Unable to create new change script \" + fullScriptPath);\n        }\n    }", "signature": "File createScript()", "full_signature": "public File createScript()", "class_method_signature": "ChangeScriptCreator.createScript()", "testcase": false, "constructor": false, "invocations": ["getChangeScriptFileName", "createNewFile"]}, "repository": {"repo_id": 145875, "url": "https://github.com/tackley/dbdeploy", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 64, "size": 7295, "license": "licensed"}}