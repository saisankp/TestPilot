{"test_class": {"identifier": "MultiplePdfMergeInputAdapterTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-conversion/src/test/java/org/sejda/conversion/MultiplePdfMergeInputAdapterTest.java"}, "test_case": {"identifier": "testPositive", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPositive(){\n        File file = mock(File.class);\n        when(file.isFile()).thenReturn(true);\n        when(file.getName()).thenReturn(\"test.pdf\");\n        List<PdfFileSource> inputList = new ArrayList<PdfFileSource>();\n        inputList.add(PdfFileSource.newInstanceNoPassword(file));\n        inputList.add(PdfFileSource.newInstanceNoPassword(file));\n        List<PdfMergeInput> result = new MultiplePdfMergeInputAdapter(inputList,\n                new MultiplePageRangeSetAdapter(\"3-5\").ranges()).getPdfMergeInputs();\n        assertEquals(2, result.size());\n        assertFalse(result.get(0).isAllPages());\n        assertTrue(result.get(1).isAllPages());\n    }", "signature": "void testPositive()", "full_signature": "@Test public void testPositive()", "class_method_signature": "MultiplePdfMergeInputAdapterTest.testPositive()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "isFile", "thenReturn", "when", "getName", "add", "newInstanceNoPassword", "add", "newInstanceNoPassword", "getPdfMergeInputs", "ranges", "assertEquals", "size", "assertFalse", "isAllPages", "get", "assertTrue", "isAllPages", "get"]}, "focal_class": {"identifier": "MultiplePdfMergeInputAdapter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final List<PdfMergeInput> pdfMergeInputs = new ArrayList<PdfMergeInput>();", "modifier": "private final", "type": "List<PdfMergeInput>", "declarator": "pdfMergeInputs = new ArrayList<PdfMergeInput>()", "var_name": "pdfMergeInputs"}], "methods": [{"identifier": "MultiplePdfMergeInputAdapter", "parameters": "(List<PdfFileSource> inputFiles, List<Set<PageRange>> pageRanges)", "modifiers": "public", "return": "", "signature": " MultiplePdfMergeInputAdapter(List<PdfFileSource> inputFiles, List<Set<PageRange>> pageRanges)", "full_signature": "public  MultiplePdfMergeInputAdapter(List<PdfFileSource> inputFiles, List<Set<PageRange>> pageRanges)", "class_method_signature": "MultiplePdfMergeInputAdapter.MultiplePdfMergeInputAdapter(List<PdfFileSource> inputFiles, List<Set<PageRange>> pageRanges)", "testcase": false, "constructor": true}, {"identifier": "getPdfMergeInputs", "parameters": "()", "modifiers": "public", "return": "List<PdfMergeInput>", "signature": "List<PdfMergeInput> getPdfMergeInputs()", "full_signature": "public List<PdfMergeInput> getPdfMergeInputs()", "class_method_signature": "MultiplePdfMergeInputAdapter.getPdfMergeInputs()", "testcase": false, "constructor": false}], "file": "sejda-conversion/src/main/java/org/sejda/conversion/MultiplePdfMergeInputAdapter.java"}, "focal_method": {"identifier": "getPdfMergeInputs", "parameters": "()", "modifiers": "public", "return": "List<PdfMergeInput>", "body": "public List<PdfMergeInput> getPdfMergeInputs() {\n        return pdfMergeInputs;\n    }", "signature": "List<PdfMergeInput> getPdfMergeInputs()", "full_signature": "public List<PdfMergeInput> getPdfMergeInputs()", "class_method_signature": "MultiplePdfMergeInputAdapter.getPdfMergeInputs()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}