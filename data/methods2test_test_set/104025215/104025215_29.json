{"test_class": {"identifier": "FastSafeIterableMapTest", "superclass": "", "interfaces": "", "fields": [], "file": "app-toolkit/common/src/test/java/android/arch/core/internal/FastSafeIterableMapTest.java"}, "test_case": {"identifier": "testCeil", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCeil() {\n        FastSafeIterableMap<Integer, Boolean> map = new FastSafeIterableMap<>();\n        assertThat(map.ceil(1), nullValue());\n        map.putIfAbsent(1, false);\n        assertThat(map.ceil(1), nullValue());\n        map.putIfAbsent(2, false);\n        assertThat(map.ceil(2).getKey(), is(1));\n        map.remove(1);\n        assertThat(map.ceil(2), nullValue());\n    }", "signature": "void testCeil()", "full_signature": "@Test public void testCeil()", "class_method_signature": "FastSafeIterableMapTest.testCeil()", "testcase": true, "constructor": false, "invocations": ["assertThat", "ceil", "nullValue", "putIfAbsent", "assertThat", "ceil", "nullValue", "putIfAbsent", "assertThat", "getKey", "ceil", "is", "remove", "assertThat", "ceil", "nullValue"]}, "focal_class": {"identifier": "FastSafeIterableMap", "superclass": "extends SafeIterableMap<K, V>", "interfaces": "", "fields": [{"original_string": "private HashMap<K, Entry<K, V>> mHashMap = new HashMap<>();", "modifier": "private", "type": "HashMap<K, Entry<K, V>>", "declarator": "mHashMap = new HashMap<>()", "var_name": "mHashMap"}], "methods": [{"identifier": "get", "parameters": "(K k)", "modifiers": "@Override protected", "return": "Entry<K, V>", "signature": "Entry<K, V> get(K k)", "full_signature": "@Override protected Entry<K, V> get(K k)", "class_method_signature": "FastSafeIterableMap.get(K k)", "testcase": false, "constructor": false}, {"identifier": "putIfAbsent", "parameters": "(@NonNull K key, @NonNull V v)", "modifiers": "@Override public", "return": "V", "signature": "V putIfAbsent(@NonNull K key, @NonNull V v)", "full_signature": "@Override public V putIfAbsent(@NonNull K key, @NonNull V v)", "class_method_signature": "FastSafeIterableMap.putIfAbsent(@NonNull K key, @NonNull V v)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(@NonNull K key)", "modifiers": "@Override public", "return": "V", "signature": "V remove(@NonNull K key)", "full_signature": "@Override public V remove(@NonNull K key)", "class_method_signature": "FastSafeIterableMap.remove(@NonNull K key)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(K key)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(K key)", "full_signature": "public boolean contains(K key)", "class_method_signature": "FastSafeIterableMap.contains(K key)", "testcase": false, "constructor": false}, {"identifier": "ceil", "parameters": "(K k)", "modifiers": "public", "return": "Map.Entry<K, V>", "signature": "Map.Entry<K, V> ceil(K k)", "full_signature": "public Map.Entry<K, V> ceil(K k)", "class_method_signature": "FastSafeIterableMap.ceil(K k)", "testcase": false, "constructor": false}], "file": "app-toolkit/common/src/main/java/android/arch/core/internal/FastSafeIterableMap.java"}, "focal_method": {"identifier": "ceil", "parameters": "(K k)", "modifiers": "public", "return": "Map.Entry<K, V>", "body": "public Map.Entry<K, V> ceil(K k) {\n        if (contains(k)) {\n            return mHashMap.get(k).mPrevious;\n        }\n        return null;\n    }", "signature": "Map.Entry<K, V> ceil(K k)", "full_signature": "public Map.Entry<K, V> ceil(K k)", "class_method_signature": "FastSafeIterableMap.ceil(K k)", "testcase": false, "constructor": false, "invocations": ["contains", "get"]}, "repository": {"repo_id": 104025215, "url": "https://github.com/Rayduh/support", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 8, "size": 253405, "license": "licensed"}}