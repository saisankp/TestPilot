{"test_class": {"identifier": "LocalesTest", "superclass": "extends TestBase", "interfaces": "", "fields": [], "file": "base/lang/src/test/java/leap/lang/LocalesTest.java"}, "test_case": {"identifier": "testForName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testForName(){\n\t\tLocale locale = Locales.forName(\"en\");\n\t\tassertNotNull(locale);\n\t\tassertEquals(\"en\", locale.toString());\n\t\t\n\t\tlocale = Locales.forName(\"zh\");\n\t\tassertNotNull(locale);\n\t\tassertEquals(\"zh\", locale.toString());\n\t\t\n\t\tlocale = Locales.forName(\"zh_CN\");\n\t\tassertNotNull(locale);\n\t\tassertEquals(\"zh_CN\", locale.toString());\n\t}", "signature": "void testForName()", "full_signature": "@Test public void testForName()", "class_method_signature": "LocalesTest.testForName()", "testcase": true, "constructor": false, "invocations": ["forName", "assertNotNull", "assertEquals", "toString", "forName", "assertNotNull", "assertEquals", "toString", "forName", "assertNotNull", "assertEquals", "toString"]}, "focal_class": {"identifier": "Locales", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final Locale DEFAULT_LOCALE = Locale.getDefault();", "modifier": "public static final", "type": "Locale", "declarator": "DEFAULT_LOCALE = Locale.getDefault()", "var_name": "DEFAULT_LOCALE"}], "methods": [{"identifier": "toName", "parameters": "(Locale locale)", "modifiers": "public static", "return": "String", "signature": "String toName(Locale locale)", "full_signature": "public static String toName(Locale locale)", "class_method_signature": "Locales.toName(Locale locale)", "testcase": false, "constructor": false}, {"identifier": "tryForName", "parameters": "(String localName)", "modifiers": "public static", "return": "Locale", "signature": "Locale tryForName(String localName)", "full_signature": "public static Locale tryForName(String localName)", "class_method_signature": "Locales.tryForName(String localName)", "testcase": false, "constructor": false}, {"identifier": "forName", "parameters": "(String localeName)", "modifiers": "public static", "return": "Locale", "signature": "Locale forName(String localeName)", "full_signature": "public static Locale forName(String localeName)", "class_method_signature": "Locales.forName(String localeName)", "testcase": false, "constructor": false}, {"identifier": "extractFromFilename", "parameters": "(String filename)", "modifiers": "public static", "return": "String", "signature": "String extractFromFilename(String filename)", "full_signature": "public static String extractFromFilename(String filename)", "class_method_signature": "Locales.extractFromFilename(String filename)", "testcase": false, "constructor": false}, {"identifier": "getLocalePaths", "parameters": "(Locale locale, String path)", "modifiers": "public static", "return": "String[]", "signature": "String[] getLocalePaths(Locale locale, String path)", "full_signature": "public static String[] getLocalePaths(Locale locale, String path)", "class_method_signature": "Locales.getLocalePaths(Locale locale, String path)", "testcase": false, "constructor": false}, {"identifier": "getLocalePaths", "parameters": "(Locale locale, String path,String suffix)", "modifiers": "public static", "return": "String[]", "signature": "String[] getLocalePaths(Locale locale, String path,String suffix)", "full_signature": "public static String[] getLocalePaths(Locale locale, String path,String suffix)", "class_method_signature": "Locales.getLocalePaths(Locale locale, String path,String suffix)", "testcase": false, "constructor": false}, {"identifier": "getLocaleFilePaths", "parameters": "(Locale locale, String filePath)", "modifiers": "public static", "return": "String[]", "signature": "String[] getLocaleFilePaths(Locale locale, String filePath)", "full_signature": "public static String[] getLocaleFilePaths(Locale locale, String filePath)", "class_method_signature": "Locales.getLocaleFilePaths(Locale locale, String filePath)", "testcase": false, "constructor": false}, {"identifier": "Locales", "parameters": "()", "modifiers": "protected", "return": "", "signature": " Locales()", "full_signature": "protected  Locales()", "class_method_signature": "Locales.Locales()", "testcase": false, "constructor": true}], "file": "base/lang/src/main/java/leap/lang/Locales.java"}, "focal_method": {"identifier": "forName", "parameters": "(String localeName)", "modifiers": "public static", "return": "Locale", "body": "public static Locale forName(String localeName) {\n\t\tArgs.notEmpty(localeName,\"locale name\");\n        int len = localeName.length();\n        if (len != 2 && len != 5 && len < 7) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + localeName);\n        }\n        char ch0 = localeName.charAt(0);\n        char ch1 = localeName.charAt(1);\n        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + localeName);\n        }\n        if (len == 2) {\n            return new Locale(localeName, \"\");\n        } else {\n            if (localeName.charAt(2) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + localeName);\n            }\n            char ch3 = localeName.charAt(3);\n            if (ch3 == '_') {\n                return new Locale(localeName.substring(0, 2), \"\", localeName.substring(4));\n            }\n            char ch4 = localeName.charAt(4);\n            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + localeName);\n            }\n            if (len == 5) {\n                return new Locale(localeName.substring(0, 2), localeName.substring(3, 5));\n            } else {\n                if (localeName.charAt(5) != '_') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + localeName);\n                }\n                return new Locale(localeName.substring(0, 2), localeName.substring(3, 5), localeName.substring(6));\n            }\n        }\n\t}", "signature": "Locale forName(String localeName)", "full_signature": "public static Locale forName(String localeName)", "class_method_signature": "Locales.forName(String localeName)", "testcase": false, "constructor": false, "invocations": ["notEmpty", "length", "charAt", "charAt", "charAt", "charAt", "substring", "substring", "charAt", "substring", "substring", "charAt", "substring", "substring", "substring"]}, "repository": {"repo_id": 48562236, "url": "https://github.com/leapframework/framework", "stars": 42, "created": "12/25/2015 1:54:52 AM +00:00", "updates": "2020-01-20T03:04:15+00:00", "fork": "False", "license": "licensed"}}