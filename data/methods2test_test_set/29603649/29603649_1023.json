{"test_class": {"identifier": "UrlAccessLogMessageAssemblerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private IpAddressResolver ipAddressResolver;", "modifier": "@Mock\n    private", "type": "IpAddressResolver", "declarator": "ipAddressResolver", "var_name": "ipAddressResolver"}, {"original_string": "@InjectMocks\n    private UrlAccessLogMessageAssembler underTest;", "modifier": "@InjectMocks\n    private", "type": "UrlAccessLogMessageAssembler", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "@Mock\n    private HttpServletRequest request;", "modifier": "@Mock\n    private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "private String message;", "modifier": "private", "type": "String", "declarator": "message", "var_name": "message"}], "file": "wilma-application/modules/wilma-webapp/src/test/java/com/epam/wilma/webapp/helper/UrlAccessLogMessageAssemblerTest.java"}, "test_case": {"identifier": "testAssembleMessageShouldResolveIpOfRequestToHostName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAssembleMessageShouldResolveIpOfRequestToHostName() {\n        //GIVEN\n        given(request.getRemoteAddr()).willReturn(\"ipAddress\");\n        //WHEN\n        underTest.assembleMessage(request, message);\n        //THEN\n        verify(ipAddressResolver).resolveToHostName(\"ipAddress\");\n    }", "signature": "void testAssembleMessageShouldResolveIpOfRequestToHostName()", "full_signature": "@Test public void testAssembleMessageShouldResolveIpOfRequestToHostName()", "class_method_signature": "UrlAccessLogMessageAssemblerTest.testAssembleMessageShouldResolveIpOfRequestToHostName()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getRemoteAddr", "assembleMessage", "resolveToHostName", "verify"]}, "focal_class": {"identifier": "UrlAccessLogMessageAssembler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String INFO_TEMPLATE = \"URL: '%s', accessed from: '%s', message: '%s'\";", "modifier": "private static final", "type": "String", "declarator": "INFO_TEMPLATE = \"URL: '%s', accessed from: '%s', message: '%s'\"", "var_name": "INFO_TEMPLATE"}, {"original_string": "private static final String DENY_INFO_TEMPLATE = \"Denied access to URL: '%s', from: '%s'\";", "modifier": "private static final", "type": "String", "declarator": "DENY_INFO_TEMPLATE = \"Denied access to URL: '%s', from: '%s'\"", "var_name": "DENY_INFO_TEMPLATE"}, {"original_string": "@Autowired\n    private IpAddressResolver ipAddressResolver;", "modifier": "@Autowired\n    private", "type": "IpAddressResolver", "declarator": "ipAddressResolver", "var_name": "ipAddressResolver"}], "methods": [{"identifier": "assembleMessage", "parameters": "(HttpServletRequest request, String message)", "modifiers": "public", "return": "String", "signature": "String assembleMessage(HttpServletRequest request, String message)", "full_signature": "public String assembleMessage(HttpServletRequest request, String message)", "class_method_signature": "UrlAccessLogMessageAssembler.assembleMessage(HttpServletRequest request, String message)", "testcase": false, "constructor": false}, {"identifier": "assembleDenyMessage", "parameters": "(HttpServletRequest request)", "modifiers": "public", "return": "String", "signature": "String assembleDenyMessage(HttpServletRequest request)", "full_signature": "public String assembleDenyMessage(HttpServletRequest request)", "class_method_signature": "UrlAccessLogMessageAssembler.assembleDenyMessage(HttpServletRequest request)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-webapp/src/main/java/com/epam/wilma/webapp/helper/UrlAccessLogMessageAssembler.java"}, "focal_method": {"identifier": "assembleMessage", "parameters": "(HttpServletRequest request, String message)", "modifiers": "public", "return": "String", "body": "public String assembleMessage(HttpServletRequest request, String message) {\n        String ip = request.getRemoteAddr();\n        String host = ipAddressResolver.resolveToHostName(ip);\n        return String.format(INFO_TEMPLATE, request.getRequestURI(), host, message);\n    }", "signature": "String assembleMessage(HttpServletRequest request, String message)", "full_signature": "public String assembleMessage(HttpServletRequest request, String message)", "class_method_signature": "UrlAccessLogMessageAssembler.assembleMessage(HttpServletRequest request, String message)", "testcase": false, "constructor": false, "invocations": ["getRemoteAddr", "resolveToHostName", "format", "getRequestURI"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}