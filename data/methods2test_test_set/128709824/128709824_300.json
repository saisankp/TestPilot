{"test_class": {"identifier": "BoltClientTransportTest", "superclass": "extends ActivelyDestroyTest", "interfaces": "", "fields": [], "file": "remoting/remoting-bolt/src/test/java/com/alipay/sofa/rpc/transport/bolt/BoltClientTransportTest.java"}, "test_case": {"identifier": "testConvertToRpcException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvertToRpcException() {\n        ClientTransportConfig config1 = new ClientTransportConfig();\n        config1.setProviderInfo(new ProviderInfo().setHost(\"127.0.0.1\").setPort(12222))\n            .setContainer(\"bolt\");\n        BoltClientTransport transport = new BoltClientTransport(config1);\n        Assert.assertTrue(transport\n            .convertToRpcException(new SofaRpcException(RpcErrorType.CLIENT_UNDECLARED_ERROR, \"\"))\n            instanceof SofaRpcException);\n        Assert.assertTrue(transport.convertToRpcException(new InvokeTimeoutException())\n            instanceof SofaTimeOutException);\n        Assert.assertTrue(transport.convertToRpcException(new InvokeServerBusyException())\n            .getErrorType() == RpcErrorType.SERVER_BUSY);\n        Assert.assertTrue(transport.convertToRpcException(new SerializationException(\"xx\", true))\n            .getErrorType() == RpcErrorType.SERVER_SERIALIZE);\n        Assert.assertTrue(transport.convertToRpcException(new SerializationException(\"xx\", false))\n            .getErrorType() == RpcErrorType.CLIENT_SERIALIZE);\n        Assert.assertTrue(transport.convertToRpcException(new DeserializationException(\"xx\", true))\n            .getErrorType() == RpcErrorType.SERVER_DESERIALIZE);\n        Assert.assertTrue(transport.convertToRpcException(new DeserializationException(\"xx\", false))\n            .getErrorType() == RpcErrorType.CLIENT_DESERIALIZE);\n        Assert.assertTrue(transport.convertToRpcException(new ConnectionClosedException())\n            .getErrorType() == RpcErrorType.CLIENT_NETWORK);\n        Assert.assertTrue(transport.convertToRpcException(new InvokeSendFailedException())\n            .getErrorType() == RpcErrorType.CLIENT_NETWORK);\n        Assert.assertTrue(transport.convertToRpcException(new InvokeServerException())\n            .getErrorType() == RpcErrorType.SERVER_UNDECLARED_ERROR);\n        Assert.assertTrue(transport.convertToRpcException(new UnsupportedOperationException())\n            .getErrorType() == RpcErrorType.CLIENT_UNDECLARED_ERROR);\n    }", "signature": "void testConvertToRpcException()", "full_signature": "@Test public void testConvertToRpcException()", "class_method_signature": "BoltClientTransportTest.testConvertToRpcException()", "testcase": true, "constructor": false, "invocations": ["setContainer", "setProviderInfo", "setPort", "setHost", "assertTrue", "convertToRpcException", "assertTrue", "convertToRpcException", "assertTrue", "getErrorType", "convertToRpcException", "assertTrue", "getErrorType", "convertToRpcException", "assertTrue", "getErrorType", "convertToRpcException", "assertTrue", "getErrorType", "convertToRpcException", "assertTrue", "getErrorType", "convertToRpcException", "assertTrue", "getErrorType", "convertToRpcException", "assertTrue", "getErrorType", "convertToRpcException", "assertTrue", "getErrorType", "convertToRpcException", "assertTrue", "getErrorType", "convertToRpcException"]}, "focal_class": {"identifier": "BoltClientTransport", "superclass": "extends ClientTransport", "interfaces": "", "fields": [{"original_string": "private static final Logger                  LOGGER            = LoggerFactory.getLogger(BoltClientTransport.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER            = LoggerFactory.getLogger(BoltClientTransport.class)", "var_name": "LOGGER"}, {"original_string": "protected static final RpcClient             RPC_CLIENT        = new RpcClient();", "modifier": "protected static final", "type": "RpcClient", "declarator": "RPC_CLIENT        = new RpcClient()", "var_name": "RPC_CLIENT"}, {"original_string": "protected static final boolean               REUSE_CONNECTION  = RpcConfigs.getOrDefaultValue(\n                                                                       RpcOptions.TRANSPORT_CONNECTION_REUSE, true);", "modifier": "protected static final", "type": "boolean", "declarator": "REUSE_CONNECTION  = RpcConfigs.getOrDefaultValue(\n                                                                       RpcOptions.TRANSPORT_CONNECTION_REUSE, true)", "var_name": "REUSE_CONNECTION"}, {"original_string": "protected static BoltClientConnectionManager connectionManager = REUSE_CONNECTION ? new ReuseBoltClientConnectionManager(\n                                                                       true)\n                                                                       : new AloneBoltClientConnectionManager(\n                                                                           true);", "modifier": "protected static", "type": "BoltClientConnectionManager", "declarator": "connectionManager = REUSE_CONNECTION ? new ReuseBoltClientConnectionManager(\n                                                                       true)\n                                                                       : new AloneBoltClientConnectionManager(\n                                                                           true)", "var_name": "connectionManager"}, {"original_string": "protected final Url                          url;", "modifier": "protected final", "type": "Url", "declarator": "url", "var_name": "url"}, {"original_string": "protected volatile AtomicInteger             currentRequests   = new AtomicInteger(0);", "modifier": "protected volatile", "type": "AtomicInteger", "declarator": "currentRequests   = new AtomicInteger(0)", "var_name": "currentRequests"}], "methods": [{"identifier": "BoltClientTransport", "parameters": "(ClientTransportConfig transportConfig)", "modifiers": "protected", "return": "", "signature": " BoltClientTransport(ClientTransportConfig transportConfig)", "full_signature": "protected  BoltClientTransport(ClientTransportConfig transportConfig)", "class_method_signature": "BoltClientTransport.BoltClientTransport(ClientTransportConfig transportConfig)", "testcase": false, "constructor": true}, {"identifier": "convertProviderToUrl", "parameters": "(ClientTransportConfig transportConfig, ProviderInfo providerInfo)", "modifiers": "protected", "return": "Url", "signature": "Url convertProviderToUrl(ClientTransportConfig transportConfig, ProviderInfo providerInfo)", "full_signature": "protected Url convertProviderToUrl(ClientTransportConfig transportConfig, ProviderInfo providerInfo)", "class_method_signature": "BoltClientTransport.convertProviderToUrl(ClientTransportConfig transportConfig, ProviderInfo providerInfo)", "testcase": false, "constructor": false}, {"identifier": "connect", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void connect()", "full_signature": "@Override public void connect()", "class_method_signature": "BoltClientTransport.connect()", "testcase": false, "constructor": false}, {"identifier": "disconnect", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void disconnect()", "full_signature": "@Override public void disconnect()", "class_method_signature": "BoltClientTransport.disconnect()", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void destroy()", "full_signature": "@Override public void destroy()", "class_method_signature": "BoltClientTransport.destroy()", "testcase": false, "constructor": false}, {"identifier": "isAvailable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAvailable()", "full_signature": "@Override public boolean isAvailable()", "class_method_signature": "BoltClientTransport.isAvailable()", "testcase": false, "constructor": false}, {"identifier": "setChannel", "parameters": "(AbstractChannel channel)", "modifiers": "@Override public", "return": "void", "signature": "void setChannel(AbstractChannel channel)", "full_signature": "@Override public void setChannel(AbstractChannel channel)", "class_method_signature": "BoltClientTransport.setChannel(AbstractChannel channel)", "testcase": false, "constructor": false}, {"identifier": "getChannel", "parameters": "()", "modifiers": "@Override public", "return": "AbstractChannel", "signature": "AbstractChannel getChannel()", "full_signature": "@Override public AbstractChannel getChannel()", "class_method_signature": "BoltClientTransport.getChannel()", "testcase": false, "constructor": false}, {"identifier": "currentRequests", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int currentRequests()", "full_signature": "@Override public int currentRequests()", "class_method_signature": "BoltClientTransport.currentRequests()", "testcase": false, "constructor": false}, {"identifier": "asyncSend", "parameters": "(SofaRequest request, int timeout)", "modifiers": "@Override public", "return": "ResponseFuture", "signature": "ResponseFuture asyncSend(SofaRequest request, int timeout)", "full_signature": "@Override public ResponseFuture asyncSend(SofaRequest request, int timeout)", "class_method_signature": "BoltClientTransport.asyncSend(SofaRequest request, int timeout)", "testcase": false, "constructor": false}, {"identifier": "doInvokeAsync", "parameters": "(SofaRequest request, RpcInternalContext rpcContext,\n                                           InvokeContext invokeContext, int timeoutMillis)", "modifiers": "protected", "return": "ResponseFuture", "signature": "ResponseFuture doInvokeAsync(SofaRequest request, RpcInternalContext rpcContext,\n                                           InvokeContext invokeContext, int timeoutMillis)", "full_signature": "protected ResponseFuture doInvokeAsync(SofaRequest request, RpcInternalContext rpcContext,\n                                           InvokeContext invokeContext, int timeoutMillis)", "class_method_signature": "BoltClientTransport.doInvokeAsync(SofaRequest request, RpcInternalContext rpcContext,\n                                           InvokeContext invokeContext, int timeoutMillis)", "testcase": false, "constructor": false}, {"identifier": "syncSend", "parameters": "(SofaRequest request, int timeout)", "modifiers": "@Override public", "return": "SofaResponse", "signature": "SofaResponse syncSend(SofaRequest request, int timeout)", "full_signature": "@Override public SofaResponse syncSend(SofaRequest request, int timeout)", "class_method_signature": "BoltClientTransport.syncSend(SofaRequest request, int timeout)", "testcase": false, "constructor": false}, {"identifier": "doInvokeSync", "parameters": "(SofaRequest request, InvokeContext invokeContext, int timeoutMillis)", "modifiers": "protected", "return": "SofaResponse", "signature": "SofaResponse doInvokeSync(SofaRequest request, InvokeContext invokeContext, int timeoutMillis)", "full_signature": "protected SofaResponse doInvokeSync(SofaRequest request, InvokeContext invokeContext, int timeoutMillis)", "class_method_signature": "BoltClientTransport.doInvokeSync(SofaRequest request, InvokeContext invokeContext, int timeoutMillis)", "testcase": false, "constructor": false}, {"identifier": "oneWaySend", "parameters": "(SofaRequest request, int timeout)", "modifiers": "@Override public", "return": "void", "signature": "void oneWaySend(SofaRequest request, int timeout)", "full_signature": "@Override public void oneWaySend(SofaRequest request, int timeout)", "class_method_signature": "BoltClientTransport.oneWaySend(SofaRequest request, int timeout)", "testcase": false, "constructor": false}, {"identifier": "doOneWay", "parameters": "(SofaRequest request, InvokeContext invokeContext, int timeoutMillis)", "modifiers": "protected", "return": "void", "signature": "void doOneWay(SofaRequest request, InvokeContext invokeContext, int timeoutMillis)", "full_signature": "protected void doOneWay(SofaRequest request, InvokeContext invokeContext, int timeoutMillis)", "class_method_signature": "BoltClientTransport.doOneWay(SofaRequest request, InvokeContext invokeContext, int timeoutMillis)", "testcase": false, "constructor": false}, {"identifier": "convertToRpcException", "parameters": "(Exception e)", "modifiers": "protected", "return": "SofaRpcException", "signature": "SofaRpcException convertToRpcException(Exception e)", "full_signature": "protected SofaRpcException convertToRpcException(Exception e)", "class_method_signature": "BoltClientTransport.convertToRpcException(Exception e)", "testcase": false, "constructor": false}, {"identifier": "createInvokeContext", "parameters": "(SofaRequest request)", "modifiers": "protected", "return": "InvokeContext", "signature": "InvokeContext createInvokeContext(SofaRequest request)", "full_signature": "protected InvokeContext createInvokeContext(SofaRequest request)", "class_method_signature": "BoltClientTransport.createInvokeContext(SofaRequest request)", "testcase": false, "constructor": false}, {"identifier": "beforeSend", "parameters": "(RpcInternalContext context, SofaRequest request)", "modifiers": "protected", "return": "void", "signature": "void beforeSend(RpcInternalContext context, SofaRequest request)", "full_signature": "protected void beforeSend(RpcInternalContext context, SofaRequest request)", "class_method_signature": "BoltClientTransport.beforeSend(RpcInternalContext context, SofaRequest request)", "testcase": false, "constructor": false}, {"identifier": "afterSend", "parameters": "(RpcInternalContext context, InvokeContext invokeContext, SofaRequest request)", "modifiers": "protected", "return": "void", "signature": "void afterSend(RpcInternalContext context, InvokeContext invokeContext, SofaRequest request)", "full_signature": "protected void afterSend(RpcInternalContext context, InvokeContext invokeContext, SofaRequest request)", "class_method_signature": "BoltClientTransport.afterSend(RpcInternalContext context, InvokeContext invokeContext, SofaRequest request)", "testcase": false, "constructor": false}, {"identifier": "receiveRpcResponse", "parameters": "(SofaResponse response)", "modifiers": "@Override public", "return": "void", "signature": "void receiveRpcResponse(SofaResponse response)", "full_signature": "@Override public void receiveRpcResponse(SofaResponse response)", "class_method_signature": "BoltClientTransport.receiveRpcResponse(SofaResponse response)", "testcase": false, "constructor": false}, {"identifier": "handleRpcRequest", "parameters": "(SofaRequest request)", "modifiers": "@Override public", "return": "void", "signature": "void handleRpcRequest(SofaRequest request)", "full_signature": "@Override public void handleRpcRequest(SofaRequest request)", "class_method_signature": "BoltClientTransport.handleRpcRequest(SofaRequest request)", "testcase": false, "constructor": false}, {"identifier": "remoteAddress", "parameters": "()", "modifiers": "@Override public", "return": "InetSocketAddress", "signature": "InetSocketAddress remoteAddress()", "full_signature": "@Override public InetSocketAddress remoteAddress()", "class_method_signature": "BoltClientTransport.remoteAddress()", "testcase": false, "constructor": false}, {"identifier": "localAddress", "parameters": "()", "modifiers": "@Override public", "return": "InetSocketAddress", "signature": "InetSocketAddress localAddress()", "full_signature": "@Override public InetSocketAddress localAddress()", "class_method_signature": "BoltClientTransport.localAddress()", "testcase": false, "constructor": false}, {"identifier": "checkConnection", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void checkConnection()", "full_signature": "protected void checkConnection()", "class_method_signature": "BoltClientTransport.checkConnection()", "testcase": false, "constructor": false}, {"identifier": "putToContextIfNotNull", "parameters": "(InvokeContext invokeContext, String oldKey,\n                                         RpcInternalContext context, String key)", "modifiers": "protected", "return": "void", "signature": "void putToContextIfNotNull(InvokeContext invokeContext, String oldKey,\n                                         RpcInternalContext context, String key)", "full_signature": "protected void putToContextIfNotNull(InvokeContext invokeContext, String oldKey,\n                                         RpcInternalContext context, String key)", "class_method_signature": "BoltClientTransport.putToContextIfNotNull(InvokeContext invokeContext, String oldKey,\n                                         RpcInternalContext context, String key)", "testcase": false, "constructor": false}, {"identifier": "fetchConnection", "parameters": "()", "modifiers": "public", "return": "Connection", "signature": "Connection fetchConnection()", "full_signature": "public Connection fetchConnection()", "class_method_signature": "BoltClientTransport.fetchConnection()", "testcase": false, "constructor": false}], "file": "remoting/remoting-bolt/src/main/java/com/alipay/sofa/rpc/transport/bolt/BoltClientTransport.java"}, "focal_method": {"identifier": "convertToRpcException", "parameters": "(Exception e)", "modifiers": "protected", "return": "SofaRpcException", "body": "protected SofaRpcException convertToRpcException(Exception e) {\n        SofaRpcException exception;\n        if (e instanceof SofaRpcException) {\n            exception = (SofaRpcException) e;\n        }\n        // \u8d85\u65f6\n        else if (e instanceof InvokeTimeoutException) {\n            exception = new SofaTimeOutException(e);\n        }\n        // \u670d\u52a1\u5668\u5fd9\n        else if (e instanceof InvokeServerBusyException) {\n            exception = new SofaRpcException(RpcErrorType.SERVER_BUSY, e);\n        }\n        // \u5e8f\u5217\u5316\n        else if (e instanceof SerializationException) {\n            boolean isServer = ((SerializationException) e).isServerSide();\n            exception = isServer ? new SofaRpcException(RpcErrorType.SERVER_SERIALIZE, e)\n                : new SofaRpcException(RpcErrorType.CLIENT_SERIALIZE, e);\n        }\n        // \u53cd\u5e8f\u5217\u5316\n        else if (e instanceof DeserializationException) {\n            boolean isServer = ((DeserializationException) e).isServerSide();\n            exception = isServer ? new SofaRpcException(RpcErrorType.SERVER_DESERIALIZE, e)\n                : new SofaRpcException(RpcErrorType.CLIENT_DESERIALIZE, e);\n        }\n        // \u957f\u8fde\u63a5\u65ad\u8fde\n        else if (e instanceof ConnectionClosedException) {\n            exception = new SofaRpcException(RpcErrorType.CLIENT_NETWORK, e);\n        }\n        // \u5ba2\u6237\u7aef\u53d1\u9001\u5931\u8d25\n        else if (e instanceof InvokeSendFailedException) {\n            exception = new SofaRpcException(RpcErrorType.CLIENT_NETWORK, e);\n        }\n        // \u670d\u52a1\u7aef\u672a\u77e5\u5f02\u5e38\n        else if (e instanceof InvokeServerException) {\n            exception = new SofaRpcException(RpcErrorType.SERVER_UNDECLARED_ERROR, e.getCause());\n        }\n        // \u5ba2\u6237\u7aef\u672a\u77e5\n        else {\n            exception = new SofaRpcException(RpcErrorType.CLIENT_UNDECLARED_ERROR, e);\n        }\n        return exception;\n    }", "signature": "SofaRpcException convertToRpcException(Exception e)", "full_signature": "protected SofaRpcException convertToRpcException(Exception e)", "class_method_signature": "BoltClientTransport.convertToRpcException(Exception e)", "testcase": false, "constructor": false, "invocations": ["isServerSide", "isServerSide", "getCause"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}