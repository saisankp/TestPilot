{"test_class": {"identifier": "BrokerTokenIdentifierTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static FakeKDC fakeKDC;", "modifier": "private static", "type": "FakeKDC", "declarator": "fakeKDC", "var_name": "fakeKDC"}, {"original_string": "@Rule\n    public static final GrpcCleanupRule grpcCleanup = new GrpcCleanupRule();", "modifier": "@Rule\n    public static final", "type": "GrpcCleanupRule", "declarator": "grpcCleanup = new GrpcCleanupRule()", "var_name": "grpcCleanup"}], "file": "code/client/hadoop-connector/src/test/java/com/google/cloud/broker/client/hadoop/fs/BrokerTokenIdentifierTest.java"}, "test_case": {"identifier": "testGetSessionToken", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSessionToken() throws IOException {\n        TestingTools.startServer(new FakeServer(fakeKDC), grpcCleanup);\n        Configuration conf = TestingTools.getBrokerConfig();\n        Subject alice = fakeKDC.login(ALICE);\n        UserGroupInformation.loginUserFromSubject(alice);\n        String token = getSessionToken(conf);\n        assertEquals(\"FakeSessionToken/AuthenticatedUser=\" + ALICE + \";Owner=\" + ALICE + \";Target=\" + MOCK_BUCKET, token);\n        UserGroupInformation.setLoginUser(null);\n    }", "signature": "void testGetSessionToken()", "full_signature": "@Test public void testGetSessionToken()", "class_method_signature": "BrokerTokenIdentifierTest.testGetSessionToken()", "testcase": true, "constructor": false, "invocations": ["startServer", "getBrokerConfig", "login", "loginUserFromSubject", "getSessionToken", "assertEquals", "setLoginUser"]}, "focal_class": {"identifier": "BrokerTokenIdentifier", "superclass": "extends DelegationTokenIdentifier", "interfaces": "", "fields": [{"original_string": "public static final Text KIND = new Text(\"GCPBrokerSessionToken\");", "modifier": "public static final", "type": "Text", "declarator": "KIND = new Text(\"GCPBrokerSessionToken\")", "var_name": "KIND"}, {"original_string": "static final String GCS_SCOPE = \"https://www.googleapis.com/auth/devstorage.read_write\";", "modifier": "static final", "type": "String", "declarator": "GCS_SCOPE = \"https://www.googleapis.com/auth/devstorage.read_write\"", "var_name": "GCS_SCOPE"}, {"original_string": "private String sessionToken;", "modifier": "private", "type": "String", "declarator": "sessionToken", "var_name": "sessionToken"}], "methods": [{"identifier": "BrokerTokenIdentifier", "parameters": "()", "modifiers": "public", "return": "", "signature": " BrokerTokenIdentifier()", "full_signature": "public  BrokerTokenIdentifier()", "class_method_signature": "BrokerTokenIdentifier.BrokerTokenIdentifier()", "testcase": false, "constructor": true}, {"identifier": "BrokerTokenIdentifier", "parameters": "(Configuration config, Text owner, Text renewer, Text realUser, Text service)", "modifiers": "public", "return": "", "signature": " BrokerTokenIdentifier(Configuration config, Text owner, Text renewer, Text realUser, Text service)", "full_signature": "public  BrokerTokenIdentifier(Configuration config, Text owner, Text renewer, Text realUser, Text service)", "class_method_signature": "BrokerTokenIdentifier.BrokerTokenIdentifier(Configuration config, Text owner, Text renewer, Text realUser, Text service)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(DataOutput out)", "modifiers": "@Override public", "return": "void", "signature": "void write(DataOutput out)", "full_signature": "@Override public void write(DataOutput out)", "class_method_signature": "BrokerTokenIdentifier.write(DataOutput out)", "testcase": false, "constructor": false}, {"identifier": "readFields", "parameters": "(DataInput in)", "modifiers": "@Override public", "return": "void", "signature": "void readFields(DataInput in)", "full_signature": "@Override public void readFields(DataInput in)", "class_method_signature": "BrokerTokenIdentifier.readFields(DataInput in)", "testcase": false, "constructor": false}, {"identifier": "setSessionToken", "parameters": "(String sessionToken)", "modifiers": "public", "return": "void", "signature": "void setSessionToken(String sessionToken)", "full_signature": "public void setSessionToken(String sessionToken)", "class_method_signature": "BrokerTokenIdentifier.setSessionToken(String sessionToken)", "testcase": false, "constructor": false}, {"identifier": "getSessionToken", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSessionToken()", "full_signature": "public String getSessionToken()", "class_method_signature": "BrokerTokenIdentifier.getSessionToken()", "testcase": false, "constructor": false}], "file": "code/client/hadoop-connector/src/main/java/com/google/cloud/broker/client/hadoop/fs/BrokerTokenIdentifier.java"}, "focal_method": {"identifier": "getSessionToken", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getSessionToken(){\n        return sessionToken;\n    }", "signature": "String getSessionToken()", "full_signature": "public String getSessionToken()", "class_method_signature": "BrokerTokenIdentifier.getSessionToken()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 176837289, "url": "https://github.com/GoogleCloudPlatform/gcp-token-broker", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 27, "size": 1700, "license": "licensed"}}