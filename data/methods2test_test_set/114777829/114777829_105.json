{"test_class": {"identifier": "DefaultSecurityManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "webapp/impl/src/test/java/cloud/piranha/webapp/impl/DefaultSecurityManagerTest.java"}, "test_case": {"identifier": "testRemoveUser", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testRemoveUser() {\n        TestWebApplicationRequest request = new TestWebApplicationRequest();\n        request.setUserPrincipal(new UserPrincipal(\"username\"));\n        DefaultSecurityManager securityManager = new DefaultSecurityManager();\n        securityManager.addUser(\"username\", \"password\", new String[]{\"role1\", \"role2\"});\n        assertTrue(securityManager.isUserInRole(request, \"role1\"));\n        securityManager.removeUser(\"username\");\n        assertFalse(securityManager.isUserInRole(request, \"role1\"));\n    }", "signature": "void testRemoveUser()", "full_signature": "@Test void testRemoveUser()", "class_method_signature": "DefaultSecurityManagerTest.testRemoveUser()", "testcase": true, "constructor": false, "invocations": ["setUserPrincipal", "addUser", "assertTrue", "isUserInRole", "removeUser", "assertFalse", "isUserInRole"]}, "focal_class": {"identifier": "DefaultSecurityManager", "superclass": "", "interfaces": "implements SecurityManager", "fields": [{"original_string": "protected boolean denyUncoveredHttpMethods = false;", "modifier": "protected", "type": "boolean", "declarator": "denyUncoveredHttpMethods = false", "var_name": "denyUncoveredHttpMethods"}, {"original_string": "protected final HashMap<String, String> logins = new HashMap<>();", "modifier": "protected final", "type": "HashMap<String, String>", "declarator": "logins = new HashMap<>()", "var_name": "logins"}, {"original_string": "protected ArrayList<String> roles = new ArrayList<>();", "modifier": "protected", "type": "ArrayList<String>", "declarator": "roles = new ArrayList<>()", "var_name": "roles"}, {"original_string": "protected final HashMap<String, String[]> userRoles = new HashMap<>();", "modifier": "protected final", "type": "HashMap<String, String[]>", "declarator": "userRoles = new HashMap<>()", "var_name": "userRoles"}, {"original_string": "protected WebApplication webApplication;", "modifier": "protected", "type": "WebApplication", "declarator": "webApplication", "var_name": "webApplication"}], "methods": [{"identifier": "addUser", "parameters": "(String username, String password, String... roles)", "modifiers": "public", "return": "void", "signature": "void addUser(String username, String password, String... roles)", "full_signature": "public void addUser(String username, String password, String... roles)", "class_method_signature": "DefaultSecurityManager.addUser(String username, String password, String... roles)", "testcase": false, "constructor": false}, {"identifier": "addUserRole", "parameters": "(String username, String... roles)", "modifiers": "public", "return": "void", "signature": "void addUserRole(String username, String... roles)", "full_signature": "public void addUserRole(String username, String... roles)", "class_method_signature": "DefaultSecurityManager.addUserRole(String username, String... roles)", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(\n            HttpServletRequest request, HttpServletResponse response)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean authenticate(\n            HttpServletRequest request, HttpServletResponse response)", "full_signature": "@Override public boolean authenticate(\n            HttpServletRequest request, HttpServletResponse response)", "class_method_signature": "DefaultSecurityManager.authenticate(\n            HttpServletRequest request, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "declareRoles", "parameters": "(String[] roles)", "modifiers": "@Override public", "return": "void", "signature": "void declareRoles(String[] roles)", "full_signature": "@Override public void declareRoles(String[] roles)", "class_method_signature": "DefaultSecurityManager.declareRoles(String[] roles)", "testcase": false, "constructor": false}, {"identifier": "getRoles", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getRoles()", "full_signature": "@Override public Set<String> getRoles()", "class_method_signature": "DefaultSecurityManager.getRoles()", "testcase": false, "constructor": false}, {"identifier": "getDenyUncoveredHttpMethods", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getDenyUncoveredHttpMethods()", "full_signature": "@Override public boolean getDenyUncoveredHttpMethods()", "class_method_signature": "DefaultSecurityManager.getDenyUncoveredHttpMethods()", "testcase": false, "constructor": false}, {"identifier": "getWebApplication", "parameters": "()", "modifiers": "@Override public", "return": "WebApplication", "signature": "WebApplication getWebApplication()", "full_signature": "@Override public WebApplication getWebApplication()", "class_method_signature": "DefaultSecurityManager.getWebApplication()", "testcase": false, "constructor": false}, {"identifier": "isUserInRole", "parameters": "(HttpServletRequest request, String role)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isUserInRole(HttpServletRequest request, String role)", "full_signature": "@Override public boolean isUserInRole(HttpServletRequest request, String role)", "class_method_signature": "DefaultSecurityManager.isUserInRole(HttpServletRequest request, String role)", "testcase": false, "constructor": false}, {"identifier": "login", "parameters": "(HttpServletRequest request, String username, String password)", "modifiers": "@Override public", "return": "void", "signature": "void login(HttpServletRequest request, String username, String password)", "full_signature": "@Override public void login(HttpServletRequest request, String username, String password)", "class_method_signature": "DefaultSecurityManager.login(HttpServletRequest request, String username, String password)", "testcase": false, "constructor": false}, {"identifier": "logout", "parameters": "(HttpServletRequest request, HttpServletResponse response)", "modifiers": "@Override public", "return": "void", "signature": "void logout(HttpServletRequest request, HttpServletResponse response)", "full_signature": "@Override public void logout(HttpServletRequest request, HttpServletResponse response)", "class_method_signature": "DefaultSecurityManager.logout(HttpServletRequest request, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "removeUser", "parameters": "(String username)", "modifiers": "public", "return": "void", "signature": "void removeUser(String username)", "full_signature": "public void removeUser(String username)", "class_method_signature": "DefaultSecurityManager.removeUser(String username)", "testcase": false, "constructor": false}, {"identifier": "setDenyUncoveredHttpMethods", "parameters": "(boolean denyUncoveredHttpMethods)", "modifiers": "@Override public", "return": "void", "signature": "void setDenyUncoveredHttpMethods(boolean denyUncoveredHttpMethods)", "full_signature": "@Override public void setDenyUncoveredHttpMethods(boolean denyUncoveredHttpMethods)", "class_method_signature": "DefaultSecurityManager.setDenyUncoveredHttpMethods(boolean denyUncoveredHttpMethods)", "testcase": false, "constructor": false}, {"identifier": "setWebApplication", "parameters": "(WebApplication webApplication)", "modifiers": "@Override public", "return": "void", "signature": "void setWebApplication(WebApplication webApplication)", "full_signature": "@Override public void setWebApplication(WebApplication webApplication)", "class_method_signature": "DefaultSecurityManager.setWebApplication(WebApplication webApplication)", "testcase": false, "constructor": false}], "file": "webapp/impl/src/main/java/cloud/piranha/webapp/impl/DefaultSecurityManager.java"}, "focal_method": {"identifier": "removeUser", "parameters": "(String username)", "modifiers": "public", "return": "void", "body": "public void removeUser(String username) {\n        logins.remove(username);\n        userRoles.remove(username);\n    }", "signature": "void removeUser(String username)", "full_signature": "public void removeUser(String username)", "class_method_signature": "DefaultSecurityManager.removeUser(String username)", "testcase": false, "constructor": false, "invocations": ["remove", "remove"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}