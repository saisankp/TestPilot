{"test_class": {"identifier": "GraphSearchTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "GraphNode<Integer> node1;", "modifier": "", "type": "GraphNode<Integer>", "declarator": "node1", "var_name": "node1"}, {"original_string": "GraphNode<Integer> node2;", "modifier": "", "type": "GraphNode<Integer>", "declarator": "node2", "var_name": "node2"}, {"original_string": "GraphNode<Integer> node3;", "modifier": "", "type": "GraphNode<Integer>", "declarator": "node3", "var_name": "node3"}, {"original_string": "GraphNode<Integer> node4;", "modifier": "", "type": "GraphNode<Integer>", "declarator": "node4", "var_name": "node4"}, {"original_string": "GraphNode<Integer> node5;", "modifier": "", "type": "GraphNode<Integer>", "declarator": "node5", "var_name": "node5"}, {"original_string": "GraphNode<Integer> node6;", "modifier": "", "type": "GraphNode<Integer>", "declarator": "node6", "var_name": "node6"}, {"original_string": "GraphNode<Integer> node7;", "modifier": "", "type": "GraphNode<Integer>", "declarator": "node7", "var_name": "node7"}, {"original_string": "GraphNode<Integer> node8;", "modifier": "", "type": "GraphNode<Integer>", "declarator": "node8", "var_name": "node8"}, {"original_string": "GraphNode<Integer> node9;", "modifier": "", "type": "GraphNode<Integer>", "declarator": "node9", "var_name": "node9"}, {"original_string": "GraphNode<Integer> node10;", "modifier": "", "type": "GraphNode<Integer>", "declarator": "node10", "var_name": "node10"}], "file": "algs/src/test/java/org/buptdavid/datastructure/graph/GraphSearchTest.java"}, "test_case": {"identifier": "searchDFSTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void searchDFSTest(){\n\t\tGraphSearch<Integer> graphSearch = new GraphSearch<Integer>();\n\t\tgraphSearch.searchDFS(node1);\n\t\t\n\t\tString expectedSearchPath = \"1->2->4->5->6->3->7->8->9->10\";\n\t\tAssert.assertEquals(expectedSearchPath, graphSearch.searchPathDFS.toString());\n\t}", "signature": "void searchDFSTest()", "full_signature": "@Test public void searchDFSTest()", "class_method_signature": "GraphSearchTest.searchDFSTest()", "testcase": true, "constructor": false, "invocations": ["searchDFS", "assertEquals", "toString"]}, "focal_class": {"identifier": "GraphSearch", "superclass": "", "interfaces": "", "fields": [{"original_string": "public StringBuffer searchPathDFS = new StringBuffer();", "modifier": "public", "type": "StringBuffer", "declarator": "searchPathDFS = new StringBuffer()", "var_name": "searchPathDFS"}, {"original_string": "public StringBuffer searchPathBFS = new StringBuffer();", "modifier": "public", "type": "StringBuffer", "declarator": "searchPathBFS = new StringBuffer()", "var_name": "searchPathBFS"}], "methods": [{"identifier": "searchDFS", "parameters": "(GraphNode<T> root)", "modifiers": "public", "return": "void", "signature": "void searchDFS(GraphNode<T> root)", "full_signature": "public void searchDFS(GraphNode<T> root)", "class_method_signature": "GraphSearch.searchDFS(GraphNode<T> root)", "testcase": false, "constructor": false}, {"identifier": "searchBFS", "parameters": "(GraphNode<T> root)", "modifiers": "public", "return": "void", "signature": "void searchBFS(GraphNode<T> root)", "full_signature": "public void searchBFS(GraphNode<T> root)", "class_method_signature": "GraphSearch.searchBFS(GraphNode<T> root)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/org/buptdavid/datastructure/graph/GraphSearch.java"}, "focal_method": {"identifier": "searchDFS", "parameters": "(GraphNode<T> root)", "modifiers": "public", "return": "void", "body": "public void searchDFS(GraphNode<T> root) {\n\t\tif (root == null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// visited root\n\t\tif (searchPathDFS.length() > 0) {\n\t\t\tsearchPathDFS.append(\"->\");\n\t\t}\n\t\tsearchPathDFS.append(root.data.toString());\n\t\troot.visited = true;\n\n\t\tfor (GraphNode<T> node : root.neighborList) {\n\t\t\tif (!node.visited) {\n\t\t\t\tsearchDFS(node);\n\t\t\t}\n\t\t}\n\t}", "signature": "void searchDFS(GraphNode<T> root)", "full_signature": "public void searchDFS(GraphNode<T> root)", "class_method_signature": "GraphSearch.searchDFS(GraphNode<T> root)", "testcase": false, "constructor": false, "invocations": ["length", "append", "append", "toString", "searchDFS"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}