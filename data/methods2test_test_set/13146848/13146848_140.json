{"test_class": {"identifier": "UnpackParametersTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MultipleTaskOutput output;", "modifier": "private", "type": "MultipleTaskOutput", "declarator": "output", "var_name": "output"}], "file": "sejda-model/src/test/java/org/sejda/model/parameter/UnpackParametersTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n        UnpackParameters eq1 = new UnpackParameters(output);\n        UnpackParameters eq2 = new UnpackParameters(output);\n        UnpackParameters eq3 = new UnpackParameters(output);\n        UnpackParameters diff = new UnpackParameters(output);\n        diff.setLenient(true);\n        TestUtils.testEqualsAndHashCodes(eq1, eq2, eq3, diff);\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "UnpackParametersTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["setLenient", "testEqualsAndHashCodes"]}, "focal_class": {"identifier": "UnpackParameters", "superclass": "extends AbstractParameters", "interfaces": "implements MultiplePdfSourceTaskParameters", "fields": [{"original_string": "@Valid\n    @NotNull\n    private final MultipleTaskOutput output;", "modifier": "@Valid\n    @NotNull\n    private final", "type": "MultipleTaskOutput", "declarator": "output", "var_name": "output"}, {"original_string": "@NotEmpty\n    @Valid\n    private final List<PdfSource<?>> sourceList = new ArrayList<PdfSource<?>>();", "modifier": "@NotEmpty\n    @Valid\n    private final", "type": "List<PdfSource<?>>", "declarator": "sourceList = new ArrayList<PdfSource<?>>()", "var_name": "sourceList"}], "methods": [{"identifier": "UnpackParameters", "parameters": "(MultipleTaskOutput output)", "modifiers": "public", "return": "", "signature": " UnpackParameters(MultipleTaskOutput output)", "full_signature": "public  UnpackParameters(MultipleTaskOutput output)", "class_method_signature": "UnpackParameters.UnpackParameters(MultipleTaskOutput output)", "testcase": false, "constructor": true}, {"identifier": "getOutput", "parameters": "()", "modifiers": "@Override public", "return": "MultipleTaskOutput", "signature": "MultipleTaskOutput getOutput()", "full_signature": "@Override public MultipleTaskOutput getOutput()", "class_method_signature": "UnpackParameters.getOutput()", "testcase": false, "constructor": false}, {"identifier": "addSource", "parameters": "(PdfSource<?> input)", "modifiers": "@Override public", "return": "void", "signature": "void addSource(PdfSource<?> input)", "full_signature": "@Override public void addSource(PdfSource<?> input)", "class_method_signature": "UnpackParameters.addSource(PdfSource<?> input)", "testcase": false, "constructor": false}, {"identifier": "getSourceList", "parameters": "()", "modifiers": "@Override public", "return": "List<PdfSource<?>>", "signature": "List<PdfSource<?>> getSourceList()", "full_signature": "@Override public List<PdfSource<?>> getSourceList()", "class_method_signature": "UnpackParameters.getSourceList()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "UnpackParameters.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "UnpackParameters.equals(Object other)", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/parameter/UnpackParameters.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object other) {\n        if (this == other) {\n            return true;\n        }\n        if (!(other instanceof UnpackParameters)) {\n            return false;\n        }\n        UnpackParameters parameter = (UnpackParameters) other;\n        return new EqualsBuilder().appendSuper(super.equals(other)).append(output, parameter.getOutput())\n                .append(sourceList, parameter.getSourceList()).isEquals();\n    }", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "UnpackParameters.equals(Object other)", "testcase": false, "constructor": false, "invocations": ["isEquals", "append", "append", "appendSuper", "equals", "getOutput", "getSourceList"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}