{"test_class": {"identifier": "AuthenticationServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private AuthenticationService authenticationService;", "modifier": "@Autowired\n    private", "type": "AuthenticationService", "declarator": "authenticationService", "var_name": "authenticationService"}], "file": "frontend-navigation/src/test/java/bd/edu/seu/frontendnavigation/service/AuthenticationServiceTest.java"}, "test_case": {"identifier": "authenticate_2012000000089_xyz123", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void authenticate_2012000000089_xyz123() {\n        LoginToken loginToken = authenticationService.authenticate(\"2012000000089\", \"xyz123\");\n        assertEquals(\"2012000000089\", loginToken.getUsername());\n        assertEquals(\"Md. Masum\", loginToken.getFullname());\n        assertEquals(\"student\", loginToken.getRole());\n    }", "signature": "void authenticate_2012000000089_xyz123()", "full_signature": "@Test public void authenticate_2012000000089_xyz123()", "class_method_signature": "AuthenticationServiceTest.authenticate_2012000000089_xyz123()", "testcase": true, "constructor": false, "invocations": ["authenticate", "assertEquals", "getUsername", "assertEquals", "getFullname", "assertEquals", "getRole"]}, "focal_class": {"identifier": "AuthenticationService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Value(\"${authenticateion.base-url}/auth\")\n    private String authUrl;", "modifier": "@Value(\"${authenticateion.base-url}/auth\")\n    private", "type": "String", "declarator": "authUrl", "var_name": "authUrl"}], "methods": [{"identifier": "authenticate", "parameters": "(String username, String password)", "modifiers": "public", "return": "LoginToken", "signature": "LoginToken authenticate(String username, String password)", "full_signature": "public LoginToken authenticate(String username, String password)", "class_method_signature": "AuthenticationService.authenticate(String username, String password)", "testcase": false, "constructor": false}], "file": "frontend-navigation/src/main/java/bd/edu/seu/frontendnavigation/service/AuthenticationService.java"}, "focal_method": {"identifier": "authenticate", "parameters": "(String username, String password)", "modifiers": "public", "return": "LoginToken", "body": "public LoginToken authenticate(String username, String password) {\n        // TODO use REST template to communicate the backend\n        RestTemplate restTemplate = new RestTemplate();\n\n        MultiValueMap<String, String> multiValueMap = new LinkedMultiValueMap<>();\n        multiValueMap.add(\"username\", username);\n        multiValueMap.add(\"password\", password);\n        LoginToken loginToken = restTemplate.postForObject(authUrl, multiValueMap, LoginToken.class);\n\n        return loginToken;\n    }", "signature": "LoginToken authenticate(String username, String password)", "full_signature": "public LoginToken authenticate(String username, String password)", "class_method_signature": "AuthenticationService.authenticate(String username, String password)", "testcase": false, "constructor": false, "invocations": ["add", "add", "postForObject"]}, "repository": {"repo_id": 188705852, "url": "https://github.com/kmhasan-class/summer2019aj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 8, "size": 3443, "license": "licensed"}}