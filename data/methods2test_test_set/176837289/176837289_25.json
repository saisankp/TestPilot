{"test_class": {"identifier": "SecretManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String projectId = AppSettings.getInstance().getString(AppSettings.GCP_PROJECT);", "modifier": "private static final", "type": "String", "declarator": "projectId = AppSettings.getInstance().getString(AppSettings.GCP_PROJECT)", "var_name": "projectId"}, {"original_string": "private static final Path secretsDirectory = getAvailableDirectory();", "modifier": "private static final", "type": "Path", "declarator": "secretsDirectory = getAvailableDirectory()", "var_name": "secretsDirectory"}], "file": "code/core/src/test/java/com/google/cloud/broker/secretmanager/SecretManagerTest.java"}, "test_case": {"identifier": "testFailMissingOptional", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFailMissingOptional() throws IOException {\n        Object downloads = ConfigFactory.parseString(\n        AppSettings.SECRET_MANAGER_DOWNLOADS + \"=[\" +\n            \"{\" +\n                \"secret = \\\"projects/\" + projectId + \"/secrets/missing-optional/versions/latest\\\",\" +\n                \"file = \\\"\" + secretsDirectory.resolve(\"missing-optional.txt\") + \"\\\",\" +\n                \"required = false\" +\n            \"}\" +\n        \"]\").getAnyRef(AppSettings.SECRET_MANAGER_DOWNLOADS);\n        try(SettingsOverride override = SettingsOverride.apply(Map.of(AppSettings.SECRET_MANAGER_DOWNLOADS, downloads))) {\n            SecretManager.downloadSecrets();\n            assertFalse(Files.exists(secretsDirectory.resolve(\"missing-optional.txt\")));\n        }\n    }", "signature": "void testFailMissingOptional()", "full_signature": "@Test public void testFailMissingOptional()", "class_method_signature": "SecretManagerTest.testFailMissingOptional()", "testcase": true, "constructor": false, "invocations": ["getAnyRef", "parseString", "resolve", "apply", "of", "downloadSecrets", "assertFalse", "exists", "resolve"]}, "focal_class": {"identifier": "SecretManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass())", "var_name": "logger"}], "methods": [{"identifier": "downloadSecret", "parameters": "(String secretUri, String fileName, boolean required)", "modifiers": "private static", "return": "void", "signature": "void downloadSecret(String secretUri, String fileName, boolean required)", "full_signature": "private static void downloadSecret(String secretUri, String fileName, boolean required)", "class_method_signature": "SecretManager.downloadSecret(String secretUri, String fileName, boolean required)", "testcase": false, "constructor": false}, {"identifier": "downloadSecrets", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void downloadSecrets()", "full_signature": "public static void downloadSecrets()", "class_method_signature": "SecretManager.downloadSecrets()", "testcase": false, "constructor": false}], "file": "code/core/src/main/java/com/google/cloud/broker/secretmanager/SecretManager.java"}, "focal_method": {"identifier": "downloadSecrets", "parameters": "()", "modifiers": "public static", "return": "void", "body": "public static void downloadSecrets() {\n        List<? extends Config> downloads = AppSettings.getInstance().getConfigList(AppSettings.SECRET_MANAGER_DOWNLOADS);\n        if (downloads.size() > 0) {\n            // Download all secrets specified in the settings\n            for (Config download : downloads) {\n                boolean required;\n                try {\n                    required = download.getBoolean(\"required\");\n                }\n                catch (ConfigException.Missing e) {\n                    required = true;\n                }\n                downloadSecret(download.getString(\"secret\"), download.getString(\"file\"), required);\n            }\n        }\n    }", "signature": "void downloadSecrets()", "full_signature": "public static void downloadSecrets()", "class_method_signature": "SecretManager.downloadSecrets()", "testcase": false, "constructor": false, "invocations": ["getConfigList", "getInstance", "size", "getBoolean", "downloadSecret", "getString", "getString"]}, "repository": {"repo_id": 176837289, "url": "https://github.com/GoogleCloudPlatform/gcp-token-broker", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 27, "size": 1700, "license": "licensed"}}