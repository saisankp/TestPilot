{"test_class": {"identifier": "WebPathTest", "superclass": "", "interfaces": "", "fields": [], "file": "services/src/test/java/com/greensopinion/finance/services/web/dispatch/WebPathTest.java"}, "test_case": {"identifier": "decodeVariables", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void decodeVariables() {\n\t\tWebPath webPath = new WebPath(\"GET\", \"/one/{two}/{three}\");\n\t\tMatchResult match = webPath.match(\"GET\", \"/one/a%20b/+c\");\n\t\tassertEquals(\"a b\", match.getVariables().get(\"two\"));\n\t\tassertEquals(\" c\", match.getVariables().get(\"three\"));\n\t}", "signature": "void decodeVariables()", "full_signature": "@Test public void decodeVariables()", "class_method_signature": "WebPathTest.decodeVariables()", "testcase": true, "constructor": false, "invocations": ["match", "assertEquals", "get", "getVariables", "assertEquals", "get", "getVariables"]}, "focal_class": {"identifier": "WebPath", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String httpMethod;", "modifier": "private final", "type": "String", "declarator": "httpMethod", "var_name": "httpMethod"}, {"original_string": "private Pattern pattern;", "modifier": "private", "type": "Pattern", "declarator": "pattern", "var_name": "pattern"}, {"original_string": "private List<String> variableNames;", "modifier": "private", "type": "List<String>", "declarator": "variableNames", "var_name": "variableNames"}], "methods": [{"identifier": "WebPath", "parameters": "(String httpMethod, String path)", "modifiers": "public", "return": "", "signature": " WebPath(String httpMethod, String path)", "full_signature": "public  WebPath(String httpMethod, String path)", "class_method_signature": "WebPath.WebPath(String httpMethod, String path)", "testcase": false, "constructor": true}, {"identifier": "match", "parameters": "(String method, String path)", "modifiers": "public", "return": "MatchResult", "signature": "MatchResult match(String method, String path)", "full_signature": "public MatchResult match(String method, String path)", "class_method_signature": "WebPath.match(String method, String path)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(String variable)", "modifiers": "private", "return": "String", "signature": "String decode(String variable)", "full_signature": "private String decode(String variable)", "class_method_signature": "WebPath.decode(String variable)", "testcase": false, "constructor": false}, {"identifier": "compile", "parameters": "(String path)", "modifiers": "private", "return": "void", "signature": "void compile(String path)", "full_signature": "private void compile(String path)", "class_method_signature": "WebPath.compile(String path)", "testcase": false, "constructor": false}, {"identifier": "getVariableNames", "parameters": "()", "modifiers": "", "return": "List<String>", "signature": "List<String> getVariableNames()", "full_signature": " List<String> getVariableNames()", "class_method_signature": "WebPath.getVariableNames()", "testcase": false, "constructor": false}, {"identifier": "getPattern", "parameters": "()", "modifiers": "", "return": "Pattern", "signature": "Pattern getPattern()", "full_signature": " Pattern getPattern()", "class_method_signature": "WebPath.getPattern()", "testcase": false, "constructor": false}, {"identifier": "getHttpMethod", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getHttpMethod()", "full_signature": " String getHttpMethod()", "class_method_signature": "WebPath.getHttpMethod()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "WebPath.toString()", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/greensopinion/finance/services/web/dispatch/WebPath.java"}, "focal_method": {"identifier": "match", "parameters": "(String method, String path)", "modifiers": "public", "return": "MatchResult", "body": "public MatchResult match(String method, String path) {\n\t\tif (!httpMethod.equals(method)) {\n\t\t\treturn MatchResult.NO_MATCH;\n\t\t}\n\t\tMatcher matcher = pattern.matcher(path);\n\t\tif (matcher.matches()) {\n\t\t\tImmutableMap.Builder<String, String> variablesBuilder = ImmutableMap.builder();\n\t\t\tfor (int x = 0; x < variableNames.size(); ++x) {\n\t\t\t\tString variable = matcher.group(x + 1);\n\t\t\t\tvariablesBuilder.put(variableNames.get(x), decode(variable));\n\t\t\t}\n\t\t\treturn new MatchResult(true, variablesBuilder.build());\n\t\t}\n\t\treturn MatchResult.NO_MATCH;\n\t}", "signature": "MatchResult match(String method, String path)", "full_signature": "public MatchResult match(String method, String path)", "class_method_signature": "WebPath.match(String method, String path)", "testcase": false, "constructor": false, "invocations": ["equals", "matcher", "matches", "builder", "size", "group", "put", "get", "decode", "build"]}, "repository": {"repo_id": 54854741, "url": "https://github.com/greensopinion/greenbeans", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 30, "size": 1684, "license": "licensed"}}