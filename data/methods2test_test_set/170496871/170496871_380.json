{"test_class": {"identifier": "ProcessManagerWrapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ProcessManager<String> delegate;", "modifier": "@Mock\n    private", "type": "ProcessManager<String>", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private ProcessManagerWrapper<String, Integer> wrapper;", "modifier": "private", "type": "ProcessManagerWrapper<String, Integer>", "declarator": "wrapper", "var_name": "wrapper"}], "file": "modules/tensorflow/src/test/java/org/apache/ignite/tensorflow/core/ProcessManagerWrapperTest.java"}, "test_case": {"identifier": "testStart", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStart() {\n        wrapper.start(Arrays.asList(1, 2, 3));\n\n        verify(delegate).start(eq(Arrays.asList(\"1\", \"2\", \"3\")));\n    }", "signature": "void testStart()", "full_signature": "@Test public void testStart()", "class_method_signature": "ProcessManagerWrapperTest.testStart()", "testcase": true, "constructor": false, "invocations": ["start", "asList", "start", "verify", "eq", "asList"]}, "focal_class": {"identifier": "ProcessManagerWrapper", "superclass": "", "interfaces": "implements ProcessManager<R>", "fields": [{"original_string": "private final ProcessManager<T> delegate;", "modifier": "private final", "type": "ProcessManager<T>", "declarator": "delegate", "var_name": "delegate"}], "methods": [{"identifier": "ProcessManagerWrapper", "parameters": "(ProcessManager<T> delegate)", "modifiers": "public", "return": "", "signature": " ProcessManagerWrapper(ProcessManager<T> delegate)", "full_signature": "public  ProcessManagerWrapper(ProcessManager<T> delegate)", "class_method_signature": "ProcessManagerWrapper.ProcessManagerWrapper(ProcessManager<T> delegate)", "testcase": false, "constructor": true}, {"identifier": "transformSpecification", "parameters": "(R spec)", "modifiers": "protected abstract", "return": "T", "signature": "T transformSpecification(R spec)", "full_signature": "protected abstract T transformSpecification(R spec)", "class_method_signature": "ProcessManagerWrapper.transformSpecification(R spec)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "(List<R> specifications)", "modifiers": "@Override public", "return": "Map<UUID, List<UUID>>", "signature": "Map<UUID, List<UUID>> start(List<R> specifications)", "full_signature": "@Override public Map<UUID, List<UUID>> start(List<R> specifications)", "class_method_signature": "ProcessManagerWrapper.start(List<R> specifications)", "testcase": false, "constructor": false}, {"identifier": "ping", "parameters": "(Map<UUID, List<UUID>> procIds)", "modifiers": "@Override public", "return": "Map<UUID, List<LongRunningProcessStatus>>", "signature": "Map<UUID, List<LongRunningProcessStatus>> ping(Map<UUID, List<UUID>> procIds)", "full_signature": "@Override public Map<UUID, List<LongRunningProcessStatus>> ping(Map<UUID, List<UUID>> procIds)", "class_method_signature": "ProcessManagerWrapper.ping(Map<UUID, List<UUID>> procIds)", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "(Map<UUID, List<UUID>> procIds, boolean clear)", "modifiers": "@Override public", "return": "Map<UUID, List<LongRunningProcessStatus>>", "signature": "Map<UUID, List<LongRunningProcessStatus>> stop(Map<UUID, List<UUID>> procIds, boolean clear)", "full_signature": "@Override public Map<UUID, List<LongRunningProcessStatus>> stop(Map<UUID, List<UUID>> procIds, boolean clear)", "class_method_signature": "ProcessManagerWrapper.stop(Map<UUID, List<UUID>> procIds, boolean clear)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "(Map<UUID, List<UUID>> procIds)", "modifiers": "@Override public", "return": "Map<UUID, List<LongRunningProcessStatus>>", "signature": "Map<UUID, List<LongRunningProcessStatus>> clear(Map<UUID, List<UUID>> procIds)", "full_signature": "@Override public Map<UUID, List<LongRunningProcessStatus>> clear(Map<UUID, List<UUID>> procIds)", "class_method_signature": "ProcessManagerWrapper.clear(Map<UUID, List<UUID>> procIds)", "testcase": false, "constructor": false}], "file": "modules/tensorflow/src/main/java/org/apache/ignite/tensorflow/core/ProcessManagerWrapper.java"}, "focal_method": {"identifier": "start", "parameters": "(List<R> specifications)", "modifiers": "@Override public", "return": "Map<UUID, List<UUID>>", "body": "@Override public Map<UUID, List<UUID>> start(List<R> specifications) {\n        List<T> transformedSpecifications = new ArrayList<>();\n\n        for (R spec : specifications)\n            transformedSpecifications.add(transformSpecification(spec));\n\n        return delegate.start(transformedSpecifications);\n    }", "signature": "Map<UUID, List<UUID>> start(List<R> specifications)", "full_signature": "@Override public Map<UUID, List<UUID>> start(List<R> specifications)", "class_method_signature": "ProcessManagerWrapper.start(List<R> specifications)", "testcase": false, "constructor": false, "invocations": ["add", "transformSpecification", "start"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}