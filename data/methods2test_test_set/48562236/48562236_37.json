{"test_class": {"identifier": "IOTest", "superclass": "extends ConcurrentTestCase", "interfaces": "", "fields": [], "file": "base/lang/src/test/java/leap/lang/io/IOTest.java"}, "test_case": {"identifier": "testReadByteArrayReader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testReadByteArrayReader() {\n\t\tReader r = new StringReader(\"hello\");\n\t\tassertEquals(\"hello\", new String(IO.readByteArray(r)));\n\t\t\n\t}", "signature": "void testReadByteArrayReader()", "full_signature": "@Test public void testReadByteArrayReader()", "class_method_signature": "IOTest.testReadByteArrayReader()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "readByteArray"]}, "focal_class": {"identifier": "IO", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int EOF \t\t\t\t = -1;", "modifier": "private static final", "type": "int", "declarator": "EOF \t\t\t\t = -1", "var_name": "EOF"}, {"original_string": "private static final int DEFAULT_BUFFER_SIZE = 1024 * 4;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_BUFFER_SIZE = 1024 * 4", "var_name": "DEFAULT_BUFFER_SIZE"}], "methods": [{"identifier": "tmpdir", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String tmpdir()", "full_signature": "public static String tmpdir()", "class_method_signature": "IO.tmpdir()", "testcase": false, "constructor": false}, {"identifier": "createReader", "parameters": "(File file)", "modifiers": "public static", "return": "Reader", "signature": "Reader createReader(File file)", "full_signature": "public static Reader createReader(File file)", "class_method_signature": "IO.createReader(File file)", "testcase": false, "constructor": false}, {"identifier": "createReader", "parameters": "(File file,Charset charset)", "modifiers": "public static", "return": "Reader", "signature": "Reader createReader(File file,Charset charset)", "full_signature": "public static Reader createReader(File file,Charset charset)", "class_method_signature": "IO.createReader(File file,Charset charset)", "testcase": false, "constructor": false}, {"identifier": "createWriter", "parameters": "(File file)", "modifiers": "public static", "return": "Writer", "signature": "Writer createWriter(File file)", "full_signature": "public static Writer createWriter(File file)", "class_method_signature": "IO.createWriter(File file)", "testcase": false, "constructor": false}, {"identifier": "createWriter", "parameters": "(File file,Charset charset)", "modifiers": "public static", "return": "Writer", "signature": "Writer createWriter(File file,Charset charset)", "full_signature": "public static Writer createWriter(File file,Charset charset)", "class_method_signature": "IO.createWriter(File file,Charset charset)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "(Closeable closeable)", "modifiers": "public static", "return": "void", "signature": "void close(Closeable closeable)", "full_signature": "public static void close(Closeable closeable)", "class_method_signature": "IO.close(Closeable closeable)", "testcase": false, "constructor": false}, {"identifier": "readByteArray", "parameters": "(InputStream input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] readByteArray(InputStream input)", "full_signature": "public static byte[] readByteArray(InputStream input)", "class_method_signature": "IO.readByteArray(InputStream input)", "testcase": false, "constructor": false}, {"identifier": "readByteArrayAndClose", "parameters": "(InputStream is)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] readByteArrayAndClose(InputStream is)", "full_signature": "public static byte[] readByteArrayAndClose(InputStream is)", "class_method_signature": "IO.readByteArrayAndClose(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "readByteArray", "parameters": "(File file)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] readByteArray(File file)", "full_signature": "public static byte[] readByteArray(File file)", "class_method_signature": "IO.readByteArray(File file)", "testcase": false, "constructor": false}, {"identifier": "readByteArray", "parameters": "(Reader reader)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] readByteArray(Reader reader)", "full_signature": "public static byte[] readByteArray(Reader reader)", "class_method_signature": "IO.readByteArray(Reader reader)", "testcase": false, "constructor": false}, {"identifier": "readByteArrayAndClose", "parameters": "(Reader reader)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] readByteArrayAndClose(Reader reader)", "full_signature": "public static byte[] readByteArrayAndClose(Reader reader)", "class_method_signature": "IO.readByteArrayAndClose(Reader reader)", "testcase": false, "constructor": false}, {"identifier": "readByteArray", "parameters": "(InputStream input, long size)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] readByteArray(InputStream input, long size)", "full_signature": "public static byte[] readByteArray(InputStream input, long size)", "class_method_signature": "IO.readByteArray(InputStream input, long size)", "testcase": false, "constructor": false}, {"identifier": "readByteArray", "parameters": "(InputStream input, int size)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] readByteArray(InputStream input, int size)", "full_signature": "public static byte[] readByteArray(InputStream input, int size)", "class_method_signature": "IO.readByteArray(InputStream input, int size)", "testcase": false, "constructor": false}, {"identifier": "readString", "parameters": "(File file,Charset encoding)", "modifiers": "public static", "return": "String", "signature": "String readString(File file,Charset encoding)", "full_signature": "public static String readString(File file,Charset encoding)", "class_method_signature": "IO.readString(File file,Charset encoding)", "testcase": false, "constructor": false}, {"identifier": "readString", "parameters": "(InputStream input, Charset encoding)", "modifiers": "public static", "return": "String", "signature": "String readString(InputStream input, Charset encoding)", "full_signature": "public static String readString(InputStream input, Charset encoding)", "class_method_signature": "IO.readString(InputStream input, Charset encoding)", "testcase": false, "constructor": false}, {"identifier": "readStringAndClose", "parameters": "(InputStream is, Charset charset)", "modifiers": "public static", "return": "String", "signature": "String readStringAndClose(InputStream is, Charset charset)", "full_signature": "public static String readStringAndClose(InputStream is, Charset charset)", "class_method_signature": "IO.readStringAndClose(InputStream is, Charset charset)", "testcase": false, "constructor": false}, {"identifier": "readString", "parameters": "(Reader input)", "modifiers": "public static", "return": "String", "signature": "String readString(Reader input)", "full_signature": "public static String readString(Reader input)", "class_method_signature": "IO.readString(Reader input)", "testcase": false, "constructor": false}, {"identifier": "readStringAndClose", "parameters": "(Reader reader)", "modifiers": "public static", "return": "String", "signature": "String readStringAndClose(Reader reader)", "full_signature": "public static String readStringAndClose(Reader reader)", "class_method_signature": "IO.readStringAndClose(Reader reader)", "testcase": false, "constructor": false}, {"identifier": "writeString", "parameters": "(File file, String string)", "modifiers": "public static", "return": "void", "signature": "void writeString(File file, String string)", "full_signature": "public static void writeString(File file, String string)", "class_method_signature": "IO.writeString(File file, String string)", "testcase": false, "constructor": false}, {"identifier": "writeString", "parameters": "(File file,String string, Charset encoding)", "modifiers": "public static", "return": "void", "signature": "void writeString(File file,String string, Charset encoding)", "full_signature": "public static void writeString(File file,String string, Charset encoding)", "class_method_signature": "IO.writeString(File file,String string, Charset encoding)", "testcase": false, "constructor": false}, {"identifier": "writeString", "parameters": "(OutputStream out,String string,Charset encoding)", "modifiers": "public static", "return": "void", "signature": "void writeString(OutputStream out,String string,Charset encoding)", "full_signature": "public static void writeString(OutputStream out,String string,Charset encoding)", "class_method_signature": "IO.writeString(OutputStream out,String string,Charset encoding)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(InputStream input, OutputStream output)", "modifiers": "public static", "return": "long", "signature": "long copy(InputStream input, OutputStream output)", "full_signature": "public static long copy(InputStream input, OutputStream output)", "class_method_signature": "IO.copy(InputStream input, OutputStream output)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(InputStream input, OutputStream output, byte[] buffer)", "modifiers": "public static", "return": "long", "signature": "long copy(InputStream input, OutputStream output, byte[] buffer)", "full_signature": "public static long copy(InputStream input, OutputStream output, byte[] buffer)", "class_method_signature": "IO.copy(InputStream input, OutputStream output, byte[] buffer)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(InputStream input, Writer output)", "modifiers": "public static", "return": "void", "signature": "void copy(InputStream input, Writer output)", "full_signature": "public static void copy(InputStream input, Writer output)", "class_method_signature": "IO.copy(InputStream input, Writer output)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(InputStream input, Writer output,@Nullable Charset encoding)", "modifiers": "public static", "return": "void", "signature": "void copy(InputStream input, Writer output,@Nullable Charset encoding)", "full_signature": "public static void copy(InputStream input, Writer output,@Nullable Charset encoding)", "class_method_signature": "IO.copy(InputStream input, Writer output,@Nullable Charset encoding)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(InputStream input, Writer output, String encoding)", "modifiers": "public static", "return": "void", "signature": "void copy(InputStream input, Writer output, String encoding)", "full_signature": "public static void copy(InputStream input, Writer output, String encoding)", "class_method_signature": "IO.copy(InputStream input, Writer output, String encoding)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(Reader input, Writer output)", "modifiers": "public static", "return": "long", "signature": "long copy(Reader input, Writer output)", "full_signature": "public static long copy(Reader input, Writer output)", "class_method_signature": "IO.copy(Reader input, Writer output)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(Reader input, Writer output, char[] buffer)", "modifiers": "public static", "return": "long", "signature": "long copy(Reader input, Writer output, char[] buffer)", "full_signature": "public static long copy(Reader input, Writer output, char[] buffer)", "class_method_signature": "IO.copy(Reader input, Writer output, char[] buffer)", "testcase": false, "constructor": false}, {"identifier": "IO", "parameters": "()", "modifiers": "protected", "return": "", "signature": " IO()", "full_signature": "protected  IO()", "class_method_signature": "IO.IO()", "testcase": false, "constructor": true}], "file": "base/lang/src/main/java/leap/lang/io/IO.java"}, "focal_method": {"identifier": "readByteArray", "parameters": "(InputStream input)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] readByteArray(InputStream input) throws NestedIOException {\n\t\tByteArrayOutputStream output = new ByteArrayOutputStream();\n\t\tcopy(input, output);\n\t\treturn output.toByteArray();\n\t}", "signature": "byte[] readByteArray(InputStream input)", "full_signature": "public static byte[] readByteArray(InputStream input)", "class_method_signature": "IO.readByteArray(InputStream input)", "testcase": false, "constructor": false, "invocations": ["copy", "toByteArray"]}, "repository": {"repo_id": 48562236, "url": "https://github.com/leapframework/framework", "stars": 42, "created": "12/25/2015 1:54:52 AM +00:00", "updates": "2020-01-20T03:04:15+00:00", "fork": "False", "license": "licensed"}}