{"test_class": {"identifier": "PodTerminalGcControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String POD_NAME = \"pod-name\";", "modifier": "private static final", "type": "String", "declarator": "POD_NAME = \"pod-name\"", "var_name": "POD_NAME"}, {"original_string": "private static final TestClock clock = new DefaultTestClock();", "modifier": "private static final", "type": "TestClock", "declarator": "clock = new DefaultTestClock()", "var_name": "clock"}, {"original_string": "private static final long POD_TERMINAL_GRACE_PERIOD = 1000L;", "modifier": "private static final", "type": "long", "declarator": "POD_TERMINAL_GRACE_PERIOD = 1000L", "var_name": "POD_TERMINAL_GRACE_PERIOD"}, {"original_string": "private final TitusRuntime titusRuntime = TitusRuntimes.test(clock);", "modifier": "private final", "type": "TitusRuntime", "declarator": "titusRuntime = TitusRuntimes.test(clock)", "var_name": "titusRuntime"}, {"original_string": "private final FixedIntervalTokenBucketConfiguration tokenBucketConfiguration = mock(FixedIntervalTokenBucketConfiguration.class);", "modifier": "private final", "type": "FixedIntervalTokenBucketConfiguration", "declarator": "tokenBucketConfiguration = mock(FixedIntervalTokenBucketConfiguration.class)", "var_name": "tokenBucketConfiguration"}, {"original_string": "private final ControllerConfiguration controllerConfiguration = mock(ControllerConfiguration.class);", "modifier": "private final", "type": "ControllerConfiguration", "declarator": "controllerConfiguration = mock(ControllerConfiguration.class)", "var_name": "controllerConfiguration"}, {"original_string": "private final KubeApiFacade kubeApiFacade = mock(KubeApiFacade.class);", "modifier": "private final", "type": "KubeApiFacade", "declarator": "kubeApiFacade = mock(KubeApiFacade.class)", "var_name": "kubeApiFacade"}, {"original_string": "private final LocalScheduler scheduler = mock(LocalScheduler.class);", "modifier": "private final", "type": "LocalScheduler", "declarator": "scheduler = mock(LocalScheduler.class)", "var_name": "scheduler"}, {"original_string": "private final KubeControllerConfiguration kubeControllerConfiguration = mock(KubeControllerConfiguration.class);", "modifier": "private final", "type": "KubeControllerConfiguration", "declarator": "kubeControllerConfiguration = mock(KubeControllerConfiguration.class)", "var_name": "kubeControllerConfiguration"}, {"original_string": "private final V3JobOperations v3JobOperations = mock(V3JobOperations.class);", "modifier": "private final", "type": "V3JobOperations", "declarator": "v3JobOperations = mock(V3JobOperations.class)", "var_name": "v3JobOperations"}, {"original_string": "private final PodTerminalGcController podGcController = new PodTerminalGcController(\n            titusRuntime,\n            scheduler,\n            tokenBucketConfiguration,\n            controllerConfiguration,\n            kubeApiFacade,\n            kubeControllerConfiguration,\n            v3JobOperations\n    );", "modifier": "private final", "type": "PodTerminalGcController", "declarator": "podGcController = new PodTerminalGcController(\n            titusRuntime,\n            scheduler,\n            tokenBucketConfiguration,\n            controllerConfiguration,\n            kubeApiFacade,\n            kubeControllerConfiguration,\n            v3JobOperations\n    )", "var_name": "podGcController"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/kubernetes/controller/PodTerminalGcControllerTest.java"}, "test_case": {"identifier": "podIsNotTerminal", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void podIsNotTerminal() {\n        when(kubeControllerConfiguration.getPodTerminalGracePeriodMs()).thenReturn(POD_TERMINAL_GRACE_PERIOD);\n\n        V1Pod pod = new V1Pod()\n                .metadata(new V1ObjectMeta().name(POD_NAME).creationTimestamp(new DateTime(clock.wallTime())))\n                .status(new V1PodStatus().phase(RUNNING));\n\n        TaskStatus taskStatus = TaskStatus.newBuilder()\n                .withState(TaskState.Started)\n                .withTimestamp(clock.wallTime())\n                .build();\n        Task task = JobGenerator.oneBatchTask().toBuilder().withStatus(taskStatus).build();\n\n        clock.advanceTime(Duration.ofMillis(POD_TERMINAL_GRACE_PERIOD + 1));\n\n        Map<String, Task> currentTasks = Collections.singletonMap(POD_NAME, task);\n        Assertions.assertThat(podGcController.isPodTerminal(pod, currentTasks)).isFalse();\n    }", "signature": "void podIsNotTerminal()", "full_signature": "@Test void podIsNotTerminal()", "class_method_signature": "PodTerminalGcControllerTest.podIsNotTerminal()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getPodTerminalGracePeriodMs", "status", "metadata", "creationTimestamp", "name", "wallTime", "phase", "build", "withTimestamp", "withState", "newBuilder", "wallTime", "build", "withStatus", "toBuilder", "oneBatchTask", "advanceTime", "ofMillis", "singletonMap", "isFalse", "assertThat", "isPodTerminal"]}, "focal_class": {"identifier": "PodTerminalGcController", "superclass": "extends BaseGcController<V1Pod>", "interfaces": "", "fields": [{"original_string": "public static final String POD_TERMINAL_GC_CONTROLLER = \"podTerminalGcController\";", "modifier": "public static final", "type": "String", "declarator": "POD_TERMINAL_GC_CONTROLLER = \"podTerminalGcController\"", "var_name": "POD_TERMINAL_GC_CONTROLLER"}, {"original_string": "public static final String POD_TERMINAL_GC_CONTROLLER_DESCRIPTION = \"GC pods that are terminal to Titus.\";", "modifier": "public static final", "type": "String", "declarator": "POD_TERMINAL_GC_CONTROLLER_DESCRIPTION = \"GC pods that are terminal to Titus.\"", "var_name": "POD_TERMINAL_GC_CONTROLLER_DESCRIPTION"}, {"original_string": "private static final Logger logger = LoggerFactory.getLogger(PodTerminalGcController.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(PodTerminalGcController.class)", "var_name": "logger"}, {"original_string": "private final KubeApiFacade kubeApiFacade;", "modifier": "private final", "type": "KubeApiFacade", "declarator": "kubeApiFacade", "var_name": "kubeApiFacade"}, {"original_string": "private final Clock clock;", "modifier": "private final", "type": "Clock", "declarator": "clock", "var_name": "clock"}, {"original_string": "private final KubeControllerConfiguration kubeControllerConfiguration;", "modifier": "private final", "type": "KubeControllerConfiguration", "declarator": "kubeControllerConfiguration", "var_name": "kubeControllerConfiguration"}, {"original_string": "private final V3JobOperations v3JobOperations;", "modifier": "private final", "type": "V3JobOperations", "declarator": "v3JobOperations", "var_name": "v3JobOperations"}], "methods": [{"identifier": "PodTerminalGcController", "parameters": "(\n            TitusRuntime titusRuntime,\n            LocalScheduler scheduler,\n            @Named(POD_TERMINAL_GC_CONTROLLER) FixedIntervalTokenBucketConfiguration tokenBucketConfiguration,\n            @Named(POD_TERMINAL_GC_CONTROLLER) ControllerConfiguration controllerConfiguration,\n            KubeApiFacade kubeApiFacade,\n            KubeControllerConfiguration kubeControllerConfiguration,\n            V3JobOperations v3JobOperations\n    )", "modifiers": "@Inject public", "return": "", "signature": " PodTerminalGcController(\n            TitusRuntime titusRuntime,\n            LocalScheduler scheduler,\n            @Named(POD_TERMINAL_GC_CONTROLLER) FixedIntervalTokenBucketConfiguration tokenBucketConfiguration,\n            @Named(POD_TERMINAL_GC_CONTROLLER) ControllerConfiguration controllerConfiguration,\n            KubeApiFacade kubeApiFacade,\n            KubeControllerConfiguration kubeControllerConfiguration,\n            V3JobOperations v3JobOperations\n    )", "full_signature": "@Inject public  PodTerminalGcController(\n            TitusRuntime titusRuntime,\n            LocalScheduler scheduler,\n            @Named(POD_TERMINAL_GC_CONTROLLER) FixedIntervalTokenBucketConfiguration tokenBucketConfiguration,\n            @Named(POD_TERMINAL_GC_CONTROLLER) ControllerConfiguration controllerConfiguration,\n            KubeApiFacade kubeApiFacade,\n            KubeControllerConfiguration kubeControllerConfiguration,\n            V3JobOperations v3JobOperations\n    )", "class_method_signature": "PodTerminalGcController.PodTerminalGcController(\n            TitusRuntime titusRuntime,\n            LocalScheduler scheduler,\n            @Named(POD_TERMINAL_GC_CONTROLLER) FixedIntervalTokenBucketConfiguration tokenBucketConfiguration,\n            @Named(POD_TERMINAL_GC_CONTROLLER) ControllerConfiguration controllerConfiguration,\n            KubeApiFacade kubeApiFacade,\n            KubeControllerConfiguration kubeControllerConfiguration,\n            V3JobOperations v3JobOperations\n    )", "testcase": false, "constructor": true}, {"identifier": "shouldGc", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean shouldGc()", "full_signature": "@Override public boolean shouldGc()", "class_method_signature": "PodTerminalGcController.shouldGc()", "testcase": false, "constructor": false}, {"identifier": "getItemsToGc", "parameters": "()", "modifiers": "@Override public", "return": "List<V1Pod>", "signature": "List<V1Pod> getItemsToGc()", "full_signature": "@Override public List<V1Pod> getItemsToGc()", "class_method_signature": "PodTerminalGcController.getItemsToGc()", "testcase": false, "constructor": false}, {"identifier": "gcItem", "parameters": "(V1Pod item)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean gcItem(V1Pod item)", "full_signature": "@Override public boolean gcItem(V1Pod item)", "class_method_signature": "PodTerminalGcController.gcItem(V1Pod item)", "testcase": false, "constructor": false}, {"identifier": "isPodTerminal", "parameters": "(V1Pod pod, Map<String, Task> currentTasks)", "modifiers": "@VisibleForTesting", "return": "boolean", "signature": "boolean isPodTerminal(V1Pod pod, Map<String, Task> currentTasks)", "full_signature": "@VisibleForTesting boolean isPodTerminal(V1Pod pod, Map<String, Task> currentTasks)", "class_method_signature": "PodTerminalGcController.isPodTerminal(V1Pod pod, Map<String, Task> currentTasks)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/kubernetes/controller/PodTerminalGcController.java"}, "focal_method": {"identifier": "isPodTerminal", "parameters": "(V1Pod pod, Map<String, Task> currentTasks)", "modifiers": "@VisibleForTesting", "return": "boolean", "body": "@VisibleForTesting\n    boolean isPodTerminal(V1Pod pod, Map<String, Task> currentTasks) {\n        String podName = KubeUtil.getMetadataName(pod.getMetadata());\n        Task task = currentTasks.get(podName);\n        if (task != null) {\n            if (TaskState.isTerminalState(task.getStatus().getState())) {\n                return clock.isPast(task.getStatus().getTimestamp() + kubeControllerConfiguration.getPodTerminalGracePeriodMs());\n            }\n            return false;\n        }\n\n        V1PodStatus status = pod.getStatus();\n        if (status != null && KubeUtil.isPodPhaseTerminal(status.getPhase())) {\n            return KubeUtil.findFinishedTimestamp(pod)\n                    .map(timestamp -> clock.isPast(timestamp + kubeControllerConfiguration.getPodTerminalGracePeriodMs()))\n                    .orElse(true);\n        }\n        return false;\n    }", "signature": "boolean isPodTerminal(V1Pod pod, Map<String, Task> currentTasks)", "full_signature": "@VisibleForTesting boolean isPodTerminal(V1Pod pod, Map<String, Task> currentTasks)", "class_method_signature": "PodTerminalGcController.isPodTerminal(V1Pod pod, Map<String, Task> currentTasks)", "testcase": false, "constructor": false, "invocations": ["getMetadataName", "getMetadata", "get", "isTerminalState", "getState", "getStatus", "isPast", "getTimestamp", "getStatus", "getPodTerminalGracePeriodMs", "getStatus", "isPodPhaseTerminal", "getPhase", "orElse", "map", "findFinishedTimestamp", "isPast", "getPodTerminalGracePeriodMs"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}