{"test_class": {"identifier": "ETCFork3MTest", "superclass": "", "interfaces": "", "fields": [], "file": "ethereumj-core/src/test/java/org/ethereum/config/blockchain/ETCFork3MTest.java"}, "test_case": {"identifier": "testRelatedEip", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRelatedEip() throws Exception {\n        TestBlockchainConfig parent = new TestBlockchainConfig();\n\n        ETCFork3M etcFork3M = new ETCFork3M(parent);\n        // Inherited from parent\n        assertFalse(etcFork3M.eip198());\n        assertFalse(etcFork3M.eip206());\n        assertFalse(etcFork3M.eip211());\n        assertFalse(etcFork3M.eip212());\n        assertFalse(etcFork3M.eip213());\n        assertFalse(etcFork3M.eip214());\n        assertFalse(etcFork3M.eip658());\n\n        // Always false\n        assertFalse(etcFork3M.eip161());\n\n        /*\n         * By flipping parent's eip values, we assert that\n         * ETCFork3M delegates respective eip calls to parent.\n         */\n        parent.enableAllEip();\n\n        // Inherited from parent\n        assertTrue(etcFork3M.eip198());\n        assertFalse(etcFork3M.eip206());\n        assertFalse(etcFork3M.eip211());\n        assertTrue(etcFork3M.eip212());\n        assertTrue(etcFork3M.eip213());\n        assertFalse(etcFork3M.eip214());\n        assertFalse(etcFork3M.eip658());\n\n        // Always false\n        assertFalse(etcFork3M.eip161());\n    }", "signature": "void testRelatedEip()", "full_signature": "@Test public void testRelatedEip()", "class_method_signature": "ETCFork3MTest.testRelatedEip()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "eip198", "assertFalse", "eip206", "assertFalse", "eip211", "assertFalse", "eip212", "assertFalse", "eip213", "assertFalse", "eip214", "assertFalse", "eip658", "assertFalse", "eip161", "enableAllEip", "assertTrue", "eip198", "assertFalse", "eip206", "assertFalse", "eip211", "assertTrue", "eip212", "assertTrue", "eip213", "assertFalse", "eip214", "assertFalse", "eip658", "assertFalse", "eip161"]}, "focal_class": {"identifier": "ETCFork3M", "superclass": "extends Eip160HFConfig", "interfaces": "", "fields": [], "methods": [{"identifier": "ETCFork3M", "parameters": "(BlockchainConfig parent)", "modifiers": "public", "return": "", "signature": " ETCFork3M(BlockchainConfig parent)", "full_signature": "public  ETCFork3M(BlockchainConfig parent)", "class_method_signature": "ETCFork3M.ETCFork3M(BlockchainConfig parent)", "testcase": false, "constructor": true}, {"identifier": "getChainId", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getChainId()", "full_signature": "@Override public Integer getChainId()", "class_method_signature": "ETCFork3M.getChainId()", "testcase": false, "constructor": false}, {"identifier": "eip161", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip161()", "full_signature": "@Override public boolean eip161()", "class_method_signature": "ETCFork3M.eip161()", "testcase": false, "constructor": false}, {"identifier": "calcDifficulty", "parameters": "(BlockHeader curBlock, BlockHeader parent)", "modifiers": "@Override public", "return": "BigInteger", "signature": "BigInteger calcDifficulty(BlockHeader curBlock, BlockHeader parent)", "full_signature": "@Override public BigInteger calcDifficulty(BlockHeader curBlock, BlockHeader parent)", "class_method_signature": "ETCFork3M.calcDifficulty(BlockHeader curBlock, BlockHeader parent)", "testcase": false, "constructor": false}, {"identifier": "getCalcDifficultyMultiplier", "parameters": "(BlockHeader curBlock, BlockHeader parent)", "modifiers": "@Override public", "return": "BigInteger", "signature": "BigInteger getCalcDifficultyMultiplier(BlockHeader curBlock, BlockHeader parent)", "full_signature": "@Override public BigInteger getCalcDifficultyMultiplier(BlockHeader curBlock, BlockHeader parent)", "class_method_signature": "ETCFork3M.getCalcDifficultyMultiplier(BlockHeader curBlock, BlockHeader parent)", "testcase": false, "constructor": false}, {"identifier": "getExplosion", "parameters": "(BlockHeader curBlock, BlockHeader parent)", "modifiers": "protected", "return": "int", "signature": "int getExplosion(BlockHeader curBlock, BlockHeader parent)", "full_signature": "protected int getExplosion(BlockHeader curBlock, BlockHeader parent)", "class_method_signature": "ETCFork3M.getExplosion(BlockHeader curBlock, BlockHeader parent)", "testcase": false, "constructor": false}], "file": "ethereumj-core/src/main/java/org/ethereum/config/blockchain/ETCFork3M.java"}, "focal_method": {"identifier": "eip161", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean eip161() {\n        return false;\n    }", "signature": "boolean eip161()", "full_signature": "@Override public boolean eip161()", "class_method_signature": "ETCFork3M.eip161()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 19730456, "url": "https://github.com/ethereum/ethereumj", "language": "Java", "is_fork": false, "fork_count": 1034, "stargazer_count": 2058, "size": 47979, "license": "licensed"}}