{"test_class": {"identifier": "KerberosAuthorityTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static String KRB_LOGIN_CB_CLASS = \"com.yahoo.athenz.auth.impl.TestLoginCallbackHandler\";", "modifier": "private final static", "type": "String", "declarator": "KRB_LOGIN_CB_CLASS = \"com.yahoo.athenz.auth.impl.TestLoginCallbackHandler\"", "var_name": "KRB_LOGIN_CB_CLASS"}], "file": "libs/java/auth_core/src/test/java/com/yahoo/athenz/auth/impl/KerberosAuthorityTest.java"}, "test_case": {"identifier": "testGetAuthenticateChallenge", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetAuthenticateChallenge() {\n        KerberosAuthority krbAuthority  = new KerberosAuthority();\n        assertEquals(krbAuthority.getAuthenticateChallenge(), \"Negotiate\");\n    }", "signature": "void testGetAuthenticateChallenge()", "full_signature": "@Test public void testGetAuthenticateChallenge()", "class_method_signature": "KerberosAuthorityTest.testGetAuthenticateChallenge()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getAuthenticateChallenge"]}, "focal_class": {"identifier": "KerberosAuthority", "superclass": "", "interfaces": "implements Authority", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(KerberosAuthority.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(KerberosAuthority.class)", "var_name": "LOG"}, {"original_string": "static final String KRB_AUTH_HEADER    = \"Authorization\";", "modifier": "static final", "type": "String", "declarator": "KRB_AUTH_HEADER    = \"Authorization\"", "var_name": "KRB_AUTH_HEADER"}, {"original_string": "static final String KRB_AUTH_CHALLENGE = \"Negotiate\";", "modifier": "static final", "type": "String", "declarator": "KRB_AUTH_CHALLENGE = \"Negotiate\"", "var_name": "KRB_AUTH_CHALLENGE"}, {"original_string": "static final String KRB_PROP_SVCPRPL   = \"athenz.auth.kerberos.service_principal\";", "modifier": "static final", "type": "String", "declarator": "KRB_PROP_SVCPRPL   = \"athenz.auth.kerberos.service_principal\"", "var_name": "KRB_PROP_SVCPRPL"}, {"original_string": "static final String KRB_PROP_KEYTAB    = \"athenz.auth.kerberos.keytab_location\";", "modifier": "static final", "type": "String", "declarator": "KRB_PROP_KEYTAB    = \"athenz.auth.kerberos.keytab_location\"", "var_name": "KRB_PROP_KEYTAB"}, {"original_string": "static final String KRB_PROP_DEBUG     = \"athenz.auth.kerberos.debug\";", "modifier": "static final", "type": "String", "declarator": "KRB_PROP_DEBUG     = \"athenz.auth.kerberos.debug\"", "var_name": "KRB_PROP_DEBUG"}, {"original_string": "static final String KRB_PROP_JAASCFG              = \"athenz.auth.kerberos.jaas_cfg_section\";", "modifier": "static final", "type": "String", "declarator": "KRB_PROP_JAASCFG              = \"athenz.auth.kerberos.jaas_cfg_section\"", "var_name": "KRB_PROP_JAASCFG"}, {"original_string": "static final String KRB_PROP_LOGIN_CB_CLASS       = \"athenz.auth.kerberos.login_callback_handler_class\";", "modifier": "static final", "type": "String", "declarator": "KRB_PROP_LOGIN_CB_CLASS       = \"athenz.auth.kerberos.login_callback_handler_class\"", "var_name": "KRB_PROP_LOGIN_CB_CLASS"}, {"original_string": "static final String KRB_PROP_LOGIN_RENEW_TGT      = \"athenz.auth.kerberos.renewTGT\";", "modifier": "static final", "type": "String", "declarator": "KRB_PROP_LOGIN_RENEW_TGT      = \"athenz.auth.kerberos.renewTGT\"", "var_name": "KRB_PROP_LOGIN_RENEW_TGT"}, {"original_string": "static final String KRB_PROP_LOGIN_USE_TKT_CACHE  = \"athenz.auth.kerberos.use_ticket_cache\";", "modifier": "static final", "type": "String", "declarator": "KRB_PROP_LOGIN_USE_TKT_CACHE  = \"athenz.auth.kerberos.use_ticket_cache\"", "var_name": "KRB_PROP_LOGIN_USE_TKT_CACHE"}, {"original_string": "static final String KRB_PROP_LOGIN_TKT_CACHE_NAME = \"athenz.auth.kerberos.ticket_cache_name\";", "modifier": "static final", "type": "String", "declarator": "KRB_PROP_LOGIN_TKT_CACHE_NAME = \"athenz.auth.kerberos.ticket_cache_name\"", "var_name": "KRB_PROP_LOGIN_TKT_CACHE_NAME"}, {"original_string": "static final String KRB_PROP_LOGIN_WINDOW         = \"athenz.auth.kerberos.login_window\";", "modifier": "static final", "type": "String", "declarator": "KRB_PROP_LOGIN_WINDOW         = \"athenz.auth.kerberos.login_window\"", "var_name": "KRB_PROP_LOGIN_WINDOW"}, {"original_string": "static final String LOGIN_WINDOW_DEF = \"60000\";", "modifier": "static final", "type": "String", "declarator": "LOGIN_WINDOW_DEF = \"60000\"", "var_name": "LOGIN_WINDOW_DEF"}, {"original_string": "private String  servicePrincipal;", "modifier": "private", "type": "String", "declarator": "servicePrincipal", "var_name": "servicePrincipal"}, {"original_string": "private String  keyTabConfFile;", "modifier": "private", "type": "String", "declarator": "keyTabConfFile", "var_name": "keyTabConfFile"}, {"original_string": "private String  jaasConfigSection;", "modifier": "private", "type": "String", "declarator": "jaasConfigSection", "var_name": "jaasConfigSection"}, {"original_string": "private String  loginCallbackHandler;", "modifier": "private", "type": "String", "declarator": "loginCallbackHandler", "var_name": "loginCallbackHandler"}, {"original_string": "private AtomicReference<Subject> serviceSubject = new AtomicReference<>();", "modifier": "private", "type": "AtomicReference<Subject>", "declarator": "serviceSubject = new AtomicReference<>()", "var_name": "serviceSubject"}, {"original_string": "private Exception initState = null;", "modifier": "private", "type": "Exception", "declarator": "initState = null", "var_name": "initState"}, {"original_string": "private long lastLogin   = 0;", "modifier": "private", "type": "long", "declarator": "lastLogin   = 0", "var_name": "lastLogin"}, {"original_string": "private long loginWindow = 60000;", "modifier": "private", "type": "long", "declarator": "loginWindow = 60000", "var_name": "loginWindow"}], "methods": [{"identifier": "KerberosAuthority", "parameters": "(String servicePrincipal, String keyTabConfFile, String jaasConfigSection)", "modifiers": "public", "return": "", "signature": " KerberosAuthority(String servicePrincipal, String keyTabConfFile, String jaasConfigSection)", "full_signature": "public  KerberosAuthority(String servicePrincipal, String keyTabConfFile, String jaasConfigSection)", "class_method_signature": "KerberosAuthority.KerberosAuthority(String servicePrincipal, String keyTabConfFile, String jaasConfigSection)", "testcase": false, "constructor": true}, {"identifier": "KerberosAuthority", "parameters": "()", "modifiers": "public", "return": "", "signature": " KerberosAuthority()", "full_signature": "public  KerberosAuthority()", "class_method_signature": "KerberosAuthority.KerberosAuthority()", "testcase": false, "constructor": true}, {"identifier": "getInitState", "parameters": "()", "modifiers": "public", "return": "Exception", "signature": "Exception getInitState()", "full_signature": "public Exception getInitState()", "class_method_signature": "KerberosAuthority.getInitState()", "testcase": false, "constructor": false}, {"identifier": "setInitState", "parameters": "(Exception exc)", "modifiers": "public", "return": "void", "signature": "void setInitState(Exception exc)", "full_signature": "public void setInitState(Exception exc)", "class_method_signature": "KerberosAuthority.setInitState(Exception exc)", "testcase": false, "constructor": false}, {"identifier": "getLoginWindow", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLoginWindow()", "full_signature": "public long getLoginWindow()", "class_method_signature": "KerberosAuthority.getLoginWindow()", "testcase": false, "constructor": false}, {"identifier": "setLoginWindow", "parameters": "(long loginWindowMillis)", "modifiers": "public", "return": "void", "signature": "void setLoginWindow(long loginWindowMillis)", "full_signature": "public void setLoginWindow(long loginWindowMillis)", "class_method_signature": "KerberosAuthority.setLoginWindow(long loginWindowMillis)", "testcase": false, "constructor": false}, {"identifier": "getLastLogin", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLastLogin()", "full_signature": "public long getLastLogin()", "class_method_signature": "KerberosAuthority.getLastLogin()", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initialize()", "full_signature": "@Override public void initialize()", "class_method_signature": "KerberosAuthority.initialize()", "testcase": false, "constructor": false}, {"identifier": "getID", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getID()", "full_signature": "@Override public String getID()", "class_method_signature": "KerberosAuthority.getID()", "testcase": false, "constructor": false}, {"identifier": "login", "parameters": "(boolean logoutFirst)", "modifiers": "@SuppressWarnings({ \"unchecked\", \"rawtypes\" }) public synchronized", "return": "void", "signature": "void login(boolean logoutFirst)", "full_signature": "@SuppressWarnings({ \"unchecked\", \"rawtypes\" }) public synchronized void login(boolean logoutFirst)", "class_method_signature": "KerberosAuthority.login(boolean logoutFirst)", "testcase": false, "constructor": false}, {"identifier": "isTargetPrincipal", "parameters": "(KerberosTicket ticket, String remoteSvcPrincipal)", "modifiers": "", "return": "boolean", "signature": "boolean isTargetPrincipal(KerberosTicket ticket, String remoteSvcPrincipal)", "full_signature": " boolean isTargetPrincipal(KerberosTicket ticket, String remoteSvcPrincipal)", "class_method_signature": "KerberosAuthority.isTargetPrincipal(KerberosTicket ticket, String remoteSvcPrincipal)", "testcase": false, "constructor": false}, {"identifier": "refreshLogin", "parameters": "(String remoteSvcPrincipal)", "modifiers": "public", "return": "boolean", "signature": "boolean refreshLogin(String remoteSvcPrincipal)", "full_signature": "public boolean refreshLogin(String remoteSvcPrincipal)", "class_method_signature": "KerberosAuthority.refreshLogin(String remoteSvcPrincipal)", "testcase": false, "constructor": false}, {"identifier": "getDomain", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDomain()", "full_signature": "@Override public String getDomain()", "class_method_signature": "KerberosAuthority.getDomain()", "testcase": false, "constructor": false}, {"identifier": "getHeader", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getHeader()", "full_signature": "@Override public String getHeader()", "class_method_signature": "KerberosAuthority.getHeader()", "testcase": false, "constructor": false}, {"identifier": "getAuthenticateChallenge", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAuthenticateChallenge()", "full_signature": "@Override public String getAuthenticateChallenge()", "class_method_signature": "KerberosAuthority.getAuthenticateChallenge()", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(String creds, String remoteAddr, String httpMethod, StringBuilder errMsg)", "modifiers": "@Override public", "return": "Principal", "signature": "Principal authenticate(String creds, String remoteAddr, String httpMethod, StringBuilder errMsg)", "full_signature": "@Override public Principal authenticate(String creds, String remoteAddr, String httpMethod, StringBuilder errMsg)", "class_method_signature": "KerberosAuthority.authenticate(String creds, String remoteAddr, String httpMethod, StringBuilder errMsg)", "testcase": false, "constructor": false}], "file": "libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/impl/KerberosAuthority.java"}, "focal_method": {"identifier": "getAuthenticateChallenge", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n     public String getAuthenticateChallenge() {\n        return KRB_AUTH_CHALLENGE;\n    }", "signature": "String getAuthenticateChallenge()", "full_signature": "@Override public String getAuthenticateChallenge()", "class_method_signature": "KerberosAuthority.getAuthenticateChallenge()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}