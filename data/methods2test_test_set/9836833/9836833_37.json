{"test_class": {"identifier": "MoreClassesTest", "superclass": "", "interfaces": "", "fields": [], "file": "restx-common/src/test/java/restx/common/MoreClassesTest.java"}, "test_case": {"identifier": "should_not_find_inherited_classes_for_primitive_types", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void should_not_find_inherited_classes_for_primitive_types() {\n\t\tassertThat(getInheritedClasses(void.class)).isEmpty();\n\t\tassertThat(getInheritedClasses(int.class)).isEmpty();\n\t\tassertThat(getInheritedClasses(double.class)).isEmpty();\n\t}", "signature": "void should_not_find_inherited_classes_for_primitive_types()", "full_signature": "@Test public void should_not_find_inherited_classes_for_primitive_types()", "class_method_signature": "MoreClassesTest.should_not_find_inherited_classes_for_primitive_types()", "testcase": true, "constructor": false, "invocations": ["isEmpty", "assertThat", "getInheritedClasses", "isEmpty", "assertThat", "getInheritedClasses", "isEmpty", "assertThat", "getInheritedClasses"]}, "focal_class": {"identifier": "MoreClasses", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "MoreClasses", "parameters": "()", "modifiers": "private", "return": "", "signature": " MoreClasses()", "full_signature": "private  MoreClasses()", "class_method_signature": "MoreClasses.MoreClasses()", "testcase": false, "constructor": true}, {"identifier": "getInheritedClasses", "parameters": "(Class clazz)", "modifiers": "public static", "return": "Set<Class>", "signature": "Set<Class> getInheritedClasses(Class clazz)", "full_signature": "public static Set<Class> getInheritedClasses(Class clazz)", "class_method_signature": "MoreClasses.getInheritedClasses(Class clazz)", "testcase": false, "constructor": false}], "file": "restx-common/src/main/java/restx/common/MoreClasses.java"}, "focal_method": {"identifier": "getInheritedClasses", "parameters": "(Class clazz)", "modifiers": "public static", "return": "Set<Class>", "body": "public static Set<Class> getInheritedClasses(Class clazz) {\n\t\tSet<Class> inheritedClasses = Sets.newHashSet();\n\n\t\t// add super class, and add recursively their inherited classes\n\t\tClass superClass = clazz.getSuperclass();\n\t\tif (superClass != null) {\n\t\t\tinheritedClasses.add(superClass);\n\t\t\tinheritedClasses.addAll(getInheritedClasses(superClass));\n\t\t}\n\n\t\t// add all interfaces, and recursively add their inherited classes\n\t\tClass[] interfaces = clazz.getInterfaces();\n\t\tfor (Class anInterface : interfaces) {\n\t\t\tinheritedClasses.add(anInterface);\n\t\t\tinheritedClasses.addAll(getInheritedClasses(anInterface));\n\t\t}\n\n\t\treturn inheritedClasses;\n\t}", "signature": "Set<Class> getInheritedClasses(Class clazz)", "full_signature": "public static Set<Class> getInheritedClasses(Class clazz)", "class_method_signature": "MoreClasses.getInheritedClasses(Class clazz)", "testcase": false, "constructor": false, "invocations": ["newHashSet", "getSuperclass", "add", "addAll", "getInheritedClasses", "getInterfaces", "add", "addAll", "getInheritedClasses"]}, "repository": {"repo_id": 9836833, "url": "https://github.com/restx/restx", "language": "Java", "is_fork": false, "fork_count": 78, "stargazer_count": 433, "size": 7896, "license": "licensed"}}