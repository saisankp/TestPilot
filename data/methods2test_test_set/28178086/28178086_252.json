{"test_class": {"identifier": "ComplexBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Complex c1 = cart(54.654, 7.321);", "modifier": "private final", "type": "Complex", "declarator": "c1 = cart(54.654, 7.321)", "var_name": "c1"}, {"original_string": "private final Complex c2 = cart(77, -66.12);", "modifier": "private final", "type": "Complex", "declarator": "c2 = cart(77, -66.12)", "var_name": "c2"}, {"original_string": "private final Complex c3 = cart(3.14, 0);", "modifier": "private final", "type": "Complex", "declarator": "c3 = cart(3.14, 0)", "var_name": "c3"}], "file": "jtstoolkit/src/test/java/ec/tstoolkit/maths/ComplexBuilderTest.java"}, "test_case": {"identifier": "testConstructorDouble2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConstructorDouble2() {\n        assertEquals(c1, new ComplexBuilder(54.654, 7.321).build());\n    }", "signature": "void testConstructorDouble2()", "full_signature": "@Test public void testConstructorDouble2()", "class_method_signature": "ComplexBuilderTest.testConstructorDouble2()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "build"]}, "focal_class": {"identifier": "ComplexBuilder", "superclass": "", "interfaces": "implements IBuilder<Complex>", "fields": [{"original_string": "private double re;", "modifier": "private", "type": "double", "declarator": "re", "var_name": "re"}, {"original_string": "private double im;", "modifier": "private", "type": "double", "declarator": "im", "var_name": "im"}], "methods": [{"identifier": "ComplexBuilder", "parameters": "(final Complex c)", "modifiers": "public", "return": "", "signature": " ComplexBuilder(final Complex c)", "full_signature": "public  ComplexBuilder(final Complex c)", "class_method_signature": "ComplexBuilder.ComplexBuilder(final Complex c)", "testcase": false, "constructor": true}, {"identifier": "ComplexBuilder", "parameters": "(final double re)", "modifiers": "public", "return": "", "signature": " ComplexBuilder(final double re)", "full_signature": "public  ComplexBuilder(final double re)", "class_method_signature": "ComplexBuilder.ComplexBuilder(final double re)", "testcase": false, "constructor": true}, {"identifier": "ComplexBuilder", "parameters": "(final double re, final double im)", "modifiers": "public", "return": "", "signature": " ComplexBuilder(final double re, final double im)", "full_signature": "public  ComplexBuilder(final double re, final double im)", "class_method_signature": "ComplexBuilder.ComplexBuilder(final double re, final double im)", "testcase": false, "constructor": true}, {"identifier": "getRe", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getRe()", "full_signature": "public double getRe()", "class_method_signature": "ComplexBuilder.getRe()", "testcase": false, "constructor": false}, {"identifier": "getIm", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getIm()", "full_signature": "public double getIm()", "class_method_signature": "ComplexBuilder.getIm()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final Complex c)", "modifiers": "public", "return": "ComplexBuilder", "signature": "ComplexBuilder add(final Complex c)", "full_signature": "public ComplexBuilder add(final Complex c)", "class_method_signature": "ComplexBuilder.add(final Complex c)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final double a)", "modifiers": "public", "return": "ComplexBuilder", "signature": "ComplexBuilder add(final double a)", "full_signature": "public ComplexBuilder add(final double a)", "class_method_signature": "ComplexBuilder.add(final double a)", "testcase": false, "constructor": false}, {"identifier": "chs", "parameters": "()", "modifiers": "public", "return": "ComplexBuilder", "signature": "ComplexBuilder chs()", "full_signature": "public ComplexBuilder chs()", "class_method_signature": "ComplexBuilder.chs()", "testcase": false, "constructor": false}, {"identifier": "div", "parameters": "(final Complex c)", "modifiers": "public", "return": "ComplexBuilder", "signature": "ComplexBuilder div(final Complex c)", "full_signature": "public ComplexBuilder div(final Complex c)", "class_method_signature": "ComplexBuilder.div(final Complex c)", "testcase": false, "constructor": false}, {"identifier": "div", "parameters": "(final double r)", "modifiers": "public", "return": "ComplexBuilder", "signature": "ComplexBuilder div(final double r)", "full_signature": "public ComplexBuilder div(final double r)", "class_method_signature": "ComplexBuilder.div(final double r)", "testcase": false, "constructor": false}, {"identifier": "div", "parameters": "(final double x, final double y)", "modifiers": "protected", "return": "ComplexBuilder", "signature": "ComplexBuilder div(final double x, final double y)", "full_signature": "protected ComplexBuilder div(final double x, final double y)", "class_method_signature": "ComplexBuilder.div(final double x, final double y)", "testcase": false, "constructor": false}, {"identifier": "inv", "parameters": "()", "modifiers": "public", "return": "ComplexBuilder", "signature": "ComplexBuilder inv()", "full_signature": "public ComplexBuilder inv()", "class_method_signature": "ComplexBuilder.inv()", "testcase": false, "constructor": false}, {"identifier": "mul", "parameters": "(final Complex c)", "modifiers": "public", "return": "ComplexBuilder", "signature": "ComplexBuilder mul(final Complex c)", "full_signature": "public ComplexBuilder mul(final Complex c)", "class_method_signature": "ComplexBuilder.mul(final Complex c)", "testcase": false, "constructor": false}, {"identifier": "mul", "parameters": "(final double r)", "modifiers": "public", "return": "ComplexBuilder", "signature": "ComplexBuilder mul(final double r)", "full_signature": "public ComplexBuilder mul(final double r)", "class_method_signature": "ComplexBuilder.mul(final double r)", "testcase": false, "constructor": false}, {"identifier": "mul", "parameters": "(final double x, final double y)", "modifiers": "public", "return": "ComplexBuilder", "signature": "ComplexBuilder mul(final double x, final double y)", "full_signature": "public ComplexBuilder mul(final double x, final double y)", "class_method_signature": "ComplexBuilder.mul(final double x, final double y)", "testcase": false, "constructor": false}, {"identifier": "sub", "parameters": "(final Complex c)", "modifiers": "public", "return": "ComplexBuilder", "signature": "ComplexBuilder sub(final Complex c)", "full_signature": "public ComplexBuilder sub(final Complex c)", "class_method_signature": "ComplexBuilder.sub(final Complex c)", "testcase": false, "constructor": false}, {"identifier": "sub", "parameters": "(final double r)", "modifiers": "public", "return": "ComplexBuilder", "signature": "ComplexBuilder sub(final double r)", "full_signature": "public ComplexBuilder sub(final double r)", "class_method_signature": "ComplexBuilder.sub(final double r)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "@Override public", "return": "Complex", "signature": "Complex build()", "full_signature": "@Override public Complex build()", "class_method_signature": "ComplexBuilder.build()", "testcase": false, "constructor": false}], "file": "jtstoolkit/src/main/java/ec/tstoolkit/maths/ComplexBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "@Override public", "return": "Complex", "body": "@Override\n    public Complex build()\n    {\n\treturn Complex.cart(re, im);\n    }", "signature": "Complex build()", "full_signature": "@Override public Complex build()", "class_method_signature": "ComplexBuilder.build()", "testcase": false, "constructor": false, "invocations": ["cart"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}