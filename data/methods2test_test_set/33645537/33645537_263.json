{"test_class": {"identifier": "ContainsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Contains contains;", "modifier": "private", "type": "Contains", "declarator": "contains", "var_name": "contains"}], "file": "algs/src/test/java/com/github/pedrovgs/problem32/ContainsTest.java"}, "test_case": {"identifier": "shouldReturnFalseIfSecondStringDoesNotContainFirstString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void shouldReturnFalseIfSecondStringDoesNotContainFirstString() {\n    String word1 = \"ana\";\n    String word2 = \"Pedro\";\n\n    boolean result = contains.evaluate(word1, word2);\n\n    assertFalse(result);\n  }", "signature": "void shouldReturnFalseIfSecondStringDoesNotContainFirstString()", "full_signature": "@Test public void shouldReturnFalseIfSecondStringDoesNotContainFirstString()", "class_method_signature": "ContainsTest.shouldReturnFalseIfSecondStringDoesNotContainFirstString()", "testcase": true, "constructor": false, "invocations": ["evaluate", "assertFalse"]}, "focal_class": {"identifier": "Contains", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "evaluate", "parameters": "(String w1, String w2)", "modifiers": "public", "return": "boolean", "signature": "boolean evaluate(String w1, String w2)", "full_signature": "public boolean evaluate(String w1, String w2)", "class_method_signature": "Contains.evaluate(String w1, String w2)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem32/Contains.java"}, "focal_method": {"identifier": "evaluate", "parameters": "(String w1, String w2)", "modifiers": "public", "return": "boolean", "body": "public boolean evaluate(String w1, String w2) {\n    if (w1 == null || w2 == null) {\n      throw new IllegalArgumentException(\"You can't pass null strings as input.\");\n    }\n    boolean contains = false;\n    for (int i = 0; i < w2.length() - 1; i++) {\n      if (w2.charAt(i) == w1.charAt(0)) {\n        for (int j = 0; j < w1.length(); j++) {\n          if (w1.charAt(j) == w2.charAt(i + j) && j == w1.length() - 1) {\n            contains = true;\n            break;\n          }\n        }\n      }\n    }\n    return contains;\n  }", "signature": "boolean evaluate(String w1, String w2)", "full_signature": "public boolean evaluate(String w1, String w2)", "class_method_signature": "Contains.evaluate(String w1, String w2)", "testcase": false, "constructor": false, "invocations": ["length", "charAt", "charAt", "length", "charAt", "charAt", "length"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}