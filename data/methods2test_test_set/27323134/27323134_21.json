{"test_class": {"identifier": "MasterBackendDvrDataStoreTest", "superclass": "extends ApplicationTestCase", "interfaces": "", "fields": [{"original_string": "private static final int FAKE_RECORDED_ID = 999;", "modifier": "private static final", "type": "int", "declarator": "FAKE_RECORDED_ID = 999", "var_name": "FAKE_RECORDED_ID"}, {"original_string": "private static final DateTime FAKE_START_TIME = new DateTime();", "modifier": "private static final", "type": "DateTime", "declarator": "FAKE_START_TIME = new DateTime()", "var_name": "FAKE_START_TIME"}, {"original_string": "private static final DateTime FAKE_END_TIME = new DateTime();", "modifier": "private static final", "type": "DateTime", "declarator": "FAKE_END_TIME = new DateTime()", "var_name": "FAKE_END_TIME"}, {"original_string": "private static final String FAKE_TITLE = \"fake title\";", "modifier": "private static final", "type": "String", "declarator": "FAKE_TITLE = \"fake title\"", "var_name": "FAKE_TITLE"}, {"original_string": "private static final String FAKE_SUB_TITLE = \"fake sub title\";", "modifier": "private static final", "type": "String", "declarator": "FAKE_SUB_TITLE = \"fake sub title\"", "var_name": "FAKE_SUB_TITLE"}, {"original_string": "private static final String FAKE_CATEGORY = \"fake category\";", "modifier": "private static final", "type": "String", "declarator": "FAKE_CATEGORY = \"fake category\"", "var_name": "FAKE_CATEGORY"}, {"original_string": "private static final String FAKE_CATTYPE = \"fake catType\";", "modifier": "private static final", "type": "String", "declarator": "FAKE_CATTYPE = \"fake catType\"", "var_name": "FAKE_CATTYPE"}, {"original_string": "private static final boolean FAKE_REPEAT = false;", "modifier": "private static final", "type": "boolean", "declarator": "FAKE_REPEAT = false", "var_name": "FAKE_REPEAT"}, {"original_string": "private static final int FAKE_VIDEOPROPS = 1;", "modifier": "private static final", "type": "int", "declarator": "FAKE_VIDEOPROPS = 1", "var_name": "FAKE_VIDEOPROPS"}, {"original_string": "private static final int FAKE_AUDIOPROPS = 1;", "modifier": "private static final", "type": "int", "declarator": "FAKE_AUDIOPROPS = 1", "var_name": "FAKE_AUDIOPROPS"}, {"original_string": "private static final int FAKE_SUBPROPS = 1;", "modifier": "private static final", "type": "int", "declarator": "FAKE_SUBPROPS = 1", "var_name": "FAKE_SUBPROPS"}, {"original_string": "private static final String FAKE_SERIESID = \"fake seriesId\";", "modifier": "private static final", "type": "String", "declarator": "FAKE_SERIESID = \"fake seriesId\"", "var_name": "FAKE_SERIESID"}, {"original_string": "private static final String FAKE_PROGRAMID = \"fake programId\";", "modifier": "private static final", "type": "String", "declarator": "FAKE_PROGRAMID = \"fake programId\"", "var_name": "FAKE_PROGRAMID"}, {"original_string": "private static final double FAKE_STARS = 1.0;", "modifier": "private static final", "type": "double", "declarator": "FAKE_STARS = 1.0", "var_name": "FAKE_STARS"}, {"original_string": "private static final long FAKE_FILESIZE = 1L;", "modifier": "private static final", "type": "long", "declarator": "FAKE_FILESIZE = 1L", "var_name": "FAKE_FILESIZE"}, {"original_string": "private static final DateTime FAKE_LASTMODIFIED = new DateTime();", "modifier": "private static final", "type": "DateTime", "declarator": "FAKE_LASTMODIFIED = new DateTime()", "var_name": "FAKE_LASTMODIFIED"}, {"original_string": "private static final int FAKE_PROGRAMFLAGS = 1;", "modifier": "private static final", "type": "int", "declarator": "FAKE_PROGRAMFLAGS = 1", "var_name": "FAKE_PROGRAMFLAGS"}, {"original_string": "private static final String FAKE_FILENAME = \"fake fileName\";", "modifier": "private static final", "type": "String", "declarator": "FAKE_FILENAME = \"fake fileName\"", "var_name": "FAKE_FILENAME"}, {"original_string": "private static final String FAKE_HOSTNAME = \"fake hostName\";", "modifier": "private static final", "type": "String", "declarator": "FAKE_HOSTNAME = \"fake hostName\"", "var_name": "FAKE_HOSTNAME"}, {"original_string": "private static final LocalDate FAKE_AIRDATE = new LocalDate();", "modifier": "private static final", "type": "LocalDate", "declarator": "FAKE_AIRDATE = new LocalDate()", "var_name": "FAKE_AIRDATE"}, {"original_string": "private static final String FAKE_DESCRIPTION = \"fake description\";", "modifier": "private static final", "type": "String", "declarator": "FAKE_DESCRIPTION = \"fake description\"", "var_name": "FAKE_DESCRIPTION"}, {"original_string": "private static final String FAKE_INETREF = \"fake inetref\";", "modifier": "private static final", "type": "String", "declarator": "FAKE_INETREF = \"fake inetref\"", "var_name": "FAKE_INETREF"}, {"original_string": "private static final int FAKE_SEASON = 1;", "modifier": "private static final", "type": "int", "declarator": "FAKE_SEASON = 1", "var_name": "FAKE_SEASON"}, {"original_string": "private static final int FAKE_EPISODE = 1;", "modifier": "private static final", "type": "int", "declarator": "FAKE_EPISODE = 1", "var_name": "FAKE_EPISODE"}, {"original_string": "private static final int FAKE_TOTALEPISODES = 1;", "modifier": "private static final", "type": "int", "declarator": "FAKE_TOTALEPISODES = 1", "var_name": "FAKE_TOTALEPISODES"}, {"original_string": "private MasterBackendDvrDataStore masterBackendDvrDataStore;", "modifier": "private", "type": "MasterBackendDvrDataStore", "declarator": "masterBackendDvrDataStore", "var_name": "masterBackendDvrDataStore"}, {"original_string": "@Mock\n    private DvrApi mockDvrApi;", "modifier": "@Mock\n    private", "type": "DvrApi", "declarator": "mockDvrApi", "var_name": "mockDvrApi"}], "file": "mythtv-player/src/test/java/org/mythtv/android/data/repository/datasource/MasterBackendDvrDataStoreTest.java"}, "test_case": {"identifier": "testGetProgramEntityDetailsFromApi", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetProgramEntityDetailsFromApi() {\n\n        ProgramEntity fakeProgramEntity = createFakeProgramEntity();\n        Observable<ProgramEntity> fakeObservable = Observable.just( fakeProgramEntity );\n        given( mockDvrApi.recordedProgramById( FAKE_RECORDED_ID, -1, null ) ).willReturn( fakeObservable );\n\n        masterBackendDvrDataStore.recordedProgramEntityDetails( FAKE_RECORDED_ID );\n\n        verify( mockDvrApi ).recordedProgramById( FAKE_RECORDED_ID, -1, null );\n\n    }", "signature": "void testGetProgramEntityDetailsFromApi()", "full_signature": "@Test public void testGetProgramEntityDetailsFromApi()", "class_method_signature": "MasterBackendDvrDataStoreTest.testGetProgramEntityDetailsFromApi()", "testcase": true, "constructor": false, "invocations": ["createFakeProgramEntity", "just", "willReturn", "given", "recordedProgramById", "recordedProgramEntityDetails", "recordedProgramById", "verify"]}, "focal_class": {"identifier": "MasterBackendDvrDataStore", "superclass": "", "interfaces": "implements DvrDataStore", "fields": [{"original_string": "private static final String TAG = MasterBackendDvrDataStore.class.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "TAG = MasterBackendDvrDataStore.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "private final DvrApi api;", "modifier": "private final", "type": "DvrApi", "declarator": "api", "var_name": "api"}], "methods": [{"identifier": "MasterBackendDvrDataStore", "parameters": "( final DvrApi api )", "modifiers": "public", "return": "", "signature": " MasterBackendDvrDataStore( final DvrApi api )", "full_signature": "public  MasterBackendDvrDataStore( final DvrApi api )", "class_method_signature": "MasterBackendDvrDataStore.MasterBackendDvrDataStore( final DvrApi api )", "testcase": false, "constructor": true}, {"identifier": "titleInfoEntityList", "parameters": "()", "modifiers": "@Override public", "return": "Observable<List<TitleInfoEntity>>", "signature": "Observable<List<TitleInfoEntity>> titleInfoEntityList()", "full_signature": "@Override public Observable<List<TitleInfoEntity>> titleInfoEntityList()", "class_method_signature": "MasterBackendDvrDataStore.titleInfoEntityList()", "testcase": false, "constructor": false}, {"identifier": "recordedProgramEntityList", "parameters": "( final boolean descending, final int startIndex, final int count, final String titleRegEx, final String recGroup, final String storageGroup )", "modifiers": "@Override public", "return": "Observable<List<ProgramEntity>>", "signature": "Observable<List<ProgramEntity>> recordedProgramEntityList( final boolean descending, final int startIndex, final int count, final String titleRegEx, final String recGroup, final String storageGroup )", "full_signature": "@Override public Observable<List<ProgramEntity>> recordedProgramEntityList( final boolean descending, final int startIndex, final int count, final String titleRegEx, final String recGroup, final String storageGroup )", "class_method_signature": "MasterBackendDvrDataStore.recordedProgramEntityList( final boolean descending, final int startIndex, final int count, final String titleRegEx, final String recGroup, final String storageGroup )", "testcase": false, "constructor": false}, {"identifier": "recordedProgramEntityDetails", "parameters": "( final int recordedId )", "modifiers": "@Override public", "return": "Observable<ProgramEntity>", "signature": "Observable<ProgramEntity> recordedProgramEntityDetails( final int recordedId )", "full_signature": "@Override public Observable<ProgramEntity> recordedProgramEntityDetails( final int recordedId )", "class_method_signature": "MasterBackendDvrDataStore.recordedProgramEntityDetails( final int recordedId )", "testcase": false, "constructor": false}, {"identifier": "upcomingProgramEntityList", "parameters": "( final int startIndex, final int count, final boolean showAll, final int recordId, final int recStatus )", "modifiers": "@Override public", "return": "Observable<List<ProgramEntity>>", "signature": "Observable<List<ProgramEntity>> upcomingProgramEntityList( final int startIndex, final int count, final boolean showAll, final int recordId, final int recStatus )", "full_signature": "@Override public Observable<List<ProgramEntity>> upcomingProgramEntityList( final int startIndex, final int count, final boolean showAll, final int recordId, final int recStatus )", "class_method_signature": "MasterBackendDvrDataStore.upcomingProgramEntityList( final int startIndex, final int count, final boolean showAll, final int recordId, final int recStatus )", "testcase": false, "constructor": false}, {"identifier": "encoderEntityList", "parameters": "()", "modifiers": "@Override public", "return": "Observable<List<EncoderEntity>>", "signature": "Observable<List<EncoderEntity>> encoderEntityList()", "full_signature": "@Override public Observable<List<EncoderEntity>> encoderEntityList()", "class_method_signature": "MasterBackendDvrDataStore.encoderEntityList()", "testcase": false, "constructor": false}, {"identifier": "updateWatchedStatus", "parameters": "( final int id, final boolean watched )", "modifiers": "@Override public", "return": "Observable<Boolean>", "signature": "Observable<Boolean> updateWatchedStatus( final int id, final boolean watched )", "full_signature": "@Override public Observable<Boolean> updateWatchedStatus( final int id, final boolean watched )", "class_method_signature": "MasterBackendDvrDataStore.updateWatchedStatus( final int id, final boolean watched )", "testcase": false, "constructor": false}, {"identifier": "getBookmark", "parameters": "( final int recordedId, final String offsetType )", "modifiers": "@Override public", "return": "Observable<Long>", "signature": "Observable<Long> getBookmark( final int recordedId, final String offsetType )", "full_signature": "@Override public Observable<Long> getBookmark( final int recordedId, final String offsetType )", "class_method_signature": "MasterBackendDvrDataStore.getBookmark( final int recordedId, final String offsetType )", "testcase": false, "constructor": false}], "file": "mythtv-player/src/main/java/org/mythtv/android/data/repository/datasource/MasterBackendDvrDataStore.java"}, "focal_method": {"identifier": "recordedProgramEntityDetails", "parameters": "( final int recordedId )", "modifiers": "@Override public", "return": "Observable<ProgramEntity>", "body": "@Override\n    public Observable<ProgramEntity> recordedProgramEntityDetails( final int recordedId ) {\n        Log.d( TAG, \"recordedProgramEntityDetails : enter\" );\n\n        Log.d( TAG, \"recordedProgramEntityList : recordedId=\" + recordedId );\n\n        return this.api.recordedProgramById( recordedId, -1, null )\n                .doOnError( e -> Log.e( TAG, \"recordedProgramEntityList : error\", e ) );\n    }", "signature": "Observable<ProgramEntity> recordedProgramEntityDetails( final int recordedId )", "full_signature": "@Override public Observable<ProgramEntity> recordedProgramEntityDetails( final int recordedId )", "class_method_signature": "MasterBackendDvrDataStore.recordedProgramEntityDetails( final int recordedId )", "testcase": false, "constructor": false, "invocations": ["d", "d", "doOnError", "recordedProgramById", "e"]}, "repository": {"repo_id": 27323134, "url": "https://github.com/MythTV-Clients/MythtvPlayerForAndroid", "stars": 17, "created": "11/30/2014 3:26:45 AM +00:00", "updates": "2019-12-31T22:13:00+00:00", "fork": "False", "license": "licensed"}}