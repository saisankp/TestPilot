{"test_class": {"identifier": "WaiterTest", "superclass": "extends BaseAkkaTestCase", "interfaces": "", "fields": [], "file": "exercise_013_Faulty_waiter/src/test/java/com/lightbend/training/coffeehouse/WaiterTest.java"}, "test_case": {"identifier": "shouldThrowFrustratedExceptionWhenMaxComplaintReached", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldThrowFrustratedExceptionWhenMaxComplaintReached() {\n        new JavaTestKit(system) {{\n            ActorRef waiter = system.actorOf(Waiter.props(system.deadLetters(), system.deadLetters(), 0));\n            eventFilter(this, Waiter.FrustratedException.class, \"\", 1, () -> {\n                waiter.tell(new Waiter.Complaint(new Coffee.Akkaccino()), ActorRef.noSender());\n            });\n        }};\n    }", "signature": "void shouldThrowFrustratedExceptionWhenMaxComplaintReached()", "full_signature": "@Test public void shouldThrowFrustratedExceptionWhenMaxComplaintReached()", "class_method_signature": "WaiterTest.shouldThrowFrustratedExceptionWhenMaxComplaintReached()", "testcase": true, "constructor": false, "invocations": ["actorOf", "props", "deadLetters", "deadLetters", "eventFilter", "tell", "noSender"]}, "focal_class": {"identifier": "Waiter", "superclass": "extends AbstractLoggingActor", "interfaces": "", "fields": [{"original_string": "private ActorRef coffeeHouse;", "modifier": "private", "type": "ActorRef", "declarator": "coffeeHouse", "var_name": "coffeeHouse"}], "methods": [{"identifier": "Waiter", "parameters": "(ActorRef coffeeHouse)", "modifiers": "public", "return": "", "signature": " Waiter(ActorRef coffeeHouse)", "full_signature": "public  Waiter(ActorRef coffeeHouse)", "class_method_signature": "Waiter.Waiter(ActorRef coffeeHouse)", "testcase": false, "constructor": true}, {"identifier": "createReceive", "parameters": "()", "modifiers": "@Override public", "return": "Receive", "signature": "Receive createReceive()", "full_signature": "@Override public Receive createReceive()", "class_method_signature": "Waiter.createReceive()", "testcase": false, "constructor": false}, {"identifier": "props", "parameters": "(ActorRef coffeeHouse)", "modifiers": "public static", "return": "Props", "signature": "Props props(ActorRef coffeeHouse)", "full_signature": "public static Props props(ActorRef coffeeHouse)", "class_method_signature": "Waiter.props(ActorRef coffeeHouse)", "testcase": false, "constructor": false}], "file": "exercise_013_Faulty_waiter/src/main/java/com/lightbend/training/coffeehouse/Waiter.java"}, "focal_method": {"identifier": "props", "parameters": "(ActorRef coffeeHouse)", "modifiers": "public static", "return": "Props", "body": "public static Props props(ActorRef coffeeHouse) {\n        return Props.create(Waiter.class, () -> new Waiter(coffeeHouse));\n    }", "signature": "Props props(ActorRef coffeeHouse)", "full_signature": "public static Props props(ActorRef coffeeHouse)", "class_method_signature": "Waiter.props(ActorRef coffeeHouse)", "testcase": false, "constructor": false, "invocations": ["create"]}, "repository": {"repo_id": 97642523, "url": "https://github.com/ironfish/oreilly-reactive-architecture-student", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 14, "size": 84, "license": "licensed"}}