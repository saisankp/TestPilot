{"test_class": {"identifier": "PomXmlUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Path pomXml;", "modifier": "private static", "type": "Path", "declarator": "pomXml", "var_name": "pomXml"}], "file": "orienteer-core/src/test/java/org/orienteer/core/boot/loader/util/PomXmlUtilsTest.java"}, "test_case": {"identifier": "readDependencies", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void readDependencies() {\n        Path parent = Paths.get(\"../pom.xml\");\n        Set<Artifact> artifacts = OrienteerClassLoaderUtil.readDependencies(parent);\n        assertTrue(\"Dependencies from parent pom.xml\", artifacts.size() > 0);\n    }", "signature": "void readDependencies()", "full_signature": "@Test public void readDependencies()", "class_method_signature": "PomXmlUtilsTest.readDependencies()", "testcase": true, "constructor": false, "invocations": ["get", "readDependencies", "assertTrue", "size"]}, "focal_class": {"identifier": "PomXmlUtils", "superclass": "extends AbstractXmlUtil", "interfaces": "", "fields": [{"original_string": "private static final String PROJECT                     = \"project\";", "modifier": "private static final", "type": "String", "declarator": "PROJECT                     = \"project\"", "var_name": "PROJECT"}, {"original_string": "private static final String PARENT                      = \"parent\";", "modifier": "private static final", "type": "String", "declarator": "PARENT                      = \"parent\"", "var_name": "PARENT"}, {"original_string": "private static final String GROUP                       = \"groupId\";", "modifier": "private static final", "type": "String", "declarator": "GROUP                       = \"groupId\"", "var_name": "GROUP"}, {"original_string": "private static final String ARTIFACT                    = \"artifactId\";", "modifier": "private static final", "type": "String", "declarator": "ARTIFACT                    = \"artifactId\"", "var_name": "ARTIFACT"}, {"original_string": "private static final String VERSION                     = \"version\";", "modifier": "private static final", "type": "String", "declarator": "VERSION                     = \"version\"", "var_name": "VERSION"}, {"original_string": "private static final String DEPENDENCIES                = \"dependencies\";", "modifier": "private static final", "type": "String", "declarator": "DEPENDENCIES                = \"dependencies\"", "var_name": "DEPENDENCIES"}, {"original_string": "private static final String PROPERTIES                  = \"properties\";", "modifier": "private static final", "type": "String", "declarator": "PROPERTIES                  = \"properties\"", "var_name": "PROPERTIES"}, {"original_string": "private static final String DEPENDENCIES_MANAGMENT      = \"dependencyManagement\";", "modifier": "private static final", "type": "String", "declarator": "DEPENDENCIES_MANAGMENT      = \"dependencyManagement\"", "var_name": "DEPENDENCIES_MANAGMENT"}, {"original_string": "private static final String WITHOUT_VERSION             = \"without-version\";", "modifier": "private static final", "type": "String", "declarator": "WITHOUT_VERSION             = \"without-version\"", "var_name": "WITHOUT_VERSION"}], "methods": [{"identifier": "readParentGAVInPomXml", "parameters": "(Path pomXml)", "modifiers": "", "return": "Artifact", "signature": "Artifact readParentGAVInPomXml(Path pomXml)", "full_signature": " Artifact readParentGAVInPomXml(Path pomXml)", "class_method_signature": "PomXmlUtils.readParentGAVInPomXml(Path pomXml)", "testcase": false, "constructor": false}, {"identifier": "readGroupArtifactVersionInPomXml", "parameters": "(Path pomXml)", "modifiers": "", "return": "Artifact", "signature": "Artifact readGroupArtifactVersionInPomXml(Path pomXml)", "full_signature": " Artifact readGroupArtifactVersionInPomXml(Path pomXml)", "class_method_signature": "PomXmlUtils.readGroupArtifactVersionInPomXml(Path pomXml)", "testcase": false, "constructor": false}, {"identifier": "readDependencies", "parameters": "(Path pomXml)", "modifiers": "@SuppressWarnings(\"unchecked\")", "return": "Set<Artifact>", "signature": "Set<Artifact> readDependencies(Path pomXml)", "full_signature": "@SuppressWarnings(\"unchecked\") Set<Artifact> readDependencies(Path pomXml)", "class_method_signature": "PomXmlUtils.readDependencies(Path pomXml)", "testcase": false, "constructor": false}, {"identifier": "getPropertiesVersionsFromPomXml", "parameters": "(Path pomXml)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> getPropertiesVersionsFromPomXml(Path pomXml)", "full_signature": "private Map<String, String> getPropertiesVersionsFromPomXml(Path pomXml)", "class_method_signature": "PomXmlUtils.getPropertiesVersionsFromPomXml(Path pomXml)", "testcase": false, "constructor": false}, {"identifier": "getPropertiesVersionsFromPomXml", "parameters": "(Document doc)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> getPropertiesVersionsFromPomXml(Document doc)", "full_signature": "private Map<String, String> getPropertiesVersionsFromPomXml(Document doc)", "class_method_signature": "PomXmlUtils.getPropertiesVersionsFromPomXml(Document doc)", "testcase": false, "constructor": false}, {"identifier": "getParentVersion", "parameters": "(Path pomXml)", "modifiers": "private", "return": "String", "signature": "String getParentVersion(Path pomXml)", "full_signature": "private String getParentVersion(Path pomXml)", "class_method_signature": "PomXmlUtils.getParentVersion(Path pomXml)", "testcase": false, "constructor": false}, {"identifier": "getParentVersion", "parameters": "(Document doc)", "modifiers": "private", "return": "String", "signature": "String getParentVersion(Document doc)", "full_signature": "private String getParentVersion(Document doc)", "class_method_signature": "PomXmlUtils.getParentVersion(Document doc)", "testcase": false, "constructor": false}, {"identifier": "parseDependency", "parameters": "(Element element, Map<String, String> versions)", "modifiers": "private", "return": "Artifact", "signature": "Artifact parseDependency(Element element, Map<String, String> versions)", "full_signature": "private Artifact parseDependency(Element element, Map<String, String> versions)", "class_method_signature": "PomXmlUtils.parseDependency(Element element, Map<String, String> versions)", "testcase": false, "constructor": false}, {"identifier": "getGAV", "parameters": "(String group, String artifact, String version)", "modifiers": "private", "return": "String", "signature": "String getGAV(String group, String artifact, String version)", "full_signature": "private String getGAV(String group, String artifact, String version)", "class_method_signature": "PomXmlUtils.getGAV(String group, String artifact, String version)", "testcase": false, "constructor": false}, {"identifier": "isLinkToVersion", "parameters": "(String version)", "modifiers": "private", "return": "boolean", "signature": "boolean isLinkToVersion(String version)", "full_signature": "private boolean isLinkToVersion(String version)", "class_method_signature": "PomXmlUtils.isLinkToVersion(String version)", "testcase": false, "constructor": false}, {"identifier": "getLinkToVersion", "parameters": "(String version)", "modifiers": "private", "return": "String", "signature": "String getLinkToVersion(String version)", "full_signature": "private String getLinkToVersion(String version)", "class_method_signature": "PomXmlUtils.getLinkToVersion(String version)", "testcase": false, "constructor": false}], "file": "orienteer-core/src/main/java/org/orienteer/core/boot/loader/util/PomXmlUtils.java"}, "focal_method": {"identifier": "readDependencies", "parameters": "(Path pomXml)", "modifiers": "@SuppressWarnings(\"unchecked\")", "return": "Set<Artifact>", "body": "@SuppressWarnings(\"unchecked\")\n    Set<Artifact> readDependencies(Path pomXml) {\n        String dependenciesExp          = String.format(\"/%s/%s/*\", PROJECT, DEPENDENCIES);\n        String dependenciesManagmentExp = String.format(\"/%s/%s/%s/*\", PROJECT, DEPENDENCIES_MANAGMENT, DEPENDENCIES);\n        Document doc = readDocumentFromFile(pomXml);\n        NodeList dependenciesNode = executeExpression(dependenciesExp, doc);\n        if (dependenciesNode == null || dependenciesNode.getLength() == 0) {\n            dependenciesNode = executeExpression(dependenciesManagmentExp, doc);\n        }\n        Set<Artifact> dependencies =  Sets.newHashSet();\n        if (dependenciesNode != null && dependenciesNode.getLength() != 0) {\n            Map<String, String> versions = getPropertiesVersionsFromPomXml(pomXml);\n            for (int i = 0; i < dependenciesNode.getLength(); i++) {\n                Node node = dependenciesNode.item(i);\n                if (node.getNodeType() == Node.ELEMENT_NODE) {\n                    Element element = (Element) node;\n                    Artifact artifact = parseDependency(element, versions);\n                    if (artifact!=null) dependencies.add(artifact);\n                }\n            }\n        }\n\n        return dependencies;\n    }", "signature": "Set<Artifact> readDependencies(Path pomXml)", "full_signature": "@SuppressWarnings(\"unchecked\") Set<Artifact> readDependencies(Path pomXml)", "class_method_signature": "PomXmlUtils.readDependencies(Path pomXml)", "testcase": false, "constructor": false, "invocations": ["format", "format", "readDocumentFromFile", "executeExpression", "getLength", "executeExpression", "newHashSet", "getLength", "getPropertiesVersionsFromPomXml", "getLength", "item", "getNodeType", "parseDependency", "add"]}, "repository": {"repo_id": 20936653, "url": "https://github.com/OrienteerBAP/Orienteer", "stars": 108, "created": "6/17/2014 7:21:32 PM +00:00", "updates": "2020-01-27T07:16:30+00:00", "fork": "False", "license": "licensed"}}