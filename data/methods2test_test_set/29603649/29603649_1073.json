{"test_class": {"identifier": "TimeStampBasedIdGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private TimeStampBasedIdGenerator underTest;", "modifier": "@InjectMocks\n    private", "type": "TimeStampBasedIdGenerator", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "@Mock\n    private Logger logger;", "modifier": "@Mock\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Mock\n    private CurrentDateProvider currentDateProvider;", "modifier": "@Mock\n    private", "type": "CurrentDateProvider", "declarator": "currentDateProvider", "var_name": "currentDateProvider"}], "file": "browsermob-proxy/src/test/java/com/epam/browsermob/messagemarker/idgenerator/TimeStampBasedIdGeneratorTest.java"}, "test_case": {"identifier": "testNextIdentifierShouldReturnAProperIdWhenThePreviousTimestampEqualsTheCurrent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNextIdentifierShouldReturnAProperIdWhenThePreviousTimestampEqualsTheCurrent() {\n        // GIVEN\n        String expected = \"20130624145212.0888\";\n\n        Calendar cal = Calendar.getInstance();\n        cal.set(2013, 5, 24, 14, 52, 12);\n        Date currentDate = cal.getTime();\n        given(currentDateProvider.getCurrentDate()).willReturn(currentDate);\n        Whitebox.setInternalState(underTest, \"previousSimpleDate\", \"20130624145212\");\n        Whitebox.setInternalState(underTest, \"currentNumber\", new AtomicInteger(888));\n        // WHEN\n        String actual = underTest.nextIdentifier();\n        // THEN\n        verify(currentDateProvider).getCurrentDate();\n        Assert.assertEquals(actual, expected);\n    }", "signature": "void testNextIdentifierShouldReturnAProperIdWhenThePreviousTimestampEqualsTheCurrent()", "full_signature": "@Test public void testNextIdentifierShouldReturnAProperIdWhenThePreviousTimestampEqualsTheCurrent()", "class_method_signature": "TimeStampBasedIdGeneratorTest.testNextIdentifierShouldReturnAProperIdWhenThePreviousTimestampEqualsTheCurrent()", "testcase": true, "constructor": false, "invocations": ["getInstance", "set", "getTime", "willReturn", "given", "getCurrentDate", "setInternalState", "setInternalState", "nextIdentifier", "getCurrentDate", "verify", "assertEquals"]}, "focal_class": {"identifier": "TimeStampBasedIdGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int NO_DIGITS = 4;", "modifier": "private static final", "type": "int", "declarator": "NO_DIGITS = 4", "var_name": "NO_DIGITS"}, {"original_string": "private final AtomicInteger currentNumber = new AtomicInteger();", "modifier": "private final", "type": "AtomicInteger", "declarator": "currentNumber = new AtomicInteger()", "var_name": "currentNumber"}, {"original_string": "private String previousSimpleDate;", "modifier": "private", "type": "String", "declarator": "previousSimpleDate", "var_name": "previousSimpleDate"}, {"original_string": "private CurrentDateProvider currentDateProvider = new CurrentDateProvider();", "modifier": "private", "type": "CurrentDateProvider", "declarator": "currentDateProvider = new CurrentDateProvider()", "var_name": "currentDateProvider"}, {"original_string": "private SimpleDateFormat fileSimpleDateFormat = new SimpleDateFormat(\"yyyyMMddHHmmss\");", "modifier": "private", "type": "SimpleDateFormat", "declarator": "fileSimpleDateFormat = new SimpleDateFormat(\"yyyyMMddHHmmss\")", "var_name": "fileSimpleDateFormat"}], "methods": [{"identifier": "nextIdentifier", "parameters": "()", "modifiers": "public synchronized", "return": "String", "signature": "String nextIdentifier()", "full_signature": "public synchronized String nextIdentifier()", "class_method_signature": "TimeStampBasedIdGenerator.nextIdentifier()", "testcase": false, "constructor": false}, {"identifier": "getCurrentDateFormattedForFiles", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getCurrentDateFormattedForFiles()", "full_signature": "private String getCurrentDateFormattedForFiles()", "class_method_signature": "TimeStampBasedIdGenerator.getCurrentDateFormattedForFiles()", "testcase": false, "constructor": false}, {"identifier": "checkPreviousDate", "parameters": "(final String currentSimpleDate)", "modifiers": "private", "return": "void", "signature": "void checkPreviousDate(final String currentSimpleDate)", "full_signature": "private void checkPreviousDate(final String currentSimpleDate)", "class_method_signature": "TimeStampBasedIdGenerator.checkPreviousDate(final String currentSimpleDate)", "testcase": false, "constructor": false}, {"identifier": "fourDigitString", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String fourDigitString()", "full_signature": "private String fourDigitString()", "class_method_signature": "TimeStampBasedIdGenerator.fourDigitString()", "testcase": false, "constructor": false}, {"identifier": "createZeros", "parameters": "(final String convertedNumber)", "modifiers": "private", "return": "String", "signature": "String createZeros(final String convertedNumber)", "full_signature": "private String createZeros(final String convertedNumber)", "class_method_signature": "TimeStampBasedIdGenerator.createZeros(final String convertedNumber)", "testcase": false, "constructor": false}], "file": "browsermob-proxy/src/main/java/com/epam/browsermob/messagemarker/idgenerator/TimeStampBasedIdGenerator.java"}, "focal_method": {"identifier": "nextIdentifier", "parameters": "()", "modifiers": "public synchronized", "return": "String", "body": "public synchronized String nextIdentifier() {\n        String currentSimpleDate = getCurrentDateFormattedForFiles();\n        checkPreviousDate(currentSimpleDate);\n        return currentSimpleDate + \".\" + fourDigitString();\n    }", "signature": "String nextIdentifier()", "full_signature": "public synchronized String nextIdentifier()", "class_method_signature": "TimeStampBasedIdGenerator.nextIdentifier()", "testcase": false, "constructor": false, "invocations": ["getCurrentDateFormattedForFiles", "checkPreviousDate", "fourDigitString"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}