{"test_class": {"identifier": "RoleMemberNotificationCommonTest", "superclass": "", "interfaces": "", "fields": [], "file": "servers/zms/src/test/java/com/yahoo/athenz/zms/notification/RoleMemberNotificationCommonTest.java"}, "test_case": {"identifier": "testExpiryPrincipalGetNotificationDetails", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExpiryPrincipalGetNotificationDetails() {\n        DBService dbsvc = Mockito.mock(DBService.class);\n        RoleMemberNotificationCommon roleMemberNotificationCommon = new RoleMemberNotificationCommon(dbsvc, USER_DOMAIN_PREFIX);\n\n        // Verify no details for member without member roles\n        DomainRoleMember roleMember = new DomainRoleMember();\n        roleMember.setMemberName(\"user.joe\");\n        Map<String, DomainRoleMember> members = new HashMap<>();\n        members.put(\"user.joe\", roleMember);\n        List<Notification> notification = roleMemberNotificationCommon.getNotificationDetails(\n                members,\n                new RoleMemberExpiryNotificationTask.RoleExpiryPrincipalNotificationToEmailConverter(),\n                new RoleMemberExpiryNotificationTask.RoleExpiryDomainNotificationToEmailConverter(),\n                new RoleMemberExpiryNotificationTask.ExpiryRoleMemberDetailStringer(),\n                \"testNotification\");\n        assertEquals(1, notification.size());\n        assertTrue(notification.get(0).getDetails().isEmpty());\n        assertEquals(notification.get(0).getType(), \"testNotification\");\n\n        // Verify the same result when setting the memberRoles to an empty collection\n        roleMember.setMemberRoles(Collections.emptyList());\n        notification = roleMemberNotificationCommon.getNotificationDetails(\n                members,\n                new RoleMemberExpiryNotificationTask.RoleExpiryPrincipalNotificationToEmailConverter(),\n                new RoleMemberExpiryNotificationTask.RoleExpiryDomainNotificationToEmailConverter(),\n                new RoleMemberExpiryNotificationTask.ExpiryRoleMemberDetailStringer(),\n                \"testNotification\");\n        assertEquals(1, notification.size());\n        assertTrue(notification.get(0).getDetails().isEmpty());\n        assertEquals(notification.get(0).getType(), \"testNotification\");\n\n        final Timestamp expirationTs = Timestamp.fromMillis(100);\n        final Timestamp reviewTs = Timestamp.fromMillis(50);\n\n        List<MemberRole> memberRoles = new ArrayList<>();\n        memberRoles.add(new MemberRole().setRoleName(\"role1\").setDomainName(\"athenz1\").setMemberName(\"user.joe\")\n                .setExpiration(expirationTs).setReviewReminder(reviewTs));\n        roleMember.setMemberRoles(memberRoles);\n\n        notification = roleMemberNotificationCommon.getNotificationDetails(\n                members,\n                new RoleMemberExpiryNotificationTask.RoleExpiryPrincipalNotificationToEmailConverter(),\n                new RoleMemberExpiryNotificationTask.RoleExpiryDomainNotificationToEmailConverter(),\n                new RoleMemberExpiryNotificationTask.ExpiryRoleMemberDetailStringer(),\n                \"testNotification\");\n\n        assertEquals(1, notification.size());\n        assertEquals(2, notification.get(0).getDetails().size());\n        assertEquals(notification.get(0).getType(), \"testNotification\");\n\n        assertEquals(notification.get(0).getDetails().get(NOTIFICATION_DETAILS_ROLES_LIST),\n                \"athenz1;role1;\" + expirationTs);\n        assertEquals(notification.get(0).getDetails().get(NOTIFICATION_DETAILS_MEMBER), \"user.joe\");\n\n        memberRoles.add(new MemberRole().setRoleName(\"role1\").setDomainName(\"athenz2\").setMemberName(\"user.joe\")\n                .setExpiration(expirationTs).setReviewReminder(reviewTs));\n        memberRoles.add(new MemberRole().setRoleName(\"role2\").setDomainName(\"athenz2\").setMemberName(\"user.joe\")\n                .setExpiration(expirationTs).setReviewReminder(reviewTs));\n\n        notification = roleMemberNotificationCommon.getNotificationDetails(\n                members,\n                new RoleMemberExpiryNotificationTask.RoleExpiryPrincipalNotificationToEmailConverter(),\n                new RoleMemberExpiryNotificationTask.RoleExpiryDomainNotificationToEmailConverter(),\n                new RoleMemberExpiryNotificationTask.ExpiryRoleMemberDetailStringer(),\n                \"testNotification\");\n\n        assertEquals(notification.get(0).getType(), \"testNotification\");\n        assertEquals(1, notification.size());\n        assertEquals(2, notification.get(0).getDetails().size());\n        assertEquals(notification.get(0).getDetails().get(NOTIFICATION_DETAILS_ROLES_LIST),\n                \"athenz1;role1;\" + expirationTs + \"|athenz2;role1;\" + expirationTs + \"|athenz2;role2;\" + expirationTs);\n        assertEquals(notification.get(0).getDetails().get(NOTIFICATION_DETAILS_MEMBER), \"user.joe\");\n        assertEquals(notification.get(0).getDetails().get(NOTIFICATION_DETAILS_ROLES_LIST),\n                \"athenz1;role1;\" + expirationTs + \"|athenz2;role1;\" + expirationTs + \"|athenz2;role2;\" + expirationTs);\n    }", "signature": "void testExpiryPrincipalGetNotificationDetails()", "full_signature": "@Test public void testExpiryPrincipalGetNotificationDetails()", "class_method_signature": "RoleMemberNotificationCommonTest.testExpiryPrincipalGetNotificationDetails()", "testcase": true, "constructor": false, "invocations": ["mock", "setMemberName", "put", "getNotificationDetails", "assertEquals", "size", "assertTrue", "isEmpty", "getDetails", "get", "assertEquals", "getType", "get", "setMemberRoles", "emptyList", "getNotificationDetails", "assertEquals", "size", "assertTrue", "isEmpty", "getDetails", "get", "assertEquals", "getType", "get", "fromMillis", "fromMillis", "add", "setReviewReminder", "setExpiration", "setMemberName", "setDomainName", "setRoleName", "setMemberRoles", "getNotificationDetails", "assertEquals", "size", "assertEquals", "size", "getDetails", "get", "assertEquals", "getType", "get", "assertEquals", "get", "getDetails", "get", "assertEquals", "get", "getDetails", "get", "add", "setReviewReminder", "setExpiration", "setMemberName", "setDomainName", "setRoleName", "add", "setReviewReminder", "setExpiration", "setMemberName", "setDomainName", "setRoleName", "getNotificationDetails", "assertEquals", "getType", "get", "assertEquals", "size", "assertEquals", "size", "getDetails", "get", "assertEquals", "get", "getDetails", "get", "assertEquals", "get", "getDetails", "get", "assertEquals", "get", "getDetails", "get"]}, "focal_class": {"identifier": "RoleMemberNotificationCommon", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final NotificationCommon notificationCommon;", "modifier": "private final", "type": "NotificationCommon", "declarator": "notificationCommon", "var_name": "notificationCommon"}], "methods": [{"identifier": "RoleMemberNotificationCommon", "parameters": "(DBService dbService, String userDomainPrefix)", "modifiers": "public", "return": "", "signature": " RoleMemberNotificationCommon(DBService dbService, String userDomainPrefix)", "full_signature": "public  RoleMemberNotificationCommon(DBService dbService, String userDomainPrefix)", "class_method_signature": "RoleMemberNotificationCommon.RoleMemberNotificationCommon(DBService dbService, String userDomainPrefix)", "testcase": false, "constructor": true}, {"identifier": "getNotificationDetails", "parameters": "(Map<String, DomainRoleMember> members,\n                                                     NotificationToEmailConverter principalNotificationToEmailConverter,\n                                                     NotificationToEmailConverter domainAdminNotificationToEmailConverter,\n                                                     RoleMemberDetailStringer roleMemberDetailStringer,\n                                                     String notificationType)", "modifiers": "public", "return": "List<Notification>", "signature": "List<Notification> getNotificationDetails(Map<String, DomainRoleMember> members,\n                                                     NotificationToEmailConverter principalNotificationToEmailConverter,\n                                                     NotificationToEmailConverter domainAdminNotificationToEmailConverter,\n                                                     RoleMemberDetailStringer roleMemberDetailStringer,\n                                                     String notificationType)", "full_signature": "public List<Notification> getNotificationDetails(Map<String, DomainRoleMember> members,\n                                                     NotificationToEmailConverter principalNotificationToEmailConverter,\n                                                     NotificationToEmailConverter domainAdminNotificationToEmailConverter,\n                                                     RoleMemberDetailStringer roleMemberDetailStringer,\n                                                     String notificationType)", "class_method_signature": "RoleMemberNotificationCommon.getNotificationDetails(Map<String, DomainRoleMember> members,\n                                                     NotificationToEmailConverter principalNotificationToEmailConverter,\n                                                     NotificationToEmailConverter domainAdminNotificationToEmailConverter,\n                                                     RoleMemberDetailStringer roleMemberDetailStringer,\n                                                     String notificationType)", "testcase": false, "constructor": false}, {"identifier": "processRoleReminder", "parameters": "(Map<String, List<MemberRole>> domainAdminMap,\n                                                   DomainRoleMember member,\n                                                   RoleMemberDetailStringer roleMemberDetailStringer)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> processRoleReminder(Map<String, List<MemberRole>> domainAdminMap,\n                                                   DomainRoleMember member,\n                                                   RoleMemberDetailStringer roleMemberDetailStringer)", "full_signature": "private Map<String, String> processRoleReminder(Map<String, List<MemberRole>> domainAdminMap,\n                                                   DomainRoleMember member,\n                                                   RoleMemberDetailStringer roleMemberDetailStringer)", "class_method_signature": "RoleMemberNotificationCommon.processRoleReminder(Map<String, List<MemberRole>> domainAdminMap,\n                                                   DomainRoleMember member,\n                                                   RoleMemberDetailStringer roleMemberDetailStringer)", "testcase": false, "constructor": false}, {"identifier": "processMemberReminder", "parameters": "(final String domainName,\n                                                     List<MemberRole> memberRoles,\n                                                     RoleMemberDetailStringer roleMemberDetailStringer)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> processMemberReminder(final String domainName,\n                                                     List<MemberRole> memberRoles,\n                                                     RoleMemberDetailStringer roleMemberDetailStringer)", "full_signature": "private Map<String, String> processMemberReminder(final String domainName,\n                                                     List<MemberRole> memberRoles,\n                                                     RoleMemberDetailStringer roleMemberDetailStringer)", "class_method_signature": "RoleMemberNotificationCommon.processMemberReminder(final String domainName,\n                                                     List<MemberRole> memberRoles,\n                                                     RoleMemberDetailStringer roleMemberDetailStringer)", "testcase": false, "constructor": false}], "file": "servers/zms/src/main/java/com/yahoo/athenz/zms/notification/RoleMemberNotificationCommon.java"}, "focal_method": {"identifier": "getNotificationDetails", "parameters": "(Map<String, DomainRoleMember> members,\n                                                     NotificationToEmailConverter principalNotificationToEmailConverter,\n                                                     NotificationToEmailConverter domainAdminNotificationToEmailConverter,\n                                                     RoleMemberDetailStringer roleMemberDetailStringer,\n                                                     String notificationType)", "modifiers": "public", "return": "List<Notification>", "body": "public List<Notification> getNotificationDetails(Map<String, DomainRoleMember> members,\n                                                     NotificationToEmailConverter principalNotificationToEmailConverter,\n                                                     NotificationToEmailConverter domainAdminNotificationToEmailConverter,\n                                                     RoleMemberDetailStringer roleMemberDetailStringer,\n                                                     String notificationType) {\n        // first we're going to send reminders to all the members indicating to\n        // them that they're going to expiry (or nearing review date) and they should follow up with\n        // domain admins to extend their membership.\n        // if the principal is service then we're going to send the reminder\n        // to the domain admins of that service\n        // while doing this we're going to keep track of all domains that\n        // have members that are about to expire (or pass their review date) and then send them a reminder\n        // as well indicating that they have members with coming-up expiration\n\n        List<Notification> notificationList = new ArrayList<>();\n        Map<String, List<MemberRole>> domainAdminMap = new HashMap<>();\n\n        for (DomainRoleMember roleMember : members.values()) {\n\n            // we're going to process the role member, update\n            // our domain admin map accordingly and return\n            // the details object that we need to send to the\n            // notification agent for processing\n\n            Map<String, String> details = processRoleReminder(domainAdminMap, roleMember, roleMemberDetailStringer);\n            Notification notification = notificationCommon.createNotification(\n                    roleMember.getMemberName(),\n                    details,\n                    principalNotificationToEmailConverter,\n                    notificationType);\n            if (notification != null) {\n                notificationList.add(notification);\n            }\n        }\n\n        // now we're going to send reminders to all the domain administrators\n\n        for (Map.Entry<String, List<MemberRole>> domainAdmin : domainAdminMap.entrySet()) {\n\n            Map<String, String> details = processMemberReminder(domainAdmin.getKey(), domainAdmin.getValue(), roleMemberDetailStringer);\n            Notification notification = notificationCommon.createNotification(\n                    ZMSUtils.roleResourceName(domainAdmin.getKey(), ADMIN_ROLE_NAME),\n                    details,\n                    domainAdminNotificationToEmailConverter,\n                    notificationType);\n            if (notification != null) {\n                notificationList.add(notification);\n            }\n        }\n\n        return notificationList;\n    }", "signature": "List<Notification> getNotificationDetails(Map<String, DomainRoleMember> members,\n                                                     NotificationToEmailConverter principalNotificationToEmailConverter,\n                                                     NotificationToEmailConverter domainAdminNotificationToEmailConverter,\n                                                     RoleMemberDetailStringer roleMemberDetailStringer,\n                                                     String notificationType)", "full_signature": "public List<Notification> getNotificationDetails(Map<String, DomainRoleMember> members,\n                                                     NotificationToEmailConverter principalNotificationToEmailConverter,\n                                                     NotificationToEmailConverter domainAdminNotificationToEmailConverter,\n                                                     RoleMemberDetailStringer roleMemberDetailStringer,\n                                                     String notificationType)", "class_method_signature": "RoleMemberNotificationCommon.getNotificationDetails(Map<String, DomainRoleMember> members,\n                                                     NotificationToEmailConverter principalNotificationToEmailConverter,\n                                                     NotificationToEmailConverter domainAdminNotificationToEmailConverter,\n                                                     RoleMemberDetailStringer roleMemberDetailStringer,\n                                                     String notificationType)", "testcase": false, "constructor": false, "invocations": ["values", "processRoleReminder", "createNotification", "getMemberName", "add", "entrySet", "processMemberReminder", "getKey", "getValue", "createNotification", "roleResourceName", "getKey", "add"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}