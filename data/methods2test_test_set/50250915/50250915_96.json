{"test_class": {"identifier": "JiraSCMListenerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public JenkinsRule j = new JenkinsRule();", "modifier": "@Rule\n    public", "type": "JenkinsRule", "declarator": "j = new JenkinsRule()", "var_name": "j"}], "file": "blueocean-jira/src/test/java/io/jenkins/blueocean/service/embedded/jira/JiraSCMListenerTest.java"}, "test_case": {"identifier": "uniqueIssueKeys", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void uniqueIssueKeys() throws Exception {\n        ChangeLogSet<ChangeLogSet.Entry> entries = build( \"TST-123\", \"TST-123\", \"TST-123\", \"TST-124\",\n                                                          \"TST-123\", \"TST-124\", \"TST-125\");\n        Collection<String> keys = JiraSCMListener.getIssueKeys( entries, JiraSite.DEFAULT_ISSUE_PATTERN );\n        Assert.assertEquals(3, keys.size());\n    }", "signature": "void uniqueIssueKeys()", "full_signature": "@Test public void uniqueIssueKeys()", "class_method_signature": "JiraSCMListenerTest.uniqueIssueKeys()", "testcase": true, "constructor": false, "invocations": ["build", "getIssueKeys", "assertEquals", "size"]}, "focal_class": {"identifier": "JiraSCMListener", "superclass": "extends SCMListener", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger( JiraSCMListener.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger( JiraSCMListener.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "onChangeLogParsed", "parameters": "(Run<?, ?> run, SCM scm, TaskListener listener, ChangeLogSet<?> changelog)", "modifiers": "@Override public", "return": "void", "signature": "void onChangeLogParsed(Run<?, ?> run, SCM scm, TaskListener listener, ChangeLogSet<?> changelog)", "full_signature": "@Override public void onChangeLogParsed(Run<?, ?> run, SCM scm, TaskListener listener, ChangeLogSet<?> changelog)", "class_method_signature": "JiraSCMListener.onChangeLogParsed(Run<?, ?> run, SCM scm, TaskListener listener, ChangeLogSet<?> changelog)", "testcase": false, "constructor": false}, {"identifier": "constructJQLQuery", "parameters": "( Collection<String> issueKeys)", "modifiers": "static", "return": "String", "signature": "String constructJQLQuery( Collection<String> issueKeys)", "full_signature": "static String constructJQLQuery( Collection<String> issueKeys)", "class_method_signature": "JiraSCMListener.constructJQLQuery( Collection<String> issueKeys)", "testcase": false, "constructor": false}, {"identifier": "getIssueKeys", "parameters": "(ChangeLogSet<?> changelog, Pattern issuePattern)", "modifiers": "static", "return": "Collection<String>", "signature": "Collection<String> getIssueKeys(ChangeLogSet<?> changelog, Pattern issuePattern)", "full_signature": "static Collection<String> getIssueKeys(ChangeLogSet<?> changelog, Pattern issuePattern)", "class_method_signature": "JiraSCMListener.getIssueKeys(ChangeLogSet<?> changelog, Pattern issuePattern)", "testcase": false, "constructor": false}], "file": "blueocean-jira/src/main/java/io/jenkins/blueocean/service/embedded/jira/JiraSCMListener.java"}, "focal_method": {"identifier": "getIssueKeys", "parameters": "(ChangeLogSet<?> changelog, Pattern issuePattern)", "modifiers": "static", "return": "Collection<String>", "body": "static Collection<String> getIssueKeys(ChangeLogSet<?> changelog, Pattern issuePattern) {\n        Set<String> issueKeys = new HashSet<>();\n        for (ChangeLogSet.Entry entry : changelog) {\n            issueKeys.addAll(BlueJiraIssue.findIssueKeys(entry.getMsg(), issuePattern));\n        }\n        return issueKeys;\n    }", "signature": "Collection<String> getIssueKeys(ChangeLogSet<?> changelog, Pattern issuePattern)", "full_signature": "static Collection<String> getIssueKeys(ChangeLogSet<?> changelog, Pattern issuePattern)", "class_method_signature": "JiraSCMListener.getIssueKeys(ChangeLogSet<?> changelog, Pattern issuePattern)", "testcase": false, "constructor": false, "invocations": ["addAll", "findIssueKeys", "getMsg"]}, "repository": {"repo_id": 50250915, "url": "https://github.com/jenkinsci/blueocean-plugin", "stars": 2605, "created": "1/23/2016 6:02:45 PM +00:00", "updates": "2020-01-25T17:58:46+00:00", "fork": "False", "license": "licensed"}}