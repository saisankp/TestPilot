{"test_class": {"identifier": "KiePMMLOperatorValueTest", "superclass": "", "interfaces": "", "fields": [], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/tuples/KiePMMLOperatorValueTest.java"}, "test_case": {"identifier": "getConstraintsAsString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getConstraintsAsString() {\n        OPERATOR operator = OPERATOR.LESS_THAN;\n        Object value = 234;\n        KiePMMLOperatorValue kiePMMLOperatorValue = new KiePMMLOperatorValue(operator, value);\n        String retrieved = kiePMMLOperatorValue.getConstraintsAsString();\n        String expected = String.format(VALUE_CONSTRAINT_PATTERN, operator.getOperator(), value);\n        assertEquals(expected, retrieved);\n    }", "signature": "void getConstraintsAsString()", "full_signature": "@Test public void getConstraintsAsString()", "class_method_signature": "KiePMMLOperatorValueTest.getConstraintsAsString()", "testcase": true, "constructor": false, "invocations": ["getConstraintsAsString", "format", "getOperator", "assertEquals"]}, "focal_class": {"identifier": "KiePMMLOperatorValue", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String VALUE_CONSTRAINT_PATTERN = \"value %s %s\";", "modifier": "public static final", "type": "String", "declarator": "VALUE_CONSTRAINT_PATTERN = \"value %s %s\"", "var_name": "VALUE_CONSTRAINT_PATTERN"}, {"original_string": "private final OPERATOR operator;", "modifier": "private final", "type": "OPERATOR", "declarator": "operator", "var_name": "operator"}, {"original_string": "private final Object value;", "modifier": "private final", "type": "Object", "declarator": "value", "var_name": "value"}, {"original_string": "private final String constraintsString;", "modifier": "private final", "type": "String", "declarator": "constraintsString", "var_name": "constraintsString"}], "methods": [{"identifier": "KiePMMLOperatorValue", "parameters": "(OPERATOR operator, Object value)", "modifiers": "public", "return": "", "signature": " KiePMMLOperatorValue(OPERATOR operator, Object value)", "full_signature": "public  KiePMMLOperatorValue(OPERATOR operator, Object value)", "class_method_signature": "KiePMMLOperatorValue.KiePMMLOperatorValue(OPERATOR operator, Object value)", "testcase": false, "constructor": true}, {"identifier": "getOperator", "parameters": "()", "modifiers": "public", "return": "OPERATOR", "signature": "OPERATOR getOperator()", "full_signature": "public OPERATOR getOperator()", "class_method_signature": "KiePMMLOperatorValue.getOperator()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object getValue()", "full_signature": "public Object getValue()", "class_method_signature": "KiePMMLOperatorValue.getValue()", "testcase": false, "constructor": false}, {"identifier": "getConstraintsAsString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getConstraintsAsString()", "full_signature": "public String getConstraintsAsString()", "class_method_signature": "KiePMMLOperatorValue.getConstraintsAsString()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "KiePMMLOperatorValue.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "KiePMMLOperatorValue.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "KiePMMLOperatorValue.hashCode()", "testcase": false, "constructor": false}, {"identifier": "buildConstraintsString", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String buildConstraintsString()", "full_signature": "protected String buildConstraintsString()", "class_method_signature": "KiePMMLOperatorValue.buildConstraintsString()", "testcase": false, "constructor": false}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/tuples/KiePMMLOperatorValue.java"}, "focal_method": {"identifier": "getConstraintsAsString", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getConstraintsAsString() {\n        return constraintsString;\n    }", "signature": "String getConstraintsAsString()", "full_signature": "public String getConstraintsAsString()", "class_method_signature": "KiePMMLOperatorValue.getConstraintsAsString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}