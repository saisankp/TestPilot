{"test_class": {"identifier": "StatItemTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private StatItem statItem;", "modifier": "private", "type": "StatItem", "declarator": "statItem", "var_name": "statItem"}], "file": "dubbo-rpc/dubbo-rpc-api/src/test/java/com/alibaba/dubbo/rpc/filter/tps/StatItemTest.java"}, "test_case": {"identifier": "testIsAllowable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsAllowable() throws Exception {\n        statItem = new StatItem(\"test\", 5, 1000L);\n        long lastResetTime = statItem.getLastResetTime();\n        assertEquals(true, statItem.isAllowable());\n        Thread.sleep(1100L);\n        assertEquals(true, statItem.isAllowable());\n        assertTrue(lastResetTime != statItem.getLastResetTime());\n        assertEquals(4, statItem.getToken());\n    }", "signature": "void testIsAllowable()", "full_signature": "@Test public void testIsAllowable()", "class_method_signature": "StatItemTest.testIsAllowable()", "testcase": true, "constructor": false, "invocations": ["getLastResetTime", "assertEquals", "isAllowable", "sleep", "assertEquals", "isAllowable", "assertTrue", "getLastResetTime", "assertEquals", "getToken"]}, "focal_class": {"identifier": "StatItem", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private long lastResetTime;", "modifier": "private", "type": "long", "declarator": "lastResetTime", "var_name": "lastResetTime"}, {"original_string": "private long interval;", "modifier": "private", "type": "long", "declarator": "interval", "var_name": "interval"}, {"original_string": "private AtomicInteger token;", "modifier": "private", "type": "AtomicInteger", "declarator": "token", "var_name": "token"}, {"original_string": "private int rate;", "modifier": "private", "type": "int", "declarator": "rate", "var_name": "rate"}], "methods": [{"identifier": "StatItem", "parameters": "(String name, int rate, long interval)", "modifiers": "", "return": "", "signature": " StatItem(String name, int rate, long interval)", "full_signature": "  StatItem(String name, int rate, long interval)", "class_method_signature": "StatItem.StatItem(String name, int rate, long interval)", "testcase": false, "constructor": true}, {"identifier": "isAllowable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAllowable()", "full_signature": "public boolean isAllowable()", "class_method_signature": "StatItem.isAllowable()", "testcase": false, "constructor": false}, {"identifier": "getLastResetTime", "parameters": "()", "modifiers": "", "return": "long", "signature": "long getLastResetTime()", "full_signature": " long getLastResetTime()", "class_method_signature": "StatItem.getLastResetTime()", "testcase": false, "constructor": false}, {"identifier": "getToken", "parameters": "()", "modifiers": "", "return": "int", "signature": "int getToken()", "full_signature": " int getToken()", "class_method_signature": "StatItem.getToken()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "StatItem.toString()", "testcase": false, "constructor": false}], "file": "dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/filter/tps/StatItem.java"}, "focal_method": {"identifier": "isAllowable", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isAllowable() {\n        long now = System.currentTimeMillis();\n        if (now > lastResetTime + interval) {\n            token.set(rate);\n            lastResetTime = now;\n        }\n\n        int value = token.get();\n        boolean flag = false;\n        while (value > 0 && !flag) {\n            flag = token.compareAndSet(value, value - 1);\n            value = token.get();\n        }\n\n        return flag;\n    }", "signature": "boolean isAllowable()", "full_signature": "public boolean isAllowable()", "class_method_signature": "StatItem.isAllowable()", "testcase": false, "constructor": false, "invocations": ["currentTimeMillis", "set", "get", "compareAndSet", "get"]}, "repository": {"repo_id": 189562861, "url": "https://github.com/smallFive55/dubbo-dubbo-2.6.6", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 1428, "license": "licensed"}}