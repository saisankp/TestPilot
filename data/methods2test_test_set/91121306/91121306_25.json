{"test_class": {"identifier": "MarshmallowNetworkObservingStrategyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final TestObserver<RxNetworkInfo> testObserver = new TestObserver<>();", "modifier": "private final", "type": "TestObserver<RxNetworkInfo>", "declarator": "testObserver = new TestObserver<>()", "var_name": "testObserver"}, {"original_string": "private final RxNetworkInfo defaultRxNetworkInfo = RxNetworkInfo.create();", "modifier": "private final", "type": "RxNetworkInfo", "declarator": "defaultRxNetworkInfo = RxNetworkInfo.create()", "var_name": "defaultRxNetworkInfo"}, {"original_string": "@Rule public MockitoRule rule = MockitoJUnit.rule();", "modifier": "@Rule public", "type": "MockitoRule", "declarator": "rule = MockitoJUnit.rule()", "var_name": "rule"}, {"original_string": "@Mock private PowerManager powerManager;", "modifier": "@Mock private", "type": "PowerManager", "declarator": "powerManager", "var_name": "powerManager"}, {"original_string": "private Context context;", "modifier": "private", "type": "Context", "declarator": "context", "var_name": "context"}, {"original_string": "private BaseNetworkObservingStrategy sut;", "modifier": "private", "type": "BaseNetworkObservingStrategy", "declarator": "sut", "var_name": "sut"}], "file": "rxnetwork/src/test/java/greyfox/rxnetwork/internal/strategy/network/impl/MarshmallowNetworkObservingStrategyTest.java"}, "test_case": {"identifier": "shouldRegisterWithDefaultNetworkRequest", "parameters": "()", "modifiers": "@Test() public", "return": "void", "body": "@Test()\n  public void shouldRegisterWithDefaultNetworkRequest() {\n    NetworkRequest defaultRequest = new NetworkRequest.Builder().build();\n    ConnectivityManager manager = setUpManagerWithNetworkRequest(null);\n\n    sut.observe().subscribeWith(testObserver).assertSubscribed();\n\n    verify(manager).registerNetworkCallback(eq(defaultRequest), any(NetworkCallback.class));\n  }", "signature": "void shouldRegisterWithDefaultNetworkRequest()", "full_signature": "@Test() public void shouldRegisterWithDefaultNetworkRequest()", "class_method_signature": "MarshmallowNetworkObservingStrategyTest.shouldRegisterWithDefaultNetworkRequest()", "testcase": true, "constructor": false, "invocations": ["build", "setUpManagerWithNetworkRequest", "assertSubscribed", "subscribeWith", "observe", "registerNetworkCallback", "verify", "eq", "any"]}, "focal_class": {"identifier": "MarshmallowNetworkObservingStrategy", "superclass": "extends Api21BaseNetworkObservingStrategy", "interfaces": "", "fields": [{"original_string": "private static final IntentFilter IDLE_MODE_CHANGED =\n      new IntentFilter(PowerManager.ACTION_DEVICE_IDLE_MODE_CHANGED);", "modifier": "private static final", "type": "IntentFilter", "declarator": "IDLE_MODE_CHANGED =\n      new IntentFilter(PowerManager.ACTION_DEVICE_IDLE_MODE_CHANGED)", "var_name": "IDLE_MODE_CHANGED"}, {"original_string": "@NonNull private final ConnectivityManager connectivityManager;", "modifier": "@NonNull private final", "type": "ConnectivityManager", "declarator": "connectivityManager", "var_name": "connectivityManager"}, {"original_string": "@NonNull private final PowerManager powerManager;", "modifier": "@NonNull private final", "type": "PowerManager", "declarator": "powerManager", "var_name": "powerManager"}, {"original_string": "@NonNull private final Context context;", "modifier": "@NonNull private final", "type": "Context", "declarator": "context", "var_name": "context"}, {"original_string": "@NonNull private final PublishSubject<RxNetworkInfo> networkChange = PublishSubject.create();", "modifier": "@NonNull private final", "type": "PublishSubject<RxNetworkInfo>", "declarator": "networkChange = PublishSubject.create()", "var_name": "networkChange"}, {"original_string": "private ConnectivityManager.NetworkCallback networkCallback;", "modifier": "private", "type": "ConnectivityManager.NetworkCallback", "declarator": "networkCallback", "var_name": "networkCallback"}, {"original_string": "private BroadcastReceiver idleModeReceiver;", "modifier": "private", "type": "BroadcastReceiver", "declarator": "idleModeReceiver", "var_name": "idleModeReceiver"}, {"original_string": "@Nullable private NetworkRequest networkRequest;", "modifier": "@Nullable private", "type": "NetworkRequest", "declarator": "networkRequest", "var_name": "networkRequest"}], "methods": [{"identifier": "MarshmallowNetworkObservingStrategy", "parameters": "(@NonNull Context context)", "modifiers": "public", "return": "", "signature": " MarshmallowNetworkObservingStrategy(@NonNull Context context)", "full_signature": "public  MarshmallowNetworkObservingStrategy(@NonNull Context context)", "class_method_signature": "MarshmallowNetworkObservingStrategy.MarshmallowNetworkObservingStrategy(@NonNull Context context)", "testcase": false, "constructor": true}, {"identifier": "MarshmallowNetworkObservingStrategy", "parameters": "(@NonNull Context context,\n      @NonNull NetworkRequest networkRequest)", "modifiers": "public", "return": "", "signature": " MarshmallowNetworkObservingStrategy(@NonNull Context context,\n      @NonNull NetworkRequest networkRequest)", "full_signature": "public  MarshmallowNetworkObservingStrategy(@NonNull Context context,\n      @NonNull NetworkRequest networkRequest)", "class_method_signature": "MarshmallowNetworkObservingStrategy.MarshmallowNetworkObservingStrategy(@NonNull Context context,\n      @NonNull NetworkRequest networkRequest)", "testcase": false, "constructor": true}, {"identifier": "observe", "parameters": "()", "modifiers": "@Override public", "return": "Observable<RxNetworkInfo>", "signature": "Observable<RxNetworkInfo> observe()", "full_signature": "@Override public Observable<RxNetworkInfo> observe()", "class_method_signature": "MarshmallowNetworkObservingStrategy.observe()", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "@Override", "return": "void", "signature": "void dispose()", "full_signature": "@Override void dispose()", "class_method_signature": "MarshmallowNetworkObservingStrategy.dispose()", "testcase": false, "constructor": false}, {"identifier": "logger", "parameters": "()", "modifiers": "@Override", "return": "Logger", "signature": "Logger logger()", "full_signature": "@Override Logger logger()", "class_method_signature": "MarshmallowNetworkObservingStrategy.logger()", "testcase": false, "constructor": false}, {"identifier": "unregisterIdleModeReceiver", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void unregisterIdleModeReceiver()", "full_signature": "private void unregisterIdleModeReceiver()", "class_method_signature": "MarshmallowNetworkObservingStrategy.unregisterIdleModeReceiver()", "testcase": false, "constructor": false}, {"identifier": "unregisterNetworkCallback", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void unregisterNetworkCallback()", "full_signature": "private void unregisterNetworkCallback()", "class_method_signature": "MarshmallowNetworkObservingStrategy.unregisterNetworkCallback()", "testcase": false, "constructor": false}, {"identifier": "connectivityManager", "parameters": "()", "modifiers": "@Override", "return": "ConnectivityManager", "signature": "ConnectivityManager connectivityManager()", "full_signature": "@Override ConnectivityManager connectivityManager()", "class_method_signature": "MarshmallowNetworkObservingStrategy.connectivityManager()", "testcase": false, "constructor": false}], "file": "rxnetwork/src/main/java/greyfox/rxnetwork/internal/strategy/network/impl/MarshmallowNetworkObservingStrategy.java"}, "focal_method": {"identifier": "observe", "parameters": "()", "modifiers": "@Override public", "return": "Observable<RxNetworkInfo>", "body": "@Override\n  public Observable<RxNetworkInfo> observe() {\n    Observable.create(new MarshmallowOnSubscribe()).subscribeWith(networkChange);\n    return networkChange.distinctUntilChanged().doOnDispose(new OnDisposeAction());\n  }", "signature": "Observable<RxNetworkInfo> observe()", "full_signature": "@Override public Observable<RxNetworkInfo> observe()", "class_method_signature": "MarshmallowNetworkObservingStrategy.observe()", "testcase": false, "constructor": false, "invocations": ["subscribeWith", "create", "doOnDispose", "distinctUntilChanged"]}, "repository": {"repo_id": 91121306, "url": "https://github.com/greyfoxit/RxNetwork", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 511, "license": "licensed"}}