{"test_class": {"identifier": "TableTest", "superclass": "", "interfaces": "", "fields": [], "file": "das-client/src/test/java/com/ppdai/das/client/sqlbuilder/TableTest.java"}, "test_case": {"identifier": "testAllColumns", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAllColumns() {\n        Table table = new Table(\"t\").as(\"ali\");\n        table.bigintColumn(\"aaa\");\n        table.charColumn(\"bbb\");\n        Column[] all = table.allColumns();\n        assertEquals(\"aaa\", all[0].getColumnName());\n        assertEquals(JDBCType.BIGINT, all[0].getType());\n        assertEquals(\"bbb\", all[1].getColumnName());\n        assertEquals(JDBCType.CHAR, all[1].getType());\n    }", "signature": "void testAllColumns()", "full_signature": "@Test public void testAllColumns()", "class_method_signature": "TableTest.testAllColumns()", "testcase": true, "constructor": false, "invocations": ["as", "bigintColumn", "charColumn", "allColumns", "assertEquals", "getColumnName", "assertEquals", "getType", "assertEquals", "getColumnName", "assertEquals", "getType"]}, "focal_class": {"identifier": "Table", "superclass": "", "interfaces": "implements TableReference, Segment", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String alias;", "modifier": "private", "type": "String", "declarator": "alias", "var_name": "alias"}, {"original_string": "private String shardId;", "modifier": "private", "type": "String", "declarator": "shardId", "var_name": "shardId"}, {"original_string": "private String shardValue;", "modifier": "private", "type": "String", "declarator": "shardValue", "var_name": "shardValue"}, {"original_string": "private Map<String, Column> columns = new LinkedHashMap<>();", "modifier": "private", "type": "Map<String, Column>", "declarator": "columns = new LinkedHashMap<>()", "var_name": "columns"}], "methods": [{"identifier": "Table", "parameters": "(String name)", "modifiers": "public", "return": "", "signature": " Table(String name)", "full_signature": "public  Table(String name)", "class_method_signature": "Table.Table(String name)", "testcase": false, "constructor": true}, {"identifier": "Table", "parameters": "(String name, String alias)", "modifiers": "public", "return": "", "signature": " Table(String name, String alias)", "full_signature": "public  Table(String name, String alias)", "class_method_signature": "Table.Table(String name, String alias)", "testcase": false, "constructor": true}, {"identifier": "inShard", "parameters": "(String shardId)", "modifiers": "public", "return": "Table", "signature": "Table inShard(String shardId)", "full_signature": "public Table inShard(String shardId)", "class_method_signature": "Table.inShard(String shardId)", "testcase": false, "constructor": false}, {"identifier": "shardBy", "parameters": "(String shardValue)", "modifiers": "public", "return": "Table", "signature": "Table shardBy(String shardValue)", "full_signature": "public Table shardBy(String shardValue)", "class_method_signature": "Table.shardBy(String shardValue)", "testcase": false, "constructor": false}, {"identifier": "as", "parameters": "(String alias)", "modifiers": "public", "return": "Table", "signature": "Table as(String alias)", "full_signature": "public Table as(String alias)", "class_method_signature": "Table.as(String alias)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "Table.getName()", "testcase": false, "constructor": false}, {"identifier": "getAlias", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAlias()", "full_signature": "public String getAlias()", "class_method_signature": "Table.getAlias()", "testcase": false, "constructor": false}, {"identifier": "getShardId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getShardId()", "full_signature": "@Override public String getShardId()", "class_method_signature": "Table.getShardId()", "testcase": false, "constructor": false}, {"identifier": "getShardValue", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getShardValue()", "full_signature": "@Override public String getShardValue()", "class_method_signature": "Table.getShardValue()", "testcase": false, "constructor": false}, {"identifier": "getReferName", "parameters": "(BuilderContext helper)", "modifiers": "public", "return": "String", "signature": "String getReferName(BuilderContext helper)", "full_signature": "public String getReferName(BuilderContext helper)", "class_method_signature": "Table.getReferName(BuilderContext helper)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(BuilderContext helper)", "modifiers": "@Override public", "return": "String", "signature": "String build(BuilderContext helper)", "full_signature": "@Override public String build(BuilderContext helper)", "class_method_signature": "Table.build(BuilderContext helper)", "testcase": false, "constructor": false}, {"identifier": "allColumns", "parameters": "()", "modifiers": "public", "return": "Column[]", "signature": "Column[] allColumns()", "full_signature": "public Column[] allColumns()", "class_method_signature": "Table.allColumns()", "testcase": false, "constructor": false}, {"identifier": "column", "parameters": "(String name, JDBCType type)", "modifiers": "public", "return": "Column", "signature": "Column column(String name, JDBCType type)", "full_signature": "public Column column(String name, JDBCType type)", "class_method_signature": "Table.column(String name, JDBCType type)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Table.toString()", "testcase": false, "constructor": false}, {"identifier": "bitColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column bitColumn(String name)", "full_signature": "public Column bitColumn(String name)", "class_method_signature": "Table.bitColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "tinyintColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column tinyintColumn(String name)", "full_signature": "public Column tinyintColumn(String name)", "class_method_signature": "Table.tinyintColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "smallintColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column smallintColumn(String name)", "full_signature": "public Column smallintColumn(String name)", "class_method_signature": "Table.smallintColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "integerColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column integerColumn(String name)", "full_signature": "public Column integerColumn(String name)", "class_method_signature": "Table.integerColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "bigintColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column bigintColumn(String name)", "full_signature": "public Column bigintColumn(String name)", "class_method_signature": "Table.bigintColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "floatColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column floatColumn(String name)", "full_signature": "public Column floatColumn(String name)", "class_method_signature": "Table.floatColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "realColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column realColumn(String name)", "full_signature": "public Column realColumn(String name)", "class_method_signature": "Table.realColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "doubleColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column doubleColumn(String name)", "full_signature": "public Column doubleColumn(String name)", "class_method_signature": "Table.doubleColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "numericColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column numericColumn(String name)", "full_signature": "public Column numericColumn(String name)", "class_method_signature": "Table.numericColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "decimalColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column decimalColumn(String name)", "full_signature": "public Column decimalColumn(String name)", "class_method_signature": "Table.decimalColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "charColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column charColumn(String name)", "full_signature": "public Column charColumn(String name)", "class_method_signature": "Table.charColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "varcharColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column varcharColumn(String name)", "full_signature": "public Column varcharColumn(String name)", "class_method_signature": "Table.varcharColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "longvarcharColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column longvarcharColumn(String name)", "full_signature": "public Column longvarcharColumn(String name)", "class_method_signature": "Table.longvarcharColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "dateColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column dateColumn(String name)", "full_signature": "public Column dateColumn(String name)", "class_method_signature": "Table.dateColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "timeColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column timeColumn(String name)", "full_signature": "public Column timeColumn(String name)", "class_method_signature": "Table.timeColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "timestampColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column timestampColumn(String name)", "full_signature": "public Column timestampColumn(String name)", "class_method_signature": "Table.timestampColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "binaryColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column binaryColumn(String name)", "full_signature": "public Column binaryColumn(String name)", "class_method_signature": "Table.binaryColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "varbinaryColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column varbinaryColumn(String name)", "full_signature": "public Column varbinaryColumn(String name)", "class_method_signature": "Table.varbinaryColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "longvarbinaryColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column longvarbinaryColumn(String name)", "full_signature": "public Column longvarbinaryColumn(String name)", "class_method_signature": "Table.longvarbinaryColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "nullColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column nullColumn(String name)", "full_signature": "public Column nullColumn(String name)", "class_method_signature": "Table.nullColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "blobColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column blobColumn(String name)", "full_signature": "public Column blobColumn(String name)", "class_method_signature": "Table.blobColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "clobColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column clobColumn(String name)", "full_signature": "public Column clobColumn(String name)", "class_method_signature": "Table.clobColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "booleanColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column booleanColumn(String name)", "full_signature": "public Column booleanColumn(String name)", "class_method_signature": "Table.booleanColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "ncharColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column ncharColumn(String name)", "full_signature": "public Column ncharColumn(String name)", "class_method_signature": "Table.ncharColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "nvarcharColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column nvarcharColumn(String name)", "full_signature": "public Column nvarcharColumn(String name)", "class_method_signature": "Table.nvarcharColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "longnvarcharColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column longnvarcharColumn(String name)", "full_signature": "public Column longnvarcharColumn(String name)", "class_method_signature": "Table.longnvarcharColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "nclobColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column nclobColumn(String name)", "full_signature": "public Column nclobColumn(String name)", "class_method_signature": "Table.nclobColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "sqlxmlColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column sqlxmlColumn(String name)", "full_signature": "public Column sqlxmlColumn(String name)", "class_method_signature": "Table.sqlxmlColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "timeWithTimezoneColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column timeWithTimezoneColumn(String name)", "full_signature": "public Column timeWithTimezoneColumn(String name)", "class_method_signature": "Table.timeWithTimezoneColumn(String name)", "testcase": false, "constructor": false}, {"identifier": "timestampWithTimezoneColumn", "parameters": "(String name)", "modifiers": "public", "return": "Column", "signature": "Column timestampWithTimezoneColumn(String name)", "full_signature": "public Column timestampWithTimezoneColumn(String name)", "class_method_signature": "Table.timestampWithTimezoneColumn(String name)", "testcase": false, "constructor": false}], "file": "das-client/src/main/java/com/ppdai/das/client/sqlbuilder/Table.java"}, "focal_method": {"identifier": "allColumns", "parameters": "()", "modifiers": "public", "return": "Column[]", "body": "public Column[] allColumns() {\n        return columns.values().toArray(new Column[]{});\n    }", "signature": "Column[] allColumns()", "full_signature": "public Column[] allColumns()", "class_method_signature": "Table.allColumns()", "testcase": false, "constructor": false, "invocations": ["toArray", "values"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}