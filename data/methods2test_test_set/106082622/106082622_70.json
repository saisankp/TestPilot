{"test_class": {"identifier": "UserFormTest", "superclass": "", "interfaces": "", "fields": [], "file": "kafka-webview-ui/src/test/java/org/sourcelab/kafka/webview/ui/controller/configuration/user/forms/UserFormTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToString() throws IllegalAccessException, NoSuchFieldException {\n        final String expectedSecret1 = \"MySuperSecretKey\";\n        final String expectedSecret2 = \"AnotherSecret\";\n\n        // Create app Properties instance\n        final UserForm userForm = new UserForm();\n\n        // Jump through hoops to set properties\n        final Field field1 = userForm.getClass().getDeclaredField(\"password\");\n        field1.setAccessible(true);\n        field1.set(userForm, expectedSecret1);\n\n        final Field field2 = userForm.getClass().getDeclaredField(\"password2\");\n        field2.setAccessible(true);\n        field2.set(userForm, expectedSecret1);\n\n        final String result = userForm.toString();\n        assertFalse(\"Should not contain our sensitive field\", result.contains(expectedSecret1));\n        assertFalse(\"Should not contain our sensitive field\", result.contains(expectedSecret2));\n    }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "UserFormTest.testToString()", "testcase": true, "constructor": false, "invocations": ["getDeclaredField", "getClass", "setAccessible", "set", "getDeclaredField", "getClass", "setAccessible", "set", "toString", "assertFalse", "contains", "assertFalse", "contains"]}, "focal_class": {"identifier": "UserForm", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Long id = null;", "modifier": "private", "type": "Long", "declarator": "id = null", "var_name": "id"}, {"original_string": "@NotNull(message = \"Please enter an Email address\")\n    @Size(min = 2, max = 255)\n    private String email;", "modifier": "@NotNull(message = \"Please enter an Email address\")\n    @Size(min = 2, max = 255)\n    private", "type": "String", "declarator": "email", "var_name": "email"}, {"original_string": "@NotNull(message = \"Please enter a name\")\n    @Size(min = 2, max = 64)\n    private String displayName;", "modifier": "@NotNull(message = \"Please enter a name\")\n    @Size(min = 2, max = 64)\n    private", "type": "String", "declarator": "displayName", "var_name": "displayName"}, {"original_string": "private String password;", "modifier": "private", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "private String password2;", "modifier": "private", "type": "String", "declarator": "password2", "var_name": "password2"}, {"original_string": "@NotNull(message = \"Select a user role\")\n    private UserRole userRole = UserRole.ROLE_USER;", "modifier": "@NotNull(message = \"Select a user role\")\n    private", "type": "UserRole", "declarator": "userRole = UserRole.ROLE_USER", "var_name": "userRole"}], "methods": [{"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long getId()", "full_signature": "public Long getId()", "class_method_signature": "UserForm.getId()", "testcase": false, "constructor": false}, {"identifier": "setId", "parameters": "(final Long id)", "modifiers": "public", "return": "void", "signature": "void setId(final Long id)", "full_signature": "public void setId(final Long id)", "class_method_signature": "UserForm.setId(final Long id)", "testcase": false, "constructor": false}, {"identifier": "getEmail", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEmail()", "full_signature": "public String getEmail()", "class_method_signature": "UserForm.getEmail()", "testcase": false, "constructor": false}, {"identifier": "setEmail", "parameters": "(final String email)", "modifiers": "public", "return": "void", "signature": "void setEmail(final String email)", "full_signature": "public void setEmail(final String email)", "class_method_signature": "UserForm.setEmail(final String email)", "testcase": false, "constructor": false}, {"identifier": "getDisplayName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDisplayName()", "full_signature": "public String getDisplayName()", "class_method_signature": "UserForm.getDisplayName()", "testcase": false, "constructor": false}, {"identifier": "setDisplayName", "parameters": "(final String displayName)", "modifiers": "public", "return": "void", "signature": "void setDisplayName(final String displayName)", "full_signature": "public void setDisplayName(final String displayName)", "class_method_signature": "UserForm.setDisplayName(final String displayName)", "testcase": false, "constructor": false}, {"identifier": "getPassword", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPassword()", "full_signature": "public String getPassword()", "class_method_signature": "UserForm.getPassword()", "testcase": false, "constructor": false}, {"identifier": "setPassword", "parameters": "(final String password)", "modifiers": "public", "return": "void", "signature": "void setPassword(final String password)", "full_signature": "public void setPassword(final String password)", "class_method_signature": "UserForm.setPassword(final String password)", "testcase": false, "constructor": false}, {"identifier": "getPassword2", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPassword2()", "full_signature": "public String getPassword2()", "class_method_signature": "UserForm.getPassword2()", "testcase": false, "constructor": false}, {"identifier": "setPassword2", "parameters": "(final String password2)", "modifiers": "public", "return": "void", "signature": "void setPassword2(final String password2)", "full_signature": "public void setPassword2(final String password2)", "class_method_signature": "UserForm.setPassword2(final String password2)", "testcase": false, "constructor": false}, {"identifier": "getUserRole", "parameters": "()", "modifiers": "public", "return": "UserRole", "signature": "UserRole getUserRole()", "full_signature": "public UserRole getUserRole()", "class_method_signature": "UserForm.getUserRole()", "testcase": false, "constructor": false}, {"identifier": "setUserRole", "parameters": "(final UserRole userRole)", "modifiers": "public", "return": "void", "signature": "void setUserRole(final UserRole userRole)", "full_signature": "public void setUserRole(final UserRole userRole)", "class_method_signature": "UserForm.setUserRole(final UserRole userRole)", "testcase": false, "constructor": false}, {"identifier": "exists", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean exists()", "full_signature": "public boolean exists()", "class_method_signature": "UserForm.exists()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "UserForm.toString()", "testcase": false, "constructor": false}], "file": "kafka-webview-ui/src/main/java/org/sourcelab/kafka/webview/ui/controller/configuration/user/forms/UserForm.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        return \"UserForm{\"\n            + \"id=\" + id\n            + \", email='\" + email + '\\''\n            + \", displayName='\" + displayName + '\\''\n            + \", password='XXXXX'\"\n            + \", password2='XXXXX'\"\n            + \", userRole=\" + userRole\n            + '}';\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "UserForm.toString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 106082622, "url": "https://github.com/SourceLabOrg/kafka-webview", "stars": 256, "created": "10/7/2017 8:28:45 AM +00:00", "updates": "2020-01-25T06:02:44+00:00", "fork": "False", "license": "licensed"}}