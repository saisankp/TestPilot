{"test_class": {"identifier": "SecurityGroupJoinDaoImplTest", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "@Mock (name = \"_resourceTagJoinDao\")\n    private ResourceTagJoinDao _resourceTagJoinDao;", "modifier": "@Mock (name = \"_resourceTagJoinDao\")\n    private", "type": "ResourceTagJoinDao", "declarator": "_resourceTagJoinDao", "var_name": "_resourceTagJoinDao"}, {"original_string": "@Mock (name = \"_securityGroupVMMapDao\")\n    private SecurityGroupVMMapDao _securityGroupVMMapDao;", "modifier": "@Mock (name = \"_securityGroupVMMapDao\")\n    private", "type": "SecurityGroupVMMapDao", "declarator": "_securityGroupVMMapDao", "var_name": "_securityGroupVMMapDao"}, {"original_string": "@Mock (name = \"_userVmDao\")\n    private UserVmDao _userVmDao;", "modifier": "@Mock (name = \"_userVmDao\")\n    private", "type": "UserVmDao", "declarator": "_userVmDao", "var_name": "_userVmDao"}, {"original_string": "@InjectMocks\n    private SecurityGroupJoinDaoImpl _securityGroupJoinDaoImpl;", "modifier": "@InjectMocks\n    private", "type": "SecurityGroupJoinDaoImpl", "declarator": "_securityGroupJoinDaoImpl", "var_name": "_securityGroupJoinDaoImpl"}, {"original_string": "@Mock\n    private Account caller;", "modifier": "@Mock\n    private", "type": "Account", "declarator": "caller", "var_name": "caller"}, {"original_string": "@Mock\n    private SecurityGroupJoinVO vsg;", "modifier": "@Mock\n    private", "type": "SecurityGroupJoinVO", "declarator": "vsg", "var_name": "vsg"}, {"original_string": "@Mock\n    private SecurityGroupVMMapVO securityGroupVMMapVOone;", "modifier": "@Mock\n    private", "type": "SecurityGroupVMMapVO", "declarator": "securityGroupVMMapVOone", "var_name": "securityGroupVMMapVOone"}, {"original_string": "@Mock\n    private SecurityGroupVMMapVO securityGroupVMMapVOtwo;", "modifier": "@Mock\n    private", "type": "SecurityGroupVMMapVO", "declarator": "securityGroupVMMapVOtwo", "var_name": "securityGroupVMMapVOtwo"}, {"original_string": "@Mock\n    private UserVmVO userVmVOone;", "modifier": "@Mock\n    private", "type": "UserVmVO", "declarator": "userVmVOone", "var_name": "userVmVOone"}, {"original_string": "@Mock\n    private UserVmVO userVmVOtwo;", "modifier": "@Mock\n    private", "type": "UserVmVO", "declarator": "userVmVOtwo", "var_name": "userVmVOtwo"}, {"original_string": "private final String uuidOne = \"463e022a-249d-4212-bdf4-726bc9047aa7\";", "modifier": "private final", "type": "String", "declarator": "uuidOne = \"463e022a-249d-4212-bdf4-726bc9047aa7\"", "var_name": "uuidOne"}, {"original_string": "private final String uuidTwo = \"d8714c5f-766f-4b14-bdf4-17571042b9c5\";", "modifier": "private final", "type": "String", "declarator": "uuidTwo = \"d8714c5f-766f-4b14-bdf4-17571042b9c5\"", "var_name": "uuidTwo"}], "file": "server/src/test/java/com/cloud/api/query/dao/SecurityGroupJoinDaoImplTest.java"}, "test_case": {"identifier": "virtualMachineCountTwoTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void virtualMachineCountTwoTest() throws NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n\n        when(vsg.getId()).thenReturn(3L);\n\n        SecurityGroupResponse securityGroupResponse = _securityGroupJoinDaoImpl.newSecurityGroupResponse(vsg, caller);\n\n        Field virtualMachineCount = securityGroupResponse.getClass().getDeclaredField(\"virtualMachineCount\");\n        virtualMachineCount.setAccessible(true);\n        assertEquals(2, ((Integer)virtualMachineCount.get(securityGroupResponse)).intValue());\n    }", "signature": "void virtualMachineCountTwoTest()", "full_signature": "@Test public void virtualMachineCountTwoTest()", "class_method_signature": "SecurityGroupJoinDaoImplTest.virtualMachineCountTwoTest()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getId", "newSecurityGroupResponse", "getDeclaredField", "getClass", "setAccessible", "assertEquals", "intValue", "get"]}, "focal_class": {"identifier": "SecurityGroupJoinDaoImpl", "superclass": "extends GenericDaoBase<SecurityGroupJoinVO, Long>", "interfaces": "implements SecurityGroupJoinDao", "fields": [{"original_string": "public static final Logger s_logger = LoggerFactory.getLogger(SecurityGroupJoinDaoImpl.class);", "modifier": "public static final", "type": "Logger", "declarator": "s_logger = LoggerFactory.getLogger(SecurityGroupJoinDaoImpl.class)", "var_name": "s_logger"}, {"original_string": "@Inject\n    private ConfigurationDao _configDao;", "modifier": "@Inject\n    private", "type": "ConfigurationDao", "declarator": "_configDao", "var_name": "_configDao"}, {"original_string": "@Inject\n    private ResourceTagJoinDao _resourceTagJoinDao;", "modifier": "@Inject\n    private", "type": "ResourceTagJoinDao", "declarator": "_resourceTagJoinDao", "var_name": "_resourceTagJoinDao"}, {"original_string": "@Inject\n    private SecurityGroupVMMapDao _securityGroupVMMapDao;", "modifier": "@Inject\n    private", "type": "SecurityGroupVMMapDao", "declarator": "_securityGroupVMMapDao", "var_name": "_securityGroupVMMapDao"}, {"original_string": "@Inject\n    private UserVmDao _userVmDao;", "modifier": "@Inject\n    private", "type": "UserVmDao", "declarator": "_userVmDao", "var_name": "_userVmDao"}, {"original_string": "private final SearchBuilder<SecurityGroupJoinVO> sgSearch;", "modifier": "private final", "type": "SearchBuilder<SecurityGroupJoinVO>", "declarator": "sgSearch", "var_name": "sgSearch"}, {"original_string": "private final SearchBuilder<SecurityGroupJoinVO> sgIdSearch;", "modifier": "private final", "type": "SearchBuilder<SecurityGroupJoinVO>", "declarator": "sgIdSearch", "var_name": "sgIdSearch"}], "methods": [{"identifier": "SecurityGroupJoinDaoImpl", "parameters": "()", "modifiers": "protected", "return": "", "signature": " SecurityGroupJoinDaoImpl()", "full_signature": "protected  SecurityGroupJoinDaoImpl()", "class_method_signature": "SecurityGroupJoinDaoImpl.SecurityGroupJoinDaoImpl()", "testcase": false, "constructor": true}, {"identifier": "newSecurityGroupResponse", "parameters": "(SecurityGroupJoinVO vsg, Account caller)", "modifiers": "@Override public", "return": "SecurityGroupResponse", "signature": "SecurityGroupResponse newSecurityGroupResponse(SecurityGroupJoinVO vsg, Account caller)", "full_signature": "@Override public SecurityGroupResponse newSecurityGroupResponse(SecurityGroupJoinVO vsg, Account caller)", "class_method_signature": "SecurityGroupJoinDaoImpl.newSecurityGroupResponse(SecurityGroupJoinVO vsg, Account caller)", "testcase": false, "constructor": false}, {"identifier": "setSecurityGroupResponse", "parameters": "(SecurityGroupResponse vsgData, SecurityGroupJoinVO vsg)", "modifiers": "@Override public", "return": "SecurityGroupResponse", "signature": "SecurityGroupResponse setSecurityGroupResponse(SecurityGroupResponse vsgData, SecurityGroupJoinVO vsg)", "full_signature": "@Override public SecurityGroupResponse setSecurityGroupResponse(SecurityGroupResponse vsgData, SecurityGroupJoinVO vsg)", "class_method_signature": "SecurityGroupJoinDaoImpl.setSecurityGroupResponse(SecurityGroupResponse vsgData, SecurityGroupJoinVO vsg)", "testcase": false, "constructor": false}, {"identifier": "newSecurityGroupView", "parameters": "(SecurityGroup sg)", "modifiers": "@Override public", "return": "List<SecurityGroupJoinVO>", "signature": "List<SecurityGroupJoinVO> newSecurityGroupView(SecurityGroup sg)", "full_signature": "@Override public List<SecurityGroupJoinVO> newSecurityGroupView(SecurityGroup sg)", "class_method_signature": "SecurityGroupJoinDaoImpl.newSecurityGroupView(SecurityGroup sg)", "testcase": false, "constructor": false}, {"identifier": "searchByIds", "parameters": "(Long... sgIds)", "modifiers": "@Override public", "return": "List<SecurityGroupJoinVO>", "signature": "List<SecurityGroupJoinVO> searchByIds(Long... sgIds)", "full_signature": "@Override public List<SecurityGroupJoinVO> searchByIds(Long... sgIds)", "class_method_signature": "SecurityGroupJoinDaoImpl.searchByIds(Long... sgIds)", "testcase": false, "constructor": false}], "file": "server/src/main/java/com/cloud/api/query/dao/SecurityGroupJoinDaoImpl.java"}, "focal_method": {"identifier": "newSecurityGroupResponse", "parameters": "(SecurityGroupJoinVO vsg, Account caller)", "modifiers": "@Override public", "return": "SecurityGroupResponse", "body": "@Override\n    public SecurityGroupResponse newSecurityGroupResponse(SecurityGroupJoinVO vsg, Account caller) {\n        SecurityGroupResponse sgResponse = new SecurityGroupResponse();\n        sgResponse.setId(vsg.getUuid());\n        sgResponse.setName(vsg.getName());\n        sgResponse.setDescription(vsg.getDescription());\n\n        ApiResponseHelper.populateOwner(sgResponse, vsg);\n\n        Long rule_id = vsg.getRuleId();\n        if (rule_id != null && rule_id.longValue() > 0) {\n            SecurityGroupRuleResponse ruleData = new SecurityGroupRuleResponse();\n            ruleData.setRuleId(vsg.getRuleUuid());\n            ruleData.setProtocol(vsg.getRuleProtocol());\n\n            if (\"icmp\".equalsIgnoreCase(vsg.getRuleProtocol())) {\n                ruleData.setIcmpType(vsg.getRuleStartPort());\n                ruleData.setIcmpCode(vsg.getRuleEndPort());\n            } else {\n                ruleData.setStartPort(vsg.getRuleStartPort());\n                ruleData.setEndPort(vsg.getRuleEndPort());\n            }\n\n            if (vsg.getRuleAllowedNetworkId() != null) {\n                List<SecurityGroupJoinVO> sgs = this.searchByIds(vsg.getRuleAllowedNetworkId());\n                if (sgs != null && sgs.size() > 0) {\n                    SecurityGroupJoinVO sg = sgs.get(0);\n                    ruleData.setSecurityGroupName(sg.getName());\n                    ruleData.setAccountName(sg.getAccountName());\n                }\n            } else {\n                ruleData.setCidr(vsg.getRuleAllowedSourceIpCidr());\n            }\n\n            // list the tags by rule uuid\n            List<ResourceTagJoinVO> tags = _resourceTagJoinDao.listBy(vsg.getRuleUuid(), ResourceTag.ResourceObjectType.SecurityGroupRule);\n            Set<ResourceTagResponse> tagResponse = new HashSet<ResourceTagResponse>();\n            for (ResourceTagJoinVO tag: tags) {\n                tagResponse.add(ApiDBUtils.newResourceTagResponse(tag, false));\n            }\n\n            // add the tags to the rule data\n            ruleData.setTags(tagResponse);\n\n            if (vsg.getRuleType() == SecurityRuleType.IngressRule) {\n                ruleData.setObjectName(\"ingressrule\");\n                sgResponse.addSecurityGroupIngressRule(ruleData);\n            } else {\n                ruleData.setObjectName(\"egressrule\");\n                sgResponse.addSecurityGroupEgressRule(ruleData);\n            }\n        }\n\n        List<SecurityGroupVMMapVO> securityGroupVmMap = _securityGroupVMMapDao.listBySecurityGroup(vsg.getId());\n        s_logger.debug(\"newSecurityGroupResponse() -> virtualmachine count: \" + securityGroupVmMap.size());\n        sgResponse.setVirtualMachineCount(securityGroupVmMap.size());\n\n        for(SecurityGroupVMMapVO securityGroupVMMapVO : securityGroupVmMap) {\n            final UserVmVO userVmVO = _userVmDao.findById(securityGroupVMMapVO.getInstanceId());\n            if (userVmVO != null) {\n                sgResponse.addVirtualMachineId(userVmVO.getUuid());\n            }\n        }\n\n        // update tag information\n        Long tag_id = vsg.getTagId();\n        if (tag_id != null && tag_id.longValue() > 0) {\n            ResourceTagJoinVO vtag = ApiDBUtils.findResourceTagViewById(tag_id);\n            if (vtag != null) {\n                sgResponse.addTag(ApiDBUtils.newResourceTagResponse(vtag, false));\n            }\n        }\n\n        // set async job\n        if (vsg.getJobId() != null) {\n            sgResponse.setJobId(vsg.getJobUuid());\n            sgResponse.setJobStatus(vsg.getJobStatus());\n        }\n\n        sgResponse.setObjectName(\"securitygroup\");\n\n        return sgResponse;\n    }", "signature": "SecurityGroupResponse newSecurityGroupResponse(SecurityGroupJoinVO vsg, Account caller)", "full_signature": "@Override public SecurityGroupResponse newSecurityGroupResponse(SecurityGroupJoinVO vsg, Account caller)", "class_method_signature": "SecurityGroupJoinDaoImpl.newSecurityGroupResponse(SecurityGroupJoinVO vsg, Account caller)", "testcase": false, "constructor": false, "invocations": ["setId", "getUuid", "setName", "getName", "setDescription", "getDescription", "populateOwner", "getRuleId", "longValue", "setRuleId", "getRuleUuid", "setProtocol", "getRuleProtocol", "equalsIgnoreCase", "getRuleProtocol", "setIcmpType", "getRuleStartPort", "setIcmpCode", "getRuleEndPort", "setStartPort", "getRuleStartPort", "setEndPort", "getRuleEndPort", "getRuleAllowedNetworkId", "searchByIds", "getRuleAllowedNetworkId", "size", "get", "setSecurityGroupName", "getName", "setAccountName", "getAccountName", "setCidr", "getRuleAllowedSourceIpCidr", "listBy", "getRuleUuid", "add", "newResourceTagResponse", "setTags", "getRuleType", "setObjectName", "addSecurityGroupIngressRule", "setObjectName", "addSecurityGroupEgressRule", "listBySecurityGroup", "getId", "debug", "size", "setVirtualMachineCount", "size", "findById", "getInstanceId", "addVirtualMachineId", "getUuid", "getTagId", "longValue", "findResourceTagViewById", "addTag", "newResourceTagResponse", "getJobId", "setJobId", "getJobUuid", "setJobStatus", "getJobStatus", "setObjectName"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}