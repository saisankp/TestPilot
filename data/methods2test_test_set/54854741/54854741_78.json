{"test_class": {"identifier": "EulaWebServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic final ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n\tpublic final", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private final SettingsService settingsService = mock(SettingsService.class);", "modifier": "private final", "type": "SettingsService", "declarator": "settingsService = mock(SettingsService.class)", "var_name": "settingsService"}, {"original_string": "private final EulaWebService service = new EulaWebService(settingsService);", "modifier": "private final", "type": "EulaWebService", "declarator": "service = new EulaWebService(settingsService)", "var_name": "service"}], "file": "services/src/test/java/com/greensopinion/finance/services/web/EulaWebServiceTest.java"}, "test_case": {"identifier": "putCurrentUserEulaStatusNotAccepted", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void putCurrentUserEulaStatusNotAccepted() {\n\t\tdoReturn(new Settings()).when(settingsService).retrieve();\n\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expectMessage(\"You must agree to the license in order to use Green Beans.\");\n\t\tservice.currentUserEulaStatus(new UserEulaStatus(false));\n\t}", "signature": "void putCurrentUserEulaStatusNotAccepted()", "full_signature": "@Test public void putCurrentUserEulaStatusNotAccepted()", "class_method_signature": "EulaWebServiceTest.putCurrentUserEulaStatusNotAccepted()", "testcase": true, "constructor": false, "invocations": ["retrieve", "when", "doReturn", "expect", "expectMessage", "currentUserEulaStatus"]}, "focal_class": {"identifier": "EulaWebService", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String BASE_PATH = \"/eula\";", "modifier": "static final", "type": "String", "declarator": "BASE_PATH = \"/eula\"", "var_name": "BASE_PATH"}, {"original_string": "static final String CURRENT_EULA = \"current\";", "modifier": "static final", "type": "String", "declarator": "CURRENT_EULA = \"current\"", "var_name": "CURRENT_EULA"}, {"original_string": "static final String CURRENT = \"user-agreements/current\";", "modifier": "static final", "type": "String", "declarator": "CURRENT = \"user-agreements/current\"", "var_name": "CURRENT"}, {"original_string": "private final SettingsService settingsService;", "modifier": "private final", "type": "SettingsService", "declarator": "settingsService", "var_name": "settingsService"}], "methods": [{"identifier": "EulaWebService", "parameters": "(SettingsService settingsService)", "modifiers": "@Inject", "return": "", "signature": " EulaWebService(SettingsService settingsService)", "full_signature": "@Inject  EulaWebService(SettingsService settingsService)", "class_method_signature": "EulaWebService.EulaWebService(SettingsService settingsService)", "testcase": false, "constructor": true}, {"identifier": "current", "parameters": "()", "modifiers": "@Path(CURRENT_EULA) @GET public", "return": "Eula", "signature": "Eula current()", "full_signature": "@Path(CURRENT_EULA) @GET public Eula current()", "class_method_signature": "EulaWebService.current()", "testcase": false, "constructor": false}, {"identifier": "currentUserEulaStatus", "parameters": "()", "modifiers": "@Path(CURRENT) @GET public", "return": "UserEulaStatus", "signature": "UserEulaStatus currentUserEulaStatus()", "full_signature": "@Path(CURRENT) @GET public UserEulaStatus currentUserEulaStatus()", "class_method_signature": "EulaWebService.currentUserEulaStatus()", "testcase": false, "constructor": false}, {"identifier": "currentUserEulaStatus", "parameters": "(UserEulaStatus newStatus)", "modifiers": "@Path(CURRENT) @PUT public", "return": "void", "signature": "void currentUserEulaStatus(UserEulaStatus newStatus)", "full_signature": "@Path(CURRENT) @PUT public void currentUserEulaStatus(UserEulaStatus newStatus)", "class_method_signature": "EulaWebService.currentUserEulaStatus(UserEulaStatus newStatus)", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/greensopinion/finance/services/web/EulaWebService.java"}, "focal_method": {"identifier": "currentUserEulaStatus", "parameters": "()", "modifiers": "@Path(CURRENT) @GET public", "return": "UserEulaStatus", "body": "@Path(CURRENT)\n\t@GET\n\tpublic UserEulaStatus currentUserEulaStatus() {\n\t\treturn new UserEulaStatus(settingsService.retrieve().userHasAgreedToLicense());\n\t}", "signature": "UserEulaStatus currentUserEulaStatus()", "full_signature": "@Path(CURRENT) @GET public UserEulaStatus currentUserEulaStatus()", "class_method_signature": "EulaWebService.currentUserEulaStatus()", "testcase": false, "constructor": false, "invocations": ["userHasAgreedToLicense", "retrieve"]}, "repository": {"repo_id": 54854741, "url": "https://github.com/greensopinion/greenbeans", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 30, "size": 1684, "license": "licensed"}}