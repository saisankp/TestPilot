{"test_class": {"identifier": "RenameDataSetsWithFolderPathTest", "superclass": "extends Base_1_2_0_PE_Test", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private RenameDataSetsWithFolderPath task;", "modifier": "@Autowired\n    private", "type": "RenameDataSetsWithFolderPath", "declarator": "task", "var_name": "task"}, {"original_string": "@Autowired\n    private DataSetMetadataRepository repository;", "modifier": "@Autowired\n    private", "type": "DataSetMetadataRepository", "declarator": "repository", "var_name": "repository"}], "file": "dataprep-upgrade/src/test/java/org/talend/dataprep/upgrade/to_1_2_0_PE/RenameDataSetsWithFolderPathTest.java"}, "test_case": {"identifier": "shouldRenameDataSets", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldRenameDataSets() throws Exception {\n\n        // given\n        List<String> expected = new ArrayList<>();\n        expected.add(\"cars\");\n        expected.add(\"us_states - my lookup\");\n        expected.add(\"communes_france - personnal/confidential\");\n        expected.add(\"Emails Reference - Quick Examples and Tutorials/Lookup\");\n        expected.add(\"Customer Contact Data - Quick Examples and Tutorials\");\n        expected.add(\"Business Unit Regions With States - Quick Examples and Tutorials/Lookup\");\n        expected.add(\"HRMS Export - Quick Examples and Tutorials\");\n        expected.add(\"nba_franchises\");\n        expected.add(\"Marketing Leads - Quick Examples and Tutorials\");\n        expected.add(\"CRM Export - Quick Examples and Tutorials\");\n        expected.add(\"Customer Marketing Leads - Quick Examples and Tutorials\");\n\n        // when\n        task.run();\n\n        // then\n        final Stream<DataSetMetadata> list = repository.list();\n        final List<String> names = list.map(DataSetMetadata::getName).collect(toList());\n        assertTrue(names.containsAll(expected));\n    }", "signature": "void shouldRenameDataSets()", "full_signature": "@Test public void shouldRenameDataSets()", "class_method_signature": "RenameDataSetsWithFolderPathTest.shouldRenameDataSets()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "run", "list", "collect", "map", "toList", "assertTrue", "containsAll"]}, "focal_class": {"identifier": "RenameDataSetsWithFolderPath", "superclass": "", "interfaces": "implements BaseUpgradeTaskTo_1_2_0_PE", "fields": [{"original_string": "private static final Logger LOG = getLogger(RenameDataSetsWithFolderPath.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = getLogger(RenameDataSetsWithFolderPath.class)", "var_name": "LOG"}, {"original_string": "@Autowired\n    private DataSetMetadataRepository dataSetMetadataRepository;", "modifier": "@Autowired\n    private", "type": "DataSetMetadataRepository", "declarator": "dataSetMetadataRepository", "var_name": "dataSetMetadataRepository"}, {"original_string": "@Autowired\n    private FolderRepository folderRepository;", "modifier": "@Autowired\n    private", "type": "FolderRepository", "declarator": "folderRepository", "var_name": "folderRepository"}], "methods": [{"identifier": "getOrder", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getOrder()", "full_signature": "@Override public int getOrder()", "class_method_signature": "RenameDataSetsWithFolderPath.getOrder()", "testcase": false, "constructor": false}, {"identifier": "getTarget", "parameters": "()", "modifiers": "@Override public", "return": "target", "signature": "target getTarget()", "full_signature": "@Override public target getTarget()", "class_method_signature": "RenameDataSetsWithFolderPath.getTarget()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "RenameDataSetsWithFolderPath.run()", "testcase": false, "constructor": false}], "file": "dataprep-upgrade/src/main/java/org/talend/dataprep/upgrade/to_1_2_0_PE/RenameDataSetsWithFolderPath.java"}, "focal_method": {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void run() {\n\n        final Stream<DataSetMetadata> datasets = dataSetMetadataRepository.list();\n        datasets.forEach(dataset -> {\n            final Folder folder = folderRepository.locateEntry(dataset.getId(), FolderContentType.DATASET);\n            // skip home folder\n            if (folder != null && !StringUtils.equals(\"/\", folder.getPath())) {\n                String newName = dataset.getName() + \" - \" + StringUtils.strip(folder.getPath(), \"/\");\n                dataset.setName(newName);\n                dataSetMetadataRepository.save(dataset);\n                LOG.debug(\"dataset #{} renamed to {}\", dataset.getId(), newName);\n            } else {\n                LOG.debug(\"dataset #{} not renamed since it's in the user home folder\", dataset.getId());\n            }\n        });\n    }", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "RenameDataSetsWithFolderPath.run()", "testcase": false, "constructor": false, "invocations": ["list", "forEach", "locateEntry", "getId", "equals", "getPath", "getName", "strip", "getPath", "setName", "save", "debug", "getId", "debug", "getId"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}