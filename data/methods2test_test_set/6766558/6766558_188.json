{"test_class": {"identifier": "HystrixThreadEventStreamTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "HystrixCommandKey commandKey;", "modifier": "", "type": "HystrixCommandKey", "declarator": "commandKey", "var_name": "commandKey"}, {"original_string": "HystrixThreadPoolKey threadPoolKey;", "modifier": "", "type": "HystrixThreadPoolKey", "declarator": "threadPoolKey", "var_name": "threadPoolKey"}, {"original_string": "HystrixThreadEventStream writeToStream;", "modifier": "", "type": "HystrixThreadEventStream", "declarator": "writeToStream", "var_name": "writeToStream"}, {"original_string": "HystrixCommandCompletionStream readCommandStream;", "modifier": "", "type": "HystrixCommandCompletionStream", "declarator": "readCommandStream", "var_name": "readCommandStream"}, {"original_string": "HystrixThreadPoolCompletionStream readThreadPoolStream;", "modifier": "", "type": "HystrixThreadPoolCompletionStream", "declarator": "readThreadPoolStream", "var_name": "readThreadPoolStream"}], "file": "hystrix-core/src/test/java/com/netflix/hystrix/metric/HystrixThreadEventStreamTest.java"}, "test_case": {"identifier": "testSemaphoreIsolatedFailure", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSemaphoreIsolatedFailure() throws Exception {\n        CountDownLatch commandLatch = new CountDownLatch(1);\n        CountDownLatch threadPoolLatch = new CountDownLatch(1);\n\n        Subscriber<HystrixCommandCompletion> commandSubscriber = getLatchedSubscriber(commandLatch);\n        readCommandStream.observe().take(1).subscribe(commandSubscriber);\n\n        Subscriber<HystrixCommandCompletion> threadPoolSubscriber = getLatchedSubscriber(threadPoolLatch);\n        readThreadPoolStream.observe().take(1).subscribe(threadPoolSubscriber);\n\n        ExecutionResult result = ExecutionResult.from(HystrixEventType.FAILURE);\n        writeToStream.executionDone(result, commandKey, threadPoolKey);\n\n        assertTrue(commandLatch.await(1000, TimeUnit.MILLISECONDS));\n        assertFalse(threadPoolLatch.await(1000, TimeUnit.MILLISECONDS));\n    }", "signature": "void testSemaphoreIsolatedFailure()", "full_signature": "@Test public void testSemaphoreIsolatedFailure()", "class_method_signature": "HystrixThreadEventStreamTest.testSemaphoreIsolatedFailure()", "testcase": true, "constructor": false, "invocations": ["getLatchedSubscriber", "subscribe", "take", "observe", "getLatchedSubscriber", "subscribe", "take", "observe", "from", "executionDone", "assertTrue", "await", "assertFalse", "await"]}, "focal_class": {"identifier": "HystrixThreadEventStream", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final long threadId;", "modifier": "private final", "type": "long", "declarator": "threadId", "var_name": "threadId"}, {"original_string": "private final String threadName;", "modifier": "private final", "type": "String", "declarator": "threadName", "var_name": "threadName"}, {"original_string": "private final Subject<HystrixCommandExecutionStarted, HystrixCommandExecutionStarted> writeOnlyCommandStartSubject;", "modifier": "private final", "type": "Subject<HystrixCommandExecutionStarted, HystrixCommandExecutionStarted>", "declarator": "writeOnlyCommandStartSubject", "var_name": "writeOnlyCommandStartSubject"}, {"original_string": "private final Subject<HystrixCommandCompletion, HystrixCommandCompletion> writeOnlyCommandCompletionSubject;", "modifier": "private final", "type": "Subject<HystrixCommandCompletion, HystrixCommandCompletion>", "declarator": "writeOnlyCommandCompletionSubject", "var_name": "writeOnlyCommandCompletionSubject"}, {"original_string": "private final Subject<HystrixCollapserEvent, HystrixCollapserEvent> writeOnlyCollapserSubject;", "modifier": "private final", "type": "Subject<HystrixCollapserEvent, HystrixCollapserEvent>", "declarator": "writeOnlyCollapserSubject", "var_name": "writeOnlyCollapserSubject"}, {"original_string": "private static final ThreadLocal<HystrixThreadEventStream> threadLocalStreams = new ThreadLocal<HystrixThreadEventStream>() {\n        @Override\n        protected HystrixThreadEventStream initialValue() {\n            return new HystrixThreadEventStream(Thread.currentThread());\n        }\n    };", "modifier": "private static final", "type": "ThreadLocal<HystrixThreadEventStream>", "declarator": "threadLocalStreams = new ThreadLocal<HystrixThreadEventStream>() {\n        @Override\n        protected HystrixThreadEventStream initialValue() {\n            return new HystrixThreadEventStream(Thread.currentThread());\n        }\n    }", "var_name": "threadLocalStreams"}, {"original_string": "private static final Action1<HystrixCommandExecutionStarted> writeCommandStartsToShardedStreams = new Action1<HystrixCommandExecutionStarted>() {\n        @Override\n        public void call(HystrixCommandExecutionStarted event) {\n            HystrixCommandStartStream commandStartStream = HystrixCommandStartStream.getInstance(event.getCommandKey());\n            commandStartStream.write(event);\n\n            if (event.isExecutedInThread()) {\n                HystrixThreadPoolStartStream threadPoolStartStream = HystrixThreadPoolStartStream.getInstance(event.getThreadPoolKey());\n                threadPoolStartStream.write(event);\n            }\n        }\n    };", "modifier": "private static final", "type": "Action1<HystrixCommandExecutionStarted>", "declarator": "writeCommandStartsToShardedStreams = new Action1<HystrixCommandExecutionStarted>() {\n        @Override\n        public void call(HystrixCommandExecutionStarted event) {\n            HystrixCommandStartStream commandStartStream = HystrixCommandStartStream.getInstance(event.getCommandKey());\n            commandStartStream.write(event);\n\n            if (event.isExecutedInThread()) {\n                HystrixThreadPoolStartStream threadPoolStartStream = HystrixThreadPoolStartStream.getInstance(event.getThreadPoolKey());\n                threadPoolStartStream.write(event);\n            }\n        }\n    }", "var_name": "writeCommandStartsToShardedStreams"}, {"original_string": "private static final Action1<HystrixCommandCompletion> writeCommandCompletionsToShardedStreams = new Action1<HystrixCommandCompletion>() {\n        @Override\n        public void call(HystrixCommandCompletion commandCompletion) {\n            HystrixCommandCompletionStream commandStream = HystrixCommandCompletionStream.getInstance(commandCompletion.getCommandKey());\n            commandStream.write(commandCompletion);\n\n            if (commandCompletion.isExecutedInThread() || commandCompletion.isResponseThreadPoolRejected()) {\n                HystrixThreadPoolCompletionStream threadPoolStream = HystrixThreadPoolCompletionStream.getInstance(commandCompletion.getThreadPoolKey());\n                threadPoolStream.write(commandCompletion);\n            }\n        }\n    };", "modifier": "private static final", "type": "Action1<HystrixCommandCompletion>", "declarator": "writeCommandCompletionsToShardedStreams = new Action1<HystrixCommandCompletion>() {\n        @Override\n        public void call(HystrixCommandCompletion commandCompletion) {\n            HystrixCommandCompletionStream commandStream = HystrixCommandCompletionStream.getInstance(commandCompletion.getCommandKey());\n            commandStream.write(commandCompletion);\n\n            if (commandCompletion.isExecutedInThread() || commandCompletion.isResponseThreadPoolRejected()) {\n                HystrixThreadPoolCompletionStream threadPoolStream = HystrixThreadPoolCompletionStream.getInstance(commandCompletion.getThreadPoolKey());\n                threadPoolStream.write(commandCompletion);\n            }\n        }\n    }", "var_name": "writeCommandCompletionsToShardedStreams"}, {"original_string": "private static final Action1<HystrixCollapserEvent> writeCollapserExecutionsToShardedStreams = new Action1<HystrixCollapserEvent>() {\n        @Override\n        public void call(HystrixCollapserEvent collapserEvent) {\n            HystrixCollapserEventStream collapserStream = HystrixCollapserEventStream.getInstance(collapserEvent.getCollapserKey());\n            collapserStream.write(collapserEvent);\n        }\n    };", "modifier": "private static final", "type": "Action1<HystrixCollapserEvent>", "declarator": "writeCollapserExecutionsToShardedStreams = new Action1<HystrixCollapserEvent>() {\n        @Override\n        public void call(HystrixCollapserEvent collapserEvent) {\n            HystrixCollapserEventStream collapserStream = HystrixCollapserEventStream.getInstance(collapserEvent.getCollapserKey());\n            collapserStream.write(collapserEvent);\n        }\n    }", "var_name": "writeCollapserExecutionsToShardedStreams"}], "methods": [{"identifier": "HystrixThreadEventStream", "parameters": "(Thread thread)", "modifiers": "", "return": "", "signature": " HystrixThreadEventStream(Thread thread)", "full_signature": "  HystrixThreadEventStream(Thread thread)", "class_method_signature": "HystrixThreadEventStream.HystrixThreadEventStream(Thread thread)", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "HystrixThreadEventStream", "signature": "HystrixThreadEventStream getInstance()", "full_signature": "public static HystrixThreadEventStream getInstance()", "class_method_signature": "HystrixThreadEventStream.getInstance()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void shutdown()", "full_signature": "public void shutdown()", "class_method_signature": "HystrixThreadEventStream.shutdown()", "testcase": false, "constructor": false}, {"identifier": "commandExecutionStarted", "parameters": "(HystrixCommandKey commandKey, HystrixThreadPoolKey threadPoolKey,\n                                        HystrixCommandProperties.ExecutionIsolationStrategy isolationStrategy, int currentConcurrency)", "modifiers": "public", "return": "void", "signature": "void commandExecutionStarted(HystrixCommandKey commandKey, HystrixThreadPoolKey threadPoolKey,\n                                        HystrixCommandProperties.ExecutionIsolationStrategy isolationStrategy, int currentConcurrency)", "full_signature": "public void commandExecutionStarted(HystrixCommandKey commandKey, HystrixThreadPoolKey threadPoolKey,\n                                        HystrixCommandProperties.ExecutionIsolationStrategy isolationStrategy, int currentConcurrency)", "class_method_signature": "HystrixThreadEventStream.commandExecutionStarted(HystrixCommandKey commandKey, HystrixThreadPoolKey threadPoolKey,\n                                        HystrixCommandProperties.ExecutionIsolationStrategy isolationStrategy, int currentConcurrency)", "testcase": false, "constructor": false}, {"identifier": "executionDone", "parameters": "(ExecutionResult executionResult, HystrixCommandKey commandKey, HystrixThreadPoolKey threadPoolKey)", "modifiers": "public", "return": "void", "signature": "void executionDone(ExecutionResult executionResult, HystrixCommandKey commandKey, HystrixThreadPoolKey threadPoolKey)", "full_signature": "public void executionDone(ExecutionResult executionResult, HystrixCommandKey commandKey, HystrixThreadPoolKey threadPoolKey)", "class_method_signature": "HystrixThreadEventStream.executionDone(ExecutionResult executionResult, HystrixCommandKey commandKey, HystrixThreadPoolKey threadPoolKey)", "testcase": false, "constructor": false}, {"identifier": "collapserResponseFromCache", "parameters": "(HystrixCollapserKey collapserKey)", "modifiers": "public", "return": "void", "signature": "void collapserResponseFromCache(HystrixCollapserKey collapserKey)", "full_signature": "public void collapserResponseFromCache(HystrixCollapserKey collapserKey)", "class_method_signature": "HystrixThreadEventStream.collapserResponseFromCache(HystrixCollapserKey collapserKey)", "testcase": false, "constructor": false}, {"identifier": "collapserBatchExecuted", "parameters": "(HystrixCollapserKey collapserKey, int batchSize)", "modifiers": "public", "return": "void", "signature": "void collapserBatchExecuted(HystrixCollapserKey collapserKey, int batchSize)", "full_signature": "public void collapserBatchExecuted(HystrixCollapserKey collapserKey, int batchSize)", "class_method_signature": "HystrixThreadEventStream.collapserBatchExecuted(HystrixCollapserKey collapserKey, int batchSize)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "HystrixThreadEventStream.toString()", "testcase": false, "constructor": false}], "file": "hystrix-core/src/main/java/com/netflix/hystrix/metric/HystrixThreadEventStream.java"}, "focal_method": {"identifier": "executionDone", "parameters": "(ExecutionResult executionResult, HystrixCommandKey commandKey, HystrixThreadPoolKey threadPoolKey)", "modifiers": "public", "return": "void", "body": "public void executionDone(ExecutionResult executionResult, HystrixCommandKey commandKey, HystrixThreadPoolKey threadPoolKey) {\n        HystrixCommandCompletion event = HystrixCommandCompletion.from(executionResult, commandKey, threadPoolKey);\n        writeOnlyCommandCompletionSubject.onNext(event);\n    }", "signature": "void executionDone(ExecutionResult executionResult, HystrixCommandKey commandKey, HystrixThreadPoolKey threadPoolKey)", "full_signature": "public void executionDone(ExecutionResult executionResult, HystrixCommandKey commandKey, HystrixThreadPoolKey threadPoolKey)", "class_method_signature": "HystrixThreadEventStream.executionDone(ExecutionResult executionResult, HystrixCommandKey commandKey, HystrixThreadPoolKey threadPoolKey)", "testcase": false, "constructor": false, "invocations": ["from", "onNext"]}, "repository": {"repo_id": 6766558, "url": "https://github.com/Netflix/Hystrix", "stars": 19028, "created": "11/19/2012 8:14:46 PM +00:00", "updates": "2020-01-27T17:55:28+00:00", "fork": "False", "license": "licensed"}}