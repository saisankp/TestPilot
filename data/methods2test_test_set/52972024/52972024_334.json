{"test_class": {"identifier": "ChainStorageTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [{"original_string": "private IResolveDependencyStrategy receiverChainStrategyMock;", "modifier": "private", "type": "IResolveDependencyStrategy", "declarator": "receiverChainStrategyMock", "var_name": "receiverChainStrategyMock"}, {"original_string": "private IResolveDependencyStrategy chainStateStrategyMock;", "modifier": "private", "type": "IResolveDependencyStrategy", "declarator": "chainStateStrategyMock", "var_name": "chainStateStrategyMock"}, {"original_string": "private IRouter routerMock;", "modifier": "private", "type": "IRouter", "declarator": "routerMock", "var_name": "routerMock"}, {"original_string": "private IChainState[] stateMocks;", "modifier": "private", "type": "IChainState[]", "declarator": "stateMocks", "var_name": "stateMocks"}, {"original_string": "private IReceiverChain[] chianMocks;", "modifier": "private", "type": "IReceiverChain[]", "declarator": "chianMocks", "var_name": "chianMocks"}, {"original_string": "private IObject[] descs;", "modifier": "private", "type": "IObject[]", "declarator": "descs", "var_name": "descs"}], "file": "CoreFeatures/MessageProcessing/ChainStorage/src/test/java/info/smart_tools/smartactors/message_processing/chain_storage/ChainStorageTest.java"}, "test_case": {"identifier": "Should_throw_When_chainIsNotFound", "parameters": "()", "modifiers": "@Test(expected = ChainNotFoundException.class) public", "return": "void", "body": "@Test(expected = ChainNotFoundException.class)\n    public void Should_throw_When_chainIsNotFound()\n            throws Exception {\n        Map mapMock = mock(Map.class);\n        IRouter routerMock = mock(IRouter.class);\n\n        IChainStorage storage = new ChainStorage(mapMock, routerMock);\n\n        storage.resolve(mock(Object.class));\n    }", "signature": "void Should_throw_When_chainIsNotFound()", "full_signature": "@Test(expected = ChainNotFoundException.class) public void Should_throw_When_chainIsNotFound()", "class_method_signature": "ChainStorageTest.Should_throw_When_chainIsNotFound()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "resolve", "mock"]}, "focal_class": {"identifier": "ChainStorage", "superclass": "", "interfaces": "implements IChainStorage", "fields": [{"original_string": "private final Map<Object, IChainState> chainStates;", "modifier": "private final", "type": "Map<Object, IChainState>", "declarator": "chainStates", "var_name": "chainStates"}, {"original_string": "private final IRouter router;", "modifier": "private final", "type": "IRouter", "declarator": "router", "var_name": "router"}, {"original_string": "private final Object modificationLock = new Object();", "modifier": "private final", "type": "Object", "declarator": "modificationLock = new Object()", "var_name": "modificationLock"}], "methods": [{"identifier": "ChainStorage", "parameters": "(final Map<Object, IChainState> chainStates, final IRouter router)", "modifiers": "public", "return": "", "signature": " ChainStorage(final Map<Object, IChainState> chainStates, final IRouter router)", "full_signature": "public  ChainStorage(final Map<Object, IChainState> chainStates, final IRouter router)", "class_method_signature": "ChainStorage.ChainStorage(final Map<Object, IChainState> chainStates, final IRouter router)", "testcase": false, "constructor": true}, {"identifier": "resolveState", "parameters": "(final Object chainId)", "modifiers": "private", "return": "IChainState", "signature": "IChainState resolveState(final Object chainId)", "full_signature": "private IChainState resolveState(final Object chainId)", "class_method_signature": "ChainStorage.resolveState(final Object chainId)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(final Object chainId, final IObject description)", "modifiers": "@Override public", "return": "void", "signature": "void register(final Object chainId, final IObject description)", "full_signature": "@Override public void register(final Object chainId, final IObject description)", "class_method_signature": "ChainStorage.register(final Object chainId, final IObject description)", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(final Object chainId)", "modifiers": "@Override public", "return": "IReceiverChain", "signature": "IReceiverChain resolve(final Object chainId)", "full_signature": "@Override public IReceiverChain resolve(final Object chainId)", "class_method_signature": "ChainStorage.resolve(final Object chainId)", "testcase": false, "constructor": false}, {"identifier": "enumerate", "parameters": "()", "modifiers": "@Override public", "return": "List<Object>", "signature": "List<Object> enumerate()", "full_signature": "@Override public List<Object> enumerate()", "class_method_signature": "ChainStorage.enumerate()", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(final Object chainId, final IObject modification)", "modifiers": "@Override public", "return": "Object", "signature": "Object update(final Object chainId, final IObject modification)", "full_signature": "@Override public Object update(final Object chainId, final IObject modification)", "class_method_signature": "ChainStorage.update(final Object chainId, final IObject modification)", "testcase": false, "constructor": false}, {"identifier": "rollback", "parameters": "(final Object chainId, final Object modId)", "modifiers": "@Override public", "return": "void", "signature": "void rollback(final Object chainId, final Object modId)", "full_signature": "@Override public void rollback(final Object chainId, final Object modId)", "class_method_signature": "ChainStorage.rollback(final Object chainId, final Object modId)", "testcase": false, "constructor": false}], "file": "CoreFeatures/MessageProcessing/ChainStorage/src/main/java/info/smart_tools/smartactors/message_processing/chain_storage/ChainStorage.java"}, "focal_method": {"identifier": "resolve", "parameters": "(final Object chainId)", "modifiers": "@Override public", "return": "IReceiverChain", "body": "@Override\n    public IReceiverChain resolve(final Object chainId)\n            throws ChainNotFoundException {\n        return resolveState(chainId).getCurrent();\n    }", "signature": "IReceiverChain resolve(final Object chainId)", "full_signature": "@Override public IReceiverChain resolve(final Object chainId)", "class_method_signature": "ChainStorage.resolve(final Object chainId)", "testcase": false, "constructor": false, "invocations": ["getCurrent", "resolveState"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}